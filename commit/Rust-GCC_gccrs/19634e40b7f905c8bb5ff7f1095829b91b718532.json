{"sha": "19634e40b7f905c8bb5ff7f1095829b91b718532", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2MzRlNDBiN2Y5MDVjOGJiNWZmN2YxMDk1ODI5YjkxYjcxODUzMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-06-13T10:04:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:04:27Z"}, "message": "debug.adb: Document debug flag -gnatd.1.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* debug.adb: Document debug flag -gnatd.1.\n\t* layout.adb (Layout_Type): Size change for anonymous access\n\ttypes under -gnatd.1.\n\t* sem_ch3.adb (Replace_Type): Size change for anonymous access\n\ttypes under -gnatd.1.\n\nFrom-SVN: r211619", "tree": {"sha": "9487715cc423d4e6a6b9b2ebeb0ea19ca404b7c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9487715cc423d4e6a6b9b2ebeb0ea19ca404b7c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19634e40b7f905c8bb5ff7f1095829b91b718532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19634e40b7f905c8bb5ff7f1095829b91b718532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19634e40b7f905c8bb5ff7f1095829b91b718532", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19634e40b7f905c8bb5ff7f1095829b91b718532/comments", "author": null, "committer": null, "parents": [{"sha": "446ebdbbd062cec9a8db76dcd5882683268d00a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446ebdbbd062cec9a8db76dcd5882683268d00a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/446ebdbbd062cec9a8db76dcd5882683268d00a8"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "2065ccce8a24b624c496bd2dccdbe0a67c15ef46", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=19634e40b7f905c8bb5ff7f1095829b91b718532", "patch": "@@ -1,3 +1,11 @@\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb: Document debug flag -gnatd.1.\n+\t* layout.adb (Layout_Type): Size change for anonymous access\n+\ttypes under -gnatd.1.\n+\t* sem_ch3.adb (Replace_Type): Size change for anonymous access\n+\ttypes under -gnatd.1.\n+\n 2014-06-13  Robert Dewar  <dewar@adacore.com>\n \n \t* layout.adb (Layout_Type): Anonymous access types designating"}, {"sha": "4e62365c591c7542fc8e7698b194c1569cf7b0de", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=19634e40b7f905c8bb5ff7f1095829b91b718532", "patch": "@@ -155,7 +155,7 @@ package body Debug is\n    --  d8   Force opposite endianness in packed stuff\n    --  d9   Allow lock free implementation\n \n-   --  d.1\n+   --  d.1  Disable fix to make anonymous access types thin\n    --  d.2\n    --  d.3\n    --  d.4\n@@ -733,6 +733,12 @@ package body Debug is\n    --  d9   This allows lock free implementation for protected objects\n    --       (see Exp_Ch9).\n \n+   --  d.1  There is a problem with making anonymous access types which refer\n+   --       to an unconstrained array thick. And we have a fix, which is to\n+   --       make them thin always. Search for Debug_Flag_Dot_1 in layout.adb\n+   --       and sem_ch3.adb to see the explanation for why we don't enable this\n+   --       fix for now unless this debug flag is set.\n+\n    ------------------------------------------\n    -- Documentation for Binder Debug Flags --\n    ------------------------------------------"}, {"sha": "7b0cdc5383ee7df4652c325d23af24d96ffd0775", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=19634e40b7f905c8bb5ff7f1095829b91b718532", "patch": "@@ -2466,7 +2466,13 @@ package body Layout is\n          --  into strange conformance problems between two types, one of which\n          --  can see that something is unconstrained and one of which cannot.\n \n-         elsif Ekind (E) = E_Anonymous_Access_Type then\n+         elsif Ekind (E) = E_Anonymous_Access_Type\n+\n+           --  For now eneable this only if debug flag -gnatd.1 is set, since\n+           --  we have some regressions in gnatcoll that need sorting out???\n+\n+           and then Debug_Flag_Dot_1\n+         then\n             Init_Size (E, System_Address_Size);\n \n          --  For other access types, we use either address size, or, if a fat"}, {"sha": "03e91543c281b4a2249206bedb64b0f6b0a1d9ac", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19634e40b7f905c8bb5ff7f1095829b91b718532/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=19634e40b7f905c8bb5ff7f1095829b91b718532", "patch": "@@ -13576,7 +13576,26 @@ package body Sem_Ch3 is\n                   --  case we can't see it yet (full type declaration not seen\n                   --  yet), so we default to thin in that case anyway.\n \n-                  Init_Size (Acc_Type, System_Address_Size);\n+                  --  For now, for the access to unconstrained array scase, we\n+                  --  are making the above change only if debug flag -gnatd.1\n+                  --  is set. That's because the change, though almost\n+                  --  certainly correct, is causing gnatcoll regressions\n+                  --  which we have to sort out ???\n+\n+                  if Is_Array_Type (Desig_Typ)\n+                    and then not Is_Constrained (Desig_Typ)\n+                    and then not Debug_Flag_Dot_1\n+                  then\n+                     Init_Size (Acc_Type, 2 * System_Address_Size);\n+\n+                  --  Normal case. This is what we intend to do always when we\n+                  --  finally install the change discussed above. In the case\n+                  --  of access to unconstrained array, then we take this path\n+                  --  for now only if -gnatd.1 debug flag is set.\n+\n+                  else\n+                     Init_Size (Acc_Type, System_Address_Size);\n+                  end if;\n \n                   --  Set remaining characterstics of anonymous access type\n "}]}