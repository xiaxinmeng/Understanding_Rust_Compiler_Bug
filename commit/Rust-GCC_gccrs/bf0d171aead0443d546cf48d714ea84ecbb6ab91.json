{"sha": "bf0d171aead0443d546cf48d714ea84ecbb6ab91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYwZDE3MWFlYWQwNDQzZDU0NmNmNDhkNzE0ZWE4NGVjYmI2YWI5MQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-03-31T20:03:23Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-03-31T20:03:23Z"}, "message": "re PR fortran/38915 (wrong results for structure assignment of character components when left and right sides overlap)\n\n2009-03-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38915\n\t* trans-expr.c (gfc_trans_assignment_1): Ensure temporaries\n\thave a string_length.\n\n2009-03-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38915\n\t* gfortran.dg/char_length_15.f90: New test.\n\nFrom-SVN: r145370", "tree": {"sha": "f9137ff38dfef4f8d462e92348dbae3950b9f0b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9137ff38dfef4f8d462e92348dbae3950b9f0b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf0d171aead0443d546cf48d714ea84ecbb6ab91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0d171aead0443d546cf48d714ea84ecbb6ab91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0d171aead0443d546cf48d714ea84ecbb6ab91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0d171aead0443d546cf48d714ea84ecbb6ab91/comments", "author": null, "committer": null, "parents": [{"sha": "fba1b95f239ccead8ac1373c61a77e660efaa650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba1b95f239ccead8ac1373c61a77e660efaa650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba1b95f239ccead8ac1373c61a77e660efaa650"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "ef6d2b535fd190b9a8b215840df381f4e9c91ee5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bf0d171aead0443d546cf48d714ea84ecbb6ab91", "patch": "@@ -137,6 +137,12 @@\n \tAdd 2009 to copyright years.\n \t* trans.c (gfc_trans_code): Likewise on both counts.\n \n+2009-03-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/38915\n+\t* trans-expr.c (gfc_trans_assignment_1): Ensure temporaries\n+\thave a string_length.\n+\n 2009-03-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34656"}, {"sha": "dcbccefcaea039f30885fe97130849a230bcb13c", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=bf0d171aead0443d546cf48d714ea84ecbb6ab91", "patch": "@@ -4585,6 +4585,7 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n   stmtblock_t body;\n   bool l_is_temp;\n   bool scalar_to_array;\n+  tree string_length;\n \n   /* Assignment of the form lhs = rhs.  */\n   gfc_start_block (&block);\n@@ -4660,10 +4661,18 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n   /* Translate the expression.  */\n   gfc_conv_expr (&rse, expr2);\n \n+  /* Stabilize a string length for temporaries.  */\n+  if (expr2->ts.type == BT_CHARACTER)\n+    string_length = gfc_evaluate_now (rse.string_length, &rse.pre);\n+  else\n+    string_length = NULL_TREE;\n+\n   if (l_is_temp)\n     {\n       gfc_conv_tmp_array_ref (&lse);\n       gfc_advance_se_ss_chain (&lse);\n+      if (expr2->ts.type == BT_CHARACTER)\n+\tlse.string_length = string_length;\n     }\n   else\n     gfc_conv_expr (&lse, expr1);\n@@ -4718,6 +4727,9 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n \t  gcc_assert (lse.ss == gfc_ss_terminator\n \t\t      && rse.ss == gfc_ss_terminator);\n \n+\t  if (expr2->ts.type == BT_CHARACTER)\n+\t    rse.string_length = string_length;\n+\n \t  tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts,\n \t\t\t\t\t false, false);\n \t  gfc_add_expr_to_block (&body, tmp);"}, {"sha": "e2f3a2a88a7c7e9baaea021c8dcc46ea53f3dfe8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf0d171aead0443d546cf48d714ea84ecbb6ab91", "patch": "@@ -1,3 +1,8 @@\n+2009-03-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/38915\n+\t* gfortran.dg/char_length_15.f90: New test.\n+\n 2009-03-31  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/other/typedef2.C: New test."}, {"sha": "700da0eb1755e44abe551b719de29c3c79315bf2", "filename": "gcc/testsuite/gfortran.dg/char_length_15.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d171aead0443d546cf48d714ea84ecbb6ab91/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_15.f90?ref=bf0d171aead0443d546cf48d714ea84ecbb6ab91", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR38915 in which the character length of the\n+! temporaries produced in the assignments marked below was set to\n+! one.\n+!\n+! Contributed by Dick Hendrickson <dick.hendrickson@gmail.com>\n+!\n+program cg0033_41\n+  type t\n+    sequence\n+    integer i\n+    character(len=9) c\n+  end type t\n+  type (t)  L(3),R(3), LL(4), RR(4)\n+  EQUIVALENCE (L,LL)\n+  integer nfv1(3), nfv2(3)\n+  R(1)%c = '123456789'\n+  R(2)%c = 'abcdefghi'\n+  R(3)%c = '!@#$%^&*('\n+  L%c = R%c\n+  LL(1:3)%c = R%c\n+  LL(4)%c = 'QWERTYUIO'\n+  RR%c = LL%c            ! The equivalence forces a dependency\n+  L%c = LL(2:4)%c\n+  if (any (RR(2:4)%c .ne. L%c)) call abort\n+  nfv1 = (/1,2,3/)\n+  nfv2 = nfv1\n+  L%c = R%c\n+  L(nfv1)%c = L(nfv2)%c  ! The vector indices force a dependency\n+  if (any (R%c .ne. L%c)) call abort\n+end\n+"}]}