{"sha": "7abd8a7e1f4e4197547583147f097c4e363cc562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiZDhhN2UxZjRlNDE5NzU0NzU4MzE0N2YwOTdjNGUzNjNjYzU2Mg==", "commit": {"author": {"name": "David Gilbert", "email": "david.gilbert@object-refinery.com", "date": "2005-02-24T07:15:55Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-24T07:15:55Z"}, "message": "TextAttribute.java: changed names to lower case;\n\n2005-02-24  David Gilbert  <david.gilbert@object-refinery.com>\n\n\t* java/awt/font/TextAttribute.java: changed names to lower case;\n\t(readResolve): implemented.\n\tAdded doc comments all over.\n\nFrom-SVN: r95491", "tree": {"sha": "7dde3d4e9b268c1900122422e53cc91e97e94f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dde3d4e9b268c1900122422e53cc91e97e94f6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abd8a7e1f4e4197547583147f097c4e363cc562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abd8a7e1f4e4197547583147f097c4e363cc562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abd8a7e1f4e4197547583147f097c4e363cc562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abd8a7e1f4e4197547583147f097c4e363cc562/comments", "author": {"login": "jfree", "id": 1835893, "node_id": "MDQ6VXNlcjE4MzU4OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1835893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfree", "html_url": "https://github.com/jfree", "followers_url": "https://api.github.com/users/jfree/followers", "following_url": "https://api.github.com/users/jfree/following{/other_user}", "gists_url": "https://api.github.com/users/jfree/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfree/subscriptions", "organizations_url": "https://api.github.com/users/jfree/orgs", "repos_url": "https://api.github.com/users/jfree/repos", "events_url": "https://api.github.com/users/jfree/events{/privacy}", "received_events_url": "https://api.github.com/users/jfree/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ceb02beedb77918557c665668eb966e4c21d9a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ceb02beedb77918557c665668eb966e4c21d9a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ceb02beedb77918557c665668eb966e4c21d9a2"}], "stats": {"total": 306, "additions": 249, "deletions": 57}, "files": [{"sha": "c6b5ef98e1620cc11a33703d6ce9e44c85adc76d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abd8a7e1f4e4197547583147f097c4e363cc562/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abd8a7e1f4e4197547583147f097c4e363cc562/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7abd8a7e1f4e4197547583147f097c4e363cc562", "patch": "@@ -1,3 +1,9 @@\n+2005-02-24  David Gilbert  <david.gilbert@object-refinery.com>\n+\n+\t* java/awt/font/TextAttribute.java: changed names to lower case;\n+\t(readResolve): implemented.\n+\tAdded doc comments all over.\n+\n 2005-02-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \tPR libgcj/16923"}, {"sha": "e63d2955e5636414537f277adce9e60bd389215e", "filename": "libjava/java/awt/font/TextAttribute.java", "status": "modified", "additions": 243, "deletions": 57, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abd8a7e1f4e4197547583147f097c4e363cc562/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abd8a7e1f4e4197547583147f097c4e363cc562/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java?ref=7abd8a7e1f4e4197547583147f097c4e363cc562", "patch": "@@ -1,5 +1,5 @@\n /* TextAttribute.java --\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,83 +41,269 @@\n import java.io.InvalidObjectException;\n import java.text.AttributedCharacterIterator;\n \n+/**\n+ * Attributes (and associated values) that can be used to define an\n+ * {@link java.text.AttributedString}.\n+ */\n public final class TextAttribute extends AttributedCharacterIterator.Attribute\n {\n   private static final long serialVersionUID = 7744112784117861702L;\n   \n+  /** A key for the background paint attribute. */\n   public static final TextAttribute BACKGROUND =\n-    new TextAttribute (\"BACKGROUND\");\n+    new TextAttribute(\"background\");\n+  \n+  /** A key for the BIDI_EMBEDDING attribute. */\n   public static final TextAttribute BIDI_EMBEDDING =\n-    new TextAttribute (\"BIDI_EMBEDDING\");\n+    new TextAttribute(\"bidi_embedding\");\n+  \n+  /** A key for the CHAR_REPLACEMENT attribute. */\n   public static final TextAttribute CHAR_REPLACEMENT =\n-    new TextAttribute (\"CHAR_REPLACEMENT\");\n-  public static final TextAttribute FAMILY = new TextAttribute (\"FAMILY\");\n-  public static final TextAttribute FONT = new TextAttribute (\"FONT\");\n-  public static final TextAttribute FOREGROUND =\n-    new TextAttribute (\"FOREGROUND\");\n+    new TextAttribute(\"char_replacement\");\n+  \n+  /** A key for the FAMILY attribute. */\n+  public static final TextAttribute FAMILY = new TextAttribute(\"family\");\n+  \n+  /** A key for the font attribute. */\n+  public static final TextAttribute FONT = new TextAttribute(\"font\");\n+  \n+  /** A key for the foreground paint attribute. */\n+  public static final TextAttribute FOREGROUND = \n+    new TextAttribute(\"foreground\");\n+  \n+  /** A key for the INPUT_METHOD_HIGHLIGHT attribute. */\n   public static final TextAttribute INPUT_METHOD_HIGHLIGHT =\n-    new TextAttribute (\"INPUT_METHOD_HIGHLIGHT\");\n+    new TextAttribute(\"input method highlight\");\n+  \n+  /** A key for the INPUT_METHOD_UNDERLINE attribute. */\n   public static final TextAttribute INPUT_METHOD_UNDERLINE =\n-    new TextAttribute (\"INPUT_METHOD_UNDERLINE\");\n+    new TextAttribute(\"input method underline\");\n+  \n+  /** A key for the text justification attribute. */\n   public static final TextAttribute JUSTIFICATION =\n-    new TextAttribute (\"JUSTIFICATION\");\n-  public static final Float JUSTIFICATION_FULL = new Float (1.0);\n-  public static final Float JUSTIFICATION_NONE = new Float (0.0);\n+    new TextAttribute(\"justification\");\n+  \n+  /** \n+   * A value that can be used with the {@link #JUSTIFICATION} attribute to\n+   * indicate full justification of the text. \n+   */\n+  public static final Float JUSTIFICATION_FULL = new Float(1.0);\n+  \n+  /** \n+   * A value that can be used with the {@link #JUSTIFICATION} attribute to\n+   * indicate no justification of the text. \n+   */\n+  public static final Float JUSTIFICATION_NONE = new Float(0.0);\n+  \n+  /** A key for the NUMERIC_SHAPING attribute. */\n   public static final TextAttribute NUMERIC_SHAPING =\n-    new TextAttribute (\"NUMERIC_SHAPING\");\n-  public static final TextAttribute POSTURE = new TextAttribute (\"POSTURE\");\n-  public static final Float POSTURE_OBLIQUE = new Float (0.2);\n-  public static final Float POSTURE_REGULAR = new Float (0.0);\n+    new TextAttribute(\"numeric_shaping\");\n+  \n+  /** A key for the POSTURE attribute. */\n+  public static final TextAttribute POSTURE = new TextAttribute(\"posture\");\n+  \n+  /** A value that can be used with the {@link #POSTURE} attribute. */\n+  public static final Float POSTURE_OBLIQUE = new Float(0.2);\n+  \n+  /** A value that can be used with the {@link #POSTURE} attribute. */\n+  public static final Float POSTURE_REGULAR = new Float(0.0);\n+  \n+  /** A key for the RUN_DIRECTION attribute. */\n   public static final TextAttribute RUN_DIRECTION =\n-    new TextAttribute (\"RUN_DIRECTION\");\n-  public static final Boolean RUN_DIRECTION_LTR = Boolean.TRUE;\n-  public static final Boolean RUN_DIRECTION_RTL = Boolean.FALSE;\n-  public static final TextAttribute SIZE = new TextAttribute (\"SIZE\");\n+    new TextAttribute(\"run_direction\");\n+  \n+  /** A value that can be used with the {@link #RUN_DIRECTION} attribute. */\n+  public static final Boolean RUN_DIRECTION_LTR = Boolean.FALSE;\n+  \n+  /** A value that can be used with the {@link #RUN_DIRECTION} attribute. */\n+  public static final Boolean RUN_DIRECTION_RTL = Boolean.TRUE;\n+  \n+  /** A key for the text size attribute. */\n+  public static final TextAttribute SIZE = new TextAttribute(\"size\");\n+  \n+  /** A key for the STRIKETHROUGH attribute. */\n   public static final TextAttribute STRIKETHROUGH =\n-    new TextAttribute (\"STRIKETHROUGH\");\n+    new TextAttribute(\"strikethrough\");\n+  \n+  /** A value that can be used with the {@link #STRIKETHROUGH} attribute. */\n   public static final Boolean STRIKETHROUGH_ON = Boolean.TRUE;\n+  \n+  /** A key for the SUPERSCRIPT attribute. */\n   public static final TextAttribute SUPERSCRIPT =\n-    new TextAttribute (\"SUPERSCRIPT\");\n-  public static final Integer SUPERSCRIPT_SUB = new Integer (-1);\n-  public static final Integer SUPERSCRIPT_SUPER = new Integer (1);\n+    new TextAttribute(\"superscript\");\n+  \n+  /** A value that can be used with the {@link #SUPERSCRIPT} attribute. */\n+  public static final Integer SUPERSCRIPT_SUB = new Integer(-1);\n+  \n+  /** A value that can be used with the {@link #SUPERSCRIPT} attribute. */\n+  public static final Integer SUPERSCRIPT_SUPER = new Integer(1);\n+  \n+  /** A key for the SWAP_COLORS attribute. */\n   public static final TextAttribute SWAP_COLORS =\n-    new TextAttribute (\"SWAP_COLORS\");\n+    new TextAttribute(\"swap_colors\");\n+  \n+  /** A value that can be used with the {@link #SWAP_COLORS} attribute. */\n   public static final Boolean SWAP_COLORS_ON = Boolean.TRUE;\n-  public static final TextAttribute TRANSFORM = new TextAttribute (\"TRANSFORM\");\n-  public static final TextAttribute UNDERLINE = new TextAttribute (\"UNDERLINE\");\n-  public static final Integer UNDERLINE_LOW_DASHED = new Integer (0);\n-  public static final Integer UNDERLINE_LOW_DOTTED = new Integer (0);\n-  public static final Integer UNDERLINE_LOW_GRAY = new Integer (0);\n-  public static final Integer UNDERLINE_LOW_ONE_PIXEL = new Integer (0);\n-  public static final Integer UNDERLINE_LOW_TWO_PIXEL = new Integer (0);\n-  public static final Integer UNDERLINE_ON = new Integer (0);\n-  public static final TextAttribute WEIGHT = new TextAttribute (\"WEIGHT\");\n-  public static final Float WEIGHT_BOLD = new Float (2.0);\n-  public static final Float WEIGHT_DEMIBOLD = new Float (1.75);\n-  public static final Float WEIGHT_DEMILIGHT = new Float (0.875);\n-  public static final Float WEIGHT_EXTRA_LIGHT = new Float (0.5);\n-  public static final Float WEIGHT_EXTRABOLD = new Float (2.5);\n-  public static final Float WEIGHT_HEAVY = new Float (2.25);\n-  public static final Float WEIGHT_LIGHT = new Float (0.75);\n-  public static final Float WEIGHT_MEDIUM = new Float (1.5);\n-  public static final Float WEIGHT_REGULAR = new Float (1.0);\n-  public static final Float WEIGHT_SEMIBOLD = new Float (1.25);\n-  public static final Float WEIGHT_ULTRABOLD = new Float (2.75);\n-  public static final TextAttribute WIDTH = new TextAttribute (\"\");\n-  public static final Float WIDTH_CONDENSED = new Float (0.75);\n-  public static final Float WIDTH_EXTENDED = new Float (1.5);\n-  public static final Float WIDTH_REGULAR = new Float (1.0);\n-  public static final Float WIDTH_SEMI_CONDENSED = new Float (0.875);\n-  public static final Float WIDTH_SEMI_EXTENDED = new Float (1.25);\n-             \n-  protected TextAttribute (String name)\n+  \n+  /** A key for the TRANFORM attribute. */\n+  public static final TextAttribute TRANSFORM = new TextAttribute(\"transform\");\n+  \n+  /** A key for the UNDERLINE attribute. */\n+  public static final TextAttribute UNDERLINE = new TextAttribute(\"underline\");\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_LOW_DASHED = new Integer(5);\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_LOW_DOTTED = new Integer(3);\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_LOW_GRAY = new Integer(4);\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_LOW_ONE_PIXEL = new Integer(1);\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_LOW_TWO_PIXEL = new Integer(2);\n+  \n+  /** A value that can be used with the {@link #UNDERLINE} attribute. */\n+  public static final Integer UNDERLINE_ON = new Integer(0);\n+  \n+  /** A key for the WEIGHT attribute. */\n+  public static final TextAttribute WEIGHT = new TextAttribute(\"weight\");\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_BOLD = new Float(2.0);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_DEMIBOLD = new Float(1.75);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_DEMILIGHT = new Float(0.875);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_EXTRA_LIGHT = new Float(0.5);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_EXTRABOLD = new Float(2.5);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_HEAVY = new Float(2.25);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_LIGHT = new Float(0.75);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_MEDIUM = new Float(1.5);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_REGULAR = new Float(1.0);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_SEMIBOLD = new Float(1.25);\n+  \n+  /** A value that can be used with the {@link #WEIGHT} attribute. */\n+  public static final Float WEIGHT_ULTRABOLD = new Float(2.75);\n+  \n+  /** A key for the WIDTH attribute. */\n+  public static final TextAttribute WIDTH = new TextAttribute(\"width\");\n+  \n+  /** A value that can be used with the {@link #WIDTH} attribute. */\n+  public static final Float WIDTH_CONDENSED = new Float(0.75);\n+  \n+  /** A value that can be used with the {@link #WIDTH} attribute. */\n+  public static final Float WIDTH_EXTENDED = new Float(1.5);\n+  \n+  /** A value that can be used with the {@link #WIDTH} attribute. */\n+  public static final Float WIDTH_REGULAR = new Float(1.0);\n+  \n+  /** A value that can be used with the {@link #WIDTH} attribute. */\n+  public static final Float WIDTH_SEMI_CONDENSED = new Float(0.875);\n+  \n+  /** A value that can be used with the {@link #WIDTH} attribute. */\n+  public static final Float WIDTH_SEMI_EXTENDED = new Float(1.25);\n+          \n+  /**\n+   * Creates a new attribute.\n+   * \n+   * @param name  the name.\n+   */\n+  protected TextAttribute(String name)\n   {\n-    super (name);\n+    super(name);\n   }\n   \n-  protected Object readResolve ()\n+  /**\n+   * After deserialization, this method ensures that only one instance of\n+   * each attribute is used.\n+   * \n+   * @return The (single) attribute instance.\n+   * \n+   * @throws InvalidObjectException if the attribute is not recognised.\n+   */\n+  protected Object readResolve()\n     throws InvalidObjectException\n   {\n-    throw new Error (\"not implemented\");\n+    if (this.getName().equals(\"background\"))\n+      return BACKGROUND;\n+\n+    if (this.getName().equals(\"bidi_embedding\"))\n+      return BIDI_EMBEDDING;\n+\n+    if (this.getName().equals(\"char_replacement\"))\n+      return CHAR_REPLACEMENT;\n+\n+    if (this.getName().equals(\"family\"))\n+      return FAMILY;\n+\n+    if (this.getName().equals(\"font\"))\n+      return FONT;\n+\n+    if (this.getName().equals(\"foreground\"))\n+      return FOREGROUND;\n+\n+    if (this.getName().equals(\"input method highlight\"))\n+      return INPUT_METHOD_HIGHLIGHT;\n+\n+    if (this.getName().equals(\"input method underline\"))\n+      return INPUT_METHOD_UNDERLINE;\n+\n+    if (this.getName().equals(\"justification\"))\n+      return JUSTIFICATION;\n+\n+    if (this.getName().equals(\"numeric_shaping\"))\n+      return NUMERIC_SHAPING;\n+\n+    if (this.getName().equals(\"posture\"))\n+      return POSTURE;\n+\n+    if (this.getName().equals(\"run_direction\"))\n+      return RUN_DIRECTION;\n+\n+    if (this.getName().equals(\"size\"))\n+      return SIZE;\n+\n+    if (this.getName().equals(\"strikethrough\"))\n+      return STRIKETHROUGH;\n+\n+    if (this.getName().equals(\"superscript\"))\n+      return SUPERSCRIPT;\n+\n+    if (this.getName().equals(\"swap_colors\"))\n+      return SWAP_COLORS;\n+\n+    if (this.getName().equals(\"transform\"))\n+      return TRANSFORM;\n+\n+    if (this.getName().equals(\"underline\"))\n+      return UNDERLINE;\n+\n+    if (this.getName().equals(\"weight\"))\n+      return WEIGHT;\n+\n+    if (this.getName().equals(\"width\"))\n+      return WIDTH;\n+\n+    throw new InvalidObjectException(\"Can't resolve Attribute: \" + getName());\n   }\n }"}]}