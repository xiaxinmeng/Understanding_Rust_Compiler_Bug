{"sha": "8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU5YmY1NWUxOWIwYmFiMTY3YTg2ZTU3NzU3NjUxYTRiMGRlOGU5Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-10T23:37:23Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-10T23:37:23Z"}, "message": "Makefile.in (libgcc.a, [...]): Depend on FPBIT and DPBIT.\n\n        * Makefile.in (libgcc.a, stmp-multilib): Depend on FPBIT and DPBIT.\n        * mklibgcc.in: Rewrite to not use functions.  Don't shortcut\n        dependancies on FPBIT and DPBIT.\n\nFrom-SVN: r33834", "tree": {"sha": "9ab526a2a506b439796c175ea3fdd1dc51ce6a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ab526a2a506b439796c175ea3fdd1dc51ce6a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/comments", "author": null, "committer": null, "parents": [{"sha": "ebfe71a8d1c7d4616e47d9de620d709499213322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfe71a8d1c7d4616e47d9de620d709499213322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebfe71a8d1c7d4616e47d9de620d709499213322"}], "stats": {"total": 131, "additions": 60, "deletions": 71}, "files": [{"sha": "f133e5fe633cc3bff25c7ab88b2db25c70fbc700", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "patch": "@@ -1,3 +1,9 @@\n+2000-05-10  Richard Henderson  <rth@cygnus.com>\n+\n+\t* Makefile.in (libgcc.a, stmp-multilib): Depend on FPBIT and DPBIT.\n+\t* mklibgcc.in: Rewrite to not use functions.  Don't shortcut\n+\tdependancies on FPBIT and DPBIT.\n+\n 2000-05-10  Nick Clifton  <nickc@redhat.com>\n \n \t* flow.c (find_auto_inc): Do not bias REG_N_REFS by loop_depth"}, {"sha": "0ad11fb118d879f77cc8707723c8b13d717cfbb9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "patch": "@@ -972,7 +972,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD)\n \t  $(SHELL) mklibgcc > tmp-libgcc.mk\n \t$(SHELL) $(srcdir)/move-if-change tmp-libgcc.mk libgcc.mk\n \n-libgcc.a: libgcc2.ready libgcc.mk\n+libgcc.a: libgcc2.ready libgcc.mk $(FPBIT) $(DPBIT)\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n@@ -1003,7 +1003,7 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \ttouch s-mlib\n \n # Build multiple copies of libgcc.a, one for each target switch.\n-stmp-multilib: libgcc2.ready libgcc.mk\n+stmp-multilib: libgcc2.ready libgcc.mk $(FPBIT) $(DPBIT)\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\"}, {"sha": "0b6c2d4418076760c2d53f2e848696b21e47ee41", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 52, "deletions": 69, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9bf55e19b0bab167a86e57757651a4b0de8e9c/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "patch": "@@ -47,57 +47,19 @@ EOF\n fi\n \n \n-#\n-# Utility functions\n-#\n-\n-emit_gcc_compile() {\n-  dst=$1; shift\n-  src=$1; shift\n-  flags=$*\n-\n-  echo '\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES)' \\\n-    $flags -c $src -o $dst\n-}\n-\n-emit_oldcc_compile() {\n-  dst=$1; shift\n-  src=$1; shift\n-  flags=$*\n-\n-  if [ -z \"@NO_MINUS_C_MINUS_O@\" ]; then\n-    echo '\t$(OLDCC) -DIN_LIBGCC1 $(CCLIBFLAGS) $(INCLUDES)' \\\n-      $flags -c $src -o $dst\n-  else\n-    echo '\t$(OLDCC) -DIN_LIBGCC1 $(CCLIBFLAGS) $(INCLUDES)'\n-      $flags -c $src\n-    tmp=`echo $src | sed -e 's/[.]c$/'${objext}/ -e 's,.*/,,'`\n-    echo \"\tmv $tmp $dst\"\n-  fi\n-}\n-\n-emit_make_compile() {\n-  dst=$1; shift\n-  tgt=$1; shift\n-  tmp=\"\";\n-  if [ \"$1\" = \"T=t\" ]; then\n-    tmp=\"T=t\"; tgt=\"t$tgt\"; shift\n-  fi\n-  flags=$*\n-\n-  echo '\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\"' \\\\\n-  echo '\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\"' \\\\\n-  echo '\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\"' \\\\\n-  echo '\t  AR_EXTRACT_FOR_TARGET=\"$(AR_EXTRACT_FOR_TARGET)\"' \\\\\n-  echo '\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\"' \\\\\n-  echo '\t  CC=\"$(CC)\" CFLAGS=\"$(CFLAGS)\"' \\\\\n-  echo '\t  HOST_PREFIX=\"$(HOST_PREFIX)\"' \\\\\n-  echo '\t  HOST_PREFIX_1=\"$(HOST_PREFIX_1)\"' \\\\\n-  echo '\t  LANGUAGES=\"$(LANGUAGES)\"' \\\\\n-  echo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n-  echo '\t  MULTILIB_CFLAGS=\"'$flags'\"' $tmp $tgt\n-  echo \"\tmv ${tgt} ${dst}\"\n-}\n+# Build lines.\n+\n+gcc_compile='$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES)'\n+oldcc_compile='$(OLDCC) -DIN_LIBGCC1 $(CCLIBFLAGS) $(INCLUDES)'\n+make_compile='$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n+\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n+\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n+\t  AR_EXTRACT_FOR_TARGET=\"$(AR_EXTRACT_FOR_TARGET)\" \\\n+\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n+\t  CC=\"$(CC)\" CFLAGS=\"$(CFLAGS)\" \\\n+\t  HOST_PREFIX=\"$(HOST_PREFIX)\" \\\n+\t  HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n+\t  LANGUAGES=\"$(LANGUAGES)\"'\n \n # Dependancies for libgcc1.c\n libgcc1_c_dep='$(srcdir)/libgcc1.c $(CONFIG_H)'\n@@ -106,7 +68,7 @@ libgcc1_c_dep='$(srcdir)/libgcc1.c $(CONFIG_H)'\n libgcc2_c_dep='$(srcdir)/libgcc2.c $(CONFIG_H) $(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status stmp-int-hdrs tsystem.h'\n \n # Dependancies for fp-bit.c\n-fpbit_c_dep='$(srcdir)/config/fp-bit.c config.status tsystem.h'\n+fpbit_c_dep='config.status tsystem.h'\n \n #\n # Build libgcc1 components.\n@@ -130,8 +92,8 @@ case X\"$LIBGCC1\" in\n         out=\"libgcc/${dir}/${name}${objext}\"\n \n         echo ${out}: '$(srcdir)/config/$(LIB1ASMSRC)'\n-        emit_gcc_compile $out '$(srcdir)/config/$(LIB1ASMSRC)' \\\n-\t  $flags -DL$name -xassembler-with-cpp\n+\techo \"\t$gcc_compile\" $flags -DL$name -xassembler-with-cpp \\\n+\t  -c '$(srcdir)/config/$(LIB1ASMSRC)' -o $out\n       done\n       libgcc1_objs=\"$libgcc1_objs ${name}${objext}\"\n     done\n@@ -142,7 +104,14 @@ case X\"$LIBGCC1\" in\n       out=\"libgcc/${name}${objext}\"\n \n       echo $out: $libgcc1_c_dep\n-      emit_oldcc_compile $out '$(srcdir)/libgcc1.c' -DL${name}\n+      if [ -z \"@NO_MINUS_C_MINUS_O@\" ]; then\n+\techo \"\t$oldcc_compile\" $flags -c $src -o $dst\n+      else\n+\techo \"\t$oldcc_compile\" $flags -c $src\n+\ttmp=`echo $src | sed -e 's/[.]c$/'${objext}/ -e 's,.*/,,'`\n+\techo \"\tmv $tmp $dst\"\n+      fi\n+\n       libgcc1_objs=\"$libgcc1_objs ${name}${objext}\"\n     done\n \n@@ -155,7 +124,15 @@ case X\"$LIBGCC1\" in\n         echo \"\tcp $file ${name}.s\"\n         file=${name}.s\n       fi\n-      emit_oldcc_compile $out $file\n+\n+      if [ -z \"@NO_MINUS_C_MINUS_O@\" ]; then\n+\techo \"\t$oldcc_compile\" -c $file -o $out\n+      else\n+\techo \"\t$oldcc_compile\" -c $file\n+\ttmp=`echo $src | sed -e 's/[.][cs]$/'${objext}/ -e 's,.*/,,'`\n+\techo \"\tmv $tmp $dst\"\n+      fi\n+\n       libgcc1_objs=\"$libgcc1_objs ${name}${objext}\"\n     done\n     ;;\n@@ -178,8 +155,8 @@ for name in $LIB2FUNCS; do\n     out=\"libgcc/${dir}/${name}${objext}\"\n \n     echo $out: $libgcc2_c_dep\n-    emit_gcc_compile $out '$(srcdir)/libgcc2.c' '$(MAYBE_USE_COLLECT2)' \\\n-      $flags -DL$name\n+    echo \"\t$gcc_compile\" '$(MAYBE_USE_COLLECT2)' $flags -DL$name \\\n+      -c '$(srcdir)/libgcc2.c' -o $out\n   done\n   libgcc2_objs=\"$libgcc2_objs ${name}${objext}\"\n done\n@@ -191,8 +168,8 @@ for name in $LIB2FUNCS_EH; do\n     out=\"libgcc/${dir}/${name}${objext}\"\n \n     echo $out: $libgcc2_c_dep\n-    emit_gcc_compile $out '$(srcdir)/libgcc2.c' '$(MAYBE_USE_COLLECT2)' \\\n-      -fexceptions $flags -DL$name\n+    echo \"\t$gcc_compile\" '$(MAYBE_USE_COLLECT2)' -fexceptions \\\n+      $flags -DL$name -c '$(srcdir)/libgcc2.c' -o $out\n   done\n   libgcc2_objs=\"$libgcc2_objs ${name}${objext}\"\n done\n@@ -204,9 +181,9 @@ if [ \"$FPBIT\" ]; then\n       flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n       out=\"libgcc/${dir}/${name}${objext}\"\n \n-      echo $out: $fpbit_c_dep\n-      emit_gcc_compile $out '$(srcdir)/config/fp-bit.c' \\\n-\t-DFLOAT -DFINE_GRAINED_LIBRARIES $flags -DL$name\n+      echo $out: $FPBIT $fpbit_c_dep\n+      echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n+\t-c $FPBIT -o $out\n     done\n     libgcc2_objs=\"$libgcc2_objs ${name}${objext}\"\n   done\n@@ -219,9 +196,9 @@ if [ \"$DPBIT\" ]; then\n       flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n       out=\"libgcc/${dir}/${name}${objext}\"\n \n-      echo $out: $fpbit_c_dep\n-      emit_gcc_compile $out '$(srcdir)/config/fp-bit.c' \\\n-\t-DFINE_GRAINED_LIBRARIES $flags -DL$name\n+      echo $out: $DPBIT $fpbit_c_dep\n+      echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n+\t-c $DPBIT -o $out\n     done\n     libgcc2_objs=\"$libgcc2_objs ${name}${objext}\"\n   done\n@@ -245,7 +222,10 @@ for file in $LIB2ADD; do\n \t# target file.  This because ./$f is used as a temporary in\n \t# each case before being moved to libgcc/$dir/.\n \techo $out: $lastout\n-\temit_make_compile $out $f $flags\n+\techo \"\t$make_compile\" \\\\\n+\techo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n+\techo '\t  MULTILIB_CFLAGS=\"'$flags'\"' $f\n+\techo \"\tmv $f $out\"\n \n \tlastout=\"$out\"\n       done\n@@ -262,7 +242,7 @@ for file in $LIB2ADD; do\n       fi\n \n       echo $out: $file\n-      emit_gcc_compile $out $file $flags\n+      echo \"\t$gcc_compile\" $flags -c $file -o $out\n     done\n     libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n   fi\n@@ -319,7 +299,10 @@ for f in $EXTRA_MULTILIB_PARTS; do\n     # target file.  This because ./$f is used as a temporary in\n     # each case before being moved to libgcc/$dir/.\n     echo $out: $lastout\n-    emit_make_compile $out $f T=t $flags\n+    echo \"\t$make_compile\" \\\\\n+    echo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n+    echo '\t  MULTILIB_CFLAGS=\"'$flags'\"' T=t t$f\n+    echo \"\tmv t$f $out\"\n \n     all=\"$all $out\"\n     lastout=\"$out\""}]}