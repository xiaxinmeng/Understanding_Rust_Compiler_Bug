{"sha": "e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwNTNiMGM3Y2YzZjFjZDhhMjNjYzcxZTdlMzZlYzI5YzQ2YjIxNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-06-18T14:51:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-06-18T14:51:02Z"}, "message": "[AArch64] Factor out pfalse predicate creation\n\nFollowing on from the previous ptrue patch.\n\n2019-06-18  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-protos.h (aarch64_pfalse_reg): Declare.\n\t* config/aarch64/aarch64.c (aarch64_pfalse_reg): New function.\n\t* config/aarch64/aarch64-sve.md: Use it.\n\nFrom-SVN: r272425", "tree": {"sha": "c121677959842a54e24c7166e23c94cfe4187785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c121677959842a54e24c7166e23c94cfe4187785"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16de3637c4df37e0203b3ad52b238887e6ca38fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16de3637c4df37e0203b3ad52b238887e6ca38fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16de3637c4df37e0203b3ad52b238887e6ca38fc"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "ce470a8160caaf4d32382f36e71a742153342d2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "patch": "@@ -1,3 +1,9 @@\n+2019-06-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch64_pfalse_reg): Declare.\n+\t* config/aarch64/aarch64.c (aarch64_pfalse_reg): New function.\n+\t* config/aarch64/aarch64-sve.md: Use it.\n+\n 2019-06-18  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_ptrue_reg): Declare."}, {"sha": "4b207961553b645c624efd3a712a76520ebd3fe2", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "patch": "@@ -521,6 +521,7 @@ void aarch64_err_no_fpadvsimd (machine_mode);\n void aarch64_expand_epilogue (bool);\n void aarch64_expand_mov_immediate (rtx, rtx, rtx (*) (rtx, rtx) = 0);\n rtx aarch64_ptrue_reg (machine_mode);\n+rtx aarch64_pfalse_reg (machine_mode);\n void aarch64_emit_sve_pred_move (rtx, rtx, rtx);\n void aarch64_expand_sve_mem_move (rtx, rtx, machine_mode);\n bool aarch64_maybe_expand_sve_subreg_move (rtx, rtx);"}, {"sha": "9055ae5d508edd8146590d84926b779de7142c95", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "patch": "@@ -488,7 +488,7 @@\n       {\n \t/* The last element can be extracted with a LASTB and a false\n \t   predicate.  */\n-\trtx sel = force_reg (<VPRED>mode, CONST0_RTX (<VPRED>mode));\n+\trtx sel = aarch64_pfalse_reg (<VPRED>mode);\n \temit_insn (gen_extract_last_<mode> (operands[0], sel, operands[1]));\n \tDONE;\n       }"}, {"sha": "9a30d156d85897e553cbac4813982e756d3da983", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e7053b0c7cf3f1cd8a23cc71e7e36ec29c46b217", "patch": "@@ -2467,6 +2467,15 @@ aarch64_ptrue_reg (machine_mode mode)\n   return force_reg (mode, CONSTM1_RTX (mode));\n }\n \n+/* Return an all-false predicate register of mode MODE.  */\n+\n+rtx\n+aarch64_pfalse_reg (machine_mode mode)\n+{\n+  gcc_assert (GET_MODE_CLASS (mode) == MODE_VECTOR_BOOL);\n+  return force_reg (mode, CONST0_RTX (mode));\n+}\n+\n /* Return true if we can move VALUE into a register using a single\n    CNT[BHWD] instruction.  */\n "}]}