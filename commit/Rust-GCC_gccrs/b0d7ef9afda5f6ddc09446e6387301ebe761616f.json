{"sha": "b0d7ef9afda5f6ddc09446e6387301ebe761616f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkN2VmOWFmZGE1ZjZkZGMwOTQ0NmU2Mzg3MzAxZWJlNzYxNjE2Zg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-02-26T16:29:22Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-02-26T16:29:22Z"}, "message": "pa.c (compute_frame_size): Don't assume PREFERRED_STACK_BOUNDARY is 8 * STACK_BOUNDARY.\n\n\t* pa.c (compute_frame_size): Don't assume PREFERRED_STACK_BOUNDARY\n\tis 8 * STACK_BOUNDARY.\n\t* pa.h (PREFERRED_STACK_BOUNDARY): Change to 128 on 64-bit port.\n\nFrom-SVN: r63473", "tree": {"sha": "44ee2dcc6d4ebf92d24d74f9b7200f677d545c7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44ee2dcc6d4ebf92d24d74f9b7200f677d545c7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0d7ef9afda5f6ddc09446e6387301ebe761616f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d7ef9afda5f6ddc09446e6387301ebe761616f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d7ef9afda5f6ddc09446e6387301ebe761616f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d7ef9afda5f6ddc09446e6387301ebe761616f/comments", "author": null, "committer": null, "parents": [{"sha": "a29c7ea6283b45f58d640c8747ee570a1b50bff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29c7ea6283b45f58d640c8747ee570a1b50bff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a29c7ea6283b45f58d640c8747ee570a1b50bff7"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "2aebbd015673f2236af7b19f7fd8dd93736dd177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0d7ef9afda5f6ddc09446e6387301ebe761616f", "patch": "@@ -1,3 +1,9 @@\n+2003-02-26  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (compute_frame_size): Don't assume PREFERRED_STACK_BOUNDARY\n+\tis 8 * STACK_BOUNDARY.\n+\t* pa.h (PREFERRED_STACK_BOUNDARY): Change to 128 on 64-bit port.\n+\n 2003-02-26  Michael Matz  <matz@suse.de>\n \n \t* ra-colorize.c (merge_moves): Fix list handling."}, {"sha": "27b218c72e0137586bad0e870e0367017d79e800", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=b0d7ef9afda5f6ddc09446e6387301ebe761616f", "patch": "@@ -3247,7 +3247,8 @@ compute_frame_size (size, fregs_live)\n   if (!current_function_is_leaf || fsize)\n     fsize += TARGET_64BIT ? 16 : 32;\n \n-  return (fsize + STACK_BOUNDARY - 1) & ~(STACK_BOUNDARY - 1);\n+  return ((fsize + PREFERRED_STACK_BOUNDARY / 8 - 1)\n+\t  & ~(PREFERRED_STACK_BOUNDARY / 8 - 1));\n }\n \n /* Generate the assembly code for function entry.  FILE is a stdio"}, {"sha": "0b055e9b16b649e1c02b1111a5d1b71674b2a411", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7ef9afda5f6ddc09446e6387301ebe761616f/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=b0d7ef9afda5f6ddc09446e6387301ebe761616f", "patch": "@@ -461,11 +461,12 @@ do {\t\t\t\t\t\t\t\t\\\n /* Boundary (in *bits*) on which stack pointer is always aligned;\n    certain optimizations in combine depend on this.\n \n-   GCC for the PA always rounds its stacks to a 8 * STACK_BOUNDARY\n-   boundary, but that happens late in the compilation process.  */\n+   The HP-UX runtime documents mandate 64-byte and 16-byte alignment for\n+   the stack on the 32 and 64-bit ports, respectively.  However, we\n+   are only guaranteed that the stack is aligned to BIGGEST_ALIGNMENT\n+   in main.  Thus, we treat the former as the preferred alignment.  */\n #define STACK_BOUNDARY BIGGEST_ALIGNMENT\n-\n-#define PREFERRED_STACK_BOUNDARY (8 * STACK_BOUNDARY)\n+#define PREFERRED_STACK_BOUNDARY (TARGET_64BIT ? 128 : 512)\n \n /* Allocation boundary (in *bits*) for the code of a function.  */\n #define FUNCTION_BOUNDARY BITS_PER_WORD"}]}