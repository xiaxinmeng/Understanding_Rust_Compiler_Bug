{"sha": "1ce296cf4318d5aae48c4a2124bf1988f09b3219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlMjk2Y2Y0MzE4ZDVhYWU0OGM0YTIxMjRiZjE5ODhmMDliMzIxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-16T22:05:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-16T22:05:32Z"}, "message": "re PR tree-optimization/55329 (ICE: internal compiler error: in operator[], at vec.h:487 with -O -fno-guess-branch-probability -fnon-call-exceptions --param=early-inlining-insns=111)\n\n\tPR tree-optimization/55329\n\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Never clear\n\tbits in needed_eh_cleanup while iterating over the bitmap.\n\tLook through all forwarder blocks at once.\n\n\t* g++.dg/opt/pr55329.C: New test.\n\nFrom-SVN: r193577", "tree": {"sha": "2db16daaa7fb930d896da0a77681b31da463c821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2db16daaa7fb930d896da0a77681b31da463c821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce296cf4318d5aae48c4a2124bf1988f09b3219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce296cf4318d5aae48c4a2124bf1988f09b3219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce296cf4318d5aae48c4a2124bf1988f09b3219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce296cf4318d5aae48c4a2124bf1988f09b3219/comments", "author": null, "committer": null, "parents": [{"sha": "d4a7f7a15c88915815cd744caa412e02389e2ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a7f7a15c88915815cd744caa412e02389e2ede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a7f7a15c88915815cd744caa412e02389e2ede"}], "stats": {"total": 111, "additions": 100, "deletions": 11}, "files": [{"sha": "da50be3c592669935fa6c9756b8d1d2ea842e067", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ce296cf4318d5aae48c4a2124bf1988f09b3219", "patch": "@@ -1,4 +1,11 @@\n-2012-11-16  Jan HUbicka  <jh@suse.cz>\n+2012-11-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/55329\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Never clear\n+\tbits in needed_eh_cleanup while iterating over the bitmap.\n+\tLook through all forwarder blocks at once.\n+\n+2012-11-16  Jan Hubicka  <jh@suse.cz>\n \n \t* params.def (max-peeled-insns, max-completely-peeled-insns): Reduce to 100.\n "}, {"sha": "9cb21c78daa68a80e465db6aaae5d37c468c9190", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ce296cf4318d5aae48c4a2124bf1988f09b3219", "patch": "@@ -1,3 +1,8 @@\n+2012-11-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/55329\n+\t* g++.dg/opt/pr55329.C: New test.\n+\n 2012-11-16  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55297"}, {"sha": "3646785d12e1ab72cfee8bf707a3e4aca36587f5", "filename": "gcc/testsuite/g++.dg/opt/pr55329.C", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55329.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55329.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55329.C?ref=1ce296cf4318d5aae48c4a2124bf1988f09b3219", "patch": "@@ -0,0 +1,73 @@\n+// PR tree-optimization/55329\n+// { dg-do compile }\n+// { dg-options \"-O -fno-guess-branch-probability -fnon-call-exceptions --param=early-inlining-insns=111\" }\n+\n+void *f1 ();\n+void f2 (void *);\n+void f3 ();\n+static inline void *\n+f4 ()\n+{\n+  void *p = f1 ();\n+  if (!p)\n+    f3 ();\n+  return p;\n+}\n+\n+struct A\n+{\n+  int *a;\n+  A ();\n+  ~A () { a3 (); }\n+  int a1 (int * p) { if (!p) f3 (); f2 (p); }\n+  int *a2 ();\n+  void a3 () { if (*a) a1 (a); }\n+  int a4 (int x) { if (*a) f4 (); *a2 () += x; }\n+};\n+\n+struct B : A\n+{\n+  ~B () { a3 (); }\n+};\n+\n+template <class T>\n+struct C\n+{\n+  T *c;\n+  C ();\n+  int c1 () { return *(int *) f4 (); }\n+  ~C () { if (c1 ()) for (T *t = c + c2 (); t != c; t--) T (); }\n+  int c2 ();\n+};\n+\n+class D\n+{\n+  C <C <int> > c;\n+};\n+\n+struct E\n+{\n+  int *e;\n+  ~E () { delete e; }\n+};\n+\n+struct F\n+{\n+  int *f1 ();\n+  D f2;\n+  E f3;\n+  F () { f4 (); }\n+};\n+\n+struct G : F\n+{\n+  B g;\n+  G () { g.a4 (*g1 ()->f1 ()); g1 ()->f1 (); }\n+  F *g1 ();\n+};\n+\n+void\n+foo ()\n+{\n+  G g;\n+}"}, {"sha": "7d015b7837c24fc67480c905ba3dec2cb3ab1cf4", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce296cf4318d5aae48c4a2124bf1988f09b3219/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=1ce296cf4318d5aae48c4a2124bf1988f09b3219", "patch": "@@ -1,6 +1,6 @@\n /* SSA Dominator optimizations for trees\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011, 2012 Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -801,17 +801,21 @@ tree_ssa_dominator_optimize (void)\n \n       /* Jump threading may have created forwarder blocks from blocks\n \t needing EH cleanup; the new successor of these blocks, which\n-\t has inherited from the original block, needs the cleanup.  */\n+\t has inherited from the original block, needs the cleanup.\n+\t Don't clear bits in the bitmap, as that can break the bitmap\n+\t iterator.  */\n       EXECUTE_IF_SET_IN_BITMAP (need_eh_cleanup, 0, i, bi)\n \t{\n \t  basic_block bb = BASIC_BLOCK (i);\n-\t  if (bb\n-\t      && single_succ_p (bb)\n-\t      && (single_succ_edge (bb)->flags & EDGE_EH) == 0)\n-\t    {\n-\t      bitmap_clear_bit (need_eh_cleanup, i);\n-\t      bitmap_set_bit (need_eh_cleanup, single_succ (bb)->index);\n-\t    }\n+\t  if (bb == NULL)\n+\t    continue;\n+\t  while (single_succ_p (bb)\n+\t\t && (single_succ_edge (bb)->flags & EDGE_EH) == 0)\n+\t    bb = single_succ (bb);\n+\t  if (bb == EXIT_BLOCK_PTR)\n+\t    continue;\n+\t  if ((unsigned) bb->index != i)\n+\t    bitmap_set_bit (need_eh_cleanup, bb->index);\n \t}\n \n       gimple_purge_all_dead_eh_edges (need_eh_cleanup);"}]}