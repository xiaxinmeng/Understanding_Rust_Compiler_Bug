{"sha": "20751fad19e1b0fb4272309dd6d7fde182b08dc1", "node_id": "C_kwDOANBUbNoAKDIwNzUxZmFkMTllMWIwZmI0MjcyMzA5ZGQ2ZDdmZGUxODJiMDhkYzE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-01T13:22:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T19:36:54Z"}, "message": "libstdc++: Implement LWG 3392 for std::ranges::distance\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_base.h (ranges::distance): Split overload\n\tinto two (LWG 3392).\n\t* testsuite/24_iterators/range_operations/lwg3392.cc: New test.", "tree": {"sha": "cbe1bbfff08be6921a7226b1a48e8fa6c22484c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe1bbfff08be6921a7226b1a48e8fa6c22484c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20751fad19e1b0fb4272309dd6d7fde182b08dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20751fad19e1b0fb4272309dd6d7fde182b08dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20751fad19e1b0fb4272309dd6d7fde182b08dc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20751fad19e1b0fb4272309dd6d7fde182b08dc1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b790acc2207d69b4ebc0f4addd34a0aa32ec6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b790acc2207d69b4ebc0f4addd34a0aa32ec6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b790acc2207d69b4ebc0f4addd34a0aa32ec6cf"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "01d0c35f4b4859330bdd68273a970462ae290a9d", "filename": "libstdc++-v3/include/bits/ranges_base.h", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20751fad19e1b0fb4272309dd6d7fde182b08dc1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20751fad19e1b0fb4272309dd6d7fde182b08dc1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h?ref=20751fad19e1b0fb4272309dd6d7fde182b08dc1", "patch": "@@ -787,22 +787,25 @@ namespace ranges\n   struct __distance_fn final\n   {\n     template<input_or_output_iterator _It, sentinel_for<_It> _Sent>\n-      [[nodiscard]]\n+      requires (!sized_sentinel_for<_Sent, _It>)\n       constexpr iter_difference_t<_It>\n-      operator()(_It __first, _Sent __last) const\n+      operator()[[nodiscard]](_It __first, _Sent __last) const\n       {\n-\tif constexpr (sized_sentinel_for<_Sent, _It>)\n-\t  return __last - __first;\n-\telse\n+\titer_difference_t<_It> __n = 0;\n+\twhile (__first != __last)\n \t  {\n-\t    iter_difference_t<_It> __n = 0;\n-\t    while (__first != __last)\n-\t      {\n-\t\t++__first;\n-\t\t++__n;\n-\t      }\n-\t    return __n;\n+\t    ++__first;\n+\t    ++__n;\n \t  }\n+\treturn __n;\n+      }\n+\n+    template<input_or_output_iterator _It, sized_sentinel_for<_It> _Sent>\n+      [[nodiscard]]\n+      constexpr iter_difference_t<_It>\n+      operator()(const _It& __first, const _Sent& __last) const\n+      {\n+\treturn __last - __first;\n       }\n \n     template<range _Range>"}, {"sha": "3278035351291cadcb1b5beea3a515a3b4e0e722", "filename": "libstdc++-v3/testsuite/24_iterators/range_operations/lwg3392.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20751fad19e1b0fb4272309dd6d7fde182b08dc1/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Flwg3392.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20751fad19e1b0fb4272309dd6d7fde182b08dc1/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Flwg3392.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Flwg3392.cc?ref=20751fad19e1b0fb4272309dd6d7fde182b08dc1", "patch": "@@ -0,0 +1,30 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+\n+#include <iterator>\n+\n+struct movable_iterator\n+{\n+  using difference_type = long;\n+\n+  movable_iterator() = default;\n+  movable_iterator(movable_iterator&&) = default;\n+  movable_iterator& operator=(movable_iterator&&) = default;\n+\n+  int operator*() const { return 1; }\n+\n+  movable_iterator& operator++() { return *this; }\n+  void operator++(int) { }\n+\n+  bool operator==(const movable_iterator&) const = default;\n+};\n+\n+using namespace std;\n+\n+constexpr counted_iterator<movable_iterator> it({}, 3);\n+\n+static_assert( sized_sentinel_for<std::default_sentinel_t, counted_iterator<movable_iterator>> );\n+// LWG 3392\n+// ranges::distance() cannot be used on a move-only iterator\n+// with a sized sentinel\n+static_assert( ranges::distance(it, default_sentinel) == 3 );"}]}