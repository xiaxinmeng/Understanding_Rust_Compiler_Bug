{"sha": "ca075703f52bf7185e6f1016370743a29c11b9a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwNzU3MDNmNTJiZjcxODVlNmYxMDE2MzcwNzQzYTI5YzExYjlhNg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2005-04-23T00:33:44Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2005-04-23T00:33:44Z"}, "message": "sched-vis.c (print_value): Use CONST_DOUBLE_LOW and CONST_DOUBLE_HIGH.\n\n\t* sched-vis.c (print_value): Use CONST_DOUBLE_LOW and\n\tCONST_DOUBLE_HIGH.\n\t* config/sparc/sparc.c (sparc_rtx_costs): Likewise, and\n\tfix check on CONST_DOUBLE mode.  It should be VOIDmode\n\twhen it is representing an integer.\n\nFrom-SVN: r98596", "tree": {"sha": "0aa351a7e45ad3658288d88b8bca8122c6002626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aa351a7e45ad3658288d88b8bca8122c6002626"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca075703f52bf7185e6f1016370743a29c11b9a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca075703f52bf7185e6f1016370743a29c11b9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca075703f52bf7185e6f1016370743a29c11b9a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca075703f52bf7185e6f1016370743a29c11b9a6/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48e3192faed66e96ef01749ecd0b96b66e830f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e3192faed66e96ef01749ecd0b96b66e830f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e3192faed66e96ef01749ecd0b96b66e830f8b"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "65268c14cca04ebb7656bbb45345eb8cc86ee7c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca075703f52bf7185e6f1016370743a29c11b9a6", "patch": "@@ -1,3 +1,11 @@\n+2005-04-22  David S. Miller  <davem@davemloft.net>\n+\n+\t* sched-vis.c (print_value): Use CONST_DOUBLE_LOW and\n+\tCONST_DOUBLE_HIGH.\n+\t* config/sparc/sparc.c (sparc_rtx_costs): Likewise, and\n+\tfix check on CONST_DOUBLE mode.  It should be VOIDmode\n+\twhen it is representing an integer.\n+\n 2005-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* builtins.c (gimplify_va_arg_expr): Reword comments to avoid"}, {"sha": "1349cc79432fa5212f8a2cb4ac58fb32e9c24b4a", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=ca075703f52bf7185e6f1016370743a29c11b9a6", "patch": "@@ -7897,12 +7897,12 @@ sparc_rtx_costs (rtx x, int code, int outer_code, int *total)\n       return true;\n \n     case CONST_DOUBLE:\n-      if (GET_MODE (x) == DImode\n-\t  && ((XINT (x, 3) == 0\n-\t       && (unsigned HOST_WIDE_INT) XINT (x, 2) < 0x1000)\n-\t      || (XINT (x, 3) == -1\n-\t\t  && XINT (x, 2) < 0\n-\t\t  && XINT (x, 2) >= -0x1000)))\n+      if (GET_MODE (x) == VOIDmode\n+\t  && ((CONST_DOUBLE_HIGH (x) == 0\n+\t       && CONST_DOUBLE_LOW (x) < 0x1000)\n+\t      || (CONST_DOUBLE_HIGH (x) == -1\n+\t\t  && CONST_DOUBLE_LOW (x) < 0\n+\t\t  && CONST_DOUBLE_LOW (x) >= -0x1000)))\n \t*total = 0;\n       else\n \t*total = 8;\n@@ -7960,11 +7960,11 @@ sparc_rtx_costs (rtx x, int code, int outer_code, int *total)\n \t\t    nbits++;\n \t\t}\n \t      else if (GET_CODE (XEXP (x, 1)) == CONST_DOUBLE\n-\t\t       && GET_MODE (XEXP (x, 1)) == DImode)\n+\t\t       && GET_MODE (XEXP (x, 1)) == VOIDmode)\n \t\t{\n \t\t  rtx x1 = XEXP (x, 1);\n-\t\t  unsigned HOST_WIDE_INT value1 = XINT (x1, 2);\n-\t\t  unsigned HOST_WIDE_INT value2 = XINT (x1, 3);\n+\t\t  unsigned HOST_WIDE_INT value1 = CONST_DOUBLE_LOW (x1);\n+\t\t  unsigned HOST_WIDE_INT value2 = CONST_DOUBLE_HIGH (x1);\n \n \t\t  for (nbits = 0; value1 != 0; value1 &= value1 - 1)\n \t\t    nbits++;"}, {"sha": "8920fb6a32085e9cb3d69ad21b0ca58bdbbdbff3", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca075703f52bf7185e6f1016370743a29c11b9a6/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=ca075703f52bf7185e6f1016370743a29c11b9a6", "patch": "@@ -435,7 +435,7 @@ print_value (char *buf, rtx x, int verbose)\n       if (FLOAT_MODE_P (GET_MODE (x)))\n \treal_to_decimal (t, CONST_DOUBLE_REAL_VALUE (x), sizeof (t), 0, 1);\n       else\n-\tsprintf (t, \"<0x%lx,0x%lx>\", (long) XWINT (x, 2), (long) XWINT (x, 3));\n+\tsprintf (t, \"<0x%lx,0x%lx>\", (long) CONST_DOUBLE_LOW (x), (long) CONST_DOUBLE_HIGH (x));\n       cur = safe_concat (buf, cur, t);\n       break;\n     case CONST_STRING:"}]}