{"sha": "734dfb474fd01decb6f36def5cd7ff229677123c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM0ZGZiNDc0ZmQwMWRlY2I2ZjM2ZGVmNWNkN2ZmMjI5Njc3MTIzYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-08-26T20:53:38Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-26T20:53:38Z"}, "message": "i386.c (ix86_build_const_vector): Rewrite using loop with RTVEC_ELT accessor.\n\n\t* config/i386/i386.c (ix86_build_const_vector): Rewrite using loop\n\twith RTVEC_ELT accessor.\n\nFrom-SVN: r178124", "tree": {"sha": "0874733087b6f61a8fd9e75928eb542b24262b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0874733087b6f61a8fd9e75928eb542b24262b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/734dfb474fd01decb6f36def5cd7ff229677123c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734dfb474fd01decb6f36def5cd7ff229677123c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/734dfb474fd01decb6f36def5cd7ff229677123c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734dfb474fd01decb6f36def5cd7ff229677123c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbeb5bebd66e300ae907d133740580a7b4f33c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbeb5bebd66e300ae907d133740580a7b4f33c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbeb5bebd66e300ae907d133740580a7b4f33c5b"}], "stats": {"total": 59, "additions": 23, "deletions": 36}, "files": [{"sha": "14aaee7471107cf64cd28478cfa4db758de96e6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/734dfb474fd01decb6f36def5cd7ff229677123c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/734dfb474fd01decb6f36def5cd7ff229677123c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=734dfb474fd01decb6f36def5cd7ff229677123c", "patch": "@@ -1,3 +1,13 @@\n+2011-08-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (round<mode>2): New expander.\n+\t* config/i386/i386.c (enum ix86_builtins): Add\n+\tIX86_BUILTIN_ROUND{PS,PD}_AZ{,256}.\n+\t(struct builtin_description): Add __builtin_ia32_round{ps,pd}_az{,256}\n+\tdescriptions.\n+\t(ix86_builtin_vectorized_function): Handle BUILT_IN_ROUND{,F} builtins.\n+\t(ix86_build_const_vector): Rewrite using loop with RTVEC_ELT accessor.\n+\n 2011-08-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/50083"}, {"sha": "3a8b0818796132f420a7fceca1cbc4fb3441c5dd", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 36, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/734dfb474fd01decb6f36def5cd7ff229677123c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/734dfb474fd01decb6f36def5cd7ff229677123c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=734dfb474fd01decb6f36def5cd7ff229677123c", "patch": "@@ -16512,52 +16512,29 @@ ix86_expand_convert_uns_sisf_sse (rtx target, rtx input)\n rtx\n ix86_build_const_vector (enum machine_mode mode, bool vect, rtx value)\n {\n+  int i, n_elt;\n   rtvec v;\n+  enum machine_mode scalar_mode;\n+\n   switch (mode)\n     {\n     case V4SImode:\n-      gcc_assert (vect);\n-      v = gen_rtvec (4, value, value, value, value);\n-      return gen_rtx_CONST_VECTOR (V4SImode, v);\n-\n     case V2DImode:\n       gcc_assert (vect);\n-      v = gen_rtvec (2, value, value);\n-      return gen_rtx_CONST_VECTOR (V2DImode, v);\n-\n     case V8SFmode:\n-      if (vect)\n-\tv = gen_rtvec (8, value, value, value, value,\n-\t\t       value, value, value, value);\n-      else\n-\tv = gen_rtvec (8, value, CONST0_RTX (SFmode),\n-\t\t       CONST0_RTX (SFmode), CONST0_RTX (SFmode),\n-\t\t       CONST0_RTX (SFmode), CONST0_RTX (SFmode),\n-\t\t       CONST0_RTX (SFmode), CONST0_RTX (SFmode));\n-      return gen_rtx_CONST_VECTOR (V8SFmode, v);\n-\n     case V4SFmode:\n-      if (vect)\n-\tv = gen_rtvec (4, value, value, value, value);\n-      else\n-\tv = gen_rtvec (4, value, CONST0_RTX (SFmode),\n-\t\t       CONST0_RTX (SFmode), CONST0_RTX (SFmode));\n-      return gen_rtx_CONST_VECTOR (V4SFmode, v);\n-\n     case V4DFmode:\n-      if (vect)\n-\tv = gen_rtvec (4, value, value, value, value);\n-      else\n-\tv = gen_rtvec (4, value, CONST0_RTX (DFmode),\n-\t\t       CONST0_RTX (DFmode), CONST0_RTX (DFmode));\n-      return gen_rtx_CONST_VECTOR (V4DFmode, v);\n-\n     case V2DFmode:\n-      if (vect)\n-\tv = gen_rtvec (2, value, value);\n-      else\n-\tv = gen_rtvec (2, value, CONST0_RTX (DFmode));\n-      return gen_rtx_CONST_VECTOR (V2DFmode, v);\n+      n_elt = GET_MODE_NUNITS (mode);\n+      v = rtvec_alloc (n_elt);\n+      scalar_mode = GET_MODE_INNER (mode);\n+\n+      RTVEC_ELT (v, 0) = value;\n+\n+      for (i = 1; i < n_elt; ++i)\n+\tRTVEC_ELT (v, i) = vect ? value : CONST0_RTX (scalar_mode);\n+\n+      return gen_rtx_CONST_VECTOR (mode, v);\n \n     default:\n       gcc_unreachable ();"}]}