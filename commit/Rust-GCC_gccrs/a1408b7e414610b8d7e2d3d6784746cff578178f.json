{"sha": "a1408b7e414610b8d7e2d3d6784746cff578178f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0MDhiN2U0MTQ2MTBiOGQ3ZTJkM2Q2Nzg0NzQ2Y2ZmNTc4MTc4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-12-04T20:37:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-12-04T20:37:24Z"}, "message": "re PR c++/64080 ([C++14]ICE in cxx_eval_store_expression)\n\n\tPR c++/64080\n\t* constexpr.c (cxx_eval_store_expression): Handle non-decl store\n\ttargets.\n\nFrom-SVN: r218401", "tree": {"sha": "c31054ac64e9362b5e679c8821fccad3ac4feb5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c31054ac64e9362b5e679c8821fccad3ac4feb5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1408b7e414610b8d7e2d3d6784746cff578178f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1408b7e414610b8d7e2d3d6784746cff578178f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1408b7e414610b8d7e2d3d6784746cff578178f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1408b7e414610b8d7e2d3d6784746cff578178f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6dc8211094a292f53016a95905bcdd7cd257cb71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc8211094a292f53016a95905bcdd7cd257cb71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc8211094a292f53016a95905bcdd7cd257cb71"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "2db8bd7c581825d1c373ffedb489a13911717e12", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a1408b7e414610b8d7e2d3d6784746cff578178f", "patch": "@@ -1,3 +1,9 @@\n+2014-12-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/64080\n+\t* constexpr.c (cxx_eval_store_expression): Handle non-decl store\n+\ttargets.\n+\n 2014-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/63558"}, {"sha": "9426d8558e2398974705d8fce60d6b8ce29bf626", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=a1408b7e414610b8d7e2d3d6784746cff578178f", "patch": "@@ -2583,19 +2583,22 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n \n \tdefault:\n \t  object = probe;\n-\t  gcc_assert (DECL_P (object));\n \t}\n     }\n \n   /* And then find/build up our initializer for the path to the subobject\n      we're initializing.  */\n-  tree *valp = ctx->values->get (object);\n+  tree *valp;\n+  if (DECL_P (object))\n+    valp = ctx->values->get (object);\n+  else\n+    valp = NULL;\n   if (!valp)\n     {\n       /* A constant-expression cannot modify objects from outside the\n \t constant-expression.  */\n       if (!ctx->quiet)\n-\terror (\"modification of %qD is not a constant-expression\", object);\n+\terror (\"modification of %qE is not a constant-expression\", object);\n       *non_constant_p = true;\n       return t;\n     }"}, {"sha": "6f88f82c0b09b31c60c1f787f8e81a50a0beaacc", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-ref1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-ref1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1408b7e414610b8d7e2d3d6784746cff578178f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-ref1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-ref1.C?ref=a1408b7e414610b8d7e2d3d6784746cff578178f", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/64080\n+// { dg-do compile { target c++14 } }\n+\n+constexpr void foo (int&& i) { i = 0; }\n+\n+void bar(int&& i)\n+{\n+  bool b = noexcept(foo(static_cast<int&&>(i)));\n+}"}]}