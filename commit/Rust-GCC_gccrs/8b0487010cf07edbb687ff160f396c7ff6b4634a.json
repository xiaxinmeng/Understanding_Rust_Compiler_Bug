{"sha": "8b0487010cf07edbb687ff160f396c7ff6b4634a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwNDg3MDEwY2YwN2VkYmI2ODdmZjE2MGYzOTZjN2ZmNmI0NjM0YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-20T16:44:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-20T16:44:37Z"}, "message": "re PR target/63892 (gcc.dg/sibcall-3.c fails on darwin with -m32)\n\n\tPR target/63892\n\t* ipa-icf.c (sem_function::merge): If DECL_COMDAT_GROUP (alias->decl),\n\tdon't try to create_thunk if stdarg_p.  If\n\t!sem_item::target_supports_symbol_aliases_p (), similarly, and try to\n\tredirect_callers if possible.\n\t(sem_item_optimizer::execute): Call unregister_hooks here...\n\t(ipa_icf_driver): ... instead of here.\n\nCo-Authored-By: Martin Liska <mliska@suse.cz>\n\nFrom-SVN: r220875", "tree": {"sha": "1aac1fdd174fd5584d63847f808a929765efc3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aac1fdd174fd5584d63847f808a929765efc3ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b0487010cf07edbb687ff160f396c7ff6b4634a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0487010cf07edbb687ff160f396c7ff6b4634a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0487010cf07edbb687ff160f396c7ff6b4634a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0487010cf07edbb687ff160f396c7ff6b4634a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc3b4ab3432e471e6ea666702b3375f59e039b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3b4ab3432e471e6ea666702b3375f59e039b11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3b4ab3432e471e6ea666702b3375f59e039b11"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "cae66174bee090a22d5f9d3d609745fb49375bbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0487010cf07edbb687ff160f396c7ff6b4634a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0487010cf07edbb687ff160f396c7ff6b4634a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b0487010cf07edbb687ff160f396c7ff6b4634a", "patch": "@@ -1,3 +1,14 @@\n+2015-02-20  Jakub Jelinek  <jakub@redhat.com>\n+\t    Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/63892\n+\t* ipa-icf.c (sem_function::merge): If DECL_COMDAT_GROUP (alias->decl),\n+\tdon't try to create_thunk if stdarg_p.  If\n+\t!sem_item::target_supports_symbol_aliases_p (), similarly, and try to\n+\tredirect_callers if possible.\n+\t(sem_item_optimizer::execute): Call unregister_hooks here...\n+\t(ipa_icf_driver): ... instead of here.\n+\n 2015-02-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md (*aarch64_lshr_sisd_or_int_<mode>3):"}, {"sha": "e1af8bf3b09b2cd00ef280e1c2f97c2032b80692", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0487010cf07edbb687ff160f396c7ff6b4634a/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0487010cf07edbb687ff160f396c7ff6b4634a/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=8b0487010cf07edbb687ff160f396c7ff6b4634a", "patch": "@@ -651,14 +651,17 @@ sem_function::merge (sem_item *alias_item)\n      section (or we risk link failures when section is discarded).  */\n   if ((original_address_matters\n        && alias_address_matters)\n-      || original_discardable)\n+      || original_discardable\n+      || DECL_COMDAT_GROUP (alias->decl)\n+      || !sem_item::target_supports_symbol_aliases_p ())\n     {\n       create_thunk = !stdarg_p (TREE_TYPE (alias->decl));\n       create_alias = false;\n       /* When both alias and original are not overwritable, we can save\n          the extra thunk wrapper for direct calls.  */\n       redirect_callers\n \t= (!original_discardable\n+\t   && !DECL_COMDAT_GROUP (alias->decl)\n \t   && alias->get_availability () > AVAIL_INTERPOSABLE\n \t   && original->get_availability () > AVAIL_INTERPOSABLE\n \t   && !alias->instrumented_version);\n@@ -670,13 +673,6 @@ sem_function::merge (sem_item *alias_item)\n       redirect_callers = false;\n     }\n \n-  if (create_alias && (DECL_COMDAT_GROUP (alias->decl)\n-\t\t       || !sem_item::target_supports_symbol_aliases_p ()))\n-    {\n-      create_alias = false;\n-      create_thunk = true;\n-    }\n-\n   /* We want thunk to always jump to the local function body\n      unless the body is comdat and may be optimized out.  */\n   if ((create_thunk || redirect_callers)\n@@ -1714,6 +1710,8 @@ void\n sem_item_optimizer::execute (void)\n {\n   filter_removed_items ();\n+  unregister_hooks ();\n+\n   build_hash_based_classes ();\n \n   if (dump_file)\n@@ -2482,7 +2480,6 @@ ipa_icf_driver (void)\n   gcc_assert (optimizer);\n \n   optimizer->execute ();\n-  optimizer->unregister_hooks ();\n \n   delete optimizer;\n   optimizer = NULL;"}]}