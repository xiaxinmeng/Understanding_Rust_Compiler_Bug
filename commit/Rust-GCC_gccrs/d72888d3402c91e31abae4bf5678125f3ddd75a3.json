{"sha": "d72888d3402c91e31abae4bf5678125f3ddd75a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyODg4ZDM0MDJjOTFlMzFhYmFlNGJmNTY3ODEyNWYzZGRkNzVhMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-21T23:29:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-21T23:29:01Z"}, "message": "PR libstdc++/86138 prevent implicit instantiation of COW empty rep\n\nThe explicit instantiation declarations for std::basic_string are\ndisabled for C++17 (and later) so that basic_string symbols get\nimplicitly instantiated in every translation unit that needs them.  On\ntargets that don't support STB_GNU_UNIQUE this leads to multiple copies\nof the empty rep symbol for COW strings. In order to detect whether a\nCOW string needs to deallocate its storage it compares the address with\nthe empty rep.  When there are multiple copies of the empty rep object\nthe address is not unique, and so string destructors try to delete the\nempty rep, which crashes.\n\nIn order to guarantee uniqueness of the _S_empty_rep_storage symbol this\npatch adds an explicit instantiation declaration for just that symbol.\nThis means the other symbols are still implicitly instantiated in C++17\ncode, but for the empty rep the definition in the library gets used.\n\nSeparately, there is no need for C++17 code to implicitly instantiate\nthe I/O functions for strings, so this also restores the explicit\ninstantiation declarations for those functions.\n\n\tPR libstdc++/86138\n\t* include/bits/basic_string.tcc:\n\t[__cplusplus > 201402 && !_GLIBCXX_USE_CXX11_ABI]\n\t(basic_string<char>::_Rep::_S_empty_rep_storage)\n\t(basic_string<wchar_t>::_Rep::_S_empty_rep_storage): Add explicit\n\tinstantiation declarations.\n\t[__cplusplus > 201402] (operator>>, operator<<, getline): Re-enable\n\texplicit instantiation declarations.\n\t* testsuite/21_strings/basic_string/cons/char/86138.cc: New.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/86138.cc: New.\n\nFrom-SVN: r261873", "tree": {"sha": "b54e140f3bbafe1a72a08e90f288cf737ab07ded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b54e140f3bbafe1a72a08e90f288cf737ab07ded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d72888d3402c91e31abae4bf5678125f3ddd75a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72888d3402c91e31abae4bf5678125f3ddd75a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72888d3402c91e31abae4bf5678125f3ddd75a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72888d3402c91e31abae4bf5678125f3ddd75a3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30043df9751a8e015c9732bdad9c3ce6f09e4ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30043df9751a8e015c9732bdad9c3ce6f09e4ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30043df9751a8e015c9732bdad9c3ce6f09e4ae1"}], "stats": {"total": 98, "additions": 95, "deletions": 3}, "files": [{"sha": "baaf43169a6aa9e15f443e69eadbc38c88b207d9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d72888d3402c91e31abae4bf5678125f3ddd75a3", "patch": "@@ -1,3 +1,16 @@\n+2018-06-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/86138\n+\t* include/bits/basic_string.tcc:\n+\t[__cplusplus > 201402 && !_GLIBCXX_USE_CXX11_ABI]\n+\t(basic_string<char>::_Rep::_S_empty_rep_storage)\n+\t(basic_string<wchar_t>::_Rep::_S_empty_rep_storage): Add explicit\n+\tinstantiation declarations.\n+\t[__cplusplus > 201402] (operator>>, operator<<, getline): Re-enable\n+\texplicit instantiation declarations.\n+\t* testsuite/21_strings/basic_string/cons/char/86138.cc: New.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/86138.cc: New.\n+\n 2018-06-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/83328"}, {"sha": "9fbea84c4af32a1fbf0426ada4db5e565895d811", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=d72888d3402c91e31abae4bf5678125f3ddd75a3", "patch": "@@ -1597,8 +1597,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.\n-#if _GLIBCXX_EXTERN_TEMPLATE > 0 && __cplusplus <= 201402L\n+#if _GLIBCXX_EXTERN_TEMPLATE > 0\n+  // The explicit instantiations definitions in src/c++11/string-inst.cc\n+  // are compiled as C++14, so the new C++17 members aren't instantiated.\n+  // Until those definitions are compiled as C++17 suppress the declaration,\n+  // so C++17 code will implicitly instantiate std::string and std::wstring\n+  // as needed.\n+# if __cplusplus <= 201402L\n   extern template class basic_string<char>;\n+# elif ! _GLIBCXX_USE_CXX11_ABI\n+  // Still need to prevent implicit instantiation of the COW empty rep,\n+  // to ensure the definition in libstdc++.so is unique (PR 86138).\n+  extern template basic_string<char>::size_type\n+    basic_string<char>::_Rep::_S_empty_rep_storage[];\n+# endif\n+\n   extern template\n     basic_istream<char>&\n     operator>>(basic_istream<char>&, string&);\n@@ -1613,7 +1626,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     getline(basic_istream<char>&, string&);\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n+# if __cplusplus <= 201402L\n   extern template class basic_string<wchar_t>;\n+# elif ! _GLIBCXX_USE_CXX11_ABI\n+  extern template basic_string<wchar_t>::size_type\n+    basic_string<wchar_t>::_Rep::_S_empty_rep_storage[];\n+# endif\n+\n   extern template\n     basic_istream<wchar_t>&\n     operator>>(basic_istream<wchar_t>&, wstring&);\n@@ -1626,8 +1645,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   extern template\n     basic_istream<wchar_t>&\n     getline(basic_istream<wchar_t>&, wstring&);\n-#endif\n-#endif\n+#endif // _GLIBCXX_USE_WCHAR_T\n+#endif // _GLIBCXX_EXTERN_TEMPLATE > 0\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std"}, {"sha": "224ea42a3c7ea005673362f8067a9bca895c3fe5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/86138.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F86138.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F86138.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F86138.cc?ref=d72888d3402c91e31abae4bf5678125f3ddd75a3", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-final { scan-assembler-not \"_ZNSs4_Rep20_S_empty_rep_storageE:\" } }\n+\n+#undef _GLIBCXX_USE_CXX11_ABI\n+#define _GLIBCXX_USE_CXX11_ABI 0\n+#include <string>\n+\n+void\n+test01(std::string* s)\n+{\n+  s->~basic_string();\n+}"}, {"sha": "88f136bc7bc30b2d352edaa349fa540c6e6b7df0", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/86138.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F86138.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72888d3402c91e31abae4bf5678125f3ddd75a3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F86138.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F86138.cc?ref=d72888d3402c91e31abae4bf5678125f3ddd75a3", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-final { scan-assembler-not \"_ZNSbIwSt11char_traitsIwESaIwEE4_Rep20_S_empty_rep_storageE:\" } }\n+\n+#undef _GLIBCXX_USE_CXX11_ABI\n+#define _GLIBCXX_USE_CXX11_ABI 0\n+#include <string>\n+\n+void\n+test01(std::wstring* s)\n+{\n+  s->~basic_string();\n+}"}]}