{"sha": "7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyZmQwNzU3N2I3MWYyZWYzMTQzZmZiODBjYTYyMjNkMDZkZDM5Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-03-24T14:02:51Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-03-24T14:02:51Z"}, "message": "S/390: arch12: Support the mul/add/subtract\n instructions.\n\ngcc/ChangeLog:\n\n2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"*adddi3_sign\", \"*subdi3_sign\", \"mulditi3\")\n\t(\"mulditi3_2\", \"*muldi3_sign\"): New patterns.\n\t(\"muldi3\", \"*muldi3\", \"mulsi3\", \"*mulsi3\"): Add an expander and\n\trename the pattern definition.\n\ngcc/testsuite/ChangeLog:\n\n2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/arch12/aghsghmgh-1.c: New test.\n\t* gcc.target/s390/arch12/mul-1.c: New test.\n\t* gcc.target/s390/arch12/mul-2.c: New test.\n\nFrom-SVN: r246457", "tree": {"sha": "217b4dc533b71b6448217a070b52dd70fae644eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/217b4dc533b71b6448217a070b52dd70fae644eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/comments", "author": null, "committer": null, "parents": [{"sha": "2841f5506729cb4b445a8460499a6976cddf52da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2841f5506729cb4b445a8460499a6976cddf52da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2841f5506729cb4b445a8460499a6976cddf52da"}], "stats": {"total": 180, "additions": 167, "deletions": 13}, "files": [{"sha": "ca127058bd53c93633ad5e8a9c963dcc92db0a05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -1,3 +1,10 @@\n+2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"*adddi3_sign\", \"*subdi3_sign\", \"mulditi3\")\n+\t(\"mulditi3_2\", \"*muldi3_sign\"): New patterns.\n+\t(\"muldi3\", \"*muldi3\", \"mulsi3\", \"*mulsi3\"): Add an expander and\n+\trename the pattern definition.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md (\"indirect_jump\"): Turn insn definition into"}, {"sha": "93a0bc6767ed0df8fdf0b607ab82dc60f2990e44", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 85, "deletions": 13, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -5795,6 +5795,15 @@\n    (set_attr \"cpu_facility\" \"*,z196,extimm,z10\")\n    (set_attr \"z10prop\" \"z10_super_E1,*,z10_super_E1,z10_super_E1\")])\n \n+(define_insn \"*adddi3_sign\"\n+  [(set (match_operand:DI                          0 \"register_operand\" \"=d\")\n+        (plus:DI (sign_extend:DI (match_operand:HI 2 \"memory_operand\"    \"T\"))\n+\t\t (match_operand:DI                 1 \"register_operand\"  \"0\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"TARGET_ARCH12\"\n+  \"agh\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RXY\")])\n+\n ;\n ; add(tf|df|sf|td|dd)3 instruction pattern(s).\n ;\n@@ -6226,6 +6235,15 @@\n    (set_attr \"cpu_facility\" \"*,z196,*,longdisp\")\n    (set_attr \"z10prop\" \"z10_super_c_E1,*,z10_super_E1,z10_super_E1\")])\n \n+(define_insn \"*subdi3_sign\"\n+  [(set (match_operand:DI                           0 \"register_operand\" \"=d\")\n+        (minus:DI (match_operand:DI                 1 \"register_operand\"  \"0\")\n+                  (sign_extend:DI (match_operand:HI 2 \"memory_operand\"    \"T\"))))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"TARGET_ARCH12\"\n+  \"sgh\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RXY\")])\n+\n \n ;\n ; sub(tf|df|sf|td|dd)3 instruction pattern(s).\n@@ -6565,6 +6583,14 @@\n ; muldi3 instruction pattern(s).\n ;\n \n+(define_expand \"muldi3\"\n+  [(parallel\n+    [(set (match_operand:DI          0 \"register_operand\")\n+\t  (mult:DI (match_operand:DI 1 \"nonimmediate_operand\")\n+\t\t   (match_operand:DI 2 \"general_operand\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"TARGET_ZARCH\")\n+\n (define_insn \"*muldi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (mult:DI (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,T\"))\n@@ -6576,24 +6602,68 @@\n   [(set_attr \"op_type\"      \"RRE,RXY\")\n    (set_attr \"type\"         \"imuldi\")])\n \n-(define_insn \"muldi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d,d\")\n-        (mult:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                 (match_operand:DI 2 \"general_operand\" \"d,K,T,Os\")))]\n+(define_insn \"*muldi3\"\n+  [(set (match_operand:DI          0 \"register_operand\"     \"=d,d,d,d,d\")\n+\t(mult:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,d,0,0,0\")\n+\t\t (match_operand:DI 2 \"general_operand\"       \"d,d,K,T,Os\")))\n+   (clobber (match_scratch:CC      3                        \"=X,c,X,X,X\"))]\n   \"TARGET_ZARCH\"\n   \"@\n    msgr\\t%0,%2\n+   msgrkc\\t%0,%1,%2\n    mghi\\t%0,%h2\n    msg\\t%0,%2\n    msgfi\\t%0,%2\"\n-  [(set_attr \"op_type\"      \"RRE,RI,RXY,RIL\")\n+  [(set_attr \"op_type\"      \"RRE,RRF,RI,RXY,RIL\")\n    (set_attr \"type\"         \"imuldi\")\n-   (set_attr \"cpu_facility\" \"*,*,*,z10\")])\n+   (set_attr \"cpu_facility\" \"*,arch12,*,*,z10\")])\n+\n+(define_insn \"mulditi3\"\n+  [(set (match_operand:TI 0 \"register_operand\"               \"=d,d\")\n+        (mult:TI (sign_extend:TI\n+\t\t  (match_operand:DI 1 \"register_operand\"     \"%d,0\"))\n+\t\t (sign_extend:TI\n+\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \" d,T\"))))]\n+  \"TARGET_ARCH12\"\n+  \"@\n+   mgrk\\t%0,%1,%2\n+   mg\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRF,RXY\")])\n+\n+; Combine likes op1 and op2 to be swapped sometimes.\n+(define_insn \"mulditi3_2\"\n+  [(set (match_operand:TI 0 \"register_operand\"               \"=d,d\")\n+        (mult:TI (sign_extend:TI\n+\t\t  (match_operand:DI 1 \"nonimmediate_operand\" \"%d,T\"))\n+\t\t (sign_extend:TI\n+\t\t  (match_operand:DI 2 \"register_operand\"     \" d,0\"))))]\n+  \"TARGET_ARCH12\"\n+  \"@\n+   mgrk\\t%0,%1,%2\n+   mg\\t%0,%1\"\n+  [(set_attr \"op_type\"  \"RRF,RXY\")])\n+\n+(define_insn \"*muldi3_sign\"\n+  [(set (match_operand:DI                          0 \"register_operand\" \"=d\")\n+        (mult:DI (sign_extend:DI (match_operand:HI 2 \"memory_operand\"    \"T\"))\n+                 (match_operand:DI                 1 \"register_operand\"  \"0\")))]\n+  \"TARGET_ARCH12\"\n+  \"mgh\\t%0,%2\"\n+  [(set_attr \"op_type\" \"RXY\")])\n+\n \n ;\n ; mulsi3 instruction pattern(s).\n ;\n \n+(define_expand \"mulsi3\"\n+  [(parallel\n+    [(set (match_operand:SI           0 \"register_operand\"     \"=d,d,d,d,d,d\")\n+\t  (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,d,0,0,0,0\")\n+\t\t    (match_operand:SI 2 \"general_operand\"       \"d,d,K,R,T,Os\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"\")\n+\n (define_insn \"*mulsi3_sign\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n         (mult:SI (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))\n@@ -6606,20 +6676,22 @@\n    (set_attr \"type\"         \"imulhi\")\n    (set_attr \"cpu_facility\" \"*,z10\")])\n \n-(define_insn \"mulsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d,d\")\n-        (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n-                  (match_operand:SI 2 \"general_operand\" \"d,K,R,T,Os\")))]\n+(define_insn \"*mulsi3\"\n+  [(set (match_operand:SI           0 \"register_operand\"     \"=d,d,d,d,d,d\")\n+        (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,d,0,0,0,0\")\n+                  (match_operand:SI 2 \"general_operand\"       \"d,d,K,R,T,Os\")))\n+   (clobber (match_scratch:CC       3                        \"=X,c,X,X,X,X\"))]\n   \"\"\n   \"@\n    msr\\t%0,%2\n+   msrkc\\t%0,%1,%2\n    mhi\\t%0,%h2\n    ms\\t%0,%2\n    msy\\t%0,%2\n    msfi\\t%0,%2\"\n-  [(set_attr \"op_type\"      \"RRE,RI,RX,RXY,RIL\")\n-   (set_attr \"type\"         \"imulsi,imulhi,imulsi,imulsi,imulsi\")\n-   (set_attr \"cpu_facility\" \"*,*,*,longdisp,z10\")])\n+  [(set_attr \"op_type\"      \"RRE,RRF,RI,RX,RXY,RIL\")\n+   (set_attr \"type\"         \"imulsi,*,imulhi,imulsi,imulsi,imulsi\")\n+   (set_attr \"cpu_facility\" \"*,arch12,*,*,longdisp,z10\")])\n \n ;\n ; mulsidi3 instruction pattern(s)."}, {"sha": "914b4b53fd817e54c76f2a5e777acf72ebfacfe7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -1,3 +1,9 @@\n+2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/arch12/aghsghmgh-1.c: New test.\n+\t* gcc.target/s390/arch12/mul-1.c: New test.\n+\t* gcc.target/s390/arch12/mul-2.c: New test.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vxe/vllezlf-1.c: New test."}, {"sha": "fc844c3e4042e03bd20e4f710767e797f800d51a", "filename": "gcc/testsuite/gcc.target/s390/arch12/aghsghmgh-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Faghsghmgh-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Faghsghmgh-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Faghsghmgh-1.c?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-compile } */\n+\n+long long\n+agh (long long a, short int *p)\n+{\n+  return a + *p;\n+}\n+\n+long long\n+sgh (long long a, short int *p)\n+{\n+  return a - *p;\n+}\n+\n+long long\n+mgh (long long a, short int *p)\n+{\n+  return a * *p;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tagh\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\tsgh\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\tmgh\\t\" 1 } } */"}, {"sha": "ef395356b72acee0c1d384268e18a017ec171ba5", "filename": "gcc/testsuite/gcc.target/s390/arch12/mul-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-1.c?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-compile } */\n+\n+int\n+msrkc (int unused, int a, int b)\n+{\n+  return a * b;\n+}\n+\n+long long\n+msgrkc (int unused, long long a, long long b)\n+{\n+  return a * b;\n+}\n+\n+/* Make sure the 2 operand version are still being used.  */\n+\n+int\n+msr (int a, int b)\n+{\n+  return a * b;\n+}\n+\n+long long\n+msgr (long long a, long long b)\n+{\n+  return a * b;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tmsrkc\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\tmsgrkc\\t\" 1 } } */"}, {"sha": "ad3b11ed6bce4481f71f1d494745978e766a8a56", "filename": "gcc/testsuite/gcc.target/s390/arch12/mul-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2fd07577b71f2ef3143ffb80ca6223d06dd396/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch12%2Fmul-2.c?ref=7d2fd07577b71f2ef3143ffb80ca6223d06dd396", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target int128 } } */\n+\n+__int128\n+mgrk (long long a, long long b)\n+{\n+  return (__int128)a * (__int128)b;\n+}\n+\n+__int128\n+mg (long long a, long long *b)\n+{\n+  return (__int128)a * (__int128)*b;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tmgrk\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\tmg\\t\" 1 } } */"}]}