{"sha": "917e21e8bcddf5047ee0ced063fca412ad81ce7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3ZTIxZThiY2RkZjUwNDdlZTBjZWQwNjNmY2E0MTJhZDgxY2U3Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-27T12:52:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-27T12:55:22Z"}, "message": "tree-optimization/94352 - fix uninitialized use of curr_order\n\nThis fixes a (harmless) use of a not re-initialized curr_order.\n\n2020-03-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/94352\n\t* tree-ssa-propagate.c (ssa_prop_init): Move seeding of the\n\tworklist ...\n\t(ssa_propagation_engine::ssa_propagate): ... here after\n\tinitializing curr_order.", "tree": {"sha": "712940243609094303e281ecb23793f08e976b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712940243609094303e281ecb23793f08e976b13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/917e21e8bcddf5047ee0ced063fca412ad81ce7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917e21e8bcddf5047ee0ced063fca412ad81ce7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917e21e8bcddf5047ee0ced063fca412ad81ce7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917e21e8bcddf5047ee0ced063fca412ad81ce7f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ede14d30f5d083f1ab23bcab6e0e3c9c649006"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "97cad024271f7731795a5d879f4c712891d139ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917e21e8bcddf5047ee0ced063fca412ad81ce7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917e21e8bcddf5047ee0ced063fca412ad81ce7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=917e21e8bcddf5047ee0ced063fca412ad81ce7f", "patch": "@@ -1,3 +1,11 @@\n+2020-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/94352\n+\t* tree-ssa-propagate.c (ssa_prop_init): Move seeding of the\n+\tworklist ...\n+\t(ssa_propagation_engine::ssa_propagate): ... here after\n+\tinitializing curr_order.\n+\n 2020-03-27  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR tree-optimization/90332"}, {"sha": "2fad247277556a5be6be2de50a03166cb5ad87b1", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917e21e8bcddf5047ee0ced063fca412ad81ce7f/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917e21e8bcddf5047ee0ced063fca412ad81ce7f/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=917e21e8bcddf5047ee0ced063fca412ad81ce7f", "patch": "@@ -421,14 +421,6 @@ ssa_prop_init (void)\n \te->flags &= ~EDGE_EXECUTABLE;\n     }\n   uid_to_stmt.safe_grow (gimple_stmt_max_uid (cfun));\n-\n-  /* Seed the algorithm by adding the successors of the entry block to the\n-     edge worklist.  */\n-  FOR_EACH_EDGE (e, ei, ENTRY_BLOCK_PTR_FOR_FN (cfun)->succs)\n-    {\n-      e->flags &= ~EDGE_EXECUTABLE;\n-      add_control_edge (e);\n-    }\n }\n \n \n@@ -758,7 +750,16 @@ ssa_propagation_engine::ssa_propagate (void)\n \n   /* Iterate until the worklists are empty.  We iterate both blocks\n      and stmts in RPO order, using sets of two worklists to first\n-     complete the current iteration before iterating over backedges.  */\n+     complete the current iteration before iterating over backedges.\n+     Seed the algorithm by adding the successors of the entry block to the\n+     edge worklist.  */\n+  edge e;\n+  edge_iterator ei;\n+  FOR_EACH_EDGE (e, ei, ENTRY_BLOCK_PTR_FOR_FN (cfun)->succs)\n+    {\n+      e->flags &= ~EDGE_EXECUTABLE;\n+      add_control_edge (e);\n+    }\n   while (1)\n     {\n       int next_block_order = (bitmap_empty_p (cfg_blocks)"}]}