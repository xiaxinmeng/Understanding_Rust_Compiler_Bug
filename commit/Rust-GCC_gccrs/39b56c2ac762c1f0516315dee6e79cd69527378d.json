{"sha": "39b56c2ac762c1f0516315dee6e79cd69527378d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliNTZjMmFjNzYyYzFmMDUxNjMxNWRlZTZlNzljZDY5NTI3Mzc4ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-28T22:05:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-28T22:05:59Z"}, "message": "(gen_input_reload): In PLUS, if OP0 and OP1 are the same, use\nRELOADREG when generating the addition.\n\nFrom-SVN: r2643", "tree": {"sha": "b7fac37213485649c4453d6dd3ae41fe1df89cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7fac37213485649c4453d6dd3ae41fe1df89cbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39b56c2ac762c1f0516315dee6e79cd69527378d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b56c2ac762c1f0516315dee6e79cd69527378d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39b56c2ac762c1f0516315dee6e79cd69527378d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b56c2ac762c1f0516315dee6e79cd69527378d/comments", "author": null, "committer": null, "parents": [{"sha": "3c80f7ed512d0f3c1a57e8fab76fbd53c8dd12b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c80f7ed512d0f3c1a57e8fab76fbd53c8dd12b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c80f7ed512d0f3c1a57e8fab76fbd53c8dd12b7"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f1933d730f21d4342725882568121068a41e8806", "filename": "gcc/reload1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b56c2ac762c1f0516315dee6e79cd69527378d/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b56c2ac762c1f0516315dee6e79cd69527378d/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=39b56c2ac762c1f0516315dee6e79cd69527378d", "patch": "@@ -5753,6 +5753,14 @@ gen_input_reload (reloadreg, in, before_insn)\n \ttem = op0, op0 = op1, op1 = tem;\n \n       emit_insn_before (gen_move_insn (reloadreg, op0), before_insn);\n+\n+      /* If OP0 and OP1 are the same, we can use RELOADREG for OP1.\n+\t This fixes a problem on the 32K where the stack pointer cannot\n+\t be used as an operand of an add insn.  */\n+\n+      if (rtx_equal_p (op0, op1))\n+\top1 = reloadreg;\n+\n       emit_insn_before (gen_add2_insn (reloadreg, op1), before_insn);\n     }\n "}]}