{"sha": "4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ0MDc0ZTQxNWRiZjIwMjlmNDliZWY5ZmU0OGVkNzljOGM1YTEwNg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-12-09T20:41:51Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-12-09T20:41:51Z"}, "message": "re PR fortran/29941 ([4.1 only] gfortran reports error with len of assumed size character array)\n\n2006-12-09  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29941\n\t* resolve.c (resolve_function): Add LEN to the functions not\n\tchecked for assumed size actual args.\n\n\n2006-12-09  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29941\n\t* gfortran.dg/assumed_len.f90: New test.\n\nFrom-SVN: r119695", "tree": {"sha": "e5890fbc9e14ecf6fff7b0db5962422484988337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5890fbc9e14ecf6fff7b0db5962422484988337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/comments", "author": null, "committer": null, "parents": [{"sha": "8aa25857e0a9bd2caf1900e6efa279c107c8c058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa25857e0a9bd2caf1900e6efa279c107c8c058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa25857e0a9bd2caf1900e6efa279c107c8c058"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "1a6b28afcde204d54f3faaca00825e88d2e4ca17", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "patch": "@@ -1,14 +1,20 @@\n+2006-12-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29941\n+\t* resolve.c (resolve_function): Add LEN to the functions not\n+\tchecked for assumed size actual args.\n+\n 2006-12-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/27546\n-\t* trans-decl.f90 (gfc_create_module_variable): Allow imported symbols\n-\t  in interface bodys in modules.\n+\t* trans-decl.c (gfc_create_module_variable): Allow imported\n+\tsymbols in interface bodies in modules.\n \n 2006-12-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/29711\n-\t* error.c (error_print): Fix handling of printf-style position specifiers\n-\t  of the form \"%3$d\"\n+\t* error.c (error_print): Fix handling of printf-style position\n+\tspecifiers of the form \"%3$d\".\n \n 2006-12-05  Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "863e8319d09100931cdd2f4340c23187d197399f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "patch": "@@ -1514,19 +1514,21 @@ resolve_function (gfc_expr * expr)\n       t = FAILURE;\n     }\n \n+#define GENERIC_ID expr->value.function.isym->generic_id\n   else if (expr->value.function.actual != NULL\n \t     && expr->value.function.isym != NULL\n-\t     && expr->value.function.isym->generic_id != GFC_ISYM_LBOUND\n-\t     && expr->value.function.isym->generic_id != GFC_ISYM_LOC\n-\t     && expr->value.function.isym->generic_id != GFC_ISYM_PRESENT)\n+\t     && GENERIC_ID != GFC_ISYM_LBOUND\n+\t     && GENERIC_ID != GFC_ISYM_LEN\n+\t     && GENERIC_ID != GFC_ISYM_LOC\n+\t     && GENERIC_ID != GFC_ISYM_PRESENT)\n     {\n       /* Array intrinsics must also have the last upper bound of an\n \t assumed size array argument.  UBOUND and SIZE have to be\n \t excluded from the check if the second argument is anything\n \t than a constant.  */\n       int inquiry;\n-      inquiry = expr->value.function.isym->generic_id == GFC_ISYM_UBOUND\n-\t\t  || expr->value.function.isym->generic_id == GFC_ISYM_SIZE;\n+      inquiry = GENERIC_ID == GFC_ISYM_UBOUND\n+\t\t  || GENERIC_ID == GFC_ISYM_SIZE;\n \n       for (arg = expr->value.function.actual; arg; arg = arg->next)\n \t{\n@@ -1540,6 +1542,7 @@ resolve_function (gfc_expr * expr)\n \t    return FAILURE;\n \t}\n     }\n+#undef GENERIC_ID\n \n   need_full_assumed_size = temp;\n "}, {"sha": "761d53bb66053fe767606011ac7bc9d2bfbfb392", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "patch": "@@ -1,3 +1,8 @@\n+2006-12-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29941\n+\t* gfortran.dg/assumed_len.f90: New test.\n+\n 2006-12-09  Richard Guenther  <rguenther@suse.de>\n \n \t* g++.dg/warn/implicit-typename1.C: Qualify types."}, {"sha": "5895e21457b586b3e798730bab8f3a77378bdac8", "filename": "gcc/testsuite/gfortran.dg/assumed_len.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_len.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d4074e415dbf2029f49bef9fe48ed79c8c5a106/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_len.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_len.f90?ref=4d4074e415dbf2029f49bef9fe48ed79c8c5a106", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! Test of the patch for PR29941, in which LEN threw an error with\n+! an assumed size argument.\n+! \n+! Contributed by William Mitchell <william.mitchell@nist.gov>\n+!\n+subroutine whatever(str)\n+character(len=*), dimension(*) :: str\n+integer :: i\n+i = len(str)\n+end subroutine whatever"}]}