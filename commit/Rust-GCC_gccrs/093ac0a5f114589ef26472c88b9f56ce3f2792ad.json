{"sha": "093ac0a5f114589ef26472c88b9f56ce3f2792ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkzYWMwYTVmMTE0NTg5ZWYyNjQ3MmM4OGI5ZjU2Y2UzZjI3OTJhZA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-04-08T16:03:05Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-04-08T16:03:05Z"}, "message": "epiphany.md (<insn_opname>v2si3): Use gen_addsi3_i / gen_subsi3_i.\n\n        * config/epiphany/epiphany.md (<insn_opname>v2si3):\n        Use gen_addsi3_i / gen_subsi3_i.\n\nFrom-SVN: r197592", "tree": {"sha": "634de7ea68528ea0010941438503fde4c98be4ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/634de7ea68528ea0010941438503fde4c98be4ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/093ac0a5f114589ef26472c88b9f56ce3f2792ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093ac0a5f114589ef26472c88b9f56ce3f2792ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/093ac0a5f114589ef26472c88b9f56ce3f2792ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093ac0a5f114589ef26472c88b9f56ce3f2792ad/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aefb0819fbe65e061fbfba4fb09fb63e3a2918c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aefb0819fbe65e061fbfba4fb09fb63e3a2918c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aefb0819fbe65e061fbfba4fb09fb63e3a2918c5"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "ec7aa1a817e2deb53bdb7a489f83b36c3847717f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093ac0a5f114589ef26472c88b9f56ce3f2792ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093ac0a5f114589ef26472c88b9f56ce3f2792ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=093ac0a5f114589ef26472c88b9f56ce3f2792ad", "patch": "@@ -30,6 +30,9 @@\n \tcomparison to a non-zero operand.\n \tUse (clobber (scratch)) for first insn if the gpr output is not needed.\n \n+\t* config/epiphany/epiphany.md (<insn_opname>v2si3):\n+\tUse gen_addsi3_i / gen_subsi3_i.\n+\n 2013-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/34949"}, {"sha": "7b63ef25da6ce38f3d498c0ab09d2b30dddbff54", "filename": "gcc/config/epiphany/epiphany.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093ac0a5f114589ef26472c88b9f56ce3f2792ad/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093ac0a5f114589ef26472c88b9f56ce3f2792ad/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.md?ref=093ac0a5f114589ef26472c88b9f56ce3f2792ad", "patch": "@@ -2429,6 +2429,11 @@\n   [(plus \"add\") (minus \"sub\") (mult \"mul\") (div \"div\")\n    (and \"and\") (ior \"ior\") (xor \"xor\")])\n \n+; The addsi3 / subsi3 do checks that we don't want when splitting V2SImode\n+; operations into two SImode operations.\n+(define_code_attr si_pattern_suffix\n+  [(plus \"_i\") (minus \"_i\") (and \"\") (ior \"\") (xor \"\")])\n+\n ; You might think that this would work better as a define_expand, but\n ; again lower_subreg pessimizes the code if it sees indiviudual operations.\n ; We need to keep inputs and outputs as register pairs if we want to\n@@ -2455,8 +2460,8 @@\n     o1h = copy_to_mode_reg (SImode, o1h);\n   if (reg_overlap_mentioned_p (o0l, o2h))\n     o2h = copy_to_mode_reg (SImode, o2h);\n-  emit_insn (gen_<insn_opname>si3 (o0l, o1l, o2l));\n-  emit_insn (gen_<insn_opname>si3 (o0h, o1h, o2h));\n+  emit_insn (gen_<insn_opname>si3<si_pattern_suffix> (o0l, o1l, o2l));\n+  emit_insn (gen_<insn_opname>si3<si_pattern_suffix> (o0h, o1h, o2h));\n   DONE;\n }\n   [(set_attr \"length\" \"8\")])"}]}