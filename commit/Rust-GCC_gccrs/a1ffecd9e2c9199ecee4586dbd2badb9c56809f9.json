{"sha": "a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmZmVjZDllMmM5MTk5ZWNlZTQ1ODZkYmQyYmFkYjljNTY4MDlmOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-05-07T14:42:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-05-07T14:42:29Z"}, "message": "sysv4.h (SUBTARGET_SWITCHES): Add -mwindiss.\n\n\t* config/rs6000/sysv4.h (SUBTARGET_SWITCHES): Add -mwindiss.\n\t(LINK_START_SPEC): Handle it.\n\t(LINK_OS_SPEC): Likewise.\n\t(CPP_SPEC): Likewise.\n\t(STARTFILE_SPEC): Likewise.\n\t(LIB_SPEC): Likewise.\n\t(ENDFILE_SPEC): Likewise.  Do not assume crtsavres.o is used on\n\tall platforms.\n\t(CRTSAVRES_DEFAULT_SPEC): New macro.\n\t(LIB_WINDISS_SPEC): New macro.\n\t(CPP_OS_WINDISS_SPEC): Likewise.\n\t(STARTFILE_WINDISS_SPEC): Likewise.\n\t(ENDFILE_WINDISS_SPEC): Likewise.\n\t(LINK_START_WINDISS_SPEC): Likewise.\n\t(LINK_OS_WINDISS_SPEC): Likewise.\n\t* config/rs6000/windiss.h: New file.\n\nFrom-SVN: r53257", "tree": {"sha": "3e58cb5ef7301565e15c3a381db3d791e5bb8bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e58cb5ef7301565e15c3a381db3d791e5bb8bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/comments", "author": null, "committer": null, "parents": [{"sha": "df966bffc06447c172461653038fbd660dc7fed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df966bffc06447c172461653038fbd660dc7fed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df966bffc06447c172461653038fbd660dc7fed2"}], "stats": {"total": 149, "additions": 132, "deletions": 17}, "files": [{"sha": "2671b48b4cca5f8392e6e1baca233f6c5832d9ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "patch": "@@ -1,3 +1,22 @@\n+2002-05-07  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/rs6000/sysv4.h (SUBTARGET_SWITCHES): Add -mwindiss.\n+\t(LINK_START_SPEC): Handle it.\n+\t(LINK_OS_SPEC): Likewise.\n+\t(CPP_SPEC): Likewise.\n+\t(STARTFILE_SPEC): Likewise.\n+\t(LIB_SPEC): Likewise.\n+\t(ENDFILE_SPEC): Likewise.  Do not assume crtsavres.o is used on\n+\tall platforms.\n+\t(CRTSAVRES_DEFAULT_SPEC): New macro.\n+\t(LIB_WINDISS_SPEC): New macro.\n+\t(CPP_OS_WINDISS_SPEC): Likewise.\n+\t(STARTFILE_WINDISS_SPEC): Likewise.\n+\t(ENDFILE_WINDISS_SPEC): Likewise.\n+\t(LINK_START_WINDISS_SPEC): Likewise.\n+\t(LINK_OS_WINDISS_SPEC): Likewise.\n+\t* config/rs6000/windiss.h: New file.\n+\t\n 2002-05-07  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.c (bdesc_2arg): Fix vmax typos."}, {"sha": "cf0c6682ce8eccb9facd6c4ee3d1832e65b9cab3", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 64, "deletions": 17, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "patch": "@@ -152,6 +152,7 @@ extern int g_switch_set;\t\t/* Whether -G xx was passed.  */\n   { \"emb\",\t\t 0,\t\t\t\t\t\t\\\n     N_(\"Set the PPC_EMB bit in the ELF flags header\") },\t\t\\\n   { \"vxworks\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n+  { \"windiss\",           0, N_(\"Use the WindISS simulator\") },          \\\n   { \"shlib\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n   EXTRA_SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n   { \"newlib\",\t\t 0, N_(\"no description yet\") },\n@@ -943,12 +944,14 @@ do {\t\t\t\t\t\t\\\n %{myellowknife: %(link_start_yellowknife) } \\\n %{mmvme: %(link_start_mvme) } \\\n %{msim: %(link_start_sim) } \\\n+%{mwindiss: %(link_start_windiss) } \\\n %{mcall-freebsd: %(link_start_freebsd) } \\\n %{mcall-linux: %(link_start_linux) } \\\n %{mcall-gnu: %(link_start_gnu) } \\\n %{mcall-netbsd: %(link_start_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-gnu: \\\n-\t%{!mcall-netbsd: %{!mcall-freebsd: %(link_start_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd:   \\\n+         %{!mcall-freebsd: %(link_start_default) }}}}}}}}}\"\n \n #define LINK_START_DEFAULT_SPEC \"\"\n \n@@ -1000,11 +1003,14 @@ do {\t\t\t\t\t\t\\\n %{myellowknife: %(link_os_yellowknife) } \\\n %{mmvme: %(link_os_mvme) } \\\n %{msim: %(link_os_sim) } \\\n+%{mwindiss: %(link_os_windiss) } \\\n %{mcall-freebsd: %(link_os_freebsd) } \\\n %{mcall-linux: %(link_os_linux) } \\\n %{mcall-gnu: %(link_os_gnu) } \\\n %{mcall-netbsd: %(link_os_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(link_os_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: \\\n+         %{!mcall-netbsd: %(link_os_default) }}}}}}}}}\"\n \n #define LINK_OS_DEFAULT_SPEC \"\"\n \n@@ -1064,11 +1070,14 @@ do {\t\t\t\t\t\t\\\n %{myellowknife: %(cpp_os_yellowknife) } \\\n %{mmvme: %(cpp_os_mvme) } \\\n %{msim: %(cpp_os_sim) } \\\n+%{mwindiss: %(cpp_os_windiss) } \\\n %{mcall-freebsd: %(cpp_os_freebsd) } \\\n %{mcall-linux: %(cpp_os_linux) } \\\n %{mcall-gnu: %(cpp_os_gnu) } \\\n %{mcall-netbsd: %(cpp_os_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(cpp_os_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: \\\n+         %{!mcall-netbsd: %(cpp_os_default) }}}}}}}}}\"\n \n #define\tCPP_OS_DEFAULT_SPEC \"\"\n \n@@ -1079,11 +1088,14 @@ do {\t\t\t\t\t\t\\\n %{myellowknife: %(startfile_yellowknife) } \\\n %{mmvme: %(startfile_mvme) } \\\n %{msim: %(startfile_sim) } \\\n+%{mwindiss: %(startfile_windiss) } \\\n %{mcall-freebsd: %(startfile_freebsd) } \\\n %{mcall-linux: %(startfile_linux) } \\\n %{mcall-gnu: %(startfile_gnu) } \\\n %{mcall-netbsd: %(startfile_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(startfile_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: \\\n+         %{!mcall-netbsd: %(startfile_default) }}}}}}}}}\"\n \n #define\tSTARTFILE_DEFAULT_SPEC \"\"\n \n@@ -1094,27 +1106,36 @@ do {\t\t\t\t\t\t\\\n %{myellowknife: %(lib_yellowknife) } \\\n %{mmvme: %(lib_mvme) } \\\n %{msim: %(lib_sim) } \\\n+%{mwindiss: %(lib_windiss) } \\\n %{mcall-freebsd: %(lib_freebsd) } \\\n %{mcall-linux: %(lib_linux) } \\\n %{mcall-gnu: %(lib_gnu) } \\\n %{mcall-netbsd: %(lib_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(lib_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: \\\n+         %{!mcall-netbsd: %(lib_default) }}}}}}}}}\"\n \n #define LIB_DEFAULT_SPEC \"\"\n \n /* Override svr4.h definition.  */\n #undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"crtsavres.o%s \\\n-%{mads: %(endfile_ads)} \\\n-%{myellowknife: %(endfile_yellowknife)} \\\n-%{mmvme: %(endfile_mvme)} \\\n-%{msim: %(endfile_sim)} \\\n-%{mcall-freebsd: %(endfile_freebsd) } \\\n-%{mcall-linux: %(endfile_linux) } \\\n-%{mcall-gnu: %(endfile_gnu) } \\\n-%{mcall-netbsd: %(endfile_netbsd) } \\\n-%{mvxworks: %(endfile_vxworks) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %{!mvxworks: %(endfile_default) }}}}}}}}}\"\n+#define\tENDFILE_SPEC \"\\\n+%{mads: crtsavres.o%s %(endfile_ads)} \\\n+%{myellowknife: crtsavres.o%s %(endfile_yellowknife)} \\\n+%{mmvme: crtsavres.o%s %(endfile_mvme)} \\\n+%{msim: crtsavres.o%s %(endfile_sim)} \\\n+%{mwindiss: %(endfile_windiss)} \\\n+%{mcall-freebsd: crtsavres.o%s %(endfile_freebsd) } \\\n+%{mcall-linux: crtsavres.o%s %(endfile_linux) } \\\n+%{mcall-gnu: crtsavres.o%s %(endfile_gnu) } \\\n+%{mcall-netbsd: crtsavres.o%s %(endfile_netbsd) } \\\n+%{mvxworks: crtsavres.o%s %(endfile_vxworks) } \\\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mwindiss: \\\n+         %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: \\\n+         %{!mcall-netbsd: %{!mvxworks: %(crtsavres_default) \\\n+                                       %(endfile_default) }}}}}}}}}}\"\n+\n+#define CRTSAVRES_DEFAULT_SPEC \"crtsavres.o%s\"\n \n #define\tENDFILE_DEFAULT_SPEC \"\"\n \n@@ -1326,6 +1347,25 @@ ncrtn.o%s\"\n %{mcpu=823: -DCPU=PPC603} \\\n %{mcpu=860: -DCPU=PPC603}\"\n \n+/* WindISS support.  */\n+\n+#define LIB_WINDISS_SPEC \"--start-group -li -lcfp -lwindiss -lram -limpl -limpfp --end-group\"\n+\n+#define CPP_OS_WINDISS_SPEC \"\\\n+-D__rtasim \\\n+-D__EABI__ \\\n+-D__ppc \\\n+%{!msoft-float: -D__hardfp} \\\n+\"\n+\n+#define STARTFILE_WINDISS_SPEC \"crt0.o%s crtbegin.o%s\"\n+\n+#define ENDFILE_WINDISS_SPEC \"crtend.o%s\"\n+\n+#define LINK_START_WINDISS_SPEC \"\"\n+\n+#define LINK_OS_WINDISS_SPEC \"\"\n+\n /* Define any extra SPECS that the compiler needs to generate.  */\n /* Override rs6000.h definition.  */\n #undef\tSUBTARGET_EXTRA_SPECS\n@@ -1334,6 +1374,7 @@ ncrtn.o%s\"\n   { \"cpp_sysv_default\",\t\tCPP_SYSV_DEFAULT_SPEC },\t\t\\\n   { \"cpp_endian_default\",\tCPP_ENDIAN_DEFAULT_SPEC },\t\t\\\n   { \"cpp_endian\",\t\tCPP_ENDIAN_SPEC },\t\t\t\\\n+  { \"crtsavres_default\",        CRTSAVRES_DEFAULT_SPEC },              \\\n   { \"lib_ads\",\t\t\tLIB_ADS_SPEC },\t\t\t\t\\\n   { \"lib_yellowknife\",\t\tLIB_YELLOWKNIFE_SPEC },\t\t\t\\\n   { \"lib_mvme\",\t\t\tLIB_MVME_SPEC },\t\t\t\\\n@@ -1343,6 +1384,7 @@ ncrtn.o%s\"\n   { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n   { \"lib_netbsd\",\t\tLIB_NETBSD_SPEC },\t\t\t\\\n   { \"lib_vxworks\",\t\tLIB_VXWORKS_SPEC },\t\t\t\\\n+  { \"lib_windiss\",              LIB_WINDISS_SPEC },                     \\\n   { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\t\\\n   { \"startfile_ads\",\t\tSTARTFILE_ADS_SPEC },\t\t\t\\\n   { \"startfile_yellowknife\",\tSTARTFILE_YELLOWKNIFE_SPEC },\t\t\\\n@@ -1353,6 +1395,7 @@ ncrtn.o%s\"\n   { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n   { \"startfile_netbsd\",\t\tSTARTFILE_NETBSD_SPEC },\t\t\\\n   { \"startfile_vxworks\",\tSTARTFILE_VXWORKS_SPEC },\t\t\\\n+  { \"startfile_windiss\",        STARTFILE_WINDISS_SPEC },               \\\n   { \"startfile_default\",\tSTARTFILE_DEFAULT_SPEC },\t\t\\\n   { \"endfile_ads\",\t\tENDFILE_ADS_SPEC },\t\t\t\\\n   { \"endfile_yellowknife\",\tENDFILE_YELLOWKNIFE_SPEC },\t\t\\\n@@ -1363,6 +1406,7 @@ ncrtn.o%s\"\n   { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n   { \"endfile_netbsd\",\t\tENDFILE_NETBSD_SPEC },\t\t\t\\\n   { \"endfile_vxworks\",\t\tENDFILE_VXWORKS_SPEC },\t\t\t\\\n+  { \"endfile_windiss\",          ENDFILE_WINDISS_SPEC },                 \\\n   { \"endfile_default\",\t\tENDFILE_DEFAULT_SPEC },\t\t\t\\\n   { \"link_path\",\t\tLINK_PATH_SPEC },\t\t\t\\\n   { \"link_shlib\",\t\tLINK_SHLIB_SPEC },\t\t\t\\\n@@ -1377,6 +1421,7 @@ ncrtn.o%s\"\n   { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n   { \"link_start_netbsd\",\tLINK_START_NETBSD_SPEC },\t\t\\\n   { \"link_start_vxworks\",\tLINK_START_VXWORKS_SPEC },\t\t\\\n+  { \"link_start_windiss\",\tLINK_START_WINDISS_SPEC },\t\t\\\n   { \"link_start_default\",\tLINK_START_DEFAULT_SPEC },\t\t\\\n   { \"link_os\",\t\t\tLINK_OS_SPEC },\t\t\t\t\\\n   { \"link_os_ads\",\t\tLINK_OS_ADS_SPEC },\t\t\t\\\n@@ -1388,6 +1433,7 @@ ncrtn.o%s\"\n   { \"link_os_gnu\",\t\tLINK_OS_GNU_SPEC },\t\t\t\\\n   { \"link_os_netbsd\",\t\tLINK_OS_NETBSD_SPEC },\t\t\t\\\n   { \"link_os_vxworks\",\t\tLINK_OS_VXWORKS_SPEC },\t\t\t\\\n+  { \"link_os_windiss\",\t\tLINK_OS_WINDISS_SPEC },\t\t\t\\\n   { \"link_os_default\",\t\tLINK_OS_DEFAULT_SPEC },\t\t\t\\\n   { \"cc1_endian_big\",\t\tCC1_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cc1_endian_little\",\tCC1_ENDIAN_LITTLE_SPEC },\t\t\\\n@@ -1405,6 +1451,7 @@ ncrtn.o%s\"\n   { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\\n   { \"cpp_os_netbsd\",\t\tCPP_OS_NETBSD_SPEC },\t\t\t\\\n   { \"cpp_os_vxworks\",\t\tCPP_OS_VXWORKS_SPEC },\t\t\t\\\n+  { \"cpp_os_windiss\",           CPP_OS_WINDISS_SPEC },                  \\\n   { \"cpp_os_default\",\t\tCPP_OS_DEFAULT_SPEC },\n \n /* Define this macro as a C expression for the initializer of an"}, {"sha": "32f925aba3595ca8993e59928ae70c307ce1864d", "filename": "gcc/config/rs6000/windiss.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2Fconfig%2Frs6000%2Fwindiss.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffecd9e2c9199ecee4586dbd2badb9c56809f9/gcc%2Fconfig%2Frs6000%2Fwindiss.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fwindiss.h?ref=a1ffecd9e2c9199ecee4586dbd2badb9c56809f9", "patch": "@@ -0,0 +1,49 @@\n+/* Support for GCC on PowerPC using WindISS simulator.\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Contributed by CodeSourcery, LLC. \n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (PowerPC WindISS)\");\n+\n+#undef LIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_windiss)\"\n+\n+#undef STARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_windiss)\"\n+\n+#undef ENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_windiss)\"\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_windiss)\"\n+\n+#undef\tLINK_OS_DEFAULT_SPEC\n+#define LINK_OS_DEFAULT_SPEC \"%(link_os_windiss)\"\n+\n+#undef CRTSAVRES_DEFAULT_SPEC\n+#define CRTSAVRES_DEFAULT_SPEC \"\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"short unsigned int\"\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 16\n+\n+#define NO_IMPLICIT_EXTERN_C"}]}