{"sha": "c97de76414e82de75ea376515c1afde318788213", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk3ZGU3NjQxNGU4MmRlNzVlYTM3NjUxNWMxYWZkZTMxODc4ODIxMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-03-27T21:35:51Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-27T21:35:51Z"}, "message": "re PR ipa/65588 (lto1: internal compiler error: Segmentation fault)\n\n\n\tPR ipa/65588\n\t* symtab.c (symtab_node::get_partitioning_class): Register vars\n\tare duplicated.\n\t* varpool.c (symbol_table::output_variables) Do not assemble unefined\n\tdecls for non-symbols.\n\nFrom-SVN: r221745", "tree": {"sha": "3e6c2a9aeff2c0bdf9d4fd793f2f02c97dfb2551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e6c2a9aeff2c0bdf9d4fd793f2f02c97dfb2551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c97de76414e82de75ea376515c1afde318788213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97de76414e82de75ea376515c1afde318788213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c97de76414e82de75ea376515c1afde318788213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97de76414e82de75ea376515c1afde318788213/comments", "author": null, "committer": null, "parents": [{"sha": "62021f64e550290e77a8e56270617a0a4ba673da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62021f64e550290e77a8e56270617a0a4ba673da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62021f64e550290e77a8e56270617a0a4ba673da"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "554d8c6833512089b52eb2771a5996365a8ca072", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97de76414e82de75ea376515c1afde318788213/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97de76414e82de75ea376515c1afde318788213/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c97de76414e82de75ea376515c1afde318788213", "patch": "@@ -1,3 +1,11 @@\n+2015-03-27  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65588\n+\t* symtab.c (symtab_node::get_partitioning_class): Register vars\n+\tare duplicated.\n+\t* varpool.c (symbol_table::output_variables) Do not assemble unefined\n+\tdecls for non-symbols.\n+\n 2015-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/65248"}, {"sha": "eb41d62a96979ff8d7618e2782c3e78fb3130e36", "filename": "gcc/symtab.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97de76414e82de75ea376515c1afde318788213/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97de76414e82de75ea376515c1afde318788213/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=c97de76414e82de75ea376515c1afde318788213", "patch": "@@ -1689,6 +1689,8 @@ symtab_node::get_partitioning_class (void)\n          objects that can not be duplicated across partitions.  */\n       if (DECL_IN_CONSTANT_POOL (decl))\n \treturn SYMBOL_DUPLICATE;\n+      if (DECL_HARD_REGISTER (decl))\n+\treturn SYMBOL_DUPLICATE;\n       gcc_checking_assert (vnode->definition);\n     }\n   /* Functions that are cloned may stay in callgraph even if they are unused."}, {"sha": "76148a584b32da7f64b30673982ed31634b4b862", "filename": "gcc/varpool.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97de76414e82de75ea376515c1afde318788213/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97de76414e82de75ea376515c1afde318788213/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=c97de76414e82de75ea376515c1afde318788213", "patch": "@@ -737,7 +737,9 @@ symbol_table::output_variables (void)\n   timevar_push (TV_VAROUT);\n \n   FOR_EACH_VARIABLE (node)\n-    if (!node->definition)\n+    if (!node->definition\n+\t&& !DECL_HAS_VALUE_EXPR_P (node->decl)\n+ \t&& !DECL_HARD_REGISTER (node->decl))\n       assemble_undefined_decl (node->decl);\n   FOR_EACH_DEFINED_VARIABLE (node)\n     {"}]}