{"sha": "8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4ZGU1ZmMxMGQwYzViYzY1OGRlN2YyZGZjNzVjMzNiMWZiNTQxZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-05-03T18:06:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-05-03T18:06:26Z"}, "message": "cppexp.c (op_t): Make an int.\n\n        * cppexp.c (op_t): Make an int.\n\n        * rtlanal.c (dead_or_set_regno_p): Remove unused variable.\n\n        * varasm.c (initializer_constant_valid_p): Fix parenthesis.\n\n        * gensupport.c (process_rtx): Fix macros used.\n\nFrom-SVN: r33635", "tree": {"sha": "4be9da45ea1d216d30d49aa3a905cf546ff8f56e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4be9da45ea1d216d30d49aa3a905cf546ff8f56e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/comments", "author": null, "committer": null, "parents": [{"sha": "8d6fe133c4e85680d3683327340662540aac73f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6fe133c4e85680d3683327340662540aac73f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6fe133c4e85680d3683327340662540aac73f5"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "6c83c3d5ba3ae548c11f2591824386e1772fa07a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "patch": "@@ -1,3 +1,13 @@\n+2000-05-03  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* cppexp.c (op_t): Make an int.\n+\n+\t* rtlanal.c (dead_or_set_regno_p): Remove unused variable.\n+\n+\t* varasm.c (initializer_constant_valid_p): Fix parenthesis.\n+\n+\t* gensupport.c (process_rtx): Fix macros used.\n+\n 2000-05-03  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (propagate_one_insn): Also don't PROP_REG_INFO for"}, {"sha": "dd7f431d9f3464ef252754a489216c0316850aef", "filename": "gcc/cppexp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "patch": "@@ -68,7 +68,7 @@ Boston, MA 02111-1307, USA.  */\n    number with SUM's sign, where A, B, and SUM are all C integers.  */\n #define possible_sum_sign(a, b, sum) ((((a) ^ (b)) | ~ ((a) ^ (sum))) < 0)\n \n-typedef short op_t;\n+typedef int op_t;\n \n static void integer_overflow PARAMS ((cpp_reader *));\n static HOST_WIDEST_INT left_shift PARAMS ((cpp_reader *, HOST_WIDEST_INT,"}, {"sha": "35ef018aaba881499dab98997235ebc87128fd81", "filename": "gcc/gensupport.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "patch": "@@ -92,8 +92,8 @@ process_rtx (desc)\n   \n       /* Create a split with values from the insn_and_split. */\n       rtx split = rtx_alloc (DEFINE_SPLIT);\n-      XVEC (split, 0) = copy_rtx (XVEC (*desc, 1));\n-      remove_constraints (XVEC (split, 0));\n+      XEXP (split, 0) = copy_rtx (XEXP (*desc, 1));\n+      remove_constraints (XEXP (split, 0));\n       split_cond = XSTR (split, 1) = XSTR (*desc, 4);\n   \n       /* If the split condition starts with \"&&\", append it to the\n@@ -113,7 +113,7 @@ process_rtx (desc)\n   \n       /* Fix up the DEFINE_INSN.  */\n       PUT_CODE (*desc, DEFINE_INSN);\n-      XVEC (*desc, 4) = XSTR (*desc, 7);\n+      XVEC (*desc, 4) = XVEC (*desc, 7);\n   \n       /* Return the DEFINE_INSN part, and put the DEFINE_SPLIT\n          in the queue.  */"}, {"sha": "2f9b376bac0ae6047b0fc55b2d403a67a10bbabd", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "patch": "@@ -1231,7 +1231,7 @@ dead_or_set_regno_p (insn, test_regno)\n      unsigned int test_regno;\n {\n   unsigned int regno, endregno;\n-  rtx link, pattern;\n+  rtx pattern;\n \n   /* See if there is a death note for something that includes TEST_REGNO.  */\n   if (find_regno_note (insn, REG_DEAD, test_regno))"}, {"sha": "88bfec0cb190d1fe4d5d966f0988a529e08f826f", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8c8de5fc10d0c5bc658de7f2dfc75c33b1fb541d", "patch": "@@ -4068,7 +4068,7 @@ initializer_constant_valid_p (value, endtype)\n       return null_pointer_node;\n \n     case ADDR_EXPR:\n-      return staticp (TREE_OPERAND (value, 0) ? TREE_OPERAND (value, 0) : 0);\n+      return staticp (TREE_OPERAND (value, 0)) ? TREE_OPERAND (value, 0) : 0;\n \n     case NON_LVALUE_EXPR:\n       return initializer_constant_valid_p (TREE_OPERAND (value, 0), endtype);"}]}