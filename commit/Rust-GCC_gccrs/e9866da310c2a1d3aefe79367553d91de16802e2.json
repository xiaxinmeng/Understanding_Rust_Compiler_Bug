{"sha": "e9866da310c2a1d3aefe79367553d91de16802e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk4NjZkYTMxMGMyYTFkM2FlZmU3OTM2NzU1M2Q5MWRlMTY4MDJlMg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-01-17T21:43:40Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-01-17T21:43:40Z"}, "message": "(pedantic_non_lvalue): Check pedantic_lvalues instead of pedantic.\n\nFrom-SVN: r8765", "tree": {"sha": "3ec50c49502d5dcabc7257522a1bae299b219f7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ec50c49502d5dcabc7257522a1bae299b219f7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9866da310c2a1d3aefe79367553d91de16802e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9866da310c2a1d3aefe79367553d91de16802e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9866da310c2a1d3aefe79367553d91de16802e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9866da310c2a1d3aefe79367553d91de16802e2/comments", "author": null, "committer": null, "parents": [{"sha": "19cad249411aa4dc3cb166e869bad686c1fb5923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19cad249411aa4dc3cb166e869bad686c1fb5923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19cad249411aa4dc3cb166e869bad686c1fb5923"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c17c1d70a5e4c7df59bcfa18c8f2c6c998553576", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9866da310c2a1d3aefe79367553d91de16802e2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9866da310c2a1d3aefe79367553d91de16802e2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e9866da310c2a1d3aefe79367553d91de16802e2", "patch": "@@ -1562,14 +1562,19 @@ non_lvalue (x)\n   return result;\n }\n \n+/* Nonzero means lvalues are limited to those valid in pedantic ANSI C.\n+   Zero means allow extended lvalues.  */\n+\n+int pedantic_lvalues;\n+\n /* When pedantic, return an expr equal to X but certainly not valid as a\n    pedantic lvalue.  Otherwise, return X.  */\n \n tree\n pedantic_non_lvalue (x)\n      tree x;\n {\n-  if (pedantic)\n+  if (pedantic_lvalues)\n     return non_lvalue (x);\n   else\n     return x;"}]}