{"sha": "47a4949a8ea5f52c72cba00912fd652c57197eae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhNDk0OWE4ZWE1ZjUyYzcyY2JhMDA5MTJmZDY1MmM1NzE5N2VhZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2006-07-14T16:43:27Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2006-07-14T16:43:27Z"}, "message": "linux-unwind.h (s390_fallback_frame_state): Detect signal frames correctly even when the signal was installed with...\n\n\t* config/s390/linux-unwind.h (s390_fallback_frame_state): Detect\n\tsignal frames correctly even when the signal was installed with\n\tsa_restorer set.\n\nFrom-SVN: r115448", "tree": {"sha": "debe851ba24d5899c3687e8620210d4c19b222af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/debe851ba24d5899c3687e8620210d4c19b222af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47a4949a8ea5f52c72cba00912fd652c57197eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a4949a8ea5f52c72cba00912fd652c57197eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a4949a8ea5f52c72cba00912fd652c57197eae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a4949a8ea5f52c72cba00912fd652c57197eae/comments", "author": null, "committer": null, "parents": [{"sha": "03471b3fcd6dd21855ba0ed90b7963d90904b08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03471b3fcd6dd21855ba0ed90b7963d90904b08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03471b3fcd6dd21855ba0ed90b7963d90904b08b"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "4cdb0acd12b381284068e05fe3a6012539444cee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a4949a8ea5f52c72cba00912fd652c57197eae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a4949a8ea5f52c72cba00912fd652c57197eae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47a4949a8ea5f52c72cba00912fd652c57197eae", "patch": "@@ -1,3 +1,9 @@\n+2006-07-14  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/linux-unwind.h (s390_fallback_frame_state): Detect\n+\tsignal frames correctly even when the signal was installed with\n+\tsa_restorer set.\n+\n 2006-07-14  Carlos O'Donell  <carlos@codesoucery.com>\n \n "}, {"sha": "221a5d4bc0a2bca579542eec7978f81c0d2997f6", "filename": "gcc/config/s390/linux-unwind.h", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a4949a8ea5f52c72cba00912fd652c57197eae/gcc%2Fconfig%2Fs390%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a4949a8ea5f52c72cba00912fd652c57197eae/gcc%2Fconfig%2Fs390%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux-unwind.h?ref=47a4949a8ea5f52c72cba00912fd652c57197eae", "patch": "@@ -51,17 +51,33 @@ s390_fallback_frame_state (struct _Unwind_Context *context,\n   } __attribute__ ((__aligned__ (8))) sigregs_;\n \n   sigregs_ *regs;\n-  int *signo = NULL;\n+  int *signo;\n \n   /* svc $__NR_sigreturn or svc $__NR_rt_sigreturn  */\n   if (pc[0] != 0x0a || (pc[1] != 119 && pc[1] != 173))\n     return _URC_END_OF_STACK;\n \n+  /* Legacy frames:\n+       old signal mask (8 bytes)\n+       pointer to sigregs (8 bytes) - points always to next location\n+       sigregs\n+       retcode\n+     This frame layout was used on kernels < 2.6.9 for non-RT frames,\n+     and on kernels < 2.4.13 for RT frames as well.  Note that we need\n+     to look at RA to detect this layout -- this means that if you use\n+     sa_restorer to install a different signal restorer on a legacy\n+     kernel, unwinding from signal frames will not work.  */\n+  if (context->ra == context->cfa + 16 + sizeof (sigregs_))\n+    {\n+      regs = (sigregs_ *)(context->cfa + 16);\n+      signo = NULL;\n+    }\n+\n   /* New-style RT frame:\n      retcode + alignment (8 bytes)\n      siginfo (128 bytes)\n      ucontext (contains sigregs)  */\n-  if (context->ra == context->cfa)\n+  else if (pc[1] == 173 /* __NR_rt_sigreturn */)\n     {\n       struct ucontext_\n       {\n@@ -75,18 +91,13 @@ s390_fallback_frame_state (struct _Unwind_Context *context,\n       signo = context->cfa + sizeof(long);\n     }\n \n-  /* Old-style RT frame and all non-RT frames:\n+  /* New-style non-RT frame:\n      old signal mask (8 bytes)\n-     pointer to sigregs  */\n+     pointer to sigregs (followed by signal number)  */\n   else\n     {\n       regs = *(sigregs_ **)(context->cfa + 8);\n-\n-      /* Recent kernels store the signal number immediately after\n-\t the sigregs; old kernels have the return trampoline at\n-\t this location.  */\n-      if ((void *)(regs + 1) != context->ra)\n-\tsigno = (int *)(regs + 1);\n+      signo = (int *)(regs + 1);\n     }\n \n   new_cfa = regs->gprs[15] + 16*sizeof(long) + 32;"}]}