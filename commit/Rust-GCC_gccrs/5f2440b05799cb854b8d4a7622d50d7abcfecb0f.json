{"sha": "5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyNDQwYjA1Nzk5Y2I4NTRiOGQ0YTc2MjJkNTBkN2FiY2ZlY2IwZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-09T20:39:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-09T20:39:14Z"}, "message": "re PR c++/84076 (Warning about objects through POD mistakenly claims the object is a pointer)\n\n\tPR c++/84076\n\t* call.c (convert_arg_to_ellipsis): Instead of cp_build_addr_expr\n\tbuild ADDR_EXPR with REFERENCE_TYPE.\n\t(build_over_call): For purposes of check_function_arguments, if\n\targarray[j] is ADDR_EXPR with REFERENCE_TYPE created above, use\n\tits operand rather than the argument itself.\n\n\t* g++.dg/warn/Wformat-2.C: New test.\n\nFrom-SVN: r258397", "tree": {"sha": "07f5ca17c8a0e16251dc95db53e4faea704e967a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07f5ca17c8a0e16251dc95db53e4faea704e967a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d9a9a90ce25d3b2748df78e4ae05e0c74d0b671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d9a9a90ce25d3b2748df78e4ae05e0c74d0b671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d9a9a90ce25d3b2748df78e4ae05e0c74d0b671"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "29121cebc3058531fb2cfe6ba74f33714ca78168", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "patch": "@@ -1,3 +1,13 @@\n+2018-03-09  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/84076\n+\t* call.c (convert_arg_to_ellipsis): Instead of cp_build_addr_expr\n+\tbuild ADDR_EXPR with REFERENCE_TYPE.\n+\t(build_over_call): For purposes of check_function_arguments, if\n+\targarray[j] is ADDR_EXPR with REFERENCE_TYPE created above, use\n+\tits operand rather than the argument itself.\n+\n 2018-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84724"}, {"sha": "17cd1c4f63e313cbbb6ea7c6a95f20ed9bfa46b8", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "patch": "@@ -7209,7 +7209,7 @@ convert_arg_to_ellipsis (tree arg, tsubst_flags_t complain)\n \t\t     \"passing objects of non-trivially-copyable \"\n \t\t     \"type %q#T through %<...%> is conditionally supported\",\n \t\t     arg_type);\n-\t  return cp_build_addr_expr (arg, complain);\n+\t  return build1 (ADDR_EXPR, build_reference_type (arg_type), arg);\n \t}\n       /* Build up a real lvalue-to-rvalue conversion in case the\n \t copy constructor is trivial but not callable.  */\n@@ -8018,7 +8018,15 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n       tree *fargs = (!nargs ? argarray\n \t\t\t    : (tree *) alloca (nargs * sizeof (tree)));\n       for (j = 0; j < nargs; j++)\n-\tfargs[j] = maybe_constant_value (argarray[j]);\n+\t{\n+\t  /* For -Wformat undo the implicit passing by hidden reference\n+\t     done by convert_arg_to_ellipsis.  */\n+\t  if (TREE_CODE (argarray[j]) == ADDR_EXPR\n+\t      && TREE_CODE (TREE_TYPE (argarray[j])) == REFERENCE_TYPE)\n+\t    fargs[j] = TREE_OPERAND (argarray[j], 0);\n+\t  else\n+\t    fargs[j] = maybe_constant_value (argarray[j]);\n+\t}\n \n       warned_p = check_function_arguments (input_location, fn, TREE_TYPE (fn),\n \t\t\t\t\t   nargs, fargs, NULL);"}, {"sha": "a8ef381211aee590b3061349e6bad8d86cca6aa4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "patch": "@@ -1,5 +1,8 @@\n 2018-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/84076\n+\t* g++.dg/warn/Wformat-2.C: New test.\n+\n \tPR c++/84767\n \t* g++.dg/ext/vla18.C: New test.\n "}, {"sha": "ff8b54b48998df90dccdf13e796c5b292973ef52", "filename": "gcc/testsuite/g++.dg/warn/Wformat-2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2440b05799cb854b8d4a7622d50d7abcfecb0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-2.C?ref=5f2440b05799cb854b8d4a7622d50d7abcfecb0f", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/84076\n+// { dg-do compile }\n+// { dg-options \"-Wformat\" }\n+\n+struct S { ~S (); };\n+struct T { T (); T (const T &); };\n+\n+void\n+foo ()\n+{\n+  S s;\n+  T t;\n+  __builtin_printf (\"%s\\n\", s);\t// { dg-warning \"format '%s' expects argument of type 'char\\\\*', but argument 2 has type 'S'\" }\n+  __builtin_printf (\"%s\\n\", t);\t// { dg-warning \"format '%s' expects argument of type 'char\\\\*', but argument 2 has type 'T'\" }\n+  __builtin_printf (\"%s\\n\", &s);// { dg-warning \"format '%s' expects argument of type 'char\\\\*', but argument 2 has type 'S\\\\*'\" }\n+  __builtin_printf (\"%s\\n\", &t);// { dg-warning \"format '%s' expects argument of type 'char\\\\*', but argument 2 has type 'T\\\\*'\" }\n+}"}]}