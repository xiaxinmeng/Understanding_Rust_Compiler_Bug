{"sha": "8ee38286c3f26eeacf79090d5a75643a2a1c0697", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlMzgyODZjM2YyNmVlYWNmNzkwOTBkNWE3NTY0M2EyYTFjMDY5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-17T12:34:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-17T12:34:27Z"}, "message": "re PR tree-optimization/68951 (ICE in vect_update_misalignment_for_peel)\n\n2015-12-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68951\n\t* tree-vect-data-refs.c (vect_peeling_hash_get_lowest_cost):\n\tIgnore strided non-group accesses.\n\n\t* gcc.dg/torture/pr68951.c: New testcase.\n\nFrom-SVN: r231754", "tree": {"sha": "491852cb5e643b01414fc5a7b4ad464524b141eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/491852cb5e643b01414fc5a7b4ad464524b141eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee38286c3f26eeacf79090d5a75643a2a1c0697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee38286c3f26eeacf79090d5a75643a2a1c0697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee38286c3f26eeacf79090d5a75643a2a1c0697", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee38286c3f26eeacf79090d5a75643a2a1c0697/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a30c5ca4c15956697b2c78460be0a34811a2106e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a30c5ca4c15956697b2c78460be0a34811a2106e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a30c5ca4c15956697b2c78460be0a34811a2106e"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "46cf0b0862c09cdf25a862d24cc6f2aef672762b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ee38286c3f26eeacf79090d5a75643a2a1c0697", "patch": "@@ -1,3 +1,9 @@\n+2015-12-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68951\n+\t* tree-vect-data-refs.c (vect_peeling_hash_get_lowest_cost):\n+\tIgnore strided non-group accesses.\n+\n 2015-12-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* config/arc/arc.c (arc_loop_hazard): Don't convert the jump label"}, {"sha": "fafa8cc4dec07ca25e65d558bfa505b2a332db96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ee38286c3f26eeacf79090d5a75643a2a1c0697", "patch": "@@ -1,3 +1,8 @@\n+2015-12-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68951\n+\t* gcc.dg/torture/pr68951.c: New testcase.\n+\n 2015-12-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/67973"}, {"sha": "95c3c324279b4468bbc2421c0d7af1e90c545f30", "filename": "gcc/testsuite/gcc.dg/torture/pr68951.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68951.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68951.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68951.c?ref=8ee38286c3f26eeacf79090d5a75643a2a1c0697", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-w\" } */\n+\n+static int g_534[1][1];\n+int fn1()\n+{\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    g_534[i + 2][i] ^= 3;\n+  for (;;)\n+    ;\n+}"}, {"sha": "b039ff2bc2610b6610c442fd5ac423e5818cbd57", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee38286c3f26eeacf79090d5a75643a2a1c0697/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=8ee38286c3f26eeacf79090d5a75643a2a1c0697", "patch": "@@ -1215,6 +1215,12 @@ vect_peeling_hash_get_lowest_cost (_vect_peel_info **slot,\n           && GROUP_FIRST_ELEMENT (stmt_info) != stmt)\n         continue;\n \n+      /* Strided accesses perform only component accesses, alignment is\n+         irrelevant for them.  */\n+      if (STMT_VINFO_STRIDED_P (stmt_info)\n+\t  && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n+\tcontinue;\n+\n       save_misalignment = DR_MISALIGNMENT (dr);\n       vect_update_misalignment_for_peel (dr, elem->dr, elem->npeel);\n       vect_get_data_access_cost (dr, &inside_cost, &outside_cost,"}]}