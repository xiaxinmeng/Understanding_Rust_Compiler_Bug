{"sha": "78458962965e06a91c20511ab02f88195d3b6a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0NTg5NjI5NjVlMDZhOTFjMjA1MTFhYjAyZjg4MTk1ZDNiNmE5MQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-01-19T20:10:00Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-01-19T20:10:00Z"}, "message": "loop.c (loop_optimize): Allocate loop_info structure for each loop prior to calling scan_loop.\n\n\t* loop.c (loop_optimize): Allocate loop_info structure for each loop\n\tprior to calling scan_loop.\n\nFrom-SVN: r31508", "tree": {"sha": "d045be13d28bd70795112d00036097cd78a4960b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d045be13d28bd70795112d00036097cd78a4960b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78458962965e06a91c20511ab02f88195d3b6a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78458962965e06a91c20511ab02f88195d3b6a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78458962965e06a91c20511ab02f88195d3b6a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78458962965e06a91c20511ab02f88195d3b6a91/comments", "author": null, "committer": null, "parents": [{"sha": "eda44c7832aab6417df69d6ab57f422f63c2dd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda44c7832aab6417df69d6ab57f422f63c2dd0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda44c7832aab6417df69d6ab57f422f63c2dd0a"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "fff7083ba9540175aa52a2e675c43add08e86aa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78458962965e06a91c20511ab02f88195d3b6a91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78458962965e06a91c20511ab02f88195d3b6a91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78458962965e06a91c20511ab02f88195d3b6a91", "patch": "@@ -1,3 +1,8 @@\n+2000-01-20  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* loop.c (loop_optimize): Allocate loop_info structure for each loop\n+\tprior to calling scan_loop.\n+\n Wed Jan 19 19:54:38 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.c (prepare_scc_operands): Abort if no compare insn is available."}, {"sha": "b52b33a55e5936fc1364eb0b9a19996fe45d8772", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78458962965e06a91c20511ab02f88195d3b6a91/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78458962965e06a91c20511ab02f88195d3b6a91/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=78458962965e06a91c20511ab02f88195d3b6a91", "patch": "@@ -510,15 +510,21 @@ loop_optimize (f, dumpfile, unroll_p, bct_p)\n      this prevents low overhead loop instructions from being used.  */\n   indirect_jump_in_function = indirect_jump_in_function_p (f);\n \n-  /* Now scan the loops, last ones first, since this means inner ones are done\n-     before outer ones.  */\n+  /* Allocate and initialize auxiliary loop information.  */\n   for (i = max_loop_num - 1; i >= 0; i--)\n     {\n       struct loop *loop = &loops->array[i];\n \n       loop->info = (struct loop_info *) alloca (sizeof (struct loop_info));\n       memset (loop->info, 0, sizeof (struct loop_info));\n-      \n+    }\n+\n+  /* Now scan the loops, last ones first, since this means inner ones are done\n+     before outer ones.  */\n+  for (i = max_loop_num - 1; i >= 0; i--)\n+    {\n+      struct loop *loop = &loops->array[i];\n+\n       if (! loop->invalid && loop->end)\n \tscan_loop (loop, unroll_p, bct_p);\n     }"}]}