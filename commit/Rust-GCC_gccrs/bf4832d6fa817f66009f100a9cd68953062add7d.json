{"sha": "bf4832d6fa817f66009f100a9cd68953062add7d", "node_id": "C_kwDOANBUbNoAKGJmNDgzMmQ2ZmE4MTdmNjYwMDlmMTAwYTljZDY4OTUzMDYyYWRkN2Q", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-30T11:26:52Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-31T07:34:42Z"}, "message": "[nvptx] Fix ASM_SPEC workaround for sm_30\n\nNewer versions of CUDA no longer support sm_30, and nvptx-tools as\ncurrently doesn't handle that gracefully when verifying\n( https://github.com/MentorEmbedded/nvptx-tools/issues/30 ).\n\nThere's a --no-verify work-around in place in ASM_SPEC, but that one doesn't\nwork when using -Wa,--verify on the command line.\n\nUse a more robust workaround: verify using sm_35 when misa=sm_30 is specified\n(either implicitly or explicitly).\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n2022-03-30  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.h (ASM_SPEC): Use \"-m sm_35\" for -misa=sm_30.", "tree": {"sha": "273c372bde40f66ab1ffc53de1cd749cc29f9df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/273c372bde40f66ab1ffc53de1cd749cc29f9df9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf4832d6fa817f66009f100a9cd68953062add7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4832d6fa817f66009f100a9cd68953062add7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4832d6fa817f66009f100a9cd68953062add7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4832d6fa817f66009f100a9cd68953062add7d/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75f996e846d079251f3a6134617f0405c3ed535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75f996e846d079251f3a6134617f0405c3ed535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75f996e846d079251f3a6134617f0405c3ed535"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "3b06f33032fdb121c1dcb8877f1284c588def39b", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4832d6fa817f66009f100a9cd68953062add7d/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4832d6fa817f66009f100a9cd68953062add7d/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=bf4832d6fa817f66009f100a9cd68953062add7d", "patch": "@@ -29,10 +29,24 @@\n \n #define STARTFILE_SPEC \"%{mmainkernel:crt0.o}\"\n \n-/* Default needs to be in sync with default for misa in nvptx.opt.\n-   We add a default here to work around a hard-coded sm_30 default in\n-   nvptx-as.  */\n-#define ASM_SPEC \"%{misa=*:-m %*; :-m sm_35}%{misa=sm_30:--no-verify}\"\n+/* Newer versions of CUDA no longer support sm_30, and nvptx-tools as\n+   currently doesn't handle that gracefully when verifying\n+   ( https://github.com/MentorEmbedded/nvptx-tools/issues/30 ).  Work around\n+   this by verifying with sm_35 when having misa=sm_30 (either implicitly\n+   or explicitly).  */\n+#define ASM_SPEC\t\t\t\t\\\n+  \"%{\"\t\t\t\t\t\t\\\n+  /* Explict misa=sm_30.  */\t\t\t\\\n+  \"misa=sm_30:-m sm_35\"\t\t\t\t\\\n+  /* Separator.\t */\t\t\t\t\\\n+  \"; \"\t\t\t\t\t\t\\\n+  /* Catch-all.\t */\t\t\t\t\\\n+  \"misa=*:-m %*\"\t\t\t\t\\\n+  /* Separator.\t */\t\t\t\t\\\n+  \"; \"\t\t\t\t\t\t\\\n+  /* Implicit misa=sm_30.  */\t\t\t\\\n+  \":-m sm_35\"\t\t\t\t\t\\\n+  \"}\"\n \n #define TARGET_CPU_CPP_BUILTINS() nvptx_cpu_cpp_builtins ()\n "}]}