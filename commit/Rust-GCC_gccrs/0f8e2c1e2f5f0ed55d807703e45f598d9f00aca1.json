{"sha": "0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1", "node_id": "C_kwDOANBUbNoAKDBmOGUyYzFlMmY1ZjBlZDU1ZDgwNzcwM2U0NWY1OThkOWYwMGFjYTE", "commit": {"author": {"name": "Faisal Abbas", "email": "90.abbasfaisal@gmail.com", "date": "2022-08-16T21:03:23Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T11:40:28Z"}, "message": "rust-tree.cc: comment some important code instead of removing it.", "tree": {"sha": "a509c55e5efc69a6d4ec408d02f1e93f5cacd35d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a509c55e5efc69a6d4ec408d02f1e93f5cacd35d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1/comments", "author": {"login": "abbasfaisal", "id": 9428333, "node_id": "MDQ6VXNlcjk0MjgzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9428333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbasfaisal", "html_url": "https://github.com/abbasfaisal", "followers_url": "https://api.github.com/users/abbasfaisal/followers", "following_url": "https://api.github.com/users/abbasfaisal/following{/other_user}", "gists_url": "https://api.github.com/users/abbasfaisal/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbasfaisal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbasfaisal/subscriptions", "organizations_url": "https://api.github.com/users/abbasfaisal/orgs", "repos_url": "https://api.github.com/users/abbasfaisal/repos", "events_url": "https://api.github.com/users/abbasfaisal/events{/privacy}", "received_events_url": "https://api.github.com/users/abbasfaisal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca228d2f32e5eb6e9516f487be85383225d5a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca228d2f32e5eb6e9516f487be85383225d5a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca228d2f32e5eb6e9516f487be85383225d5a00"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "996ade5783ae6fcde30410a7aebce25206c4d87a", "filename": "gcc/rust/backend/rust-tree.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1/gcc%2Frust%2Fbackend%2Frust-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1/gcc%2Frust%2Fbackend%2Frust-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-tree.cc?ref=0f8e2c1e2f5f0ed55d807703e45f598d9f00aca1", "patch": "@@ -4805,6 +4805,13 @@ build_address (tree t)\n tree\n fold_builtin_source_location (location_t loc)\n {\n+  //  if (source_location_impl == NULL_TREE)\n+  //  {\n+  //    auto_diagnostic_group d;\n+  //    source_location_impl = get_source_location_impl_type (loc);\n+  //    if (source_location_impl == error_mark_node)\n+  // inform (loc, \"evaluating %qs\", \"__builtin_source_location\");\n+  //  }\n   if (source_location_impl == error_mark_node)\n     return build_zero_cst (const_ptr_type_node);\n   if (source_location_table == NULL)"}]}