{"sha": "ff46a531c52c25272038fefbfeb858feeb943a51", "node_id": "C_kwDOANBUbNoAKGZmNDZhNTMxYzUyYzI1MjcyMDM4ZmVmYmZlYjg1OGZlZWI5NDNhNTE", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2021-11-12T22:55:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-01T10:24:40Z"}, "message": "[Ada] Add signal to exception mapping for RTEMS\n\ngcc/ada/\n\n\t* init.c: Add __gnat_error_handler and __gnat_install_handler\n\tfor RTEMS.", "tree": {"sha": "9ae9fdf3bb5d9c1507ca00621a69094ff85a714a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae9fdf3bb5d9c1507ca00621a69094ff85a714a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff46a531c52c25272038fefbfeb858feeb943a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff46a531c52c25272038fefbfeb858feeb943a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff46a531c52c25272038fefbfeb858feeb943a51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff46a531c52c25272038fefbfeb858feeb943a51/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38df84ae8aaa0c9e753218f5b1d087e95b13c546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38df84ae8aaa0c9e753218f5b1d087e95b13c546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38df84ae8aaa0c9e753218f5b1d087e95b13c546"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "6c260fe7187c0434421fc32284ea770f8ab13e0e", "filename": "gcc/ada/init.c", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff46a531c52c25272038fefbfeb858feeb943a51/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff46a531c52c25272038fefbfeb858feeb943a51/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=ff46a531c52c25272038fefbfeb858feeb943a51", "patch": "@@ -2645,6 +2645,68 @@ __gnat_install_handler (void)\n   __gnat_handler_installed = 1;\n }\n \n+/*****************/\n+/* RTEMS Section */\n+/*****************/\n+\n+#elif defined(__rtems__)\n+\n+#include <signal.h>\n+#include <unistd.h>\n+\n+static void\n+__gnat_error_handler (int sig)\n+{\n+  struct Exception_Data *exception;\n+  const char *msg;\n+\n+  switch(sig)\n+  {\n+    case SIGFPE:\n+      exception = &constraint_error;\n+      msg = \"SIGFPE\";\n+      break;\n+    case SIGILL:\n+      exception = &constraint_error;\n+      msg = \"SIGILL\";\n+      break;\n+    case SIGSEGV:\n+      exception = &storage_error;\n+      msg = \"erroneous memory access\";\n+      break;\n+    case SIGBUS:\n+      exception = &constraint_error;\n+      msg = \"SIGBUS\";\n+      break;\n+    default:\n+      exception = &program_error;\n+      msg = \"unhandled signal\";\n+    }\n+\n+    Raise_From_Signal_Handler (exception, msg);\n+}\n+\n+void\n+__gnat_install_handler (void)\n+{\n+  struct sigaction act;\n+\n+  act.sa_handler = __gnat_error_handler;\n+  sigemptyset (&act.sa_mask);\n+\n+  /* Do not install handlers if interrupt state is \"System\".  */\n+  if (__gnat_get_interrupt_state (SIGFPE) != 's')\n+    sigaction (SIGFPE,  &act, NULL);\n+  if (__gnat_get_interrupt_state (SIGILL) != 's')\n+    sigaction (SIGILL,  &act, NULL);\n+  if (__gnat_get_interrupt_state (SIGSEGV) != 's')\n+    sigaction (SIGSEGV, &act, NULL);\n+  if (__gnat_get_interrupt_state (SIGBUS) != 's')\n+    sigaction (SIGBUS,  &act, NULL);\n+\n+  __gnat_handler_installed = 1;\n+}\n+\n #elif defined (__DJGPP__)\n \n void"}]}