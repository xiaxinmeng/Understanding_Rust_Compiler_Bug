{"sha": "b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjOWMwNjhmNzVjNjc2M2MwYzZkMWYxOTczZTFiOTVmMTQ4ZmViNw==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-07-15T14:13:48Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-07-15T14:13:48Z"}, "message": "c-parser.c (c_parser_oacc_declare): Don't scan for GOMP_MAP_POINTER.\n\n\tgcc/c/\n\t* c-parser.c (c_parser_oacc_declare): Don't scan for\n\tGOMP_MAP_POINTER.\n\t* c-typeck.c (handle_omp_array_sections): Mark data clauses with\n\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n\tzero-length subarrays.\n\n\tgcc/cp/\n\t* parser.c (cp_parser_oacc_declare): Don't scan for\n\tGOMP_MAP_POINTER.\n\t* semantics.c (handle_omp_array_sections): Mark data clauses with\n\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n\tzero-length subarrays.\n\n\tgcc/\n\t* omp-low.c (lower_omp_target): Mark data clauses with\n\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n\tzero-length subarrays.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/zero_length_subarrays.c: New\n\ttest.\n\nFrom-SVN: r238376", "tree": {"sha": "24f214bc9201f4e69ce3b4eb462e9c4ce97cfc09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24f214bc9201f4e69ce3b4eb462e9c4ce97cfc09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7ba880b6b4b1c9d7437889204cac5df0268d158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ba880b6b4b1c9d7437889204cac5df0268d158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ba880b6b4b1c9d7437889204cac5df0268d158"}], "stats": {"total": 94, "additions": 84, "deletions": 10}, "files": [{"sha": "7f7fc13e139de8cba6474017af5b1e151cf47863", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -1,3 +1,9 @@\n+2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* omp-low.c (lower_omp_target): Mark data clauses with\n+\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n+\tzero-length subarrays.\n+\n 2016-07-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71881"}, {"sha": "bc1e9558774ed6b7612a2b6515a6cdd6911cbce2", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -1,3 +1,11 @@\n+2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_oacc_declare): Don't scan for\n+\tGOMP_MAP_POINTER.\n+\t* c-typeck.c (handle_omp_array_sections): Mark data clauses with\n+\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n+\tzero-length subarrays.\n+\n 2016-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/71858"}, {"sha": "ef585fb99906160e0ada504fb10540a7156b3584", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -13664,11 +13664,6 @@ c_parser_oacc_declare (c_parser *parser)\n \tcase GOMP_MAP_DEVICE_RESIDENT:\n \t  break;\n \n-\tcase GOMP_MAP_POINTER:\n-\t  /* Generated by c_finish_omp_clauses from array sections;\n-\t     avoid spurious diagnostics.  */\n-\t  break;\n-\n \tcase GOMP_MAP_LINK:\n \t  if (!global_bindings_p ()\n \t      && (TREE_STATIC (decl)"}, {"sha": "0b5ab91d0d5f1ee07dcdfbea292244f8f9637906", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -12505,6 +12505,10 @@ handle_omp_array_sections (tree c, enum c_omp_region_type ort)\n \t  case GOMP_MAP_ALWAYS_TOFROM:\n \t  case GOMP_MAP_RELEASE:\n \t  case GOMP_MAP_DELETE:\n+\t  case GOMP_MAP_FORCE_TO:\n+\t  case GOMP_MAP_FORCE_FROM:\n+\t  case GOMP_MAP_FORCE_TOFROM:\n+\t  case GOMP_MAP_FORCE_PRESENT:\n \t    OMP_CLAUSE_MAP_MAYBE_ZERO_LENGTH_ARRAY_SECTION (c) = 1;\n \t    break;\n \t  default:"}, {"sha": "f85a33332812c721b040f5b724ec83a5d4e782b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -1,3 +1,11 @@\n+2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* parser.c (cp_parser_oacc_declare): Don't scan for\n+\tGOMP_MAP_POINTER.\n+\t* semantics.c (handle_omp_array_sections): Mark data clauses with\n+\tGOMP_MAP_FORCE_{PRESENT,TO,FROM,TOFROM} as potentially having\n+\tzero-length subarrays.\n+\n 2016-07-11  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (store_parm_decls): Remove check for void parm."}, {"sha": "3e865b0fb64557972e447e5f34968c28337566c8", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -35258,11 +35258,6 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \tcase GOMP_MAP_DEVICE_RESIDENT:\n \t  break;\n \n-\tcase GOMP_MAP_POINTER:\n-\t  /* Generated by c_finish_omp_clauses from array sections;\n-\t     avoid spurious diagnostics.  */\n-\t  break;\n-\n \tcase GOMP_MAP_LINK:\n \t  if (!global_bindings_p ()\n \t      && (TREE_STATIC (decl)"}, {"sha": "615d3aeab2a96f3004bf1865768331a64cf540af", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -5002,6 +5002,10 @@ handle_omp_array_sections (tree c, enum c_omp_region_type ort)\n \t      case GOMP_MAP_ALWAYS_TOFROM:\n \t      case GOMP_MAP_RELEASE:\n \t      case GOMP_MAP_DELETE:\n+\t      case GOMP_MAP_FORCE_TO:\n+\t      case GOMP_MAP_FORCE_FROM:\n+\t      case GOMP_MAP_FORCE_TOFROM:\n+\t      case GOMP_MAP_FORCE_PRESENT:\n \t\tOMP_CLAUSE_MAP_MAYBE_ZERO_LENGTH_ARRAY_SECTION (c) = 1;\n \t\tbreak;\n \t      default:"}, {"sha": "04509f3993854fad480727523bc3f16105ccd652", "filename": "gcc/omp-low.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -16210,6 +16210,10 @@ lower_omp_target (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \t\t    case GOMP_MAP_ALWAYS_FROM:\n \t\t    case GOMP_MAP_ALWAYS_TOFROM:\n \t\t    case GOMP_MAP_RELEASE:\n+\t\t    case GOMP_MAP_FORCE_TO:\n+\t\t    case GOMP_MAP_FORCE_FROM:\n+\t\t    case GOMP_MAP_FORCE_TOFROM:\n+\t\t    case GOMP_MAP_FORCE_PRESENT:\n \t\t      tkind_zero = GOMP_MAP_ZERO_LEN_ARRAY_SECTION;\n \t\t      break;\n \t\t    case GOMP_MAP_DELETE:"}, {"sha": "e4555eacd2d6172416950bb3d43dad502243670a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -1,3 +1,8 @@\n+2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/zero_length_subarrays.c: New\n+\ttest.\n+\n 2016-07-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/71734"}, {"sha": "8954551205b5ea89b1e2df0019655a61cbe16c9e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/zero_length_subarrays.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fzero_length_subarrays.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9c068f75c6763c0c6d1f1973e1b95f148feb7/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fzero_length_subarrays.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fzero_length_subarrays.c?ref=b1c9c068f75c6763c0c6d1f1973e1b95f148feb7", "patch": "@@ -0,0 +1,45 @@\n+/* Exercise zero-length sub-arrays.  */\n+\n+const int n = 10;\n+\n+void\n+subzero_present (int *a, int n)\n+{\n+#pragma acc data present (a[0:n])\n+  ;\n+#pragma acc data pcopy (a[0:n])\n+  ;\n+#pragma acc data pcopyin (a[0:n])\n+  ;\n+#pragma acc data pcopyout (a[0:n])\n+  ;\n+\n+}\n+\n+void\n+subzero (int *a, int n)\n+{\n+#pragma acc data create (a[0:n])\n+  ;\n+#pragma acc data copy (a[0:n])\n+  ;\n+#pragma acc data copyin (a[0:n])\n+  ;\n+#pragma acc data copyout (a[0:n])\n+  ;\n+}\n+\n+int\n+main ()\n+{\n+  int a[n];\n+\n+#pragma acc data copy (a[0:n])\n+  {\n+    subzero_present (a, 0);\n+  }\n+\n+  subzero (a, 0);\n+\n+  return 0;\n+}"}]}