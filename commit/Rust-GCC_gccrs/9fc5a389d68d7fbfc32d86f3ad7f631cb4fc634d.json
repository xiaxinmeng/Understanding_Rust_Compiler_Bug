{"sha": "9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjNWEzODlkNjhkN2ZiZmMzMmQ4NmYzYWQ3ZjYzMWNiNGZjNjM0ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-18T14:51:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-18T14:51:54Z"}, "message": "tree-flow.h (struct gimple_df): Make referenced_vars a uid_decl_map.\n\n2007-10-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (struct gimple_df): Make referenced_vars\n\ta uid_decl_map.\n\t(uid_decl_map_eq): Declare.\n\t(uid_decl_map_hash): Likewise.\n\t* tree-ssa.c (uid_decl_map_eq): New function.\n\t(uid_decl_map_hash): Likewise.\n\t(init_tree_ssa): Make referenced_vars a uid_decl_map.\n\t* tree-flow-inline.h (first_referenced_var): Deal with\n\tthe referenced_vars representation change.\n\t(next_referenced_var): Likewise.\n\t* tree-dfa.c (referenced_var_lookup): Likewise.\n\t(referenced_var_check_and_insert): Likewise.\n\t(remove_referenced_var): Likewise.\n\nFrom-SVN: r129440", "tree": {"sha": "e19ca8d69418bd88e8861decc26c8b195dde4b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19ca8d69418bd88e8861decc26c8b195dde4b2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "076a5ce626f254ae311ebc2db8e8d304194d23dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/076a5ce626f254ae311ebc2db8e8d304194d23dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/076a5ce626f254ae311ebc2db8e8d304194d23dd"}], "stats": {"total": 92, "additions": 55, "deletions": 37}, "files": [{"sha": "976022755d87f4d89e536eea135827c89b1bc47a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "patch": "@@ -1,3 +1,19 @@\n+2007-10-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (struct gimple_df): Make referenced_vars\n+\ta uid_decl_map.\n+\t(uid_decl_map_eq): Declare.\n+\t(uid_decl_map_hash): Likewise.\n+\t* tree-ssa.c (uid_decl_map_eq): New function.\n+\t(uid_decl_map_hash): Likewise.\n+\t(init_tree_ssa): Make referenced_vars a uid_decl_map.\n+\t* tree-flow-inline.h (first_referenced_var): Deal with\n+\tthe referenced_vars representation change.\n+\t(next_referenced_var): Likewise.\n+\t* tree-dfa.c (referenced_var_lookup): Likewise.\n+\t(referenced_var_check_and_insert): Likewise.\n+\t(remove_referenced_var): Likewise.\n+\n 2007-10-18  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* config/mips/mips.c (mips_dwarf_register_span): New."}, {"sha": "26e87c173b4cd834367d7da09b266dd4848889ab", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "patch": "@@ -635,14 +635,12 @@ find_vars_r (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n tree \n referenced_var_lookup (unsigned int uid)\n {\n-  struct int_tree_map *h, in;\n+  tree h;\n+  struct tree_decl_minimal in;\n   in.uid = uid;\n-  h = (struct int_tree_map *)\n-\thtab_find_with_hash (gimple_referenced_vars (cfun), &in, uid);\n+  h = (tree) htab_find_with_hash (gimple_referenced_vars (cfun), &in, uid);\n   gcc_assert (h || uid == 0);\n-  if (h)\n-    return h->to;\n-  return NULL_TREE;\n+  return h;\n }\n \n /* Check if TO is in the referenced_vars hash table and insert it if not.  \n@@ -651,29 +649,23 @@ referenced_var_lookup (unsigned int uid)\n bool\n referenced_var_check_and_insert (tree to)\n { \n-  struct int_tree_map *h, in;\n-  void **loc;\n+  tree h, *loc;\n+  struct tree_decl_minimal in;\n   unsigned int uid = DECL_UID (to);\n \n   in.uid = uid;\n-  in.to = to;\n-  h = (struct int_tree_map *) htab_find_with_hash (gimple_referenced_vars (cfun),\n-\t\t\t\t\t\t   &in, uid);\n-\n+  h = (tree) htab_find_with_hash (gimple_referenced_vars (cfun), &in, uid);\n   if (h)\n     {\n       /* DECL_UID has already been entered in the table.  Verify that it is\n \t the same entry as TO.  See PR 27793.  */\n-      gcc_assert (h->to == to);\n+      gcc_assert (h == to);\n       return false;\n     }\n \n-  h = GGC_NEW (struct int_tree_map);\n-  h->uid = uid;\n-  h->to = to;\n-  loc = htab_find_slot_with_hash (gimple_referenced_vars (cfun),\n-\t\t\t\t  h, uid, INSERT);\n-  *(struct int_tree_map **)  loc = h;\n+  loc = (tree *) htab_find_slot_with_hash (gimple_referenced_vars (cfun),\n+\t\t\t\t\t   &in, uid, INSERT);\n+  *loc = to;\n   return true;\n }\n \n@@ -774,7 +766,7 @@ void\n remove_referenced_var (tree var)\n {\n   var_ann_t v_ann;\n-  struct int_tree_map in;\n+  struct tree_decl_minimal in;\n   void **loc;\n   unsigned int uid = DECL_UID (var);\n \n@@ -784,10 +776,8 @@ remove_referenced_var (tree var)\n   var->base.ann = NULL;\n   gcc_assert (DECL_P (var));\n   in.uid = uid;\n-  in.to = var;\n   loc = htab_find_slot_with_hash (gimple_referenced_vars (cfun), &in, uid,\n \t\t\t\t  NO_INSERT);\n-  ggc_free (*loc);\n   htab_clear_slot (gimple_referenced_vars (cfun), loc);\n }\n "}, {"sha": "7f47bba4c7d794928845a64f8fda1a27fd6b21f9", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "patch": "@@ -151,13 +151,8 @@ next_htab_element (htab_iterator *hti)\n static inline tree\n first_referenced_var (referenced_var_iterator *iter)\n {\n-  struct int_tree_map *itm;\n-  itm = (struct int_tree_map *) first_htab_element (&iter->hti,\n-                                                    gimple_referenced_vars\n-\t\t\t\t\t\t    (cfun));\n-  if (!itm) \n-    return NULL;\n-  return itm->to;\n+  return (tree) first_htab_element (&iter->hti,\n+\t\t\t\t    gimple_referenced_vars (cfun));\n }\n \n /* Return true if we have hit the end of the referenced variables ITER is\n@@ -175,11 +170,7 @@ end_referenced_vars_p (const referenced_var_iterator *iter)\n static inline tree\n next_referenced_var (referenced_var_iterator *iter)\n {\n-  struct int_tree_map *itm;\n-  itm = (struct int_tree_map *) next_htab_element (&iter->hti);\n-  if (!itm) \n-    return NULL;\n-  return itm->to;\n+  return (tree) next_htab_element (&iter->hti);\n } \n \n /* Fill up VEC with the variables in the referenced vars hashtable.  */"}, {"sha": "b004ad9b3b6253b6c316b659c7c77d1e218b79e5", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "patch": "@@ -120,7 +120,7 @@ struct mem_ref_stats_d GTY(())\n struct gimple_df GTY(())\n {\n   /* Array of all variables referenced in the function.  */\n-  htab_t GTY((param_is (struct int_tree_map))) referenced_vars;\n+  htab_t GTY((param_is (union tree_node))) referenced_vars;\n \n   /* A list of all the noreturn calls passed to modify_stmt.\n      cleanup_control_flow uses it to detect cases where a mid-block\n@@ -561,6 +561,9 @@ struct int_tree_map GTY(())\n extern unsigned int int_tree_map_hash (const void *);\n extern int int_tree_map_eq (const void *, const void *);\n \n+extern unsigned int uid_decl_map_hash (const void *);\n+extern int uid_decl_map_eq (const void *, const void *);\n+\n typedef struct \n {\n   htab_iterator hti;"}, {"sha": "e325953884cb09e089bc3db18f3b61cfc92a8927", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=9fc5a389d68d7fbfc32d86f3ad7f631cb4fc634d", "patch": "@@ -774,6 +774,24 @@ int_tree_map_hash (const void *item)\n   return ((const struct int_tree_map *)item)->uid;\n }\n \n+/* Return true if the DECL_UID in both trees are equal.  */\n+\n+int\n+uid_decl_map_eq (const void *va, const void *vb)\n+{\n+  const_tree a = (const_tree) va;\n+  const_tree b = (const_tree) vb;\n+  return (a->decl_minimal.uid == b->decl_minimal.uid);\n+}\n+\n+/* Hash a tree in a uid_decl_map.  */\n+\n+unsigned int\n+uid_decl_map_hash (const void *item)\n+{\n+  return ((const_tree)item)->decl_minimal.uid;\n+}\n+\n /* Return true if the uid in both int tree maps are equal.  */\n \n static int\n@@ -799,8 +817,8 @@ void\n init_tree_ssa (void)\n {\n   cfun->gimple_df = GGC_CNEW (struct gimple_df);\n-  cfun->gimple_df->referenced_vars = htab_create_ggc (20, int_tree_map_hash, \n-\t\t\t\t     \t\t      int_tree_map_eq, NULL);\n+  cfun->gimple_df->referenced_vars = htab_create_ggc (20, uid_decl_map_hash, \n+\t\t\t\t     \t\t      uid_decl_map_eq, NULL);\n   cfun->gimple_df->default_defs = htab_create_ggc (20, int_tree_map_hash, \n \t\t\t\t                   int_tree_map_eq, NULL);\n   cfun->gimple_df->var_anns = htab_create_ggc (20, var_ann_hash, "}]}