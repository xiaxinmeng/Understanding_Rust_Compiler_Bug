{"sha": "e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcyODljYjQ1ZDA5NGQ5YzUzOGRjOTc4YzNmYzBhZTE4ZTQ3NTJiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-08-27T08:41:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-08-27T08:41:22Z"}, "message": "re PR rtl-optimization/87065 (combine causes ICE in trunc_int_for_mode)\n\n\tPR rtl-optimization/87065\n\t* combine.c (simplify_if_then_else): Formatting fix.\n\t(if_then_else_cond): Guard MULT optimization with SCALAR_INT_MODE_P\n\tcheck.\n\t(known_cond): Don't return const_true_rtx for vector modes.  Use\n\tCONST0_RTX instead of const0_rtx.  Formatting fixes.\n\n\t* gcc.target/i386/pr87065.c: New test.\n\nFrom-SVN: r263872", "tree": {"sha": "a9ac5a2119252859145d3d4b608b7a72af8bc9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9ac5a2119252859145d3d4b608b7a72af8bc9a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a583153ec27b45bd0b87b7c4defbc0d63777cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a583153ec27b45bd0b87b7c4defbc0d63777cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a583153ec27b45bd0b87b7c4defbc0d63777cda"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "99e85045677911dc5d0a504d2668dff3aa15bd9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "patch": "@@ -1,3 +1,12 @@\n+2018-08-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/87065\n+\t* combine.c (simplify_if_then_else): Formatting fix.\n+\t(if_then_else_cond): Guard MULT optimization with SCALAR_INT_MODE_P\n+\tcheck.\n+\t(known_cond): Don't return const_true_rtx for vector modes.  Use\n+\tCONST0_RTX instead of const0_rtx.  Formatting fixes.\n+\n 2018-08-27  Martin Liska  <mliska@suse.cz>\n \n         PR gcov-profile/87069"}, {"sha": "a2649b6d5a1cfe2a6192a2a896e38852eb72320a", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "patch": "@@ -6495,7 +6495,7 @@ simplify_if_then_else (rtx x)\n \t\t\t  pc_rtx, pc_rtx, 0, 0, 0);\n       if (reg_mentioned_p (from, false_rtx))\n \tfalse_rtx = subst (known_cond (copy_rtx (false_rtx), false_code,\n-\t\t\t\t   from, false_val),\n+\t\t\t\t       from, false_val),\n \t\t\t   pc_rtx, pc_rtx, 0, 0, 0);\n \n       SUBST (XEXP (x, 1), swapped ? false_rtx : true_rtx);\n@@ -9335,6 +9335,7 @@ if_then_else_cond (rtx x, rtx *ptrue, rtx *pfalse)\n \n \t  if (COMPARISON_P (cond0)\n \t      && COMPARISON_P (cond1)\n+\t      && SCALAR_INT_MODE_P (mode)\n \t      && ((GET_CODE (cond0) == reversed_comparison_code (cond1, NULL)\n \t\t   && rtx_equal_p (XEXP (cond0, 0), XEXP (cond1, 0))\n \t\t   && rtx_equal_p (XEXP (cond0, 1), XEXP (cond1, 1)))\n@@ -9515,12 +9516,12 @@ known_cond (rtx x, enum rtx_code cond, rtx reg, rtx val)\n \t  if (COMPARISON_P (x))\n \t    {\n \t      if (comparison_dominates_p (cond, code))\n-\t\treturn const_true_rtx;\n+\t\treturn VECTOR_MODE_P (GET_MODE (x)) ? x : const_true_rtx;\n \n \t      code = reversed_comparison_code (x, NULL);\n \t      if (code != UNKNOWN\n \t\t  && comparison_dominates_p (cond, code))\n-\t\treturn const0_rtx;\n+\t\treturn CONST0_RTX (GET_MODE (x));\n \t      else\n \t\treturn x;\n \t    }\n@@ -9563,7 +9564,7 @@ known_cond (rtx x, enum rtx_code cond, rtx reg, rtx val)\n \t  /* We must simplify subreg here, before we lose track of the\n \t     original inner_mode.  */\n \t  new_rtx = simplify_subreg (GET_MODE (x), r,\n-\t\t\t\t inner_mode, SUBREG_BYTE (x));\n+\t\t\t\t     inner_mode, SUBREG_BYTE (x));\n \t  if (new_rtx)\n \t    return new_rtx;\n \t  else\n@@ -9588,7 +9589,7 @@ known_cond (rtx x, enum rtx_code cond, rtx reg, rtx val)\n \t  /* We must simplify the zero_extend here, before we lose\n \t     track of the original inner_mode.  */\n \t  new_rtx = simplify_unary_operation (ZERO_EXTEND, GET_MODE (x),\n-\t\t\t\t\t  r, inner_mode);\n+\t\t\t\t\t      r, inner_mode);\n \t  if (new_rtx)\n \t    return new_rtx;\n \t  else"}, {"sha": "39a1a28b88f54770716617d05c52c545a5312db4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "patch": "@@ -1,3 +1,8 @@\n+2018-08-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/87065\n+\t* gcc.target/i386/pr87065.c: New test.\n+\n 2018-08-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87080"}, {"sha": "7ee0f0f7b46d5d3fd5137a07359eb0e6a30eefe7", "filename": "gcc/testsuite/gcc.target/i386/pr87065.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7289cb45d094d9c538dc978c3fc0ae18e4752bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87065.c?ref=e7289cb45d094d9c538dc978c3fc0ae18e4752bd", "patch": "@@ -0,0 +1,22 @@\n+/* PR rtl-optimization/87065 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mxop -mprefer-vector-width=128\" } */\n+\n+int a, c, d, e;\n+short *b;\n+\n+void\n+foo (void)\n+{\n+  short *g = b;\n+  int h = 1;\n+  unsigned i;\n+  for (; h <= 1; h++)\n+    g = (short *) &c;\n+  for (; c; c++)\n+    {\n+      for (; i <= 1; i++)\n+\t;\n+      a ^= (a > 0 <= i) + ((e += d) == 0 ?: (*g = 8));\n+    }\n+}"}]}