{"sha": "c3870f3bcf02c780d73639080d5195f4be4ef1ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4NzBmM2JjZjAyYzc4MGQ3MzYzOTA4MGQ1MTk1ZjRiZTRlZjFhYw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-13T21:53:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-05T08:19:05Z"}, "message": "[Ada] Refine types of variables with call to Scope as their initial values\n\ngcc/ada/\n\n\t* exp_ch4.adb (User_Defined_Primitive_Equality_Op): Refine type\n\tof a local variable.\n\t* exp_dbug.adb (Scope_Contains): Refine all types from Node_Id\n\tto Entity_Id; rename parameters to match those of the\n\tScope_Within routine (which is similar but not the same); also,\n\tsimplify an OR ELSE into a membership test.", "tree": {"sha": "9e55a42ec7c318d30e34b036ba5fed8df5574331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e55a42ec7c318d30e34b036ba5fed8df5574331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3870f3bcf02c780d73639080d5195f4be4ef1ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3870f3bcf02c780d73639080d5195f4be4ef1ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3870f3bcf02c780d73639080d5195f4be4ef1ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3870f3bcf02c780d73639080d5195f4be4ef1ac/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43f69ac8b2d08a18497e124422cbb6031539421c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f69ac8b2d08a18497e124422cbb6031539421c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f69ac8b2d08a18497e124422cbb6031539421c"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "e29535ec7028cef79fd2587f1249f1c7cce0a827", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3870f3bcf02c780d73639080d5195f4be4ef1ac/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3870f3bcf02c780d73639080d5195f4be4ef1ac/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c3870f3bcf02c780d73639080d5195f4be4ef1ac", "patch": "@@ -8082,7 +8082,7 @@ package body Exp_Ch4 is\n       function User_Defined_Primitive_Equality_Op\n         (Typ : Entity_Id) return Entity_Id\n       is\n-         Enclosing_Scope : constant Node_Id := Scope (Typ);\n+         Enclosing_Scope : constant Entity_Id := Scope (Typ);\n          E : Entity_Id;\n       begin\n          for Private_Entities in Boolean loop"}, {"sha": "8a7536760e835e39702fa42839e5fae811019589", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3870f3bcf02c780d73639080d5195f4be4ef1ac/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3870f3bcf02c780d73639080d5195f4be4ef1ac/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=c3870f3bcf02c780d73639080d5195f4be4ef1ac", "patch": "@@ -315,8 +315,11 @@ package body Exp_Dbug is\n       --  output in one of these two forms. The result is prepended to the\n       --  name stored in Name_Buffer.\n \n-      function Scope_Contains (Sc : Node_Id; Ent : Entity_Id) return Boolean;\n-      --  Return whether Ent belong to the Sc scope\n+      function Scope_Contains\n+        (Outer : Entity_Id;\n+         Inner : Entity_Id)\n+         return Boolean;\n+      --  Return whether Inner belongs to the Outer scope\n \n       ----------------------------\n       -- Enable_If_Packed_Array --\n@@ -344,8 +347,7 @@ package body Exp_Dbug is\n \n          elsif Nkind (N) = N_Identifier\n            and then Scope_Contains (Scope (Entity (N)), Ent)\n-           and then (Ekind (Entity (N)) = E_Constant\n-                      or else Ekind (Entity (N)) = E_In_Parameter)\n+           and then Ekind (Entity (N)) in E_Constant | E_In_Parameter\n          then\n             Prepend_String_To_Buffer (Get_Name_String (Chars (Entity (N))));\n \n@@ -361,12 +363,16 @@ package body Exp_Dbug is\n       -- Scope_Contains --\n       --------------------\n \n-      function Scope_Contains (Sc : Node_Id; Ent : Entity_Id) return Boolean is\n-         Cur : Node_Id := Scope (Ent);\n+      function Scope_Contains\n+        (Outer : Entity_Id;\n+         Inner : Entity_Id)\n+         return Boolean\n+      is\n+         Cur : Entity_Id := Scope (Inner);\n \n       begin\n          while Present (Cur) loop\n-            if Cur = Sc then\n+            if Cur = Outer then\n                return True;\n             end if;\n "}]}