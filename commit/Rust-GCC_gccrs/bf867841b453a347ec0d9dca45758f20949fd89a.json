{"sha": "bf867841b453a347ec0d9dca45758f20949fd89a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4Njc4NDFiNDUzYTM0N2VjMGQ5ZGNhNDU3NThmMjA5NDlmZDg5YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-04-05T16:26:40Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-04-05T16:26:40Z"}, "message": "re PR target/70510 (ICE: output_operand: invalid %-code with -mavx512bw -masm=intel when emitting vpbroatcast)\n\n\tPR target/70510\n\t* config/i386/sse.md (iptr): Add V64QI, V32HI, V16SI and V8DI modes.\n\ntestsuite/ChangeLog:\n\n\tPR target/70510\n\t* gcc.target/i386/pr70510.c: New test.\n\nFrom-SVN: r234752", "tree": {"sha": "e48873b3f55122aa8b61edebc0875991ac0f627e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e48873b3f55122aa8b61edebc0875991ac0f627e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf867841b453a347ec0d9dca45758f20949fd89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf867841b453a347ec0d9dca45758f20949fd89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf867841b453a347ec0d9dca45758f20949fd89a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf867841b453a347ec0d9dca45758f20949fd89a/comments", "author": null, "committer": null, "parents": [{"sha": "3022186ac4da434ab341bd0e1cf2c4056e47833a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3022186ac4da434ab341bd0e1cf2c4056e47833a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3022186ac4da434ab341bd0e1cf2c4056e47833a"}], "stats": {"total": 88, "additions": 50, "deletions": 38}, "files": [{"sha": "711f6ed0510b9e91854ba530add68568a5f2490f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 32, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf867841b453a347ec0d9dca45758f20949fd89a", "patch": "@@ -1,3 +1,8 @@\n+2016-04-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70510\n+\t* config/i386/sse.md (iptr): Add V64QI, V32HI, V16SI and V8DI modes.\n+\n 2016-04-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70526\n@@ -82,8 +87,7 @@\n \tPR hsa/70402\n \t* hsa-gen.c (gen_hsa_insns_for_switch_stmt): Guard index\n \tvalue that is really in range handled by SBR instruction.\n-\t* hsa-brig.c (emit_switch_insn): Do not emit unconditional\n-\tjump.\n+\t* hsa-brig.c (emit_switch_insn): Do not emit unconditional jump.\n \t* hsa-dump.c (dump_hsa_insn_1): Do not dump default BB.\n \t* hsa.h (hsa_insn_sbr::m_default_bb): Remove field.\n \n@@ -126,8 +130,7 @@\n 2016-04-01  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/70496\n-\t* config/arm/arm.h (ASM_APP_OFF): Handle TARGET_ARM\n-\tand TARGET_THUMB.\n+\t* config/arm/arm.h (ASM_APP_OFF): Handle TARGET_ARM and TARGET_THUMB.\n \n 2016-04-01  Nathan Sidwell  <nathan@acm.org>\n \n@@ -174,32 +177,27 @@\n \t(pass_gen_hsail::execute): Do not call\n \tconvert_switch_statements here.\n \t* hsa-regalloc.c (hsa_regalloc): Call update_dominance.\n-\t* hsa.h (hsa_function_representation::m_modified_cfg):\n-\tNew flag.\n+\t* hsa.h (hsa_function_representation::m_modified_cfg): New flag.\n \t(hsa_function_representation::update_dominance): New function.\n \n 2016-03-31  Martin Liska  <mliska@suse.cz>\n \n \tPR hsa/70391\n \t* hsa-brig.c (emit_directive_variable): Emit alignment\n \taccording to hsa_symbol::m_align.\n-\t* hsa-dump.c (hsa_byte_alignment): Move the function to\n-\tanother file.\n+\t* hsa-dump.c (hsa_byte_alignment): Move the function to\tanother file.\n \t(dump_hsa_symbol): Dump alignment of HSA symbols.\n-\t* hsa-gen.c (get_symbol_for_decl): Set-up alignment\n-\tof a symbol.\n+\t* hsa-gen.c (get_symbol_for_decl): Set-up alignment of a symbol.\n \t(gen_hsa_addr_with_align): New function.\n \t(hsa_bitmemref_alignment): Use newly added function.\n \t(gen_hsa_insns_for_load): Likewise.\n \t(gen_hsa_insns_for_store): Likewise.\n \t(gen_hsa_memory_copy): New argument added.\n \t(gen_hsa_insns_for_single_assignment): Respect\n-\talignment for assignments processed via\n-\tgen_hsa_memory_copy.\n+\talignment for assignments processed via gen_hsa_memory_copy.\n \t(gen_hsa_insns_for_direct_call): Likewise.\n \t(gen_hsa_insns_for_return): Likewise.\n-\t(gen_function_def_parameters): Set default\n-\talignment.\n+\t(gen_function_def_parameters): Set default alignment.\n \t* hsa.c (hsa_object_alignment): New function.\n \t(hsa_byte_alignment): Pasted function.\n \t* hsa.h (hsa_symbol::m_align): New field.\n@@ -216,16 +214,15 @@\n 2016-03-31  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR target/70442\n-\t* config/i386/i386.c (scalar_chain::convert_op): Fix\n-\tdescription.\n+\t* config/i386/i386.c (scalar_chain::convert_op): Fix description.\n \t(scalar_chain::convert_insn): Call convert_op for reg\n \tmoves to handle undefined registers.\n \n 2016-03-31  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/70393\n-\t* varasm.c (output_constructor_regular_field): Flush bitfield\n-\tearlier.  Assert we don't want to move backwards.\n+\t* varasm.c (output_constructor_regular_field): Flush bitfield earlier.\n+\tAssert we don't want to move backwards.\n \n 2016-03-31  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n@@ -266,8 +263,7 @@\n 2016-03-30  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/70450\n-\t* fold-const.c (extract_muldiv_1): Fix thinko in wide_int::from\n-\tusage.\n+\t* fold-const.c (extract_muldiv_1): Fix thinko in wide_int::from usage.\n \n 2016-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -314,8 +310,7 @@\n \n 2016-03-29  Jeff Law  <law@redhat.com>\n \n-\t* tree-ssa-coalesce.c (struct ssa_conflicts): Fix typo in\n-\tcomment.\n+\t* tree-ssa-coalesce.c (struct ssa_conflicts): Fix typo in comment.\n \n 2016-03-10  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -347,8 +342,7 @@\n \tmode != result_mode.\n \n \tPR c++/70353\n-\t* tree-inline.c (remap_decls): Don't add_local_decl if\n-\tcfun is null.\n+\t* tree-inline.c (remap_decls): Don't add_local_decl if cfun is null.\n \n \tPR tree-optimization/70405\n \t* ssa-iterators.h (num_imm_uses): Add missing braces.\n@@ -362,8 +356,7 @@\n 2016-03-29  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/70355\n-\t* lower-subreg.c (simplify_subreg_concatn): Reject paradoxical\n-\tsubregs.\n+\t* lower-subreg.c (simplify_subreg_concatn): Reject paradoxical subregs.\n \n 2016-03-29  Richard Biener  <rguenther@suse.de>\n \n@@ -377,17 +370,16 @@\n 2016-03-28  James Bowman  <james.bowman@ftdichip.com>\n \n \t* config/ft32/ft32.opt (mnodiv): New.\n-\t* config/ft32/ft32.md (*divsi3, *modsi3): Qualify with\n-\tTARGET_NODIV.\n+\t* config/ft32/ft32.md (*divsi3, *modsi3): Qualify with TARGET_NODIV.\n \t* doc/invoke.texi (FT32 Options -mnodiv): New.\n \n 2016-03-28  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-\t PR target/70406\n-\t * config/i386/i386.md (define_split, andn): Fix modes.\n+\tPR target/70406\n+\t* config/i386/i386.md (define_split, andn): Fix modes.\n \n 2016-03-26  Richard Biener  <rguenther@suse.de>\n-            Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\t    Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR ipa/70366\n \t* ipa-inline-transform.c (inline_call): Pass opts_for_fn (to->decl)\n@@ -430,7 +422,7 @@\n \n 2016-03-24  Richard Henderson  <rth@redhat.com>\n \n-        PR middle-end/69845\n+\tPR middle-end/69845\n \t* fold-const.c (extract_muldiv_1): Correct test for multiplication\n \toverflow.\n "}, {"sha": "55f1ae732e4be41abf9f237b8d4f42214aae4dea", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=bf867841b453a347ec0d9dca45758f20949fd89a", "patch": "@@ -705,7 +705,8 @@\n \n ;; Pointer size override for scalar modes (Intel asm dialect)\n (define_mode_attr iptr\n-  [(V32QI \"b\") (V16HI \"w\") (V8SI \"k\") (V4DI \"q\")\n+  [(V64QI \"b\") (V32HI \"w\") (V16SI \"k\") (V8DI \"q\")\n+   (V32QI \"b\") (V16HI \"w\") (V8SI \"k\") (V4DI \"q\")\n    (V16QI \"b\") (V8HI \"w\") (V4SI \"k\") (V2DI \"q\")\n    (V8SF \"k\") (V4DF \"q\")\n    (V4SF \"k\") (V2DF \"q\")"}, {"sha": "7012de5007bdbb5844dd37b969c2a330289fcdd0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf867841b453a347ec0d9dca45758f20949fd89a", "patch": "@@ -1,3 +1,8 @@\n+2016-04-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70510\n+\t* gcc.target/i386/pr70510.c: New test.\n+\n 2016-04-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70526\n@@ -195,8 +200,7 @@\n \t    Tom de Vries  <tom@codesourcery.com>\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n \n-\t* c-c++-common/goacc/combined-directives.c: Clean up dg-*\n-\tdirectives.\n+\t* c-c++-common/goacc/combined-directives.c: Clean up dg-* directives.\n \t* c-c++-common/goacc/loop-clauses.c: Likewise.\n \t* g++.dg/goacc/template.C: Likewise.\n \t* gfortran.dg/goacc/combined-directives.f90: Likewise.\n@@ -290,12 +294,12 @@\n \n 2016-03-28  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n-\tg++.dg/ext/fnname5.C: Update the test for Darwin.\n+\t* g++.dg/ext/fnname5.C: Update the test for Darwin.\n \n 2016-03-28  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/70406\n-\t * gcc.target/i386/pr70406.c: New test.\n+\t* gcc.target/i386/pr70406.c: New test.\n \n 2016-03-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -376,7 +380,8 @@\n 2016-03-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70290\n-\t* g++.dg/ext/pr70290.C: Add -Wno-psabi -w to dg-options.  Formatting.\n+\t* g++.dg/ext/pr70290.C: Add -Wno-psabi -w to dg-options.\n+\tFix formatting.\n \n 2016-03-24  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "fdad97a16f41e5ba76494821a3bc26c930901d4e", "filename": "gcc/testsuite/gcc.target/i386/pr70510.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70510.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf867841b453a347ec0d9dca45758f20949fd89a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70510.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70510.c?ref=bf867841b453a347ec0d9dca45758f20949fd89a", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/70510 */\n+/* { dg-do assemble { target avx512bw } } */\n+/* { dg-require-effective-target masm_intel } */\n+/* { dg-options \"-Og -mavx512bw -masm=intel\" } */\n+\n+typedef int V __attribute__ ((vector_size (64)));\n+\n+V\n+foo (V u, V v)\n+{\n+  v[0] |= v[u[0]];\n+  u /= ((V)v)[0];\n+  return u;\n+}"}]}