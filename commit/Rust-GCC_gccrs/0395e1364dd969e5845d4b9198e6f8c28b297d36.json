{"sha": "0395e1364dd969e5845d4b9198e6f8c28b297d36", "node_id": "C_kwDOANBUbNoAKDAzOTVlMTM2NGRkOTY5ZTU4NDVkNGI5MTk4ZTZmOGMyOGIyOTdkMzY", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2023-03-09T20:44:29Z"}, "committer": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2023-03-21T08:47:34Z"}, "message": "html: Set CONTENTS_OUTPUT_LOCATION=inline if makeinfo supports it\n\nThis flag allows us to restore old (pre-6.8) behavior of the\n@{summary,}content commands, so that texi2any continues to emit\nsummarycontents first.\n\nmaintainer-scripts/ChangeLog:\n\n\t* update_web_docs_git: Set CONTENTS_OUTPUT_LOCATION=inline in\n\torder to put @shortcontents above contents.\n\ngcc/ChangeLog:\n\n\t* configure.ac: Add check for the Texinfo 6.8\n\tCONTENTS_OUTPUT_LOCATION customization variable and set it if\n\tsupported.\n\t* configure: Regenerate.\n\t* Makefile.in (MAKEINFO_TOC_INLINE_FLAG): New variable.  Set by\n\tconfigure.ac to -c CONTENTS_OUTPUT_LOCATION=inline if\n\tCONTENTS_OUTPUT_LOCATION support is detected, empty otherwise.\n\t($(build_htmldir)/%/index.html): Pass MAKEINFO_TOC_INLINE_FLAG.", "tree": {"sha": "93415e7121dd22a64e1d83cf9c2db7642e28ecf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93415e7121dd22a64e1d83cf9c2db7642e28ecf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0395e1364dd969e5845d4b9198e6f8c28b297d36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niNUEABYKAH0WIQT+4rPRE/wAoxYtYGFSwpQwHqLEkwUCZBlvJl8UgAAAAAAuAChp\nc3N1ZXItZnByQG5vdGF0aW9ucy5vcGVucGdwLmZpZnRoaG9yc2VtYW4ubmV0RkVF\nMkIzRDExM0ZDMDBBMzE2MkQ2MDYxNTJDMjk0MzAxRUEyQzQ5MwAKCRBSwpQwHqLE\nk9FxAPwM8L1IYUfE1QINZZCE4VJrNSLOWWBYbM/IC5lAbz+wMAD/bQJZ0+2ZZyGl\nUtY1Orq3hOHsqD8SXKSyUXa46hhotw0=\n=X2Ww\n-----END PGP SIGNATURE-----", "payload": "tree 93415e7121dd22a64e1d83cf9c2db7642e28ecf7\nparent e54b01a101a54bd6f91abc49424cfc5ac0f904ed\nauthor Arsen Arsenovi\u0107 <arsen@aarsen.me> 1678394669 +0100\ncommitter Arsen Arsenovi\u0107 <arsen@aarsen.me> 1679388454 +0100\n\nhtml: Set CONTENTS_OUTPUT_LOCATION=inline if makeinfo supports it\n\nThis flag allows us to restore old (pre-6.8) behavior of the\n@{summary,}content commands, so that texi2any continues to emit\nsummarycontents first.\n\nmaintainer-scripts/ChangeLog:\n\n\t* update_web_docs_git: Set CONTENTS_OUTPUT_LOCATION=inline in\n\torder to put @shortcontents above contents.\n\ngcc/ChangeLog:\n\n\t* configure.ac: Add check for the Texinfo 6.8\n\tCONTENTS_OUTPUT_LOCATION customization variable and set it if\n\tsupported.\n\t* configure: Regenerate.\n\t* Makefile.in (MAKEINFO_TOC_INLINE_FLAG): New variable.  Set by\n\tconfigure.ac to -c CONTENTS_OUTPUT_LOCATION=inline if\n\tCONTENTS_OUTPUT_LOCATION support is detected, empty otherwise.\n\t($(build_htmldir)/%/index.html): Pass MAKEINFO_TOC_INLINE_FLAG.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0395e1364dd969e5845d4b9198e6f8c28b297d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0395e1364dd969e5845d4b9198e6f8c28b297d36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0395e1364dd969e5845d4b9198e6f8c28b297d36/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54b01a101a54bd6f91abc49424cfc5ac0f904ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54b01a101a54bd6f91abc49424cfc5ac0f904ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54b01a101a54bd6f91abc49424cfc5ac0f904ed"}], "stats": {"total": 64, "additions": 60, "deletions": 4}, "files": [{"sha": "d8b76d83d6850c3ce5318f3acd7cdc2a8cbc140b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0395e1364dd969e5845d4b9198e6f8c28b297d36", "patch": "@@ -787,6 +787,9 @@ INSTALL_HEADERS=install-headers install-mkheaders\n # Control whether Info documentation is built and installed.\n BUILD_INFO = @BUILD_INFO@\n \n+# Control flags for @contents placement in HTML output\n+MAKEINFO_TOC_INLINE_FLAG = @MAKEINFO_TOC_INLINE_FLAG@\n+\n # Control whether manpages generated by texi2pod.pl can be rebuilt.\n GENERATED_MANPAGES = @GENERATED_MANPAGES@\n \n@@ -3461,7 +3464,8 @@ html:: $(HTMLS_BUILD)\n $(build_htmldir)/%/index.html: %.texi\n \t$(mkinstalldirs) $(@D)\n \trm -f $(@D)/*\n-\t$(TEXI2HTML) -I $(abs_docdir) -I $(abs_docdir)/include -o $(@D) $<\n+\t$(TEXI2HTML) $(MAKEINFO_TOC_INLINE_FLAG) \\\n+\t\t-I $(abs_docdir) -I $(abs_docdir)/include -o $(@D) $<\n \n # Duplicate entry to handle renaming of gccinstall\n $(build_htmldir)/gccinstall/index.html: $(TEXI_GCCINSTALL_FILES)"}, {"sha": "20d3142c6de93d36ed109c20dc00b3fa44acf5c0", "filename": "gcc/configure", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=0395e1364dd969e5845d4b9198e6f8c28b297d36", "patch": "@@ -810,6 +810,7 @@ PYTHON\n BISON\n FLEX\n GENERATED_MANPAGES\n+MAKEINFO_TOC_INLINE_FLAG\n BUILD_INFO\n MAKEINFO\n have_mktemp_command\n@@ -8795,6 +8796,36 @@ else\n fi\n \n \n+# Determine whether makeinfo supports the CONTENTS_OUTPUT_LOCATION variable.\n+# If it does, we want to pass it to makeinfo in order to restore the old\n+# behaviour of @{summary,}contents placement.\n+MAKEINFO_TOC_INLINE_FLAG=\n+if test x\"$MAKEINFO\" != x; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CONTENTS_OUTPUT_LOCATION support in $MAKEINFO\" >&5\n+$as_echo_n \"checking for CONTENTS_OUTPUT_LOCATION support in $MAKEINFO... \" >&6; }\n+if ${gcc_cv_texi_add_toc_inline_flags+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+    # Detect the unknown variable CONTENTS_OUTPUT_LOCATION warning\n+    if \"$MAKEINFO\" -c CONTENTS_OUTPUT_LOCATION=inline </dev/null 2>&1 \\\n+       | grep CONTENTS_OUTPUT_LOCATION >/dev/null; then\n+      gcc_cv_texi_add_toc_inline_flags=no\n+    else\n+      gcc_cv_texi_add_toc_inline_flags=yes\n+    fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_texi_add_toc_inline_flags\" >&5\n+$as_echo \"$gcc_cv_texi_add_toc_inline_flags\" >&6; }\n+  if test x\"$gcc_cv_texi_add_toc_inline_flags\" = xyes; then\n+    MAKEINFO_TOC_INLINE_FLAG='-c CONTENTS_OUTPUT_LOCATION=inline'\n+  fi\n+\n+fi\n+\n+\n # Is pod2man recent enough to regenerate manpages?\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for recent Pod::Man\" >&5\n $as_echo_n \"checking for recent Pod::Man... \" >&6; }\n@@ -19792,7 +19823,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19795 \"configure\"\n+#line 19826 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19898,7 +19929,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19901 \"configure\"\n+#line 19932 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "120151c474a7fc6ba580e9a86de1f2211b198eb9", "filename": "gcc/configure.ac", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395e1364dd969e5845d4b9198e6f8c28b297d36/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=0395e1364dd969e5845d4b9198e6f8c28b297d36", "patch": "@@ -1242,6 +1242,27 @@ else\n fi\n AC_SUBST(BUILD_INFO)\n \n+# Determine whether makeinfo supports the CONTENTS_OUTPUT_LOCATION variable.\n+# If it does, we want to pass it to makeinfo in order to restore the old\n+# behavior of @{summary,}contents placement.\n+MAKEINFO_TOC_INLINE_FLAG=\n+AS_IF([test x\"$MAKEINFO\" != x], [\n+  AC_CACHE_CHECK([for CONTENTS_OUTPUT_LOCATION support in $MAKEINFO],\n+  \t\t [gcc_cv_texi_add_toc_inline_flags], [\n+    # Detect the unknown variable CONTENTS_OUTPUT_LOCATION warning\n+    if \"$MAKEINFO\" -c CONTENTS_OUTPUT_LOCATION=inline </dev/null 2>&1 \\\n+       | grep CONTENTS_OUTPUT_LOCATION >/dev/null; then\n+      gcc_cv_texi_add_toc_inline_flags=no\n+    else\n+      gcc_cv_texi_add_toc_inline_flags=yes\n+    fi\n+  ])\n+  if test x\"$gcc_cv_texi_add_toc_inline_flags\" = xyes; then\n+    MAKEINFO_TOC_INLINE_FLAG='-c CONTENTS_OUTPUT_LOCATION=inline'\n+  fi\n+])\n+AC_SUBST([MAKEINFO_TOC_INLINE_FLAG])\n+\n # Is pod2man recent enough to regenerate manpages?\n AC_MSG_CHECKING([for recent Pod::Man])\n if (perl -e 'use 1.10 Pod::Man') >/dev/null 2>&1; then"}, {"sha": "d44ab27c1b7cd2fc12c6d383ef71c88c179c1258", "filename": "maintainer-scripts/update_web_docs_git", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395e1364dd969e5845d4b9198e6f8c28b297d36/maintainer-scripts%2Fupdate_web_docs_git", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395e1364dd969e5845d4b9198e6f8c28b297d36/maintainer-scripts%2Fupdate_web_docs_git", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_web_docs_git?ref=0395e1364dd969e5845d4b9198e6f8c28b297d36", "patch": "@@ -174,7 +174,7 @@ for file in $MANUALS; do\n     elif [ \"$file\" = \"gnat_ugn\" ]; then\n       includes=\"$includes -I gcc/gcc/ada -I gcc/gcc/ada/doc/gnat_ugn\"\n     fi\n-    makeinfo --html --css-ref $CSS $includes -o ${file} ${filename}\n+    makeinfo --html -c CONTENTS_OUTPUT_LOCATION=inline --css-ref $CSS $includes -o ${file} ${filename}\n     tar cf ${file}-html.tar ${file}/*.html\n     texi2dvi $includes -o ${file}.dvi ${filename} </dev/null >/dev/null && dvips -o ${file}.ps ${file}.dvi\n     texi2pdf $includes -o ${file}.pdf ${filename} </dev/null"}]}