{"sha": "ad7082e3d95afb5f313a8663050876ef5fd35534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ3MDgyZTNkOTVhZmI1ZjMxM2E4NjYzMDUwODc2ZWY1ZmQzNTUzNA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2006-12-12T20:59:21Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2006-12-12T20:59:21Z"}, "message": "trans-expr.c (gfc_conv_substring): Check for empty substring.\n\nfortran/\n* trans-expr.c (gfc_conv_substring): Check for empty substring.\ntestsuite/\n* lib/fortran-torture.exp: Update copyright years.  Remove\nobsolete comment.  Test -ftree-vectorize where it makes sense.\n* lib/gfortran-dg.exp: Update copyright years.  Use settings\nfrom fortran-torture.exp.\n* gfortran.dg/char_transpose_1.f90,\ngfortran.dg/char_spread_1.f90, gfortran.dg/g77/dnrm2.f,\ngfortran.dg/dependent_decls_1.f90: Fixout-of-bound errors.\n* gfortran.dg/enum_10.f90, gfortran.dg/mixed_io_1.f90:  Add\n'-w' to dg-options.\n\nFrom-SVN: r119797", "tree": {"sha": "ebe6161c8b4daad75b3bc7aef87776ccb21980b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe6161c8b4daad75b3bc7aef87776ccb21980b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad7082e3d95afb5f313a8663050876ef5fd35534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7082e3d95afb5f313a8663050876ef5fd35534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7082e3d95afb5f313a8663050876ef5fd35534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7082e3d95afb5f313a8663050876ef5fd35534/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cf9e3a4be73380dd59958bc800f83e04893afb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf9e3a4be73380dd59958bc800f83e04893afb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf9e3a4be73380dd59958bc800f83e04893afb0"}], "stats": {"total": 93, "additions": 75, "deletions": 18}, "files": [{"sha": "eb9efa1b9cddd54bbf7cc6c56557e3f910f9de70", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,6 +1,11 @@\n+2006-12-12  Tobias Schl\ufffd\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* trans-expr.c (gfc_conv_substring): Check for empty substring.\n+\n 2006-12-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* f59-lang.c (gfc_expand_function): Update for renamed varpool functions.\n+\t* f95-lang.c (gfc_expand_function): Update for renamed varpool\n+\tfunctions.\n \n 2006-12-10  Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "04736d5a1da8a3dc57783ca90c461f0ca128cf08", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -278,9 +278,14 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind,\n     }\n   if (flag_bounds_check)\n     {\n+      tree nonempty = fold_build2 (LE_EXPR, boolean_type_node,\n+\t\t\t\t   start.expr, end.expr);\n+\n       /* Check lower bound.  */\n       fault = fold_build2 (LT_EXPR, boolean_type_node, start.expr,\n                            build_int_cst (gfc_charlen_type_node, 1));\n+      fault = fold_build2 (TRUTH_ANDIF_EXPR, boolean_type_node,\n+\t\t\t   nonempty, fault);\n       if (name)\n \tasprintf (&msg, \"Substring out of bounds: lower bound of '%s' \"\n \t\t  \"is less than one\", name);\n@@ -293,6 +298,8 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind,\n       /* Check upper bound.  */\n       fault = fold_build2 (GT_EXPR, boolean_type_node, end.expr,\n                            se->string_length);\n+      fault = fold_build2 (TRUTH_ANDIF_EXPR, boolean_type_node,\n+\t\t\t   nonempty, fault);\n       if (name)\n \tasprintf (&msg, \"Substring out of bounds: upper bound of '%s' \"\n \t\t  \"exceeds string length\", name);"}, {"sha": "16e08e0590eba1f4153f41a6ec1264220d3dc175", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,3 +1,15 @@\n+2006-12-12  Tobias Schl\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* lib/fortran-torture.exp: Update copyright years.  Remove\n+\tobsolete comment.  Test -ftree-vectorize where it makes sense.\n+\t* lib/gfortran-dg.exp: Update copyright years.  Use settings\n+\tfrom fortran-torture.exp.\n+\t* gfortran.dg/char_transpose_1.f90,\n+\tgfortran.dg/char_spread_1.f90, gfortran.dg/g77/dnrm2.f,\n+\tgfortran.dg/dependent_decls_1.f90: Fixout-of-bound errors.\n+\t* gfortran.dg/enum_10.f90, gfortran.dg/mixed_io_1.f90:  Add\n+\t'-w' to dg-options.\n+\n 2006-12-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* lib/gcc-dg.exp (${tool}_load): Fix invocation of"}, {"sha": "bb152ee394d61969e3d2dd3c06a79888a5f59671", "filename": "gcc/testsuite/gfortran.dg/char_spread_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_spread_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_spread_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_spread_1.f90?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -8,7 +8,7 @@ program main\n \n   do i3 = 1, n3\n     do i1 = 1, n1\n-      a (i1, i3) = 'ab'(i1:i1) // 'cde'(i3:i3) // 'cantrip'\n+      a (i1, i3) = 'abc'(i1:i1) // 'defg'(i3:i3) // 'cantrip'\n     end do\n   end do\n "}, {"sha": "4b9c21a2ff4a9cb33ffd3f52ce0327594be2fffe", "filename": "gcc/testsuite/gfortran.dg/char_transpose_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_transpose_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_transpose_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_transpose_1.f90?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -8,7 +8,7 @@ program main\n \n   do i2 = 1, n2\n     do i1 = 1, n1\n-      a (i1, i2) = 'ab'(i1:i1) // 'cde'(i2:i2) // 'cantrip'\n+      a (i1, i2) = 'abc'(i1:i1) // 'defg'(i2:i2) // 'cantrip'\n     end do\n   end do\n "}, {"sha": "cca0eae5178ae290a56e6f158b36f7f4c8c63928", "filename": "gcc/testsuite/gfortran.dg/dependent_decls_1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependent_decls_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependent_decls_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependent_decls_1.f90?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -14,26 +14,26 @@ program bar\n     subroutine foo1 (xmin)\n         real, intent(inout) :: xmin(:)\n         real :: x(size(xmin)+1)           ! The declaration for r would be added\n-        real :: r(size(x)-2)              ! to the function before that of x\n+        real :: r(size(x)-1)              ! to the function before that of x\n         xmin = r\n-        if (size(r) .ne. 9) call abort ()\n+        if (size(r) .ne. 10) call abort ()\n         if (size(x) .ne. 11) call abort ()\n     end subroutine foo1\n     subroutine foo2 (xmin)                ! This version was OK because of the\n         real, intent(inout) :: xmin(:)    ! renaming of r which pushed it up\n         real :: x(size(xmin)+3)           ! the symtree.\n-        real :: zr(size(x)-6)\n+        real :: zr(size(x)-3)\n         xmin = zr\n-        if (size(zr) .ne. 7) call abort ()\n+        if (size(zr) .ne. 10) call abort ()\n         if (size(x) .ne. 13) call abort ()\n     end subroutine foo2\n     subroutine foo3 (xmin)\n         real, intent(inout) :: xmin(:)\n         character(size(x)+2) :: y         ! host associated x\n         character(len(y)+3) :: z          ! This did not work for any combination\n-        real :: r(len(z)-10)              ! of names.\n+        real :: r(len(z)-5)              ! of names.\n         xmin = r\n-        if (size(r) .ne. 5) call abort ()\n+        if (size(r) .ne. 10) call abort ()\n         if (len(z) .ne. 15) call abort ()\n     end subroutine foo3\n end program bar"}, {"sha": "6bfd819097ec1d0dbd2f0f239cc261ffa2713184", "filename": "gcc/testsuite/gfortran.dg/enum_10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do run }\n ! { dg-additional-sources enum_10.c }\n-! { dg-options \"-fshort-enums\" }\n+! { dg-options \"-fshort-enums -w\" }\n ! Make sure short enums are indeed interoperable with the\n ! corresponding C type.\n "}, {"sha": "dbf9f0d058dffc87ff9a874aa7165f38117cef51", "filename": "gcc/testsuite/gfortran.dg/g77/dnrm2.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fdnrm2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fdnrm2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fdnrm2.f?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,4 +1,5 @@\n c { dg-do run }\n+c { dg-options \"-fno-bounds-check\" }\n CCC g77 0.5.21 `Actual Bugs':\n CCC   * A code-generation bug afflicts Intel x86 targets when `-O2' is\n CCC     specified compiling, for example, an old version of the `DNRM2'"}, {"sha": "4ea719fb43d8b7fd17c4ed46498a4a8b3974947d", "filename": "gcc/testsuite/gfortran.dg/mixed_io_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,5 +1,6 @@\n ! { dg-do run }\n ! { dg-additional-sources mixed_io_1.c }\n+! { dg-options \"-w\" } \n       call cio\n       write(*,\"(A)\") '6789' ! { dg-output \"123456789\" }\n       end"}, {"sha": "b68a05ddad6050070cdc3e422c34cb9ed903fe9d", "filename": "gcc/testsuite/lib/fortran-torture.exp", "status": "modified", "additions": 37, "deletions": 7, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2003 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -20,24 +20,54 @@\n # This file was written by Steven Bosscher (s.bosscher@student.tudelft.nl)\n # based on f-torture.exp, which was written by Rob Savoye.\n \n-# The biggest change from g77 is that we always test all testcases with\n-# loop options, because it is much harder to figure out whether a testcase\n-# has loops if you have array syntax, like Fortran 95.  In fact, the whole\n-# point of F95 is arrays, so loops show up in most testcases anyway.\n-\n \n # The default option list can be overridden by\n # TORTURE_OPTIONS=\"{ { list1 } ... { listN } }\"\n \n if ![info exists TORTURE_OPTIONS] {\n+    # determine if host supports vectorization, and the necessary set\n+    # of options, based on code from testsuite/vect/vect.exp\n+\n+    set vectorizer_options [list \"-O2\" \"-ftree-vectorize\"]\n+\n+    if { [istarget \"powerpc*-*-*\"]\n+\t && [is-effective-target powerpc_altivec_ok]\n+\t && [check_vmx_hw_available] } {\n+\tlappend vectorizer_options \"-maltivec\"\n+\tset test_tree_vectorize 1\n+    } elseif { [istarget  \"spu-*-*\"] } {\n+\tset test_tree_vectorize 1\n+    } elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n+\tlappend vectorizer_options \"-msse2\"\n+\tset test_tree_vectorize 1\n+    } elseif { [istarget \"mipsisa64*-*-*\"]\n+\t       && [check_effective_target_mpaired_single] } {\n+\tlappend vectorizer_options \"-mpaired-single\"\n+\tset test_tree_vectorize 1\n+    } elseif [istarget \"sparc*-*-*\"] {\n+\tlappend vectorizer_options \"-mcpu=ultrasparc\" \"-mvis\"\n+\tset test_tree_vectorize 1\n+    } elseif { [istarget \"alpha*-*-*\"]\n+\t       && [check_alpha_max_hw_available] } {\n+\tlappend vectorizer_options \"-mmax\"\n+\tset test_tree_vectorize 1\n+    } elseif [istarget \"ia64-*-*\"] {\n+\tset test_tree_vectorize 1\n+    } else {\n+\tset test_tree_vectorize 0\n+    }\n+\n     set TORTURE_OPTIONS [list \\\n \t{ -O0 } { -O1 } { -O2 } \\\n \t{ -O2 -fomit-frame-pointer -finline-functions } \\\n \t{ -O2 -fomit-frame-pointer -finline-functions -funroll-loops } \\\n \t{ -O2 -fbounds-check } \\\n-\t{ -O2 -fno-repack-arrays } \\\n \t{ -O3 -g } \\\n \t{ -Os }]\n+\n+    if { $test_tree_vectorize } {\n+\tlappend TORTURE_OPTIONS $vectorizer_options\n+    }\n }\n \n "}, {"sha": "4a478850894586db5d865ae2b2321a80d5558883", "filename": "gcc/testsuite/lib/gfortran-dg.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7082e3d95afb5f313a8663050876ef5fd35534/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp?ref=ad7082e3d95afb5f313a8663050876ef5fd35534", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+#   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -14,6 +14,7 @@\n # along with this program; if not, write to the Free Software\n # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  \n \n+load_lib fortran-torture.exp\n load_lib gcc-dg.exp\n \n # Define gfortran callbacks for dg.exp."}]}