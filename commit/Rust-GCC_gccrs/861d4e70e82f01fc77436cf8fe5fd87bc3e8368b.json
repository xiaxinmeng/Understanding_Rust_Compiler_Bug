{"sha": "861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxZDRlNzBlODJmMDFmYzc3NDM2Y2Y4ZmU1ZmQ4N2JjM2U4MzY4Yg==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2001-07-02T20:50:40Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2001-07-02T20:50:40Z"}, "message": "ios.cc (ios_base::Init::_S_ios_create): Rename __bufsize to __out_bufsize.\n\n\tlibstdc++/2211\n\t* src/ios.cc (ios_base::Init::_S_ios_create): Rename __bufsize to\n\t__out_bufsize.  Add __in_bufsize, document it and use it.\n\nFrom-SVN: r43707", "tree": {"sha": "00d5a6432db11099a5c937cb6f861f0ae3c97db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d5a6432db11099a5c937cb6f861f0ae3c97db3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b/comments", "author": null, "committer": null, "parents": [{"sha": "528aeb4896cb1ee5f003f0da76549022119e4e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528aeb4896cb1ee5f003f0da76549022119e4e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/528aeb4896cb1ee5f003f0da76549022119e4e23"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "d4089dd634ba3fb32cb9fe5f9bb5bba3097f875a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "patch": "@@ -1,3 +1,9 @@\n+2001-07-02  Loren J. Rittle  <ljrittle@acm.org>\n+\n+\tlibstdc++/2211\n+\t* src/ios.cc (ios_base::Init::_S_ios_create): Rename __bufsize to\n+\t__out_bufsize.  Add __in_bufsize, document it and use it.  \n+\n 2001-07-01  Stephen M. Webb <stephen@bregmasoft.com>\n \n \t* include/bits/stl_construct.h (construct): Remove."}, {"sha": "182f5046ed1ba0634d2a3a0d64e95587e53e280e", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "patch": "@@ -144,14 +144,23 @@ namespace std\n   void\n   ios_base::Init::_S_ios_create(bool __sync)\n   {\n-    int __bufsize = __sync ? 0 : static_cast<int>(BUFSIZ);\n+    int __out_bufsize = __sync ? 0 : static_cast<int>(BUFSIZ);\n+    int __in_bufsize = __sync ? 1 : static_cast<int>(BUFSIZ);\n+\n+#if _GLIBCPP_AVOID_FSEEK\n+    // Platforms that prefer to avoid fseek() calls on streams only\n+    // get their desire when the C++-layer input buffer size is 1.\n+    // This hack hurts performance but keeps correctness across\n+    // all types of streams that might be attached to (e.g.) cin.\n+    __in_bufsize = 1;\n+#endif\n \n     // NB: The file globals.cc creates the four standard files\n     // with NULL buffers. At this point, we swap out the dummy NULL\n     // [io]stream objects and buffers with the real deal.\n-    new (&buf_cout) filebuf(stdout, ios_base::out, __bufsize);\n-    new (&buf_cin) filebuf(stdin, ios_base::in, 1);\n-    new (&buf_cerr) filebuf(stderr, ios_base::out, __bufsize);\n+    new (&buf_cout) filebuf(stdout, ios_base::out, __out_bufsize);\n+    new (&buf_cin) filebuf(stdin, ios_base::in, __in_bufsize);\n+    new (&buf_cerr) filebuf(stderr, ios_base::out, __out_bufsize);\n     new (&cout) ostream(&buf_cout);\n     new (&cin) istream(&buf_cin);\n     new (&cerr) ostream(&buf_cerr);\n@@ -160,9 +169,9 @@ namespace std\n     cerr.flags(ios_base::unitbuf);\n     \n #ifdef _GLIBCPP_USE_WCHAR_T\n-    new (&buf_wcout) wfilebuf(stdout, ios_base::out, __bufsize);\n-    new (&buf_wcin) wfilebuf(stdin, ios_base::in, 1);\n-    new (&buf_wcerr) wfilebuf(stderr, ios_base::out, __bufsize);\n+    new (&buf_wcout) wfilebuf(stdout, ios_base::out, __out_bufsize);\n+    new (&buf_wcin) wfilebuf(stdin, ios_base::in, __in_bufsize);\n+    new (&buf_wcerr) wfilebuf(stderr, ios_base::out, __out_bufsize);\n     new (&wcout) wostream(&buf_wcout);\n     new (&wcin) wistream(&buf_wcin);\n     new (&wcerr) wostream(&buf_wcerr);"}]}