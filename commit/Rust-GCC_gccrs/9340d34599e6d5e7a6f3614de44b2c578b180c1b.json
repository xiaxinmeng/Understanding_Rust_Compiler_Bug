{"sha": "9340d34599e6d5e7a6f3614de44b2c578b180c1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM0MGQzNDU5OWU2ZDVlN2E2ZjM2MTRkZTQ0YjJjNTc4YjE4MGMxYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-23T13:11:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-23T13:11:25Z"}, "message": "Convert inliner to function specific param infrastructure\n\nThis patch adds opt_for_fn for all cross module params used by inliner\nso they can be modified at function granuality.  With inlining almost always\nthere are three functions to consider (callee and caller of the inlined edge\nand the outer function caller is inlined to).\n\nI always use the outer function params since that is how local parameters\nbehave.  I hope it is kind of what is also expected in most case: it is better\nto inline agressively into -O3 compiled code rather than inline agressively -O3\nfunctions into their callers.\n\nNew params infrastructure is nice.  One drawback is that is very hard to\nsearch for individual param uses since they all occupy global namespace.\nWith C++ world we had chance to do something like params.param_flag_name\nor params::param_flag_name instead...\n\nBootstrapped/regtested x86_64-linux, comitted.\n\n\t* cif-code.def (MAX_INLINE_INSNS_SINGLE_O2_LIMIT): Remove.\n\t* doc/invoke.texi (max-inline-insns-single-O2,\n\tinline-heuristics-hint-percent-O2, inline-min-speedup-O2,\n\tearly-inlining-insns-O2): Remove documentation.\n\t* ipa-fnsummary.c (analyze_function_body,\n\tcompute_fn_summary): Use opt_for_fn when accessing parameters.\n\t* ipa-inline.c (caller_growth_limits, can_inline_edge_p,\n\tinline_insns_auto, can_inline_edge_by_limits_p,\n\twant_early_inline_function_p, big_speedup_p,\n\twant_inline_small_function_p, want_inline_self_recursive_call_p,\n\trecursive_inlining, compute_max_insns, inline_small_functions):\n\tLikewise.\n\t* opts.c (default_options): Add -O3 defaults for\n\tOPT__param_early_inlining_insns_,\n\tOPT__param_inline_heuristics_hint_percent_,\n\tOPT__param_inline_min_speedup_, OPT__param_max_inline_insns_single_.\n\t* params.opt (-param=early-inlining-insns-O2=,\n\t-param=inline-heuristics-hint-percent-O2=,\n\t-param=inline-min-speedup-O2=, -param=max-inline-insns-single-O2=\n\t-param=early-inlining-insns=, -param=inline-heuristics-hint-percent=,\n\t-param=inline-min-speedup=, -param=inline-unit-growth=,\n\t-param=large-function-growth=, -param=large-stack-frame=,\n\t-param=large-stack-frame-growth=, -param=large-unit-insns=,\n\t-param=max-inline-insns-recursive=,\n\t-param=max-inline-insns-recursive-auto=,\n\t-param=max-inline-insns-single=,\n\t-param=max-inline-insns-size=, -param=max-inline-insns-small=,\n\t-param=max-inline-recursive-depth=,\n\t-param=max-inline-recursive-depth-auto=,\n\t-param=min-inline-recursive-probability=,\n\t-param=partial-inlining-entry-probability=,\n\t-param=uninlined-function-insns=, -param=uninlined-function-time=,\n\t-param=uninlined-thunk-insns=, -param=uninlined-thunk-time=): Add\n\tOptimization.\n\n\t* g++.dg/tree-ssa/pr53844.C: Drop -O2 from param name.\n\t* g++.dg/tree-ssa/pr61034.C: Likewise.\n\t* g++.dg/tree-ssa/pr8781.C: Likewise.\n\t* g++.dg/warn/Wstringop-truncation-1.C: Likewise.\n\t* gcc.dg/ipa/pr63416.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-thread-12.c: Likewise.\n\t* gcc.dg/vect/pr66142.c: Likewise.\n\t* gcc.dg/winline-3.c: Likewise.\n\t* gcc.target/powerpc/pr72804.c: Likewise.\n\nFrom-SVN: r278644", "tree": {"sha": "d292f43ec703ffdbeb7c1d2ca6d090083b00ae4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d292f43ec703ffdbeb7c1d2ca6d090083b00ae4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9340d34599e6d5e7a6f3614de44b2c578b180c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9340d34599e6d5e7a6f3614de44b2c578b180c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9340d34599e6d5e7a6f3614de44b2c578b180c1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9340d34599e6d5e7a6f3614de44b2c578b180c1b/comments", "author": null, "committer": null, "parents": [{"sha": "956d615d66d06a9810000a5b7941be3ee1da7f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956d615d66d06a9810000a5b7941be3ee1da7f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956d615d66d06a9810000a5b7941be3ee1da7f8e"}], "stats": {"total": 172, "additions": 95, "deletions": 77}, "files": [{"sha": "f26529c12e48ef049dce5991a3405d079ea4d8a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,3 +1,40 @@\n+2019-11-23  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cif-code.def (MAX_INLINE_INSNS_SINGLE_O2_LIMIT): Remove.\n+\t* doc/invoke.texi (max-inline-insns-single-O2,\n+\tinline-heuristics-hint-percent-O2, inline-min-speedup-O2,\n+\tearly-inlining-insns-O2): Remove documentation.\n+\t* ipa-fnsummary.c (analyze_function_body,\n+\tcompute_fn_summary): Use opt_for_fn when accessing parameters.\n+\t* ipa-inline.c (caller_growth_limits, can_inline_edge_p,\n+\tinline_insns_auto, can_inline_edge_by_limits_p,\n+\twant_early_inline_function_p, big_speedup_p,\n+\twant_inline_small_function_p, want_inline_self_recursive_call_p,\n+\trecursive_inlining, compute_max_insns, inline_small_functions):\n+\tLikewise.\n+\t* opts.c (default_options): Add -O3 defaults for\n+\tOPT__param_early_inlining_insns_,\n+\tOPT__param_inline_heuristics_hint_percent_,\n+\tOPT__param_inline_min_speedup_, OPT__param_max_inline_insns_single_.\n+\t* params.opt (-param=early-inlining-insns-O2=,\n+\t-param=inline-heuristics-hint-percent-O2=,\n+\t-param=inline-min-speedup-O2=, -param=max-inline-insns-single-O2=\n+\t-param=early-inlining-insns=, -param=inline-heuristics-hint-percent=,\n+\t-param=inline-min-speedup=, -param=inline-unit-growth=,\n+\t-param=large-function-growth=, -param=large-stack-frame=,\n+\t-param=large-stack-frame-growth=, -param=large-unit-insns=,\n+\t-param=max-inline-insns-recursive=,\n+\t-param=max-inline-insns-recursive-auto=,\n+\t-param=max-inline-insns-single=,\n+\t-param=max-inline-insns-size=, -param=max-inline-insns-small=,\n+\t-param=max-inline-recursive-depth=,\n+\t-param=max-inline-recursive-depth-auto=,\n+\t-param=min-inline-recursive-probability=,\n+\t-param=partial-inlining-entry-probability=,\n+\t-param=uninlined-function-insns=, -param=uninlined-function-time=,\n+\t-param=uninlined-thunk-insns=, -param=uninlined-thunk-time=): Add\n+\tOptimization.\n+\n 2019-11-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ipa-fnsummary.c: Fix comment typos."}, {"sha": "ac773c1134c0d0236defe43721e3e65ed947ec7c", "filename": "gcc/cif-code.def", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -70,8 +70,6 @@ DEFCIFCODE(LARGE_STACK_FRAME_GROWTH_LIMIT, CIF_FINAL_NORMAL,\n \t   N_(\"--param large-stack-frame-growth limit reached\"))\n DEFCIFCODE(MAX_INLINE_INSNS_SINGLE_LIMIT, CIF_FINAL_NORMAL,\n \t   N_(\"--param max-inline-insns-single limit reached\"))\n-DEFCIFCODE(MAX_INLINE_INSNS_SINGLE_O2_LIMIT, CIF_FINAL_NORMAL,\n-\t   N_(\"--param max-inline-insns-single-O2 limit reached\"))\n DEFCIFCODE(MAX_INLINE_INSNS_AUTO_LIMIT, CIF_FINAL_NORMAL,\n \t   N_(\"--param max-inline-insns-auto limit reached\"))\n DEFCIFCODE(INLINE_UNIT_GROWTH_LIMIT, CIF_FINAL_NORMAL,"}, {"sha": "403be47d893d5d630ca213e46feea4f1c04413e2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -11281,17 +11281,12 @@ when modulo scheduling a loop.  Larger values can exponentially increase\n compilation time.\n \n @item max-inline-insns-single\n-@item max-inline-insns-single-O2\n Several parameters control the tree inliner used in GCC@.  This number sets the\n maximum number of instructions (counted in GCC's internal representation) in a\n single function that the tree inliner considers for inlining.  This only\n affects functions declared inline and methods implemented in a class\n declaration (C++). \n \n-For functions compiled with optimization levels\n-@option{-O3} and @option{-Ofast} parameter @option{max-inline-insns-single} is\n-applied. In other cases @option{max-inline-insns-single-O2} is applied.\n-\n \n @item max-inline-insns-auto\n When you use @option{-finline-functions} (included in @option{-O3}),\n@@ -11317,33 +11312,22 @@ Extra time accounted by inliner for function overhead such as time needed to\n execute function prologue and epilogue\n \n @item inline-heuristics-hint-percent\n-@item inline-heuristics-hint-percent-O2\n The scale (in percents) applied to @option{inline-insns-single},\n @option{inline-insns-single-O2}, @option{inline-insns-auto}\n when inline heuristics hints that inlining is\n very profitable (will enable later optimizations).\n \n-For functions compiled with optimization levels\n-@option{-O3} and @option{-Ofast} parameter\n-@option{inline-heuristics-hint-percent} is applied. In other cases\n-@option{inline-heuristics-hint-percent-O2} is applied.\n-\n @item uninlined-thunk-insns\n @item uninlined-thunk-time\n Same as @option{--param uninlined-function-insns} and\n @option{--param uninlined-function-time} but applied to function thunks\n \n @item inline-min-speedup\n-@item inline-min-speedup-O2\n When estimated performance improvement of caller + callee runtime exceeds this\n threshold (in percent), the function can be inlined regardless of the limit on\n @option{--param max-inline-insns-single} and @option{--param\n max-inline-insns-auto}.\n \n-For functions compiled with optimization levels\n-@option{-O3} and @option{-Ofast} parameter @option{inline-min-speedup} is\n-applied. In other cases @option{inline-min-speedup-O2} is applied.\n-\n @item large-function-insns\n The limit specifying really large functions.  For functions larger than this\n limit after inlining, inlining is constrained by\n@@ -11421,14 +11405,9 @@ via a given call expression.  This parameter limits inlining only to call\n expressions whose probability exceeds the given threshold (in percents).\n \n @item early-inlining-insns\n-@item early-inlining-insns-O2\n Specify growth that the early inliner can make.  In effect it increases\n the amount of inlining for code having a large abstraction penalty.\n \n-For functions compiled with optimization levels\n-@option{-O3} and @option{-Ofast} parameter @option{early-inlining-insns} is\n-applied. In other cases @option{early-inlining-insns-O2} is applied.\n-\n @item max-early-inliner-iterations\n Limit of iterations of the early inliner.  This basically bounds\n the number of nested indirect calls the early inliner can resolve."}, {"sha": "122a369abb494119a0ef4af02b9664f81f3f1c0e", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -2397,9 +2397,9 @@ fp_expression_p (gimple *stmt)\n static void\n analyze_function_body (struct cgraph_node *node, bool early)\n {\n-  sreal time = param_uninlined_function_time;\n+  sreal time = opt_for_fn (node->decl, param_uninlined_function_time);\n   /* Estimate static overhead for function prologue/epilogue and alignment. */\n-  int size = param_uninlined_function_insns;\n+  int size = opt_for_fn (node->decl, param_uninlined_function_insns);\n   /* Benefits are scaled by probability of elimination that is in range\n      <0,2>.  */\n   basic_block bb;\n@@ -2465,9 +2465,11 @@ analyze_function_body (struct cgraph_node *node, bool early)\n   info->account_size_time (0, 0, bb_predicate, bb_predicate);\n \n   bb_predicate = predicate::not_inlined ();\n-  info->account_size_time (param_uninlined_function_insns\n+  info->account_size_time (opt_for_fn (node->decl,\n+\t\t\t\tparam_uninlined_function_insns)\n \t\t\t   * ipa_fn_summary::size_scale,\n-\t\t\t   param_uninlined_function_time,\n+\t\t\t   opt_for_fn (node->decl,\n+\t\t\t\tparam_uninlined_function_time),\n \t\t\t   bb_predicate,\n \t\t           bb_predicate);\n \n@@ -2865,8 +2867,10 @@ compute_fn_summary (struct cgraph_node *node, bool early)\n       es->call_stmt_size = eni_size_weights.call_cost;\n       es->call_stmt_time = eni_time_weights.call_cost;\n       info->account_size_time (ipa_fn_summary::size_scale\n-\t\t\t       * param_uninlined_function_thunk_insns,\n-\t\t\t       param_uninlined_function_thunk_time, t, t);\n+\t\t\t       * opt_for_fn (node->decl,\n+\t\t\t\t param_uninlined_function_thunk_insns),\n+\t\t\t       opt_for_fn (node->decl,\n+\t\t\t\t param_uninlined_function_thunk_time), t, t);\n       t = predicate::not_inlined ();\n       info->account_size_time (2 * ipa_fn_summary::size_scale, 0, t, t);\n       ipa_update_overall_fn_summary (node);"}, {"sha": "3c53fbe1baa6202dbbc03ce4cec737c834232a69", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -544,6 +544,10 @@ static const struct default_options default_options_table[] =\n \n     /* -O3 parameters.  */\n     { OPT_LEVELS_3_PLUS, OPT__param_max_inline_insns_auto_, NULL, 30 },\n+    { OPT_LEVELS_3_PLUS, OPT__param_early_inlining_insns_, NULL, 14 },\n+    { OPT_LEVELS_3_PLUS, OPT__param_inline_heuristics_hint_percent_, NULL, 600 },\n+    { OPT_LEVELS_3_PLUS, OPT__param_inline_min_speedup_, NULL, 15 },\n+    { OPT_LEVELS_3_PLUS, OPT__param_max_inline_insns_single_, NULL, 200 },\n \n     /* -Ofast adds optimizations to -O3.  */\n     { OPT_LEVELS_FAST, OPT_ffast_math, NULL, 1 },"}, {"sha": "586b539ec5f24512a34caa1e2156aaf40c832a06", "filename": "gcc/params.opt", "status": "modified", "additions": 23, "deletions": 39, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -99,12 +99,8 @@ Common Joined UInteger Var(param_dse_max_object_size) Init(256) Param\n Maximum size (in bytes) of objects tracked bytewise by dead store elimination.\n \n -param=early-inlining-insns=\n-Common Joined UInteger Var(param_early_inlining_insns) Init(14) Param\n-Maximal estimated growth of function body caused by early inlining of single call with -O3 and -Ofast.\n-\n--param=early-inlining-insns-O2=\n-Common Joined UInteger Var(param_early_inlining_insns_o2) Init(6) Param\n-Maximal estimated growth of function body caused by early inlining of single call with -O1 and -O2.\n+Common Joined UInteger Var(param_early_inlining_insns) Init(6) Optimization Param\n+Maximal estimated growth of function body caused by early inlining of single call.\n \n -param=fsm-maximum-phi-arguments=\n Common Joined UInteger Var(param_fsm_maximum_phi_arguments) Init(100) IntegerRange(1, 999999) Param\n@@ -179,23 +175,15 @@ Common Joined UInteger Var(param_hsa_gen_debug_stores) IntegerRange(0, 1) Param\n Level of hsa debug stores verbosity.\n \n -param=inline-heuristics-hint-percent=\n-Common Joined UInteger Var(param_inline_heuristics_hint_percent) Init(600) IntegerRange(100, 1000000) Param\n-The scale (in percents) applied to inline-insns-single and auto limits when heuristics hints that inlining is very profitable with -O3 and -Ofast.\n-\n--param=inline-heuristics-hint-percent-O2=\n-Common Joined UInteger Var(param_inline_heuristics_hint_percent_o2) Init(200) IntegerRange(100, 1000000) Param\n+Common Joined UInteger Var(param_inline_heuristics_hint_percent) Init(200) Optimization IntegerRange(100, 1000000) Param\n The scale (in percents) applied to inline-insns-single and auto limits when heuristics hints that inlining is very profitable.\n \n -param=inline-min-speedup=\n-Common Joined UInteger Var(param_inline_min_speedup) Init(15) IntegerRange(0, 100) Param\n-The minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-insns-auto with -O3 and -Ofast.\n-\n--param=inline-min-speedup-O2=\n-Common Joined UInteger Var(param_inline_min_speedup_o2) Init(30) IntegerRange(0, 100) Param\n+Common Joined UInteger Var(param_inline_min_speedup) Init(30) Optimization IntegerRange(0, 100) Param\n The minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-insns-auto.\n \n -param=inline-unit-growth=\n-Common Joined UInteger Var(param_inline_unit_growth) Init(40) Param\n+Common Joined UInteger Var(param_inline_unit_growth) Init(40) Optimization Param\n How much can given compilation unit grow because of the inlining (in percent).\n \n -param=integer-share-limit=\n@@ -295,23 +283,23 @@ Common Joined UInteger Var(param_l2_cache_size) Init(512) Param\n The size of L2 cache.\n \n -param=large-function-growth=\n-Common Joined UInteger Var(param_large_function_growth) Init(100) Param\n+Common Joined UInteger Var(param_large_function_growth) Optimization Init(100) Param\n Maximal growth due to inlining of large function (in percent).\n \n -param=large-function-insns=\n-Common Joined UInteger Var(param_large_function_insns) Init(2700) Param\n+Common Joined UInteger Var(param_large_function_insns) Optimization Init(2700) Param\n The size of function body to be considered large.\n \n -param=large-stack-frame=\n-Common Joined UInteger Var(param_large_stack_frame) Init(256) Param\n+Common Joined UInteger Var(param_large_stack_frame) Init(256) Optimization Param\n The size of stack frame to be considered large.\n \n -param=large-stack-frame-growth=\n-Common Joined UInteger Var(param_stack_frame_growth) Init(1000) Param\n+Common Joined UInteger Var(param_stack_frame_growth) Optimization Init(1000) Param\n Maximal stack frame growth due to inlining (in percent).\n \n -param=large-unit-insns=\n-Common Joined UInteger Var(param_large_unit_insns) Init(10000) Param\n+Common Joined UInteger Var(param_large_unit_insns) Optimization  Init(10000) Param\n The size of translation unit to be considered large.\n \n -param=lim-expensive=\n@@ -471,35 +459,31 @@ Common Joined UInteger Var(param_max_inline_insns_auto) Init(15) Optimization Pa\n The maximum number of instructions when automatically inlining.\n \n -param=max-inline-insns-recursive=\n-Common Joined UInteger Var(param_max_inline_insns_recursive) Init(450) Param\n+Common Joined UInteger Var(param_max_inline_insns_recursive) Optimization Init(450) Param\n The maximum number of instructions inline function can grow to via recursive inlining.\n \n -param=max-inline-insns-recursive-auto=\n-Common Joined UInteger Var(param_max_inline_insns_recursive_auto) Init(450) Param\n+Common Joined UInteger Var(param_max_inline_insns_recursive_auto) Optimization Init(450) Param\n The maximum number of instructions non-inline function can grow to via recursive inlining.\n \n -param=max-inline-insns-single=\n-Common Joined UInteger Var(param_max_inline_insns_single) Init(200) Param\n-The maximum number of instructions in a single function eligible for inlining with -O3 and -Ofast.\n-\n--param=max-inline-insns-single-O2=\n-Common Joined UInteger Var(param_max_inline_insns_single_o2) Init(70) Param\n+Common Joined UInteger Var(param_max_inline_insns_single) Optimization Init(70) Param\n The maximum number of instructions in a single function eligible for inlining.\n \n -param=max-inline-insns-size=\n-Common Joined UInteger Var(param_max_inline_insns_size) Param\n+Common Joined UInteger Var(param_max_inline_insns_size) Optimization Param\n The maximum number of instructions when inlining for size.\n \n -param=max-inline-insns-small=\n-Common Joined UInteger Var(param_max_inline_insns_small) Param\n+Common Joined UInteger Var(param_max_inline_insns_small) Optimization Param\n The maximum number of instructions when automatically inlining small functions.\n \n -param=max-inline-recursive-depth=\n-Common Joined UInteger Var(param_max_inline_recursive_depth) Init(8) Param\n+Common Joined UInteger Var(param_max_inline_recursive_depth) Optimization Init(8) Param\n The maximum depth of recursive inlining for inline functions.\n \n -param=max-inline-recursive-depth-auto=\n-Common Joined UInteger Var(param_max_inline_recursive_depth_auto) Init(8) Param\n+Common Joined UInteger Var(param_max_inline_recursive_depth_auto) Optimization Init(8) Param\n The maximum depth of recursive inlining for non-inline functions.\n \n -param=max-isl-operations=\n@@ -679,7 +663,7 @@ Common Joined UInteger Var(param_min_crossjump_insns) Init(5) IntegerRange(1, 65\n The minimum number of matching instructions to consider for crossjumping.\n \n -param=min-inline-recursive-probability=\n-Common Joined UInteger Var(param_min_inline_recursive_probability) Init(10) Param\n+Common Joined UInteger Var(param_min_inline_recursive_probability) Init(10) Optimization Param\n Inline recursively only when the probability of call being executed exceeds the parameter.\n \n -param=min-insn-to-prefetch-ratio=\n@@ -737,7 +721,7 @@ EnumValue\n Enum(parloops_schedule_type) String(runtime) Value(PARLOOPS_SCHEDULE_RUNTIME)\n \n -param=partial-inlining-entry-probability=\n-Common Joined UInteger Var(param_partial_inlining_entry_probability) Init(70) IntegerRange(0, 100) Param\n+Common Joined UInteger Var(param_partial_inlining_entry_probability) Init(70) Optimization IntegerRange(0, 100) Param\n Maximum probability of the entry BB of split region (in percent relative to entry BB of the function) to make partial inlining happen.\n \n -param=predictable-branch-outcome=\n@@ -913,19 +897,19 @@ Common Joined UInteger Var(param_uninit_control_dep_attempts) Init(1000) Integer\n Maximum number of nested calls to search for control dependencies during uninitialized variable analysis.\n \n -param=uninlined-function-insns=\n-Common Joined UInteger Var(param_uninlined_function_insns) Init(2) IntegerRange(0, 1000000) Param\n+Common Joined UInteger Var(param_uninlined_function_insns) Init(2) Optimization IntegerRange(0, 1000000) Param\n Instruction accounted for function prologue, epilogue and other overhead.\n \n -param=uninlined-function-time=\n-Common Joined UInteger Var(param_uninlined_function_time) IntegerRange(0, 1000000) Param\n+Common Joined UInteger Var(param_uninlined_function_time) Optimization IntegerRange(0, 1000000) Param\n Time accounted for function prologue, epilogue and other overhead.\n \n -param=uninlined-thunk-insns=\n-Common Joined UInteger Var(param_uninlined_function_thunk_insns) Init(2) IntegerRange(0, 1000000) Param\n+Common Joined UInteger Var(param_uninlined_function_thunk_insns) Optimization Init(2) IntegerRange(0, 1000000) Param\n Instruction accounted for function thunk overhead.\n \n -param=uninlined-thunk-time=\n-Common Joined UInteger Var(param_uninlined_function_thunk_time) Init(2) IntegerRange(0, 1000000) Param\n+Common Joined UInteger Var(param_uninlined_function_thunk_time) Optimization Init(2) IntegerRange(0, 1000000) Param\n Time accounted for function thunk overhead.\n \n -param=unlikely-bb-count-fraction="}, {"sha": "7687fcc4abffcc91e60bf9605fa1c966116afe1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,3 +1,15 @@\n+2019-11-23  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* g++.dg/tree-ssa/pr53844.C: Drop -O2 from param name.\n+\t* g++.dg/tree-ssa/pr61034.C: Likewise.\n+\t* g++.dg/tree-ssa/pr8781.C: Likewise.\n+\t* g++.dg/warn/Wstringop-truncation-1.C: Likewise.\n+\t* gcc.dg/ipa/pr63416.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-thread-12.c: Likewise.\n+\t* gcc.dg/vect/pr66142.c: Likewise.\n+\t* gcc.dg/winline-3.c: Likewise.\n+\t* gcc.target/powerpc/pr72804.c: Likewise.\n+\n 2019-11-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/92615"}, {"sha": "74027e0a1fdb5b73c1547db2b53b34155774d1eb", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr53844.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr53844.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr53844.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr53844.C?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O2 -fdump-tree-optimized-vops -fno-inline-functions --param max-inline-insns-single-O2=200\" }\n+// { dg-options \"-O2 -fdump-tree-optimized-vops -fno-inline-functions --param max-inline-insns-single=200\" }\n \n struct VBase;\n "}, {"sha": "1e8168ab4f42661234f4e8604c8b905058cbe3bb", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr61034.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O2 -fdump-tree-fre3 -fdump-tree-optimized -fdelete-null-pointer-checks --param early-inlining-insns-O2=14 --param max-inline-insns-single-O2=200\" }\n+// { dg-options \"-O2 -fdump-tree-fre3 -fdump-tree-optimized -fdelete-null-pointer-checks --param early-inlining-insns=14 --param max-inline-insns-single=200\" }\n \n #define assume(x) if(!(x))__builtin_unreachable()\n "}, {"sha": "b9f636b6083c7d6709a579d32626d237b416fb37", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr8781.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1 --param early-inlining-insns-O2=14\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1 --param early-inlining-insns=14\" } */\n \n int f();\n "}, {"sha": "8f5e7da2c2ed777efcb38e6d3035a1e3214663f7", "filename": "gcc/testsuite/g++.dg/warn/Wstringop-truncation-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstringop-truncation-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstringop-truncation-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstringop-truncation-1.C?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,7 +1,7 @@\n /* PR/tree-optimization/84480 - bogus -Wstringop-truncation despite\n    assignment with an inlined string literal\n    { dg-do compile }\n-   { dg-options \"-O2 -Wstringop-truncation --param early-inlining-insns-O2=14\" }  */\n+   { dg-options \"-O2 -Wstringop-truncation --param early-inlining-insns=14\" }  */\n \n #include <string.h>\n "}, {"sha": "c7bc97e0bb1ba211d2e908022ee73191556202d1", "filename": "gcc/testsuite/gcc.dg/ipa/pr63416.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63416.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63416.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63416.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-optimized --param early-inlining-insns-O2=14\"  } */\n+/* { dg-options \"-O2 -fdump-tree-optimized --param early-inlining-insns=14\"  } */\n #define _UNUSED_ __attribute__((__unused__))\n \n typedef int TEST_F30 (int *v);"}, {"sha": "fb9840e95d5861e0943c88cab59f7a0c3121a442", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-thread-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-thread-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-thread-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-thread-12.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-thread2-details -fdump-tree-thread3-details -fdump-tree-thread4-details -fno-finite-loops --param early-inlining-insns-O2=14 -fno-inline-functions\" } */\n+/* { dg-options \"-O2 -fdump-tree-thread2-details -fdump-tree-thread3-details -fdump-tree-thread4-details -fno-finite-loops --param early-inlining-insns=14 -fno-inline-functions\" } */\n /* { dg-final { scan-tree-dump \"FSM\" \"thread2\" } } */\n /* { dg-final { scan-tree-dump \"FSM\" \"thread3\" } } */\n /* { dg-final { scan-tree-dump \"FSM\" \"thread4\" { xfail *-*-* } } } */"}, {"sha": "7abd00ca85a709653774f1e41d33b9286c409ddb", "filename": "gcc/testsuite/gcc.dg/vect/pr66142.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/66142 */\n /* { dg-do compile } */\n-/* { dg-additional-options \"-ffast-math -fopenmp-simd --param early-inlining-insns-O2=14\" } */\n+/* { dg-additional-options \"-ffast-math -fopenmp-simd --param early-inlining-insns=14\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n \n struct A { float x, y; };"}, {"sha": "7b7c8c5b9eb8b2f58284cdcc8726e88d2b60f198", "filename": "gcc/testsuite/gcc.dg/winline-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param max-inline-insns-single-O2=1 --param inline-min-speedup-O2=100 -fgnu89-inline\" } */\n+/* { dg-options \"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline\" } */\n \n void big (void);\n inline int q(void) /* { dg-warning \"max-inline-insns-single\" } */"}, {"sha": "56a2452885e541b143240355298590c3841a4240", "filename": "gcc/testsuite/gcc.target/powerpc/pr72804.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72804.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9340d34599e6d5e7a6f3614de44b2c578b180c1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72804.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72804.c?ref=9340d34599e6d5e7a6f3614de44b2c578b180c1b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { lp64 } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-O2 -mvsx -fno-inline-functions --param max-inline-insns-single-O2=200\" } */\n+/* { dg-options \"-O2 -mvsx -fno-inline-functions --param max-inline-insns-single=200\" } */\n \n __int128_t\n foo (__int128_t *src)"}]}