{"sha": "ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyOTA1MzdhMzAxOGU4Y2U3ZjQ0OWI4YjNkZmVmYTdlZmNjMmJlNg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2002-04-12T22:31:27Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-04-12T22:31:27Z"}, "message": "* gcc/libstdc++-v3/config/os/hpux/bits/os_defines.h\n\t(strtoll, strtoull): In 64 bit mode HP-UX (IA64 and HPPA)\n\tdoes not define strtoll or strtoull, but does define strtol\n\tand strtoul which are the same since in 64 bit mode\n\tsizeof(long) == sizeof(long long).\n\nFrom-SVN: r52247", "tree": {"sha": "7adeb4af0c3de71fe6155a6418a7a381f8c76c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7adeb4af0c3de71fe6155a6418a7a381f8c76c1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6/comments", "author": null, "committer": null, "parents": [{"sha": "cc8475cbc3ac9570d51ef3725b283d0e00732e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8475cbc3ac9570d51ef3725b283d0e00732e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8475cbc3ac9570d51ef3725b283d0e00732e0f"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1611797b14a7909f7b76f19fd8ebac756be21a7a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "patch": "@@ -1,3 +1,11 @@\n+2002-04-12  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* gcc/libstdc++-v3/config/os/hpux/bits/os_defines.h\n+\t(strtoll, strtoull): In 64 bit mode HP-UX (IA64 and HPPA)\n+\tdoes not define strtoll or strtoull, but does define strtol\n+\tand strtoul which are the same since in 64 bit mode\n+\tsizeof(long) == sizeof(long long).\n+\n 2002-04-12  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/std/std_bitset.h:  Doxygenate std::bitset<>.  Clean up"}, {"sha": "4bd2e05c6bac1e67271a92dc1005d22ce56566b3", "filename": "libstdc++-v3/config/os/hpux/bits/os_defines.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef290537a3018e8ce7f449b8b3dfefa7efcc2be6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h?ref=ef290537a3018e8ce7f449b8b3dfefa7efcc2be6", "patch": "@@ -60,10 +60,17 @@\n    We also force _GLIBCPP_USE_LONG_LONG here so that we don't have\n    to bastardize configure to deal with this sillyness.  */\n namespace std {\n+#ifndef __LP64__\n   __extension__ extern \"C\" long long strtoll (const char *, char **, int)\n     __asm  (\"__strtoll\");\n   __extension__ extern \"C\" unsigned long long strtoull (const char *, char **, int)\n     __asm  (\"__strtoull\");\n+#else\n+  __extension__ extern \"C\" long long strtoll (const char *, char **, int)\n+    __asm  (\"strtol\");\n+  __extension__ extern \"C\" unsigned long long strtoull (const char *, char **, int)\n+    __asm  (\"strtoul\");\n+#endif\n }\n #define _GLIBCPP_USE_LONG_LONG 1\n #endif"}]}