{"sha": "fecda57e60488d15a180b8dde02cf7a4d978ebc7", "node_id": "C_kwDOANBUbNoAKGZlY2RhNTdlNjA0ODhkMTVhMTgwYjhkZGUwMmNmN2E0ZDk3OGViYzc", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-10-18T10:56:56Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-10-18T10:59:31Z"}, "message": "bfin: Popcount-related improvements to machine description.\n\nBlackfin processors support a ONES instruction that implements a\n32-bit popcount returning a 16-bit result.  This instruction was\npreviously described by GCC's bfin backend using an UNSPEC, which\nthis patch changes to use a popcount:SI rtx thats capture its semantics,\nallowing it to evaluated and simplified at compile-time.  I've decided\nto keep the instruction name the same (avoiding any changes to the\n__builtin_bfin_ones machinery), but have provided popcountsi2 and\npopcounthi2 expanders so that the middle-end can use this instruction\nto implement __builtin_popcount (and __builtin_parity).\n\nThe new testcase ones.c\nshort foo ()\n{\n  int t = 5;\n  short r = __builtin_bfin_ones(t);\n  return r;\n}\n\npreviously generated:\n_foo:   nop;\n        nop;\n        R0 = 5 (X);\n        R0.L = ONES R0;\n        rts;\n\nwith this patch, now generates:\n_foo:   nop;\n        nop;\n        nop;\n        R0 = 2 (X);\n        rts;\n\nThe new testcase popcount.c\nint foo(int x)\n{\n  return __builtin_popcount(x);\n}\n\npreviously generated:\n_foo:   [--SP] = RETS;\n        SP += -12;\n        call ___popcountsi2;\n        SP += 12;\n        RETS = [SP++];\n        rts;\n\nnow generates:\n_foo:   nop;\n        nop;\n        R0.L = ONES R0;\n        R0 = R0.L (Z);\n        rts;\n\nAnd the new testcase parity.c\nint foo(int x)\n{\n  return __builtin_parity(x);\n}\n\npreviously generated:\n_foo:\t[--SP] = RETS;\n        SP += -12;\n        call ___paritysi2;\n        SP += 12;\n        RETS = [SP++];\n        rts;\n\nnow generates:\n_foo:\tnop;\n        R1 = 1 (X);\n        R0.L = ONES R0;\n        R0 = R1 & R0;\n        rts;\n\n2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* config/bfin/bfin.md (define_constants): Remove UNSPEC_ONES.\n\t(define_insn \"ones\"): Replace UNSPEC_ONES with a truncate of\n\ta popcount, allowing compile-time evaluation/simplification.\n\t(popcountsi2, popcounthi2): New expanders using a \"ones\" insn.\n\ngcc/testsuite/ChangeLog\n\t* gcc.target/bfin/ones.c: New test case.\n\t* gcc.target/bfin/parity.c: New test case.\n\t* gcc.target/bfin/popcount.c: New test case.", "tree": {"sha": "6cc4448f52ee426ca22812800aa5f60414826d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc4448f52ee426ca22812800aa5f60414826d79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fecda57e60488d15a180b8dde02cf7a4d978ebc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecda57e60488d15a180b8dde02cf7a4d978ebc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fecda57e60488d15a180b8dde02cf7a4d978ebc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecda57e60488d15a180b8dde02cf7a4d978ebc7/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb032893675afea4b01cc6ad06a3e0dcfe9b51cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb032893675afea4b01cc6ad06a3e0dcfe9b51cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb032893675afea4b01cc6ad06a3e0dcfe9b51cd"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "8b311f3ab11259cf4d414580f23173538128ad9e", "filename": "gcc/config/bfin/bfin.md", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Fconfig%2Fbfin%2Fbfin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Fconfig%2Fbfin%2Fbfin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.md?ref=fecda57e60488d15a180b8dde02cf7a4d978ebc7", "patch": "@@ -138,8 +138,7 @@\n    ;; Distinguish a 32-bit version of an insn from a 16-bit version.\n    (UNSPEC_32BIT 11)\n    (UNSPEC_NOP 12)\n-   (UNSPEC_ONES 13)\n-   (UNSPEC_ATOMIC 14)])\n+   (UNSPEC_ATOMIC 13)])\n \n (define_constants\n   [(UNSPEC_VOLATILE_CSYNC 1)\n@@ -1398,12 +1397,32 @@\n \n (define_insn \"ones\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n-\t(unspec:HI [(match_operand:SI 1 \"register_operand\" \"d\")]\n-\t\tUNSPEC_ONES))]\n+\t(truncate:HI\n+\t (popcount:SI (match_operand:SI 1 \"register_operand\" \"d\"))))]\n   \"\"\n   \"%h0 = ONES %1;\"\n   [(set_attr \"type\" \"alu0\")])\n \n+(define_expand \"popcountsi2\"\n+  [(set (match_dup 2)\n+\t(truncate:HI (popcount:SI (match_operand:SI 1 \"register_operand\" \"\"))))\n+   (set (match_operand:SI 0 \"register_operand\")\n+\t(zero_extend:SI (match_dup 2)))]\n+  \"\"\n+{\n+  operands[2] = gen_reg_rtx (HImode);\n+})\n+\n+(define_expand \"popcounthi2\"\n+  [(set (match_dup 2)\n+\t(zero_extend:SI (match_operand:HI 1 \"register_operand\" \"\")))\n+   (set (match_operand:HI 0 \"register_operand\") \n+\t(truncate:HI (popcount:SI (match_dup 2))))]\n+  \"\"\n+{\n+  operands[2] = gen_reg_rtx (SImode);\n+})\n+\n (define_insn \"smaxsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(smax:SI (match_operand:SI 1 \"register_operand\" \"d\")"}, {"sha": "cdffe845c4d2903020231e50436ae11fa0bad966", "filename": "gcc/testsuite/gcc.target/bfin/ones.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fones.c?ref=fecda57e60488d15a180b8dde02cf7a4d978ebc7", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+short foo ()\n+{\n+  int t = 5;\n+  short r = __builtin_bfin_ones(t);\n+  return r;\n+}\n+\n+/* { dg-final { scan-assembler-not \"ONES\" } } */"}, {"sha": "6490b7fce021a8ee74cfff2c63ef588caca170fb", "filename": "gcc/testsuite/gcc.target/bfin/parity.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fparity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fparity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fparity.c?ref=fecda57e60488d15a180b8dde02cf7a4d978ebc7", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x)\n+{\n+  return __builtin_parity(x);\n+}\n+\n+/* { dg-final { scan-assembler \"ONES\" } } */"}, {"sha": "51c19bee0c9b8c902ab834d7ad2fb6b745ddc1dc", "filename": "gcc/testsuite/gcc.target/bfin/popcount.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fpopcount.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecda57e60488d15a180b8dde02cf7a4d978ebc7/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fpopcount.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fpopcount.c?ref=fecda57e60488d15a180b8dde02cf7a4d978ebc7", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x)\n+{\n+  return __builtin_popcount(x);\n+}\n+\n+/* { dg-final { scan-assembler \"ONES\" } } */"}]}