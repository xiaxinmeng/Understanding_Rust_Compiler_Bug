{"sha": "01a07a642e8b9435327efc7d603fa5bf849a8c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhMDdhNjQyZThiOTQzNTMyN2VmYzdkNjAzZmE1YmY4NDlhOGMyNQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-26T17:26:19Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-26T17:26:19Z"}, "message": "system.h (UNALIGNED_SHORT_ASM_OP, [...]): Poison.\n\n\t* system.h (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n\tUNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Poison.\n\t* vmsdbgout.c (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n\tUNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Rename to\n\tVMS_UNALIGNED_SHORT_ASM_OP, VMS_UNALIGNED_INT_ASM_OP,\n\tVMS_UNALIGNED_LONG_ASM_OP, and VMS_UNALIGNED_DOUBLE_INT_ASM_OP.\n\t* config/microblaze/microblaze.h (UNALIGNED_SHORT_ASM_OP,\n\tUNALIGNED_INT_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Do not define.\n\t* doc/tm.texi.in: Remove UNALIGNED_INT_ASM_OP reference from the\n\tdocumentation.\n\t* doc/tm.texi: Regenerate.\n\t* doc/cpp.texi: Make example for #error generic.\n\t* config/frv/frv.h: Fix example text to match tm.texi.\n\nFrom-SVN: r188991", "tree": {"sha": "dbef672791d9eda52e0fd9143fad1f20a0ab3344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbef672791d9eda52e0fd9143fad1f20a0ab3344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01a07a642e8b9435327efc7d603fa5bf849a8c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a07a642e8b9435327efc7d603fa5bf849a8c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a07a642e8b9435327efc7d603fa5bf849a8c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a07a642e8b9435327efc7d603fa5bf849a8c25/comments", "author": null, "committer": null, "parents": [{"sha": "f9453c07d6f320f3c4c32c2d0ae992d2b3536261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9453c07d6f320f3c4c32c2d0ae992d2b3536261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9453c07d6f320f3c4c32c2d0ae992d2b3536261"}], "stats": {"total": 85, "additions": 41, "deletions": 44}, "files": [{"sha": "cd78a2a8f15599c67d387346d753af422bd9e385", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -1,3 +1,19 @@\n+2012-06-26  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* system.h (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n+\tUNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Poison.\n+\t* vmsdbgout.c (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n+\tUNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Rename to\n+\tVMS_UNALIGNED_SHORT_ASM_OP, VMS_UNALIGNED_INT_ASM_OP,\n+\tVMS_UNALIGNED_LONG_ASM_OP, and VMS_UNALIGNED_DOUBLE_INT_ASM_OP.\n+\t* config/microblaze/microblaze.h (UNALIGNED_SHORT_ASM_OP,\n+\tUNALIGNED_INT_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Do not define.\n+\t* doc/tm.texi.in: Remove UNALIGNED_INT_ASM_OP reference from the\n+\tdocumentation.\n+\t* doc/tm.texi: Regenerate.\n+\t* doc/cpp.texi: Make example for #error generic.\n+\t* config/frv/frv.h: Fix example text to match tm.texi.\n+\n 2012-06-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \t* tree-pass.h (pass_strength_reduction): New decl."}, {"sha": "2f8fa92e75d606d6979e9aa75ac20de73485988a", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -1822,8 +1822,8 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n /* Define this macro to 0 if your target supports DWARF 2 frame unwind\n    information, but it does not yet work with exception handling.  Otherwise,\n    if your target supports this information (if it defines\n-   `INCOMING_RETURN_ADDR_RTX' and either `UNALIGNED_INT_ASM_OP' or\n-   `OBJECT_FORMAT_ELF'), GCC will provide a default definition of 1.\n+   `INCOMING_RETURN_ADDR_RTX' and `OBJECT_FORMAT_ELF'), GCC will provide\n+   a default definition of 1.\n \n    If this macro is defined to 1, the DWARF 2 unwinder will be the default\n    exception handling mechanism; otherwise, setjmp/longjmp will be used by"}, {"sha": "53111e54aace93135222e832af11145922fb1e43", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -738,11 +738,6 @@ extern int save_volatiles;\n \n #define INTERRUPT_HANDLER_NAME \"_interrupt_handler\"\n \n-/* These #define added for C++.  */\n-#define UNALIGNED_SHORT_ASM_OP          \".data16\"\n-#define UNALIGNED_INT_ASM_OP            \".data32\"\n-#define UNALIGNED_DOUBLE_INT_ASM_OP     \".data8\"\n-\n /* The following #defines are used in the headers files. Always retain these.  */\n \n /* Added for declaring size at the end of the function.  */"}, {"sha": "b363db014bfedf3455bce535f475f73d125a45f1", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -3420,8 +3420,8 @@ the installation in a consistent way, you can use conditionals to detect\n an inconsistency and report it with @samp{#error}.  For example,\n \n @smallexample\n-#if !defined(UNALIGNED_INT_ASM_OP) && defined(DWARF2_DEBUGGING_INFO)\n-#error \"DWARF2_DEBUGGING_INFO requires UNALIGNED_INT_ASM_OP.\"\n+#if !defined(FOO) && defined(BAR)\n+#error \"BAR requires FOO.\"\n #endif\n @end smallexample\n "}, {"sha": "314d50b1a2758b8ea1d976df82689642faba4be6", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -8905,8 +8905,8 @@ that it does not contain any extraneous set bits in it.\n Define this macro to 0 if your target supports DWARF 2 frame unwind\n information, but it does not yet work with exception handling.\n Otherwise, if your target supports this information (if it defines\n-@code{INCOMING_RETURN_ADDR_RTX} and either @code{UNALIGNED_INT_ASM_OP}\n-or @code{OBJECT_FORMAT_ELF}), GCC will provide a default definition of 1.\n+@code{INCOMING_RETURN_ADDR_RTX} and @code{OBJECT_FORMAT_ELF}),\n+GCC will provide a default definition of 1.\n @end defmac\n \n @deftypefn {Common Target Hook} {enum unwind_info_type} TARGET_EXCEPT_UNWIND_INFO (struct gcc_options *@var{opts})"}, {"sha": "ac8df24ea8fb70e2a13bd2022ed46580c7383580", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -8800,8 +8800,8 @@ that it does not contain any extraneous set bits in it.\n Define this macro to 0 if your target supports DWARF 2 frame unwind\n information, but it does not yet work with exception handling.\n Otherwise, if your target supports this information (if it defines\n-@code{INCOMING_RETURN_ADDR_RTX} and either @code{UNALIGNED_INT_ASM_OP}\n-or @code{OBJECT_FORMAT_ELF}), GCC will provide a default definition of 1.\n+@code{INCOMING_RETURN_ADDR_RTX} and @code{OBJECT_FORMAT_ELF}),\n+GCC will provide a default definition of 1.\n @end defmac\n \n @hook TARGET_EXCEPT_UNWIND_INFO"}, {"sha": "5fa926fe00bcc88c366e598faab2d37aa1b2e5b6", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -892,7 +892,9 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tIDENT_ASM_OP ALL_COP_ADDITIONAL_REGISTER_NAMES DBX_OUTPUT_LBRAC\t   \\\n \tDBX_OUTPUT_NFUN DBX_OUTPUT_RBRAC RANGE_TEST_NON_SHORT_CIRCUIT\t   \\\n \tREAL_VALUE_TRUNCATE REVERSE_CONDEXEC_PREDICATES_P\t\t   \\\n-\tTARGET_ALIGN_ANON_BITFIELDS TARGET_NARROW_VOLATILE_BITFIELDS\n+\tTARGET_ALIGN_ANON_BITFIELDS TARGET_NARROW_VOLATILE_BITFIELDS\t   \\\n+\tIDENT_ASM_OP UNALIGNED_SHORT_ASM_OP UNALIGNED_INT_ASM_OP\t   \\\n+\tUNALIGNED_LONG_ASM_OP UNALIGNED_DOUBLE_INT_ASM_OP\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}, {"sha": "29eaf50df2675db9e0b74d15e04ce23ad3437197", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 14, "deletions": 30, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a07a642e8b9435327efc7d603fa5bf849a8c25/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=01a07a642e8b9435327efc7d603fa5bf849a8c25", "patch": "@@ -206,28 +206,11 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n };\n \n /* Definitions of defaults for assembler-dependent names of various\n-   pseudo-ops and section names.\n-   Theses may be overridden in the tm.h file (if necessary) for a particular\n-   assembler.  */\n-#ifdef UNALIGNED_SHORT_ASM_OP\n-#undef UNALIGNED_SHORT_ASM_OP\n-#endif\n-#define UNALIGNED_SHORT_ASM_OP\t\".word\"\n-\n-#ifdef UNALIGNED_INT_ASM_OP\n-#undef UNALIGNED_INT_ASM_OP\n-#endif\n-#define UNALIGNED_INT_ASM_OP\t\".long\"\n-\n-#ifdef UNALIGNED_LONG_ASM_OP\n-#undef UNALIGNED_LONG_ASM_OP\n-#endif\n-#define UNALIGNED_LONG_ASM_OP\t\".long\"\n-\n-#ifdef UNALIGNED_DOUBLE_INT_ASM_OP\n-#undef UNALIGNED_DOUBLE_INT_ASM_OP\n-#endif\n-#define UNALIGNED_DOUBLE_INT_ASM_OP\t\".quad\"\n+   pseudo-ops and section names.  */\n+#define VMS_UNALIGNED_SHORT_ASM_OP\t\".word\"\n+#define VMS_UNALIGNED_INT_ASM_OP\t\".long\"\n+#define VMS_UNALIGNED_LONG_ASM_OP\t\".long\"\n+#define VMS_UNALIGNED_DOUBLE_INT_ASM_OP\t\".quad\"\n \n #define VMS_ASM_BYTE_OP\t\".byte\"\n \n@@ -237,14 +220,14 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n \n #ifndef UNALIGNED_PTR_ASM_OP\n #define UNALIGNED_PTR_ASM_OP \\\n-  (PTR_SIZE == 8 ? UNALIGNED_DOUBLE_INT_ASM_OP : UNALIGNED_INT_ASM_OP)\n+  (PTR_SIZE == 8 ? VMS_UNALIGNED_DOUBLE_INT_ASM_OP : VMS_UNALIGNED_INT_ASM_OP)\n #endif\n \n #ifndef UNALIGNED_OFFSET_ASM_OP\n #define UNALIGNED_OFFSET_ASM_OP(OFFSET) \\\n   (NUMBYTES(OFFSET) == 4 \\\n-   ? UNALIGNED_LONG_ASM_OP \\\n-   : (NUMBYTES(OFFSET) == 2 ? UNALIGNED_SHORT_ASM_OP : VMS_ASM_BYTE_OP))\n+   ? VMS_UNALIGNED_LONG_ASM_OP \\\n+   : (NUMBYTES(OFFSET) == 2 ? VMS_UNALIGNED_SHORT_ASM_OP : VMS_ASM_BYTE_OP))\n #endif\n \n /* Definitions of defaults for formats and names of various special\n@@ -284,7 +267,7 @@ static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];\n #define ASM_OUTPUT_DEBUG_DELTA2(FILE,LABEL1,LABEL2)\t\t\t \\\n   do\t\t\t\t\t\t\t\t\t \\\n     {\t\t\t\t\t\t\t\t\t \\\n-      fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_SHORT_ASM_OP);\t\t \\\n+      fprintf ((FILE), \"\\t%s\\t\", VMS_UNALIGNED_SHORT_ASM_OP);\t\t \\\n       assemble_name (FILE, LABEL1);\t\t\t\t\t \\\n       fprintf (FILE, \"-\");\t\t\t\t\t\t \\\n       assemble_name (FILE, LABEL2);\t\t\t\t\t \\\n@@ -296,7 +279,7 @@ static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];\n #define ASM_OUTPUT_DEBUG_DELTA4(FILE,LABEL1,LABEL2)\t\t\t \\\n   do\t\t\t\t\t\t\t\t\t \\\n     {\t\t\t\t\t\t\t\t\t \\\n-      fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t \\\n+      fprintf ((FILE), \"\\t%s\\t\", VMS_UNALIGNED_INT_ASM_OP);\t\t \\\n       assemble_name (FILE, LABEL1);\t\t\t\t\t \\\n       fprintf (FILE, \"-\");\t\t\t\t\t\t \\\n       assemble_name (FILE, LABEL2);\t\t\t\t\t \\\n@@ -338,13 +321,14 @@ static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n #ifndef ASM_OUTPUT_DEBUG_DATA2\n #define ASM_OUTPUT_DEBUG_DATA2(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t%#x\", UNALIGNED_SHORT_ASM_OP, \\\n+  fprintf ((FILE), \"\\t%s\\t%#x\", VMS_UNALIGNED_SHORT_ASM_OP, \\\n \t   (unsigned short) VALUE)\n #endif\n \n #ifndef ASM_OUTPUT_DEBUG_DATA4\n #define ASM_OUTPUT_DEBUG_DATA4(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t%#lx\", UNALIGNED_INT_ASM_OP, (unsigned long) VALUE)\n+  fprintf ((FILE), \"\\t%s\\t%#lx\", VMS_UNALIGNED_INT_ASM_OP, \\\n+\t   (unsigned long) VALUE)\n #endif\n \n #ifndef ASM_OUTPUT_DEBUG_DATA\n@@ -360,7 +344,7 @@ static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n #ifndef ASM_OUTPUT_DEBUG_DATA8\n #define ASM_OUTPUT_DEBUG_DATA8(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t%#llx\", UNALIGNED_DOUBLE_INT_ASM_OP, \\\n+  fprintf ((FILE), \"\\t%s\\t%#llx\", VMS_UNALIGNED_DOUBLE_INT_ASM_OP, \\\n                                  (unsigned long long) VALUE)\n #endif\n "}]}