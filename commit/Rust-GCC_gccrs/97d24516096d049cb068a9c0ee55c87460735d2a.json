{"sha": "97d24516096d049cb068a9c0ee55c87460735d2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkMjQ1MTYwOTZkMDQ5Y2IwNjhhOWMwZWU1NWM4NzQ2MDczNWQyYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-05-19T20:19:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-05-19T20:19:24Z"}, "message": "re PR c/166 (C syntax problem in gcc)\n\n\t* c-parse.in (parm_declarator): Split into\n\tparm_declarator_starttypename and parm_declarator_nostarttypename.\n\t(parm_declarator_starttypename, parm_declarator_nostarttypename):\n\tNew.  Allow parenthesised sub-declarators which don't begin with a\n\tTYPENAME.  Fixes PR c/166.\n\ntestsuite:\n\t* gcc.c-torture/compile/20010114-1.x: Remove.\n\nFrom-SVN: r42315", "tree": {"sha": "0ede5348cf61c0dd094af56c55f4b7fb181e2291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ede5348cf61c0dd094af56c55f4b7fb181e2291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d24516096d049cb068a9c0ee55c87460735d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d24516096d049cb068a9c0ee55c87460735d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d24516096d049cb068a9c0ee55c87460735d2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d24516096d049cb068a9c0ee55c87460735d2a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e48d3d009f208ae8c1703bef68150f2d6c33a3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48d3d009f208ae8c1703bef68150f2d6c33a3f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48d3d009f208ae8c1703bef68150f2d6c33a3f8"}], "stats": {"total": 58, "additions": 48, "deletions": 10}, "files": [{"sha": "b55e0e7e835756df80f775bd28d4a5229e743f7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97d24516096d049cb068a9c0ee55c87460735d2a", "patch": "@@ -1,3 +1,11 @@\n+2001-05-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-parse.in (parm_declarator): Split into\n+\tparm_declarator_starttypename and parm_declarator_nostarttypename.\n+\t(parm_declarator_starttypename, parm_declarator_nostarttypename):\n+\tNew.  Allow parenthesised sub-declarators which don't begin with a\n+\tTYPENAME.  Fixes PR c/166.\n+\n 2001-05-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* defaults.h (TARGET_ALLOWS_PROFILING_WITHOUT_FRAME_POINTER): New"}, {"sha": "3a1c17eb70872cec0de3efb7bdee5fe77136f950", "filename": "gcc/c-parse.in", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=97d24516096d049cb068a9c0ee55c87460735d2a", "patch": "@@ -197,6 +197,7 @@ end ifc\n %type <ttype> declarator\n %type <ttype> notype_declarator after_type_declarator\n %type <ttype> parm_declarator\n+%type <ttype> parm_declarator_starttypename parm_declarator_nostarttypename\n \n %type <ttype> structsp_attr structsp_nonattr\n %type <ttype> component_decl_list component_decl_list2\n@@ -1683,29 +1684,56 @@ end ifobjc\n    in addition to notype_declarator.  This is like after_type_declarator\n    but does not allow a typedef name in parentheses as an identifier\n    (because it would conflict with a function with that typedef as arg).  */\n-\n parm_declarator:\n-\t  parm_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t  parm_declarator_starttypename\n+\t| parm_declarator_nostarttypename\n+\t;\n+\n+parm_declarator_starttypename:\n+\t  parm_declarator_starttypename '(' parmlist_or_identifiers  %prec '.'\n \t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n-/*\t| parm_declarator '(' error ')'  %prec '.'\n+/*\t| parm_declarator_starttypename '(' error ')'  %prec '.'\n \t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n \t\t  poplevel (0, 0, 0); }  */\n ifc\n-\t| parm_declarator '[' '*' ']'  %prec '.'\n+\t| parm_declarator_starttypename '[' '*' ']'  %prec '.'\n \t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE);\n \t\t  if (! flag_isoc99)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n \t\t}\n end ifc\n-\t| parm_declarator '[' expr ']'  %prec '.'\n+\t| parm_declarator_starttypename '[' expr ']'  %prec '.'\n \t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n-\t| parm_declarator '[' ']'  %prec '.'\n+\t| parm_declarator_starttypename '[' ']'  %prec '.'\n \t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n-\t| '*' maybe_type_quals_setattrs parm_declarator  %prec UNARY\n-\t\t{ $$ = make_pointer_declarator ($2, $3); }\n \t| TYPENAME\n \t;\n \n+parm_declarator_nostarttypename:\n+\t  parm_declarator_nostarttypename '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| parm_declarator_nostarttypename '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+ifc\n+\t| parm_declarator_nostarttypename '[' '*' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE);\n+\t\t  if (! flag_isoc99)\n+\t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n+\t\t}\n+end ifc\n+\t| parm_declarator_nostarttypename '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| parm_declarator_nostarttypename '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '*' maybe_type_quals_setattrs parm_declarator_starttypename  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| '*' maybe_type_quals_setattrs parm_declarator_nostarttypename  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| '(' maybe_setattrs parm_declarator_nostarttypename ')'\n+\t\t{ $$ = $3; }\n+\t;\n+\n /* A declarator allowed whether or not there has been\n    an explicit typespec.  These cannot redeclare a typedef-name.  */\n "}, {"sha": "ac40b1441d2cc5428cfb73ce888929301d233fe7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d24516096d049cb068a9c0ee55c87460735d2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97d24516096d049cb068a9c0ee55c87460735d2a", "patch": "@@ -1,3 +1,7 @@\n+2001-05-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.c-torture/compile/20010114-1.x: Remove.\n+\n 2001-05-18  Stan Shebs  <shebs@apple.com>\n \n \t* gcc.c-torture/compile/20010518-1.c: New test."}, {"sha": "f41cdc299131fe2004a420da7b21ab80c72e860e", "filename": "gcc/testsuite/gcc.c-torture/compile/20010114-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48d3d009f208ae8c1703bef68150f2d6c33a3f8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010114-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48d3d009f208ae8c1703bef68150f2d6c33a3f8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010114-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010114-1.x?ref=e48d3d009f208ae8c1703bef68150f2d6c33a3f8", "patch": "@@ -1,2 +0,0 @@\n-set torture_compile_xfail \"*-*-*\"\n-return 0"}]}