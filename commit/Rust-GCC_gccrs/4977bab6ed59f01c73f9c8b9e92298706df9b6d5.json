{"sha": "4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk3N2JhYjZlZDU5ZjAxYzczZjljOGI5ZTkyMjk4NzA2ZGY5YjZkNQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-12-16T18:23:00Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-12-16T18:23:00Z"}, "message": "Merge basic-improvements-branch to trunk\n\nFrom-SVN: r60174", "tree": {"sha": "c259697c448b0c6f548f153c48c46a8d7a75970f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c259697c448b0c6f548f153c48c46a8d7a75970f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/comments", "author": null, "committer": null, "parents": [{"sha": "b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}], "stats": {"total": 40387, "additions": 26013, "deletions": 14374}, "files": [{"sha": "82afccf4755fa23190d279c823589b20e8f840c7", "filename": "ChangeLog", "status": "modified", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,29 +1,169 @@\n+2002-12-13  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in, Makefile.tpl, Makefile.def: Remove tclX.\n+\t* Makefile.in: Regenerate.\n+\n 2002-12-13  Jason Merrill  <jason@redhat.com>\n \n \t* Makefile.tpl (check-gcc-c++): Renamed from check-c++.  Don't run\n \tlibrary tests.\n \t(check-c++): Just depend on it and check-target-libstdc++-v3.\n \t* Makefile.in: Regenerate.\n \n+2002-12-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.tpl (configure-target-rda): Depend on $(ALL_GCC_C).\n+\t* Makefile.in: Rebuilt.\n+\n 2002-12-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* Makefile.in (configure-target-rda): Depend on ALL_GCC_C.\n \n+2002-12-10  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Fix bug put in by gremlins.\n+\n+\t* Makefile.tpl: Substitute more autoconfily.\n+\t* configure: Substitute more autoconfily.\n+\t* Makefile.in: Regenerate.\n+\n 2002-12-09  Svein E. Seldal  <Svein.Seldal@solidas.com>\n \n \t* config.sub: Import from master repository\n \t* config.guess: Ditto\n \t* MAINTAINERS: Added Svein Seldal under write after approval\n \n+2002-12-08  Andrew Cagney  <ac131313@redhat.com>\n+\n+\t* Makefile.tpl (all-sim): Depend on maybe-configure-gdb.\n+\t* Makefile.in (all-sim): Ditto.\n+\n+2002-12-06  DJ Delorie  <dj@redhat.com>\n+\n+\t* Makefile.tpl: Change configure dependencies to not have real\n+\ttargets depend on phony targets.\n+\n+2002-12-05  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in: Revert unintentional change.\n+\n+\t* Makefile.tpl: Change dependency for */multilib.out so that\n+\tit works when gcc isn't in the tree.\n+\n+\t* configure.in: Substitute more.\n+\t* configure: Run subconfigures from the Makefile.\n+\t* Makefile.tpl: Run subconfigures from the Makefile; add a few\n+\tconvenience targets.  Make sure gcc isn't rebuilt after bootstrap.\n+\n 2002-12-05  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* MAINTAINERS: Add Christian Ehrhardt under \"GNATS only\".\n \n+2002-12-03  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.tpl: Add targets for configuring host subdirs in Makefile,\n+\tand corresponding dependencies.\n+\t* Makefile.in: Regenerate.\n+\n+\t* configure.in (host_tools): Order binutils, gas and ld for\n+\tconvenience in running the testsuites.\n+\n+\t* Makefile.tpl: Introduce rules to serialize subconfigure runs.\n+\t* Makefile.in: Regenerate.\n+\t* configure.in: Introduce rules to serialize subconfigure runs.\n+\n+\t* configure.in: Introduce BASE_CC_FOR_TARGET.\n+\t* Makefile.tpl: Reorganize and comment.  Introduce HOST_CONFIGARGS.\n+\tRealize configure-build-* targets.  Realize configure-target-* targets.\n+\t* Makefile.in: Regenerate.\n+\n+2002-12-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Move gcc_version_trigger stuff from here...\n+\t* configure.in: ...to here.\n+\n+\t* configure.in: Separate subconfigure options added by this file from\n+\toptions given by the user.  Add machinery to put args for host\n+\tsubconfigures into the Makefile.\n+\n+\t* Makefile.tpl: Remove 'vault' targets.\n+\t* Makefile.tpl: Reorder and comment dependencies.\n+\t* Makefile.in: Regenerate.\n+\n+2002-12-01  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\t* configure.in: Fix my broken commit of previous patch. (sigh)\n+\n 2002-11-28  Geoffrey Keating  <geoffk@apple.com>\n \n \t* configure.in: Move host-specific darwin noconfigdirs into\n \tthe host-specific section.\n \n+2002-11-28  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* configure.in: Move host-specific darwin noconfigdirs into\n+\tthe host-specific section.\n+\n+2002-11-26  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Remove skip-this-dir support.\n+\t* Makefile.tpl: Remove skip-this-dir support.\n+\n+\t* Makefile.tpl: Remove leftover support for non-autoconfiscated\n+\tsubdirectories.\n+\t* Makefile.in: Regenerate.\n+\n+\t* Makefile.tpl: Strip out useless setting of 'dir'.\n+\t* Makefile.in: Regenerate.\n+\n+2002-11-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in: Fix deeply stupid bug.\n+\n+\t* configure.in: Introduce RAW_CXX_FOR_TARGET and simplify embedded\n+\tshell code in CXX_FOR_TARGET\n+\t* Makefile.def: Introduce raw_cxx.\n+\t* Makefile.tpl: Use raw_cxx to select between CXX_FOR_TARGET and\n+\tRAW_CXX_FOR_TARGET.\n+\t* Makefile.in: Regenerate.\n+\n+2002-11-21  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.tpl: Remove unnecessary ifs.\n+\t* Makefile.in: Regenerate.\n+\n+\t* Makefile.tpl: Implement soft dependency machinery.  Maybe-ize\n+\tdependencies.  Maybe-ize build-libiberty.  Create dummy install\n+\ttargets for 'no_install' modules.\n+\t* configure: Move GDB_TK substitution to configure.in.  Move\n+\tbuild_modules stuff to configure.in.\n+\t* configure.in: Implement soft dependency machinery.  Maybe-ize\n+\tGDB_TK, rearrange slightly.  Move build_modules stuff from configure.\n+\t* Makefile.in: Regenerate.\n+\n+2002-11-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.tpl: Make all-target, install-target behave similarly\n+\tto all, install (only hitting configured targets).  Eliminate\n+\tunused macro defintions.\n+\n+\t* Makefile.tpl: Add all-gcc: all-build-libiberty dependency when\n+\tbuild != host.\n+\n+\t* Makefile.tpl: Add all-gcc: all-libiberty dependency.\n+\n+\t* ltcf-c.sh, ltcf-gcj.sh, Makefile.tpl: Correct BUILD/HOST confusion.\n+\n+\t* configure.in: Produce lists of subdir targets we're actually\n+\tconfiguring.  Remove references to \"dosrel\".\n+\t* Makefile.tpl: Let configure set which subdir targets are hit.\n+\tRemove install-cross; clean up install; remove ALL.  Remove\n+\treferences to \"dosrel\".  Remove \"EXTRA_TARGET_HOST\" hackery.\n+\tAutogenerate host module targets.  Remove empty dependency lines\n+\tand redundant dependency; rearrange slightly.\n+\t* Makefile.def: Add host-side libtermcap, utils.\n+\n+\t* Makefile.in: Regenerate.\n+\n 2002-11-19  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* ltconfig (osf[345]): Append $major to soname_spec.\n@@ -56,10 +196,50 @@\n \n \t* MAINTAINERS: Add myself to write-after-approval list.\n \n+2002-11-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.def: Add list of recursive targets to autogenerate.\n+\tAdd build_modules.\n+\t* Makefile.tpl: Autogenerate do-* targets.  Autogenerate *-target-*\n+\ttargets.  Autogenerate *-build-* targets.\n+\t* Makefile.in: Regenerate.\n+\n+2002-11-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: More autoconf-style substitutions.\n+\t* Makefile.tpl: More autoconf-style substitutions.\n+\t* Makefile.in: Regenerate.\n+\n+2002-11-11  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Substitute more variables in a more autoconf-friendly\n+\tway.  Simplify slightly.\n+\t* Makefile.tpl: Make more variables substitutable in an\n+\tautoconf-friendly way.\n+\t* Makefile.in: Regenerate.\n+\n 2002-11-11  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* MAINTAINERS (Write After Approval): Add myself.\n \n+2002-11-10  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in (v810*): Remove special setting of tools.\n+\n+\t* configure: Add support for extra required flags for ar or nm.\n+\t* configure.in (aix4.3+): Use above support for target-specific\n+\tissues, rather than using config/mt-aix43.\n+\n+2002-11-09  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Remove 'removing', which doesn't work.  Replace $subdir\n+\twith . everywhere.  Replace $subdirs with ''.  Replace $makesrcdir\n+\twith $srcdir.  Reformat indentation.  Substitute some variables\n+\tformerly hard-coded in the Makefile for build=host.\n+\t* Makefile.tpl: Autogenerate more; make more autoconf-friendly.\n+\t* Makefile.def: Autogenerate more.\n+\t* Makefile.in: Regenerate.\n+\n 2002-11-04  Adam Nemet  <anemet@lnxw.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "b27b071f8484a7e2fdd7cdb21ea1c11e9bce1f94", "filename": "Makefile.def", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,6 +1,8 @@\n #! /usr/bin/autogen\n AutoGen definitions Makefile.tpl;\n \n+build_modules= { module= libiberty; };\n+\n host_modules= { module= ash; };\n host_modules= { module= autoconf; };\n host_modules= { module= automake; };\n@@ -61,8 +63,15 @@ host_modules= { module= uudecode; };\n host_modules= { module= wdiff; };\n host_modules= { module= zip; no_check_cross=true; };\n host_modules= { module= zlib; no_install=true; no_check=true; };\n+host_modules= { module= gdb; with_x=true; };\n+host_modules= { module= expect; with_x=true; };\n+host_modules= { module= guile; with_x=true; };\n+host_modules= { module= tk; with_x=true; };\n+host_modules= { module= tix; with_x=true; };\n+host_modules= { module= libtermcap; no_check=true; no_clean=true; };\n+host_modules= { module= utils; no_check=true; };\n \n-target_modules = { module= libstdc++-v3; };\n+target_modules = { module= libstdc++-v3; raw_cxx=true; };\n target_modules = { module= newlib; };\n target_modules = { module= libf2c; };\n target_modules = { module= libobjc; };\n@@ -73,8 +82,20 @@ target_modules = { module= libiberty; };\n target_modules = { module= gperf; };\n target_modules = { module= examples; no_check=true; no_install=true; };\n target_modules = { module= libffi; no_install=true; };\n-target_modules = { module= libjava; };\n+target_modules = { module= libjava; raw_cxx=true; };\n target_modules = { module= zlib; };\n target_modules = { module= boehm-gc; };\n target_modules = { module= qthreads; };\n target_modules = { module= rda; };\n+\n+// These are (some of) the targets to be done in each subdirectory.\n+// Not all; these are the ones which don't have special options.\n+recursive_targets = { target= clean; };\n+recursive_targets = { target= distclean; };\n+recursive_targets = { target= dvi; };\n+recursive_targets = { target= info; };\n+recursive_targets = { target= install-info; };\n+recursive_targets = { target= installcheck; };\n+recursive_targets = { target= mostlyclean; };\n+recursive_targets = { target= maintainer-clean; };\n+recursive_targets = { target= TAGS; };"}, {"sha": "f7c38950f129f19e0d68ff858ecf642039ace9e2", "filename": "Makefile.in", "status": "modified", "additions": 6832, "deletions": 916, "changes": 7748, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9f64035a3804741b1a35dd01248dd26407f8c315", "filename": "Makefile.tpl", "status": "modified", "additions": 525, "deletions": 660, "changes": 1185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -29,6 +29,32 @@ in\n NOTPARALLEL = .NOTPARALLEL\n $(NOTPARALLEL):\n \n+VPATH=@srcdir@\n+links=@configlinks@\n+\n+build_alias=@build_alias@\n+build_cpu=@build_cpu@\n+build_vendor=@build_vendor@\n+build_os=@build_os@\n+build_canonical=@build_cpu@-@build_vendor@-@build_os@\n+host_alias=@host_alias@\n+host_cpu=@host_cpu@\n+host_vendor=@host_vendor@\n+host_os=@host_os@\n+host_canonical=@host_cpu@-@host_vendor@-@host_os@\n+target_alias=@target_alias@\n+target_cpu=@target_cpu@\n+target_vendor=@target_vendor@\n+target_os=@target_os@\n+target_canonical=@target_cpu@-@target_vendor@-@target_os@\n+\n+enable_shared = @enable_shared@\n+enable_threads = @enable_threads@\n+enable_version_specific_runtime_libs = @enable_version_specific_runtime_libs@\n+# The file containing GCC's version number.\n+gcc_version_trigger = @gcc_version_trigger@\n+gcc_version = @gcc_version@\n+\n srcdir = @srcdir@\n \n prefix = @prefix@\n@@ -83,22 +109,19 @@ INSTALL_PROGRAM = $(INSTALL) $(INSTALL_PROGRAM_ARGS)\n INSTALL_SCRIPT = $(INSTALL)\n INSTALL_DATA = $(INSTALL) -m 644\n \n-INSTALL_DOSREL = install-dosrel-fake\n-\n-AS = as\n-AR = ar\n+AS = @AS@\n+AR = @AR@\n AR_FLAGS = rc\n-CC = cc\n+CC = @CC@\n \n # Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n # here so that they can be overridden by Makefile fragments.\n-HOST_CC = $(CC_FOR_BUILD)\n-BUILD_PREFIX = \n-BUILD_PREFIX_1 = loser-\n+BUILD_CC = $(CC_FOR_BUILD)\n+BUILD_PREFIX = @BUILD_PREFIX@\n+BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n \n-# These flag values are normally overridden by the configure script.\n-CFLAGS = -g\n-CXXFLAGS = -g -O2\n+CFLAGS = @CFLAGS@\n+CXXFLAGS = @CXXFLAGS@\n \n LDFLAGS = \n LIBCFLAGS = $(CFLAGS)\n@@ -113,40 +136,43 @@ LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n PICFLAG = \n PICFLAG_FOR_TARGET = \n \n-CXX = c++\n+CXX = @CXX@\n \n # Use -O2 to stress test the compiler.\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n \n-DLLTOOL = dlltool\n-WINDRES = windres\n+DLLTOOL = @DLLTOOL@\n+WINDRES = @WINDRES@\n \n-NM = nm\n+NM = @NM@\n \n-LD = ld\n+LD = @LD@\n \n # These values are substituted by configure.\n DEFAULT_YACC = @DEFAULT_YACC@\n DEFAULT_LEX = @DEFAULT_LEX@\n DEFAULT_M4 = @DEFAULT_M4@\n \n-BISON = `if [ -f $$r/bison/bison ] ; then \\\n+BISON=@BISON@\n+USUAL_BISON = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo $$r/bison/bison -L $$s/bison/ ; \\\n \t else \\\n \t    echo bison ; \\\n \t fi`\n \n-YACC = `if [ -f $$r/bison/bison ] ; then \\\n+YACC=@YACC@\n+USUAL_YACC = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo $$r/bison/bison -y -L $$s/bison/ ; \\\n \telif [ -f $$r/byacc/byacc ] ; then \\\n \t    echo $$r/byacc/byacc ; \\\n \telse \\\n \t    echo ${DEFAULT_YACC} ; \\\n \tfi`\n \n-LEX = `if [ -f $$r/flex/flex ] ; \\\n+LEX=@LEX@\n+USUAL_LEX = `if [ -f $$r/flex/flex ] ; \\\n \tthen echo $$r/flex/flex ; \\\n \telse echo ${DEFAULT_LEX} ; fi`\n \n@@ -156,7 +182,8 @@ M4 = `if [ -f $$r/m4/m4 ] ; \\\n \n # For an installed makeinfo, we require it to be from texinfo 4 or\n # higher, else we use the \"missing\" dummy.\n-MAKEINFO = `if [ -f $$r/texinfo/makeinfo/makeinfo ] ; \\\n+MAKEINFO=@MAKEINFO@\n+USUAL_MAKEINFO = `if [ -f $$r/texinfo/makeinfo/makeinfo ] ; \\\n \tthen echo $$r/texinfo/makeinfo/makeinfo ; \\\n \telse if (makeinfo --version \\\n \t  | egrep 'texinfo[^0-9]*([1-3][0-9]|[4-9])') >/dev/null 2>&1; \\\n@@ -178,7 +205,7 @@ RUNTEST = `if [ -f $$s/dejagnu/runtest ] ; \\\n \n # compilers to use to create programs which must be run in the build\n # environment.\n-CC_FOR_BUILD = $(CC)\n+CC_FOR_BUILD = @CC_FOR_BUILD@\n CXX_FOR_BUILD = $(CXX)\n \n SUBDIRS = @configdirs@\n@@ -194,14 +221,18 @@ TARGET_SUBDIR = @target_subdir@\n BUILD_CONFIGDIRS = libiberty\n BUILD_SUBDIR = @build_subdir@\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the target.\n-TARGET_CONFIGARGS = @target_configargs@\n-\n # This is set by the configure script to the arguments to use when configuring\n # directories built for the build system.\n BUILD_CONFIGARGS = @build_configargs@\n \n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the host system.\n+HOST_CONFIGARGS = @host_configargs@\n+\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the target.\n+TARGET_CONFIGARGS = @target_configargs@\n+\n # This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n # was used.\n SET_LIB_PATH = @SET_LIB_PATH@\n@@ -224,35 +255,24 @@ TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n REALLY_SET_LIB_PATH = \\\n   $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n \n-ALL = all.normal\n-INSTALL_TARGET = installdirs \\\n-\tinstall-gcc \\\n-\t$(INSTALL_MODULES) \\\n-\t$(INSTALL_TARGET_MODULES) \\\n-\t$(INSTALL_X11_MODULES) \\\n-\t$(INSTALL_DOSREL)\n-\n-INSTALL_TARGET_CROSS = installdirs \\\n-\tinstall-gcc-cross \\\n-\t$(INSTALL_MODULES) \\\n-\t$(INSTALL_TARGET_MODULES) \\\n-\t$(INSTALL_X11_MODULES) \\\n-\t$(INSTALL_DOSREL)\n-\n # Should be substed by configure.in\n FLAGS_FOR_TARGET = @FLAGS_FOR_TARGET@\n CC_FOR_TARGET = @CC_FOR_TARGET@\n CXX_FOR_TARGET = @CXX_FOR_TARGET@\n+RAW_CXX_FOR_TARGET = @RAW_CXX_FOR_TARGET@\n CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n+RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n GCJ_FOR_TARGET = @GCJ_FOR_TARGET@\n \n # If GCC_FOR_TARGET is not overriden on the command line, then this\n # variable is passed down to the gcc Makefile, where it is used to\n # build libgcc2.a.  We define it here so that it can itself be\n # overridden on the command line.\n-GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+GCC_FOR_TARGET=@GCC_FOR_TARGET@\n+USUAL_GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n \n-AS_FOR_TARGET = ` \\\n+AS_FOR_TARGET=@AS_FOR_TARGET@\n+USUAL_AS_FOR_TARGET = ` \\\n   if [ -f $$r/gas/as-new ] ; then \\\n     echo $$r/gas/as-new ; \\\n   elif [ -f $$r/gcc/xgcc ]; then \\\n@@ -265,7 +285,8 @@ AS_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-LD_FOR_TARGET = ` \\\n+LD_FOR_TARGET=@LD_FOR_TARGET@\n+USUAL_LD_FOR_TARGET = ` \\\n   if [ -f $$r/ld/ld-new ] ; then \\\n     echo $$r/ld/ld-new ; \\\n   elif [ -f $$r/gcc/xgcc ]; then \\\n@@ -278,7 +299,8 @@ LD_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-DLLTOOL_FOR_TARGET = ` \\\n+DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n+USUAL_DLLTOOL_FOR_TARGET = ` \\\n   if [ -f $$r/binutils/dlltool ] ; then \\\n     echo $$r/binutils/dlltool ; \\\n   else \\\n@@ -289,7 +311,8 @@ DLLTOOL_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-WINDRES_FOR_TARGET = ` \\\n+WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n+USUAL_WINDRES_FOR_TARGET = ` \\\n   if [ -f $$r/binutils/windres ] ; then \\\n     echo $$r/binutils/windres ; \\\n   else \\\n@@ -300,7 +323,8 @@ WINDRES_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-AR_FOR_TARGET = ` \\\n+AR_FOR_TARGET=@AR_FOR_TARGET@\n+USUAL_AR_FOR_TARGET = ` \\\n   if [ -f $$r/binutils/ar ] ; then \\\n     echo $$r/binutils/ar ; \\\n   else \\\n@@ -311,7 +335,8 @@ AR_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-RANLIB_FOR_TARGET = ` \\\n+RANLIB_FOR_TARGET=@RANLIB_FOR_TARGET@\n+USUAL_RANLIB_FOR_TARGET = ` \\\n   if [ -f $$r/binutils/ranlib ] ; then \\\n     echo $$r/binutils/ranlib ; \\\n   else \\\n@@ -326,7 +351,8 @@ RANLIB_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-NM_FOR_TARGET = ` \\\n+NM_FOR_TARGET=@NM_FOR_TARGET@\n+USUAL_NM_FOR_TARGET = ` \\\n   if [ -f $$r/binutils/nm-new ] ; then \\\n     echo $$r/binutils/nm-new ; \\\n   elif [ -f $$r/gcc/xgcc ]; then \\\n@@ -344,13 +370,6 @@ NM_FOR_TARGET = ` \\\n all: all.normal\n .PHONY: all\n \n-# These can be overridden by config/mt-*.\n-# The _TARGET_ is because they're specified in mt-foo.\n-# The _HOST_ is because they're programs that run on the host.\n-EXTRA_TARGET_HOST_ALL_MODULES =\n-EXTRA_TARGET_HOST_INSTALL_MODULES =\n-EXTRA_TARGET_HOST_CHECK_MODULES =\n-\n #### host and target specific makefile fragments come in here.\n ###\n \n@@ -425,7 +444,8 @@ BASE_FLAGS_TO_PASS = \\\n # so we pass these variables down unchanged.  They must not contain\n # single nor double quotes.\n RECURSE_FLAGS = \\\n-\tCXX_FOR_TARGET='$(CXX_FOR_TARGET_FOR_RECURSIVE_MAKE)'\n+\tCXX_FOR_TARGET='$(CXX_FOR_TARGET_FOR_RECURSIVE_MAKE)' \\\n+\tRAW_CXX_FOR_TARGET='$(RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE)' \\\n \n # Flags to pass down to most sub-makes, in which we're building with\n # the host environment.\n@@ -488,7 +508,7 @@ EXTRA_GCC_FLAGS = \\\n \t'CC=$(CC)' \\\n \t'CXX=$(CXX)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n-\t'HOST_CC=$(CC_FOR_BUILD)' \\\n+\t'BUILD_CC=$(CC_FOR_BUILD)' \\\n \t'BUILD_PREFIX=$(BUILD_PREFIX)' \\\n \t'BUILD_PREFIX_1=$(BUILD_PREFIX_1)' \\\n \t'NM=$(NM)' \\\n@@ -508,126 +528,13 @@ EXTRA_GCC_FLAGS = \\\n \n GCC_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS)\n \n-# This is a list of the targets for all of the modules which are compiled\n-# using the build machine's native compiler.  Configure edits the second\n-# macro for build!=host builds.\n-ALL_BUILD_MODULES_LIST = \\\n-\tall-build-libiberty\n-ALL_BUILD_MODULES = @all_build_modules@\n-\n-# This is a list of the configure targets for all of the modules which\n-# are compiled using the native tools.\n-CONFIGURE_BUILD_MODULES = \\\n-\tconfigure-build-libiberty\n-\n-# This is a list of the targets for all of the modules which are compiled\n-# using $(FLAGS_TO_PASS).\n-ALL_MODULES =[+\n-    FOR host_modules +] \\\n-\tall-[+module+][+\n-    ENDFOR host_modules +] \\\n-\t$(EXTRA_TARGET_HOST_ALL_MODULES)\n-\n-# This is a list of the check targets for all of the modules which are\n-# compiled using $(FLAGS_TO_PASS).\n-#\n-# The list is in two parts.  The first lists those tools which\n-# are tested as part of the host's native tool-chain, and not\n-# tested in a cross configuration.\n-NATIVE_CHECK_MODULES = \\\n-\tcheck-bison \\\n-\tcheck-byacc \\\n-\tcheck-fastjar \\\n-\tcheck-flex \\\n-\tcheck-zip\n-\n-CROSS_CHECK_MODULES =[+\n-    FOR host_modules +][+\n-        IF (not (or (exist? \"no_check_cross\") (exist? \"no_check\")))\n-           +] \\\n-\tcheck-[+module+][+\n-        ENDIF no_check +][+\n-    ENDFOR host_modules +] \\\n-\t$(EXTRA_TARGET_HOST_CHECK_MODULES)\n-\n-CHECK_MODULES=$(NATIVE_CHECK_MODULES) $(CROSS_CHECK_MODULES)\n-\n-# This is a list of the install targets for all of the modules which are\n-# compiled using $(FLAGS_TO_PASS).\n-INSTALL_MODULES =[+\n-    FOR host_modules+][+\n-        IF (not (exist? \"no_install\")) +] \\\n-\tinstall-[+module+][+\n-        ENDIF no_install +][+\n-    ENDFOR host_modules +] \\\n-\t$(EXTRA_TARGET_HOST_INSTALL_MODULES)\n-\n-# This is a list of the targets for all of the modules which are compiled\n-# using $(X11_FLAGS_TO_PASS).\n-ALL_X11_MODULES = \\\n-\tall-gdb \\\n-\tall-expect \\\n-\tall-guile \\\n-\tall-tclX \\\n-\tall-tk \\\n-\tall-tix\n-\n-# This is a list of the check targets for all of the modules which are\n-# compiled using $(X11_FLAGS_TO_PASS).\n-CHECK_X11_MODULES = \\\n-\tcheck-gdb \\\n-\tcheck-guile \\\n-\tcheck-expect \\\n-\tcheck-tclX \\\n-\tcheck-tk \\\n-\tcheck-tix\n-\n-# This is a list of the install targets for all the modules which are\n-# compiled using $(X11_FLAGS_TO_PASS).\n-INSTALL_X11_MODULES = \\\n-\tinstall-gdb \\\n-\tinstall-guile \\\n-\tinstall-expect \\\n-\tinstall-tclX \\\n-\tinstall-tk \\\n-\tinstall-tix\n-\n-# This is a list of the targets for all of the modules which are compiled\n-# using $(TARGET_FLAGS_TO_PASS).\n-ALL_TARGET_MODULES =[+\n-    FOR target_modules +] \\\n-\tall-target-[+module+][+\n-    ENDFOR target_modules +]\n-\n-# This is a list of the configure targets for all of the modules which\n-# are compiled using the target tools.\n-CONFIGURE_TARGET_MODULES =[+\n-    FOR target_modules +] \\\n-\tconfigure-target-[+module+][+\n-    ENDFOR target_modules +]\n-\n-# This is a list of the check targets for all of the modules which are\n-# compiled using $(TARGET_FLAGS_TO_PASS).\n-CHECK_TARGET_MODULES =[+\n-    FOR target_modules +][+\n-        IF (not (exist? \"no_check\")) +] \\\n-\tcheck-target-[+module+][+\n-        ENDIF no_check +][+\n-    ENDFOR target_modules +]\n-\n-# This is a list of the install targets for all of the modules which are\n-# compiled using $(TARGET_FLAGS_TO_PASS).\n-INSTALL_TARGET_MODULES =[+\n-    FOR target_modules +][+\n-        IF (not (exist? \"no_install\")) +] \\\n-\tinstall-target-[+module+][+\n-        ENDIF no_install +][+\n-    ENDFOR target_modules +]\n+configure-host: @configure_host_modules@\n+configure-target: @configure_target_modules@\n \n # This is a list of the targets for which we can do a clean-{target}.\n CLEAN_MODULES =[+\n     FOR host_modules +][+\n-        IF (not (exist? \"no_clean\")) +] \\\n+        IF (not (or (exist? \"no_clean\") (exist? \"with_x\"))) +] \\\n \tclean-[+module+][+\n         ENDIF no_clean +][+\n     ENDFOR host_modules +]\n@@ -641,22 +548,18 @@ CLEAN_TARGET_MODULES =[+\n     ENDFOR target_modules +]\n \n # All of the x11 modules that can be cleaned\n-CLEAN_X11_MODULES = \\\n-\tclean-gdb \\\n-\tclean-expect \\\n-\tclean-guile \\\n-\tclean-tclX \\\n-\tclean-tk \\\n-\tclean-tix\n+CLEAN_X11_MODULES = [+ FOR host_modules +][+ IF with_x +]\\\n+\tclean-[+module+] [+ ENDIF with_x +][+ ENDFOR host_modules +]\n \n # The target built for a native build.\n+# This list only includes modules actually being configured and built.\n .PHONY: all.normal\n-all.normal: \\\n-\t$(ALL_BUILD_MODULES) \\\n-\t$(ALL_MODULES) \\\n-\t$(ALL_X11_MODULES) \\\n-\t$(ALL_TARGET_MODULES) \\\n-\tall-gcc\n+all.normal: @all_build_modules@ \\\n+\t@all_host_modules@ \\\n+\t@all_target_modules@\n+\n+all-host: @all_host_modules@\n+all-target: @all_target_modules@\n \n # Do a target for all the subdirectories.  A ``make do-X'' will do a\n # ``make X'' in all subdirectories (because, in general, there is a\n@@ -665,20 +568,10 @@ all.normal: \\\n # This target ensures that $(BASE_FLAGS_TO_PASS) appears only once,\n # because it is so large that it can easily overflow the command line\n # length limit on some systems.\n-DO_X = \\\n-\tdo-clean \\\n-\tdo-distclean \\\n-\tdo-dvi \\\n-\tdo-info \\\n-\tdo-install-info \\\n-\tdo-installcheck \\\n-\tdo-mostlyclean \\\n-\tdo-maintainer-clean \\\n-\tdo-TAGS\n-.PHONY: $(DO_X)\n-$(DO_X):\n-\t@target=`echo $@ | sed -e 's/^do-//'`; \\\n-\tr=`${PWD}`; export r; \\\n+[+ FOR recursive_targets +]\n+.PHONY: do-[+target+]\n+do-[+target+]:\n+\t@r=`${PWD}`; export r; \\\n \ts=`cd $(srcdir); ${PWD}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \tfor i in $(SUBDIRS) -dummy-; do \\\n@@ -700,11 +593,11 @@ $(DO_X):\n \t\t\t\"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n \t                \"`echo \\\"RANLIB=$${RANLIB}\\\" | sed -e 's/.*=$$/XFOO=/'`\" \\\n \t\t\t\"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n-\t\t\t$${target}); \\\n+\t\t\t[+target+]); \\\n \t    then true; else exit 1; fi; \\\n \t  else true; fi; \\\n \tdone\n-\t@target=`echo $@ | sed -e 's/^do-//'`; \\\n+\t# Break into two pieces\n \tr=`${PWD}`; export r; \\\n \ts=`cd $(srcdir); ${PWD}`; export s; \\\n \t$(SET_LIB_PATH) \\\n@@ -718,10 +611,12 @@ $(DO_X):\n \t\t\t\"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n \t                \"`echo \\\"RANLIB=$${RANLIB}\\\" | sed -e 's/.*=$$/XFOO=/'`\" \\\n \t\t\t\"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n-\t\t\t$${target}); \\\n+\t\t\t[+target+]); \\\n \t    then true; else exit 1; fi; \\\n \t  else true; fi; \\\n \tdone\n+[+ ENDFOR recursive_targets +]\n+\n \n # Here are the targets which correspond to the do-X targets.\n \n@@ -805,10 +700,9 @@ clean-target-libgcc:\n check:\n \t$(MAKE) do-check NOTPARALLEL=parallel-ok\n \n-do-check: $(CHECK_MODULES) \\\n-\t$(CHECK_TARGET_MODULES) \\\n-\t$(CHECK_X11_MODULES) \\\n-\tcheck-gcc\n+# Only include modules actually being configured and built.\n+do-check: @check_host_modules@ \\\n+\t@check_target_modules@\n \n # Automated reporting of test results.\n \n@@ -833,28 +727,14 @@ mail-report-with-warnings.log: warning.log\n \n # Installation targets.\n \n-.PHONY: install install-cross uninstall source-vault binary-vault vault-install\n-install: $(INSTALL_TARGET) \n-install-cross: $(INSTALL_TARGET_CROSS) \n+.PHONY: install uninstall\n+install: installdirs @install_host_modules@ @install_target_modules@\n+\n+install-target: @install_target_modules@\n \n uninstall:\n \t@echo \"the uninstall target is not supported in this tree\"\n \n-source-vault:\n-\t$(MAKE) -f ./release/Build-A-Release \\\n-\t\thost=$(host_alias) source-vault\n-\n-binary-vault:\n-\t$(MAKE) -f ./release/Build-A-Release \\\n-\t\thost=$(host_alias) target=$(target_alias)\n-\n-vault-install:\n-\t@if [ -f ./release/vault-install ] ; then \\\n-\t  ./release/vault-install $(host_alias) $(target_alias) ; \\\n-\telse \\\n-\t  true ; \\\n-\tfi\n-\n .PHONY: install.all\n install.all: install-no-fixedincludes\n \t@if [ -f ./gcc/Makefile ] ; then \\\n@@ -869,59 +749,49 @@ install.all: install-no-fixedincludes\n # install-no-fixedincludes is used because Cygnus can not distribute\n # the fixed header files.\n .PHONY: install-no-fixedincludes\n-install-no-fixedincludes: \\\n-\tinstalldirs \\\n-\t$(INSTALL_MODULES) \\\n-\t$(INSTALL_TARGET_MODULES) \\\n-\t$(INSTALL_X11_MODULES) \\\n-\tgcc-no-fixedincludes \n+install-no-fixedincludes: installdirs @install_host_modules_nogcc@ \\\n+\t@install_target_modules@ gcc-no-fixedincludes\n \n-# Install the gcc headers files, but not the fixed include files,\n-# which Cygnus is not allowed to distribute.  This rule is very\n-# dependent on the workings of the gcc Makefile.in.\n-.PHONY: gcc-no-fixedincludes\n-gcc-no-fixedincludes:\n-\t@if [ -f ./gcc/Makefile ]; then \\\n-\t  rm -rf gcc/tmp-include; \\\n-\t  mv gcc/include gcc/tmp-include 2>/dev/null; \\\n-\t  mkdir gcc/include; \\\n-\t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n-\t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n-\t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}` ; export s; \\\n-\t  $(SET_LIB_PATH) \\\n-\t  (cd ./gcc; \\\n-\t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n-\t  rm -rf gcc/include; \\\n-\t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n-\telse true; fi\n+### other supporting targets\n \n-# This rule is used to build the modules which are built with the\n-# build machine's native compiler.\n-.PHONY: $(ALL_BUILD_MODULES)\n-$(ALL_BUILD_MODULES):\n-\tdir=`echo $@ | sed -e 's/all-build-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n-\t  (cd $(BUILD_SUBDIR)/$${dir} && $(MAKE) all); \\\n-\telse \\\n-\t  true; \\\n+MAKEDIRS= \\\n+\t$(DESTDIR)$(prefix) \\\n+\t$(DESTDIR)$(exec_prefix)\n+.PHONY: installdirs\n+installdirs: mkinstalldirs\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(MAKEDIRS)\n+\n+dir.info: do-install-info\n+\tif [ -f $(srcdir)/texinfo/gen-info-dir ] ; then \\\n+\t  $(srcdir)/texinfo/gen-info-dir $(infodir) $(srcdir)/texinfo/dir.info-template > dir.info.new ; \\\n+\t  mv -f dir.info.new dir.info ; \\\n+\telse true ; \\\n \tfi\n \n-# This rule is used to configure the modules which are built with the\n-# native tools.\n-.PHONY: $(CONFIGURE_BUILD_MODULES)\n-$(CONFIGURE_BUILD_MODULES):\n-\t@dir=`echo $@ | sed -e 's/configure-build-//'`; \\\n-\tif [ ! -d $(BUILD_SUBDIR) ]; then \\\n-\t  true; \\\n-\telif [ -f $(BUILD_SUBDIR)/$${dir}/Makefile ] ; then \\\n-\t  true; \\\n-\telif echo \" $(BUILD_CONFIGDIRS) \" | grep \" $${dir} \" >/dev/null 2>&1; then \\\n-\t  if [ -d $(srcdir)/$${dir} ]; then \\\n-\t    [ -d $(BUILD_SUBDIR)/$${dir} ] || mkdir $(BUILD_SUBDIR)/$${dir};\\\n+dist:\n+\t@echo \"Building a full distribution of this tree isn't done\"\n+\t@echo \"via 'make dist'.  Check out the etc/ subdirectory\" \n+\n+etags tags: TAGS\n+\n+# Right now this just builds TAGS in each subdirectory.  emacs19 has the\n+# ability to use several tags files at once, so there is probably no need\n+# to combine them into one big TAGS file (like CVS 1.3 does).  We could\n+# (if we felt like it) have this Makefile write a piece of elisp which\n+# the user could load to tell emacs19 where all the TAGS files we just\n+# built are.\n+TAGS: do-TAGS\n+\n+\n+# --------------------------------------\n+# Modules which run on the build machine\n+# --------------------------------------\n+[+ FOR build_modules +]\n+.PHONY: configure-build-[+module+] maybe-configure-build-[+module+]\n+maybe-configure-build-[+module+]:\n+configure-build-[+module+]: $(BUILD_SUBDIR)/[+module+]/Makefile\n+$(BUILD_SUBDIR)/[+module+]/Makefile: config.status\n+\t@[ -d $(BUILD_SUBDIR)/[+module+] ] || mkdir $(BUILD_SUBDIR)/[+module+];\\\n \t    r=`${PWD}`; export r; \\\n \t    s=`cd $(srcdir); ${PWD}`; export s; \\\n \t    AR=\"$(AR_FOR_BUILD)\"; export AR; \\\n@@ -937,8 +807,8 @@ $(CONFIGURE_BUILD_MODULES):\n \t    NM=\"$(NM_FOR_BUILD)\"; export NM; \\\n \t    RANLIB=\"$(RANLIB_FOR_BUILD)\"; export RANLIB; \\\n \t    WINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES; \\\n-\t    echo Configuring in $(BUILD_SUBDIR)/$${dir}; \\\n-\t    cd \"$(BUILD_SUBDIR)/$${dir}\" || exit 1; \\\n+\t    echo Configuring in $(BUILD_SUBDIR)/[+module+]; \\\n+\t    cd \"$(BUILD_SUBDIR)/[+module+]\" || exit 1; \\\n \t    case $(srcdir) in \\\n \t    /* | [A-Za-z]:[\\\\/]*) \\\n \t      topdir=$(srcdir) ;; \\\n@@ -950,7 +820,7 @@ $(CONFIGURE_BUILD_MODULES):\n \t    esac; \\\n \t    if [ \"$(srcdir)\" = \".\" ] ; then \\\n \t      if [ \"$(BUILD_SUBDIR)\" != \".\" ] ; then \\\n-\t\tif $(SHELL) $$s/symlink-tree $${topdir}/$${dir} \"no-such-file\" ; then \\\n+\t\tif $(SHELL) $$s/symlink-tree $${topdir}/[+module+] \"no-such-file\" ; then \\\n \t\t  if [ -f Makefile ]; then \\\n \t\t    if $(MAKE) distclean; then \\\n \t\t      true; \\\n@@ -969,129 +839,156 @@ $(CONFIGURE_BUILD_MODULES):\n \t      srcdiroption=\"--srcdir=.\"; \\\n \t      libsrcdir=\".\"; \\\n \t    else \\\n-\t      srcdiroption=\"--srcdir=$${topdir}/$${dir}\"; \\\n-\t      libsrcdir=\"$$s/$${dir}\"; \\\n-\t    fi; \\\n-\t    if [ -f $${libsrcdir}/configure ] ; then \\\n-\t      rm -f no-such-file skip-this-dir; \\\n-\t      CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n-\t\t$(BUILD_CONFIGARGS) $${srcdiroption} \\\n-\t\t--with-build-subdir=\"$(BUILD_SUBDIR)\"; \\\n-\t    else \\\n-\t      rm -f no-such-file skip-this-dir; \\\n-\t      CONFIG_SITE=no-such-file $(SHELL) $$s/configure \\\n-\t\t$(BUILD_CONFIGARGS) $${srcdiroption} \\\n-\t\t--with-build-subdir=\"$(BUILD_SUBDIR)\"; \\\n-\t    fi || exit 1; \\\n-\t    if [ -f skip-this-dir ] ; then \\\n-\t      sh skip-this-dir; \\\n-\t      rm -f skip-this-dir; \\\n-\t      cd ..; rmdir $${dir} || true; \\\n-\t    else \\\n-\t      true; \\\n+\t      srcdiroption=\"--srcdir=$${topdir}/[+module+]\"; \\\n+\t      libsrcdir=\"$$s/[+module+]\"; \\\n \t    fi; \\\n-\t  else \\\n-\t    true; \\\n-\t  fi; \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+\t    rm -f no-such-file || : ; \\\n+\t    CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n+\t      $(BUILD_CONFIGARGS) $${srcdiroption} \\\n+\t      --with-build-subdir=\"$(BUILD_SUBDIR)\" \\\n+\t      || exit 1\n+\n+.PHONY: all-build-[+module+] maybe-all-build-[+module+]\n+maybe-all-build-[+module+]:\n+all-build-[+module+]: configure-build-[+module+]\n+\t@r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  (cd $(BUILD_SUBDIR)/[+module+] && $(MAKE) all)\n+[+ ENDFOR build_modules +]\n+\n+# --------------------------------------\n+# Modules which run on the host machine\n+# --------------------------------------\n+[+ FOR host_modules +]\n+.PHONY: configure-[+module+] maybe-configure-[+module+]\n+maybe-configure-[+module+]:\n+configure-[+module+]: [+module+]/Makefile\n+\n+[+module+]/Makefile: config.status\n+\t@[ -d [+module+] ] || mkdir [+module+]; \\\n+\tr=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tCC=\"$(CC)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n+\tCXX=\"$(CXX)\"; export CXX; \\\n+\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n+\tif [ z$(build_canonical) !=  z$(host_canoncial) ] ; then \\\n+\t  AR=\"$(AR)\"; export AR; \\\n+\t  AS=\"$(AS)\"; export AS; \\\n+\t  CC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n+\t  DLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\t  LD=\"$(LD)\"; export LD; \\\n+\t  NM=\"$(NM)\"; export NM; \\\n+\t  RANLIB=\"$(RANLIB)\"; export RANLIB; \\\n+\t  WINDRES=\"$(WINDRES)\"; export WINDRES; \\\n+\t  OBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n+\t  OBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tfi; \\\n+\techo Configuring in [+module+]; \\\n+\tcd [+module+] || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  \\.) \\\n+\t    srcdiroption=\"--srcdir=.\"; \\\n+\t    libsrcdir=\".\";; \\\n+\t  /* | [A-Za-z]:[\\\\/]*) \\\n+\t    srcdiroption=\"--srcdir=$(srcdir)/[+module+]\"; \\\n+\t    libsrcdir=\"$$s/[+module+]\";; \\\n+\t  *) \\\n+\t    srcdiroption=\"--srcdir=../$(srcdir)/[+module+]\"; \\\n+\t    libsrcdir=\"$$s/[+module+]\";; \\\n+\tesac; \\\n+\t$(SHELL) $${libsrcdir}/configure \\\n+\t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n+\t  || exit 1\n \n-# This rule is used to build the modules which use FLAGS_TO_PASS.  To\n-# build a target all-X means to cd to X and make all.\n-.PHONY: $(ALL_MODULES)\n-$(ALL_MODULES):\n-\t@dir=`echo $@ | sed -e 's/all-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+.PHONY: all-[+module+] maybe-all-[+module+]\n+maybe-all-[+module+]:\n+all-[+module+]: configure-[+module+]\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) all); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# These rules are used to check the modules which use FLAGS_TO_PASS.\n-# To build a target check-X means to cd to X and make check.  Some\n-# modules are only tested in a native toolchain.\n-\n-.PHONY: $(CHECK_MODULES) $(NATIVE_CHECK_MODULES) $(CROSS_CHECK_MODULES)\n-$(NATIVE_CHECK_MODULES):\n+\t  (cd [+module+]; $(MAKE) $(FLAGS_TO_PASS)[+ \n+\t    IF with_x \n+\t      +] $(X11_FLAGS_TO_PASS)[+ \n+\t    ENDIF with_x +] all)\n+\n+[+ IF no_check +]\n+.PHONY: check-[+module+]\n+check-[+module+]:\n+[+ ELIF no_check_cross +]\n+.PHONY: check-[+module+]\n+# This module is only tested in a native toolchain.\n+check-[+module+]:\n \t@if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-\t  dir=`echo $@ | sed -e 's/check-//'`; \\\n-\t  if [ -f ./$${dir}/Makefile ] ; then \\\n \t    r=`${PWD}`; export r; \\\n \t    s=`cd $(srcdir); ${PWD}`; export s; \\\n \t    $(SET_LIB_PATH) \\\n-\t    (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) check); \\\n-\t  else \\\n-\t    true; \\\n-\t  fi; \\\n+\t    (cd [+module+]; $(MAKE) $(FLAGS_TO_PASS)[+ \n+\t      IF with_x \n+\t        +] $(X11_FLAGS_TO_PASS)[+ \n+\t      ENDIF with_x +] check); \\\n \tfi\n-\n-$(CROSS_CHECK_MODULES):\n-\t@dir=`echo $@ | sed -e 's/check-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+[+ ELSE check +]\n+.PHONY: check-[+module+]\n+check-[+module+]:\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) check); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# This rule is used to install the modules which use FLAGS_TO_PASS.\n-# To build a target install-X means to cd to X and make install.\n-.PHONY: $(INSTALL_MODULES)\n-$(INSTALL_MODULES): installdirs\n-\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+\t  (cd [+module+]; $(MAKE) $(FLAGS_TO_PASS)[+ \n+\t    IF with_x \n+\t      +] $(X11_FLAGS_TO_PASS)[+ \n+\t    ENDIF with_x +] check)\n+[+ ENDIF no_check +]\n+\n+[+ IF no_install +]\n+.PHONY: install-[+module+] maybe-install-[+module+]\n+maybe-install-[+module+]:\n+install-[+module+]:\n+[+ ELSE install +]\n+.PHONY: install-[+module+] maybe-install-[+module+]\n+maybe-install-[+module+]:\n+install-[+module+]: installdirs\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) install); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+\t  (cd [+module+]; $(MAKE) $(FLAGS_TO_PASS)[+ \n+\t    IF with_x \n+\t      +] $(X11_FLAGS_TO_PASS)[+ \n+\t    ENDIF with_x +] install)\n+[+ ENDIF no_install +]\n+[+ ENDFOR host_modules +]\n+\n+# ---------------------------------------\n+# Modules which run on the target machine\n+# ---------------------------------------\n+[+ FOR target_modules +]\n+.PHONY: configure-target-[+module+] maybe-configure-target-[+module+]\n+maybe-configure-target-[+module+]:\n+configure-target-[+module+]: $(TARGET_SUBDIR)/[+module+]/Makefile\n+\n+# Don't manually override CC_FOR_TARGET at make time; get it set right\n+# at configure time.  Otherwise multilibs may be wrong.\n+$(TARGET_SUBDIR)/[+module+]/multilib.out: maybe-all-gcc\n+\t@[ -d $(TARGET_SUBDIR)/[+module+] ] || mkdir $(TARGET_SUBDIR)/[+module+];\\\n+\tr=`${PWD}`; export r; \\\n+\techo \"Configuring multilibs for [+module+]\"; \\\n+\t$(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/[+module+]/multilib.out 2> /dev/null\n \n-# This rule is used to configure the modules which are built with the\n-# target tools.\n-.PHONY: $(CONFIGURE_TARGET_MODULES)\n-$(CONFIGURE_TARGET_MODULES):\n-\t@dir=`echo $@ | sed -e 's/configure-target-//'`; \\\n-\tif [ -d $(TARGET_SUBDIR)/$${dir} ]; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  $(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/$${dir}/tmpmulti.out 2> /dev/null; \\\n-\t  if [ -s $(TARGET_SUBDIR)/$${dir}/tmpmulti.out ]; then \\\n-\t    if [ -f $(TARGET_SUBDIR)/$${dir}/multilib.out ]; then \\\n-\t      if cmp $(TARGET_SUBDIR)/$${dir}/multilib.out $(TARGET_SUBDIR)/$${dir}/tmpmulti.out > /dev/null; then \\\n-\t\trm -f $(TARGET_SUBDIR)/$${dir}/tmpmulti.out; \\\n-\t      else \\\n-\t\techo \"Multilibs changed for $${dir}, reconfiguring\"; \\\n-\t\trm -f $(TARGET_SUBDIR)/$${dir}/multilib.out $(TARGET_SUBDIR)/$${dir}/Makefile; \\\n-\t\tmv $(TARGET_SUBDIR)/$${dir}/tmpmulti.out $(TARGET_SUBDIR)/$${dir}/multilib.out; \\\n-\t      fi; \\\n-\t    else \\\n-\t      mv $(TARGET_SUBDIR)/$${dir}/tmpmulti.out $(TARGET_SUBDIR)/$${dir}/multilib.out; \\\n-\t    fi; \\\n-\t  fi; \\\n-\tfi; exit 0\t# break command into two pieces\n-\t@dir=`echo $@ | sed -e 's/configure-target-//'`; \\\n-\tif [ ! -d $(TARGET_SUBDIR) ]; then \\\n-\t  true; \\\n-\telif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n-\t  true; \\\n-\telif echo \" $(TARGET_CONFIGDIRS) \" | grep \" $${dir} \" >/dev/null 2>&1; then \\\n-\t  if [ -d $(srcdir)/$${dir} ]; then \\\n-\t    [ -d $(TARGET_SUBDIR)/$${dir} ] || mkdir $(TARGET_SUBDIR)/$${dir};\\\n+$(TARGET_SUBDIR)/[+module+]/Makefile: config.status $(TARGET_SUBDIR)/[+module+]/multilib.out\n+\t@[ -d $(TARGET_SUBDIR)/[+module+] ] || mkdir $(TARGET_SUBDIR)/[+module+];\\\n \t    r=`${PWD}`; export r; \\\n \t    s=`cd $(srcdir); ${PWD}`; export s; \\\n \t    $(SET_LIB_PATH) \\\n \t    AR=\"$(AR_FOR_TARGET)\"; export AR; \\\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n-\t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n-\t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n+\t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\[+ \n+\tIF raw_cxx +]\n+\t    CXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n+\t    CXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX; \\[+ \n+\tELSE normal_cxx +]\n+\t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\[+ \n+\tENDIF raw_cxx +]\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n \t    DLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n@@ -1100,8 +997,8 @@ $(CONFIGURE_TARGET_MODULES):\n \t    NM=\"$(NM_FOR_TARGET)\"; export NM; \\\n \t    RANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n \t    WINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES; \\\n-\t    echo Configuring in $(TARGET_SUBDIR)/$${dir}; \\\n-\t    cd \"$(TARGET_SUBDIR)/$${dir}\" || exit 1; \\\n+\t    echo Configuring in $(TARGET_SUBDIR)/[+module+]; \\\n+\t    cd \"$(TARGET_SUBDIR)/[+module+]\" || exit 1; \\\n \t    case $(srcdir) in \\\n \t    /* | [A-Za-z]:[\\\\/]*) \\\n \t      topdir=$(srcdir) ;; \\\n@@ -1113,7 +1010,7 @@ $(CONFIGURE_TARGET_MODULES):\n \t    esac; \\\n \t    if [ \"$(srcdir)\" = \".\" ] ; then \\\n \t      if [ \"$(TARGET_SUBDIR)\" != \".\" ] ; then \\\n-\t\tif $(SHELL) $$s/symlink-tree $${topdir}/$${dir} \"no-such-file\" ; then \\\n+\t\tif $(SHELL) $$s/symlink-tree $${topdir}/[+module+] \"no-such-file\" ; then \\\n \t\t  if [ -f Makefile ]; then \\\n \t\t    if $(MAKE) distclean; then \\\n \t\t      true; \\\n@@ -1132,135 +1029,124 @@ $(CONFIGURE_TARGET_MODULES):\n \t      srcdiroption=\"--srcdir=.\"; \\\n \t      libsrcdir=\".\"; \\\n \t    else \\\n-\t      srcdiroption=\"--srcdir=$${topdir}/$${dir}\"; \\\n-\t      libsrcdir=\"$$s/$${dir}\"; \\\n+\t      srcdiroption=\"--srcdir=$${topdir}/[+module+]\"; \\\n+\t      libsrcdir=\"$$s/[+module+]\"; \\\n \t    fi; \\\n-\t    if [ -f $${libsrcdir}/configure ] ; then \\\n-\t      rm -f no-such-file skip-this-dir; \\\n-\t      CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n-\t\t$(TARGET_CONFIGARGS) $${srcdiroption} \\\n-\t\t--with-target-subdir=\"$(TARGET_SUBDIR)\"; \\\n-\t    else \\\n-\t      rm -f no-such-file skip-this-dir; \\\n-\t      CONFIG_SITE=no-such-file $(SHELL) $$s/configure \\\n-\t\t$(TARGET_CONFIGARGS) $${srcdiroption} \\\n-\t\t--with-target-subdir=\"$(TARGET_SUBDIR)\"; \\\n-\t    fi || exit 1; \\\n-\t    if [ -f skip-this-dir ] ; then \\\n-\t      sh skip-this-dir; \\\n-\t      rm -f skip-this-dir; \\\n-\t      cd ..; rmdir $${dir} || true; \\\n-\t    else \\\n-\t      true; \\\n-\t    fi; \\\n-\t  else \\\n-\t    true; \\\n-\t  fi; \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# This rule is used to build the modules which use TARGET_FLAGS_TO_PASS.\n-# To build a target all-X means to cd to X and make all.\n-.PHONY: $(ALL_TARGET_MODULES)\n-$(ALL_TARGET_MODULES):\n-\t@dir=`echo $@ | sed -e 's/all-target-//'`; \\\n-\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n-\t  $(SET_LIB_PATH) \\\n-\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n-\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) all); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# This rule is used to check the modules which use TARGET_FLAGS_TO_PASS.\n-# To build a target install-X means to cd to X and make install.\n-.PHONY: $(CHECK_TARGET_MODULES)\n-$(CHECK_TARGET_MODULES):\n-\t@dir=`echo $@ | sed -e 's/check-target-//'`; \\\n-\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+\t    rm -f no-such-file || : ; \\\n+\t    CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n+\t      $(TARGET_CONFIGARGS) $${srcdiroption} \\\n+\t      --with-target-subdir=\"$(TARGET_SUBDIR)\" \\\n+\t      || exit 1\n+\n+.PHONY: all-target-[+module+] maybe-all-target-[+module+]\n+maybe-all-target-[+module+]:\n+all-target-[+module+]: configure-target-[+module+]\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n-\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) check);\\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# This rule is used to install the modules which use\n-# TARGET_FLAGS_TO_PASS.  To build a target install-X means to cd to X\n-# and make install.\n-.PHONY: $(INSTALL_TARGET_MODULES)\n-$(INSTALL_TARGET_MODULES): installdirs\n-\t@dir=`echo $@ | sed -e 's/install-target-//'`; \\\n-\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+\t  (cd $(TARGET_SUBDIR)/[+module+]; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n+\t       IF raw_cxx \n+\t         +] 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)' [+ \n+\t       ENDIF raw_cxx \n+\t    +] all)\n+[+ IF no_check +]\n+# Dummy target for uncheckable module.\n+.PHONY: check-target-[+module+]\n+check-target-[+module+]:\n+[+ ELSE check +]\n+.PHONY: check-target-[+module+]\n+check-target-[+module+]:\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n-\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) install); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-\n-# This rule is used to build the modules which use X11_FLAGS_TO_PASS.\n-# To build a target all-X means to cd to X and make all.\n-.PHONY: $(ALL_X11_MODULES)\n-$(ALL_X11_MODULES):\n-\t@dir=`echo $@ | sed -e 's/all-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n+\t  (cd $(TARGET_SUBDIR)/[+module+]; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n+\t       IF raw_cxx \n+\t         +] 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)' [+ \n+\t       ENDIF raw_cxx \n+\t    +] check)\n+[+ ENDIF no_check +]\n+[+ IF no_install +]\n+.PHONY: install-target-[+module+] maybe-install-target-[+module+]\n+maybe-install-target-[+module+]:\n+# Dummy target for uninstallable.\n+install-target-[+module+]:\n+[+ ELSE install +]\n+.PHONY: install-target-[+module+] maybe-install-target-[+module+]\n+maybe-install-target-[+module+]:\n+install-target-[+module+]: installdirs\n+\t@r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; \\\n-\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) all); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+\t  (cd $(TARGET_SUBDIR)/[+module+]; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) install)\n+[+ ENDIF no_install +]\n+[+ ENDFOR target_modules +]\n \n-# This rule is used to check the modules which use X11_FLAGS_TO_PASS.\n-# To build a target check-X means to cd to X and make all.\n-.PHONY: $(CHECK_X11_MODULES)\n-$(CHECK_X11_MODULES):\n-\t@dir=`echo $@ | sed -e 's/check-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n-\t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; \\\n-\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) check); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+# ----------\n+# GCC module\n+# ----------\n \n-# This rule is used to install the modules which use X11_FLAGS_TO_PASS.\n-# To build a target install-X means to cd to X and make install.\n-.PHONY: $(INSTALL_X11_MODULES)\n-$(INSTALL_X11_MODULES): installdirs\n-\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n-\t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; \\\n-\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) install); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+# Unfortunately, while gcc _should_ be a host module,\n+# libgcc is a target module, and gen* programs are\n+# build modules.  So GCC is a sort of hybrid.\n \n # gcc is the only module which uses GCC_FLAGS_TO_PASS.\n-.PHONY: all-gcc\n-all-gcc:\n-\t@if [ -f ./gcc/Makefile ] ; then \\\n+.PHONY: configure-gcc maybe-configure-gcc\n+maybe-configure-gcc:\n+configure-gcc: gcc/Makefile\n+\n+gcc/Makefile: config.status\n+\t@[ -d gcc ] || mkdir gcc; \\\n+\tr=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tCC=\"$(CC)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n+\tCXX=\"$(CXX)\"; export CXX; \\\n+\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n+\tif [ z$(build_canonical) !=  z$(host_canoncial) ] ; then \\\n+\t  AR=\"$(AR)\"; export AR; \\\n+\t  AS=\"$(AS)\"; export AS; \\\n+\t  CC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n+\t  DLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\t  LD=\"$(LD)\"; export LD; \\\n+\t  NM=\"$(NM)\"; export NM; \\\n+\t  RANLIB=\"$(RANLIB)\"; export RANLIB; \\\n+\t  WINDRES=\"$(WINDRES)\"; export WINDRES; \\\n+\t  OBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n+\t  OBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tfi; \\\n+\techo Configuring in gcc; \\\n+\tcd gcc || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  \\.) \\\n+\t    srcdiroption=\"--srcdir=.\"; \\\n+\t    libsrcdir=\".\";; \\\n+\t  /* | [A-Za-z]:[\\\\/]*) \\\n+\t    srcdiroption=\"--srcdir=$(srcdir)/gcc\"; \\\n+\t    libsrcdir=\"$$s/gcc\";; \\\n+\t  *) \\\n+\t    srcdiroption=\"--srcdir=../$(srcdir)/gcc\"; \\\n+\t    libsrcdir=\"$$s/gcc\";; \\\n+\tesac; \\\n+\t$(SHELL) $${libsrcdir}/configure \\\n+\t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n+\t  || exit 1\n+\n+# Don't remake gcc if it's already been made by 'bootstrap'; that causes\n+# nothing but trouble.  This wart will be fixed eventually by moving\n+# the bootstrap behavior to this file.\n+.PHONY: all-gcc maybe-all-gcc\n+maybe-all-gcc:\n+all-gcc: configure-gcc\n+\t@if [ -f gcc/xgcc ] ; then \\\n+\t  exit 0 ; \\\n+\telse \\\n \t  r=`${PWD}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) all); \\\n-\telse \\\n-\t  true; \\\n \tfi\n \n # Building GCC uses some tools for rebuilding \"source\" files\n@@ -1274,7 +1160,7 @@ all-gcc:\n # in parallel.\n #\n .PHONY: bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean bubblestrap quickstrap cleanstrap restrap\n-bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean bubblestrap quickstrap cleanstrap restrap: all-bootstrap\n+bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean bubblestrap quickstrap cleanstrap restrap: all-bootstrap configure-gcc\n \t@r=`${PWD}`; export r; \\\n \ts=`cd $(srcdir); ${PWD}`; export s; \\\n \t$(SET_LIB_PATH) \\\n@@ -1341,7 +1227,8 @@ check-gcc-c++:\n .PHONY: check-c++\n check-c++: check-target-libstdc++-v3 check-gcc-c++\n \n-.PHONY: install-gcc\n+.PHONY: install-gcc maybe-install-gcc\n+maybe-install-gcc:\n install-gcc:\n \t@if [ -f ./gcc/Makefile ] ; then \\\n \t  r=`${PWD}`; export r; \\\n@@ -1352,188 +1239,166 @@ install-gcc:\n \t  true; \\\n \tfi\n \n-.PHONY: install-gcc-cross\n-install-gcc-cross:\n-\t@if [ -f ./gcc/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n-\t  $(SET_LIB_PATH) \\\n-\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) LANGUAGES=\"c c++\" install); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n-# EXPERIMENTAL STUFF\n-# This rule is used to install the modules which use FLAGS_TO_PASS.\n-# To build a target install-X means to cd to X and make install.\n-.PHONY: install-dosrel\n-install-dosrel: installdirs info\n-\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n-\tif [ -f ./$${dir}/Makefile ] ; then \\\n+# Install the gcc headers files, but not the fixed include files,\n+# which Cygnus is not allowed to distribute.  This rule is very\n+# dependent on the workings of the gcc Makefile.in.\n+.PHONY: gcc-no-fixedincludes\n+gcc-no-fixedincludes:\n+\t@if [ -f ./gcc/Makefile ]; then \\\n+\t  rm -rf gcc/tmp-include; \\\n+\t  mv gcc/include gcc/tmp-include 2>/dev/null; \\\n+\t  mkdir gcc/include; \\\n+\t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n+\t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n+\t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n \t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  s=`cd $(srcdir); ${PWD}` ; export s; \\\n \t  $(SET_LIB_PATH) \\\n-\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) install); \\\n-\telse \\\n-\t  true; \\\n-\tfi\n+\t  (cd ./gcc; \\\n+\t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n+\t  rm -rf gcc/include; \\\n+\t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n+\telse true; fi\n \n-install-dosrel-fake:\n-\n-ALL_GCC = all-gcc\n-ALL_GCC_C = $(ALL_GCC) all-target-newlib all-target-libgloss\n-ALL_GCC_CXX = $(ALL_GCC_C) all-target-libstdc++-v3\n-\n-# This is a list of inter-dependencies among modules.\n-all-ash:\n-all-autoconf: all-m4 all-texinfo\n-all-automake: all-m4 all-texinfo\n-all-bash:\n-all-bfd: all-libiberty all-intl\n-all-binutils: all-libiberty all-opcodes all-bfd all-flex all-bison all-byacc all-intl\n-all-bison: all-texinfo\n-configure-target-boehm-gc: $(ALL_GCC_C) configure-target-qthreads\n-all-byacc:\n-all-bzip2:\n-all-db:\n-all-dejagnu: all-tcl all-expect all-tk\n-all-diff: all-libiberty\n-all-etc:\n-configure-target-examples: $(ALL_GCC_C)\n-all-expect: all-tcl all-tk\n-all-fileutils: all-libiberty\n-all-findutils:\n-all-find:\n-all-flex: all-libiberty all-bison all-byacc\n-all-gas: all-libiberty all-opcodes all-bfd all-intl\n-all-gawk:\n-all-gcc: all-bison all-byacc all-binutils all-gas all-ld all-zlib\n-all-bootstrap: all-libiberty all-texinfo all-bison all-byacc all-binutils all-gas all-ld all-zlib\n+# --------------------------------------\n+# Dependencies between different modules\n+# --------------------------------------\n+\n+# There are two types of dependencies here: 'hard' dependencies, where one\n+# module simply won't build without the other; and 'soft' dependencies, where\n+# if the depended-on module is missing, the depending module will do without\n+# or find a substitute somewhere (perhaps installed).  Soft dependencies\n+# are specified by depending on a 'maybe-' target.  If you're not sure,\n+# it's safer to use a soft dependency.\n+\n+# Host modules specific to gcc.\n+# GCC needs to identify certain tools.\n+configure-gcc: maybe-configure-binutils maybe-configure-gas maybe-configure-ld maybe-configure-bison maybe-configure-flex\n+all-gcc: maybe-all-libiberty maybe-all-bison maybe-all-byacc maybe-all-binutils maybe-all-gas maybe-all-ld maybe-all-zlib\n+# This is a slightly kludgy method of getting dependencies on \n+# all-build-libiberty correct; it would be better to build it every time.\n+all-gcc: maybe-all-build-libiberty\n+all-bootstrap: maybe-all-libiberty maybe-all-texinfo maybe-all-bison maybe-all-byacc maybe-all-binutils maybe-all-gas maybe-all-ld maybe-all-zlib\n+\n+# Host modules specific to gdb.\n+# GDB needs to know that the simulator is being built.\n+configure-gdb: maybe-configure-tcl maybe-configure-tk maybe-configure-sim\n GDB_TK = @GDB_TK@\n-all-gdb: all-libiberty all-opcodes all-bfd all-mmalloc all-readline all-bison all-byacc all-sim $(gdbnlmrequirements) $(GDB_TK)\n-all-gettext:\n-all-gnuserv:\n-configure-target-gperf: $(ALL_GCC_CXX)\n-all-target-gperf: all-target-libiberty all-target-libstdc++-v3\n-all-gprof: all-libiberty all-bfd all-opcodes all-intl\n-all-grep: all-libiberty\n-all-guile:\n-all-gzip: all-libiberty\n-all-hello: all-libiberty\n-all-indent:\n-all-intl:\n-all-itcl: all-tcl all-tk\n-all-ld: all-libiberty all-bfd all-opcodes all-bison all-byacc all-flex all-intl\n-configure-target-libgloss: $(ALL_GCC)\n-all-target-libgloss: configure-target-newlib\n-all-libgui: all-tcl all-tk all-itcl\n-all-libiberty:\n-\n-all-build-libiberty: configure-build-libiberty\n-\n-configure-target-libffi: $(ALL_GCC_C) \n-configure-target-libjava: $(ALL_GCC_C) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi\n-all-target-libjava: all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n-configure-target-libstdc++-v3: $(ALL_GCC_C)\n-all-target-libstdc++-v3: all-target-libiberty\n-all-libtool:\n-configure-target-libf2c: $(ALL_GCC_C)\n-all-target-libf2c: all-target-libiberty\n-configure-target-libobjc: $(ALL_GCC_C)\n-all-target-libobjc: all-target-libiberty\n-all-m4: all-libiberty all-texinfo\n-all-make: all-libiberty\n-all-mmalloc:\n-configure-target-newlib: $(ALL_GCC)\n-configure-target-libtermcap: $(ALL_GCC_C)\n-all-opcodes: all-bfd all-libiberty\n-all-patch: all-libiberty\n-all-perl:\n-all-prms: all-libiberty\n-configure-target-qthreads: $(ALL_GCC_C)\n-all-rcs:\n-all-readline:\n-all-recode: all-libiberty\n-all-sed: all-libiberty\n-all-send-pr: all-prms\n-all-shellutils:\n-all-sid: all-tcl all-tk\n-all-sim: all-libiberty all-bfd all-opcodes all-readline\n-all-snavigator: all-tcl all-tk all-itcl all-tix all-db all-grep all-libgui\n-all-tar: all-libiberty\n-all-tcl:\n-all-tclX: all-tcl all-tk\n-all-tk: all-tcl\n-all-texinfo: all-libiberty\n-all-textutils:\n-all-time:\n-all-tix: all-tcl all-tk\n-all-wdiff:\n-configure-target-winsup: $(ALL_GCC_C)\n-all-target-winsup: all-target-libiberty all-target-libtermcap\n-all-uudecode: all-libiberty\n-all-zip:\n-all-zlib:\n-configure-target-zlib: $(ALL_GCC_C)\n-all-fastjar: all-zlib all-libiberty\n-configure-target-fastjar: configure-target-zlib\n-all-target-fastjar: configure-target-fastjar all-target-zlib all-target-libiberty\n-configure-target-libiberty: $(ALL_GCC_C)\n-configure-target: $(CONFIGURE_TARGET_MODULES)\n-all-target: $(ALL_TARGET_MODULES)\n-install-target: $(INSTALL_TARGET_MODULES)\n-install-gdb: install-tcl install-tk install-itcl install-tix install-libgui\n-install-sid: install-tcl install-tk\n-\n+all-gdb: maybe-all-libiberty maybe-all-opcodes maybe-all-bfd maybe-all-mmalloc maybe-all-readline maybe-all-bison maybe-all-byacc maybe-all-sim $(gdbnlmrequirements) $(GDB_TK)\n+install-gdb: maybe-install-tcl maybe-install-tk maybe-install-itcl maybe-install-tix maybe-install-libgui\n+libgui/Makefile: maybe-configure-tcl maybe-configure-tk\n+all-libgui: maybe-all-tcl maybe-all-tk maybe-all-itcl\n+\n+# Host modules specific to binutils.\n+configure-bfd: configure-libiberty\n+all-bfd: maybe-all-libiberty maybe-all-intl\n+all-binutils: maybe-all-libiberty maybe-all-opcodes maybe-all-bfd maybe-all-flex maybe-all-bison maybe-all-byacc maybe-all-intl\n # We put install-opcodes before install-binutils because the installed\n # binutils might be on PATH, and they might need the shared opcodes\n # library.\n-install-binutils: install-opcodes\n-\n+install-binutils: maybe-install-opcodes\n+all-gas: maybe-all-libiberty maybe-all-opcodes maybe-all-bfd maybe-all-intl\n+all-gprof: maybe-all-libiberty maybe-all-bfd maybe-all-opcodes maybe-all-intl\n+all-ld: maybe-all-libiberty maybe-all-bfd maybe-all-opcodes maybe-all-bison maybe-all-byacc maybe-all-flex maybe-all-intl\n+all-opcodes: maybe-all-bfd maybe-all-libiberty\n+\n+# Other host modules in the 'src' repository.\n+all-dejagnu: maybe-all-tcl maybe-all-expect maybe-all-tk\n+configure-expect: maybe-configure-tcl maybe-configure-tk\n+all-expect: maybe-all-tcl maybe-all-tk\n+configure-itcl: maybe-configure-tcl maybe-configure-tk\n+all-itcl: maybe-all-tcl maybe-all-tk\n # We put install-tcl before install-itcl because itcl wants to run a\n # program on installation which uses the Tcl libraries.\n-install-itcl: install-tcl\n-\n-\n-# Dependencies of all-target-foo on configure-target-foo.\n-[+ FOR target_modules +]all-target-[+module+]: configure-target-[+module+]\n-[+ ENDFOR target_modules +]\n-\n-### other supporting targets\n+install-itcl: maybe-install-tcl\n+all-sid: maybe-all-tcl maybe-all-tk\n+install-sid: maybe-install-tcl maybe-install-tk\n+all-sim: maybe-all-libiberty maybe-all-bfd maybe-all-opcodes maybe-all-readline maybe-configure-gdb\n+configure-tk: maybe-configure-tcl\n+all-tk: maybe-all-tcl\n+configure-tix: maybe-configure-tcl maybe-configure-tk\n+all-tix: maybe-all-tcl maybe-all-tk\n+all-texinfo: maybe-all-libiberty\n+\n+# Other host modules.  Warning, these are not well tested.\n+all-autoconf: maybe-all-m4 maybe-all-texinfo\n+all-automake: maybe-all-m4 maybe-all-texinfo\n+all-bison: maybe-all-texinfo\n+all-diff: maybe-all-libiberty\n+all-fastjar: maybe-all-zlib maybe-all-libiberty\n+all-fileutils: maybe-all-libiberty\n+all-flex: maybe-all-libiberty maybe-all-bison maybe-all-byacc\n+all-grep: maybe-all-libiberty\n+all-gzip: maybe-all-libiberty\n+all-hello: maybe-all-libiberty\n+all-m4: maybe-all-libiberty maybe-all-texinfo\n+all-make: maybe-all-libiberty\n+all-patch: maybe-all-libiberty\n+all-prms: maybe-all-libiberty\n+all-recode: maybe-all-libiberty\n+all-sed: maybe-all-libiberty\n+all-send-pr: maybe-all-prms\n+all-snavigator: maybe-all-tcl maybe-all-tk maybe-all-itcl maybe-all-tix maybe-all-db maybe-all-grep maybe-all-libgui\n+all-tar: maybe-all-libiberty\n+all-uudecode: maybe-all-libiberty\n+\n+ALL_GCC = maybe-all-gcc\n+ALL_GCC_C = $(ALL_GCC) maybe-all-target-newlib maybe-all-target-libgloss\n+ALL_GCC_CXX = $(ALL_GCC_C) maybe-all-target-libstdc++-v3\n+\n+# Target modules specific to gcc.\n+configure-target-boehm-gc: $(ALL_GCC_C) maybe-configure-target-qthreads\n+configure-target-fastjar: maybe-configure-target-zlib\n+all-target-fastjar: maybe-all-target-zlib maybe-all-target-libiberty\n+configure-target-libf2c: $(ALL_GCC_C)\n+all-target-libf2c: maybe-all-target-libiberty\n+configure-target-libffi: $(ALL_GCC_C) \n+configure-target-libjava: $(ALL_GCC_C) maybe-configure-target-zlib maybe-configure-target-boehm-gc maybe-configure-target-qthreads maybe-configure-target-libffi\n+all-target-libjava: maybe-all-fastjar maybe-all-target-zlib maybe-all-target-boehm-gc maybe-all-target-qthreads maybe-all-target-libffi\n+configure-target-libobjc: $(ALL_GCC_C)\n+all-target-libobjc: maybe-all-target-libiberty\n+configure-target-libstdc++-v3: $(ALL_GCC_C)\n+all-target-libstdc++-v3: maybe-all-target-libiberty\n+configure-target-zlib: $(ALL_GCC_C)\n \n-MAKEDIRS= \\\n-\t$(DESTDIR)$(prefix) \\\n-\t$(DESTDIR)$(exec_prefix)\n-.PHONY: installdirs\n-installdirs: mkinstalldirs\n-\t$(SHELL) $(srcdir)/mkinstalldirs $(MAKEDIRS)\n+# Target modules in the 'src' repository.\n+configure-target-examples: $(ALL_GCC_C)\n+configure-target-libgloss: $(ALL_GCC)\n+all-target-libgloss: maybe-configure-target-newlib\n+configure-target-libiberty: $(ALL_GCC_C)\n+configure-target-libtermcap: $(ALL_GCC_C)\n+configure-target-newlib: $(ALL_GCC)\n+configure-target-rda: $(ALL_GCC_C)\n+configure-target-winsup: $(ALL_GCC_C)\n+all-target-winsup: maybe-all-target-libiberty maybe-all-target-libtermcap\n \n-dir.info: do-install-info\n-\tif [ -f $(srcdir)/texinfo/gen-info-dir ] ; then \\\n-\t  $(srcdir)/texinfo/gen-info-dir $(infodir) $(srcdir)/texinfo/dir.info-template > dir.info.new ; \\\n-\t  mv -f dir.info.new dir.info ; \\\n-\telse true ; \\\n-\tfi\n+# Other target modules.  Warning, these are not well tested.\n+configure-target-gperf: $(ALL_GCC_CXX)\n+all-target-gperf: maybe-all-target-libiberty maybe-all-target-libstdc++-v3\n+configure-target-qthreads: $(ALL_GCC_C)\n \n-dist:\n-\t@echo \"Building a full distribution of this tree isn't done\"\n-\t@echo \"via 'make dist'.  Check out the etc/ subdirectory\" \n+# Dependencies of maybe-foo on foo.  These are used because, for example,\n+# all-gcc only depends on all-gas if gas is present and being configured.\n+@maybe_dependencies@\n \n-etags tags: TAGS\n+# Serialization dependencies.  Host configures don't work well in parallel to\n+# each other, due to contention over config.cache.  Target configures and \n+# build configures are similar.\n+@serialization_dependencies@\n \n-# Right now this just builds TAGS in each subdirectory.  emacs19 has the\n-# ability to use several tags files at once, so there is probably no need\n-# to combine them into one big TAGS file (like CVS 1.3 does).  We could\n-# (if we felt like it) have this Makefile write a piece of elisp which\n-# the user could load to tell emacs19 where all the TAGS files we just\n-# built are.\n-TAGS: do-TAGS\n+# --------------------------------\n+# Regenerating top level configury\n+# --------------------------------\n \n # Rebuilding Makefile.in, using autogen.\n $(srcdir)/Makefile.in: # $(srcdir)/Makefile.tpl $(srcdir)/Makefile.def\n \tcd $(srcdir) && autogen Makefile.def\n \n # with the gnu make, this is done automatically.\n \n+host_makefile_frag=@host_makefile_frag@\n+target_makefile_frag=@target_makefile_frag@\n+\n Makefile: Makefile.in configure.in $(host_makefile_frag) $(target_makefile_frag) $(gcc_version_trigger)\n \t$(SHELL) ./config.status\n "}, {"sha": "0ef16730c5773fb875664883148d1c8174c65db6", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,3 +1,7 @@\n+2002-11-23  H.J. Lu <hjl@gnu.org>\n+\n+\t* accross.m4: New.\n+\n 2002-11-10  Stan Shebs  <shebs@apple.com>\n \n \tRetire common MPW configury bits."}, {"sha": "a4cebf692e1a423971f4358c23fd3f742d7698fd", "filename": "config/accross.m4", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/config%2Faccross.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/config%2Faccross.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Faccross.m4?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -0,0 +1,98 @@\n+AC_DEFUN([AC_COMPILE_CHECK_SIZEOF],\n+[changequote(<<, >>)dnl\n+dnl The name to #define.\n+define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl\n+dnl The cache variable name.\n+define(<<AC_CV_NAME>>, translit(ac_cv_sizeof_$1, [ *], [_p]))dnl\n+changequote([, ])dnl\n+AC_MSG_CHECKING(size of $1)\n+AC_CACHE_VAL(AC_CV_NAME,\n+[for ac_size in 4 8 1 2 16 12 $2 ; do # List sizes in rough order of prevalence.\n+  AC_TRY_COMPILE([#include \"confdefs.h\"\n+#include <sys/types.h>\n+$2\n+], [switch (0) case 0: case (sizeof ($1) == $ac_size):;], AC_CV_NAME=$ac_size)\n+  if test x$AC_CV_NAME != x ; then break; fi\n+done\n+])\n+if test x$AC_CV_NAME = x ; then\n+  AC_MSG_ERROR([cannot determine a size for $1])\n+fi\n+AC_MSG_RESULT($AC_CV_NAME)\n+AC_DEFINE_UNQUOTED(AC_TYPE_NAME, $AC_CV_NAME, [The number of bytes in type $1])\n+undefine([AC_TYPE_NAME])dnl\n+undefine([AC_CV_NAME])dnl\n+])\n+\n+AC_DEFUN([AC_C_BIGENDIAN_CROSS],\n+[AC_CACHE_CHECK(whether byte ordering is bigendian, ac_cv_c_bigendian,\n+[ac_cv_c_bigendian=unknown\n+# See if sys/param.h defines the BYTE_ORDER macro.\n+AC_TRY_COMPILE([#include <sys/types.h>\n+#include <sys/param.h>], [\n+#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN\n+ bogus endian macros\n+#endif], [# It does; now see whether it defined to BIG_ENDIAN or not.\n+AC_TRY_COMPILE([#include <sys/types.h>\n+#include <sys/param.h>], [\n+#if BYTE_ORDER != BIG_ENDIAN\n+ not big endian\n+#endif], ac_cv_c_bigendian=yes, ac_cv_c_bigendian=no)])\n+if test $ac_cv_c_bigendian = unknown; then\n+AC_TRY_RUN([main () {\n+  /* Are we little or big endian?  From Harbison&Steele.  */\n+  union\n+  {\n+    long l;\n+    char c[sizeof (long)];\n+  } u;\n+  u.l = 1;\n+  exit (u.c[sizeof (long) - 1] == 1);\n+}], ac_cv_c_bigendian=no, ac_cv_c_bigendian=yes,\n+[ echo $ac_n \"cross-compiling... \" 2>&AC_FD_MSG ])\n+fi])\n+if test $ac_cv_c_bigendian = unknown; then\n+AC_MSG_CHECKING(to probe for byte ordering)\n+[\n+cat >conftest.c <<EOF\n+short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n+short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n+void _ascii() { char* s = (char*) ascii_mm; s = (char*) ascii_ii; }\n+short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n+short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n+void _ebcdic() { char* s = (char*) ebcdic_mm; s = (char*) ebcdic_ii; }\n+int main() { _ascii (); _ebcdic (); return 0; }\n+EOF\n+] if test -f conftest.c ; then\n+     if ${CC-cc} ${CFLAGS} conftest.c -o conftest.o && test -f conftest.o ; then\n+        if test `grep -l BIGenDianSyS conftest.o` ; then\n+           echo $ac_n ' big endian probe OK, ' 1>&AC_FD_MSG\n+           ac_cv_c_bigendian=yes\n+        fi\n+        if test `grep -l LiTTleEnDian conftest.o` ; then\n+           echo $ac_n ' little endian probe OK, ' 1>&AC_FD_MSG\n+           if test $ac_cv_c_bigendian = yes ; then\n+            ac_cv_c_bigendian=unknown;\n+           else\n+            ac_cv_c_bigendian=no\n+           fi\n+        fi\n+        echo $ac_n 'guessing bigendian ...  ' >&AC_FD_MSG\n+     fi\n+  fi\n+AC_MSG_RESULT($ac_cv_c_bigendian)\n+fi\n+if test $ac_cv_c_bigendian = yes; then\n+  AC_DEFINE(WORDS_BIGENDIAN, 1, [whether byteorder is bigendian])\n+  AC_DEFINE(HOST_WORDS_BIG_ENDIAN, 1,\n+  [Define if the host machine stores words of multi-word integers in\n+   big-endian order.])\n+  BYTEORDER=4321\n+else\n+  BYTEORDER=1234\n+fi\n+AC_DEFINE_UNQUOTED(BYTEORDER, $BYTEORDER, [1234 = LIL_ENDIAN, 4321 = BIGENDIAN])\n+if test $ac_cv_c_bigendian = unknown; then\n+  AC_MSG_ERROR(unknown endianess - sorry, please pre-set ac_cv_c_bigendian)\n+fi\n+])"}, {"sha": "3a275076b8dfd1b5f1db59a2dacb414d63e93018", "filename": "configure", "status": "modified", "additions": 317, "deletions": 538, "changes": 855, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -79,17 +79,15 @@ program_suffixoption=\n program_transform_name=\n program_transform_nameoption=\n redirect=\n-removing=\n site=\n site_makefile_frag=\n site_option=\n srcdir=\n srctrigger=\n-subdirs=\n target_alias=NOTARGET\n target_makefile_frag=\n undefs=NOUNDEFS\n-version=\"$Revision: 1.48 $\"\n+version=\"$Revision: 1.46.6.11 $\"\n x11=default\n bindir='${exec_prefix}/bin'\n sbindir='${exec_prefix}/sbin'\n@@ -317,9 +315,6 @@ do\n \t\tprogram_transform_name=\"${program_transform_name} -e `echo ${optarg} | sed -e 's/\\\\\\\\/\\\\\\\\\\\\\\\\/g' -e 's/\\\\\\$/$$/g'`\"\n \t\tprogram_transform_nameoption=\"${program_transform_nameoption} --program-transform-name='$optarg'\"\n \t\t;;\n-\t--rm)\n-\t\tremoving=--rm\n-\t\t;;\n \t--sb*)\n \t\tsbindir=$optarg\n \t\tdiroptions=\"$diroptions --sbindir=$optarg\"\n@@ -590,28 +585,6 @@ case \"${exec_prefixoption}\" in\n *) ;;\n esac\n \n-# Define the trigger file to make sure configure will re-run whenever\n-# the gcc version number changes.\n-if [ \"${with_gcc_version_trigger+set}\" = set ]; then\n-    gcc_version_trigger=\"$with_gcc_version_trigger\"\n-    gcc_version=`grep version_string ${with_gcc_version_trigger} | sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/'`\n-else\n-    # If gcc's sources are available, define the trigger file.\n-    if [ -f ${topsrcdir}/gcc/version.c ] ; then\n-\tgcc_version_trigger=${topsrcdir}/gcc/version.c\n-\tgcc_version=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/'`\n-\tcase \"$arguments\" in\n-\t  *--with-gcc-version-trigger=$gcc_version_trigger* )\n-\t    ;;\n-\t  * )\n-\t    # Make sure configure.in knows about this.\n-\t    arguments=\"--with-gcc-version-trigger=$gcc_version_trigger $arguments\"\n-\t    ;;\n-\tesac\n-\twithoptions=\"--with-gcc-version-trigger=$gcc_version_trigger $withoptions\"\n-    fi\n-fi\n-\n ### break up ${srcdir}/configure.in.\n case \"`grep '^# per\\-host:' ${srcdir}/configure.in`\" in\n \"\")\n@@ -639,7 +612,7 @@ case \"`grep '^# per\\-host:' ${srcdir}/configure.in`\" in\n \t\t${program_transform_nameoption} ${site_option} \\\n \t\t${withoptions} ${withoutoptions} \\\n \t\t${enableoptions} ${disableoptions} ${floating_pointoption} \\\n-\t\t${cache_file_option} ${removing} ${other_options} ${redirect}\n+\t\t${cache_file_option} ${other_options} ${redirect}\n \t  else\n \t    echo '***' There is no configure script present though. 1>&2\n \t  fi\n@@ -687,24 +660,8 @@ fi\n \n ### do common part of configure.in\n \n-# If the language specific compiler does not exist, but the \"gcc\" directory does,\n-# we will skip this directory; in this case the sub-directory's common part\n-# of configure.in will create a small shell script \"skip-this-dir\" containing\n-# commands to completely clean up any temporary or created files.\n-\n . ${tmpfile}.com\n \n-if test -f skip-this-dir; then\n-\t# Perform the same cleanup as the trap handler, minus the \"exit 1\" of course,\n-\t# and reset the trap handler.\n-\ttrap 0\n-\trm -rf Makefile* ${tmpdir}\n-\t# Execute the final clean-up actions\n-\t${config_shell} skip-this-dir\n-\t# and stop configuring this directory.\n-\texit 0\n-fi\n-\n # some sanity checks on configure.in\n case \"${srctrigger}\" in\n \"\")\n@@ -911,10 +868,10 @@ do\n   test -n \"$DEFAULT_LEX\" && break\n done\n \n+\n if [ \"${build}\" != \"${host}\" ]; then\n   # If we are doing a Canadian Cross, in which the host and build systems\n   # are not the same, we set reasonable default values for the tools.\n-\n   tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n   tools=\"${tools} CC_FOR_TARGET CXX_FOR_TARGET GCJ_FOR_TARGET\"\n   tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n@@ -941,6 +898,7 @@ t loop\n \n   AR=${AR-${host_alias}-ar}\n   AR_FOR_TARGET=${AR_FOR_TARGET-${target_alias}-ar}\n+  AR_FOR_TARGET=${AR_FOR_TARGET}${extra_arflags_for_target}\n   AS=${AS-${host_alias}-as}\n   AS_FOR_TARGET=${AS_FOR_TARGET-${target_alias}-as}\n   BISON=${BISON-bison}\n@@ -962,6 +920,7 @@ t loop\n   MAKEINFO=${MAKEINFO-makeinfo}\n   NM=${NM-${host_alias}-nm}\n   NM_FOR_TARGET=${NM_FOR_TARGET-${target_alias}-nm}\n+  NM_FOR_TARGET=${NM_FOR_TARGET}${extra_nmflags_for_target}\n   RANLIB=${RANLIB-${host_alias}-ranlib}\n   RANLIB_FOR_TARGET=${RANLIB_FOR_TARGET-${target_alias}-ranlib}\n   WINDRES=${WINDRES-${host_alias}-windres}\n@@ -1021,6 +980,44 @@ t loop\n   export OBJCOPY\n   export OBJDUMP\n else\n+  # Set reasonable default values for some tools even if not Canadian.\n+  # Of course, these are different reasonable default values, originally\n+  # specified directly in the Makefile.\n+  # We don't export, so that autoconf can do its job.\n+  # Note that all these settings are above the fragment inclusion point\n+  # in Makefile.in, so can still be overridden by fragments.\n+  # This is all going to change when we autoconfiscate...\n+\n+  tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n+  tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n+  tools=\"${tools} BUILD_PREFIX_1 LD LD_FOR_TARGET LEX MAKEINFO NM\"\n+  tools=\"${tools} NM_FOR_TARGET RANLIB_FOR_TARGET\"\n+  tools=\"${tools} WINDRES WINDRES_FOR_TARGET YACC\"\n+\n+  AR=ar\n+  AR_FOR_TARGET='\\$(USUAL_AR_FOR_TARGET)'\n+  AR_FOR_TARGET=${AR_FOR_TARGET}${extra_arflags_for_target}\n+  AS=as\n+  AS_FOR_TARGET='\\$(USUAL_AS_FOR_TARGET)'\n+  BISON='$(USUAL_BISON)'\n+  CC_FOR_BUILD='\\$(CC)'\n+  DLLTOOL=dlltool\n+  DLLTOOL_FOR_TARGET='\\$(USUAL_DLLTOOL_FOR_TARGET)'\n+  GCC_FOR_TARGET='\\$(USUAL_GCC_FOR_TARGET)'\n+  BUILD_PREFIX=\n+  BUILD_PREFIX_1=loser-\n+  LD=ld\n+  LD_FOR_TARGET='\\$(USUAL_LD_FOR_TARGET)'\n+  MAKEINFO='\\$(USUAL_MAKEINFO)'\n+  NM=nm\n+  NM_FOR_TARGET='\\$(USUAL_NM_FOR_TARGET)'\n+  NM_FOR_TARGET=${NM_FOR_TARGET}${extra_nmflags_for_target}\n+  RANLIB_FOR_TARGET='\\$(USUAL_RANLIB_FOR_TARGET)'\n+  WINDRES=windres\n+  WINDRES_FOR_TARGET='\\$(USUAL_WINDRES_FOR_TARGET)'\n+  LEX='\\$(USUAL_LEX)'\n+  YACC='\\$(USUAL_YACC)'\n+\n   # If CC is still not set, try to get gcc.\n   if [ -z \"${CC}\" ]; then\n     IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n@@ -1072,526 +1069,308 @@ export CXX\n export CFLAGS\n export CXXFLAGS\n \n-all_build_modules=\n-if test x\"${build_alias}\" != x\"${host_alias}\"\n-then\n-  all_build_modules='$(ALL_BUILD_MODULES_LIST)'\n-fi\n+# FIXME Should this be done recursively ??? (Useful for e.g. gdbtest)\n+# Set up the list of links to be made.\n+# ${links} is the list of link names, and ${files} is the list of names to link to.\n \n-for subdir in . ${subdirs} ; do\n-\n-    # ${subdir} is relative path from . to the directory we're currently\n-    # configuring.\n-    # ${invsubdir} is inverse of ${subdir), *with* trailing /, if needed.\n-    invsubdir=`echo ${subdir}/ | sed -e 's|\\./||g' -e 's|[^/]*/|../|g'`\n-\n-    ### figure out what to do with srcdir\n-    case \"${srcdir}\" in\n-        \".\")  # no -srcdir option.  We're building in place.\n-                makesrcdir=. ;;\n-        /* | [A-Za-z]:[\\\\/]* ) # absolute path\n-                makesrcdir=`echo ${srcdir}/${subdir} | sed -e 's|/\\.$||'`\n-                ;;\n-        *) # otherwise relative\n-                case \"${subdir}\" in\n-                .) makesrcdir=${srcdir} ;;\n-                *) makesrcdir=${invsubdir}${srcdir}/${subdir} ;;\n-                esac\n-                ;;\n-    esac\n-\n-    if [ \"${subdir}/\" != \"./\" ] ; then\n-        Makefile=${subdir}/Makefile\n-    fi\n-\n-    if [ ! -d ${subdir} ] ; then\n-        if mkdir ${subdir} ; then\n-                true\n-        else\n-                echo '***' \"${progname}: could not make ${PWD=`${PWDCMD-pwd}`}/${subdir}\" 1>&2\n-                exit 1\n-        fi\n+# Make the links.\n+configlinks=\"${links}\"\n+if [ -r ./config.status ] ; then\n+  mv -f ./config.status ./config.back\n+fi\n+while [ -n \"${files}\" ] ; do\n+  # set file to car of files, files to cdr of files\n+  set ${files}; file=$1; shift; files=$*\n+  set ${links}; link=$1; shift; links=$*\n+\n+  if [ ! -r ${srcdir}/${file} ] ; then\n+    if [ ! -r ${file} ] ; then\n+      echo '***' \"${progname}: cannot create a link \\\"${link}\\\",\" 1>&2\n+      echo '***' \"since the file \\\"${srcdir}/${file}\\\" does not exist.\" 1>&2\n+      exit 1\n+    else\n+      srcfile=${file}\n     fi\n+  else\n+    srcfile=${srcdir}/${file}\n+  fi\n \n-    case \"${removing}\" in\n-    \"\")\n-        case \"${subdir}\" in\n-        .) ;;\n-        *) eval echo Building in ${subdir} ${redirect} ;;\n-        esac\n-\n-        # FIXME Should this be done recursively ??? (Useful for e.g. gdbtest)\n-        # Set up the list of links to be made.\n-        # ${links} is the list of link names, and ${files} is the list of names to link to.\n-\n-        # Make the links.\n-        configlinks=\"${links}\"\n-        if [ -r ${subdir}/config.status ] ; then\n-                mv -f ${subdir}/config.status ${subdir}/config.back\n-        fi\n-        while [ -n \"${files}\" ] ; do\n-                # set file to car of files, files to cdr of files\n-                set ${files}; file=$1; shift; files=$*\n-                set ${links}; link=$1; shift; links=$*\n-\n-                if [ ! -r ${srcdir}/${file} ] ; then\n-                  if [ ! -r ${file} ] ; then\n-\t\t    \n-                        echo '***' \"${progname}: cannot create a link \\\"${link}\\\",\" 1>&2\n-                        echo '***' \"since the file \\\"${srcdir}/${file}\\\" does not exist.\" 1>&2\n-                        exit 1\n-\t\t  else\n-\t\t\tsrcfile=${file}\n-\t\t  fi\n-\t\telse\n-\t\t\tsrcfile=${srcdir}/${file}\n-                fi\n-\n-                ${remove} -f ${link}\n-\t\t# Make a symlink if possible, otherwise try a hard link\n-\t\tif ${symbolic_link} ${srcfile} ${link} >/dev/null 2>&1 ; then\n-\t\t\ttrue\n-\t\telse\n-\t\t\t# We need to re-remove the file because Lynx leaves a \n-\t\t\t# very strange directory there when it fails an NFS symlink.\n-\t\t\t${remove} -r -f ${link}\n-\t\t\t${hard_link} ${srcfile} ${link}\n-\t\tfi\n-                if [ ! -r ${link} ] ; then\n-                        echo '***' \"${progname}: unable to link \\\"${link}\\\" to \\\"${srcfile}\\\".\" 1>&2\n-                        exit 1\n-                fi\n+  ${remove} -f ${link}\n+  # Make a symlink if possible, otherwise try a hard link\n+  if ${symbolic_link} ${srcfile} ${link} >/dev/null 2>&1 ; then\n+    true\n+  else\n+    # We need to re-remove the file because Lynx leaves a \n+    # very strange directory there when it fails an NFS symlink.\n+    ${remove} -r -f ${link}\n+    ${hard_link} ${srcfile} ${link}\n+  fi\n+  if [ ! -r ${link} ] ; then\n+    echo '***' \"${progname}: unable to link \\\"${link}\\\" to \\\"${srcfile}\\\".\" 1>&2\n+    exit 1\n+  fi\n \n-                echo \"Linked \\\"${link}\\\" to \\\"${srcfile}\\\".\"\n-        done\n+  echo \"Linked \\\"${link}\\\" to \\\"${srcfile}\\\".\"\n+done\n \n-        # Create a .gdbinit file which runs the one in srcdir\n-        # and tells GDB to look there for source files.\n+# Create a .gdbinit file which runs the one in srcdir\n+# and tells GDB to look there for source files.\n \n-        if [ -r ${srcdir}/${subdir}/.gdbinit ] ; then\n-                case ${srcdir} in\n-                .) ;;\n-                *) cat > ${subdir}/.gdbinit <<EOF\n+if [ -r ${srcdir}/.gdbinit ] ; then\n+  case ${srcdir} in\n+    .) ;;\n+    *) cat > ./.gdbinit <<EOF\n # ${NO_EDIT}\n-dir ${makesrcdir}\n+dir ${srcdir}\n dir .\n-source ${makesrcdir}/.gdbinit\n+source ${srcdir}/.gdbinit\n EOF\n-                        ;;\n-                esac\n-        fi\n+    ;;\n+  esac\n+fi\n \n-        # Install a makefile, and make it set VPATH\n-        # if necessary so that the sources are found.\n-        # Also change its value of srcdir.\n-        # NOTE: Makefile generation constitutes the majority of the time in configure.  Hence, this section has\n-        # been somewhat optimized and is perhaps a bit twisty.\n-\n-        # code is order so as to try to sed the smallest input files we know.\n-        # so do these separately because I don't trust the order of sed -e expressions.\n-\n-        # the five makefile fragments MUST end up in the resulting Makefile in this order: \n-        # package macros, target, host, site, and package rules.\n-\n-        if [ -f ${srcdir}/${subdir}/${Makefile_in} ] ; then\n-\n-            # Conditionalize the makefile for this package from \"Makefile.in\" (or whatever it's called) into Makefile.tem.\n-            rm -f ${subdir}/${Makefile}.tem\n-            case \"${package_makefile_rules_frag}\" in\n-              \"\") cp ${srcdir}/${subdir}/${Makefile_in} ${subdir}/Makefile.tem ;;\n-              *)\n-                      if [ ! -f ${package_makefile_rules_frag} ] ; then\n-                              package_makefile_rules_frag=${srcdir}/${package_makefile_rules_frag}\n-                      fi\n-                      if [ -f ${package_makefile_rules_frag} ] ; then\n-                              sed -e \"/^####/  r ${package_makefile_rules_frag}\" ${srcdir}/${subdir}/${Makefile_in} > ${Makefile}.tem\n-                      else\n-                              echo '***' Expected package makefile rules fragment \\\"${package_makefile_rules_frag}\\\" 1>&2\n-                              echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n-                              cp ${srcdir}/${subdir}/${Makefile_in} ${subdir}/Makefile.tem\n-                      fi\n-            esac\n-            # working copy now in ${Makefile}.tem\n-\n-            # Conditionalize for this site.\n-            rm -f ${Makefile}\n-              case \"${site}\" in\n-              \"\") mv ${subdir}/Makefile.tem ${Makefile} ;;\n-              *)\n-                      site_makefile_frag=${srcdir}/config/ms-${site}\n-\n-                      if [ -f ${site_makefile_frag} ] ; then\n-                              sed -e \"/^####/  r ${site_makefile_frag}\" ${subdir}/Makefile.tem \\\n-                                      > ${Makefile}\n-                      else\n-                              mv ${subdir}/Makefile.tem ${Makefile}\n-                              site_makefile_frag=\n-                      fi\n-                      ;;\n-            esac\n-            # working copy now in ${Makefile}\n-\n-            # Conditionalize the makefile for this host.\n-            rm -f ${subdir}/Makefile.tem\n-            case \"${host_makefile_frag}\" in\n-              \"\") mv ${Makefile} ${subdir}/Makefile.tem ;;\n-              *)\n-                      if [ ! -f ${host_makefile_frag} ] ; then\n-                              host_makefile_frag=${srcdir}/${host_makefile_frag}\n-                      fi\n-                      if [ -f ${host_makefile_frag} ] ; then\n-                              sed -e \"/^####/  r ${host_makefile_frag}\" ${Makefile} > ${subdir}/Makefile.tem\n-                      else\n-                              echo '***' Expected host makefile fragment \\\"${host_makefile_frag}\\\" 1>&2\n-                              echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n-                              mv ${Makefile} ${subdir}/Makefile.tem\n-                      fi\n-            esac\n-            # working copy now in ${subdir)/Makefile.tem\n-\n-            # Conditionalize the makefile for this target.\n-            rm -f ${Makefile}\n-            case \"${target_makefile_frag}\" in\n-              \"\") mv ${subdir}/Makefile.tem ${Makefile} ;;\n-              *)\n-                      if [ ! -f ${target_makefile_frag} ] ; then\n-                              target_makefile_frag=${srcdir}/${target_makefile_frag}\n-                      fi\n-                      if [ -f ${target_makefile_frag} ] ; then\n-                              sed -e \"/^####/  r ${target_makefile_frag}\" ${subdir}/Makefile.tem > ${Makefile}\n-                      else\n-                              mv ${subdir}/Makefile.tem ${Makefile}\n-                              target_makefile_frag=\n-                      fi\n-                      ;;\n-            esac\n-            # working copy now in ${Makefile}\n-\n-            # Emit the default values of this package's macros.\n-            rm -f ${subdir}/Makefile.tem\n-            case \"${package_makefile_frag}\" in\n-              \"\") mv ${Makefile} ${subdir}/Makefile.tem ;;\n-              *)\n-                      if [ ! -f ${package_makefile_frag} ] ; then\n-                              package_makefile_frag=${srcdir}/${package_makefile_frag}\n-                      fi\n-                      if [ -f ${package_makefile_frag} ] ; then\n-                              sed -e \"/^####/  r ${package_makefile_frag}\" ${Makefile} > ${subdir}/Makefile.tem\n-                      else\n-                              echo '***' Expected package makefile fragment \\\"${package_makefile_rules_frag}\\\" 1>&2\n-                              echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n-                              mv ${Makefile} ${subdir}/Makefile.tem\n-                      fi\n-            esac\n-            # real copy now in ${subdir}/Makefile.tem\n-\n-            # prepend warning about editing, and a bunch of variables.\n-            rm -f ${Makefile}\n-            cat > ${Makefile} <<EOF\n-# ${NO_EDIT}\n-VPATH = ${makesrcdir}\n-links = ${configlinks}\n-host_alias = ${host_alias}\n-host_cpu = ${host_cpu}\n-host_vendor = ${host_vendor}\n-host_os = ${host_os}\n-host_canonical = ${host_cpu}-${host_vendor}-${host_os}\n-target_alias = ${target_alias}\n-target_cpu = ${target_cpu}\n-target_vendor = ${target_vendor}\n-target_os = ${target_os}\n-target_canonical = ${target_cpu}-${target_vendor}-${target_os}\n-EOF\n-\t    case \"${build}\" in\n-\t      \"\") ;;\n-\t      *)  cat >> ${Makefile} << EOF\n-build_alias = ${build_alias}\n-build_cpu = ${build_cpu}\n-build_vendor = ${build_vendor}\n-build_os = ${build_os}\n-build_canonical = ${build_cpu}-${build_vendor}-${build_os}\n-EOF\n-\t    esac\n+# Install a makefile, and make it set VPATH\n+# if necessary so that the sources are found.\n+# Also change its value of srcdir.\n+# NOTE: Makefile generation constitutes the majority of the time in configure.  Hence, this section has\n+# been somewhat optimized and is perhaps a bit twisty.\n \n-            case \"${package_makefile_frag}\" in\n-              \"\") ;;\n-              /* | [A-Za-z]:[\\\\/]* ) echo package_makefile_frag = ${package_makefile_frag} >>${Makefile} ;;\n-              *)  echo package_makefile_frag = ${invsubdir}${package_makefile_frag} >>${Makefile} ;;\n-            esac\n-\n-            case \"${target_makefile_frag}\" in\n-              \"\") ;;\n-              /* | [A-Za-z]:[\\\\/]* ) echo target_makefile_frag = ${target_makefile_frag} >>${Makefile} ;;\n-              *)  echo target_makefile_frag = ${invsubdir}${target_makefile_frag} >>${Makefile} ;;\n-            esac\n-\n-            case \"${host_makefile_frag}\" in\n-              \"\") ;;\n-              /* | [A-Za-z]:[\\\\/]* ) echo host_makefile_frag = ${host_makefile_frag} >>${Makefile} ;;\n-              *)  echo host_makefile_frag = ${invsubdir}${host_makefile_frag} >>${Makefile} ;;\n-            esac\n-\n-            if [ \"${site_makefile_frag}\" != \"\" ] ; then\n-                echo site_makefile_frag = ${invsubdir}${site_makefile_frag} >>${Makefile}\n-            fi \n-\n-\t    echo enable_shared = ${enable_shared} >> ${Makefile}\n-\t    echo enable_threads = ${enable_threads} >> ${Makefile}\n-\t    # record if we want to rumtime library stuff installed in libsubdir.\n-\t    if test -z \"${enable_version_specific_runtime_libs}\"; then\n-\t        echo enable_version_specific_runtime_libs = no >> ${Makefile}\n-\t    else\n-\t        echo enable_version_specific_runtime_libs = ${enable_version_specific_runtime_libs} >> ${Makefile}\n-\t    fi\n+# code is order so as to try to sed the smallest input files we know.\n+# so do these separately because I don't trust the order of sed -e expressions.\n \n-\t    # Emit a macro which describes the file containing gcc's\n-\t    # version number.\n-\t    echo gcc_version_trigger = ${gcc_version_trigger} >> ${Makefile}\n-\t    # And emit a macro defining gcc's version number.\n-\t    echo gcc_version = ${gcc_version} >> ${Makefile}\n-\n-            # reset prefix, exec_prefix, srcdir, SUBDIRS, NONSUBDIRS,\n-            # remove any form feeds.\n-            if [ -z \"${subdirs}\" ]; then\n-                rm -f ${subdir}/Makefile.tm2\n-                sedtemp=sed.$$\n-                cat >$sedtemp <<EOF\n-s:@configdirs@:${configdirs}:\n-EOF\n-                sed -f $sedtemp \\\n-                    ${subdir}/Makefile.tem > ${subdir}/Makefile.tm2\n-                rm -f $sedtemp\n-                rm -f ${subdir}/Makefile.tem\n-                mv ${subdir}/Makefile.tm2 ${subdir}/Makefile.tem\n-\t    fi\n-\t    sed     -e \"s|@prefix@|${prefix}|\" \\\n-                    -e \"s|@exec_prefix@|${exec_prefix}|\" \\\n-                    -e \"s|@bindir@|${bindir}|\" \\\n-                    -e \"s|@sbindir@|${sbindir}|\" \\\n-                    -e \"s|@libexecdir@|${libexecdir}|\" \\\n-                    -e \"s|@datadir@|${datadir}|\" \\\n-                    -e \"s|@sysconfdir@|${sysconfdir}|\" \\\n-                    -e \"s|@sharedstatedir@|${sharedstatedir}|\" \\\n-                    -e \"s|@localstatedir@|${localstatedir}|\" \\\n-                    -e \"s|@libdir@|${libdir}|\" \\\n-                    -e \"s|@includedir@|${includedir}|\" \\\n-                    -e \"s|@oldincludedir@|${oldincludedir}|\" \\\n-                    -e \"s|@infodir@|${infodir}|\" \\\n-                    -e \"s|@mandir@|${mandir}|\" \\\n-\t\t    -e \"s|@all_build_modules@|${all_build_modules}|\" \\\n-\t\t    -e \"/^CC[ \t]*=/{\n-\t\t\t:loop1\n-\t\t\t/\\\\\\\\$/ N\n-\t\t\ts/\\\\\\\\\\\\n//g\n-\t\t\tt loop1\n-\t\t\ts%^CC[ \t]*=.*$%CC = ${CC}%\n-\t\t\t}\" \\\n-\t\t    -e \"/^CXX[ \t]*=/{\n-\t\t\t:loop2\n-\t\t\t/\\\\\\\\$/ N\n-\t\t\ts/\\\\\\\\\\\\n//g\n-\t\t\tt loop2\n-\t\t\ts%^CXX[ \t]*=.*$%CXX = ${CXX}%\n-\t\t\t}\" \\\n-\t\t    -e \"/^CFLAGS[ \t]*=/{\n-\t\t\t:loop3\n-\t\t\t/\\\\\\\\$/ N\n-\t\t\ts/\\\\\\\\\\\\n//g\n-\t\t\tt loop3\n-\t\t\ts%^CFLAGS[ \t]*=.*$%CFLAGS = ${CFLAGS}%\n-\t\t\t}\" \\\n-\t\t    -e \"/^CXXFLAGS[ \t]*=/{\n-\t\t\t:loop4\n-\t\t\t/\\\\\\\\$/ N\n-\t\t\ts/\\\\\\\\\\\\n//g\n-\t\t\tt loop4\n-\t\t\ts%^CXXFLAGS[ \t]*=.*$%CXXFLAGS = ${CXXFLAGS}%\n-\t\t\t}\" \\\n-\t\t    -e \"s|@config_shell@|${config_shell}|\" \\\n-                    -e \"s|@srcdir@|${makesrcdir}|\" \\\n-                    -e \"s/\f//\" \\\n-                    -e \"s:@program_transform_name@:${program_transform_name}:\" \\\n-                    -e \"s|@tooldir@|${tooldir}|\" \\\n-                    -e \"s|@build_tooldir@|${tooldir}|\" \\\n-\t\t    -e \"s:@DEFAULT_YACC@:${DEFAULT_YACC}:\" \\\n-\t\t    -e \"s:@DEFAULT_LEX@:${DEFAULT_LEX}:\" \\\n-\t\t    -e \"s:@DEFAULT_M4@:${DEFAULT_M4}:\" \\\n-                    ${subdir}/Makefile.tem >> ${Makefile}\n-  \n-\t    sed -e \"s:@GDB_TK@:${GDB_TK}:\" ${Makefile} >${Makefile}.tem\n-\t    mv -f ${Makefile}.tem ${Makefile}\n-\n-\t    # If this is a Canadian Cross, preset the values of many more\n-\t    # tools.\n-\t    if [ \"${build}\" != \"${host}\" ]; then\n-\t\tfor var in ${tools}; do\n-\t\t    eval val=\\$${var}\n-\t\t    sed -e \"/^${var}[ \t]*=/{\n-\t\t\t   :loop1\n-\t\t\t   /\\\\\\\\$/ N\n-\t\t\t   /\\\\\\\\$/ b loop1\n-\t\t\t   s/\\\\\\\\\\\\n//g\n-\t\t\t   s%^${var}[ \t]*=.*$%${var} = ${val}%\n-\t\t\t   }\" ${Makefile} > ${Makefile}.tem\n-\t\t    mv -f ${Makefile}.tem ${Makefile}\n-\t\tdone\n-\t    fi\n+# the five makefile fragments MUST end up in the resulting Makefile in this order: \n+# package macros, target, host, site, and package rules.\n \n-            # final copy now in ${Makefile}\n+if [ -f ${srcdir}/${Makefile_in} ] ; then\n \n-        else\n-           echo \"No Makefile.in found in ${srcdir}/${subdir}, unable to configure\" 1>&2\n-        fi\n+  # Conditionalize the makefile for this package from \"Makefile.in\" (or whatever it's called) into Makefile.tem.\n+  rm -f ./${Makefile}.tem\n+  case \"${package_makefile_rules_frag}\" in\n+    \"\") cp ${srcdir}/${Makefile_in} ./Makefile.tem ;;\n+    *)\n+      if [ ! -f ${package_makefile_rules_frag} ] ; then\n+        package_makefile_rules_frag=${srcdir}/${package_makefile_rules_frag}\n+      fi\n+      if [ -f ${package_makefile_rules_frag} ] ; then\n+        sed -e \"/^####/  r ${package_makefile_rules_frag}\" ${srcdir}/${Makefile_in} > ${Makefile}.tem\n+      else\n+        echo '***' Expected package makefile rules fragment \\\"${package_makefile_rules_frag}\\\" 1>&2\n+        echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n+        cp ${srcdir}/${Makefile_in} ./Makefile.tem\n+      fi\n+  esac\n+  # working copy now in ${Makefile}.tem\n+\n+  # Conditionalize for this site.\n+  rm -f ${Makefile}\n+  case \"${site}\" in\n+    \"\") mv ./Makefile.tem ${Makefile} ;;\n+    *)\n+      site_makefile_frag=${srcdir}/config/ms-${site}\n+\n+      if [ -f ${site_makefile_frag} ] ; then\n+        sed -e \"/^####/  r ${site_makefile_frag}\" ./Makefile.tem > ${Makefile}\n+      else\n+        mv ./Makefile.tem ${Makefile}\n+        site_makefile_frag=\n+      fi\n+      ;;\n+  esac\n+  # working copy now in ${Makefile}\n+\n+  # Conditionalize the makefile for this host.\n+  rm -f ./Makefile.tem\n+  case \"${host_makefile_frag}\" in\n+    \"\") mv ${Makefile} ./Makefile.tem ;;\n+    *)\n+      if [ ! -f ${host_makefile_frag} ] ; then\n+        host_makefile_frag=${srcdir}/${host_makefile_frag}\n+      fi\n+      if [ -f ${host_makefile_frag} ] ; then\n+        sed -e \"/^####/  r ${host_makefile_frag}\" ${Makefile} > ./Makefile.tem\n+      else\n+        echo '***' Expected host makefile fragment \\\"${host_makefile_frag}\\\" 1>&2\n+        echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n+        mv ${Makefile} ./Makefile.tem\n+      fi\n+  esac\n+  # working copy now in ./Makefile.tem\n+\n+  # Conditionalize the makefile for this target.\n+  rm -f ${Makefile}\n+  case \"${target_makefile_frag}\" in\n+    \"\") mv ./Makefile.tem ${Makefile} ;;\n+    *)\n+      if [ ! -f ${target_makefile_frag} ] ; then\n+        target_makefile_frag=${srcdir}/${target_makefile_frag}\n+      fi\n+      if [ -f ${target_makefile_frag} ] ; then\n+        sed -e \"/^####/  r ${target_makefile_frag}\" ./Makefile.tem > ${Makefile}\n+      else\n+        mv ./Makefile.tem ${Makefile}\n+        target_makefile_frag=\n+      fi\n+      ;;\n+  esac\n+  # working copy now in ${Makefile}\n+\n+  # Emit the default values of this package's macros.\n+  rm -f ./Makefile.tem\n+  case \"${package_makefile_frag}\" in\n+    \"\") mv ${Makefile} ./Makefile.tem ;;\n+    *)\n+      if [ ! -f ${package_makefile_frag} ] ; then\n+        package_makefile_frag=${srcdir}/${package_makefile_frag}\n+      fi\n+      if [ -f ${package_makefile_frag} ] ; then\n+        sed -e \"/^####/  r ${package_makefile_frag}\" ${Makefile} > ./Makefile.tem\n+      else\n+        echo '***' Expected package makefile fragment \\\"${package_makefile_rules_frag}\\\" 1>&2\n+        echo '***' is missing in ${PWD=`${PWDCMD-pwd}`}. 1>&2\n+        mv ${Makefile} ./Makefile.tem\n+      fi\n+  esac\n+  # real copy now in ./Makefile.tem\n \n-        rm -f ${subdir}/Makefile.tem\n+  # record if we want runtime library stuff installed in libsubdir.\n+  # Blank means no.\n+  if test -z \"${enable_version_specific_runtime_libs}\"; then\n+    enable_version_specific_runtime_libs=no\n+  fi\n \n-        case \"${host_makefile_frag}\" in\n-        \"\") using= ;;\n-        *) using=\"and \\\"${host_makefile_frag}\\\"\" ;;\n-        esac\n+  sed -e \"s|@configlinks@|${configlinks}|\" \\\n+      -e \"s|@build_alias@|${build_alias}|\" \\\n+      -e \"s|@build_cpu@|${build_cpu}|\" \\\n+      -e \"s|@build_vendor@|${build_vendor}|\" \\\n+      -e \"s|@build_os@|${build_os}|\" \\\n+      -e \"s|@host_alias@|${host_alias}|\" \\\n+      -e \"s|@host_cpu@|${host_cpu}|\" \\\n+      -e \"s|@host_vendor@|${host_vendor}|\" \\\n+      -e \"s|@host_os@|${host_os}|\" \\\n+      -e \"s|@target_alias@|${target_alias}|\" \\\n+      -e \"s|@target_cpu@|${target_cpu}|\" \\\n+      -e \"s|@target_vendor@|${target_vendor}|\" \\\n+      -e \"s|@target_os@|${target_os}|\" \\\n+      -e \"s|@target_makefile_frag@|${target_makefile_frag}|\" \\\n+      -e \"s|@host_makefile_frag@|${host_makefile_frag}|\" \\\n+      -e \"s|@enable_shared@|${enable_shared}|\" \\\n+      -e \"s|@enable_threads@|${enable_threads}|\" \\\n+      -e \"s|@enable_version_specific_runtime_libs@|${enable_version_specific_runtime_libs}|\" \\\n+      -e \"s|@gcc_version_trigger@|${gcc_version_trigger}|\" \\\n+      -e \"s|@gcc_version@|${gcc_version}|\" \\\n+      ./Makefile.tem > ${Makefile}\n+  mv -f ${Makefile} ./Makefile.tem\n+  # Real copy now in Makefile.tem; no prologue.\n+\n+  # reset prefix, exec_prefix, srcdir, SUBDIRS, NONSUBDIRS,\n+  # remove any form feeds.\n+  sed -e \"s|@configdirs@|${configdirs}|\" \\\n+      -e \"s|@prefix@|${prefix}|\" \\\n+      -e \"s|@exec_prefix@|${exec_prefix}|\" \\\n+      -e \"s|@bindir@|${bindir}|\" \\\n+      -e \"s|@sbindir@|${sbindir}|\" \\\n+      -e \"s|@libexecdir@|${libexecdir}|\" \\\n+      -e \"s|@datadir@|${datadir}|\" \\\n+      -e \"s|@sysconfdir@|${sysconfdir}|\" \\\n+      -e \"s|@sharedstatedir@|${sharedstatedir}|\" \\\n+      -e \"s|@localstatedir@|${localstatedir}|\" \\\n+      -e \"s|@libdir@|${libdir}|\" \\\n+      -e \"s|@includedir@|${includedir}|\" \\\n+      -e \"s|@oldincludedir@|${oldincludedir}|\" \\\n+      -e \"s|@infodir@|${infodir}|\" \\\n+      -e \"s|@mandir@|${mandir}|\" \\\n+      -e \"s|@CC@|${CC}|\" \\\n+      -e \"s|@CXX@|${CXX}|\" \\\n+      -e \"s|@CFLAGS@|${CFLAGS}|\" \\\n+      -e \"s|@CXXFLAGS@|${CXXFLAGS}|\" \\\n+      -e \"s|@config_shell@|${config_shell}|\" \\\n+      -e \"s|@srcdir@|${srcdir}|\" \\\n+      -e \"s/\f//\" \\\n+      -e \"s:@program_transform_name@:${program_transform_name}:\" \\\n+      -e \"s|@tooldir@|${tooldir}|\" \\\n+      -e \"s|@build_tooldir@|${tooldir}|\" \\\n+      -e \"s:@DEFAULT_YACC@:${DEFAULT_YACC}:\" \\\n+      -e \"s:@DEFAULT_LEX@:${DEFAULT_LEX}:\" \\\n+      -e \"s:@DEFAULT_M4@:${DEFAULT_M4}:\" \\\n+          ./Makefile.tem > ${Makefile}\n+\n+  # If this is a Canadian Cross, preset the values of many more\n+  # tools.\n+  if [ \"${build}\" != \"${host}\" ]; then\n+    for var in ${tools}; do\n+      eval val=\\$${var}\n+      sed -e \"/^${var}[ \t]*=/{\n+              :loop1\n+              /\\\\\\\\$/ N\n+              /\\\\\\\\$/ b loop1\n+              s/\\\\\\\\\\\\n//g\n+              s%^${var}[ \t]*=.*$%${var} = ${val}%\n+              }\" ${Makefile} > ${Makefile}.tem\n+      mv -f ${Makefile}.tem ${Makefile}\n+    done\n+  fi\n+  # If this is NOT a Canadian Cross, preset the values of some more\n+  # tools.  The above line should get merged into this, but this\n+  # substitutes *once* where the above substitutes *globally*; that\n+  # needs to be worked out before the merger.  The issue is in Makefile\n+  # fragment elements (ick, yuck, ugh).\n+  if [ \"${build}\" = \"${host}\" ]; then\n+    for var in ${tools}; do\n+      eval val=\\$${var}\n+      sed -e \"s%@${var}@%${val}%\" ${Makefile} > ${Makefile}.tem\n+      mv -f ${Makefile}.tem ${Makefile}\n+    done\n+  fi\n \n-        case \"${target_makefile_frag}\" in\n-        \"\") ;;\n-        *) using=\"${using} and \\\"${target_makefile_frag}\\\"\" ;;\n-        esac\n+  # final copy now in ${Makefile}\n \n-        case \"${site_makefile_frag}\" in\n-        \"\") ;;\n-        *) using=\"${using} and \\\"${site_makefile_frag}\\\"\" ;;\n-        esac\n+else\n+  echo \"No Makefile.in found in ${srcdir}/., unable to configure\" 1>&2\n+fi\n \n-        newusing=`echo \"${using}\" | sed 's/and/using/'`\n-        using=${newusing}\n-        echo \"Created \\\"${Makefile}\\\" in\" ${PWD=`${PWDCMD-pwd}`} ${using}\n+rm -f ./Makefile.tem\n \n-        . ${tmpfile}.pos\n+case \"${host_makefile_frag}\" in\n+  \"\") using= ;;\n+  *) using=\"and \\\"${host_makefile_frag}\\\"\" ;;\n+esac\n \n-        # describe the chosen configuration in config.status.\n-        # Make that file a shellscript which will reestablish\n-        # the same configuration.  Used in Makefiles to rebuild\n-        # Makefiles.\n+case \"${target_makefile_frag}\" in\n+  \"\") ;;\n+  *) using=\"${using} and \\\"${target_makefile_frag}\\\"\" ;;\n+esac\n \n-        case \"${norecursion}\" in\n-        \"\") arguments=\"${arguments} --norecursion\" ;;\n-        *) ;;\n-        esac\n+case \"${site_makefile_frag}\" in\n+  \"\") ;;\n+  *) using=\"${using} and \\\"${site_makefile_frag}\\\"\" ;;\n+esac\n \n-        if [ ${subdir} = . ] ; then\n-            echo \"#!/bin/sh\n-# ${NO_EDIT}\n-# This directory was configured as follows:\n-${progname}\" ${arguments}  \"\n-# ${using}\" > ${subdir}/config.new\n-        else\n-            echo \"#!/bin/sh\n-# ${NO_EDIT}\n-# This directory was configured as follows:\n-cd ${invsubdir}\n-${progname}\" ${arguments}  \"\n-# ${using}\" > ${subdir}/config.new\n-        fi\n-        chmod a+x ${subdir}/config.new\n-        if [ -r ${subdir}/config.back ] ; then\n-                mv -f ${subdir}/config.back ${subdir}/config.status\n-        fi\n-\t${config_shell} ${moveifchange} ${subdir}/config.new ${subdir}/config.status\n-        ;;\n+newusing=`echo \"${using}\" | sed 's/and/using/'`\n+using=${newusing}\n+echo \"Created \\\"${Makefile}\\\" in\" ${PWD=`${PWDCMD-pwd}`} ${using}\n \n-    *)  rm -f ${Makefile} ${subdir}/config.status ${links} ;;\n-    esac\n-done\n+. ${tmpfile}.pos\n \n-# If there are subdirectories, then recur.\n-if [ -z \"${norecursion}\" ] && [ -n \"${configdirs}\" ] ; then \n-        for configdir in ${configdirs} ${extraconfigdirs} ; do\n-\n-\t\t# If configdir contains ',' it is\n-\t\t# srcdir,builddir,target_alias\n-\t\t# These come from extraconfigdirs.\n-\t\tcase ${configdir} in\n-\t\t*,*)\n-\t\t    eval `echo ${configdir} | sed -e 's/\\([^,]*\\),\\([^,]*\\),\\(.*\\)/cfg_dir=\\1 bld_dir=\\2 tgt_alias=\\3/'`\n-\t\t    ;;\n-\t\t*)\n-\t\t    cfg_dir=${configdir}\n-\t\t    bld_dir=${configdir}\n-\t\t    tgt_alias=${target_alias}\n-\t\t    ;;\n-\t\tesac\n+# describe the chosen configuration in config.status.\n+# Make that file a shellscript which will reestablish\n+# the same configuration.  Used in Makefiles to rebuild\n+# Makefiles.\n \n-                if [ -d ${srcdir}/${cfg_dir} ] ; then\n-                        eval echo Configuring ${configdir}... ${redirect}\n-                        case \"${srcdir}\" in\n-                        \".\") ;;\n-                        *)\n-                                if [ ! -d ./${bld_dir} ] ; then\n-                                        if mkdir ./${bld_dir} ; then\n-                                                true\n-                                        else\n-                                                echo '***' \"${progname}: could not make ${PWD=`${PWDCMD-pwd}`}/${bld_dir}\" 1>&2\n-                                                exit 1\n-                                        fi\n-                                fi\n-                                ;;\n-                        esac\n-\n-                        POPDIR=${PWD=`${PWDCMD-pwd}`}\n-                        cd ${bld_dir} \n-\n-### figure out what to do with srcdir\n-                        case \"${srcdir}\" in\n-                        \".\") newsrcdir=${srcdir} ;; # no -srcdir option.  We're building in place.\n-                        /* | [A-Za-z]:[\\\\/]* ) # absolute path\n-                                newsrcdir=${srcdir}/${cfg_dir}\n-                                srcdiroption=\"--srcdir=${newsrcdir}\"\n-                                ;;\n-                        *) # otherwise relative\n-                                newsrcdir=../${srcdir}/${cfg_dir}\n-                                srcdiroption=\"--srcdir=${newsrcdir}\"\n-                                ;;\n-                        esac\n-\n-\t\t\t# Handle --cache-file=../XXX\n-\t\t\tcase \"${cache_file}\" in\n-\t\t\t\"\") # empty\n-\t\t\t\t;;\n-\t\t\t/* | [A-Za-z]:[\\\\/]* ) # absolute path\n-\t\t\t\tcache_file_option=\"--cache-file=${cache_file}\"\n-\t\t\t\t;;\n-\t\t\t*) # relative path\n-\t\t\t\tcache_file_option=\"--cache-file=../${cache_file}\"\n-\t\t\t\t;;\n-\t\t\tesac\n-\n-### check for guested configure, otherwise fix possibly relative progname\n-                        if [ -f ${newsrcdir}/configure ] ; then\n-                                recprog=${newsrcdir}/configure\n-                        elif [ -f ${newsrcdir}/configure.in ] ; then\n-                                case \"${progname}\" in\n-                                /* | [A-Za-z]:[\\\\/]* )  recprog=${progname} ;;\n-                                *)                      recprog=../${progname} ;;\n-                                esac\n-\t\t\telse\n-\t\t\t\teval echo No configuration information in ${cfg_dir} ${redirect}\n-\t\t\t\trecprog=\n-                        fi\n-\n-### The recursion line is here.\n-\t\t\tif [ ! -z \"${recprog}\" ] ; then\n-\t                        if eval ${config_shell} ${recprog} ${verbose} ${buildopt} --host=${host_alias} --target=${tgt_alias} \\\n-        \t                        ${prefixoption} ${tmpdiroption} ${exec_prefixoption} \\\n-                \t                ${srcdiroption} ${diroptions} ${program_prefixoption} ${program_suffixoption} ${program_transform_nameoption} ${site_option} ${withoptions} ${withoutoptions} ${enableoptions} ${disableoptions} ${floating_pointoption} ${cache_file_option} ${removing} ${other_options} ${redirect} ; then\n-\t                                true\n-        \t                else\n-\t\t\t\t\techo Configure in `${PWDCMD-pwd}` failed, exiting. 1>&2\n-                \t                exit 1\n-                        \tfi\n-\t\t\tfi\n+case \"${norecursion}\" in\n+  \"\") arguments=\"${arguments} --norecursion\" ;;\n+  *) ;;\n+esac\n \n-                        cd ${POPDIR}\n-                fi\n-        done\n+echo \"#!/bin/sh\n+# ${NO_EDIT}\n+# This directory was configured as follows:\n+${progname}\" ${arguments}  \"\n+# ${using}\" > ./config.new\n+chmod a+x ./config.new\n+if [ -r ./config.back ] ; then\n+  mv -f ./config.back ./config.status\n fi\n+${config_shell} ${moveifchange} ./config.new ./config.status\n \n # Perform the same cleanup as the trap handler, minus the \"exit 1\" of course,\n # and reset the trap handler."}, {"sha": "6969311c015df462806509aaec3d7fc00108fa70", "filename": "configure.in", "status": "modified", "additions": 206, "deletions": 37, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -33,23 +33,56 @@\n \n ##############################################################################\n \n+extra_host_args=\n+# Define the trigger file to make sure configure will re-run whenever\n+# the gcc version number changes.\n+if [ \"${with_gcc_version_trigger+set}\" = set ]; then\n+    gcc_version_trigger=\"$with_gcc_version_trigger\"\n+    gcc_version=`grep version_string ${with_gcc_version_trigger} | sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/'`\n+else\n+    # If gcc's sources are available, define the trigger file.\n+    if [ -f ${topsrcdir}/gcc/version.c ] ; then\n+\tgcc_version_trigger=${topsrcdir}/gcc/version.c\n+\tgcc_version=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/'`\n+\tcase \"$arguments\" in\n+\t  *--with-gcc-version-trigger=$gcc_version_trigger* )\n+\t    ;;\n+\t  * )\n+\t    # Add to all subconfigure arguments: build, host, and target.\n+\t    arguments=\"--with-gcc-version-trigger=$gcc_version_trigger $arguments\"\n+\t    ;;\n+\tesac\n+\t# This will be redundant when we start all subconfigures from the Makefile.\n+\textra_host_args=\"--with-gcc-version-trigger=$gcc_version_trigger $extra_host_args\"\n+    fi\n+fi\n+\n ### To add a new directory to the tree, first choose whether it is a target\n ### or a host dependent tool.  Then put it into the appropriate list\n-### (library or tools, host or target), doing a dependency sort.  For\n-### example, gdb requires that byacc (or bison) be built first, so it is in\n-### the ${host_tools} list after byacc and bison.  \n+### (library or tools, host or target), doing a dependency sort.\n+\n+# Subdirs will be configured in the order listed in build_configdirs, \n+# configdirs, or target_configdirs; see the serialization section below.\n+\n+# Dependency sorting is only needed when *configuration* must be done in \n+# a particular order.  In all cases a dependency should be specified in \n+# the Makefile, whether or not it's implicitly specified here.\n \n+# Double entries in build_configdirs, configdirs, or target_configdirs may\n+# cause circular dependencies and break everything horribly.\n \n # these libraries are used by various programs built for the host environment\n #\n-host_libs=\"intl mmalloc libiberty opcodes bfd readline db tcl tk tclX itcl tix libgui zlib\"\n+host_libs=\"intl mmalloc libiberty opcodes bfd readline db tcl tk itcl tix libgui zlib\"\n \n libstdcxx_version=\"target-libstdc++-v3\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n-host_tools=\"texinfo byacc flex bison binutils ld gas gcc sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool grep diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils snavigator libtool gettext zip fastjar\"\n+# binutils, gas and ld appear in that order because it makes sense to run\n+# \"make check\" in that particular order.\n+host_tools=\"texinfo byacc flex bison binutils gas ld gcc sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool grep diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils snavigator gettext zip fastjar\"\n \n # libgcj represents the runtime libraries only used by gcj.\n libgcj=\"target-libffi \\\n@@ -197,12 +230,8 @@ esac\n # Configure extra directories which are host specific\n \n case \"${host}\" in\n-  i[3456]86-*-go32*)\n-    configdirs=\"$configdirs dosrel\" ;;\n-  i[3456]86-*-mingw32*)\n-    configdirs=\"$configdirs dosrel\" ;;\n   *-cygwin*)\n-    configdirs=\"$configdirs libtermcap dosrel\" ;;\n+    configdirs=\"$configdirs libtermcap\" ;;\n esac\n \n # Remove more programs from consideration, based on the host or \n@@ -855,13 +884,6 @@ case \"$host\" in\n   *msdosdjgpp*)\n     enable_gdbtk=no ;;\n esac\n-# Determine whether gdb needs tk/tcl or not.\n-case \"$enable_gdbtk\" in\n-  no)\n-    GDB_TK=\"\" ;;\n-  *)\n-    GDB_TK=\"all-tcl all-tk all-itcl all-tix all-libgui\" ;;\n-esac\n \n copy_dirs=\n \n@@ -1121,10 +1143,9 @@ if test -n \"${host_makefile_frag}\" ; then\n   host_makefile_frag=mh-frag\n fi\n \n+extra_arflags_for_target=\n+extra_nmflags_for_target=\n case \"${target}\" in\n-  v810*)\n-    target_makefile_frag=\"config/mt-v810\"\n-    ;;\n   i[3456]86-*-netware*)\n     target_makefile_frag=\"config/mt-netware\"\n     ;;\n@@ -1135,7 +1156,11 @@ case \"${target}\" in\n     target_makefile_frag=\"config/mt-linux\"\n     ;;\n   *-*-aix4.[3456789]* | *-*-aix[56789].*)\n-    target_makefile_frag=\"config/mt-aix43\"\n+    # nm and ar from AIX 4.3 and above require -X32_64 flag to all ar and nm \n+    # commands to handle both 32-bit and 64-bit objects.  These flags are\n+    # harmless if we're using GNU nm or ar.\n+    extra_arflags_for_target=\" -X32_64\"\n+    extra_nmflags_for_target=\" -B -X32_64\"\n     ;;\n   mips*-*-pe | sh*-*-pe | *arm-wince-pe)\n     target_makefile_frag=\"config/mt-wince\"\n@@ -1197,21 +1222,21 @@ fi\n if test x${use_gnu_as} = x &&\n    echo \" ${configdirs} \" | grep \" gas \" > /dev/null 2>&1 ; then\n   with_gnu_as=yes\n-  withoptions=\"$withoptions --with-gnu-as\"\n+  extra_host_args=\"$extra_host_args --with-gnu-as\"\n fi\n \n if test x${use_gnu_ld} = x &&\n    echo \" ${configdirs} \" | grep \" ld \" > /dev/null 2>&1 ; then\n   with_gnu_ld=yes\n-  withoptions=\"$withoptions --with-gnu-ld\"\n+  extra_host_args=\"$extra_host_args --with-gnu-ld\"\n fi\n \n-# If using newlib, add --with-newlib to the withoptions so that gcc/configure\n+# If using newlib, add --with-newlib to the extra_host_args so that gcc/configure\n # can detect this case.\n \n if test x${with_newlib} != xno && echo \" ${target_configdirs} \" | grep \" target-newlib \" > /dev/null 2>&1 ; then\n   with_newlib=yes\n-  withoptions=\"$withoptions --with-newlib\"\n+  extra_host_args=\"$extra_host_args --with-newlib\"\n fi\n \n # We default to --with-shared on platforms where -fpic is meaningless.\n@@ -1238,13 +1263,13 @@ if test x${with_stabs} = x ; then\n   case \"${target}\" in\n   mips*-*-irix6*o32)\n     with_stabs=yes;\n-    withoptions=\"${withoptions} --with-stabs\"\n+    extra_host_args=\"${extra_host_args} --with-stabs\"\n     ;;\n   mips*-*-irix6*)\n     ;;\n   mips*-*-* | alpha*-*-osf*)\n     with_stabs=yes;\n-    withoptions=\"${withoptions} --with-stabs\"\n+    extra_host_args=\"${extra_host_args} --with-stabs\"\n     ;;\n   esac\n fi\n@@ -1253,10 +1278,13 @@ fi\n # them automatically.\n case \"${host}\" in\n   hppa*64*-*-hpux11*)\t\n-    withoptions=\"$withoptions -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include\"\n+    extra_host_args=\"$extra_host_args -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include\"\n     ;;\n esac\n \n+# This will go away when we start subconfigures from the Makefile.\n+withoptions=\"${withoptions} ${extra_host_args}\"\n+\n # If we aren't going to be using gcc, see if we can extract a definition\n # of CC from the fragment.\n # Actually, use the 'pre-extracted' version above.\n@@ -1348,6 +1376,107 @@ sed -e \"s/@RPATH_ENVVAR@/${RPATH_ENVVAR}/\" Makefile > Makefile.tem\n rm -f Makefile\n mv -f Makefile.tem Makefile\n \n+# Record target_configdirs and the configure arguments for target and\n+# build configuration in Makefile.\n+target_configdirs=`echo \"${target_configdirs}\" | sed -e 's/target-//g'`\n+\n+# This is the final value for target_configdirs.  configdirs already\n+# has its final value.  It's time to create some lists of valid targets.\n+\n+all_build_modules=\n+configure_build_modules=\n+# Only make build modules if build != host.\n+# This should be done more generally, but at the moment it doesn't matter.\n+if test ${host_alias} != ${build_alias} ; then\n+  all_build_modules=all-build-libiberty\n+  configure_build_modules=configure-build-libiberty\n+fi\n+\n+all_host_modules=\n+check_host_modules=\n+install_host_modules=\n+configure_host_modules=\n+for module in ${configdirs} ; do\n+  all_host_modules=\"${all_host_modules} all-${module}\"\n+  check_host_modules=\"${check_host_modules} check-${module}\"\n+  install_host_modules=\"${install_host_modules} install-${module}\"\n+  configure_host_modules=\"${configure_host_modules} configure-${module}\"\n+done\n+install_host_modules_nogcc=`echo \"${install_host_modules}\" | sed -e 's/install-gcc//g'`\n+\n+all_target_modules=\n+check_target_modules=\n+install_target_modules=\n+configure_target_modules=\n+for module in ${target_configdirs} ; do\n+  all_target_modules=\"${all_target_modules} all-target-${module}\"\n+  check_target_modules=\"${check_target_modules} check-target-${module}\"\n+  install_target_modules=\"${install_target_modules} install-target-${module}\"\n+  configure_target_modules=\"${configure_target_modules} configure-target-${module}\"\n+done\n+\n+# Determine whether gdb needs tk/tcl or not.\n+# Use 'maybe' since enable_gdbtk might be true even if tk isn't available\n+# and in that case we want gdb to be built without tk.  Ugh!\n+# In fact I believe gdb is the *only* package directly dependent on tk,\n+# so we should be able to put the 'maybe's in unconditionally and\n+# leave out the maybe dependencies when enable_gdbtk is false.  I'm not\n+# 100% sure that that's safe though.\n+case \"$enable_gdbtk\" in\n+  no)\n+    GDB_TK=\"\" ;;\n+  *)\n+    GDB_TK=\"maybe-all-tcl maybe-all-tk maybe-all-itcl maybe-all-tix maybe-all-libgui\" ;;\n+esac\n+\n+# Create the 'maybe dependencies'.  This uses a temporary file.\n+rm -f maybedep.tmp\n+for item in ${all_build_modules} ${all_host_modules} ${all_target_modules} \\\n+\t${install_host_modules} ${install_target_modules} \\\n+\t${configure_build_modules} ${configure_host_modules} ${configure_target_modules} \\\n+\t; do\n+  echo \"maybe-${item}: ${item}\" >> maybedep.tmp\n+done\n+sed -e '/@maybe_dependencies@/r maybedep.tmp' \\\n+    -e 's/@maybe_dependencies@//' Makefile > Makefile.tem\n+rm -f Makefile\n+mv -f Makefile.tem Makefile\n+rm -f maybedep.tmp\n+\n+# Create the serialization dependencies.  This uses a temporary file.\n+\n+# These force 'configure's to be done one at a time, to avoid problems\n+# with contention over a shared config.cache.\n+rm -f serdep.tmp\n+olditem=\n+for item in ${build_configdirs} ; do\n+  case ${olditem} in\n+    \"\") ;;\n+    *) echo \"\\$(BUILD_SUBDIR)/${item}/Makefile: \\$(BUILD_SUBDIR)/${olditem}/Makefile\" >> serdep.tmp ;;\n+  esac\n+  olditem=${item}\n+done\n+olditem=\n+for item in ${configdirs} ; do\n+  case ${olditem} in\n+    \"\") ;;\n+    *) echo \"${item}/Makefile: ${olditem}/Makefile\" >> serdep.tmp ;;\n+  esac\n+  olditem=${item}\n+done\n+olditem=\n+for item in ${target_configdirs} ; do\n+  case ${olditem} in\n+    \"\") ;;\n+    *) echo \"\\$(TARGET_SUBDIR)/${item}/Makefile: \\$(TARGET_SUBDIR)/${olditem}/Makefile\" >> serdep.tmp ;;\n+  esac\n+  olditem=${item}\n+done\n+sed -e '/@serialization_dependencies@/r serdep.tmp' \\\n+    -e 's/@serialization_dependencies@//' Makefile > Makefile.tem\n+rm -f Makefile\n+mv -f Makefile.tem Makefile\n+rm -f serdep.tmp\n \n # Base args.  Strip norecursion, cache-file, srcdir, host, build, target.\n # These are the ones we might not want to pass down to subconfigures.\n@@ -1364,9 +1493,18 @@ baseargs=`echo \"${arguments}\" | \\\n # desired.\n buildargs=\"--cache-file=../config.cache --build=${build_alias} --host=${build_alias} ${baseargs}\"\n \n-# Record target_configdirs and the configure arguments for target and\n-# build configuration in Makefile.\n-target_configdirs=`echo \"${target_configdirs}\" | sed -e 's/target-//g'`\n+# For host modules, accept cache file option, or specification as blank.\n+case \"${cache_file}\" in\n+\"\") # empty\n+  cache_file_option=\"\" ;;\n+/* | [A-Za-z]:[\\\\/]* ) # absolute path\n+  cache_file_option=\"--cache-file=${cache_file}\" ;;\n+*) # relative path\n+  cache_file_option=\"--cache-file=../${cache_file}\" ;;\n+esac\n+\n+hostargs=\"${cache_file_option} ${buildopt} --host=${host_alias} --target=${target_alias} ${extra_host_args} ${baseargs}\"\n+\n targargs=${baseargs}\n \n # Passing a --with-cross-host argument lets the target libraries know\n@@ -1518,25 +1656,37 @@ case $GCJ_FOR_TARGET in\n esac\n \n # Don't use libstdc++-v3's flags to configure/build itself.\n-libstdcxx_flags='`case $$dir in libstdc++-v3 | libjava) ;; *) test ! -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/testsuite_flags || $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/testsuite_flags --build-includes;; esac` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n+libstdcxx_flags='`test ! -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/testsuite_flags || $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/testsuite_flags --build-includes` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n+raw_libstdcxx_flags=' -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n \n if test \"x${CXX_FOR_TARGET+set}\" = xset; then\n   :\n elif test -d ${srcdir}/gcc; then\n   # We add -shared-libgcc to CXX_FOR_TARGET whenever we use xgcc instead\n   # of g++ for linking C++ or Java, because g++ has -shared-libgcc by\n   # default whereas gcc does not.\n-  CXX_FOR_TARGET='$$r/gcc/`case $$dir in libstdc++-v3 | libjava) echo xgcc -shared-libgcc ;; *) echo g++ ;; esac` -B$$r/gcc/ -nostdinc++ '$libstdcxx_flags\n+  # RAW_CXX_FOR_TARGET is for linking C++ or java; CXX_FOR_TARGET is for\n+  # all other cases.\n+  CXX_FOR_TARGET='$$r/gcc/g++ -B$$r/gcc/ -nostdinc++ '$libstdcxx_flags\n+  RAW_CXX_FOR_TARGET='$$r/gcc/xgcc -shared-libgcc -B$$r/gcc/ -nostdinc++ '$raw_libstdcxx_flags\n elif test \"$host\" = \"$target\"; then\n   CXX_FOR_TARGET='$(CXX)'\n+  RAW_CXX_FOR_TARGET=${CXX_FOR_TARGET}\n else\n   CXX_FOR_TARGET=`echo c++ | sed -e 's/x/x/' ${program_transform_name}`\n+  RAW_CXX_FOR_TARGET=${CXX_FOR_TARGET}\n fi\n case $CXX_FOR_TARGET in\n *' $(FLAGS_FOR_TARGET)') ;;\n *) CXX_FOR_TARGET=$CXX_FOR_TARGET' $(FLAGS_FOR_TARGET)' ;;\n esac\n+case $RAW_CXX_FOR_TARGET in\n+*' $(FLAGS_FOR_TARGET)') ;;\n+*) RAW_CXX_FOR_TARGET=$RAW_CXX_FOR_TARGET' $(FLAGS_FOR_TARGET)' ;;\n+esac\n+\n qCXX_FOR_TARGET=`echo \"$CXX_FOR_TARGET\" | sed 's,[&%],\\\\\\&,g'`\n+qRAW_CXX_FOR_TARGET=`echo \"$RAW_CXX_FOR_TARGET\" | sed 's,[&%],\\\\\\&,g'`\n \n # We want to defer the evaluation of `cmd`s and shell variables in\n # CXX_FOR_TARGET when recursing in the top-level Makefile, such as for\n@@ -1545,27 +1695,46 @@ qCXX_FOR_TARGET=`echo \"$CXX_FOR_TARGET\" | sed 's,[&%],\\\\\\&,g'`\n # can be expanded by the nested make as shell variables, not as make\n # macros.\n qqCXX_FOR_TARGET=`echo \"$qCXX_FOR_TARGET\" | sed -e 's,[$][$],$$$$,g'`\n+qqRAW_CXX_FOR_TARGET=`echo \"$qRAW_CXX_FOR_TARGET\" | sed -e 's,[$][$],$$$$,g'`\n+\n+# BASE_CC_FOR_TARGET is the actual program file of CC_FOR_TARGET,\n+# for use in dependencies.  Replace $$r with a relative\n+# path if it's present.\n+set dummy $CC_FOR_TARGET; cc_for_target_first_word=$2\n+BASE_CC_FOR_TARGET=`echo \"$cc_for_target_first_word\" | sed -e 's,[$][$]r,.,'`\n \n sedtemp=sed.$$\n cat >$sedtemp <<EOF\n+s%@GDB_TK@%${GDB_TK}%\n+s%@configure_build_modules@%${configure_build_modules}%\n+s%@all_build_modules@%${all_build_modules}%\n+s%@configure_host_modules@%${configure_host_modules}%\n+s%@all_host_modules@%${all_host_modules}%\n+s%@check_host_modules@%${check_host_modules}%\n+s%@install_host_modules@%${install_host_modules}%\n+s%@install_host_modules_nogcc@%${install_host_modules_nogcc}%\n+s%@configure_target_modules@%${configure_target_modules}%\n+s%@all_target_modules@%${all_target_modules}%\n+s%@check_target_modules@%${check_target_modules}%\n+s%@install_target_modules@%${install_target_modules}%\n s:@target_configdirs@:${target_configdirs}:\n s%@target_configargs@%${targargs}%\n s%@FLAGS_FOR_TARGET@%${FLAGS_FOR_TARGET}%\n s%@CC_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${CC_FOR_TARGET}%\n+s%@BASE_CC_FOR_TARGET@%${BASE_CC_FOR_TARGET}%\n s%@GCJ_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${GCJ_FOR_TARGET}%\n s%@CXX_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${qCXX_FOR_TARGET}%\n+s%@RAW_CXX_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${qRAW_CXX_FOR_TARGET}%\n s%@CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%\\$(STAGE_CC_WRAPPER) ${qqCXX_FOR_TARGET}%\n+s%@RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%\\$(STAGE_CC_WRAPPER) ${qqRAW_CXX_FOR_TARGET}%\n s%@target_subdir@%${target_subdir}%\n s%@build_subdir@%${build_subdir}%\n s%@build_configargs@%${buildargs}%\n s%@gxx_include_dir@%${gxx_include_dir}%\n+s%@host_configargs@%${hostargs}%\n EOF\n sed -f $sedtemp Makefile > Makefile.tem\n rm -f Makefile $sedtemp\n mv -f Makefile.tem Makefile\n \n #\n-# Local Variables:\n-# fill-column: 131\n-# End:\n-#"}, {"sha": "c5f7da03029458bcaf6bdab9e51c15e21102e942", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,3 +1,7 @@\n+2002-11-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gthr_supp_vxw_5x.c: New file.\n+\n 2002-10-21  Richard Henderson  <rth@redhat.com>\n \n \t* paranoia.cc (real_c_float::image): Accomodate size of\n@@ -181,7 +185,7 @@ Mon Jul 23 15:47:19 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-06-14  Albert Chin-A-Young  <china@thewrittenword.com>\n \n-        * contrib/gcc_update: Fix timestamp on gcc/f/intdoc.texi.\n+\t* contrib/gcc_update: Fix timestamp on gcc/f/intdoc.texi.\n \n 2001-06-13  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -513,7 +517,7 @@ Sun Nov 28 00:41:44 1999  William Bader (william@nscs.fast.net)\n \t* test_summary: Replace egcs with gcc.  Update e-mail address.\n \n 1999-07-05  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n-            Jerry Quinn <jquinn@nortelnetworks.com>\n+\t    Jerry Quinn <jquinn@nortelnetworks.com>\n \n \t* egcs_update (touch_files, apply_patch): New functions.\n \tUse them.  New command-line option --patch.  Split test of local\n@@ -668,7 +672,7 @@ Wed Aug 12 19:59:36 1998  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \t* egcs_update: Assigned copyright to FSF.\n \n Tue Aug 11 17:55:53 1998  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n-                          Alexandre Oliva  <oliva@dcc.unicamp.br>\n+\t\t\t  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* egcs_update: New switch --nostdflags and documentation\n \tenhancements."}, {"sha": "6ce288f3eb3c7cc67aa5ce0b1d61a2f386971e9c", "filename": "contrib/gthr_supp_vxw_5x.c", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/contrib%2Fgthr_supp_vxw_5x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/contrib%2Fgthr_supp_vxw_5x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgthr_supp_vxw_5x.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -0,0 +1,92 @@\n+/* Kernel-side additional module for the VxWorks threading support\n+   logic for GCC.  Written 2002 by Zack Weinberg.\n+\n+   This file is distributed with GCC, but it is not part of GCC.\n+   The contents of this file are in the public domain.  */\n+\n+/* If you are using the Tornado IDE, copy this file to\n+   $WIND_BASE/target/config/comps/src/gthread_supp.c.  Then create a\n+   file named 10comp_gthread_supp.cdf in target/config/comps/vxWorks\n+   with the following contents:\n+\n+   Component INCLUDE_GCC_GTHREAD {\n+      NAME                GCC 3.x gthread support (required by C++)\n+      CONFIGLETTES        gthread_supp.c\n+      REQUIRES            INCLUDE_CPLUS\n+      INCLUDE_WHEN        INCLUDE_CPLUS\n+      _FOLDER             FOLDER_CPLUS\n+   }\n+\n+   If you are using command line builds, instead copy this file to\n+   $WIND_BASE/target/src/config/gthread_supp.c, and add the following\n+   block to target/src/config/usrExtra.c:\n+\n+   #ifdef INCLUDE_CPLUS\n+   #include \"../../src/config/gthread_supp.c\"\n+   #endif\n+\n+   You should now be able to rebuild your application using GCC 3.x.  */\n+\n+#include <vxWorks.h>\n+#include <taskLib.h>\n+\n+/* This file provides these routines:  */\n+extern void *__gthread_get_tsd_data (WIND_TCB *tcb);\n+extern void __gthread_set_tsd_data (WIND_TCB *tcb, void *data);\n+\n+extern void __gthread_enter_tsd_dtor_context (WIND_TCB *tcb);\n+extern void __gthread_leave_tsd_dtor_context (WIND_TCB *tcb);\n+\n+/* Set and retrieve the TSD data block for the task TCB.\n+\n+   Possible choices for TSD_SLOT are:\n+     reserved1\n+     reserved2\n+     spare1\n+     spare2\n+     spare3\n+     spare4\n+   (these are all fields of the TCB structure; all have type 'int').\n+\n+   If you find that the slot chosen by default is already used for\n+   something else, simply change the #define below and recompile this\n+   file.  No other file should reference TSD_SLOT directly.  */\n+\n+/* WARNING: This code is not 64-bit clean (it assumes that a pointer\n+   can be held in an 'int' without truncation).  As much of the rest\n+   of VxWorks also makes this assumption, we can't really avoid it.  */\n+\n+#define TSD_SLOT reserved1\n+\n+void *\n+__gthread_get_tsd_data (WIND_TCB *tcb)\n+{\n+  return (void *) (tcb->TSD_SLOT);\n+}\n+\n+void\n+__gthread_set_tsd_data (WIND_TCB *tcb, void *data)\n+{\n+  tcb->TSD_SLOT = (int) data;\n+}\n+\n+/* Enter and leave \"TSD destructor context\".  This is defined as a\n+   state in which it is safe to call free() from a task delete hook\n+   on a memory block allocated by the task being deleted.\n+   For VxWorks 5.x, nothing needs to be done.  */\n+\n+#if __GNUC__ >= 2\n+#define UNUSED __attribute__((unused))\n+#else\n+#define UNUSED\n+#endif\n+\n+void\n+__gthread_enter_tsd_dtor_context (WIND_TCB *tcb UNUSED)\n+{\n+}\n+\n+void\n+__gthread_leave_tsd_dtor_context (WIND_TCB *tcb UNUSED)\n+{\n+}"}, {"sha": "2ceb418fc8b902dd6396f9998e280787861239a5", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -2,6 +2,18 @@\n \n \t* fastjar.texi (jar @direntry, grepjar @direntry): Add (fastjar).\n \n+2002-11-23  H.J. Lu <hjl@gnu.org>\n+\n+\t* acinclude.m4: Include ../config/accross.m4.\n+\t(gcc_AC_COMPILE_CHECK_SIZEOF): Removed.\n+\t(gcc_AC_EXAMINE_OBJECT): Removed.\n+\t(gcc_AC_C_COMPILE_ENDIAN): Removed.\n+\t* aclocal.m4; Rebuild.\n+\n+\t* configure.in: Replace AC_C_BIGENDIAN with AC_C_BIGENDIAN_CROSS.\n+\tReplace AC_CHECK_SIZEOF with AC_COMPILE_CHECK_SIZEOF.\n+\t* configure: Likewise.\n+\n 2002-11-21  Ranjit Mathew <rmathew@hotmail.com>\n \n \t* jartool.c (extract_jar): Use \"open\" with O_BINARY instead of\n@@ -31,6 +43,11 @@\n \n \t* jartool.c: Use mode 0666 when opening new file.\n \n+2002-09-16  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* jargrep.c (chk_wrd): Remove unused variable(s).\n+\t* jartool.c (main, create_central_header, list_jar): Likewise.\n+\n 2002-10-15  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* configure, config.h.in: Rebuilt.\n@@ -153,7 +170,7 @@\n \t* aclocal.m4: Regenerated.\n \t* stamp-h.in: Regenerated.\n \t* jargrep.c: Eliminate some signed/unsigned and default\n-\tuninitialized warnings. Use HAVE_STDLIB_H instead of \n+\tuninitialized warnings. Use HAVE_STDLIB_H instead of\n \tSTDC_HEADERS macro.\n \t* jartool.c: Likewise.\n \t* compress.c: Likewise.\n@@ -195,7 +212,7 @@\n \n 2001-05-15  Per Bothner  <per@bothner.com>\n \n-        * Makefile.am (bin_PROGRAMS):  Renamed from \"fastjar\" to \"jar\".\n+\t* Makefile.am (bin_PROGRAMS):  Renamed from \"fastjar\" to \"jar\".\n \n 2001-05-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n@@ -213,7 +230,7 @@\n \t* jartool.c (MAXPATHLEN): Provide if not defined.\n \n 2000-12-15  Tom Tromey  <tromey@redhat.com>\n-            Kelley Cook <kelleycook@home.com>\n+\t    Kelley Cook <kelleycook@home.com>\n \n \t* jargrep.c: Include getopt.h if it exists.\n \t(optind): Declare."}, {"sha": "67c6559300c5243b8ddf1df12171f01a72eb14df", "filename": "fastjar/acinclude.m4", "status": "modified", "additions": 1, "deletions": 111, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Facinclude.m4?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,114 +1,4 @@\n-\n-dnl Host type sizes probe.\n-dnl By Kaveh R. Ghazi.  One typo fixed since.\n-dnl\n-AC_DEFUN([gcc_AC_COMPILE_CHECK_SIZEOF],\n-[changequote(<<, >>)dnl\n-dnl The name to #define.\n-define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl\n-dnl The cache variable name.\n-define(<<AC_CV_NAME>>, translit(ac_cv_sizeof_$1, [ *], [_p]))dnl\n-changequote([, ])dnl\n-AC_MSG_CHECKING(size of $1)\n-AC_CACHE_VAL(AC_CV_NAME,\n-[for ac_size in 4 8 1 2 16 $3 ; do # List sizes in rough order of prevalence.\n-  AC_TRY_COMPILE([#include \"confdefs.h\"\n-#include <sys/types.h>\n-$2\n-], [switch (0) case 0: case (sizeof ($1) == $ac_size):;], AC_CV_NAME=$ac_size)\n-  if test x$AC_CV_NAME != x ; then break; fi\n-done\n-])\n-if test x$AC_CV_NAME = x ; then\n-  AC_MSG_ERROR([cannot determine a size for $1])\n-fi\n-AC_MSG_RESULT($AC_CV_NAME)\n-AC_DEFINE_UNQUOTED(AC_TYPE_NAME, $AC_CV_NAME, [The number of bytes in type $1])\n-undefine([AC_TYPE_NAME])dnl\n-undefine([AC_CV_NAME])dnl\n-])\n-\n-dnl Utility macro used by next two tests.\n-dnl AC_EXAMINE_OBJECT(C source code,\n-dnl\tcommands examining object file,\n-dnl\t[commands to run if compile failed]):\n-dnl\n-dnl Compile the source code to an object file; then convert it into a\n-dnl printable representation.  All unprintable characters and\n-dnl asterisks (*) are replaced by dots (.).  All white space is\n-dnl deleted.  Newlines (ASCII 0x10) in the input are preserved in the\n-dnl output, but runs of newlines are compressed to a single newline.\n-dnl Finally, line breaks are forcibly inserted so that no line is\n-dnl longer than 80 columns and the file ends with a newline.  The\n-dnl result of all this processing is in the file conftest.dmp, which\n-dnl may be examined by the commands in the second argument.\n-dnl\n-AC_DEFUN([gcc_AC_EXAMINE_OBJECT],\n-[AC_LANG_SAVE\n-AC_LANG_C\n-dnl Next bit cribbed from AC_TRY_COMPILE.\n-cat > conftest.$ac_ext <<EOF\n-[#line __oline__ \"configure\"\n-#include \"confdefs.h\"\n-$1\n-]EOF\n-if AC_TRY_EVAL(ac_compile); then\n-  od -c conftest.o |\n-    sed ['s/^[0-7]*[ \t]*/ /\n-\t  s/\\*/./g\n-\t  s/ \\\\n/*/g\n-\t  s/ [0-9][0-9][0-9]/./g\n-\t  s/  \\\\[^ ]/./g'] |\n-    tr -d '\n- ' | tr -s '*' '\n-' | fold | sed '$a\\\n-' > conftest.dmp\n-  $2\n-ifelse($3, , , else\n-  $3\n-)dnl\n-fi\n-rm -rf conftest*\n-AC_LANG_RESTORE])\n-\n-dnl Host endianness probe.\n-dnl Differs from AC_C_BIGENDIAN in that it does not require\n-dnl running a program on the host.\n-dnl\n-AC_DEFUN([fastjar_AC_COMPILE_C_BIGENDIAN],\n-[AC_CACHE_CHECK(byte ordering, ac_cv_c_compile_endian,\n-[ac_cv_c_compile_endian=unknown\n-gcc_AC_EXAMINE_OBJECT([\n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-/* This structure must have no internal padding.  */\n-  struct {\n-    char prefix[sizeof \"\\nendian:\" - 1];\n-    short word;\n-    char postfix[2];\n- } tester = {\n-    \"\\nendian:\",\n-#if SIZEOF_SHORT == 4\n-    ('A' << (CHAR_BIT * 3)) | ('B' << (CHAR_BIT * 2)) |\n-#endif\n-    ('A' << CHAR_BIT) | 'B',\n-    'X', '\\n'\n-};],\n- [if   grep 'endian:AB' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=big-endian\n-  elif grep 'endian:BA' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=little-endian\n-  fi])\n-])\n-if test $ac_cv_c_compile_endian = unknown; then\n-  AC_MSG_ERROR([*** unable to determine endianness])\n-elif test $ac_cv_c_compile_endian = big-endian; then\n-  AC_DEFINE(WORDS_BIG_ENDIAN, 1,\n-  [Define if the host machine stores words of multi-word integers in\n-   big-endian order.])\n-fi\n-])\n+sinclude(../config/accross.m4)\n \n dnl Define MKDIR_TAKES_ONE_ARG if mkdir accepts only one argument instead\n dnl of the usual 2."}, {"sha": "d84a6631e718d57be7cb54f0cf24637126f31301", "filename": "fastjar/aclocal.m4", "status": "modified", "additions": 9, "deletions": 119, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Faclocal.m4?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,6 +1,6 @@\n-dnl aclocal.m4 generated automatically by aclocal 1.4\n+dnl aclocal.m4 generated automatically by aclocal 1.4-p5\n \n-dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n dnl This file is free software; the Free Software Foundation\n dnl gives unlimited permission to copy and/or distribute it,\n dnl with or without modifications, as long as this notice is preserved.\n@@ -10,117 +10,7 @@ dnl but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n dnl even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n dnl PARTICULAR PURPOSE.\n \n-\n-dnl Host type sizes probe.\n-dnl By Kaveh R. Ghazi.  One typo fixed since.\n-dnl\n-AC_DEFUN([gcc_AC_COMPILE_CHECK_SIZEOF],\n-[changequote(<<, >>)dnl\n-dnl The name to #define.\n-define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl\n-dnl The cache variable name.\n-define(<<AC_CV_NAME>>, translit(ac_cv_sizeof_$1, [ *], [_p]))dnl\n-changequote([, ])dnl\n-AC_MSG_CHECKING(size of $1)\n-AC_CACHE_VAL(AC_CV_NAME,\n-[for ac_size in 4 8 1 2 16 $3 ; do # List sizes in rough order of prevalence.\n-  AC_TRY_COMPILE([#include \"confdefs.h\"\n-#include <sys/types.h>\n-$2\n-], [switch (0) case 0: case (sizeof ($1) == $ac_size):;], AC_CV_NAME=$ac_size)\n-  if test x$AC_CV_NAME != x ; then break; fi\n-done\n-])\n-if test x$AC_CV_NAME = x ; then\n-  AC_MSG_ERROR([cannot determine a size for $1])\n-fi\n-AC_MSG_RESULT($AC_CV_NAME)\n-AC_DEFINE_UNQUOTED(AC_TYPE_NAME, $AC_CV_NAME, [The number of bytes in type $1])\n-undefine([AC_TYPE_NAME])dnl\n-undefine([AC_CV_NAME])dnl\n-])\n-\n-dnl Utility macro used by next two tests.\n-dnl AC_EXAMINE_OBJECT(C source code,\n-dnl\tcommands examining object file,\n-dnl\t[commands to run if compile failed]):\n-dnl\n-dnl Compile the source code to an object file; then convert it into a\n-dnl printable representation.  All unprintable characters and\n-dnl asterisks (*) are replaced by dots (.).  All white space is\n-dnl deleted.  Newlines (ASCII 0x10) in the input are preserved in the\n-dnl output, but runs of newlines are compressed to a single newline.\n-dnl Finally, line breaks are forcibly inserted so that no line is\n-dnl longer than 80 columns and the file ends with a newline.  The\n-dnl result of all this processing is in the file conftest.dmp, which\n-dnl may be examined by the commands in the second argument.\n-dnl\n-AC_DEFUN([gcc_AC_EXAMINE_OBJECT],\n-[AC_LANG_SAVE\n-AC_LANG_C\n-dnl Next bit cribbed from AC_TRY_COMPILE.\n-cat > conftest.$ac_ext <<EOF\n-[#line __oline__ \"configure\"\n-#include \"confdefs.h\"\n-$1\n-]EOF\n-if AC_TRY_EVAL(ac_compile); then\n-  od -c conftest.o |\n-    sed ['s/^[0-7]*[ \t]*/ /\n-\t  s/\\*/./g\n-\t  s/ \\\\n/*/g\n-\t  s/ [0-9][0-9][0-9]/./g\n-\t  s/  \\\\[^ ]/./g'] |\n-    tr -d '\n- ' | tr -s '*' '\n-' | fold | sed '$a\\\n-' > conftest.dmp\n-  $2\n-ifelse($3, , , else\n-  $3\n-)dnl\n-fi\n-rm -rf conftest*\n-AC_LANG_RESTORE])\n-\n-dnl Host endianness probe.\n-dnl Differs from AC_C_BIGENDIAN in that it does not require\n-dnl running a program on the host.\n-dnl\n-AC_DEFUN([fastjar_AC_COMPILE_C_BIGENDIAN],\n-[AC_CACHE_CHECK(byte ordering, ac_cv_c_compile_endian,\n-[ac_cv_c_compile_endian=unknown\n-gcc_AC_EXAMINE_OBJECT([\n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-/* This structure must have no internal padding.  */\n-  struct {\n-    char prefix[sizeof \"\\nendian:\" - 1];\n-    short word;\n-    char postfix[2];\n- } tester = {\n-    \"\\nendian:\",\n-#if SIZEOF_SHORT == 4\n-    ('A' << (CHAR_BIT * 3)) | ('B' << (CHAR_BIT * 2)) |\n-#endif\n-    ('A' << CHAR_BIT) | 'B',\n-    'X', '\\n'\n-};],\n- [if   grep 'endian:AB' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=big-endian\n-  elif grep 'endian:BA' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=little-endian\n-  fi])\n-])\n-if test $ac_cv_c_compile_endian = unknown; then\n-  AC_MSG_ERROR([*** unable to determine endianness])\n-elif test $ac_cv_c_compile_endian = big-endian; then\n-  AC_DEFINE(WORDS_BIG_ENDIAN, 1,\n-  [Define if the host machine stores words of multi-word integers in\n-   big-endian order.])\n-fi\n-])\n+sinclude(../config/accross.m4)\n \n dnl Define MKDIR_TAKES_ONE_ARG if mkdir accepts only one argument instead\n dnl of the usual 2.\n@@ -153,7 +43,7 @@ fi\n dnl Usage:\n dnl AM_INIT_AUTOMAKE(package,version, [no-define])\n \n-AC_DEFUN(AM_INIT_AUTOMAKE,\n+AC_DEFUN([AM_INIT_AUTOMAKE],\n [AC_REQUIRE([AC_PROG_INSTALL])\n PACKAGE=[$1]\n AC_SUBST(PACKAGE)\n@@ -181,7 +71,7 @@ AC_REQUIRE([AC_PROG_MAKE_SET])])\n # Check to make sure that the build environment is sane.\n #\n \n-AC_DEFUN(AM_SANITY_CHECK,\n+AC_DEFUN([AM_SANITY_CHECK],\n [AC_MSG_CHECKING([whether build environment is sane])\n # Just in case\n sleep 1\n@@ -222,7 +112,7 @@ AC_MSG_RESULT(yes)])\n \n dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)\n dnl The program must properly implement --version.\n-AC_DEFUN(AM_MISSING_PROG,\n+AC_DEFUN([AM_MISSING_PROG],\n [AC_MSG_CHECKING(for working $2)\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n@@ -238,7 +128,7 @@ AC_SUBST($1)])\n \n # Like AC_CONFIG_HEADER, but automatically create stamp file.\n \n-AC_DEFUN(AM_CONFIG_HEADER,\n+AC_DEFUN([AM_CONFIG_HEADER],\n [AC_PREREQ([2.12])\n AC_CONFIG_HEADER([$1])\n dnl When config.status generates a header, we must update the stamp-h file.\n@@ -264,7 +154,7 @@ changequote([,]))])\n \n # serial 1\n \n-AC_DEFUN(AM_MAINTAINER_MODE,\n+AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n   dnl maintainer-mode is disabled by default\n   AC_ARG_ENABLE(maintainer-mode,\n@@ -281,7 +171,7 @@ AC_DEFUN(AM_MAINTAINER_MODE,\n \n # Define a conditional.\n \n-AC_DEFUN(AM_CONDITIONAL,\n+AC_DEFUN([AM_CONDITIONAL],\n [AC_SUBST($1_TRUE)\n AC_SUBST($1_FALSE)\n if $2; then"}, {"sha": "9931c0d4647a0236aa977e56cd1cf923482873ed", "filename": "fastjar/configure", "status": "modified", "additions": 217, "deletions": 165, "changes": 382, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fconfigure?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -33,7 +33,6 @@ program_suffix=NONE\n program_transform_name=s,x,x,\n silent=\n site=\n-sitefile=\n srcdir=\n target=NONE\n verbose=\n@@ -148,7 +147,6 @@ Configuration:\n   --help                  print this message\n   --no-create             do not create output files\n   --quiet, --silent       do not print \\`checking...' messages\n-  --site-file=FILE        use FILE as the site file\n   --version               print the version of autoconf that created configure\n Directory and file names:\n   --prefix=PREFIX         install architecture-independent files in PREFIX\n@@ -319,11 +317,6 @@ EOF\n   -site=* | --site=* | --sit=*)\n     site=\"$ac_optarg\" ;;\n \n-  -site-file | --site-file | --site-fil | --site-fi | --site-f)\n-    ac_prev=sitefile ;;\n-  -site-file=* | --site-file=* | --site-fil=* | --site-fi=* | --site-f=*)\n-    sitefile=\"$ac_optarg\" ;;\n-\n   -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n     ac_prev=srcdir ;;\n   -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n@@ -489,16 +482,12 @@ fi\n srcdir=`echo \"${srcdir}\" | sed 's%\\([^/]\\)/*$%\\1%'`\n \n # Prefer explicitly selected file to automatically selected ones.\n-if test -z \"$sitefile\"; then\n-  if test -z \"$CONFIG_SITE\"; then\n-    if test \"x$prefix\" != xNONE; then\n-      CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n-    else\n-      CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n-    fi\n+if test -z \"$CONFIG_SITE\"; then\n+  if test \"x$prefix\" != xNONE; then\n+    CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n+  else\n+    CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n   fi\n-else\n-  CONFIG_SITE=\"$sitefile\"\n fi\n for ac_site_file in $CONFIG_SITE; do\n   if test -r \"$ac_site_file\"; then\n@@ -568,7 +557,7 @@ ac_configure=$ac_aux_dir/configure # This should be Cygnus configure.\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:572: checking for a BSD compatible install\" >&5\n+echo \"configure:561: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -621,7 +610,7 @@ test -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL_PROGRAM}'\n test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n echo $ac_n \"checking whether build environment is sane\"\"... $ac_c\" 1>&6\n-echo \"configure:625: checking whether build environment is sane\" >&5\n+echo \"configure:614: checking whether build environment is sane\" >&5\n # Just in case\n sleep 1\n echo timestamp > conftestfile\n@@ -678,7 +667,7 @@ test \"$program_suffix\" != NONE &&\n test \"$program_transform_name\" = \"\" && program_transform_name=\"s,x,x,\"\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:682: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:671: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -724,7 +713,7 @@ EOF\n \n missing_dir=`cd $ac_aux_dir && pwd`\n echo $ac_n \"checking for working aclocal\"\"... $ac_c\" 1>&6\n-echo \"configure:728: checking for working aclocal\" >&5\n+echo \"configure:717: checking for working aclocal\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -737,7 +726,7 @@ else\n fi\n \n echo $ac_n \"checking for working autoconf\"\"... $ac_c\" 1>&6\n-echo \"configure:741: checking for working autoconf\" >&5\n+echo \"configure:730: checking for working autoconf\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -750,7 +739,7 @@ else\n fi\n \n echo $ac_n \"checking for working automake\"\"... $ac_c\" 1>&6\n-echo \"configure:754: checking for working automake\" >&5\n+echo \"configure:743: checking for working automake\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -763,7 +752,7 @@ else\n fi\n \n echo $ac_n \"checking for working autoheader\"\"... $ac_c\" 1>&6\n-echo \"configure:767: checking for working autoheader\" >&5\n+echo \"configure:756: checking for working autoheader\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -776,7 +765,7 @@ else\n fi\n \n echo $ac_n \"checking for working makeinfo\"\"... $ac_c\" 1>&6\n-echo \"configure:780: checking for working makeinfo\" >&5\n+echo \"configure:769: checking for working makeinfo\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -796,7 +785,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:800: checking for $ac_word\" >&5\n+echo \"configure:789: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -826,7 +815,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:830: checking for $ac_word\" >&5\n+echo \"configure:819: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -877,7 +866,7 @@ fi\n       # Extract the first word of \"cl\", so it can be a program name with args.\n set dummy cl; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:881: checking for $ac_word\" >&5\n+echo \"configure:870: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -909,7 +898,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:913: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:902: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -920,12 +909,12 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext << EOF\n \n-#line 924 \"configure\"\n+#line 913 \"configure\"\n #include \"confdefs.h\"\n \n main(){return(0);}\n EOF\n-if { (eval echo configure:929: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:918: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -951,12 +940,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:955: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:944: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:960: checking whether we are using GNU C\" >&5\n+echo \"configure:949: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -965,7 +954,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:969: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:958: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -984,7 +973,7 @@ ac_test_CFLAGS=\"${CFLAGS+set}\"\n ac_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\n echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:988: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:977: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1027,7 +1016,7 @@ fi\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:1031: checking for a BSD compatible install\" >&5\n+echo \"configure:1020: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1082,7 +1071,7 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n # Extract the first word of \"rm\", so it can be a program name with args.\n set dummy rm; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1086: checking for $ac_word\" >&5\n+echo \"configure:1075: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_RM'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1118,7 +1107,7 @@ fi\n # Extract the first word of \"cp\", so it can be a program name with args.\n set dummy cp; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1122: checking for $ac_word\" >&5\n+echo \"configure:1111: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_CP'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1154,7 +1143,7 @@ fi\n # Extract the first word of \"strip\", so it can be a program name with args.\n set dummy strip; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1158: checking for $ac_word\" >&5\n+echo \"configure:1147: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_STRIP'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1190,7 +1179,7 @@ fi\n # Extract the first word of \"chmod\", so it can be a program name with args.\n set dummy chmod; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1194: checking for $ac_word\" >&5\n+echo \"configure:1183: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_CHMOD'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1224,12 +1213,12 @@ else\n fi\n \n echo $ac_n \"checking for Cygwin environment\"\"... $ac_c\" 1>&6\n-echo \"configure:1228: checking for Cygwin environment\" >&5\n+echo \"configure:1217: checking for Cygwin environment\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_cygwin'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1233 \"configure\"\n+#line 1222 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1240,7 +1229,7 @@ int main() {\n return __CYGWIN__;\n ; return 0; }\n EOF\n-if { (eval echo configure:1244: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1233: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_cygwin=yes\n else\n@@ -1257,19 +1246,19 @@ echo \"$ac_t\"\"$ac_cv_cygwin\" 1>&6\n CYGWIN=\n test \"$ac_cv_cygwin\" = yes && CYGWIN=yes\n echo $ac_n \"checking for mingw32 environment\"\"... $ac_c\" 1>&6\n-echo \"configure:1261: checking for mingw32 environment\" >&5\n+echo \"configure:1250: checking for mingw32 environment\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_mingw32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1266 \"configure\"\n+#line 1255 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n return __MINGW32__;\n ; return 0; }\n EOF\n-if { (eval echo configure:1273: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1262: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_mingw32=yes\n else\n@@ -1288,7 +1277,7 @@ test \"$ac_cv_mingw32\" = yes && MINGW32=yes\n \n \n echo $ac_n \"checking for executable suffix\"\"... $ac_c\" 1>&6\n-echo \"configure:1292: checking for executable suffix\" >&5\n+echo \"configure:1281: checking for executable suffix\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_exeext'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1298,10 +1287,10 @@ else\n   rm -f conftest*\n   echo 'int main () { return 0; }' > conftest.$ac_ext\n   ac_cv_exeext=\n-  if { (eval echo configure:1302: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n+  if { (eval echo configure:1291: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.c | *.o | *.obj | *.ilk | *.pdb) ;;\n+      *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -1320,7 +1309,7 @@ ac_exeext=$EXEEXT\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:1324: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:1313: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -1353,20 +1342,20 @@ for ac_hdr in dirent.h sys/ndir.h sys/dir.h ndir.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr that defines DIR\"\"... $ac_c\" 1>&6\n-echo \"configure:1357: checking for $ac_hdr that defines DIR\" >&5\n+echo \"configure:1346: checking for $ac_hdr that defines DIR\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_dirent_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1362 \"configure\"\n+#line 1351 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <$ac_hdr>\n int main() {\n DIR *dirp = 0;\n ; return 0; }\n EOF\n-if { (eval echo configure:1370: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1359: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"ac_cv_header_dirent_$ac_safe=yes\"\n else\n@@ -1391,15 +1380,15 @@ done\n # Two versions of opendir et al. are in -ldir and -lx on SCO Xenix.\n if test $ac_header_dirent = dirent.h; then\n echo $ac_n \"checking for opendir in -ldir\"\"... $ac_c\" 1>&6\n-echo \"configure:1395: checking for opendir in -ldir\" >&5\n+echo \"configure:1384: checking for opendir in -ldir\" >&5\n ac_lib_var=`echo dir'_'opendir | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldir  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1403 \"configure\"\n+#line 1392 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1410,7 +1399,7 @@ int main() {\n opendir()\n ; return 0; }\n EOF\n-if { (eval echo configure:1414: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1403: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -1432,15 +1421,15 @@ fi\n \n else\n echo $ac_n \"checking for opendir in -lx\"\"... $ac_c\" 1>&6\n-echo \"configure:1436: checking for opendir in -lx\" >&5\n+echo \"configure:1425: checking for opendir in -lx\" >&5\n ac_lib_var=`echo x'_'opendir | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lx  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1444 \"configure\"\n+#line 1433 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1451,7 +1440,7 @@ int main() {\n opendir()\n ; return 0; }\n EOF\n-if { (eval echo configure:1455: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1444: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -1474,7 +1463,7 @@ fi\n fi\n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:1478: checking how to run the C preprocessor\" >&5\n+echo \"configure:1467: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -1489,13 +1478,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 1493 \"configure\"\n+#line 1482 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1499: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1488: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1506,13 +1495,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1510 \"configure\"\n+#line 1499 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1516: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1505: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1523,13 +1512,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1527 \"configure\"\n+#line 1516 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1533: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1522: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1554,20 +1543,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:1558: checking for ANSI C header files\" >&5\n+echo \"configure:1547: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1563 \"configure\"\n+#line 1552 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1571: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1560: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1584,7 +1573,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 1588 \"configure\"\n+#line 1577 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -1602,7 +1591,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 1606 \"configure\"\n+#line 1595 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -1623,7 +1612,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1627 \"configure\"\n+#line 1616 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -1634,7 +1623,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:1638: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1627: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -1658,20 +1647,20 @@ EOF\n fi\n \n echo $ac_n \"checking whether struct tm is in sys/time.h or time.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1662: checking whether struct tm is in sys/time.h or time.h\" >&5\n+echo \"configure:1651: checking whether struct tm is in sys/time.h or time.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1667 \"configure\"\n+#line 1656 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <time.h>\n int main() {\n struct tm *tp; tp->tm_sec;\n ; return 0; }\n EOF\n-if { (eval echo configure:1675: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1664: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm=time.h\n else\n@@ -1695,17 +1684,17 @@ for ac_hdr in fcntl.h unistd.h sys/param.h stdlib.h limits.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:1699: checking for $ac_hdr\" >&5\n+echo \"configure:1688: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1704 \"configure\"\n+#line 1693 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1709: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1698: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1733,12 +1722,12 @@ done\n \n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1737: checking for off_t\" >&5\n+echo \"configure:1726: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1742 \"configure\"\n+#line 1731 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1766,20 +1755,20 @@ EOF\n fi\n \n echo $ac_n \"checking whether struct tm is in sys/time.h or time.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1770: checking whether struct tm is in sys/time.h or time.h\" >&5\n+echo \"configure:1759: checking whether struct tm is in sys/time.h or time.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1775 \"configure\"\n+#line 1764 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <time.h>\n int main() {\n struct tm *tp; tp->tm_sec;\n ; return 0; }\n EOF\n-if { (eval echo configure:1783: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1772: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm=time.h\n else\n@@ -1802,12 +1791,12 @@ fi\n \n # mkdir takes a single argument on some systems.\n echo $ac_n \"checking if mkdir takes one argument\"\"... $ac_c\" 1>&6\n-echo \"configure:1806: checking if mkdir takes one argument\" >&5\n+echo \"configure:1795: checking if mkdir takes one argument\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_mkdir_takes_one_arg'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1811 \"configure\"\n+#line 1800 \"configure\"\n #include \"confdefs.h\"\n \n #include <sys/types.h>\n@@ -1824,7 +1813,7 @@ int main() {\n mkdir (\"foo\", 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:1828: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1817: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_mkdir_takes_one_arg=no\n else\n@@ -1846,13 +1835,13 @@ fi\n \n \n echo $ac_n \"checking size of char\"\"... $ac_c\" 1>&6\n-echo \"configure:1850: checking size of char\" >&5\n+echo \"configure:1839: checking size of char\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_char'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  for ac_size in 4 8 1 2 16  ; do # List sizes in rough order of prevalence.\n+  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 1856 \"configure\"\n+#line 1845 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -1862,7 +1851,7 @@ int main() {\n switch (0) case 0: case (sizeof (char) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:1866: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1855: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_char=$ac_size\n else\n@@ -1885,13 +1874,13 @@ EOF\n \n \n echo $ac_n \"checking size of short\"\"... $ac_c\" 1>&6\n-echo \"configure:1889: checking size of short\" >&5\n+echo \"configure:1878: checking size of short\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_short'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  for ac_size in 4 8 1 2 16  ; do # List sizes in rough order of prevalence.\n+  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 1895 \"configure\"\n+#line 1884 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -1901,7 +1890,7 @@ int main() {\n switch (0) case 0: case (sizeof (short) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:1905: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1894: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_short=$ac_size\n else\n@@ -1924,13 +1913,13 @@ EOF\n \n \n echo $ac_n \"checking size of int\"\"... $ac_c\" 1>&6\n-echo \"configure:1928: checking size of int\" >&5\n+echo \"configure:1917: checking size of int\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_int'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  for ac_size in 4 8 1 2 16  ; do # List sizes in rough order of prevalence.\n+  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 1934 \"configure\"\n+#line 1923 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -1940,7 +1929,7 @@ int main() {\n switch (0) case 0: case (sizeof (int) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:1944: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1933: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_int=$ac_size\n else\n@@ -1963,13 +1952,13 @@ EOF\n \n \n echo $ac_n \"checking size of long\"\"... $ac_c\" 1>&6\n-echo \"configure:1967: checking size of long\" >&5\n+echo \"configure:1956: checking size of long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  for ac_size in 4 8 1 2 16  ; do # List sizes in rough order of prevalence.\n+  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 1973 \"configure\"\n+#line 1962 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -1979,7 +1968,7 @@ int main() {\n switch (0) case 0: case (sizeof (long) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:1983: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1972: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long=$ac_size\n else\n@@ -2002,13 +1991,13 @@ EOF\n \n \n echo $ac_n \"checking size of long long\"\"... $ac_c\" 1>&6\n-echo \"configure:2006: checking size of long long\" >&5\n+echo \"configure:1995: checking size of long long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  for ac_size in 4 8 1 2 16  ; do # List sizes in rough order of prevalence.\n+  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 2012 \"configure\"\n+#line 2001 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -2018,7 +2007,7 @@ int main() {\n switch (0) case 0: case (sizeof (long long) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:2022: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2011: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long_long=$ac_size\n else\n@@ -2041,77 +2030,140 @@ EOF\n \n \n \n-echo $ac_n \"checking byte ordering\"\"... $ac_c\" 1>&6\n-echo \"configure:2046: checking byte ordering\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_c_compile_endian'+set}'`\\\" = set\"; then\n+echo $ac_n \"checking whether byte ordering is bigendian\"\"... $ac_c\" 1>&6\n+echo \"configure:2035: checking whether byte ordering is bigendian\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_c_bigendian'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  ac_cv_c_compile_endian=unknown\n-\n-ac_ext=c\n-# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'\n-ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'\n-cross_compiling=$ac_cv_prog_cc_cross\n-\n+  ac_cv_c_bigendian=unknown\n+# See if sys/param.h defines the BYTE_ORDER macro.\n cat > conftest.$ac_ext <<EOF\n-#line 2060 \"configure\"\n+#line 2042 \"configure\"\n #include \"confdefs.h\"\n+#include <sys/types.h>\n+#include <sys/param.h>\n+int main() {\n \n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n+#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN\n+ bogus endian macros\n #endif\n-/* This structure must have no internal padding.  */\n-  struct {\n-    char prefix[sizeof \"\\nendian:\" - 1];\n-    short word;\n-    char postfix[2];\n- } tester = {\n-    \"\\nendian:\",\n-#if SIZEOF_SHORT == 4\n-    ('A' << (CHAR_BIT * 3)) | ('B' << (CHAR_BIT * 2)) |\n+; return 0; }\n+EOF\n+if { (eval echo configure:2053: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  # It does; now see whether it defined to BIG_ENDIAN or not.\n+cat > conftest.$ac_ext <<EOF\n+#line 2057 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/types.h>\n+#include <sys/param.h>\n+int main() {\n+\n+#if BYTE_ORDER != BIG_ENDIAN\n+ not big endian\n #endif\n-    ('A' << CHAR_BIT) | 'B',\n-    'X', '\\n'\n-};\n+; return 0; }\n EOF\n-if { (eval echo configure:2080: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  od -c conftest.o |\n-    sed 's/^[0-7]*[ \t]*/ /\n-\t  s/\\*/./g\n-\t  s/ \\\\n/*/g\n-\t  s/ [0-9][0-9][0-9]/./g\n-\t  s/  \\\\[^ ]/./g' |\n-    tr -d '\n- ' | tr -s '*' '\n-' | fold | sed '$a\\\n-' > conftest.dmp\n-  if   grep 'endian:AB' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=big-endian\n-  elif grep 'endian:BA' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=little-endian\n-  fi\n+if { (eval echo configure:2068: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  ac_cv_c_bigendian=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  ac_cv_c_bigendian=no\n+fi\n+rm -f conftest*\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+fi\n+rm -f conftest*\n+if test $ac_cv_c_bigendian = unknown; then\n+if test \"$cross_compiling\" = yes; then\n+   echo $ac_n \"cross-compiling... \" 2>&6 \n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2088 \"configure\"\n+#include \"confdefs.h\"\n+main () {\n+  /* Are we little or big endian?  From Harbison&Steele.  */\n+  union\n+  {\n+    long l;\n+    char c[sizeof (long)];\n+  } u;\n+  u.l = 1;\n+  exit (u.c[sizeof (long) - 1] == 1);\n+}\n+EOF\n+if { (eval echo configure:2101: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+then\n+  ac_cv_c_bigendian=no\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -fr conftest*\n+  ac_cv_c_bigendian=yes\n+fi\n+rm -fr conftest*\n fi\n-rm -rf conftest*\n-ac_ext=c\n-# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'\n-ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'\n-cross_compiling=$ac_cv_prog_cc_cross\n \n+fi\n+fi\n \n+echo \"$ac_t\"\"$ac_cv_c_bigendian\" 1>&6\n+if test $ac_cv_c_bigendian = unknown; then\n+echo $ac_n \"checking to probe for byte ordering\"\"... $ac_c\" 1>&6\n+echo \"configure:2119: checking to probe for byte ordering\" >&5\n+\n+cat >conftest.c <<EOF\n+short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n+short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n+void _ascii() { char* s = (char*) ascii_mm; s = (char*) ascii_ii; }\n+short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n+short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n+void _ebcdic() { char* s = (char*) ebcdic_mm; s = (char*) ebcdic_ii; }\n+int main() { _ascii (); _ebcdic (); return 0; }\n+EOF\n+ if test -f conftest.c ; then\n+     if ${CC-cc} ${CFLAGS} conftest.c -o conftest.o && test -f conftest.o ; then\n+        if test `grep -l BIGenDianSyS conftest.o` ; then\n+           echo $ac_n ' big endian probe OK, ' 1>&6\n+           ac_cv_c_bigendian=yes\n+        fi\n+        if test `grep -l LiTTleEnDian conftest.o` ; then\n+           echo $ac_n ' little endian probe OK, ' 1>&6\n+           if test $ac_cv_c_bigendian = yes ; then\n+            ac_cv_c_bigendian=unknown;\n+           else\n+            ac_cv_c_bigendian=no\n+           fi\n+        fi\n+        echo $ac_n 'guessing bigendian ...  ' >&6\n+     fi\n+  fi\n+echo \"$ac_t\"\"$ac_cv_c_bigendian\" 1>&6\n fi\n+if test $ac_cv_c_bigendian = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define WORDS_BIGENDIAN 1\n+EOF\n \n-echo \"$ac_t\"\"$ac_cv_c_compile_endian\" 1>&6\n-if test $ac_cv_c_compile_endian = unknown; then\n-  { echo \"configure: error: *** unable to determine endianness\" 1>&2; exit 1; }\n-elif test $ac_cv_c_compile_endian = big-endian; then\n   cat >> confdefs.h <<\\EOF\n-#define WORDS_BIG_ENDIAN 1\n+#define HOST_WORDS_BIG_ENDIAN 1\n+EOF\n+\n+  BYTEORDER=4321\n+else\n+  BYTEORDER=1234\n+fi\n+cat >> confdefs.h <<EOF\n+#define BYTEORDER $BYTEORDER\n EOF\n \n+if test $ac_cv_c_bigendian = unknown; then\n+  { echo \"configure: error: unknown endianess - sorry\" 1>&2; exit 1; }\n fi\n \n \n@@ -2128,15 +2180,15 @@ ZINCS=\n use_zlib=maybe\n if test \"$with_system_zlib\" = yes; then\n    echo $ac_n \"checking for deflate in -lz\"\"... $ac_c\" 1>&6\n-echo \"configure:2132: checking for deflate in -lz\" >&5\n+echo \"configure:2184: checking for deflate in -lz\" >&5\n ac_lib_var=`echo z'_'deflate | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lz  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 2140 \"configure\"\n+#line 2192 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -2147,7 +2199,7 @@ int main() {\n deflate()\n ; return 0; }\n EOF\n-if { (eval echo configure:2151: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2203: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -2359,7 +2411,7 @@ cat >> $CONFIG_STATUS <<\\EOF\n \n # Split the substitutions into bite-sized pieces for seds with\n # small command number limits, like on Digital OSF/1 and HP-UX.\n-ac_max_sed_cmds=60 # Maximum number of lines to put in a sed script.\n+ac_max_sed_cmds=90 # Maximum number of lines to put in a sed script.\n ac_file=1 # Number of current file.\n ac_beg=1 # First line for current file.\n ac_end=$ac_max_sed_cmds # Line after last line for current file."}, {"sha": "f9e9223589b638b5a0f519eb2c40ff00eb993158", "filename": "fastjar/configure.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fconfigure.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -34,14 +34,14 @@ AC_STRUCT_TM\n gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG\n \n dnl Check for type-widths\n-gcc_AC_COMPILE_CHECK_SIZEOF(char)\n-gcc_AC_COMPILE_CHECK_SIZEOF(short)\n-gcc_AC_COMPILE_CHECK_SIZEOF(int)\n-gcc_AC_COMPILE_CHECK_SIZEOF(long)\n-gcc_AC_COMPILE_CHECK_SIZEOF(long long)\n+AC_COMPILE_CHECK_SIZEOF(char)\n+AC_COMPILE_CHECK_SIZEOF(short)\n+AC_COMPILE_CHECK_SIZEOF(int)\n+AC_COMPILE_CHECK_SIZEOF(long)\n+AC_COMPILE_CHECK_SIZEOF(long long)\n \n dnl Check byte order\n-fastjar_AC_COMPILE_C_BIGENDIAN\n+AC_C_BIGENDIAN_CROSS\n \n AC_ARG_WITH(system-zlib,\n [  --with-system-zlib      use installed libz])"}, {"sha": "01c04500c5bf332204bcd91c9f506e1742be6e71", "filename": "fastjar/jargrep.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fjargrep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fjargrep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjargrep.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -373,15 +373,14 @@ returns: TRUE if it is a word, FALSE of it is a substring.\n \n static int chk_wrd(regex_t *exp, const char *str) {\n \tint wrd_fnd = FALSE;\n-\tint regflag;\n \tint frnt_ok;\n \tint bck_ok;\n \tconst char *str2;\n \tregmatch_t match;\n \n \tstr2 = str;\n \tfrnt_ok = bck_ok = FALSE;\n-\twhile(!wrd_fnd && !(regflag = regexec(exp, str2, 1, &match, 0))) {\n+\twhile(!wrd_fnd && !regexec(exp, str2, 1, &match, 0)) {\n \t\tif(!match.rm_so && (str2 == str)) frnt_ok = TRUE;\n \t\telse if(!isalnum((unsigned char)str2[match.rm_so - 1])\n \t\t\t&& str2[match.rm_so - 1] != '_')"}, {"sha": "dcca13d1c5ea81d31a22a61ff3ab0f4853fd9e14", "filename": "fastjar/jartool.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -327,7 +327,6 @@ int main(int argc, char **argv){\n   int manifest = TRUE;\n   int opt;\n   \n-  int j;\n   int jarfd = -1;\n   \n   /* These are used to collect file names and `-C' options for the\n@@ -345,8 +344,6 @@ int main(int argc, char **argv){\n   if(argc < 2)\n     usage(argv[0]);\n   \n-  j = strlen(argv[1]);\n-  \n   new_argc = 0;\n   new_argv = (char **) malloc (argc * sizeof (char *));\n \n@@ -1121,13 +1118,10 @@ int create_central_header(int fd){\n   ub1 end_header[22];\n   int start_offset;\n   int dir_size;\n-  int *iheader;\n   int total_in = 0, total_out = 22;\n \n   zipentry *ze;\n \n-  iheader = (int*)header;\n-\n   /* magic number */\n   header[0] = 'P';\n   header[1] = 'K';\n@@ -1551,7 +1545,6 @@ int extract_jar(int fd, char **files, int file_num){\n }\n \n int list_jar(int fd, char **files, int file_num){\n-  int rdamt;\n   ub4 signature;\n   ub4 csize;\n   ub4 usize;\n@@ -1713,7 +1706,7 @@ int list_jar(int fd, char **files, int file_num){\n     init_inflation();\n \n     for(;;){\n-      if((rdamt = pb_read(&pbf, scratch, 4)) != 4){\n+      if(pb_read(&pbf, scratch, 4) != 4){\n         perror(\"read\");\n         break;\n       }\n@@ -1742,7 +1735,7 @@ int list_jar(int fd, char **files, int file_num){\n         break;\n       }\n       \n-      if((rdamt = pb_read(&pbf, (file_header + 4), 26)) != 26){\n+      if(pb_read(&pbf, (file_header + 4), 26) != 26){\n         perror(\"read\");\n         break;\n       }"}, {"sha": "a94df384d1ac8e4338d7d06b875745b08c2f24b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1589, "deletions": 7, "changes": 1596, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -4,6 +4,95 @@ Mon Dec 16 17:20:04 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(EXTRA_CONSTRAINT): Use it.\n \t* sh.md (anddi3): Use 'Z' constraint for alternative 2.\n \n+2002-12-15  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config.gcc (need_64bit_hwint): New variable.\n+\t(alpha*-*-*, x86_64-*-*, ia64-*-*, mips*-*-*, powerpc*-*-*,\n+\tmmix-knuth-mmixware, rs6000*-*-*, sparc64*-*-*, s390*-*-*,\n+\tsh*-*-*, hppa*64*-*-linux, parisc*64*-*-linux, hppa*64*-*-hpux11*,\n+\tsparcv9-*-solaris2*, sparc*-*-solaris2.[789], ultrasparc-*-freebsd*):\n+\tSet it.\n+\t(powerpc*-*-darwin*): Unset it.\n+\t(alpha-*-interix, alpha64-dec-*vms*, i?86-*-interix3*,\n+\ti?86-*-interix*, sparc64-*-openbsd*): Remove references to\n+\tdeleted/nonexistent xm-*.h headers.\n+\t* configure.in: AC_DEFINE NEED_64BIT_HOST_WIDE_INT if the\n+\ttarget set need_64bit_hwint in config.gcc.\n+\t* configure, config.in: Regenerate.\n+\n+\t* hwint.h: Overhaul.  Don't bother trying int for\n+\tHOST_WIDE_INT.  Do try __int64 if long is not enough.  Base\n+\tdecision to force 64-bit HOST_WIDE_INT on\n+\tNEED_64BIT_HOST_WIDE_INT, not (MAX_)LONG_TYPE_SIZE which is\n+\tnot visible at this point.  Don't allow prior definition of\n+\tany macro defined by this file.\n+\n+\t* config/alpha/xm-vms.h: Don't define HOST_WIDE_INT or\n+\tHOST_BITS_PER_WIDE_INT.\n+\t* config/c4x/c4x.h: Adjust redefinition of\n+\tHOST_WIDE_INT_PRINT_HEX to match changes to hwint.h.\n+\t* config/alpha/xm-alpha-interix.h, config/alpha/xm-vms64.h,\n+\tconfig/i386/xm-i386-interix.h: Delete file.\n+\n+2002-12-14  Rodney Brown  <rbrown64@csc.com.au>\n+\t    John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.c (output_millicode_call): Convert ASM_OUTPUT_INTERNAL_LABEL.\n+\t* pa64-hpux.h (ASM_OUTPUT_INTERNAL_LABEL): Delete define.\n+\n+2002-12-14  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* mkconfig.sh: Correct comment.  Add copyright boilerplate.\n+\n+2002-12-14  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/t-darwin, config/arm/t-pe, config/arm/t-strongarm-pe,\n+\tconfig/c4x/t-c4x, config/i370/t-i370, config/i386/t-cygwin,\n+\tconfig/i386/t-interix, config/i960/t-960bare, config/ia64/t-ia64,\n+\tconfig/rs6000/t-rs6000-c-rule, config/sparc/t-sol2,\n+\tconfig/v850/t-v850:  Correct dependencies and normalize\n+\tcompilation commands for files that include coretypes.h and tm.h.\n+\n+\t* config/sparc/gmon-sol2.c: Include tconfig.h and tsystem.h,\n+\tnot config.h and system.h.\n+\n+Sat Dec 14 20:43:41 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (flags_reg_operand):  New function.\n+\t* i386.h (PREDICATE_CODES): Add flags_reg_operand.\n+\t* i386.md (cmov splitter, movqicc): Use new predicate.\n+\n+Sat Dec 14 17:03:17 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movqicc splitter): Fix template.\n+\n+2002-12-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (CALL_EXPR_HAS_RETURN_SLOT_ADDR): New macro.\n+\t* calls.c (expand_call): Handle it.\n+\t* tree-inline.c (struct inline_data): Remove target_exprs field.\n+\t(optimize_inline_calls): Don't initialize it.\n+\t(expand_call_inline): Don't modify it.  Handle\n+\tCALL_EXPR_HAS_RETURN_SLOT_ADDR.\n+\t(declare_return_variable): Take return slot addr.\n+\t* langhooks.h (copy_res_decl_for_inlining): Change target_exprs parm\n+\tto return_slot_addr.\n+\t* langhooks-def.h, langhooks.c: Adjust.\n+\t* explow.c (maybe_set_unchanging): Don't set RTX_UNCHANGING_P for\n+\ta decl with no DECL_INITIAL.\n+\n+\t* expr.c (expand_expr): Don't discard the target of a call which\n+\treturns in memory.\n+\n+2002-12-13  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cppinit.c (path_include): Take an environment variable name.\n+\tTidy up.\n+\t(init_standard_includes): Simplify environment handling, and\n+\tmove to ...\n+\t(cpp_read_main_file): ...here as -nostdinc should not affect\n+\tenvironment variable paths.\n+\n 2002-12-13  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c (output_millicode_call): Correct typo.\n@@ -42,6 +131,11 @@ Fri Dec 13 16:02:27 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/h8300/h8300.md (addhi3_h8300): Remove the last\n \talternative.\n \n+2002-12-12  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* hooks.h (hook_tree_tree_bool_false): Declare\n+\thook_bool_tree_tree_false instead.\n+\n 2002-12-12  Devang Patel  <dpatel@apple.com>\n \n \t* doc/invoke.texi: Document Darwin linker options, -bundle\n@@ -134,6 +228,19 @@ Thu Dec 12 16:24:59 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(\"jump\"): Support PIC-safe out-of-range-for-branch jumps.  Remove\n \tunused code to support indirect jumps.\n \n+2002-12-11  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in (GTFILES): Add $(host_xm_file_list) and\n+\t$(tm_file_list).\n+\n+2002-12-11  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/t-rs6000-c-rule: Add coretypes.h $(TM_H) dependencies.\n+\n+Wed Dec 11 15:20:45 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (cmove splitters): Avoid creation of unnecesary subregs.\n+\n 2002-12-11  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.h (BIGGEST_ALIGNMENT): Change 32-bit value to 64 bits.\n@@ -193,6 +300,27 @@ Wed Dec 11 18:39:52 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* c-common.c (builtin_define_type_max): Handle unsigned\n \ttypes too.\n \n+2002-12-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* haifa-sched.c (rank_for_schedule): Correct style.\n+\n+2002-12-10  Per Bothner  <pbothner@apple.com>\n+\n+\t* cpplib.h (struct cpp_hashnode):  Split a non-portably-signed field\n+\tdirective_index into an unsigned field and a new is_directive field.\n+\t* cppinit.c (mark_named_operators):  Update to set new fields.\n+\t* cpplex.c (_cpp_lex_direct):  Now directive_field is unsigned.\n+\t* cpplib.c [_cpp_handle_directive]:   Test is_directive field.\n+\tNo longer need to subtract 1 from directive_index.\n+\t(_cpp_init_directives):  No longer need to add 1 to directive_index.\n+\t* cpptrad.c (scan_out_logical_line):  Use is_directive field.\n+\n+2002-12-10  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.c (fold_builtin): Remove -funsafe-math-optimizations\n+\tcheck for evaluating sqrt of a constant at compile time.\n+\t* simplify-rtx.c (simplify_unary_operation): Likewise.\n+\n 2002-12-10  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR other/8882\n@@ -202,7 +330,7 @@ Wed Dec 11 18:39:52 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* config/darwin.h(LINK_SPEC): Add darwin specific linker options.\n \t* doc/invoke.texi: Add new \"Darwin Options\" section.\n-\t\n+\n 2002-12-10  Jim Wilson  <wilson@redhat.com>\n \n \t* rs6000.h (RETURN_IN_MEMORY): If ABI_V4, then TFmode is returned in\n@@ -279,7 +407,7 @@ Mon Dec  9 21:33:38 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* stmt.c (expand_return): Ditto.\n \t* expr.c (move_block_from_reg): Ditto.\n \t(copy_blkmode_from_reg): Ditto.\n-\t* expmed.c (store_bit_field): Ditto. \n+\t* expmed.c (store_bit_field): Ditto.\n \n 2002-12-09  Svein E. Seldal  <Svein.Seldal@solidas.com>\n \n@@ -290,6 +418,40 @@ Sun Dec  8 14:57:39 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* i386.c (ix86_expand_int_movcc): Use force_operand instead of\n \tconstructing insn directly.\n \n+2002-12-06  Per Bothner  <pbothner@apple.com>\n+\n+\t* cpplib.h (struct cpp_hashnode):  Change field directive_index from\n+\tchar to an int bit-field, for hosts where char is unsigned.\n+\n+2002-12-07  Roger Sayle  <roger@eyesopen.com>\n+\t    Richard Henderson <rth@redhat.com>\n+\n+\t* real.c (ieee_extended_motorola_format,\n+\tieee_extended_intel_96_format, ieee_extended_intel_128_format,\n+\tieee_quad_format, vax_d_format, vax_g_format, i370_double_format):\n+\tProvide appropriate values for new signbit field.\n+\n+2002-12-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* real.h (real_format): Add signbit field.\n+\t* real.c (ieee_single_format, ieee_double_format,\n+\tieee_extended_motorola_format, ieee_extended_intel_96_format,\n+\tieee_extended_intel_128_format, ibm_extended_format,\n+\tieee_quad_format, vax_f_format, vax_d_format,\n+\tvax_g_format, i370_single_format, i370_double_format,\n+\tc4x_single_format, c4x_extended_format, real_internal_format):\n+\tProvide suitable signbit value, or -1 to avoid bit twiddling.\n+\n+\t* optabs.c (expand_unop): Try implementing negation of\n+\tfloating point modes by flipping the sign bit.\n+\t(expand_abs): Try implementing abs of floating point modes\n+\tby clearing the sign bit.\n+\n+Sat Dec  7 22:29:47 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc):  Use force_operand instead\n+\tof constructing insn directly.\n+\n 2002-12-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*iorhi_shift_8): New.\n@@ -304,6 +466,26 @@ Sun Dec  8 14:57:39 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* doc/install.texi (Configuration): Improve description of cases\n \twhere `make distclean` may fail; clarify --with-gnu-as; fix grammar.\n \n+2002-12-06  Per Bothner  <pbothner@apple.com>\n+\n+\t* cpplib.h (NODE_MACRO_ARG):  New flag.\n+\t(struct cpp_hashnode):  Give _cpp_hashnode_value tag to value union.\n+\tRemove value.operator field.  Move arg_index field to value union.\n+\t(directive_index):  Make signed, since also used for C++ operators.\n+\t* cppmacro.c (_cpp_save_parameter):  Use NODE_MACRO_ARG flag to\n+\tcheck for duplicate parameter.  Set NODE_MACRO_ARG flag.\n+\tSave node->value, and set node->value.arg_index.\n+\t(_cpp_create_definition):  For each paramater, restore node->value.\n+\t(lex_expansion_token):  Use NODE_MACRO_ARG flag, and moved arg_index.\n+\t* cpptrad.c (scan_out_logical_line): Likewise.\n+\t(scan_out_logical_line): Check for directive > 0.\n+\t* cpplib.c (cpp_handle_directive):  Likewise.\n+\t* cpplex.c (_cpp_lex_direct):  Update as value.operator is replaced\n+\tby negative of directive_index.\n+\t* cppinit.c (mark_named_operators):  Likewise.\n+\n+\t* hashtable.h (struct ht_identifier):  Swap fields, for better packing.\n+\n 2002-12-06 Dhananjay Deshpande <dhananjayd@kpit.com>\n \n \t* gcc/config/sh/sh.c (calc_live_regs): Save fpscr only if target has\n@@ -332,6 +514,26 @@ Fri Dec  6 15:44:46 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* expr.c (expand_expr) <case COND_EXPR>: Never modify exp in place.\n \n+Thu Dec  5 16:58:25 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (dimode peep2s): Re-add \"&& 1\".\n+\n+Thu Dec  5 14:10:15 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_prologue):  Add comment, do not use\n+\tfast prologues for cold and normal functions.\n+\n+Thu Dec  5 00:52:37 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_rep_movl_optimal): New variable.\n+\t(ix86_expand_movstr, ix86_expand_clrstr): Use TARGET_REP_MOVL_OPTIMAL\n+\t* i386.h (TARGET_REP_MOVL_OPTIMAL): New macro.\n+\n+\t* i386.md (negsf2_ifs, negdf2_ifs, negdf2_ifs_rex64, abssf2_ifs,\n+\tabsdf2_ifs, absdf2_ifs_rex64): Fix constraints.\n+\tneg?f2_ifs, abs?f2_ifs splitters): Refuse memory operand; do not\n+\tgenerate unnecesary subregs.\n+\n 2002-12-05  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa32-linux.h (CANONICALIZE_FUNCPTR_FOR_COMPARE_LIBCALL): Move define.\n@@ -367,6 +569,11 @@ Fri Dec  6 15:44:46 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(get_shift_alg): Return optimal assembly instructions for the\n \tshifts mentioned above.\n \n+Wed Dec  4 11:53:07 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc): Force operand into register for QImode\n+\tcondtiional moves.\n+\n 2002-12-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_init_once): Do not use loop to\n@@ -435,7 +642,7 @@ Wed Dec  4 15:20:54 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-12-03  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.md (*movv1di_const0): New pattern.\n+\t* config/rs6000/spe.md (*movv1di_const0): New pattern.\n \n 2002-12-03  Richard Henderson  <rth@redhat.com>\n \n@@ -463,6 +670,33 @@ Wed Dec  4 15:20:54 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/h8300/h8300.c (single_one_operand): Fix a warning.\n \t(single_zero_operand): Likewise.\n \n+2002-12-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.in configure configure.in dummy-conditions.c fix-header.c\n+\tgcov-iov.c gen-protos.c genattr.c genattrtab.c genautomata.c\n+\tgencheck.c gencodes.c genconditions.c genconfig.c genconstants.c\n+\tgenemit.c genextract.c genflags.c gengenrtl.c gengtype-lex.l\n+\tgengtype-yacc.y gengtype.c genopinit.c genoutput.c genpeep.c\n+\tgenpreds.c genrecog.c gensupport.c mkconfig.sh read-rtl.c\n+\tscan-decls.c scan.c config/sh/sh.h doc/configfiles.texi\n+\tdoc/install-old.texi: Replace hconfig.h with bconfig.h.\n+\t* Makefile.in: Replace HCONFIG_H with BCONFIG_H.\n+\n+2002-12-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* config/rs6000/rs6000.md (ffssi): Convert to expander.\n+\t(ffsdi): Likewise.\n+\t(cntlzw2, cntlzd2): New patterns.\n+\n+2002-12-02  H.J. Lu <hjl@gnu.org>\n+\n+\t* config.gcc (mips*-*-netbsd*): Remove mips/t-netbsd.\n+\t(mips*-*-linux*): Remove mips/t-linux.\n+\n+Mon Dec  2 19:26:30 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc):  Avoid overflow.\n+\n 2002-12-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (dosize): Replace argument op with\n@@ -512,6 +746,11 @@ Mon Dec  2 14:43:22 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* ra-build.c: Fix a comment typo.\n \n+Sun Dec  1 16:50:47 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc): fix\n+\treversed BRANCH_COST test; be curefull about infinite recursion.\n+\n 2002-12-01  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_output_function_prologue):\n@@ -540,12 +779,131 @@ Mon Dec  2 14:43:22 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* c-format.c (T_ST): Use size_type_node, not c_size_type_node.\n \t* tree.h (TI_SIZE_TYPE): New enumeral.\n \t(size_type_node): Likewise.\n-\t\n+\n+2002-11-30  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* configure.in: Don't put ${tm_file} into host_xm_file,\n+\tbuild_xm_file, or xm_file.  Do put tm-preds.h into tm_p_file.\n+\tTake location of tm-preds.h into account when calculating\n+\ttm_p_file_list.\n+\t* configure: Regenerate.\n+\t* mkconfig.sh: No need for separate TM_DEFINES and XM_DEFINES\n+\targuments.  Do not provide rtx, rtvec, tree, or GTY here.\n+\tRemove special case code for tm_p.h and *config.h; add new\n+\tspecial case code for tm.h and tconfig.h. Clean up a bit.\n+\n+\t* Makefile.in (tm_file, tm_file_list): New variables set from\n+\t@-substitutions.\n+\t(GCONFIG_H): Deleted.\n+\t(GTM_H, TM_H): New.\n+\t(CONFIG_H): Is now just config.h $(host_xm_file_list).\n+\t(TM_P_H): Move up with the other mkconfig.sh-generated\n+\theaders; don't mention tm-preds.h explicitly.\n+\t(tm.h, cs-tm.h): New rule.\n+\t(cs-config.h, cs-hconfig.h, cs-tconfig.h, cs-tm_p.h): Adjust\n+\tinvocations of mkconfig.sh for changes to that program.\n+\t(mostlyclean): Delete print-rtl1.c.\n+\t(clean): Delete tm.h.\n+\tUpdate dependencies for the files listed below.\n+\n+\t* mklibgcc.in:  Add 'coretypes.h $(TM_H)' to libgcc2_c_dep.\n+\n+\t* coretypes.h: New file.\n+\t* system.h: #define malloc to xmalloc and realloc to xrealloc\n+\twhen FLEX_SCANNER or YYBISON is defined, independent of the\n+\tvalue of GCC_VERSION.\n+\t* alias.c, attribs.c, bb-reorder.c, bitmap.c, builtins.c,\n+\tc-aux-info.c, c-common.c, c-convert.c, c-decl.c, c-dump.c,\n+\tc-errors.c, c-format.c, c-lang.c, c-lex.c, c-objc-common.c,\n+\tc-opts.c, c-parse.in, c-pragma.c, c-pretty-print.c,\n+\tc-semantics.c, c-typeck.c, caller-save.c, calls.c, cfg.c,\n+\tcfganal.c, cfgbuild.c, cfgcleanup.c, cfglayout.c, cfgloop.c,\n+\tcfgrtl.c, collect2.c, combine.c, conflict.c, convert.c,\n+\tcppdefault.c, cpperror.c, cppexp.c, cppfiles.c, cpphash.c,\n+\tcppinit.c, cpplex.c, cpplib.c, cppmacro.c, cppmain.c,\n+\tcppspec.c, cpptrad.c, crtstuff.c, cse.c, cselib.c, dbxout.c,\n+\tdebug.c, df.c, diagnostic.c, doloop.c, dominance.c,\n+\tdummy-conditions.c, dwarf2asm.c, dwarf2out.c, dwarfout.c,\n+\temit-rtl.c, errors.c, et-forest.c, except.c, explow.c,\n+\texpmed.c, expr.c, final.c, fix-header.c, flow.c, fold-const.c,\n+\tfunction.c, gcc.c, gccspec.c, gcov-dump.c, gcov-iov.c, gcov.c,\n+\tgcse.c, gen-protos.c, genattr.c, genattrtab.c, genautomata.c,\n+\tgencheck.c, gencodes.c, genconditions.c, genconfig.c,\n+\tgenconstants.c, genemit.c, genextract.c, genflags.c,\n+\tgengenrtl.c, gengtype-lex.l, gengtype-yacc.y, gengtype.c,\n+\tgenopinit.c, genoutput.c, genpeep.c, genpreds.c, genrecog.c,\n+\tgensupport.c, ggc-common.c, ggc-none.c, ggc-page.c,\n+\tggc-simple.c, global.c, graph.c, haifa-sched.c, hashtable.c,\n+\thooks.c, ifcvt.c, integrate.c, intl.c, jump.c, langhooks.c,\n+\tlcm.c, libgcc2.c, line-map.c, lists.c, local-alloc.c, loop.c,\n+\tmain.c, mbchar.c, mips-tdump.c, mips-tfile.c, mkdeps.c,\n+\toptabs.c, params.c, predict.c, prefix.c, print-rtl.c,\n+\tprint-tree.c, profile.c, protoize.c, ra-build.c,\n+\tra-colorize.c, ra-debug.c, ra-rewrite.c, ra.c, read-rtl.c,\n+\treal.c, recog.c, reg-stack.c, regclass.c, regmove.c,\n+\tregrename.c, reload.c, reload1.c, reorg.c, resource.c,\n+\trtl-error.c, rtl.c, rtlanal.c, sbitmap.c, scan-decls.c,\n+\tscan.c, sched-deps.c, sched-ebb.c, sched-rgn.c, sched-vis.c,\n+\tsdbout.c, sibcall.c, simplify-rtx.c, ssa-ccp.c, ssa-dce.c,\n+\tssa.c, stmt.c, stor-layout.c, stringpool.c, timevar.c,\n+\ttlink.c, toplev.c, tracer.c, tree-dump.c, tree-inline.c,\n+\ttree.c, unroll.c, varasm.c, varray.c, varray.h, vmsdbgout.c,\n+\txcoffout.c, config/darwin-c.c, config/darwin.c,\n+\tconfig/fp-bit.c, config/alpha/alpha.c, config/alpha/vms-cc.c,\n+\tconfig/alpha/vms-ld.c, config/arc/arc.c, config/arm/arm.c,\n+\tconfig/arm/pe.c, config/avr/avr.c, config/c4x/c4x-c.c,\n+\tconfig/c4x/c4x.c, config/cris/cris.c, config/d30v/d30v.c,\n+\tconfig/dsp16xx/dsp16xx.c, config/fr30/fr30.c,\n+\tconfig/frv/frv.c, config/h8300/h8300.c, config/i370/i370-c.c,\n+\tconfig/i370/i370.c, config/i386/i386.c, config/i386/winnt.c,\n+\tconfig/i960/i960-c.c, config/i960/i960.c,\n+\tconfig/ia64/ia64-c.c, config/ia64/ia64.c, config/ip2k/ip2k.c,\n+\tconfig/m32r/m32r.c, config/m68hc11/m68hc11.c,\n+\tconfig/m68k/m68k.c, config/m88k/m88k.c, config/mcore/mcore.c,\n+\tconfig/mips/irix6-libc-compat.c, config/mips/mips.c,\n+\tconfig/mmix/mmix.c, config/mn10200/mn10200.c,\n+\tconfig/mn10300/mn10300.c, config/ns32k/ns32k.c,\n+\tconfig/pa/pa.c, config/pdp11/pdp11.c, config/romp/romp.c,\n+\tconfig/rs6000/rs6000-c.c, config/rs6000/rs6000.c,\n+\tconfig/s390/s390.c, config/sh/sh.c, config/sparc/gmon-sol2.c,\n+\tconfig/sparc/sparc.c, config/stormy16/stormy16.c,\n+\tconfig/v850/v850-c.c, config/v850/v850.c, config/vax/vax.c,\n+\tconfig/xtensa/xtensa.c, objc/objc-act.c, objc/objc-lang.c:\n+\tInclude coretypes.h and tm.h.\n+\n+\t* genattrtab.c, genconditions.c, genemit.c, genextract.c,\n+\tgengenrtl.c, gengtype.c, genopinit.c, genoutput.c, genpeep.c,\n+\tgenrecog.c: Include coretypes.h and tm.h from the file\n+\tgenerated by this program.\n+\n+\t* unwind-dw2-fde-darwin.c, unwind-dw2-fde-glibc.c,\n+\tunwind-dw2-fde.c, unwind-dw2.c, unwind-sjlj.c: Include\n+\tcoretypes.h and tm.h, and tsystem.h when not already included.\n+\tNo need to include stddef.h nor stdlib.h.\n+\n+\t* fixinc/fixlib.h: Include coretypes.h and tm.h.  Do not\n+\tinclude auto-host.h or ansidecl.h/\n+\t* fixinc/server.h: Do not include stdio.h, unistd.h, or fixlib.h.\n+\t* fixinc/procopen.c: Include server.h after fixlib.h.  Do not\n+\tinclude auto-host.h, ansidecl.h, or system.h.\n+\t* fixinc/server.c: Likewise.  Also, do not include signal.h,\n+\tand do not redefine volatile.\n+\n+Sat Nov 30 17:16:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movdf_integer):  Always enable in 64bit.\n+\t(movdf_nointeger): Always disable in 64bit.\n+\n 2002-11-30  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* cfg.c (dump_flow_info): Use max_reg_num () to determine the largest\n \tpseudo register number plus 1.\n \n+Fri Nov 29 20:10:56 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* expmed.c (store_bit_field): Use int_mode_for_mode to find\n+\tcorresponding mode of non-integer mode, unless it is VOIDmode.\n+\n 2002-11-29  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* cpplib.c (_cpp_test_assertion): Default *value to 0.\n@@ -571,6 +929,20 @@ Mon Dec  2 14:43:22 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \tDo not accept bit tests with the MSB.\n \t(*tst_extzv_memqi_1_n): New.\n \n+Thu Nov 28 23:56:24 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc): Add copy_rtx to avoid invalid RTX\n+\tsharing when operand is SUBREG.\n+\n+Thu Nov 28 08:57:26 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* athlon.md (athlon-decodev): New reservation unit.\n+\t(athlon-direct0): New reservation.\n+\t(athlon-vector): New use athlon-decodev.\n+\t(athlon-double, athlon-direct): Better model.\n+\t(athlon_imul_k8): Use athlon-direct0.\n+\t(athlon_movlpd_load): New insn reservation.\n+\n 2002-11-28  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_eightbit_constant_address_p):\n@@ -598,6 +970,14 @@ Mon Dec  2 14:43:22 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/h8300/h8300-protos.h: Add a prototype for\n \th8300_and_costs.\n \n+Wed Nov 27 20:34:13 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_sse_partial_regs_for_cvtsd2ss): New.\n+\t* i386.h (x86_sse_partial_regs_for_cvtsd2ss): Declare.\n+\t(TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS): New macro.\n+\t* i386.md (truncdfsf patterns and splitters): Use\n+\tTARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\n+\n 2002-11-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (altivec_init_builtins): Make the\n@@ -667,6 +1047,51 @@ Wed Nov 27 14:45:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.def (DEF_C99_BUILTIN): Fix.\n \n+2002-11-26  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/lib1funcs.asm (FUNC, ENDFUNC0, ENDFUNC): New macros.\n+\t(all): Add .size and .type information.\n+\n+Tue Nov 26 22:43:50 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_expand_int_movcc):  Do not emit lea for short mode on\n+\tpartial_reg_stall target.\n+\n+Tue Nov 26 22:27:47 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movhicc): Allow general operand.\n+\t(movqicc): New expander.\n+\t(movqicc_noc): New pattern.\n+\t* i386.c (ix86_expand_carry_flag_compare): New function.\n+\t(ix86_expand_int_movcc): Optimize harder using sbb; support more\n+\tHImode conversion; support QImode conditional moves\n+\n+Tue Nov 26 16:30:59 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (FAST_PROLOGUE_INSN_COUNT): Set to 20.\n+\t(ix86_expand_prologue): Multiply the count by amount of registers to be\n+\tpushed.\n+\n+Tue Nov 26 15:55:27 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (override_options): Error about wrong -mcpu on x86-64\n+\tcompilation.\n+\n+2002-11-26  NIIBE Yutaka  <gniibe@m17n.org>\n+\n+\t* config/sh/linux.h (FUNCTION_PROFILER): Implemented.\n+\n+Tue Nov 26 00:14:20 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386-protos.h (x86_extended_QIreg_mentioned_p,\n+\tx86_extended_reg_mentioned_p): Declare.\n+\t* i386.c (extended_reg_mentioned_1): New static function.\n+\t(x86_extended_QIreg_mentioned_p,\n+\tx86_extended_reg_mentioned_p): New global functions.\n+\t* i386.h (REX_SSE_REGNO_P): New macro.\n+\t* i386.md (prefix_rex): New attribute.\n+\t(length attribute): Add rex.\n+\n 2002-11-26  Andrew Haley  <aph@redhat.com>\n \n \t* unwind-sjlj.c (_Unwind_FindEnclosingFunction): Rename\n@@ -797,6 +1222,10 @@ Wed Nov 27 14:45:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* crtstuff.c (EH_FRAME_SECTION_CONST): Define.\n \t(__EH_FRAME_BEGIN__, __FRAME_END__): Add it.\n \n+Mon Nov 25 18:32:37 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (pushsf_rex64): Fix typo.\n+\n 2002-11-25  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/rs6000/spe.h (__ev_create_sfix32_fs): Change macro into\n@@ -912,6 +1341,14 @@ Wed Nov 27 14:45:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* unwind-sjlj.c (_Unwind_Find_Enclosing_Function): Likewise.\n \t* unwind-dw2.c (_Unwind_Find_Enclosing_Function): Likewise.\n \n+Sun Nov 24 10:38:04 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_use_ffreep): New global variable.\n+\t* i386.h (x86_use_frfeep): Declare\n+\t(TARGET_USE_FFREEP): New macro\n+\t* i386.md  (movs?f*): Use freep when asked for.\n+\t(push?f): Remove dead code.\n+\n 2002-11-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_init_once): Fix a typo in the\n@@ -951,6 +1388,19 @@ Wed Nov 27 14:45:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/m68k/m68k.c: Fix typo in last change defining\n \tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n \n+2002-11-23  H.J. Lu <hjl@gnu.org>\n+\n+\t* aclocal.m4: Include ../config/accross.m4.\n+\t(gcc_AC_COMPILE_CHECK_SIZEOF): Removed.\n+\t(gcc_AC_C_COMPILE_ENDIAN): Removed.\n+\t(gcc_AC_C_FLOAT_FORMAT): Check $ac_cv_c_bigendian\n+\tinstead of $ac_cv_c_compile_endian.\n+\n+\t* configure.in: Replace gcc_AC_COMPILE_CHECK_SIZEOF with\n+\tAC_COMPILE_CHECK_SIZEOF.\n+\tReplace gcc_AC_C_COMPILE_ENDIAN with AC_C_BIGENDIAN_CROSS.\n+\t* configure: Rebuild.\n+\n 2002-11-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (print_operand): Update the use of\n@@ -987,6 +1437,24 @@ Wed Nov 27 14:45:46 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/h8300/h8300.c (compute_a_shift_length): Fix the insn\n \tlength computation when xor.l is output.\n \n+2002-11-21  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* alpha.md (movstrdi, clrstrdi): New VMS patterns.\n+\t(call_vms_1, call_value_vms_1): Cleanup syntax.\n+\n+Thu Nov 21 19:20:27 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* athlon.md (define_atuomaton): Add athlon_load.\n+\t(athlon-double): New reservation.\n+\t(athlon-ieu0): New CPU unit.\n+\t(athlon-load?): Use athlon_load automaton.\n+\t(*_k8 reservations): New.\n+\t(other insn revervations): Activate for K8.\n+\n+Thu Nov 21 15:07:42 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgrtl.c (verify_flow_info):  Accept EDGE_CAN_FALLTHRU flag.\n+\n 2002-11-21  Jim Wilson  <wilson@redhat.com>\n \n \t* config/rs6000/rs6000.c (function_arg): Set inner mode of SPE\n@@ -1073,6 +1541,55 @@ Thu Nov 21 23:52:04 CET 2002  Jan Hubicka  <jH@suse.cz>\n \tstack padding to an aligned boundary if it has no frame.\n \t(thumb_get_frame_size): Likewise.\n \n+Wed Nov 20 22:25:53 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* x86-64.h (MCOUNT_NAME): Fix typo in my previous patch.\n+\t(override_options): Likewise.\n+\n+Wed Nov 20 19:07:17 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* config.gcc: Add k8 target alias support\n+\t* i386.c (_cost): Declare costs for various variants of divides and\n+\tmultiplies.\n+\t(k8_cost): New.\n+\t(m_K8, m_ATHLON_K8): New macros.\n+\t(x86_use_leave, x86_push_memory, x86_movx, x86_unroll_strlen,\n+\tx86_cmove, x86_3dnow_a, x86_deep_branch, x86_use_fiop,\n+\tx86_promote_QImode, x86_sub_esp_?, x86_add_esp_?,\n+\tx86_integer_DFmode_moves, x86_partial_reg_dependency,\n+\tx86_memory_mismatch_stall, x86_accumulate_outgoing_args,\n+\tx86_prologue_using_move, x86_epilogue_using_move,\n+\tx86_arch_always_fancy_math_387, x86_sse_partial_regs,\n+\tx86_sse_typeless_stores): Set for K8\n+\t(override_options): Add k8 support; fix athlon alignment;\n+\tcomplain about non-x86-64 capable CPU being used in x86-64 compilation.\n+\t(ix86_issue_rate): Set for K8.\n+\t(ix86_adjust_cost, ia32_use_dfa_pipeline_interface,\n+\tx86_machine_dependent_reorg): Handle K8 like\n+\t* i386.h\n+\t(x86_costs):  Change mult_init and divide into array.\n+\t(TARGET_K8, TARGET_ATHLON): New macros.\n+\t(MODE_INDEX): New macro.\n+\t(RTX_COST): Use new costs.\n+\t(TARGET_CPU_CPP_BUILTINS):  Define __k8__ and __tune_k8__.\n+\t(TARGET_CPU_DEFAULT_NAMES): Add k8\n+\t(TARGET_CPU_DEFAULT_k8): New constant\n+\t(enum processor_type): Add PROCESSOR_K8.\n+\t* i386.md (cpu attribute): Add k8.\n+\n+\t* invoke.texi: Document -march=k8.\n+\n+\t* i386.md (type attribute): Add leave\n+\t(mode attribute): Remove unknownfp.\n+\t(length_immediate, modrm, memory attributes): Handle leave correctly.\n+\t(fp comparison patterns): Determine FP mode.\n+\t(leave, leave_rex64): Remove special cases.\n+\t* ppro.md (ppro_uops, ppro_p2): Add leave\n+\t* pentiun.md (pent_pop): Handle leave too.\n+\t* k6.md (k6_load): Handle leave.\n+\t* athlon.md (athlon_leave, athlon_pop): Fix.\n+\t(athlon_decode): Handle leave.\n+\n 2002-11-20  Steve Ellcey  <sje@cup.hp.com>\n \n \t* emit-rtl.c (gen_reg_rtx): Simplify mapping of Complex type\n@@ -1159,6 +1676,78 @@ Thu Nov 21 23:52:04 CET 2002  Jan Hubicka  <jH@suse.cz>\n \t* combine.c (force_to_mode): Only replace with (not Y) if all bits in fuller_mask\n \t(not just mask) are set in C.\n \n+2002-11-19  Steven Bosscher <steven.bosscher@usafa.af.mil>\n+\n+\t* config/mips/vr.h (DRIVER_SELF_SPECS): Change %{<mgp32} to %<mgp32.\n+\n+2002-11-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* profile.c (index_counts_file): Fix obvious mistake.\n+\n+2002-11-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* Makefile.in (profile.o): Add hashtab.h dependency.\n+\t* gcov-io.h (GCOV_SUMMARY_LENGTH): New.\n+\t* profile.c: Include hashtab.h.\n+\t(htab_counts_index_hash, htab_counts_index_eq, htab_counts_index_del,\n+\tcleanup_counts_index, index_counts_file, struct section_reference,\n+\tstruct da_index_entry, counts_file_name, counts_file_index): New.\n+\t(get_exec_counts, init_branch_prob): Modified.\n+\n+2002-11-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config.gcc (sh*-*-linux*): Add t-slibgcc-elf-ver and t-linux\n+\tto tmake_file. Remove setting gas and gnu_ld here.\n+\t* config/sh/libgcc-glibc.ver: New file.\n+\t* config/sh/t-linux (EXTRA_MULTILIB_PARTS): Add crtbeginT.o.\n+\t(SHLIB_MAPFILES): New.\n+\t* config/sh/linux.h (MD_EXEC_PREFIX): Undefine.\n+\t(MD_STARTFILE_PREFIX): Likewise.\n+\t(HANDLE_PRAGMA_PACK_PACK_PUSH_POP): Define.\n+\t(DWARF2_UNWIND_INFO): Redefine.\n+\t(ASM_PREFERRED_EH_DATA_FORMAT): Define.\n+\t(LINK_EH_SPEC): Redefine.\n+\t(MD_FALLBACK_FRAME_STATE_FOR): Define except for SH-media.\n+\t(SH_FALLBACK_FRAME_FLOAT_STATE): Define.\n+\t(SH_DWARF_FRAME_GP0, SH_DWARF_FRAME_FP0, SH_DWARF_FRAME_XD0,\n+\tSH_DWARF_FRAME_BT0, SH_DWARF_FRAME_PR, SH_DWARF_FRAME_PR_MEDIA,\n+\tSH_DWARF_FRAME_GBR, SH_DWARF_FRAME_MACH, SH_DWARF_FRAME_MACL,\n+\tSH_DWARF_FRAME_PC, SH_DWARF_FRAME_SR, SH_DWARF_FRAME_FPUL,\n+\tSH_DWARF_FRAME_FPSCR): Likewise.\n+\t* config/sh/sh-protos.h (sh_set_return_address): Declare.\n+\t* config/sh/sh.c (calc_live_regs): Count EH_RETURN_DATA_REGNO\n+\tregisters if the current function calls EH return.\n+\t(sh_expand_epilogue): Handle EH stack adjustments.\n+\t(sh_set_return_address): New function.\n+\t* config/sh/sh.h (SH_DBX_REGISTER_NUMBER): Handle PR_MEDIA_REG.\n+\tDon't abort even if the number is mapped to -1.\n+\t(EH_RETURN_DATA_REGNO): Define.\n+\t(EH_RETURN_STACKADJ_RTX): Define.\n+\t* config/sh/sh.md (UNSPEC_EH_RETURN): New.\n+\t(eh_return): New pattern.\n+\t(eh_set_ra_di, eh_set_ra_si): Likewise.\n+\tAdd splitter to perform EH return after reload.\n+\n+Tue Nov 19 12:52:07 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* stor-layout.c (excess_unit_span): New function.\n+\t(place_field): Use it.\n+\n+2002-11-19  Andreas Schwab  <schwab@suse.de>\n+\n+\t* unwind.h (_Unwind_GetTextRelBase): Revert last change, this is\n+\tnot valid in C++.\n+\n+2002-11-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in, Makefile.in: Correct BUILD/HOST confusion.\n+\t* configure: Regenerate.\n+\n+Tue Nov 19 00:11:44 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* convert.c (strip_float_extensions): New function.\n+\t(convert_to_real): Optimize some cases.\n+\n 2002-11-19  Andreas Jaeger  <aj@suse.de>\n \n \t* loop.c (record_giv): Initialize not_replaceable.\n@@ -1326,6 +1915,13 @@ Sun Nov 17 00:01:28 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/sh/sh.md (initialize_trampoline): Do not force the\n \ttrampoline address into R0_REGS here.\n \n+Sun Nov 17 14:01:09 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (negsf2_ifs, negdf2_ifs, negdf2_ifs_rex64, abssf2_ifs,\n+\tabsdf2_ifs, absdf2_ifs_rex64): Fix constraints.\n+\t(neg?f2_ifs, abs?f2_ifs splitters): Refuse memory operand; do not\n+\tgenerate unnecesary subregs.\n+\n 2002-11-17  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* df.c: Fix formatting.\n@@ -1349,6 +1945,23 @@ Sun Nov 17 00:01:28 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.c: Fix formatting.\n \n+Sat Nov 16 16:49:58 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (truncdfsf2_1_sse, truncdfsf2_1_sse_nooverlap, truncdfsf2_2,\n+\tfloats?dff2_i387):\n+\tWork around regclass stupidity.\n+\t(truncdfsf_2_1_sse splitter):  Accept !TARGET_PARTIAL_SSE_REGS\n+\n+Sat Nov 16 02:17:48 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (fop_df_6): New pattern.\n+\t(fop_xf_4, fop_xf_5): Handle both SF and DFmode extensions.\n+\t(fop_xf_6): Rewrite\n+\t(fop_xf_7): Delete.\n+\t(fop_tf_4, fop_tf_5): Handle both SF and DFmode extensions.\n+\t(fop_tf_6): Rewrite\n+\t(fop_tf_7): Delete.\n+\n 2002-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (two anonymous patterns): Fix typos.\n@@ -1489,6 +2102,12 @@ Fri Nov 15 14:54:19 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* gthr-posix.h: Fix formatting.\n \n+2002-11-12  Devang Patel <dpatel@apple.com>\n+\n+\t* gcc.c (display_help): Two new options -Xpreprocessor and -Xassembler.\n+\t(process_command): Same.\n+\t* doc/invoke.texi: Info about these two new options.\n+\n 2002-11-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*andorsi3): New.\n@@ -1602,6 +2221,18 @@ Sun Nov 10 18:49:21 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/mmix/mmix.h (FUNCTION_ARG_CALLEE_COPIES): Define the same\n \tas FUNCTION_ARG_PASS_BY_REFERENCE.\n \n+2002-11-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* doc/install.texi: Add *-*-vxworks* specific installation\n+\tinstructions.\n+\n+\t* config/vxlib.c: Rewrite using generation numbers to identify\n+\tvalid TSD keys.\n+\n+Sat Nov  9 00:10:54 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_machine_dependent_reorg): Fix even more side cases.\n+\n 2002-11-09  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.h (STARTING_FRAME_OFFSET): Change offset for TARGET_64BIT to 16.\n@@ -1645,6 +2276,43 @@ Sun Nov 10 18:49:21 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* c-opts.c (COMMAND_LINE_OPTIONS): Fix -Wimplicit.\n \n+2002-11-08  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* real.c (real_sqrt): Update comment with bibliographic reference.\n+\n+Fri Nov  8 13:33:58 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (sse_loadss, sse2_loadsd): Fix expander.\n+\n+Fri Nov  8 13:25:41 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_machine_dependent_reorg): Fix handling of empty functions.\n+\n+Fri Nov  8 13:01:42 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* builtins.c (expand_builtin_mathfn): Handle floor/ceil/trunc/round/nearbyint\n+\t(expand_builtin): Likewise.\n+\t* builtins.def: Add\n+\t__builtin_floor, __builtin_floorf, __builtin_floorl\n+\t__builtin_ceil, __builtin_ceilf, __builtin_ceill\n+\t__builtin_round, __builtin_roundf, __builtin_roundl\n+\t__builtin_trunc, __builtin_truncf, __builtin_truncl\n+\t__builtin_nearbyint, __builtin_nearbyintf, __builtin_nearbyintl.\n+\t* genopinit.c (optabs): Initialize the new optabs.\n+\t* optab.c (init_optabs): Likewise.\n+\t* optabs.h (optab_index): Add OTI_floor, OTI_ceil, OTI_trunc,\n+\tOTI_round, OTI_nearbyint.\n+\t(floor_optab, ceil_optab, trunc_optab, round_optab, nearbyint_optab): New.\n+\t* doc/md.texi: Document new named patterns.\n+\t* doc/extend.texi (builtin functions)  Document\n+\tfloor, floorf, floorl, ceil, ceilf,\n+\tceill, round, roundf, roundl, trunc,\n+\ttruncf, truncl, nearbyint, nearbyintf, nearbyintl.\n+\n+Fri Nov  8 11:36:11 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (sse_movdfcc, sse_movsfcc): Fix typo in previous patch.\n+\n 2002-11-08  Dale Johannesen  <dalej@apple.com>\n \n \t* dbxout.c (dbxout_type):  Fix stabs info for vector types.\n@@ -1669,6 +2337,11 @@ Fri Nov  8 11:20:19 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* jump.c (mark_jump_label): Handle subregs of label_refs.\n \n+Thu Nov  7 21:54:22 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (sse_movdfcc, sse_movsfcc): Avoid overactive matching.\n+\t* i386.c (ix86_expand_fp_movcc): Match the reversed cases.\n+\n 2002-11-07  David Mosberger  <davidm@hpl.hp.com>\n \n \t* config/ia64/crtend.asm: Include \"auto-host.h\".\n@@ -1741,6 +2414,44 @@ Thu Nov  7 11:18:01 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/rs6000/t-darwin: Delete contents duplicated in t-rs6000\n \tor config/t-darwin.\n \n+2002-11-06  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* config/i386/i386-interix.h (TARGET_SUBTARGET_DEFAULT): Or\n+\tMASK_MS_BITFIELD_LAYOUT\n+\t(SUBTARGET_OVERRIDE_OPTIONS): Warn about and turn off\n+\tMS bitfields for Objective-C.\n+\t(PCC_BIT_FIELD_TYPE_TEST, GROUP_BITFIELDS_BY_ALIGN): Remove\n+\tdefines.\n+\n+\t* config/i386/i386.c (ix86_ms_bitfield_layout): New function.\n+\t(TARGET_MS_BITFIELD_LAYOUT_P): Define to above function.\n+\t(TARGET_USE_MS_BITFIELD_LAYOUT): Define.\n+\n+\t* config/i386/i386.h (MASK_MS_BITFIELD_LAYOUT: New mask.\n+\tTARGET_USE_MS_BITFIELD_LAYOUT): New macro.\n+\t(TARGET_SWITCHES): Add above mask.\n+\n+\t* testsuite/gcc.dg/bf-ms-layout.c: New test case.\n+\t* testsuite/gcc.dg/bf-no-ms-layout.c: New test case.\n+\t* testsuite/gcc.dg/i386-bitfield1.c (dg-options): Add appropriate\n+\tflags for interix.\n+\n+Wed Nov  6 18:54:47 2002  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/mips/mips.h (ASM_OUTPUT_ADDR_DIFF_ELT): Output\n+\t.gpword/.gpdword for ABI_N32 and ABI_64 too, if using the GNU\n+\tassembler.\n+\t* config/mips/mips.md (tablejump_internal3): Output .cpadd\n+\tbefore jump on ABI_N32 too.\n+\t(tablejump_internal4): Ditto on ABI_64.  Increase maximum\n+\tlength to match.\n+\n+Wed Nov  6 17:16:48 CET 2002  Jan Hubicka  <jh@.suse.cz>\n+\n+\t* i386.md (negsf splitter): Accept memory operand in second register.\n+\t(abssf/absdf splitters): Simplify\n+\t(sse_loadss, sse_loadsd): Turn into expander.\n+\n 2002-11-06  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/8480\n@@ -1764,6 +2475,12 @@ Thu Nov  7 11:18:01 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/mips/mips.md (call_value_multiple_internal2): Use dla for\n \tnon-SImode addresses.\n \n+Tue Nov  5 14:34:36 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (float_truncate SSE splitter): Ensure that operand is not\n+\tstack register.\n+\t(float SSE splitters): Reorder conditional.\n+\n 2002-11-05  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/elf.h (LIB_SPEC): Add \"-lhal\".\n@@ -1783,6 +2500,15 @@ Thu Nov  7 11:18:01 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/mips/mips.h (CANNOT_CHANGE_MODE_CLASS): Move comment to...\n \t* config/mips/mips.c (mips_cannot_change_mode_class): ...here.\n \n+2002-11-04  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gthr-vxworks.h: Rewritten from scratch.\n+\t* config/vxlib.c: New file.\n+\t* config/t-vxworks: Add config/vxlib.c to LIB2FUNCS_EXTRA.\n+\t* config/rs6000/t-vxworks: Add config/vxlib.c to\n+\tLIB2FUNCS_EXTRA here too, because of clash with\n+\tconfig/rs6000/t-ppccomm.\n+\n 2002-11-04  Dale Johannesen  <dalej@apple.com>\n \n \t* doloop.c (doloop_modify_runtime):  Fix loop count computation\n@@ -1876,6 +2602,14 @@ Thu Nov  7 11:18:01 CET 2002  Jan Hubicka  <jh@suse.cz>\n \tInclude hard-reg-set and basic-block.\n \t(REG_CHANGES_MODE): Delete.\n \n+2002-11-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* real.c (real_sqrt): New function to calculate square roots.\n+\t* real.h (real_sqrt): Add function prototype.\n+\t* builtins.c (fold_builtin): Fold sqrt of constant argument.\n+\t* simplify-rtx.c (simplify_unary_operation): Simplify sqrt\n+\tof constant argument.\n+\n 2002-11-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* jump.c (never_reached_warning): Don't set contains_insn until the\n@@ -1997,6 +2731,16 @@ Fri Nov  1 10:33:15 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* expr.c (emit_move_insn):  Use SCALAR_FLOAT_MODE_P\n \t* machmode.h (SCALAR_FLOAT_MODE_P): New macro.\n \n+Thu Oct 31 18:20:50 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (sse_loadss, sse_loadsd):  Canonicalize; add expander\n+\t(movps, movpd splitters): Use canonical form.\n+\t(movv2di): Fix merge problem.\n+\n+Thu Oct 31 16:22:31 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (negdf2_ifs_rex64): Don't allow GPR operand.\n+\n 2002-10-31  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \tPR optimization/6162\n@@ -2048,6 +2792,13 @@ Thu Oct 31 12:45:55 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/sparc/freebsd.h (TRANSFER_FROM_TRAMPOLINE): Define\n \t__enable_execute_stack function.\n \n+2002-10-30  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gthr.h, gthr-dce.h, gthr-posix.h, gthr-rtems.h,\n+\tgthr-solaris.h, gthr-win32.h: Remove __gthread_key_dtor.\n+\t* unwind-sjlj.c (fc_key_dtor): Delete.\n+\t(fc_key_init): Adjust __gthread_key_create call to match.\n+\n 2002-10-30  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* c-common.c: Add GTY to vector_type_node_list.\n@@ -2122,6 +2873,34 @@ Thu Oct 31 12:45:55 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/h8300/h8300.c (h8300_eightbit_constant_address_p):\n \tTruncate the addresses for H8/300 using HImode.\n \n+Tue Oct 29 23:28:10 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (negdf splitter): Fix construction of the constant.\n+\n+Tue Oct 29 20:47:06 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (negsf, negdf): Reorganize to use vector modes\n+\tfor SSE variants.\n+\t(abssf, absdf): Use force_reg.\n+\t(movv4sf, movv2df): New splitters.\n+\t* i386.h (PREDICATE_CODES): add zero_extended_scalar_load_operand\n+\t* i386.c (zero_extended_scalar_load_operand\n+\n+\t* i386-protos.h (ix86_expand_call): Update prototype.\n+\t* i386.c (ix86_function_ok_for_sibcall): Handle 64bit\n+\t(ix86_expand_call): Use r11 for indirect sibcalls.\n+\t* i386.md (call, call_value, untyped_call, call_value_pop):\n+\tupdate x86_expand_call call.\n+\t(sibcall, sibcall_value): new patterns\n+\t(call_rex64, call_value_rex64): Do not accept sibcalls.\n+\t(sibcall_rex64, sibcall_value_rex64,\n+\tsibcall_rex64_v, sibcall_value_rex64_v): New.\n+\n+Tue Oct 29 15:37:39 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* toplev.c (rest_of_compilation): Reorganize way reg_scan is called\n+\tbefore final pass.\n+\n 2002-10-29  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* toplev.c (rest_of_type_compilation): Return early in case of\n@@ -2206,6 +2985,30 @@ Tue Oct 29 15:37:39 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/h8300/h8300.h (MASK_*): New.\n \t(TARGET_*): Use MASK_*.\n \n+2002-10-28  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config.gcc (*-*-vxworks, powerpc-wrs-vxworks*): New stanzas.\n+\t* config/t-vxworks, config/vxworks.h, config/rs6000/t-vxworks,\n+\tconfig/rs6000/vxworks.h: New files.\n+\t* config/rs6000/sysv4.h: Rip out -mvxworks and all related code.\n+\n+\t* config.gcc (alpha*-*-vxworks*, arm-*-vxworks*,\n+\ti?86-wrs-vxworks*, i960-wrs-vxworks* [all],\n+\tm68k-wrs-vxworks*, mips-wrs-vxworks, powerpc-wrs-vxworks*,\n+\tpowerpcle-wrs-vxworks*, sparc*-wrs-vxworks* [all],\n+\tsparc-*-vxsim*): Delete stanzas.\n+\t* gthr-vxworks.h: Rip out all substantive code and just\n+\tinclude gthr-single.h.\n+\n+\t* config/alpha/vxworks.h, config/arm/vxarm.h,\n+\tconfig/i386/vxi386.h, config/i960/t-vxworks960,\n+\tconfig/i960/vx960-coff.h, config/i960/vx960.h,\n+\tconfig/m68k/t-vxworks68, config/m68k/vxm68k.h,\n+\tconfig/mips/vxworks.h, config/rs6000/vxppc.h,\n+\tconfig/sparc/t-vxsparc, config/sparc/t-vxsparc64,\n+\tconfig/sparc/vxsim.h, config/sparc/vxsparc.h,\n+\tconfig/sparc/vxsparc64.h: Delete files.\n+\n 2002-10-28  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config.gcc (*-*-netbsd*): Add NETBSD_ENABLE_PTHREADS to\n@@ -2281,10 +3084,17 @@ Sun Oct 27 10:15:24 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/mmix/mmix.md (\"fixuns_truncdfdi2\"): Replace unsigned_fix,\n \tinvalid for floating point mode result, with fix.\n \n+Fri Oct 25 00:04:21 2002  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.in (GCC_FOR_TARGET): Add -L$(objdir)/../ld.\n+\t(STAGE2_FLAGS_TO_PASS): Pass GCC_FOR_TARGET.\n+\t(stage1_build): Likewise.\n+\n 2002-10-25  Mike Stump  <mrs@apple.com>\n \n \tFixes gcc.dg/warn-1.c.\n-\t* c-typeck.c (warn_for_assignment): Don't print argument number, if zero.\n+\t* c-typeck.c (warn_for_assignment): Don't print argument number,\n+\tif zero.\n \n Sat Oct 26 01:44:46 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n@@ -2413,6 +3223,20 @@ Sat Oct 26 01:44:46 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* optabs.c (expand_binop): Don't reuse the shift target in the\n \tmiddle of shift sequences.\n \n+Wed Oct 23 22:48:44 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (abs splitters): Do not produce nested subregs.\n+\n+Wed Oct 23 12:42:32 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movti_rex64): Fix constraints.\n+\n+Wed Oct 23 12:01:21 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (abssf,absdf): Use vector operands for SSE\n+\t(abssf2_ifs, absdf2_ifs, absdf2_ifs_rex64 and splitters): Update for\n+\tvector operand.\n+\n 2002-10-23  Ziemowit Laski <zlaski@apple.com>\n \n \t* objc/objc-act.c (get_static_reference): Remove unneeded\n@@ -2631,6 +3455,11 @@ Tue Oct 22 19:07:03 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/arm/arm.c (arm_elf_asm_named_section): Likewise.  Also\n \tmerge TLS support.\n \n+2002-10-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Look at\n+\tthe function type, not the return type.\n+\n 2002-10-21  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (sticky_rshift_significand): Return inexact, don't\n@@ -2785,6 +3614,12 @@ Tue Oct 22 00:04:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* config/h8300/h8300.h (N_REG_CLASSES): Parenthesize.\n \n+2002-10-20  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Fix an\n+\tinverted test in the conditional determining the possibility\n+\tof sibcalls in PIC mode.\n+\n 2002-10-20  Richard Henderson  <rth@redhat.com>\n \n \t* target.h (struct gcc_target): Line wrap.\n@@ -2848,6 +3683,45 @@ Tue Oct 22 00:04:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t-fno-sched-spec, -fsched-spec-load, -fsched-spec-load-dangerous,\n \t-fsched-verbose=n, -fno-branch-count-reg and -fbounds-check.\n \n+Sat Oct 19 22:02:28 2002  Alexandre Oliva  <aoliva@redhat.com>\n+\tAngela Marie Thomas  <angela@releasedominatrix.com>\n+\tBrendan Kehoe  <brendan@zen.org>\n+\tNick Clifton  <nickc@redhat.com>\n+\tAndrew Haley  <aph@redhat.com>\n+\n+\t* configure.in (--with-sysroot): New.  Don't inhibit libc if\n+\tgiven.  AC_SUBST TARGET_SYSTEM_ROOT, TARGET_SYSTEM_ROOT_DEFINE\n+\tand CROSS_SYSTEM_HEADER_DIR.\n+\t* configure: Rebuilt.\n+\t* Makefile.in (CROSS_SYSTEM_HEADER_DIR): Set in configure.\n+\t(TARGET_SYSTEM_ROOT): New.\n+\t(DRIVER_DEFINES): Define CROSS_INCLUDE_DIR from\n+\tCROSS_SYSTEM_HEADER_DIR.\n+\t(install-gcc-tooldir): New target.\n+\t(stmp-fixinc): Do not create $(libsubdir), but rather bail out\n+\tif SYSTEM_HEADER_DIR does not exist and it's not the default\n+\tsys-include directory.\n+\t(deduced.h, stmp-fixproto): Quote SYSTEM_HEADER_DIR properly.\n+\t(install-mkheaders): Likewise.\n+\t* gcc.c (target_system_root): New variable.\n+\t(add_sysrooted_prefix): New function.\n+\t(process_command): Recompute run-time target_system_root from\n+\tgcc_exec_prefix, keeping it unchanged if the relocated sysroot\n+\tdoes not exist.\n+\t(do_spec_1): Process 'R' spec.\n+\t(main): Add md_exec_prefix to exec_prefixes regardless of\n+\tstartfile_prefix_spec.  Use add_sysrooted_prefix for\n+\tstartfile_prefixes, and don't skip the default ones when cross\n+\tcompiling with sysroot enabled.  Removed unused case of\n+\tnon-absolute standard_startfile_prefix.\n+\t* config/interix.h: Remove the only potential, yet disabled,\n+\toccurrence of non-absolute (empty) standard_startfile_prefix.\n+\t* config/sh/linux.h (LIB_SPEC): Add -rpath-link in non-static\n+\tlinking.\n+\t* config/mips/linux.h (LIB_SPEC): Define as in sh/linux.h.\n+\t* doc/install.texi (--with-sysroot): Document.\n+\t(--with-headers, --with-libs): Deprecate.\n+\n 2002-10-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t    Mark Mitchell  <mark@codesourcery.com>\n \n@@ -3041,6 +3915,11 @@ Sat Oct 19 10:46:52 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/i386/i386.h (TARGET_64BIT): Expand to a compile-time\n \tconstant if building libgcc2.\n \n+Thu Oct 17 17:40:05 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (pentium4_cost): Fix according to Intel recommendations.\n+\t(ix86_memory_move_cost): Fix for 64bit compilation.\n+\n 2002-10-17  Roger Sayle  <roger@eyesopen.com>\n \n \t* doc/c-tree.texi: Update description of COND_EXPR tree nodes.\n@@ -3132,6 +4011,12 @@ Wed Oct 16 15:01:29 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/s390/s390.c (s390_function_profiler): Use\n \tASM_GENERATE_INTERNAL_LABEL instead of LPREFIX.\n \n+2002-10-15  Eric Christopher  <echristo@redhat.com>\n+\n+\t* stor-layout.c (layout_type): Call GET_MODE_BITSIZE once.\n+\t* java/parse.y (obtain_incomplete_type): Make pointer\n+\tptr_mode.\n+\n 2002-10-15  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (real_to_decimal): Accept BUF_SIZE and CROP_TRAILING_ZEROS\n@@ -3221,6 +4106,11 @@ Tue Oct 15 16:51:04 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* loop.c (loop_regs_scan): Mark registers used for function\n \targument passing as MAY_NOT_OPTIMIZE.\n \n+Mon Oct 14 19:22:19 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcov-io.h (gcov_info): Fix type.\n+\t* profile.c (create_profiler): Fix type mismatch.\n+\n Mon Oct 14 20:33:12 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (movv2di_internal): New pattern.\n@@ -3341,8 +4231,21 @@ Mon Oct 14 11:35:49 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n 2002-10-13  Richard Henderson  <rth@redhat.com>\n \n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Reject\n+\tindirect sibcalls when regparm >= 3.\n+\n+\t* config/i386/i386.c (sibcall_insn_operand): New.\n+\t* config/i386/i386.h (PREDICATE_CODES): Update.\n+\t* config/i386/i386-protos.h: Update.\n+\t* config/i386/i386.md (sibcall_1, sibcall_value_1): Use it.\n+\n \t* rtl.c (shallow_copy_rtx): Use memcpy for the entire node.\n \n+2002-10-12  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation) [ASHIFTRT]: Optimize\n+\tarithmetic right shifts of ~0 during RTL simplifications.\n+\n 2002-10-12  Neil Booth  <neil@daikokuya.co.uk>\n \n \tPR preprocessor/7862\n@@ -3360,6 +4263,37 @@ Mon Oct 14 11:35:49 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* pdp11.md (movdi): Use offsetable memory for floating store.\n \t(lshrsi3, negsi2): Delete irrelevant comment.\n \n+2002-10-11  Andreas Bauer  <baueran@in.tum.de>\n+\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Allow\n+\tindirect calls to be sibcall optimized.\n+\t* config/i386/i386.md (sibcall_1): New.\n+\t(call_1): Add no-sibcalls condition.\n+\t(sibcall_value_1): New.\n+\t(call_value_1): Add no-sibcalls condition.\n+\n+2002-10-11  Eric Christopher  <echristo@redhat.com>\n+\n+       * output.h (default_valid_pointer_mode): Declare.\n+       * varasm.c (default_valid_pointer_mode): Define.\n+       * target-def.h (TARGET_VALID_POINTER_MODE): Use.\n+       * target.h: Ditto.\n+       * tree.c (build_pointer_type_for_mode): New function.\n+       (build_pointer_type): Use.\n+       (build_reference_type_for_mode): New function.\n+       (build_reference_type): Use.\n+       * tree.h: Declare new functions.\n+       * c-common.c (handle_mode_attribute): Use new functions, check\n+       for type.\n+       * stor-layout.c (layout_type): Depend on machine mode for\n+       REFERENCE_TYPE and POINTER_TYPE.\n+       * dwarf2out.c (simple_type_size_in_bits): Move upward in file.\n+       (modified_type_die): Use instead of PTR_SIZE for POINTER_TYPE\n+       and REFERENCE_TYPE.\n+       * config/mips/mips.c (mips_valid_pointer_mode): New function.\n+       (TARGET_VALID_POINTER_MODE): Use and define.\n+       * config/mips/mips-protos.h (mips_valid_pointer_mode): Declare.\n+\n 2002-10-11  Geoffrey Keating  <geoffk@apple.com>\n \n \t* cse.c (mention_regs): Set SUBREG_TICKED to the register number,\n@@ -3406,6 +4340,23 @@ Fri Oct 11 10:56:17 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* emit-rtl.c (gen_lowpart_common): When asked to make a vector from\n \tan integer, use simplify_gen_subreg.\n \n+2002-10-10  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* calls.c (flags_from_decl_or_type): Make extern.\n+\t(ECF_*): Move ...\n+\t* rtl.h (ECF_*): ... here.\n+\t(flags_from_decl_or_type): Declare.\n+\n+2002-10-10  Roger Sayle  <roger@eyesopen.com>\n+\t    Nathan Sidwell <nathan@codesourcery.com>\n+\n+\t* fold-const.c (fold) [RSHIFT_EXPR]: Optimize arithmetic right\n+\tshifts of the form -1 >> x.\n+\n+Thu Oct 10 16:52:55 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgcleanup.c (insn_match_p): Verify sibcall flag for calls to.\n+\n 2002-10-10  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* extend.texi (Vector Extensions): Remove comment about single\n@@ -3474,6 +4425,13 @@ Thu Oct 10 17:08:30 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* toplev.c (rest_of_compilation): Revert opt/2960 change.\n \n+Wed Oct  9 21:18:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (*_cost): Add branch costs.\n+\t(override_options): set ix86_branch_cost.\n+\t(ix86_expand_int_movcc): Use BRANCH_COST.\n+\t* i386.h (costs): Add branch_cost.\n+\n 2002-10-09  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR c/7353\n@@ -3552,6 +4510,33 @@ Wed Oct  9 15:54:49 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* doc/invoke.texi (Option Summary): List\n \t-Wmissing-declarations as a C only option.\n \n+2002-10-08  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (fold) [LROTATE_EXPR, RROTATE_EXPR]: Optimize\n+\tleft and right rotates of ~0, i.e. integer_all_onesp (arg0).\n+\t[LSHIFT_EXPR, RSHIFT_EXPR]: Optimize shifts and rotates of zero.\n+\n+Tue Oct  8 01:24:19 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (x86_sse_partial_reg_dependency, x86_sse_partial_regs,\n+\tx86_sse_typeless_stores, x86_sse_load0_by_pxor): New global\n+\tvariables.\n+\t(safe_vector_operand): Update sse_clrv4sf call.\n+\t(ix86_expand_buildin): Likewise\n+\t* i386.h (x86_sse_partial_reg_dependency, x86_sse_partial_regs,\n+\tx86_sse_typeless_stores, x86_sse_load0_by_pxor): Declare.\n+\t(TARGET_SSE_PARTIAL_REG_DEPENDENCY, TARGET_SSE_PARTIAL_REGS,\n+\tTARGET_SSE_TYPELESS_STORES, TARGET_SSE_TYPELESS_LOAD0): New\n+\tmacros.\n+\t* i386.md (movsf*, movdf*, movti, movv4sf, movv2df, movv16qi, movv8hi,\n+\tmovv4si):  Obey the new flags.\n+\t(floatsi2sf, floatdi2sf, truncatedf2sf): Emit extra load of 0 to avoid\n+\treformating penalty.\n+\t(anddf, cmov patterns): Avoid reformating by first converting.\n+\t(sse_cvtsd2ss): Fix predicate.\n+\t(sse2_clrti): Fix mode,\n+\t(sse_clrv4sf): Avoid unspec.\n+\n 2002-10-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/t-linux64 (MULTILIB_OPTIONS): Remove\n@@ -3615,6 +4600,20 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/c4x/c4x.c (c4x_print_operand): Enlarge buffer\n \tfor REAL_VALUE_TO_DECIMAL output.\n \n+2002-10-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* cse.c (fixed_base_plus_p): Turn FIXED_BASE_PLUS_P into a\n+\tfunction; cleanup PLUS case by using recursion.  Update all users.\n+\t(NONZERO_BASE_PLUS_P): Remove.\n+\t(find_comparison_args): Use rtx_addr_can_trap_p instead.\n+\t(fold_rtx): Use nonzero_address_p.\n+\t* rtl.h (nonzero_address_p): Declare.\n+\t* rtlanal.c (rtx_varies_p): Handle ADDRESSOF.\n+\t(rtx_addr_can_trap_p): Likewise.\n+\t(nonzero_address_p): New.\n+\t* simplify-rtx.c (NONZERO_BASE_PLUS_P): Remove.\n+\t(simplify_relational_operation): Use nonzero_address_p.\n+\n 2002-10-07  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_override_options): Set\n@@ -3658,6 +4657,10 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/fp-bit.c (EXTENDED_FLOAT_STUBS): Flush out all XF/TFmode\n \tentry points; use void return value and argument list.\n \n+2002-10-06  Andreas Bauer  <baueran@in.tum.de>\n+\n+\t* calls.c (expand_call): Fix function-is-volatile check.\n+\n 2002-10-05  Naohiko Shimizu <nshimizu@keyaki.cc.u-tokai.ac.jp>\n \n \t* t-pdp11: Add MULTILIB support for msoft-float.\n@@ -3717,6 +4720,12 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* cppinit.c (init_standard_includes, parse_option): Use strncmp.\n \t* c-opts.c (find_opt): Similarly.\n \n+Sat Oct  5 22:48:06 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* athlon.md: rewrite to DFA.\n+\t* i386 (ix86_adjust_cost): Drop memory latency code.\n+\t(ia32_use_dfa_pipeline_interface): Return true for Athlon.\n+\n 2002-10-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c (set_multilib_dir): Don't access *end.\n@@ -3730,6 +4739,11 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tPass all MULTILIB_* variables to genmultilib even if\n \t--disable-multilib but MULTILIB_OSDIRNAMES is not empty.\n \n+2002-10-04  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.c (process_command): Set .validated for -pipe.  Correct\n+\tgrammar in comment.\n+\n 2002-10-04  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/inclhack.def(hpux11_abs):  use format fix\n@@ -3795,6 +4809,11 @@ Sat Oct  5 19:42:45 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(do_divide): Apply sticky bit after normalization.\n \t(real_to_decimal, real_to_hexadecimal): Fix sign of Inf and NaN.\n \n+2002-10-03  Andreas Bauer  <baueran@in.tum.de>\n+\n+\t* doc/tm.texi (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): New.\n+\n 2002-10-03  Andreas Jaeger  <aj@suse.de>\n \n \t* gengtype.c (adjust_field_rtx_def): Cast variables of type size_t\n@@ -3936,6 +4955,39 @@ Thu Oct  3 15:15:00 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* pa-linux.h (FUNCTION_OK_FOR_SIBCALL): Delete macro.\n \t* pa32-linux.h (FUNCTION_OK_FOR_SIBCALL): Define.\n \n+2002-10-02  David Mosberger-Tang  <David.Mosberger@acm.org>\n+\n+\t* unwind.h (_Unwind_GetTextRelBase): Mark _C argument with\n+\tattribute \"unused\".\n+\n+\t* config/t-libunwind: Mention unwind-sjlj.c.\n+\t* unwind-libunwind.c: Change #ifdef __USING_LIBUNWIND_EXCEPTIONS__\n+\tto #ifndef __USING_SJLJ_EXCEPTIONS__.\n+\n+\t* configure.in: Move sjlj-exceptions and --enable-libunwind-exceptions\n+\tbefore inclusion of config.gcc, but after configuring the compiler etc.\n+\tDetermine default value for --enable-libunwind-exceptions based on\n+\twhether the host has a libunwind library (not guaranteed to be correct,\n+\tbut it's a reasonable first guess and can always be overridden with an\n+\texplicit --enable/disable-libunwind-exceptions.\n+\t* config.gcc: For target ia64*-*-linux*, mention t-libunwind as a\n+\ttmake_file when $use_libunwind_exceptions is enabled.\n+\t* Makefile.in: Update comment: LIB2ADDEH is updated not just by\n+\tia64 (e.g., config/t-linux also updates it).\n+\t* gcc.c (init_spec) [USE_LIBUNWIND_EXCEPTIONS]: Mention -lunwind\n+\talong with the shared version of libgcc since the latter requires\n+\tthe former.\n+\t* unwind-libunwind.c: New file.\n+\t* config/t-libunwind: Ditto.\n+\n+2002-10-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* config.gcc: Remove support for vax-*-vms*.\n+\t* config/vax/vms.h: Remove.\n+\t* config/vax/xm-vms.h: Remove.\n+\t* config/vax/vax-protos.h: Remove VMS-specific code.\n+\t* config/vax/vax.c: Remove VMS-specific code.\n+\n 2002-10-02  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/7124\n@@ -3971,6 +5023,51 @@ Wed Oct  2 17:01:36 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/sparc/sparc.md (movdi_insn_sp32_v9): Accept 'e' regs.\n \t(movdi reg/reg split): Match only on sparc32, and v9 when int regs.\n \n+2002-10-01  Andreas Bauer  <baueran@in.tum.de>\n+\n+\t* calls.c (expand_call): Remove the `no indirect check'\n+\tfor sibcall optimization; use function_ok_for_sibcall\n+\ttarget hook; refine check for `function is volatile'.\n+\t(FUNCTION_OK_FOR_SIBCALL): Remove the redefinition.\n+\t* hooks.c (hook_tree_tree_bool_false): New.\n+\t* hooks.h (hook_tree_tree_bool_false): Declare.\n+\t* target-def.h (TARGET_FUNCTION_OK_FOR_SIBCALL): New.\n+\t(TARGET_INITIALIZER): Add it.\n+\t* target.h (struct gcc_target): Add function_ok_for_sibcall.\n+\t* config/alpha/alpha.c: (alpha_function_ok_for_sibcall): New.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/alpha/alpha.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/arm/arm-protos.h: (arm_function_ok_for_sibcall):\n+\tRemove function declaration.\n+\t* config/arm/arm.c: (arm_function_ok_for_sibcall): Make\n+\tfunction static and accept another argument of type `tree'.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/arm/arm.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/frv/frv.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/i386/i386.c: (ix86_function_ok_for_sibcall): New.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/i386/i386.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/pa/pa-linux.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t(TARGET_HAS_STUBS_AND_ELF_SECTIONS): New definition.\n+\t* config/pa/pa.c: (pa_function_ok_for_sibcall): New.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/pa/pa.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/rs6000/rs6000-protos.h: (function_ok_for_sibcall):\n+\tRemove function declaration.\n+\t* config/rs6000/rs6000.c: (rs6000_function_ok_for_sibcall):\n+\tRename function_ok_for_sibcall to rs6000_function_ok_for_sibcall;\n+\trename first argument to `decl'; accept another argument\n+\tof type `tree'; make static.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/rs6000/rs6000.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/sh/sh.c: (sh_function_ok_for_sibcall): New.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/sh/sh.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/sparc/sparc.c: (sparc_function_ok_for_sibcall): New.\n+\t(TARGET_FUNCTION_OK_FOR_SIBCALL): Redefine accordingly.\n+\t* config/sparc/sparc.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\t* config/xtensa/xtensa.h: (FUNCTION_OK_FOR_SIBCALL): Remove.\n+\n 2002-10-01  Roger Sayle  <roger@eyesopen.com>\n \n \t* unroll.c (loop_iterations): Revert 2002-09-08 change.\n@@ -4105,6 +5202,14 @@ Wed Oct  2 17:01:36 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tUse mips_emit_fcc_reload.\n \t(reload_outcc): Duplicate reload_incc.\n \n+2002-09-30  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.c (validate_switches): Handle all new forms of spec\n+\tsyntax introduced recently.  Now returns a char *.\n+\t(validate_all_switches): Repetitive logic broken out to...\n+\t(validate_switches_from_spec): ...here.\n+\t* mklibgcc.in: Don't @-flag commands to generate .oS files.\n+\n 2002-09-30  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* longlong.h: Partially synchronize with GMP-4.1 version:\n@@ -4163,6 +5268,10 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tthat we have a SImode access, and only then if reload hasn't completed;\n \tfor all other cases, use LO_REGS.\n \n+2002-09-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* openbsd.h: Fix typo in last change.\n+\n 2002-09-29  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (real_from_string): Apply sign last.  Tidy exponent handling.\n@@ -4323,6 +5432,22 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(get_shift_alg): Use an enumerated type instead of numbers.\n \t(h8300_shift_needs_scratch_p): Likewise.\n \n+2002-09-26  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* varasm.c (force_data_section): Remove.\n+\t(assemble_constant_align): Likewise.\n+\t* output.h: Remove corresponding prototypes.\n+\n+2002-09-26  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* stmt.c (expand_exit_loop_if_false): Expand a simple conditional\n+\tjump, if the loop to exit is the top of the current nesting stack.\n+\n+2002-09-26  Torbjorn Granlund  <tege@swox.com>\n+\n+\t* libgcc2.c (fixunsdfdi, fixunssfdi): Rewrite, avoiding `long long'\n+\tarithmetic.\n+\n 2002-09-26  David S. Miller  <davem@redhat.com>\n \n \tPR optimization/7335\n@@ -4457,6 +5582,21 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config.gcc: Add x prefix to v850e case for handling\n \t--with-cpu=v850e.\n \n+2002-09-25  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.c (input_suffix_matches, switch_matches,\n+\tmark_matching_switches, process_marked_switches,\n+\tprocess_brace_body): New functions - split from handle_braces.\n+\t(handle_braces): Rewrite; handle %{S:X;T:Y;:D} syntax; accept\n+\tand ignore whitespace in more places.\n+\t(specs documentation comment): Document %{S:X;T:Y;:D}.\n+\tClarify other %{...} docs.\n+\t* doc/invoke.texi: Document %{S:X;T:Y;:D}.  Clarify other\n+\t%{...} docs.\n+\n+\t* config/arm/aof.h (LINK_SPEC): Change %{ov*,*} to %{ov*}.\n+\t* config/rs6000/sysv4.h: Use N-way choice spec syntax.\n+\n 2002-09-25  David S. Miller  <davem@redhat.com>\n \n \tPR target/7842\n@@ -4476,6 +5616,11 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* config/mips/mips.h (TARGET_MIPS4100): Add missing bracket.\n \n+2002-09-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* profile.c (end_branch_prob): Only look for __gcov_init on\n+\tweak-enabled native compilers.\n+\n 2002-09-24  Denis Chertykov  <denisc@overta.ru>\n \n \t* config/ip2k/ip2k.c (function_epilogue): Fix wrong numbers in\n@@ -4548,6 +5693,38 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/stormy16/stormy16.h: Likewise.\n \t* config/vax/vax.h: Likewise.\n \n+2002-09-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/alpha/alpha.h: Remove commented-out macro\n+\tdefinitions of HAVE_{POST|PRE}_{INC|DEC}REMENT.\n+\t* config/avr/avr.h: Likewise.\n+\t* config/d30v/d30v.h: Likewise.\n+\t* config/dsp16xx/dsp16xx.h: Likewise.\n+\t* config/i370/i370.h: Likewise.\n+\t* config/i386/i386.h: Likewise.\n+\t* config/i960/i960.h: Likewise.\n+\t* config/m68k/m68k.h: Likewise.\n+\t* config/m88k/m88k.h: Likewise.\n+\t* config/mips/mips.h: Likewise.\n+\t* config/ns32k/ns32k.h: Likewise.\n+\t* config/pdp11/pdp11.h: Likewise.\n+\t* config/romp/romp.h: Likewise.\n+\t* config/rs6000/rs6000.h: Likewise.\n+\t* config/s390/s390.h: Likewise.\n+\t* config/sh/sh.h: Likewise.\n+\t* config/sparc/sparc.h: Likewise.\n+\t* config/stormy16/stormy16.h: Likewise.\n+\t* config/vax/vax.h: Likewise.\n+\n+2002-09-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* function.c (push_temp_slots_for_block): Remove.\n+\t(push_temp_slots_for_target): Likewise.\n+\t(get_target_temp_slot_level): Likewise.\n+\t(set_target_temp_slot_level): Likewise.\n+\t(get_first_block_beg): Likewise.\n+\t* function.h: Remove corresponding prototypes.\n+\n 2002-09-23  Zack Weinberg  <zack@codesourcery.com>\n \n \t* version.c (version_string): Now const char[].\n@@ -4611,6 +5788,13 @@ Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* doc/invoke.texi (-fabi-version): Document it.\n \t(-Wabi): Add information about bit-fields in unions.\n \n+2002-09-22  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expr.c (STORE_BY_PIECES_P): New target macro.\n+\t(can_store_by_pieces, store_by_pieces): Use STORE_BY_PIECES_P\n+\tinstead of MOVE_BY_PIECES_P.\n+\t* doc/tm.texi: Document this new macro.\n+\n 2002-09-22  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/mips/netbsd.h (SUBTARGET_ASM_SPEC): Always pass -KPIC\n@@ -5004,6 +6188,53 @@ Tue Aug 27 20:07:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* combine.c (make_extraction): Don't create\n \tinvalid subreg.\n \n+2002-09-19  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree.c (integer_nonzerop): New predicate for nonzero integers.\n+\t* tree.h (integer_nonzerop): Add function prototype.\n+\t* stmt.c (expand_end_loop):  Don't rotate the loop when there\n+\tare no instructions in the test, i.e. the loop is unconditional.\n+\t(expand_exit_loop_if_false):  Optimize RTL generation of loop\n+\ttests when the condition is always true or always false.\n+\t* c-semantics.c (genrtl_do_stmt):  Optimize RTL generation of\n+\tdo-loops when the condition is always true.\n+\t(genrtl_for_stmt):  Optimize RTL generation of for-loops when\n+\tthe for-expression is empty.\n+\n+2002-09-19  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.c (use_pipes): New flag.\n+\t(process_command): Set it.  Adjust check for -pipe conflicting\n+\twith -time or -save-temps.\n+\t(do_spec_1): Use it.  Handle %|SUFFIX, %mSUFFIX, and\n+\t%<SWITCH.  Drop %| (without a SUFFIX).\n+\t(handle_braces): Drop %{<SWITCH}, %{^SWITCH}, %{|...}.\n+\t(give_switch): Third argument eliminated.\n+\t(invoke_as, @assembler_with_cpp spec): Use %|.s or %m.s\n+\tdepending on AS_NEEDS_DASH_FOR_PIPED_INPUT.\n+\t(specs documentation comment): Update.\n+\n+\t* config/netbsd-aout.h, config/openbsd.h, config/ptx4.h,\n+\tconfig/svr4.h, config/i386/freebsd-aout.h,\n+\tconfig/m68k/netbsd-elf.h, config/m68k/netbsd.h,\n+\tconfig/m68k/openbsd.h, config/mips/openbsd.h,\n+\tconfig/sparc/sparc.h: Define AS_NEEDS_DASH_FOR_PIPED_INPUT\n+\tinstead of putting %| into ASM_SPEC and/or ASM_FINAL_SPEC.\n+\t* config/avr/avr.h: Delete do-nothing ASM_FINAL_SPEC.\n+\t* config/cris/cris.h: Update comment.\n+\n+\t* ada/lang-specs.h: Use %(invoke_as).  Straighten out\n+\terror messages.  Don't use %{^SWITCH}.\n+\t* ada/misc.c (gnat_decode_option): Handle -I with a\n+\tseparate argument.\n+\n+\t* f/lang-specs.h: Use %| and %m.\n+\t* java/jvspec.c: Use %m and %(invoke_as).  Change all\n+\tuses of %{<SWITCH} to %<SWITCH.\n+\n+\t* doc/invoke.texi: Update documentation of specs.\n+\t* doc/tm.texi: Document AS_NEEDS_DASH_FOR_PIPED_INPUT.\n+\n 2002-09-19  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (addr_generation_dependency_p): Handle SUBREG\n@@ -5014,6 +6245,22 @@ Tue Aug 27 20:07:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t\"*zero_extendqihi2_31\"): New insns.\n \t(\"*zero_extendqihi2_64\"): Do not clobber CC.\n \n+2002-09-18  Devang Patel  <dpatel@apple.com>\n+\n+\t* cp/cp-tree.h: New prototype for walk_vtables().\n+\t* cp/decl.c (walk_vtables_r): New function.\n+\t(struct cp_binding_level): Add new members, namespaces,\n+\tnames_size and vtables.\n+\t(add_decl_to_level): Add decl in namespaces or vtables\n+\tchain, if conditions match.\n+\t(walk_vtables): New function.\n+\t(walk_namespaces_r): Travers separate namespace chain\n+\tfor namespace decls.\n+\t(wrapup_globals_for_namespace): Use names_size instead\n+\tof list_length().\n+\t* cp/decl2.c (finish_file): Use walk_vtables() instead of\n+\twalk_globals() to walk vtable decls.\n+\n 2002-09-19  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/ia64/hpux.h (CTORS_SECTION_ASM_OP): New.\n@@ -5111,7 +6358,7 @@ Tue Aug 27 20:07:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tremaining_in_alignment.\n \n \t* doc/tm.texi: (TARGET_MS_BITFIELD_LAYOUT_P): Update.\n-\t(pragma pack): Add paragraph on MSVC bit-field packing.\n+\t(pragma pack): Add paragraph on MSVC bitfield packing.\n \n 2002-09-18  Richard Earnshaw  (reanrsha@arm.com)\n \n@@ -5141,6 +6388,17 @@ Tue Aug 27 20:07:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/rs60000/rs6000.c (SPE_VECTOR_MODE): Include V1DImode.\n \t* config/rs6000/spe.md (movv1di, movv1di_internal): New patterns.\n \n+2002-09-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* function.c (max_parm_reg_num): Remove.\n+\t* stmt.c (in_control_zone_p, stmt_loop_nest_empty,\n+\tdrop_through_at_end_p, move_cleanups_up,\n+\texpand_end_case_dummy, case_index_expr_type): Likewise.\n+\t* stor-layout.c (pos_from_byte): Likewise.\n+\t* tree.c (chain_member_value, chain_member_purpose, listify,\n+\ttree_int_cst_msb, index_type_equal): Likewise.\n+\t* tree.h: Remove prototypes for unused functions.\n+\n 2002-09-17  Zack Weinberg  <zack@codesourcery.com>\n \n \t* ABOUT-GCC-NLS: Remove reference to enquire, and out-of-date\n@@ -5223,6 +6481,36 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* cfgrtl.c (flow_delete_block_noexpunge): Delete orphaned\n \tNOTE_INSN_LOOP_CONT notes when deleting basic blocks.\n \n+2002-09-16  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* config/mips/mips.c (save_restore_insns): Remove unused variable.\n+\t* gcc.c (make_relative_prefix): Likewise.\n+\t* loop.c (check_final_value): Likewise.\n+\t* jump.c (init_label_info): Remove return value.\n+\t* cse.c (prev_insn): Move variable between #ifdef HAVE_cc0 ... #endif.\n+\n+2002-09-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* dsp16xx.h (ASM_FORMAT_PRIVATE_NAME): Delete.\n+\t(ASM_PN_FORMAT): Define.\n+\n+2002-09-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha.h, alpha/vms.h, arc.h, arm/aof.h, arm/aout.h, avr.h,\n+\tc4x.h, cris.h, d30v.h, fr30.h, frv.h, h8300.h, i370.h, i386.h,\n+\ti960.h, ia64.h, ip2k.h, m32r.h, m68hc11.h, m68k/3b1.h,\n+\tm68k/hp320.h, m68k.h, m68k/mot3300.h, m68k/sgs.h, m68k/tower-as.h,\n+\tm88k.h, mcore.h, mips.h, mmix.h, mn10200.h, mn10300.h, ns32k.h,\n+\tpa.h, pdp11.h, romp.h, rs6000.h, s390/linux.h, sh.h, sparc.h,\n+\tstormy16.h, v850.h, vax.h, xtensa.h (ASM_FORMAT_PRIVATE_NAME):\n+\tDelete.\n+\t* alpha/vms.h, h8300.h, i370.h, ia64.h, m68k/3b1.h, m68k/hp320.h,\n+\tm68k/mot3300.h, m68k/sgs.h, m68k/tower-as.h, mmix.h, mn10200.h,\n+\tmn10300.h, pa.h, v850.h (ASM_PN_FORMAT): Define.\n+\n+\t* defaults.h (ASM_PN_FORMAT, ASM_FORMAT_PRIVATE_NAME): Define.\n+\t* doc/tm.texi (ASM_FORMAT_PRIVATE_NAME): Update documentation.\n+\n 2002-09-16  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (emit_block_move): Set memory block size as appropriate\n@@ -5518,6 +6806,11 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* reload.h: Likewise.\n \t* ssa.c: Likewise.\n \n+2002-09-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (vmsdbgout.o): Depend on $(TARGET_H)\n+\t* vmsdbgout.c: Include \"target.h\".\n+\n 2002-09-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* ChangeLog: Follow spelling conventions.\n@@ -5645,6 +6938,23 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* config/sparc/vxsim.h: Likewise.\n \t* config/sparc/vxsparc64.h: Likewise.\n \n+2002-09-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-lex.c (cb_ident): Mark variable with ATTRIBUTE_UNUSED.\n+\t* collect2.c (ignore_library, aix_std_libs): Move into the context\n+\twhere it is used.\n+\t* m68hc11.c (m68hc11_autoinc_compatible_p): Delete prototype.\n+\t(autoinc_mode, m68hc11_make_autoinc_notes): Add prototypes.\n+\t* m88k.c (output_call): Wrap variables with macro controlling use.\n+\t* rs6000.md: Likewise.  Const-ify variable.\n+\t* sh.h (ASM_OUTPUT_LABELREF): Likewise.\n+\t* final.c (only_leaf_regs_used): Likewise.\n+\t* regrename.c (maybe_mode_change): Mark parameter with\n+\tATTRIBUTE_UNUSED.\n+\t* reload.c (find_valid_class): Likewise.  Likewise for variable.\n+\t(find_reloads_address_1): Likewise.\n+\t* varasm.c (weak_finish): Wrap variable with macro controlling use.\n+\n 2002-09-14  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n \n \t* config/avr/avr.c (output.h): Move after inclusion of tree.h.\n@@ -5731,6 +7041,13 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* gcc/config/avr/avr.h: Set default options for C++ for avr.\n \n+2002-09-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* stmt.c (struct nexting): Remove unused alt_end_label field.\n+\t(expand_start_loop): Delete initialization of alt_end_label.\n+\t(expand_start_null_loop): Likewise.\n+\t(expand_exit_loop_if_false): Delete updating of alt_end_label.\n+\n 2002-09-13  Richard Henderson  <rth@redhat.com>\n \n \t* Makefile.in (toplev.o): Depend on real.h.\n@@ -5930,6 +7247,70 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t(\"doolop_si\", \"*doloop_si_long\", \"doloop_di\", \"*doloop_di_long\",\n \tassociated splitters): New.\n \n+2002-09-11  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* genattrtab.c (simplify_cond): Remove unused variable(s).\n+\t* global.c (record_conflicts): Likewise.\n+\t* jump.c (rebuild_jump_labels): Likewise.\n+\t* loop.c (scan_loop, check_final_value): Likewise.\n+\t* ra-colorize.c (colorize_one_web, assign_colors): Likewise.\n+\t* reload1.c (eliminate_regs_in_insn, do_input_reload): Likewise.\n+\t* rtlanal.c (reg_set_p): Likewise.\n+\t* stmt.c (expand_asm_operands, expand_decl): Likewise.\n+\t* genautomata.c (empty_reserv): Remove.\n+\t* loop.c (max_luid): Likewise.\n+\t* sched-rgn.c (bitlst_table_size): Likewise.\n+\n+2002-09-11  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tReimplement gcov format.\n+\t* gcov-io.h: Replace.\n+\t* gcov.c: Reimplement.\n+\t* gcov-iov.c: New file.\n+\t* gcov-dump.c: New file.\n+\t* libgcc2.c (L_bb): Replace with ...\n+\t(L_gcov): ... this.\n+\t(struct bb_function_info, struct bb): Remove.\n+\t(inhibit_libc): Never inhibit.\n+\t(gcov_list, gcov_crc): New static variables.\n+\t(gcov_version_mismatch): New static function.\n+\t(__bb_exit_func): Renamed to ...\n+\t(__gcov_exit): ... here. Made static. Reimplement.\n+\t(__gcov_init_func): Rename to ...\n+\t(__gcov_init): ... here. Check version, update crc.\n+\t(__bb_fork_func): Rename to ...\n+\t(__gcov_flush): ... here.\n+\t* libgcc2.h (struct bb, __bb_exit_func, __bb_init_func,\n+\t__bb_fork_func, gcov_type, __bb_find_arc_counters): Remove.\n+\t* calls.c (expand_call): Call __gcov_flush.\n+\t* profile.c (bb_file, last_bb_file_name): Remove.\n+\t(bbg_file_name): New global variable.\n+\t(output_gcov_string): Remove.\n+\t(get_exec_counts): Reimplement.\n+\t(branch_prob): Reimplement gcov file writing.\n+\t(init_branch_prob): Create bbg_file_name, don't create\n+\tbb_file_name.\n+\t(end_branch_prob): Adjust. Don't remove counter file when\n+\tinstrumenting ourselves.\n+\t(create_profiler): Adjust.\n+\t* doc/gcov.texi (Gcov Data Files): Remove detailed specification,\n+\tpoint to gcov-io.h.\n+\t* Makefile.in (LANGUAGES): Add gcov-dump.\n+\t(coverageexts): Remove .bb.\n+\t(STAGESTUFF): Add gcov-dump.\n+\t(LIB2FUNCS_ST): Replace _bb with _gcov.\n+\t(profile.o): Depend on gcov-iov.h.\n+\t(final.o): Don't depend on profile.h, gcov.h.\n+\t(gcov.o): Depend on gcov-iov.h.\n+\t(gcov-iov.o): New target.\n+\t(gcov-iov): New target.\n+\t(gcov-iov.h): New target.\n+\t(gcov-dump.o): New target.\n+\t(GCOV_DUMP_OBJS): New variable.\n+\t(gcov-dump): New target.\n+\t(distclean): Remove coverageexts.\n+\t(stage1): Remove coverageexts.\n+\n 2002-09-11  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* fold-const.c (make_range): Only narrow to signed range if\n@@ -6008,6 +7389,12 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* sysv4.h (TARGET_SECTION_TYPE_FLAGS): Define.\n \t* xcoff.h (TARGET_SECTION_TYPE_FLAGS): Define.\n \n+2002-09-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* h8300.md: Fix signed/unsigned warnings.\n+\t* mcore.md: Likewise.\n+\t* mn10300.c (mask_ok_for_mem_btst): Likewise.\n+\n 2002-09-09  Per Bothner  <per@bothner.com>\n \n \t* print-tree.c (print_node):  In a STRING_CST, escape non-ascii\n@@ -6084,6 +7471,34 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t(function_ok_for_sibcall): Use binds_local_p.  Respect longcall\n \tattributes.\n \n+2002-09-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* basic_block.h (gcov_type): Explain why it is signed.\n+\t* final.c: Don't include profile.h.\n+\t(struct function_list, functions_head, functions_tail,\n+\tend_final): Moved to profile.c\n+\t(final): Move arc chaining code to profile.c.\n+\t* function.c (prepare_function_start): Remove duplicate line.\n+\t* output.h (end_final): Remove prototype.\n+\t* predict.c (estimate_loops_at_level): Use gcov_type.\n+\t* profile.c (struct function_list, functions_head,\n+\tfunctions_tail): Moved from final.c\n+\t(need_func_profiler): Remove.\n+\t(instrument_edges): Don't set need_func_profiler.\n+\t(get_exec_counts): Avoid signed/unsigned warning.\n+\t(compute_checksum): Use crc32.\n+\t(branch_prob): Adjust. Chain onto functions_head.\n+\t(init_branch_prob): Absorb init_edge_profiler.\n+\t(init_edge_profiler): Remove.\n+\t(create_profiler): Moved and renamed from final.c:end_final.\n+\tEmit data and constructor.\n+\t(output_func_start_profiler): Remove.\n+\t* profile.h (struct profile_info): checksum is unsigned.\n+\t* rtl.h (output_func_start_profiler): Remove prototype.\n+\t(create_profiler): Declare.\n+\t* toplev.c (compile_file): Call create_profiler, if instrumenting\n+\tarcs. Don't call end_final.\n+\n 2002-09-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fr30.c (fr30_print_operand): Fix bug in output of CONST_DOUBLE.\n@@ -6181,6 +7596,10 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* config/h8300/h8300.md (udivmodqi4): Enable on H8/300.\n \t(anonymous pattern): Likewise.\n \n+2002-09-07  Igor Shevlyakov <igor@microunity.com>\n+\n+\t* machmode.def: Add modes for half-float vectors.\n+\n 2002-09-07  Scott Snyder  <snyder@fnal.gov>\n \n \tPR target/7374\n@@ -6412,6 +7831,32 @@ Thu Sep  5 16:27:47 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/h8300/h8300.c (asm_file_start): Add a missing\n \tsemicolon.\n \n+2002-09-04  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* c-typeck.c (build_function_call): Remove unused variable(s).\n+\t(build_c_cast): Likewise.\n+\t* calls.c (rtx_for_function_call): Likewise.\n+\t* cfglayout.c (duplicate_insn_chain): Likewise.\n+\t* cfgloop.c (flow_loop_nodes_find): Likewise.\n+\t* cfgrtl.c (split_edge): Likewise.\n+\t* df.c (df_ref_create): Likewise.\n+\t* except.c (expand_end_catch): Likewise.\n+\t* expr.c (emit_push_insn, store_constructor, expand_expr): Likewise.\n+\t* function.c (emit_return_into_block): Likewise.\n+\t(reposition_prologue_and_epilogue_notes): Likewise.\n+\t* gengtype.c (get_file_basename, write_gc_structure_fields): Likewise.\n+\t* combine.c (subst_prev_insn, need_refresh): Remove.\n+\t* dwarf2out.c (primary_filename): Remove.\n+\t* final.c (new_block): Remove.\n+\t* gcse.c (orig_bb_count): Remove.\n+\n+2002-09-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* dsp16xx-protos.h (dsp16xx_compare_gen): Change to bool.\n+\t* dsp16xx.c (dsp16xx_compare_gen): Likewise.\n+\t* dsp16xx.md: Treat dsp16xx_compare_gen as a bool.  Call functions\n+\tdirectly instead of using a function pointer.\n+\n 2002-09-04  Krister Walfridsson  <cato@df.lth.se>\n \n \t* config/i386/i386.h (GOT_SYMBOL_NAME): Define.\n@@ -6605,6 +8050,25 @@ Wed Sep  4 11:22:14 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.md (mperm_w_little, mperm_w_big): Supply mode for zero_extract.\n \n+2002-09-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.c (build_function_call_expr): Remove prototype, export\n+\tas non-static and add a comment above function definition.\n+\t(builtin_mathfn_code): New function to check for math builtins.\n+\t(fold_builtin): Optimize sqrt(0.0) as 0.0, sqrt(1.0) as 1.0,\n+\texp(0.0) as 1.0, and log(1.0) as 0.0.  Optimize exp(log(x)) and\n+\tlog(exp(x)) as x.  Optimize sqrt(exp(x)) as exp(x/2.0) and\n+\tlog(sqrt(x)) as log(x)/2.0.\n+\n+\t* tree.h: Prototype build_function_call_expr and builtin_mathfn_code\n+\tin new \"builtins.c\" section.  Place the build_range_type prototype\n+\twith the other prototypes from \"tree.c\".\n+\n+\t* fold-const.c (fold) [ABS_EXPR]: Fold fabs(sqrt(x)) as sqrt(x)\n+\tand fabs(exp(x)) as exp(x).  [MULT_EXPR]: Fold sqrt(x)*sqrt(y)\n+\tas sqrt(x*y) and exp(x)*exp(y) as exp(x+y). [RDIV_EXPR]: Fold\n+\tx/exp(y) as x*exp(-y).\n+\n 2002-09-03  David Edelsohn  <edelsohn@gnu.org>\n \n \t* varasm.c (default_section_type_flags): Append _1 to name with\n@@ -6752,6 +8216,119 @@ Tue Sep  3 11:32:14 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* expr.c (expand_expr): Remove extraneous comment and code.\n \n+2002-09-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* stor-layout (finish_builtin_struct): Renamed and moved from c++\n+\tfrontend. Take chain of fields. Allow NULL alignment type.\n+\t* tree.h (finish_builtin_struct): Declare.\n+\n+2002-09-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* config/alpha/alpha.c config/alpha/alpha.h config/alpha/alpha.md\n+\tconfig/alpha/elf.h config/alpha/unicosmk.h config/alpha/vms.h\n+\tconfig/arc/arc.c config/arc/arc.h config/arm/aout.h\n+\tconfig/arm/arm.c config/arm/arm.h config/arm/arm.md\n+\tconfig/avr/avr.h config/d30v/d30v.h config/dbxcoff.h\n+\tconfig/dbxelf.h config/elfos.h config/fr30/fr30.h config/frv/frv.h\n+\tconfig/i386/i386.c config/i386/i386.md config/i386/sco5.h\n+\tconfig/ia64/ia64.h config/ip2k/ip2k.h config/m68hc11/m68hc11.md\n+\tconfig/m68k/hp320.h config/m68k/m68k.c config/m68k/m68k.md\n+\tconfig/m68k/mot3300.h config/m68k/sgs.h config/m68k/tower-as.h\n+\tconfig/m88k/m88k.c config/m88k/m88k.h config/mcore/mcore-pe.h\n+\tconfig/mcore/mcore.c config/mips/mips.c config/mips/mips.h\n+\tconfig/ns32k/ns32k.md config/pa/pa-linux.h config/pa/pa.c\n+\tconfig/pa/pa.h config/pa/pa.md config/romp/romp.h\n+\tconfig/rs6000/linux64.h config/rs6000/lynx.h\n+\tconfig/rs6000/rs6000.c config/rs6000/sysv4.h config/rs6000/xcoff.h\n+\tconfig/s390/s390.c config/s390/s390.md config/sh/sh.c\n+\tconfig/sparc/sparc.c config/sparc/sysv4.h\n+\tconfig/stormy16/stormy16.h dbxout.c defaults.h dwarf2out.c\n+\tdwarfout.c except.c final.c varasm.c vmsdbgout.c: Replace\n+\tASM_OUTPUT_INTERNAL_LABEL macro with a call to the target hook.\n+\n+\t* doc/tm.texi: Update docs.\n+\t* default.h (ASM_OUTPUT_INTERNAL_LABEL): Don't define.\n+\t* system.h (ASM_OUTPUT_INTERNAL_LABEL): Poison.\n+\n+2002-08-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (sdbout.o, insn-output.o): Depend on $(TARGET_H).\n+\t* arc.c (arc_internal_label): New function.\n+\t(TARGET_ASM_INTERNAL_LABEL): Set.\n+\t* arc.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* arm.c (arm_internal_label): New function.\n+\t(TARGET_ASM_INTERNAL_LABEL): Set.\n+\t* arm.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* arm/elf.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* i370.c (i370_internal_label): New function.\n+\t(TARGET_ASM_INTERNAL_LABEL): Set.\n+\t* i370.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* m68k/hp320.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* m68k.c (m68k_hp320_internal_label): New function.\n+\t(TARGET_ASM_INTERNAL_LABEL): Set.\n+\t* m88k.c (m88k_internal_label): New function.\n+\t(TARGET_ASM_INTERNAL_LABEL): Set.\n+\t* m88k.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* defaults.h (ASM_OUTPUT_INTERNAL_LABEL): Set to target hook.\n+\t* genoutput.c (output_prologue): Include target.h in output file.\n+\t* output.h (default_internal_label): Declare.\n+\t* sdbout.c: Include target.h.\n+\t* target-def.h (TARGET_ASM_INTERNAL_LABEL): Set and add to\n+\tTARGET_ASM_OUT.\n+\t* target.h (internal_label): Add to struct gcc_target.\n+\t* varasm.c (default_internal_label): New function.\n+\n+2002-08-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha.h (ASM_OUTPUT_INTERNAL_LABEL): Delete.\n+\t* avr.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* c4x.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* cris.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* d30v.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* darwin.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* dsp16xx.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* elfos.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* h8300.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/att.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/bsd.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/i386-coff.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/lynx-ng.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/lynx.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i386/sco5.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* i960/i960.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k/3b1.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k/amix.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k/atari.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k/mot3300.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m68k/tower-as.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* m88k.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* mcore.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* mips.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* mmix-protos.h (mmix_asm_output_internal_label): Likewise.\n+\t* mmix.c (mmix_asm_output_internal_label): Likewise.\n+\t* mmix.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* ns32k.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* pa.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* pdp11.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* romp.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* rs6000/xcoff.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sh/coff.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sh/elf.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/freebsd.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/linux.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/linux64.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/netbsd-elf.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/pbd.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/sol2.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* sparc/vxsim.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* stormy16.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* svr3.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t* vax.h (ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\n+\t* defaults.h (ASM_OUTPUT_INTERNAL_LABEL): Define.\n+\n 2002-08-31  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (block_move_libcall_safe_for_call_parm): Fix thinko.\n@@ -6989,6 +8566,11 @@ Fri Aug 30 00:33:37 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \tcode if operand0 and operand5 are the same.\n \t* config/v850/v850-protos.h: Prototype new predicates.\n \n+2002-08-29  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (processor_target_table): Add 405f.\n+\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Likewise.\n+\n 2002-08-28  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-common.c (builtin_define_type_precision): New function.\n@@ -10966,7 +12548,7 @@ Tue Jul 16 19:32:58 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(TARGET_SWITCHES): Add -mieee-compare option.\n \t(OVERRIDE_OPTIONS): 32332 is a subset of\n \t32532. Don't use IEEE_COMPARE -funsafe-math-optimizations.\n-\t(TARGET_SWITCHES): Fix description of bit-field option.\n+\t(TARGET_SWITCHES): Fix description of bitfield option.\n \t* config/ns32k/netbsd.h (TARGET_DEFAULT): Add\n \t-mieee-compare option. Remove 32332 flag.\n "}, {"sha": "29e5101c04cb8b0c285bd1144027724d1dc02176", "filename": "gcc/Makefile.in", "status": "modified", "additions": 569, "deletions": 527, "changes": 1096, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -47,7 +47,7 @@ SUBDIRS =@subdirs@\n # Selection of languages to be made.\n # This is overridden by configure.\n CONFIG_LANGUAGES = @all_languages@\n-LANGUAGES = c gcov$(exeext) $(CONFIG_LANGUAGES)\n+LANGUAGES = c gcov$(exeext) gcov-dump$(exeext) $(CONFIG_LANGUAGES)\n \n # Selection of languages to be made during stage1 build.\n # This is overridden by configure.\n@@ -74,7 +74,7 @@ BOOT_CFLAGS = -g -O2\n # without optimization. The -dumpbase $@ makes sure that the auxilary\n # files end up near the object files.\n COVERAGE_FLAGS = @coverage_flags@\n-coverageexts = .{da,bb,bbg}\n+coverageexts = .{da,bbg}\n \n # The warning flags are separate from BOOT_CFLAGS because people tend to\n # override optimization flags and we'd like them to still have warnings\n@@ -186,7 +186,7 @@ USER_H = $(srcdir)/ginclude/float.h \\\n # The GCC to use for compiling libgcc.a and crt*.o.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include\n+GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include -L$(objdir)/../ld\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n@@ -258,7 +258,7 @@ FIBHEAP_H   = $(srcdir)/../include/fibheap.h\n # Default native SYSTEM_HEADER_DIR, to be overridden by targets.\n NATIVE_SYSTEM_HEADER_DIR = /usr/include\n # Default cross SYSTEM_HEADER_DIR, to be overridden by targets.\n-CROSS_SYSTEM_HEADER_DIR = $(build_tooldir)/sys-include\n+CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@\n \n # autoconf sets SYSTEM_HEADER_DIR to one of the above.\n SYSTEM_HEADER_DIR = @SYSTEM_HEADER_DIR@\n@@ -270,13 +270,19 @@ STMP_FIXINC = @STMP_FIXINC@\n # Test to see whether <limits.h> exists in the system header files.\n LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]\n \n+# Directory for prefix to system directories, for\n+# each of $(system_prefix)/usr/include, $(system_prefix)/usr/lib, etc.\n+TARGET_SYSTEM_ROOT = @TARGET_SYSTEM_ROOT@\n+\n target=@target@\n target_alias=@target_alias@\n xmake_file=@dep_host_xmake_file@\n tmake_file=@dep_tmake_file@\n out_file=$(srcdir)/config/@out_file@\n out_object_file=@out_object_file@\n md_file=$(srcdir)/config/@md_file@\n+tm_file=@tm_file@\n+tm_file_list=@tm_file_list@\n tm_defines=@tm_defines@\n tm_p_file_list=@tm_p_file_list@\n tm_p_file=@tm_p_file@\n@@ -397,7 +403,7 @@ CRTSTUFF_CFLAGS = -O2 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n   -finhibit-size-directive -fno-inline-functions -fno-exceptions \\\n   -fno-zero-initialized-in-bss\n \n-# Additional sources to handle exceptions; overridden on ia64.\n+# Additional sources to handle exceptions; overridden by targets as needed.\n LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde.c \\\n   $(srcdir)/unwind-sjlj.c\n LIB2ADDEHDEP = unwind.inc unwind-dw2-fde.h\n@@ -486,12 +492,12 @@ BUILD_PREFIX = @BUILD_PREFIX@\n # out of the way of the other rules for compiling the same source files.\n BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n # Native compiler for the build machine and its switches.\n-HOST_CC = @HOST_CC@\n-HOST_CFLAGS= @HOST_CFLAGS@ -DGENERATOR_FILE\n+BUILD_CC = @BUILD_CC@\n+BUILD_CFLAGS= @BUILD_CFLAGS@ -DGENERATOR_FILE\n \n # Native linker and preprocessor flags.  For x-fragment overrides.\n-HOST_LDFLAGS=$(LDFLAGS)\n-HOST_CPPFLAGS=$(ALL_CPPFLAGS)\n+BUILD_LDFLAGS=$(LDFLAGS)\n+BUILD_CPPFLAGS=$(ALL_CPPFLAGS)\n \n # Actual name to use when installing a native compiler.\n GCC_INSTALL_NAME = `echo gcc|sed '$(program_transform_name)'`\n@@ -550,19 +556,20 @@ all: all.indirect\n # This tells GNU Make version 3 not to put all variables in the environment.\n .NOEXPORT:\n \n-# GCONFIG_H lists the config files that the generator files depend on, while\n-# CONFIG_H lists the ones ordinary gcc files depend on, which includes\n-# several files generated by those generators.\n-GCONFIG_H = config.h $(host_xm_file_list)\n-HCONFIG_H = hconfig.h $(build_xm_file_list)\n-CONFIG_H = $(GCONFIG_H) insn-constants.h insn-flags.h\n+# GTM_H lists the config files that the generator files depend on,\n+# while TM_H lists the ones ordinary gcc files depend on, which\n+# includes several files generated by those generators.\n+BCONFIG_H = bconfig.h $(build_xm_file_list)\n+CONFIG_H  = config.h  $(host_xm_file_list)\n TCONFIG_H = tconfig.h $(xm_file_list)\n+TM_P_H    = tm_p.h    $(tm_p_file_list)\n+GTM_H     = tm.h      $(tm_file_list)\n+TM_H      = $(GTM_H) insn-constants.h insn-flags.h\n+\n TARGET_H = target.h\n HOOKS_H = hooks.h\n LANGHOOKS_DEF_H = langhooks-def.h $(HOOKS_H)\n TARGET_DEF_H = target-def.h $(HOOKS_H)\n-TM_P_H = tm_p.h $(tm_p_file_list) tm-preds.h\n-\n MACHMODE_H = machmode.h machmode.def @extra_modes_file@\n RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H)\n RTL_H = $(RTL_BASE_H) genrtl.h\n@@ -605,7 +612,7 @@ INTERNAL_CFLAGS = -DIN_GCC @CROSS@\n \n # This is the variable actually used when we compile.\n # If you change this line, you probably also need to change the definition\n-# of HOST_CFLAGS in build-make to match.\n+# of BUILD_CFLAGS in build-make to match.\n ALL_CFLAGS = $(X_CFLAGS) $(T_CFLAGS) \\\n   $(CFLAGS) $(INTERNAL_CFLAGS) $(COVERAGE_FLAGS) $(WARN_CFLAGS) $(XCFLAGS) @DEFS@\n \n@@ -622,7 +629,7 @@ LIBDEPS= $(INTLDEPS) $(LIBIBERTY)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n-HOST_LIBDEPS= $(BUILD_LIBIBERTY)\n+BUILD_LIBDEPS= $(BUILD_LIBIBERTY)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n@@ -633,16 +640,16 @@ SYSLIBS = @GNAT_LIBEXC@\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n-HOST_LIBS = $(BUILD_LIBIBERTY)\n+BUILD_LIBS = $(BUILD_LIBIBERTY)\n \n-HOST_RTL = $(BUILD_PREFIX)rtl.o read-rtl.o $(BUILD_PREFIX)bitmap.o \\\n+BUILD_RTL = $(BUILD_PREFIX)rtl.o read-rtl.o $(BUILD_PREFIX)bitmap.o \\\n \t\t$(BUILD_PREFIX)ggc-none.o\n-HOST_SUPPORT = gensupport.o insn-conditions.o\n-HOST_EARLY_SUPPORT = gensupport.o dummy-conditions.o\n+BUILD_SUPPORT = gensupport.o insn-conditions.o\n+BUILD_EARLY_SUPPORT = gensupport.o dummy-conditions.o\n \n-HOST_PRINT = print-rtl1.o\n-HOST_ERRORS = $(BUILD_PREFIX)errors.o\n-HOST_VARRAY = $(BUILD_PREFIX)varray.o\n+BUILD_PRINT = print-rtl1.o\n+BUILD_ERRORS = $(BUILD_PREFIX)errors.o\n+BUILD_VARRAY = $(BUILD_PREFIX)varray.o\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n@@ -777,7 +784,8 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) cc1obj$(exeext) \\\n  protoize$(exeext) unprotoize$(exeext) \\\n  specs collect2$(exeext) $(USE_COLLECT2) \\\n- gcov$(exeext) *.[0-9][0-9].* *.[si] libcpp.a libbackend.a libgcc.mk \\\n+ gcov-iov$(build_exeext) gcov$(exeext) gcov-dump$(exeext) \\\n+ *.[0-9][0-9].* *.[si] libcpp.a libbackend.a libgcc.mk \\\n  $(LANG_STAGESTUFF)\n \n # Library members defined in libgcc2.c.\n@@ -791,7 +799,7 @@ LIB2FUNCS_2 = _floatdixf _fixunsxfsi _fixtfdi _fixunstfdi _floatditf \\\n     _addvdi3 _subvsi3 _subvdi3 _mulvsi3 _mulvdi3 _negvsi2 _negvdi2 _ctors\n \n # Defined in libgcc2.c, included only in the static library.\n-LIB2FUNCS_ST = _eprintf _bb __gcc_bcmp\n+LIB2FUNCS_ST = _eprintf _gcov __gcc_bcmp\n \n FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \\\n     _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \\\n@@ -850,31 +858,34 @@ Makefile: $(srcdir)/Makefile.in config.status $(srcdir)/version.c \\\n \trm -f config.run\n \n config.h: cs-config.h ; @true\n-hconfig.h: cs-hconfig.h ; @true\n+bconfig.h: cs-bconfig.h ; @true\n tconfig.h: cs-tconfig.h ; @true\n+tm.h: cs-tm.h ; @true\n tm_p.h: cs-tm_p.h ; @true\n \n cs-config.h: Makefile\n-\tTM_DEFINES=\"$(tm_defines)\" \\\n-\tHEADERS=\"$(host_xm_file)\" XM_DEFINES=\"$(host_xm_defines)\" \\\n-\tTARGET_CPU_DEFAULT=\"$(target_cpu_default)\" \\\n+\tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(host_xm_file)\" DEFINES=\"$(host_xm_defines)\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh config.h\n \n-cs-hconfig.h: Makefile\n-\tTM_DEFINES=\"$(tm_defines)\" \\\n-\tHEADERS=\"$(build_xm_file)\" XM_DEFINES=\"$(build_xm_defines)\" \\\n-\tTARGET_CPU_DEFAULT=\"$(target_cpu_default)\" \\\n-\t$(SHELL) $(srcdir)/mkconfig.sh hconfig.h\n+cs-bconfig.h: Makefile\n+\tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(build_xm_file)\" DEFINES=\"$(build_xm_defines)\" \\\n+\t$(SHELL) $(srcdir)/mkconfig.sh bconfig.h\n \n cs-tconfig.h: Makefile\n-\tTM_DEFINES=\"$(tm_defines)\" \\\n-\tHEADERS=\"$(xm_file)\" XM_DEFINES=\"$(xm_defines)\" \\\n \tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(xm_file)\" DEFINES=\"$(xm_defines)\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh tconfig.h\n \n+cs-tm.h: Makefile\n+\tTARGET_CPU_DEFAULT=\"$(target_cpu_default)\" \\\n+\tHEADERS=\"$(tm_file)\" DEFINES=\"$(tm_defines)\" \\\n+\t$(SHELL) $(srcdir)/mkconfig.sh tm.h\n+\n cs-tm_p.h: Makefile\n-\tTM_DEFINES=\"\" \\\n-\tHEADERS=\"$(tm_p_file)\" XM_DEFINES=\"\" TARGET_CPU_DEFAULT=\"\" \\\n+\tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(tm_p_file)\" DEFINES=\"\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh tm_p.h\n \n # Don't automatically run autoconf, since configure.in might be accidentally\n@@ -1055,7 +1066,7 @@ libgcc.a: $(LIBGCC_DEPS)\n \t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n \t  INCLUDES=\"$(INCLUDES)\" \\\n-\t  CONFIG_H=\"$(TCONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n+\t  CONFIG_H=\"$(TCONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" TM_H=\"$(TM_H)\" \\\n \t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n \t  MAKEOVERRIDES= \\\n \t  -f libgcc.mk all\n@@ -1107,33 +1118,33 @@ stmp-multilib: $(LIBGCC_DEPS)\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n # constructors.\n $(T)crtbegin.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n-  gbl-ctors.h stmp-int-hdrs tsystem.h\n+  gbl-ctors.h stmp-int-hdrs tsystem.h coretypes.h $(TM_H)\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS) \\\n \t  @inhibit_libc@ -c $(srcdir)/crtstuff.c -DCRT_BEGIN \\\n \t  -o $(T)crtbegin$(objext)\n \n $(T)crtend.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n-  gbl-ctors.h stmp-int-hdrs tsystem.h\n+  gbl-ctors.h stmp-int-hdrs tsystem.h coretypes.h $(TM_H)\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS) \\\n \t  @inhibit_libc@ -c $(srcdir)/crtstuff.c -DCRT_END \\\n \t  -o $(T)crtend$(objext)\n \n # These are versions of crtbegin and crtend for shared libraries.\n $(T)crtbeginS.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n-  gbl-ctors.h stmp-int-hdrs tsystem.h\n+  gbl-ctors.h stmp-int-hdrs tsystem.h coretypes.h $(TM_H)\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS_S) \\\n \t  @inhibit_libc@ -c $(srcdir)/crtstuff.c -DCRT_BEGIN -DCRTSTUFFS_O \\\n \t  -o $(T)crtbeginS$(objext)\n \n $(T)crtendS.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n-  gbl-ctors.h stmp-int-hdrs tsystem.h\n+  gbl-ctors.h stmp-int-hdrs tsystem.h coretypes.h $(TM_H)\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS_S) \\\n \t  @inhibit_libc@ -c $(srcdir)/crtstuff.c -DCRT_END -DCRTSTUFFS_O \\\n \t  -o $(T)crtendS$(objext)\n \n # This is a version of crtbegin for -static links.\n $(T)crtbeginT.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n-  gbl-ctors.h stmp-int-hdrs tsystem.h\n+  gbl-ctors.h stmp-int-hdrs tsystem.h coretypes.h $(TM_H)\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS) \\\n \t  @inhibit_libc@ -c $(srcdir)/crtstuff.c -DCRT_BEGIN -DCRTSTUFFT_O \\\n \t  -o $(T)crtbeginT$(objext)\n@@ -1157,10 +1168,10 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n \n # C language specific files.\n \n-c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) flags.h \\\n-    diagnostic.h $(TM_P_H)\n-c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) $(GGC_H) intl.h \\\n-    $(C_TREE_H) input.h flags.h $(SYSTEM_H) toplev.h output.h $(CPPLIB_H) \\\n+c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+    $(C_TREE_H) flags.h diagnostic.h $(TM_P_H)\n+c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+    $(GGC_H) intl.h $(C_TREE_H) input.h flags.h toplev.h output.h $(CPPLIB_H) \\\n     gt-c-parse.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t       -c $(srcdir)/c-parse.c $(OUTPUT_OPTION)\n@@ -1182,33 +1193,33 @@ $(srcdir)/c-parse.y: c-parse.in\n \t  $(srcdir)/c-parse.in >>tmp-c-parse.y\n \t$(SHELL) $(srcdir)/move-if-change tmp-c-parse.y $(srcdir)/c-parse.y\n \n-c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) $(C_TREE_H) \\\n-    $(GGC_H) $(TARGET_H) flags.h function.h output.h $(EXPR_H) \\\n+c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+    $(C_TREE_H) $(GGC_H) $(TARGET_H) flags.h function.h output.h $(EXPR_H) \\\n     debug.h toplev.h intl.h $(TM_P_H) tree-inline.h $(TIMEVAR_H) c-pragma.h \\\n     gt-c-decl.h\n-c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n+c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)\n-c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n+c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n     $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) c-common.h gtype-c.h\n-c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n+c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n     debug.h $(C_TREE_H) c-common.h real.h \\\n     c-pragma.h input.h intl.h flags.h toplev.h output.h \\\n     mbchar.h $(CPPLIB_H) $(EXPR_H) $(TM_P_H)\n-c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n+c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(RTL_H) insn-config.h integrate.h $(EXPR_H) $(C_TREE_H) \\\n     flags.h toplev.h tree-inline.h diagnostic.h integrate.h $(VARRAY_H) \\\n     langhooks.h $(GGC_H) gt-c-objc-common.h $(TARGET_H)\n-c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n-    flags.h toplev.h\n-c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h toplev.h \\\n-    $(C_COMMON_H)\n-c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) function.h \\\n-    c-pragma.h toplev.h output.h $(GGC_H) $(TM_P_H) $(C_COMMON_H) gt-c-pragma.h\n-mbchar.o: mbchar.c $(CONFIG_H) $(SYSTEM_H) mbchar.h\n-graph.o: graph.c $(CONFIG_H) $(SYSTEM_H) toplev.h flags.h output.h $(RTL_H) \\\n-    function.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h\n-sbitmap.o: sbitmap.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h \\\n-    $(BASIC_BLOCK_H)\n+c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+    $(C_TREE_H) flags.h toplev.h\n+c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+    flags.h toplev.h $(C_COMMON_H)\n+c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+    function.h c-pragma.h toplev.h output.h $(GGC_H) $(TM_P_H) $(C_COMMON_H) gt-c-pragma.h\n+mbchar.o: mbchar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) mbchar.h\n+graph.o: graph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h flags.h output.h \\\n+    $(RTL_H) function.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h\n+sbitmap.o: sbitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+    hard-reg-set.h $(BASIC_BLOCK_H)\n \n COLLECT2_OBJS = collect2.o tlink.o intl.o version.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n@@ -1218,42 +1229,43 @@ collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n \t\t$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)\n \tmv -f T$@ $@\n \n-collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) gstab.h intl.h \\\n+collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) gstab.h intl.h \\\n \t$(OBSTACK_H) $(DEMANGLE_H) collect2.h version.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n \t-DTARGET_MACHINE=\\\"$(target_alias)\\\" \\\n \t-c $(srcdir)/collect2.c $(OUTPUT_OPTION)\n \n-tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) \\\n+tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(OBSTACK_H) collect2.h intl.h\n \n # A file used by all variants of C.\n \n-c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(OBSTACK_H) \\\n-\t$(C_COMMON_H) flags.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n-\t$(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def $(TARGET_H) \\\n+c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(OBSTACK_H) $(C_COMMON_H) flags.h toplev.h output.h c-pragma.h $(RTL_H) \\\n+\t$(GGC_H) $(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def $(TARGET_H) \\\n \tdiagnostic.h except.h gt-c-common.h real.h langhooks.h\n c-pretty-print.o : c-pretty-print.c c-pretty-print.h pretty-print.h \\\n-\t$(C_COMMON_H) $(CONFIG_H) $(SYSTEM_H) real.h\n+\t$(C_COMMON_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) real.h\n \n-c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_COMMON_H) \\\n+c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H) \\\n         c-pragma.h flags.h toplev.h langhooks.h tree-inline.h diagnostic.h \\\n \tintl.h\n \n # A file used by all variants of C and some other languages.\n \n-attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h \\\n+attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags.h \\\n \ttoplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) $(EXPR_H) $(TM_P_H) \\\n \tbuiltin-types.def $(TARGET_H) langhooks.h\n \n-c-format.o : c-format.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) langhooks.h \\\n+c-format.o : c-format.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n \t$(C_COMMON_H) flags.h toplev.h intl.h diagnostic.h\n \n-c-semantics.o : c-semantics.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n-\tflags.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n+c-semantics.o : c-semantics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) flags.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n \t$(EXPR_H) $(PREDICT_H)\n \n-c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) tree-dump.h\n+c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) tree-dump.h\n \n # Language-independent files.\n \n@@ -1264,40 +1276,41 @@ DRIVER_DEFINES = \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_alias)\\\" \\\n   -DSTANDARD_BINDIR_PREFIX=\\\"$(bindir)/\\\" \\\n   -DTOOLDIR_BASE_PREFIX=\\\"$(unlibsubdir)/../\\\" \\\n+  @TARGET_SYSTEM_ROOT_DEFINE@ \\\n   $(VALGRIND_DRIVER_DEFINES) \\\n   `test \"X$${SHLIB_LINK}\" = \"X\" || test \"@enable_shared@\" != \"yes\" || echo \"-DENABLE_SHARED_LIBGCC\"` \\\n   `test \"X$${SHLIB_MULTILIB}\" = \"X\" || echo \"-DNO_SHARED_LIBGCC_MULTILIB\"`\n \n-gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) intl.h multilib.h \\\n+gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n     Makefile $(lang_specs_files) specs.h prefix.h $(GCC_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n-gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) $(GCC_H)\n+gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n \n-cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) $(GCC_H)\n+cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n \n tree-check.h: s-check ; @true\n s-check : gencheck$(build_exeext) $(srcdir)/move-if-change\n \t$(RUN_GEN) ./gencheck$(build_exeext) > tmp-check.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-check.h tree-check.h\n \t$(STAMP) s-check\n \n-gencheck$(build_exeext) : gencheck.o $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t gencheck.o $(HOST_LIBS)\n+gencheck$(build_exeext) : gencheck.o $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t gencheck.o $(BUILD_LIBS)\n \n-gencheck.o : gencheck.c gencheck.h tree.def $(HCONFIG_H) $(SYSTEM_H) \\\n-             $(lang_tree_files)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+gencheck.o : gencheck.c gencheck.h tree.def $(BCONFIG_H) $(SYSTEM_H) \\\n+\tcoretypes.h $(GTM_H) $(lang_tree_files)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gencheck.c $(OUTPUT_OPTION)\n \n gencheck.h : s-gencheck ; @true\n@@ -1328,64 +1341,64 @@ dumpvers: dumpvers.c\n \n version.o: version.c version.h\n \n-gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) varray.h $(HASHTAB_H) \\\n-\t$(TREE_H) $(RTL_H) function.h insn-config.h $(EXPR_H) $(OPTABS_H) \\\n+gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) varray.h \\\n+\t$(HASHTAB_H) $(TREE_H) $(RTL_H) function.h insn-config.h $(EXPR_H) $(OPTABS_H) \\\n \tlibfuncs.h debug.h $(GGC_H) bitmap.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n \tssa.h cselib.h insn-addr.h\n \n-ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) \\\n+ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n \tflags.h $(GGC_H) varray.h $(HASHTAB_H) $(TM_P_H) langhooks.h \\\n \t$(PARAMS_H)\n \n-ggc-simple.o: ggc-simple.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-\t$(GGC_H) varray.h $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H)\n+ggc-simple.o: ggc-simple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+\tflags.h $(GGC_H) varray.h $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H)\n \n-ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-\ttoplev.h $(GGC_H) varray.h $(TIMEVAR_H) $(TM_P_H)\n+ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+\tflags.h toplev.h $(GGC_H) varray.h $(TIMEVAR_H) $(TM_P_H)\n \n-stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(OBSTACK_H) \\\n-\tflags.h toplev.h $(GGC_H)\n+stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(OBSTACK_H) flags.h toplev.h $(GGC_H)\n \n-hashtable.o: hashtable.c hashtable.h $(CONFIG_H) $(SYSTEM_H) $(OBSTACK_H)\n+hashtable.o: hashtable.c hashtable.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(OBSTACK_H)\n \n-line-map.o: line-map.c line-map.h intl.h $(CONFIG_H) $(SYSTEM_H)\n+line-map.o: line-map.c line-map.h intl.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n \n-ggc-none.o: ggc-none.c $(GCONFIG_H) $(SYSTEM_H) $(GGC_H)\n+ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(GGC_H)\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) Makefile prefix.h\n+prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) Makefile prefix.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t-DPREFIX=\\\"$(prefix)\\\" \\\n \t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n-convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h convert.h \\\n-   toplev.h langhooks.h\n+convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags.h \\\n+   convert.h toplev.h langhooks.h\n \n-langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) toplev.h \\\n+langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h \\\n    tree-inline.h $(RTL_H) insn-config.h integrate.h langhooks.h \\\n    $(LANGHOOKS_DEF_H) flags.h\n-tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h function.h toplev.h \\\n-   $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h \\\n+tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags.h function.h \\\n+   toplev.h $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h \\\n    real.h gt-tree.h\n-tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n-   flags.h langhooks.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n+tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(C_TREE_H) flags.h langhooks.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n    $(EXPR_H) $(SPLAY_TREE_H) tree-dump.h\n-tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n-   expr.h flags.h params.h input.h insn-config.h $(INTEGRATE_H) \\\n+tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) expr.h flags.h params.h input.h insn-config.h $(INTEGRATE_H) \\\n    $(VARRAY_H) $(HASHTAB_H) $(SPLAY_TREE_H) toplev.h langhooks.h \\\n    $(C_COMMON_H) tree-inline.h\n-print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GGC_H) \\\n-   langhooks.h real.h\n-stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h \\\n-   function.h $(EXPR_H) $(RTL_H) toplev.h $(GGC_H) $(TM_P_H) $(TARGET_H) \\\n+print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(GGC_H) langhooks.h real.h\n+stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   flags.h function.h $(EXPR_H) $(RTL_H) toplev.h $(GGC_H) $(TM_P_H) $(TARGET_H) \\\n    langhooks.h\n-fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h real.h \\\n-   toplev.h $(HASHTAB_H) $(EXPR_H) $(RTL_H) $(GGC_H) $(TM_P_H) langhooks.h\n+fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   flags.h real.h toplev.h $(HASHTAB_H) $(EXPR_H) $(RTL_H) $(GGC_H) $(TM_P_H) langhooks.h\n diagnostic.o : diagnostic.c diagnostic.h real.h diagnostic.def \\\n-   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) flags.h $(GGC_H) \\\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(TM_P_H) flags.h $(GGC_H) \\\n    input.h toplev.h intl.h langhooks.h $(LANGHOOKS_DEF_H)\n-toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) function.h \\\n-   flags.h xcoffout.h input.h $(INSN_ATTR_H) output.h diagnostic.h \\\n+toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+   function.h flags.h xcoffout.h input.h $(INSN_ATTR_H) output.h diagnostic.h \\\n    debug.h insn-config.h intl.h $(RECOG_H) Makefile toplev.h \\\n    dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(LOOP_H) except.h $(REGS_H) $(TIMEVAR_H) $(lang_options_files) \\\n@@ -1394,260 +1407,263 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) function.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DTARGET_NAME=\\\"$(target_alias)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n-main.o : main.c $(CONFIG_H) $(SYSTEM_H) toplev.h\n+main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h\n \n-rtl-error.o: rtl-error.c system.h $(RTL_H) $(INSN_ATTR_H) insn-config.h \\\n-   input.h toplev.h intl.h diagnostic.h $(CONFIG_H)\n+rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(INSN_ATTR_H) \\\n+   insn-config.h input.h toplev.h intl.h diagnostic.h $(CONFIG_H)\n \n-rtl.o : rtl.c $(GCONFIG_H) $(SYSTEM_H) $(RTL_H) real.h $(GGC_H) errors.h\n+rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) real.h \\\n+  $(GGC_H) errors.h\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) \\\n+print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n     hard-reg-set.h $(BASIC_BLOCK_H) real.h\n-rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) toplev.h $(RTL_H) \\\n+rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(RTL_H) \\\n    hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) real.h flags.h\n \n-errors.o : errors.c $(GCONFIG_H) $(SYSTEM_H) errors.h\n+errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n-   function.h $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n+varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+   flags.h function.h $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n    output.h c-pragma.h toplev.h xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h real.h\n-function.o : function.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   function.h $(EXPR_H) libfuncs.h $(REGS_H) hard-reg-set.h \\\n+function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h function.h $(EXPR_H) libfuncs.h $(REGS_H) hard-reg-set.h \\\n    insn-config.h $(RECOG_H) output.h toplev.h except.h $(HASHTAB_H) $(GGC_H) \\\n    $(TM_P_H) langhooks.h gt-function.h\n-stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n-   insn-config.h hard-reg-set.h $(EXPR_H) libfuncs.h except.h \\\n+stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) flags.h \\\n+   function.h insn-config.h hard-reg-set.h $(EXPR_H) libfuncs.h except.h \\\n    $(LOOP_H) $(RECOG_H) toplev.h output.h varray.h $(GGC_H) $(TM_P_H) \\\n    langhooks.h $(PREDICT_H) gt-stmt.h\n-except.o : except.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   except.h function.h $(EXPR_H) libfuncs.h integrate.h langhooks.h \\\n+except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h except.h function.h $(EXPR_H) libfuncs.h integrate.h langhooks.h \\\n    insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h toplev.h $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h\n-expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h function.h \\\n-   $(REGS_H) $(EXPR_H) $(OPTABS_H) libfuncs.h insn-attr.h insn-config.h \\\n+expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) flags.h \\\n+   function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) libfuncs.h insn-attr.h insn-config.h \\\n    $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n    except.h reload.h $(GGC_H) langhooks.h intl.h $(TM_P_H) real.h\n-builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   $(TARGET_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) insn-config.h \\\n+builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H)\\\n+   flags.h $(TARGET_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) insn-config.h \\\n    $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n    except.h $(TM_P_H) $(PREDICT_H) libfuncs.h real.h langhooks.h\n-calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n+calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) flags.h \\\n    $(EXPR_H) langhooks.h $(TARGET_H) \\\n    libfuncs.h $(REGS_H) toplev.h output.h function.h $(TIMEVAR_H) $(TM_P_H)\n-expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h  \\\n-   insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) real.h \\\n+expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) real.h \\\n    toplev.h $(TM_P_H) langhooks.h\n-explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n+explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n    toplev.h function.h ggc.h $(TM_P_H) gt-explow.h\n-optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h  \\\n-   insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h $(RECOG_H) reload.h \\\n+optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h $(RECOG_H) reload.h \\\n    toplev.h $(GGC_H) real.h $(TM_P_H) except.h gt-optabs.h\n-dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n-    $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) function.h langhooks.h \\\n+dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+   flags.h $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) function.h langhooks.h \\\n    insn-config.h reload.h gstab.h xcoffout.h output.h dbxout.h toplev.h\n-debug.o : debug.c debug.h $(CONFIG_H) $(SYSTEM_H)\n-sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n-   function.h $(EXPR_H) output.h hard-reg-set.h $(REGS_H) real.h \\\n-   insn-config.h xcoffout.h c-pragma.h ggc.h \\\n+debug.o : debug.c debug.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n+sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+   flags.h function.h $(EXPR_H) output.h hard-reg-set.h $(REGS_H) real.h \\\n+   insn-config.h xcoffout.h c-pragma.h ggc.h $(TARGET_H) \\\n    sdbout.h toplev.h $(TM_P_H) except.h debug.h langhooks.h gt-sdbout.h\n-dwarfout.o : dwarfout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) dwarf.h \\\n-   flags.h insn-config.h reload.h output.h toplev.h $(TM_P_H) \\\n+dwarfout.o : dwarfout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) dwarf.h flags.h insn-config.h reload.h output.h toplev.h $(TM_P_H) \\\n    debug.h langhooks.h\n-dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) dwarf2.h \\\n-   debug.h flags.h insn-config.h reload.h output.h diagnostic.h real.h \\\n+dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) dwarf2.h debug.h flags.h insn-config.h reload.h output.h diagnostic.h real.h \\\n    hard-reg-set.h $(REGS_H) $(EXPR_H) libfuncs.h toplev.h dwarf2out.h varray.h \\\n    $(GGC_H) except.h dwarf2asm.h $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h\n-dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) flags.h $(RTL_H) $(TREE_H) \\\n-   output.h dwarf2asm.h $(TM_P_H) $(GGC_H)\n-vmsdbgout.o : vmsdbgout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n-   output.h vmsdbg.h debug.h langhooks.h function.h\n-xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) xcoffout.h \\\n-   flags.h toplev.h output.h dbxout.h $(GGC_H) $(TARGET_H)\n-emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   function.h $(REGS_H) insn-config.h $(RECOG_H) real.h $(GGC_H) \\\n+dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) flags.h $(RTL_H) \\\n+   $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H)\n+vmsdbgout.o : vmsdbgout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) flags.h output.h vmsdbg.h debug.h langhooks.h function.h $(TARGET_H)\n+xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+   xcoffout.h flags.h toplev.h output.h dbxout.h $(GGC_H) $(TARGET_H)\n+emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h function.h $(REGS_H) insn-config.h $(RECOG_H) real.h $(GGC_H) \\\n    $(EXPR_H) $(srcdir)/../include/obstack.h hard-reg-set.h bitmap.h toplev.h \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h\n-real.o : real.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) toplev.h $(TM_P_H)\n-integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   debug.h $(INTEGRATE_H) insn-config.h $(EXPR_H) real.h $(REGS_H) \\\n+real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h $(TM_P_H)\n+integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h debug.h $(INTEGRATE_H) insn-config.h $(EXPR_H) real.h $(REGS_H) \\\n    intl.h function.h output.h $(RECOG_H) except.h toplev.h $(LOOP_H) \\\n    $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h gt-integrate.h\n-jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h $(REGS_H) \\\n-   insn-config.h $(RECOG_H) $(EXPR_H) real.h except.h function.h \\\n+jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) real.h except.h function.h \\\n    toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H)\n \n-simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) \\\n-   hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n+simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(REGS_H) hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h $(GGC_H) $(OBSTACK_H) $(TM_P_H) $(TREE_H)\n-cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) \\\n+cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h cselib.h $(GGC_H) $(TM_P_H) gt-cselib.h\n-cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h \\\n-   real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h output.h function.h \\\n-   $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H)\n-gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h \\\n-   flags.h real.h insn-config.h ggc.h $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-   function.h output.h toplev.h $(TM_P_H) $(PARAMS_H) except.h gt-gcse.h\n-sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) function.h \\\n-   hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)\n-resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n-   $(BASIC_BLOCK_H) $(REGS_H) flags.h output.h resource.h function.h toplev.h \\\n+cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n+   hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h output.h \\\n+   function.h $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H)\n+gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n+   hard-reg-set.h flags.h real.h insn-config.h ggc.h $(RECOG_H) $(EXPR_H) \\\n+   $(BASIC_BLOCK_H) function.h output.h toplev.h $(TM_P_H) $(PARAMS_H) except.h gt-gcse.h\n+sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n+   function.h hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)\n+resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) coretypes.h \\\n+   $(TM_H) $(BASIC_BLOCK_H) $(REGS_H) flags.h output.h resource.h function.h toplev.h \\\n    $(INSN_ATTR_H) except.h $(PARAMS_H) $(TM_P_H)\n-lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h \\\n-   real.h insn-config.h $(INSN_ATTR_H) $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-   $(TM_P_H) df.h\n-ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) varray.h $(EXPR_H) \\\n-   hard-reg-set.h flags.h function.h real.h insn-config.h $(RECOG_H)\t\\\n+lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n+   hard-reg-set.h flags.h real.h insn-config.h $(INSN_ATTR_H) $(RECOG_H) $(EXPR_H) \\\n+   $(BASIC_BLOCK_H) $(TM_P_H) df.h\n+ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) varray.h \\\n+   $(EXPR_H) hard-reg-set.h flags.h function.h real.h insn-config.h $(RECOG_H) \\\n    $(BASIC_BLOCK_H) output.h ssa.h\n-ssa-dce.o : ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h \\\n+ssa-dce.o : ssa-dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h\n ssa-ccp.o : ssa-ccp.c $(CONFIG_H) system.h $(RTL_H) hard-reg-set.h \\\n     $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h \\\n     errors.h $(GGC_H) df.h function.h\n-df.o : df.c $(CONFIG_H) system.h $(RTL_H) insn-config.h $(RECOG_H) \\\n-   function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h \\\n-   $(FIBHEAP_H)\n-conflict.o : conflict.c $(CONFIG_H) $(SYSTEM_H) $(OBSTACK_H) $(HASHTAB_H) \\\n-   $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H)\n-profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   insn-config.h output.h $(REGS_H) $(EXPR_H) function.h \\\n-   gcov-io.h toplev.h $(GGC_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TARGET_H) \\\n-   langhooks.h profile.h libfuncs.h gt-profile.h\n-loop.o : loop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(LOOP_H) \\\n+df.o : df.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   insn-config.h $(RECOG_H) function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h \\\n+   $(BASIC_BLOCK_H) df.h $(FIBHEAP_H)\n+conflict.o : conflict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n+   $(HASHTAB_H) $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H)\n+profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h insn-config.h output.h $(REGS_H) $(EXPR_H) function.h \\\n+   gcov-io.h gcov-iov.h toplev.h $(GGC_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n+   $(TARGET_H) langhooks.h profile.h libfuncs.h gt-profile.h $(HASHTAB_H)\n+loop.o : loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h $(LOOP_H) \\\n    insn-config.h $(REGS_H) hard-reg-set.h $(RECOG_H) $(EXPR_H) \\\n    real.h $(PREDICT_H) $(BASIC_BLOCK_H) function.h \\\n    toplev.h varray.h except.h cselib.h $(OPTABS_H) $(TM_P_H)\n-doloop.o : doloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(LOOP_H) \\\n-   $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) toplev.h\n-unroll.o : unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) insn-config.h function.h \\\n-   $(INTEGRATE_H) $(REGS_H) $(RECOG_H) flags.h $(EXPR_H) $(LOOP_H) toplev.h \\\n+doloop.o : doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   $(LOOP_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) toplev.h\n+unroll.o : unroll.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) insn-config.h \\\n+   function.h $(INTEGRATE_H) $(REGS_H) $(RECOG_H) flags.h $(EXPR_H) $(LOOP_H) toplev.h \\\n    hard-reg-set.h varray.h $(BASIC_BLOCK_H) $(TM_P_H) $(PREDICT_H) $(PARAMS_H)\n-flow.o : flow.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n-   function.h except.h $(EXPR_H) ssa.h $(GGC_H) $(TM_P_H)\n-cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h insn-config.h \\\n+flow.o : flow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n+   $(RECOG_H) function.h except.h $(EXPR_H) ssa.h $(GGC_H) $(TM_P_H)\n+cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(GGC_H) $(TM_P_H)\n-cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n+cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(GGC_H) $(TM_P_H) insn-config.h\n-cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h insn-config.h $(RECOG_H) $(GGC_H) $(TM_P_H)\n-cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n+cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h insn-config.h $(RECOG_H) $(GGC_H) $(TM_P_H)\n+cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(GGC_H)\n-cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TIMEVAR_H)\\\n-   $(BASIC_BLOCK_H) hard-reg-set.h output.h flags.h $(RECOG_H) toplev.h \\\n+cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(TIMEVAR_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h flags.h $(RECOG_H) toplev.h \\\n    $(GGC_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H)\n-cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n+cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h\n-dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) et-forest.h\n-et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) et-forest.h\n-combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h function.h \\\n-   insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n+dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h\n+et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) et-forest.h\n+combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   function.h insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h toplev.h $(TM_P_H)\n-regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h flags.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(RECOG_H) reload.h real.h \\\n-   toplev.h function.h output.h $(GGC_H) $(TM_P_H) $(EXPR_H)\n-local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n+regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   hard-reg-set.h flags.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(RECOG_H) reload.h \\\n+   real.h toplev.h function.h output.h $(GGC_H) $(TM_P_H) $(EXPR_H)\n+local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   flags.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h function.h $(INSN_ATTR_H) toplev.h  except.h $(TM_P_H)\n-bitmap.o : bitmap.c $(GCONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n+bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(GTM_H) $(RTL_H) flags.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n-global.o : global.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h reload.h function.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h output.h toplev.h \\\n-   $(TM_P_H)\n-varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) varray.h $(GGC_H) errors.h\n-ra.o : ra.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H)  $(TM_P_H) insn-config.h \\\n+global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   reload.h function.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h output.h \\\n+   toplev.h $(TM_P_H)\n+varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) varray.h $(GGC_H) errors.h\n+ra.o : ra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TM_P_H) insn-config.h \\\n    $(RECOG_H) integrate.h function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) df.h expr.h output.h toplev.h flags.h reload.h ra.h\n-ra-build.o : ra-build.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_P_H) \\\n+ra-build.o : ra-build.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TM_P_H) \\\n    insn-config.h $(RECOG_H) function.h $(REGS_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) df.h output.h ggc.h ra.h gt-ra-build.h reload.h\n-ra-colorize.o : ra-colorize.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_P_H) \\\n-    function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h ra.h\n-ra-debug.o : ra-debug.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H)  insn-config.h \\\n-   $(RECOG_H) function.h hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h ra.h \\\n-   $(TM_P_H)\n-ra-rewrite.o : ra-rewrite.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_P_H) \\\n-   function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h expr.h \\\n+ra-colorize.o : ra-colorize.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+    $(TM_P_H) function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h ra.h\n+ra-debug.o : ra-debug.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   insn-config.h $(RECOG_H) function.h hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h \\\n+   ra.h $(TM_P_H)\n+ra-rewrite.o : ra-rewrite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(TM_P_H) function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h expr.h \\\n    output.h except.h ra.h reload.h insn-config.h\n-reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h output.h \\\n+reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h output.h \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) hard-reg-set.h insn-config.h \\\n    $(REGS_H) function.h real.h toplev.h $(TM_P_H)\n-reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) real.h flags.h \\\n+reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) real.h flags.h \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h function.h toplev.h cselib.h $(TM_P_H) \\\n    except.h $(TREE_H)\n-caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n-   $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) function.h \\\n+caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   flags.h $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) function.h \\\n    $(RECOG_H) reload.h $(EXPR_H) toplev.h $(TM_P_H)\n-reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) conditions.h hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(INSN_ATTR_H) except.h \\\n+reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) conditions.h \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(INSN_ATTR_H) except.h \\\n    $(RECOG_H) function.h flags.h output.h $(EXPR_H) toplev.h $(PARAMS_H) $(TM_P_H)\n-alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) toplev.h output.h $(EXPR_H) \\\n+alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) toplev.h output.h $(EXPR_H) \\\n    $(GGC_H) function.h cselib.h $(TREE_H) $(TM_P_H) langhooks.h $(TARGET_H) \\\n    gt-alias.h\n-regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) insn-config.h \\\n+regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) insn-config.h \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h flags.h function.h \\\n    $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h reload.h\n-haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n+haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   sched-int.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) $(TARGET_H)\n-sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n+sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   sched-int.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h cselib.h $(PARAMS_H) $(TM_P_H)\n-sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n+sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   sched-int.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) $(TARGET_H)\n-sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n+sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   sched-int.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H)\n-sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(INSN_ATTR_H) $(REGS_H) $(TM_P_H) \\\n+sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   sched-int.h hard-reg-set.h $(BASIC_BLOCK_H) $(INSN_ATTR_H) $(REGS_H) $(TM_P_H) \\\n    $(TARGET_H) real.h\n-final.o : final.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h intl.h \\\n-   $(REGS_H) $(RECOG_H) conditions.h insn-config.h $(INSN_ATTR_H) function.h \\\n-   real.h output.h hard-reg-set.h except.h debug.h xcoffout.h profile.h \\\n-   toplev.h reload.h dwarf2out.h $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H)\n-recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) function.h $(BASIC_BLOCK_H) \\\n-   $(REGS_H) $(RECOG_H) $(EXPR_H) hard-reg-set.h flags.h insn-config.h \\\n+final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h intl.h $(REGS_H) $(RECOG_H) conditions.h insn-config.h $(INSN_ATTR_H) \\\n+   function.h real.h output.h hard-reg-set.h except.h debug.h xcoffout.h \\\n+   toplev.h reload.h dwarf2out.h $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) \\\n+   $(EXPR_H)\n+recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) function.h \\\n+   $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) hard-reg-set.h flags.h insn-config.h \\\n    $(INSN_ATTR_H) real.h toplev.h output.h reload.h $(TM_P_H)\n-reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) $(RECOG_H) \\\n-   $(REGS_H) hard-reg-set.h flags.h insn-config.h toplev.h reload.h \\\n+reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   $(RECOG_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h toplev.h reload.h \\\n    varray.h function.h $(TM_P_H) $(GGC_H) gt-reg-stack.h\n-predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n+predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n+   flags.h insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n    $(RECOG_H) function.h except.h $(EXPR_H) $(TM_P_H) $(PREDICT_H) real.h \\\n    $(PARAMS_H) $(TARGET_H)\n-lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) toplev.h $(RTL_H) $(GGC_H)\n-bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) \\\n-   flags.h $(BASIC_BLOCK_H) hard-reg-set.h output.h cfglayout.h $(TARGET_H)\n-tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) \\\n+lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(RTL_H) $(GGC_H)\n+bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(TREE_H) flags.h $(BASIC_BLOCK_H) hard-reg-set.h output.h cfglayout.h $(TARGET_H)\n+tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h output.h cfglayout.h flags.h \\\n    $(PARAMS_H) profile.h\n-cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) \\\n+cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h output.h function.h \\\n    cfglayout.h\n-timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) $(TIMEVAR_H) flags.h intl.h\n-regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) insn-config.h \\\n-   $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(RECOG_H) function.h \\\n+timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TIMEVAR_H) flags.h \\\n+   intl.h\n+regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(RECOG_H) function.h \\\n    resource.h $(OBSTACK_H) flags.h $(TM_P_H)\n-ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) toplev.h \\\n+ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) toplev.h \\\n    flags.h insn-config.h function.h $(RECOG_H) $(BASIC_BLOCK_H) $(EXPR_H) \\\n    output.h except.h $(TM_P_H) real.h\n-params.o : params.c $(CONFIG_H) $(SYSTEM_H) $(PARAMS_H) toplev.h\n-hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) $(HOOKS_H)\n+params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) toplev.h\n+hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n \n-$(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) $(GGC_H) \\\n+$(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) $(GGC_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h real.h insn-config.h conditions.h \\\n    output.h $(INSN_ATTR_H) $(SYSTEM_H) toplev.h $(TARGET_H) libfuncs.h \\\n    $(TARGET_DEF_H) function.h sched-int.h $(TM_P_H) $(EXPR_H) $(OPTABS_H) \\\n@@ -1659,12 +1675,12 @@ $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) $(GGC_H) \\\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n \n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) version.h\n+mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h $(TM_H) version.h\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n \n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H)\n+mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h $(TM_H)\n \n #\f\n # Generate header and source files from the machine description,\n@@ -1705,13 +1721,15 @@ s-conditions : $(md_file) genconditions$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-conditions.c insn-conditions.c\n \t$(STAMP) s-conditions\n \n-insn-conditions.o : insn-conditions.c $(GCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-  $(TM_P_H) $(REGS_H) function.h $(RECOG_H) real.h output.h flags.h \\\n-  hard-reg-set.h resource.h toplev.h reload.h gensupport.h insn-constants.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) insn-conditions.c\n+insn-conditions.o : insn-conditions.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(GTM_H) $(RTL_H) $(TM_P_H) $(REGS_H) function.h $(RECOG_H) real.h output.h \\\n+  flags.h hard-reg-set.h resource.h toplev.h reload.h gensupport.h \\\n+  insn-constants.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) insn-conditions.c\n \n-dummy-conditions.o : dummy-conditions.c $(HCONFIG_H) $(SYSTEM_H) gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+dummy-conditions.o : dummy-conditions.c $(BCONFIG_H) $(SYSTEM_H) \\\n+  coretypes.h $(GTM_H) gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t    $(srcdir)/dummy-conditions.c $(OUTPUT_OPTION)\n \n insn-flags.h: s-flags ; @true\n@@ -1732,9 +1750,9 @@ s-constants : $(md_file) genconstants$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-constants.h insn-constants.h\n \t$(STAMP) s-constants\n \n-insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n-  insn-config.h $(OPTABS_H) $(SYSTEM_H) reload.h $(RECOG_H) toplev.h \\\n-  function.h flags.h hard-reg-set.h resource.h $(TM_P_H)\n+insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) $(EXPR_H) real.h output.h insn-config.h $(OPTABS_H) reload.h \\\n+  $(RECOG_H) toplev.h function.h flags.h hard-reg-set.h resource.h $(TM_P_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1744,9 +1762,9 @@ s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-emit.c insn-emit.c\n \t$(STAMP) s-emit\n \n-insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h $(RECOG_H) \\\n-  real.h output.h flags.h $(SYSTEM_H) function.h hard-reg-set.h resource.h \\\n-  $(TM_P_H) toplev.h reload.h\n+insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) insn-config.h $(RECOG_H) real.h output.h flags.h  function.h \\\n+  hard-reg-set.h resource.h $(TM_P_H) toplev.h reload.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1756,8 +1774,8 @@ s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-recog.c insn-recog.c\n \t$(STAMP) s-recog\n \n-insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) \\\n-  insn-config.h flags.h $(RECOG_H) $(EXPR_H) $(OPTABS_H) reload.h $(SYSTEM_H)\n+insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) insn-config.h flags.h $(RECOG_H) $(EXPR_H) $(OPTABS_H) reload.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1767,8 +1785,8 @@ s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n \t$(STAMP) s-opinit\n \n-insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) toplev.h \\\n-  insn-config.h $(RECOG_H)\n+insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) toplev.h insn-config.h $(RECOG_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1778,8 +1796,9 @@ s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-extract.c insn-extract.c\n \t$(STAMP) s-extract\n \n-insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h \\\n-\t$(SYSTEM_H) insn-config.h $(RECOG_H) except.h function.h $(TM_P_H)\n+insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) $(REGS_H) output.h real.h insn-config.h $(RECOG_H) except.h \\\n+  function.h $(TM_P_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1789,9 +1808,9 @@ s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-peep.c insn-peep.c\n \t$(STAMP) s-peep\n \n-insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n-    output.h $(INSN_ATTR_H) insn-config.h $(SYSTEM_H) toplev.h $(RECOG_H) \\\n-\t$(TM_P_H) flags.h\n+insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) $(REGS_H) real.h output.h $(INSN_ATTR_H) insn-config.h toplev.h \\\n+  $(RECOG_H) $(TM_P_H) flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1807,10 +1826,10 @@ s-attrtab : $(md_file) genattrtab$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n \t$(STAMP) s-attrtab\n \n-insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) $(GGC_H) $(REGS_H) real.h \\\n-    conditions.h hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) \\\n-    output.h $(RECOG_H) function.h $(SYSTEM_H) toplev.h flags.h \\\n-    insn-codes.h $(TM_P_H)\n+insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) $(GGC_H) $(REGS_H) real.h conditions.h hard-reg-set.h \\\n+  insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h $(RECOG_H) function.h \\\n+  toplev.h flags.h insn-codes.h $(TM_P_H) $(TARGET_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c \\\n \t  $(OUTPUT_OPTION)\n \n@@ -1820,7 +1839,8 @@ s-output : $(md_file) genoutput$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-output.c insn-output.c\n \t$(STAMP) s-output\n \n-genrtl.o : genrtl.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) $(GGC_H)\n+genrtl.o : genrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+  $(GGC_H)\n genrtl.c genrtl.h : s-genrtl\n \t@true\t# force gnu make to recheck modification times.\n \n@@ -1838,8 +1858,8 @@ s-preds: genpreds$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-preds.h tm-preds.h\n \t$(STAMP) s-preds\n \n-GTFILES = $(GCONFIG_H) $(srcdir)/location.h \\\n-  $(HASHTAB_H) \\\n+GTFILES = $(srcdir)/location.h $(srcdir)/coretypes.h \\\n+  $(host_xm_file_list) $(tm_file_list) $(HASHTAB_H) \\\n   $(srcdir)/bitmap.h $(srcdir)/function.h  $(srcdir)/rtl.h $(srcdir)/optabs.h \\\n   $(srcdir)/tree.h $(srcdir)/libfuncs.h $(srcdir)/hashtable.h $(srcdir)/real.h \\\n   $(srcdir)/varray.h $(srcdir)/ssa.h $(srcdir)/insn-addr.h $(srcdir)/cselib.h \\\n@@ -1904,7 +1924,7 @@ s-gtype: gengtype$(build_exeext) $(GTFILES)\n \n #\f\n # Compile the programs that generate insn-* from the machine description.\n-# They are compiled with $(HOST_CC), and associated libraries,\n+# They are compiled with $(BUILD_CC), and associated libraries,\n # since they need to run on this machine\n # even if GCC is being compiled to run on some other machine.\n \n@@ -1913,166 +1933,173 @@ s-gtype: gengtype$(build_exeext) $(GTFILES)\n # about the target machine.  They do depend on config.h itself,\n # since that describes the host machine.\n \n-read-rtl.o: read-rtl.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n+read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n   $(OBSTACK_H) $(HASHTAB_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n-\n-gensupport.o: gensupport.c $(RTL_H) $(OBSTACK_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n-\n-genconfig$(build_exeext) : genconfig.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t  genconfig.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genconfig.o : genconfig.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n-\n-genflags$(build_exeext) : genflags.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genflags.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n-\n-gencodes$(build_exeext) : gencodes.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t gencodes.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-gencodes.o : gencodes.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n-\n-genconstants$(build_exeext) : genconstants.o $(HOST_RTL) $(HOST_EARLY_SUPPORT) \\\n-  $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genconstants.o $(HOST_EARLY_SUPPORT) $(HOST_RTL) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genconstants.o : genconstants.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n-\n-genemit$(build_exeext) : genemit.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genemit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genemit.o : genemit.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n-\n-genopinit$(build_exeext) : genopinit.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genopinit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genopinit.o : genopinit.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n-\n-genrecog$(build_exeext) : genrecog.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-    $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genrecog.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genrecog.o : genrecog.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n-\n-genextract$(build_exeext) : genextract.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genextract.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genextract.o : genextract.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) insn-config.h errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n-\n-genpeep$(build_exeext) : genpeep.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genpeep.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genpeep.o : genpeep.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n-\n-genattr$(build_exeext) : genattr.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genattr.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n-\n-genattr.o : genattr.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n+\n+gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n+  $(OBSTACK_H) errors.h $(HASHTAB_H) gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n+\n+genconfig$(build_exeext) : genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t  genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genconfig.o : genconfig.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n+\n+genflags$(build_exeext) : genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n+\n+gencodes$(build_exeext) : gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+gencodes.o : gencodes.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n+\n+genconstants$(build_exeext) : genconstants.o $(BUILD_RTL) $(BUILD_EARLY_SUPPORT) \\\n+  $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genconstants.o $(BUILD_EARLY_SUPPORT) $(BUILD_RTL) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genconstants.o : genconstants.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n+  errors.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n+\n+genemit$(build_exeext) : genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genemit.o : genemit.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n+  errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n+\n+genopinit$(build_exeext) : genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genopinit.o : genopinit.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n+\n+genrecog$(build_exeext) : genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+    $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genrecog.o : genrecog.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n+\n+genextract$(build_exeext) : genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genextract.o : genextract.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) insn-config.h errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n+\n+genpeep$(build_exeext) : genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genpeep.o : genpeep.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n+  errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n+\n+genattr$(build_exeext) : genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+genattr.o : genattr.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h \\\n+  gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n \n genattrtab$(build_exeext) : genattrtab.o genautomata.o \\\n-  $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_VARRAY) \\\n-  $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n+  $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_VARRAY) \\\n+  $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genattrtab.o genautomata.o \\\n-\t $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) \\\n-\t $(HOST_VARRAY) $(HOST_LIBS) -lm\n+\t $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) $(BUILD_ERRORS) \\\n+\t $(BUILD_VARRAY) $(BUILD_LIBS) -lm\n \n-genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h $(GGC_H) gensupport.h genattrtab.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n+genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(GGC_H) gensupport.h genattrtab.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n \n-genautomata.o : genautomata.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h varray.h genattrtab.h $(HASHTAB_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genautomata.c $(OUTPUT_OPTION)\n+genautomata.o : genautomata.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h varray.h genattrtab.h $(HASHTAB_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genautomata.c $(OUTPUT_OPTION)\n \n-genoutput$(build_exeext) : genoutput.o $(HOST_RTL) $(HOST_SUPPORT) \\\n-  $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genoutput.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n+genoutput$(build_exeext) : genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n-genoutput.o : genoutput.c $(RTL_H) $(HCONFIG_H) \\\n-  $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n+genoutput.o : genoutput.c $(RTL_H) $(BCONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n \n-gengenrtl$(build_exeext) : gengenrtl.o $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t gengenrtl.o $(HOST_LIBS)\n+gengenrtl$(build_exeext) : gengenrtl.o $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t gengenrtl.o $(BUILD_LIBS)\n \n-gengenrtl.o : gengenrtl.c $(RTL_BASE_H) $(HCONFIG_H) $(SYSTEM_H) real.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n+gengenrtl.o : gengenrtl.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(GTM_H) real.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n \n-genpreds$(build_exeext) : genpreds.o $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genpreds.o $(HOST_LIBS)\n+genpreds$(build_exeext) : genpreds.o $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genpreds.o $(BUILD_LIBS)\n \n-genpreds.o : genpreds.c $(RTL_BASE_H) $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n+genpreds.o : genpreds.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n \n gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n-  $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t gengtype.o gengtype-lex.o gengtype-yacc.o $(HOST_LIBS)\n+  $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t gengtype.o gengtype-lex.o gengtype-yacc.o $(BUILD_LIBS)\n \n-gengtype.o : gengtype.c gengtype.h $(HCONFIG_H) $(SYSTEM_H) real.h rtl.def \\\n-  gtyp-gen.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+gengtype.o : gengtype.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n+  real.h rtl.def gtyp-gen.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gengtype.c $(OUTPUT_OPTION)\n \n gengtype-lex.o : $(srcdir)/gengtype-lex.c gengtype.h $(srcdir)/gengtype-yacc.c \\\n-  $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+  $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gengtype-lex.c $(OUTPUT_OPTION)\n \n-gengtype-yacc.o : $(srcdir)/gengtype-yacc.c gengtype.h $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+gengtype-yacc.o : $(srcdir)/gengtype-yacc.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) \\\n+  coretypes.h $(GTM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gengtype-yacc.c $(OUTPUT_OPTION)\n \n # The sed command works around a bug in flex-2.5.4.\n@@ -2092,60 +2119,61 @@ $(srcdir)/gengtype-yacc.c: $(srcdir)/gengtype-yacc.y\n \t $(BISON) $(BISONFLAGS) -d -o gengtype-yacc.c gengtype-yacc.y || \\\n \t ( rm -f $@ && false ) )\n \n-genconditions$(build_exeext) : genconditions.o $(HOST_EARLY_SUPPORT) \\\n-  $(HOST_RTL) $(HOST_ERRORS) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genconditions.o $(HOST_EARLY_SUPPORT) $(HOST_RTL) \\\n-\t    $(HOST_ERRORS) $(HOST_LIBS)\n+genconditions$(build_exeext) : genconditions.o $(BUILD_EARLY_SUPPORT) \\\n+  $(BUILD_RTL) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t genconditions.o $(BUILD_EARLY_SUPPORT) $(BUILD_RTL) \\\n+\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n-genconditions.o : genconditions.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+genconditions.o : genconditions.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(GTM_H) errors.h\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/genconditions.c $(OUTPUT_OPTION)\n \n #\f\n # Compile the libraries to be used by gen*.\n # If we are not cross-building, gen* use the same .o's that cc1 will use,\n # and BUILD_PREFIX_1 is `loser-', just to ensure these rules don't conflict\n # with the rules for rtl.o, etc.\n-$(BUILD_PREFIX_1)rtl.o: $(srcdir)/rtl.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n+$(BUILD_PREFIX_1)rtl.o: $(srcdir)/rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) $(RTL_H) \\\n   real.h $(GGC_H) errors.h\n \trm -f $(BUILD_PREFIX)rtl.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/rtl.c > $(BUILD_PREFIX)rtl.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)rtl.c $(OUTPUT_OPTION)\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/rtl.c > $(BUILD_PREFIX)rtl.c\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)rtl.c $(OUTPUT_OPTION)\n \n-print-rtl1.o: $(srcdir)/print-rtl.c $(HCONFIG_H) \\\n+print-rtl1.o: $(srcdir)/print-rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) \\\n   $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H)\n \trm -f print-rtl1.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/print-rtl.c > print-rtl1.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) print-rtl1.c $(OUTPUT_OPTION)\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/print-rtl.c > print-rtl1.c\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) print-rtl1.c $(OUTPUT_OPTION)\n \n-$(BUILD_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(HCONFIG_H) $(SYSTEM_H) \\\n+$(BUILD_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) \\\n   $(RTL_H) flags.h $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n \trm -f $(BUILD_PREFIX)bitmap.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/bitmap.c > $(BUILD_PREFIX)bitmap.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)bitmap.c $(OUTPUT_OPTION)\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/bitmap.c > $(BUILD_PREFIX)bitmap.c\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)bitmap.c $(OUTPUT_OPTION)\n \n-$(BUILD_PREFIX_1)errors.o: errors.c $(HCONFIG_H) $(SYSTEM_H) errors.h\n+$(BUILD_PREFIX_1)errors.o: errors.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) errors.h\n \trm -f $(BUILD_PREFIX)errors.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/errors.c > $(BUILD_PREFIX)errors.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)errors.c $(OUTPUT_OPTION)\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/errors.c > $(BUILD_PREFIX)errors.c\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)errors.c $(OUTPUT_OPTION)\n \n-$(BUILD_PREFIX_1)varray.o: varray.c $(HCONFIG_H) $(SYSTEM_H) varray.h \\\n+$(BUILD_PREFIX_1)varray.o: varray.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) varray.h \\\n   $(RTL_H) $(GGC_H) $(TREE_H) bitmap.h errors.h\n \trm -f $(BUILD_PREFIX)varray.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/varray.c > \\\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/varray.c > \\\n \t\t$(BUILD_PREFIX)varray.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t\t$(BUILD_PREFIX)varray.c $(OUTPUT_OPTION)\n \n-$(BUILD_PREFIX_1)ggc-none.o: ggc-none.c $(HCONFIG_H) $(SYSTEM_H) $(GGC_H)\n+$(BUILD_PREFIX_1)ggc-none.o: ggc-none.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) $(GGC_H)\n \trm -f $(BUILD_PREFIX)ggc-none.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/ggc-none.c > $(BUILD_PREFIX)ggc-none.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)ggc-none.c $(OUTPUT_OPTION)\n+\tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/ggc-none.c > $(BUILD_PREFIX)ggc-none.c\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)ggc-none.c $(OUTPUT_OPTION)\n \n #\f\n # Remake internationalization support.\n-intl.o: intl.c $(CONFIG_H) system.h intl.h Makefile\n+intl.o: intl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h Makefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n \t  -c $(srcdir)/intl.c $(OUTPUT_OPTION)\n@@ -2178,15 +2206,15 @@ PREPROCESSOR_DEFINES = \\\n   -DGPLUSPLUS_TOOL_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/$(target_alias)\\\" \\\n   -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/backward\\\" \\\n   -DLOCAL_INCLUDE_DIR=\\\"$(local_includedir)\\\" \\\n-  -DCROSS_INCLUDE_DIR=\\\"$(gcc_tooldir)/sys-include\\\" \\\n+  -DCROSS_INCLUDE_DIR=\\\"$(CROSS_SYSTEM_HEADER_DIR)\\\" \\\n   -DTOOL_INCLUDE_DIR=\\\"$(gcc_tooldir)/include\\\"\n \n LIBCPP_OBJS =\tcpplib.o cpplex.o cppmacro.o cppexp.o cppfiles.o cpptrad.o \\\n \t\tcpphash.o cpperror.o cppinit.o cppdefault.o cppmain.o \\\n \t\thashtable.o line-map.o mkdeps.o prefix.o mbchar.o\n \n LIBCPP_DEPS =\t$(CPPLIB_H) cpphash.h line-map.h hashtable.h intl.h \\\n-\t\t$(OBSTACK_H) $(SYSTEM_H)\n+\t\t$(OBSTACK_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n \n # Most of the other archives built/used by this makefile are for\n # targets.  This one is strictly for the host.\n@@ -2195,25 +2223,25 @@ libcpp.a: $(LIBCPP_OBJS)\n \t$(AR) $(AR_FLAGS) libcpp.a $(LIBCPP_OBJS)\n \t-$(RANLIB) libcpp.a\n \n-cppmain.o:  cppmain.c  $(CONFIG_H) $(LIBCPP_DEPS)\n+cppmain.o:  cppmain.c  $(LIBCPP_DEPS)\n \n-cpperror.o: cpperror.c $(CONFIG_H) $(LIBCPP_DEPS)\n-cppexp.o:   cppexp.c   $(CONFIG_H) $(LIBCPP_DEPS)\n-cpplex.o:   cpplex.c   $(CONFIG_H) $(LIBCPP_DEPS) mbchar.h\n-cppmacro.o: cppmacro.c $(CONFIG_H) $(LIBCPP_DEPS)\n-cpplib.o:   cpplib.c   $(CONFIG_H) $(LIBCPP_DEPS)\n-cpphash.o:  cpphash.c  $(CONFIG_H) $(LIBCPP_DEPS)\n-cpptrad.o:  cpptrad.c  $(CONFIG_H) $(LIBCPP_DEPS)\n-cppfiles.o: cppfiles.c $(CONFIG_H) $(LIBCPP_DEPS) $(SPLAY_TREE_H) mkdeps.h\n-cppinit.o:  cppinit.c  $(CONFIG_H) $(LIBCPP_DEPS) cppdefault.h \\\n-\t\tmkdeps.h prefix.h\n+cpperror.o: cpperror.c $(LIBCPP_DEPS)\n+cppexp.o:   cppexp.c   $(LIBCPP_DEPS)\n+cpplex.o:   cpplex.c   $(LIBCPP_DEPS) mbchar.h\n+cppmacro.o: cppmacro.c $(LIBCPP_DEPS)\n+cpplib.o:   cpplib.c   $(LIBCPP_DEPS)\n+cpphash.o:  cpphash.c  $(LIBCPP_DEPS)\n+cpptrad.o:  cpptrad.c  $(LIBCPP_DEPS)\n+cppfiles.o: cppfiles.c $(LIBCPP_DEPS) $(SPLAY_TREE_H) mkdeps.h\n+cppinit.o:  cppinit.c  $(LIBCPP_DEPS) cppdefault.h mkdeps.h prefix.h\n \n-cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) cppdefault.h Makefile\n+cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) cppdefault.h \\\n+\tMakefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n \t  -c $(srcdir)/cppdefault.c $(OUTPUT_OPTION)\n \n-mkdeps.o: mkdeps.c $(CONFIG_H) $(SYSTEM_H) mkdeps.h\n+mkdeps.o: mkdeps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) mkdeps.h\n \n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon).\n@@ -2229,7 +2257,7 @@ unprotoize$(exeext): unprotoize.o $(PROTO_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ unprotoize.o $(PROTO_OBJS) $(LIBS)\n \n protoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) $(SYSTEM_H) \\\n-   Makefile version.h\n+   coretypes.h $(TM_H) Makefile version.h\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n@@ -2284,13 +2312,25 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \tdiff $(srcdir)/protoize.c tmp-proto.c | cat\n \t-rm -f tmp-proto.[cs] tmp-proto$(objext)\n \n-gcov.o: gcov.c gcov-io.h intl.h $(SYSTEM_H) $(CONFIG_H)\n+# gcov-iov.c is run on the build machine to generate gcov-iov.h from version.c\n+gcov-iov.o: gcov-iov.c version.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) coretypes.h $(TM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gcov-iov.c $(OUTPUT_OPTION)\n+gcov-iov$(build_exeext): gcov-iov.o\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) gcov-iov.o -o $@\n+gcov-iov.h: gcov-iov$(build_exeext)\n+\t./$< > $@\n+\n+gcov.o: gcov.c gcov-io.h gcov-iov.h intl.h $(SYSTEM_H) coretypes.h $(TM_H) $(CONFIG_H)\n+gcov-dump.o: gcov-dump.c gcov-io.h gcov-iov.h $(SYSTEM_H) coretypes.h $(TM_H) $(CONFIG_H)\n \n # Only one of 'gcov' or 'gcov.exe' is actually built, depending\n # upon whether $(exeext) is empty or not.\n GCOV_OBJS = gcov.o intl.o version.o\n gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n+GCOV_DUMP_OBJS = gcov-dump.o version.o\n+gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) $(LIBS) -o $@\n #\f\n # Build the include directory.  The stamp files are stmp-* rather than\n # s-* so that mostlyclean does not force the include directory to\n@@ -2338,13 +2378,23 @@ fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \t$(FIXINCSRCDIR)/server.c $(FIXINCSRCDIR)/gnu-regex.h \\\n \t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready\n \t(MAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc && ${PWD}` ; \\\n-\tCC=\"$(HOST_CC)\"; CFLAGS=\"$(HOST_CFLAGS)\"; LDFLAGS=\"$(HOST_LDFLAGS)\"; \\\n+\tCC=\"$(BUILD_CC)\"; CFLAGS=\"$(BUILD_CFLAGS)\"; LDFLAGS=\"$(BUILD_LDFLAGS)\"; \\\n \tWARN_CFLAGS=\"$(WARN_CFLAGS)\"; \\\n \texport MAKE srcdir CC CFLAGS LDFLAGS WARN_CFLAGS; cd ./fixinc && \\\n \t$(SHELL) $${srcdir}/mkfixinc.sh $(build_canonical) $(target))\n \n+.PHONY: install-gcc-tooldir\n+install-gcc-tooldir:\n+\t$(SHELL) ${srcdir}/mkinstalldirs $(gcc_tooldir)\n+\n # Build fixed copies of system files.\n stmp-fixinc: fixinc.sh gsyslimits.h\n+\t@if test ! -d ${SYSTEM_HEADER_DIR}; then \\\n+\t  echo The directory that should contain system headers does not exist: >&2 ; \\\n+\t  echo \"  ${SYSTEM_HEADER_DIR}\" >&2 ; \\\n+\t  if test \"x${SYSTEM_HEADER_DIR}\" = \"x${gcc_tooldir}/sys-include\"; \\\n+\t  then sleep 1; else exit 1; fi; \\\n+\tfi\n \trm -rf include; mkdir include\n \t-chmod a+rx include\n \t(TARGET_MACHINE='$(target)'; srcdir=`cd $(srcdir); ${PWD}`; \\\n@@ -2358,29 +2408,15 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n \t  cp $(srcdir)/gsyslimits.h include/syslimits.h; \\\n \tfi; \\\n \tchmod a+r include/syslimits.h)\n-# If $(SYSTEM_HEADER_DIR) is $(build_tooldir)/sys-include, and\n-# that directory exists, then make sure that $(libsubdir) exists.\n-# This is because cpp is compiled to find $(gcc_tooldir)/include via\n-# $(libsubdir)/$(unlibsubdir), which will only work if $(libsubdir)\n-# exists.\n-# ??? Better would be to use -isystem $(build_tooldir)/sys-include,\n-# but fixincludes does not take such arguments.\n-\tif [ \"$(SYSTEM_HEADER_DIR)\" = \"$(build_tooldir)/sys-include\" ] \\\n-\t   && [ -d $(build_tooldir)/sys-include ]; then \\\n-\t  if [ -d $(libdir) ] ; then true ; else mkdir $(libdir) ; fi; \\\n-\t  if [ -d $(libdir)/gcc-lib ] ; then true ; else mkdir $(libdir)/gcc-lib; fi; \\\n-\t  if [ -d $(libdir)/gcc-lib/$(target_alias) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias) ; fi; \\\n-\t  if [ -d $(libdir)/gcc-lib/$(target_alias)/$(version) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias)/$(version) ; fi; \\\n-\telse true; fi\n \t$(STAMP) stmp-fixinc\n \n # Files related to the fixproto script.\n-# gen-protos and fix-header are compiled with HOST_CC, but they are only\n+# gen-protos and fix-header are compiled with BUILD_CC, but they are only\n # used in native and host-x-target builds, so it's safe to link them with\n # libiberty.a.\n \n deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n-\tif [ -d $(SYSTEM_HEADER_DIR) ]; \\\n+\tif [ -d \"$(SYSTEM_HEADER_DIR)\" ]; \\\n \tthen \\\n \t  CC=\"$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -I. -I$(srcdir) -isystem include -isystem ${SYSTEM_HEADER_DIR}\"; \\\n \t  export CC; \\\n@@ -2392,14 +2428,14 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \n GEN_PROTOS_OBJS = gen-protos.o scan.o\n gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n-\t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t  $(GEN_PROTOS_OBJS) $(HOST_LIBS)\n+\t${BUILD_CC} $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t  $(GEN_PROTOS_OBJS) $(BUILD_LIBS)\n \n-gen-protos.o: gen-protos.c scan.h $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n+gen-protos.o: gen-protos.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n \n-scan.o: scan.c scan.h $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n+scan.o: scan.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n@@ -2415,15 +2451,15 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_\n # so we can (indeed, must) use $(LIBDEPS) and $(LIBS).\n fix-header$(build_exeext): fix-header.o scan-decls.o scan.o xsys-protos.h \\\n            $(LIBDEPS) libcpp.a\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ fix-header.o \\\n+\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ fix-header.o \\\n \t   scan-decls.o scan.o libcpp.a $(LIBS)\n \n fix-header.o: fix-header.c $(OBSTACK_H) scan.h \\\n-\txsys-protos.h $(HCONFIG_H) $(SYSTEM_H) $(CPPLIB_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n+\txsys-protos.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(CPPLIB_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n \n-scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n+scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n+\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,\n@@ -2446,7 +2482,7 @@ stmp-fixproto: fixhdr.ready fixproto stmp-int-hdrs\n \t  FIXPROTO_DEFINES=\"$(FIXPROTO_DEFINES)\"; export FIXPROTO_DEFINES; \\\n \t  mkinstalldirs=\"$(SHELL) $(srcdir)/mkinstalldirs\"; \\\n \t    export mkinstalldirs; \\\n-\t  if [ -d $(SYSTEM_HEADER_DIR) ] ; then \\\n+\t  if [ -d \"$(SYSTEM_HEADER_DIR)\" ]; then \\\n \t    $(SHELL) ${srcdir}/fixproto include include $(SYSTEM_HEADER_DIR); \\\n \t    if [ $$? -eq 0 ] ; then true ; else exit 1 ; fi ; \\\n \t  else true; fi; \\\n@@ -2605,7 +2641,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n # Delete the temporary source copies for cross compilation.\n \t-rm -f $(BUILD_PREFIX_1)rtl.c $(BUILD_PREFIX_1)print-rtl.c\n \t-rm -f $(BUILD_PREFIX_1)bitmap.c $(BUILD_PREFIX_1)errors.c\n-\t-rm -f $(BUILD_PREFIX_1)ggc-none.c\n+\t-rm -f $(BUILD_PREFIX_1)ggc-none.c print-rtl1.c\n # Delete the temp files made in the course of building libgcc.a.\n \t-rm -f xlimits.h\n # Delete other built files.\n@@ -2643,7 +2679,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n INTL_CLEAN = intl.clean\n clean: mostlyclean $(INTL_CLEAN) lang.clean\n \t-rm -f libgcc.a libgcc_eh.a libgcc_s$(SHLIB_EXT) libgcc_s$(SHLIB_EXT).1\n-\t-rm -f config.h tconfig.h hconfig.h tm_p.h\n+\t-rm -f config.h tconfig.h bconfig.h tm_p.h tm.h\n \t-rm -f cs-*\n \t-rm -rf libgcc\n \t-rm -f *.dvi\n@@ -2679,7 +2715,7 @@ distclean: clean $(INTL_DISTCLEAN) lang.distclean\n \t-rm -f site.exp site.bak testsuite/site.exp testsuite/site.bak\n \t-rm -f testsuite/*.log testsuite/*.sum\n \t-cd testsuite && rm -f x *.x *.x? *.exe *.rpo *.o *.s *.S *.c\n-\t-cd testsuite && rm -f *.out *.gcov *.bb *.bbg\n+\t-cd testsuite && rm -f *.out *.gcov *$(coverageexts)\n \t-rm -rf ${QMTEST_DIR} stamp-qmtest\n \t-rm -f intl/libintl.h libintl.h\n \t-rm -f cxxmain.c\n@@ -3032,7 +3068,7 @@ install-mkheaders: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir \\\n \t\t$(itoolsdir)/fix-header$(build_exeext) ; \\\n \telse :; fi\n \t$(INSTALL_PROGRAM) mkheaders $(itoolsdir)/mkheaders\n-\techo 'SYSTEM_HEADER_DIR=\"$(SYSTEM_HEADER_DIR)\"' \\\n+\techo 'SYSTEM_HEADER_DIR=\"'\"$(SYSTEM_HEADER_DIR)\"'\"' \\\n \t\t> $(itoolsdir)/mkheaders.conf\n \techo 'OTHER_FIXINCLUDES_DIRS=\"$(OTHER_FIXINCLUDES_DIRS)\"' \\\n \t\t>> $(itoolsdir)/mkheaders.conf\n@@ -3307,6 +3343,7 @@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_OBJS) $(LIBCPP_OBJS) *.c *.h gen*`\n # the context of the stage_x rule.\n STAGE2_FLAGS_TO_PASS = \\\n \tADAC=\"\\$$(CC)\" \\\n+\tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n@@ -3324,6 +3361,7 @@ STAGE2_FLAGS_TO_PASS = \\\n stage1_build:\n \t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" \\\n \t\tCFLAGS=\"$(STAGE1_CFLAGS)\" MAKEINFO=\"$(MAKEINFO)\" \\\n+\t\tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\" COVERAGE_FLAGS=\n \t$(STAMP) stage1_build\n \techo stage1_build > stage_last\n@@ -3556,6 +3594,10 @@ stage1-start:\n \telse true; \\\n \tfi; done\n stage1: force stage1-start lang.stage1\n+\t-for dir in . $(SUBDIRS) ; \\\n+\tdo \\\n+\t  rm -f $$dir/*$(coverageexts) ; \\\n+\tdone\n \n stage2-start:\n \t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi"}, {"sha": "0a954d81169b517826ae0b4762adbf76596e3c71", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 4, "deletions": 74, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,3 +1,5 @@\n+sinclude(../config/accross.m4)\n+\n dnl See if stdbool.h properly defines bool and true/false.\n AC_DEFUN(gcc_AC_HEADER_STDBOOL,\n [AC_CACHE_CHECK([for working stdbool.h],\n@@ -799,35 +801,6 @@ if test $gcc_cv_enum_bf_unsigned = yes; then\n     [Define if enumerated bitfields are treated as unsigned values.])\n fi])\n \n-dnl Host type sizes probe.\n-dnl By Kaveh R. Ghazi.  One typo fixed since.\n-dnl\n-AC_DEFUN([gcc_AC_COMPILE_CHECK_SIZEOF],\n-[changequote(<<, >>)dnl\n-dnl The name to #define.\n-define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl\n-dnl The cache variable name.\n-define(<<AC_CV_NAME>>, translit(ac_cv_sizeof_$1, [ *], [_p]))dnl\n-changequote([, ])dnl\n-AC_MSG_CHECKING(size of $1)\n-AC_CACHE_VAL(AC_CV_NAME,\n-[for ac_size in 4 8 1 2 16 $3 ; do # List sizes in rough order of prevalence.\n-  AC_TRY_COMPILE([#include \"confdefs.h\"\n-#include <sys/types.h>\n-$2\n-], [switch (0) case 0: case (sizeof ($1) == $ac_size):;], AC_CV_NAME=$ac_size)\n-  if test x$AC_CV_NAME != x ; then break; fi\n-done\n-])\n-if test x$AC_CV_NAME = x ; then\n-  AC_MSG_ERROR([cannot determine a size for $1])\n-fi\n-AC_MSG_RESULT($AC_CV_NAME)\n-AC_DEFINE_UNQUOTED(AC_TYPE_NAME, $AC_CV_NAME, [The number of bytes in type $1])\n-undefine([AC_TYPE_NAME])dnl\n-undefine([AC_CV_NAME])dnl\n-])\n-\n dnl Probe number of bits in a byte.\n dnl Note C89 requires CHAR_BIT >= 8.\n dnl\n@@ -958,49 +931,6 @@ fi\n rm -rf conftest*\n AC_LANG_RESTORE])\n \n-dnl Host endianness probe.\n-dnl This tests byte-within-word endianness.  GCC actually needs\n-dnl to know word-within-larger-object endianness.  They are the\n-dnl same on all presently supported hosts.\n-dnl Differs from AC_C_BIGENDIAN in that it does not require\n-dnl running a program on the host, and it defines the macro we\n-dnl want to see.\n-dnl\n-AC_DEFUN([gcc_AC_C_COMPILE_ENDIAN],\n-[AC_CACHE_CHECK(byte ordering, ac_cv_c_compile_endian,\n-[ac_cv_c_compile_endian=unknown\n-gcc_AC_EXAMINE_OBJECT([\n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-/* This structure must have no internal padding.  */\n-  struct {\n-    char prefix[sizeof \"\\nendian:\" - 1];\n-    short word;\n-    char postfix[2];\n- } tester = {\n-    \"\\nendian:\",\n-#if SIZEOF_SHORT == 4\n-    ('A' << (CHAR_BIT * 3)) | ('B' << (CHAR_BIT * 2)) |\n-#endif\n-    ('A' << CHAR_BIT) | 'B',\n-    'X', '\\n'\n-};],\n- [if   grep 'endian:AB' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=big-endian\n-  elif grep 'endian:BA' conftest.dmp >/dev/null 2>&1; then\n-    ac_cv_c_compile_endian=little-endian\n-  fi])\n-])\n-if test $ac_cv_c_compile_endian = unknown; then\n-  AC_MSG_ERROR([*** unable to determine endianness])\n-elif test $ac_cv_c_compile_endian = big-endian; then\n-  AC_DEFINE(HOST_WORDS_BIG_ENDIAN, 1,\n-  [Define if the host machine stores words of multi-word integers in\n-   big-endian order.])\n-fi\n-])\n-\n dnl Floating point format probe.\n dnl The basic concept is the same as the above: grep the object\n dnl file for an interesting string.  We have to watch out for\n@@ -1063,12 +993,12 @@ format=\n fbigend=\n case $ac_cv_c_float_format in\n     'IEEE (big-endian)' )\n-\tif test $ac_cv_c_compile_endian = little-endian; then\n+\tif test $ac_cv_c_bigendian = no; then\n \t    fbigend=1\n \tfi\n \t;;\n     'IEEE (little-endian)' )\n-\tif test $ac_cv_c_compile_endian = big-endian; then\n+\tif test $ac_cv_c_bigendian = yes; then\n \t    fbigend=0\n \tfi\n \t;;"}, {"sha": "27e49962c0d3c6e1e83ef27d30ff798bc41c7ce9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 267, "deletions": 260, "changes": 527, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -4,13 +4,20 @@\n \n 2002-12-14   Geert Bosch <bosch@gnat.com>\n \n-\t* sem_ch6.adb (Analyze_Subprogram_Body): Recognize additional \n-        case of a body created for a Renaming_As_Body, on which \n-        conformance checks are not performed. Fixes PR ada/5690.\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): Recognize additional\n+\tcase of a body created for a Renaming_As_Body, on which\n+\tconformance checks are not performed. Fixes PR ada/5690.\n+\n+2002-11-30  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* cuintp.c, decl.c, deftarg.c, misc.c, targtyps.c, trans.c,\n+\tutils.c, utils2.c: Include coretypes.h and tm.h, and system.h when\n+\tnot already included.\n+\t* Make-lang.in: Update dependencies.\n \n 2002-11-18  Nathanael Nerode  <neroden@gcc.gnu.org>\n \t* adaint.c (__gnat_tmp_name): Better, but good enough for now,\n-\tsolution to buffer overflow bug on GNU/Linux.\t\n+\tsolution to buffer overflow bug on GNU/Linux.\n \n 2002-11-14  Nathanael Nerode  <neroden@gcc.gnu.org>\n \tCloses PR ada/5856 and PR ada/6919 !\n@@ -32,7 +39,7 @@\n 2002-11-05  Graham Stott  <graham.stott@btinternet.com>\n \tPR ada/8358\n \t* trans.c (gnu_pending_elaboration_lists): New GC root.\n-\t(build_unit_elab): Use.. \n+\t(build_unit_elab): Use..\n \n 2002-10-30   Geert Bosch <bosch@gnat.com>\n \tPR ada/6558\n@@ -41,12 +48,12 @@\n \t* Make-lang.in (misc.o): Add dependency on optabs.h\n \n 2002-10-29   Geert Bosch <bosch@gnat.com>\n-        PR ada/6558\n+\tPR ada/6558\n \t* Make-lang.in (gnatbind): Depend on CONFIG_H\n \n 2002-10-29  Geert bosch  <bosch@gnat.com>\n-        PR ada/6558\n-        * misc.c: Unrevert misc.c (1.13)\n+\tPR ada/6558\n+\t* misc.c: Unrevert misc.c (1.13)\n \n 2002-10-28  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n@@ -55,265 +62,265 @@\n \n 2002-09-25  Nathanael Nerode  <neroden@gcc.gnu.org>\n \tPR ada/5904\n-\t* 5ataprop.adb 5atpopsp.adb 5bosinte.adb 5ftaprop.adb \n-\t5gtaprop.adb 5htaprop.adb 5rosinte.ads 5staprop.adb \n-\t5stpopse.adb 5vtaspri.ads 5zintman.adb 5ztaprop.adb \n-\t7staprop.adb: Correct statements in comments about \n+\t* 5ataprop.adb 5atpopsp.adb 5bosinte.adb 5ftaprop.adb\n+\t5gtaprop.adb 5htaprop.adb 5rosinte.ads 5staprop.adb\n+\t5stpopse.adb 5vtaspri.ads 5zintman.adb 5ztaprop.adb\n+\t7staprop.adb: Correct statements in comments about\n \tmaintainership of GNAT.\n \n \tPR ada/5904\n-\t* 1ssecsta.adb 1ssecsta.ads adadecode.c adadecode.h aux-io.c \n-\tgnatname.adb gnatname.ads mkdir.c osint-b.adb osint-b.ads \n-\tosint-c.adb osint-c.ads osint-l.adb osint-l.ads osint-m.adb \n-\tosint-m.ads prj-makr.adb prj-makr.ads prj-pp.adb prj-pp.ads \n-\ts-atacco.ads s-traceb.adb s-traceb.ads s-traces.adb \n-\ts-traces.ads s-tratas.adb s-tratas.ads sinput-d.adb \n-\tsinput-d.ads switch-b.adb switch-b.ads switch-c.adb \n+\t* 1ssecsta.adb 1ssecsta.ads adadecode.c adadecode.h aux-io.c\n+\tgnatname.adb gnatname.ads mkdir.c osint-b.adb osint-b.ads\n+\tosint-c.adb osint-c.ads osint-l.adb osint-l.ads osint-m.adb\n+\tosint-m.ads prj-makr.adb prj-makr.ads prj-pp.adb prj-pp.ads\n+\ts-atacco.ads s-traceb.adb s-traceb.ads s-traces.adb\n+\ts-traces.ads s-tratas.adb s-tratas.ads sinput-d.adb\n+\tsinput-d.ads switch-b.adb switch-b.ads switch-c.adb\n \tswitch-c.ads switch-m.adb switch-m.ads: Correct statements in\n \tcomments about maintainership of GNAT.\n \n \tPR ada/6919 (forward port of patch for PR ada/5904)\n-\t* 1aexcept.adb 1aexcept.ads 41intnam.ads 42intnam.ads \n-\t4aintnam.ads 4cintnam.ads 4dintnam.ads 4hexcpol.adb \n-\t4lintnam.ads 4mintnam.ads 4nintnam.ads 4onumaux.ads \n-\t4pintnam.ads 4rintnam.ads 4sintnam.ads 4uintnam.ads \n-\t4vcalend.adb 4vintnam.ads 4wcalend.adb 4wexcpol.adb \n-\t4wintnam.ads 4zintnam.ads 4znumaux.ads 4zsytaco.adb \n-\t4zsytaco.ads 51osinte.adb 51osinte.ads 52osinte.adb \n-\t52osinte.ads 52system.ads 53osinte.ads 5aosinte.ads \n-\t5asystem.ads 5atasinf.ads 5ataspri.ads 5avxwork.ads \n-\t5bosinte.ads 5bsystem.ads 5cosinte.ads 5dosinte.ads \n-\t5esystem.ads 5fosinte.ads 5fsystem.ads 5ftasinf.ads \n-\t5ginterr.adb 5gmastop.adb 5gosinte.ads 5gproinf.adb \n-\t5gproinf.ads 5gsystem.ads 5gtasinf.adb 5gtasinf.ads \n-\t5gtpgetc.adb 5hparame.ads 5hsystem.ads 5htaspri.ads \n-\t5iosinte.ads 5itaspri.ads 5ksystem.ads 5kvxwork.ads \n-\t5losinte.ads 5lsystem.ads 5mosinte.ads 5mvxwork.ads \n-\t5ninmaop.adb 5nintman.adb 5nosinte.ads 5ntaspri.ads \n-\t5oosprim.adb 5oparame.adb 5osystem.ads 5posinte.ads \n-\t5posprim.adb 5pvxwork.ads 5rosinte.ads 5rparame.adb \n-\t5sintman.adb 5sosinte.ads 5sparame.adb 5ssystem.ads \n-\t5stasinf.adb 5stasinf.ads 5staspri.ads 5svxwork.ads \n-\t5tosinte.ads 5uosinte.ads 5vasthan.adb 5vinterr.adb \n-\t5vintman.ads 5vosinte.ads 5vosprim.adb 5vosprim.ads \n-\t5vparame.ads 5vsystem.ads 5vtaspri.ads 5vtpopde.adb \n-\t5vtpopde.ads 5vvaflop.adb 5wintman.adb 5wmemory.adb \n-\t5wosinte.ads 5wosprim.adb 5wsystem.ads 5wtaprop.adb \n-\t5wtaspri.ads 5ysystem.ads 5zinterr.adb 5zosinte.adb \n-\t5zosinte.ads 5zosprim.adb 5zsystem.ads 6vcpp.adb 6vcstrea.adb \n-\t7sosprim.adb 86numaux.adb 86numaux.ads 9drpc.adb a-astaco.adb \n-\ta-caldel.ads a-calend.adb a-calend.ads a-chahan.adb \n-\ta-chahan.ads a-colien.adb a-colien.ads a-colire.adb \n-\ta-colire.ads a-comlin.adb a-comlin.ads a-cwila1.ads \n-\ta-decima.adb a-decima.ads a-diocst.adb a-diocst.ads \n-\ta-direio.adb a-direio.ads a-einuoc.adb a-einuoc.ads \n-\ta-except.adb a-except.ads a-excpol.adb a-exctra.adb \n-\ta-exctra.ads a-filico.adb a-filico.ads a-finali.adb \n-\ta-finali.ads a-interr.ads a-intsig.adb a-intsig.ads \n-\ta-ngcefu.adb a-ngcoty.adb a-ngcoty.ads a-ngelfu.adb \n-\ta-nudira.adb a-nudira.ads a-nuflra.adb a-nuflra.ads \n-\ta-numaux.ads a-reatim.ads a-retide.ads a-sequio.adb \n-\ta-sequio.ads a-siocst.adb a-siocst.ads a-ssicst.adb \n-\ta-ssicst.ads a-stmaco.ads a-storio.adb a-strbou.adb \n-\ta-strbou.ads a-stream.ads a-strfix.adb a-strfix.ads \n-\ta-strmap.adb a-strmap.ads a-strsea.adb a-strsea.ads \n-\ta-strunb.adb a-strunb.ads a-ststio.adb a-ststio.ads \n-\ta-stunau.adb a-stunau.ads a-stwibo.adb a-stwibo.ads \n-\ta-stwifi.adb a-stwima.adb a-stwima.ads a-stwise.adb \n-\ta-stwise.ads a-stwiun.adb a-stwiun.ads a-suteio.adb \n-\ta-suteio.ads a-swmwco.ads a-swuwti.adb a-swuwti.ads \n-\ta-sytaco.adb a-sytaco.ads a-tags.adb a-tags.ads a-tasatt.ads \n-\ta-taside.adb a-taside.ads a-teioed.adb a-teioed.ads \n-\ta-textio.adb a-textio.ads a-ticoau.adb a-ticoau.ads \n-\ta-ticoio.adb a-ticoio.ads a-tideau.adb a-tideau.ads \n-\ta-tideio.adb a-tideio.ads a-tienau.adb a-tienau.ads \n-\ta-tienio.adb a-tienio.ads a-tifiio.adb a-tifiio.ads \n-\ta-tiflau.adb a-tiflau.ads a-tiflio.adb a-tiflio.ads \n-\ta-tigeau.adb a-tigeau.ads a-tiinau.adb a-tiinau.ads \n-\ta-tiinio.adb a-tiinio.ads a-timoau.adb a-timoau.ads \n-\ta-timoio.adb a-timoio.ads a-tiocst.adb a-tiocst.ads \n-\ta-titest.adb a-witeio.adb a-witeio.ads a-wtcoau.adb \n-\ta-wtcoau.ads a-wtcoio.adb a-wtcstr.adb a-wtcstr.ads \n-\ta-wtdeau.adb a-wtdeau.ads a-wtdeio.adb a-wtdeio.ads \n-\ta-wtedit.adb a-wtedit.ads a-wtenau.adb a-wtenau.ads \n-\ta-wtenio.adb a-wtenio.ads a-wtfiio.adb a-wtfiio.ads \n-\ta-wtflau.adb a-wtflau.ads a-wtflio.adb a-wtflio.ads \n-\ta-wtgeau.adb a-wtgeau.ads a-wtinau.adb a-wtinau.ads \n-\ta-wtinio.adb a-wtmoau.adb a-wtmoau.ads a-wtmoio.adb \n-\ta-wtmoio.ads a-wttest.adb ada-tree.def ada-tree.h ada.h \n-\tadaint.c adaint.h ali-util.adb ali-util.ads ali.adb ali.ads \n-\talloc.ads argv.c atree.adb atree.ads atree.h back_end.adb \n-\tback_end.ads bcheck.adb bcheck.ads binde.adb binde.ads \n-\tbinderr.adb binderr.ads bindgen.adb bindgen.ads bindusg.adb \n-\tbindusg.ads butil.adb butil.ads cal.c casing.adb casing.ads \n-\tceinfo.adb checks.adb checks.ads cio.c comperr.adb comperr.ads \n-\tcsets.adb csets.ads csinfo.adb cstand.adb cstand.ads \n-\tcstreams.c cuintp.c debug.adb debug.ads debug_a.adb \n-\tdebug_a.ads dec-io.adb dec-io.ads dec.ads decl.c deftarg.c \n-\teinfo.adb einfo.ads einfo.h elists.adb elists.ads elists.h \n-\terrno.c errout.adb errout.ads eval_fat.adb eval_fat.ads exit.c \n-\texp_aggr.adb exp_aggr.ads exp_attr.adb exp_attr.ads \n-\texp_ch10.ads exp_ch11.adb exp_ch11.ads exp_ch12.adb \n-\texp_ch12.ads exp_ch13.adb exp_ch13.ads exp_ch2.adb exp_ch2.ads \n-\texp_ch3.adb exp_ch3.ads exp_ch4.adb exp_ch4.ads exp_ch5.adb \n-\texp_ch5.ads exp_ch6.adb exp_ch6.ads exp_ch7.adb exp_ch7.ads \n-\texp_ch8.adb exp_ch8.ads exp_ch9.adb exp_ch9.ads exp_code.adb \n-\texp_code.ads exp_dbug.adb exp_dbug.ads exp_disp.adb \n-\texp_disp.ads exp_dist.adb exp_dist.ads exp_fixd.adb \n-\texp_fixd.ads exp_imgv.adb exp_imgv.ads exp_intr.adb \n-\texp_intr.ads exp_pakd.adb exp_pakd.ads exp_prag.adb \n-\texp_prag.ads exp_smem.adb exp_smem.ads exp_strm.adb \n-\texp_strm.ads exp_tss.adb exp_tss.ads exp_util.adb exp_util.ads \n-\texp_vfpt.adb exp_vfpt.ads expander.adb expander.ads fe.h \n-\tfinal.c fmap.adb fmap.ads fname-sf.adb fname-sf.ads \n-\tfname-uf.adb fname-uf.ads fname.adb fname.ads freeze.adb \n-\tfreeze.ads frontend.adb frontend.ads g-calend.ads g-comlin.adb \n-\tg-debpoo.adb g-debpoo.ads g-locfil.adb g-os_lib.ads \n-\tg-regist.adb g-regist.ads get_targ.adb get_targ.ads gigi.h \n-\tgmem.c gnat1drv.adb gnat1drv.ads gnat_ug.texi gnatbind.adb \n-\tgnatbind.ads gnatbl.c gnatcmd.adb gnatcmd.ads gnatdll.adb \n-\tgnatfind.adb gnatkr.adb gnatkr.ads gnatlbr.adb gnatlink.adb \n-\tgnatlink.ads gnatls.adb gnatls.ads gnatmake.adb gnatmake.ads \n-\tgnatmem.adb gnatprep.adb gnatprep.ads gnatpsta.adb gnatvsn.ads \n-\tgnatxref.adb hlo.adb hlo.ads hostparm.ads i-c.adb i-cexten.ads \n-\ti-cobol.adb i-cobol.ads i-cpoint.adb i-cpoint.ads i-cpp.adb \n-\ti-cpp.ads i-cstrea.adb i-cstrea.ads i-cstrin.adb i-cstrin.ads \n-\ti-fortra.adb i-os2err.ads i-os2lib.adb i-os2lib.ads \n-\ti-os2syn.ads i-os2thr.ads i-pacdec.adb i-pacdec.ads \n-\timpunit.adb impunit.ads init.c inline.adb inline.ads io-aux.c \n-\titypes.adb itypes.ads krunch.adb krunch.ads lang-options.h \n-\tlang-specs.h layout.adb layout.ads lib-list.adb lib-load.adb \n-\tlib-load.ads lib-sort.adb lib-util.adb lib-util.ads \n-\tlib-writ.adb lib-writ.ads lib-xref.adb lib-xref.ads lib.adb \n-\tlib.ads link.c live.adb live.ads make.adb make.ads makeusg.adb \n-\tmakeusg.ads math_lib.adb mdll.adb mdll.ads memtrack.adb misc.c \n-\tnamet.adb namet.ads namet.h nlists.adb nlists.ads nlists.h \n-\tnmake.adb nmake.ads nmake.adt opt.adb opt.ads osint.adb \n-\tosint.ads output.adb output.ads par-ch10.adb par-ch11.adb \n-\tpar-ch12.adb par-ch13.adb par-ch2.adb par-ch3.adb par-ch4.adb \n-\tpar-ch5.adb par-ch6.adb par-ch7.adb par-ch8.adb par-ch9.adb \n-\tpar-endh.adb par-labl.adb par-load.adb par-prag.adb \n-\tpar-sync.adb par-tchk.adb par-util.adb par.adb par.ads \n-\tprj-attr.adb prj-attr.ads prj-com.adb prj-com.ads prj-dect.adb \n-\tprj-dect.ads prj-env.adb prj-env.ads prj-ext.adb prj-ext.ads \n-\tprj-nmsc.adb prj-nmsc.ads prj-pars.adb prj-pars.ads \n-\tprj-part.adb prj-part.ads prj-proc.adb prj-proc.ads \n-\tprj-strt.adb prj-strt.ads prj-tree.adb prj-tree.ads \n-\tprj-util.adb prj-util.ads prj.adb prj.ads raise.c raise.h \n-\trepinfo.adb repinfo.ads repinfo.h restrict.adb restrict.ads \n-\trident.ads rtsfind.adb rtsfind.ads s-addima.adb s-addima.ads \n-\ts-arit64.adb s-arit64.ads s-assert.adb s-assert.ads \n-\ts-asthan.adb s-asthan.ads s-atacco.adb s-auxdec.adb \n-\ts-auxdec.ads s-bitops.adb s-bitops.ads s-chepoo.ads \n-\ts-direio.adb s-direio.ads s-except.ads s-exctab.adb \n-\ts-exctab.ads s-exnflt.ads s-exngen.adb s-exngen.ads \n-\ts-exnint.ads s-exnlfl.ads s-exnlin.ads s-exnllf.ads \n-\ts-exnlli.ads s-exnsfl.ads s-exnsin.ads s-exnssi.ads \n-\ts-expflt.ads s-expgen.adb s-expgen.ads s-expint.ads \n-\ts-explfl.ads s-explin.ads s-expllf.ads s-explli.ads \n-\ts-expllu.adb s-expllu.ads s-expmod.adb s-expmod.ads \n-\ts-expsfl.ads s-expsin.ads s-expssi.ads s-expuns.adb \n-\ts-expuns.ads s-fatflt.ads s-fatgen.adb s-fatgen.ads \n-\ts-fatlfl.ads s-fatllf.ads s-fatsfl.ads s-ficobl.ads \n-\ts-fileio.adb s-fileio.ads s-finimp.adb s-finimp.ads \n-\ts-finroo.adb s-finroo.ads s-fore.adb s-fore.ads s-imgbiu.adb \n-\ts-imgbiu.ads s-imgboo.adb s-imgboo.ads s-imgcha.adb \n-\ts-imgcha.ads s-imgdec.adb s-imgdec.ads s-imgenu.adb \n-\ts-imgenu.ads s-imgint.adb s-imgint.ads s-imgllb.adb \n-\ts-imgllb.ads s-imglld.adb s-imglld.ads s-imglli.adb \n-\ts-imglli.ads s-imgllu.adb s-imgllu.ads s-imgllw.adb \n-\ts-imgllw.ads s-imgrea.adb s-imgrea.ads s-imguns.adb \n-\ts-imguns.ads s-imgwch.adb s-imgwch.ads s-imgwiu.adb \n-\ts-imgwiu.ads s-inmaop.ads s-interr.adb s-interr.ads \n-\ts-intman.ads s-io.adb s-io.ads s-maccod.ads s-mantis.adb \n-\ts-mantis.ads s-memory.adb s-memory.ads s-osprim.ads \n-\ts-pack03.adb s-pack03.ads s-pack05.adb s-pack05.ads \n-\ts-pack06.adb s-pack06.ads s-pack07.adb s-pack07.ads \n-\ts-pack09.adb s-pack09.ads s-pack10.adb s-pack10.ads \n-\ts-pack11.adb s-pack11.ads s-pack12.adb s-pack12.ads \n-\ts-pack13.adb s-pack13.ads s-pack14.adb s-pack14.ads \n-\ts-pack15.adb s-pack15.ads s-pack17.adb s-pack17.ads \n-\ts-pack18.adb s-pack18.ads s-pack19.adb s-pack19.ads \n-\ts-pack20.adb s-pack20.ads s-pack21.adb s-pack21.ads \n-\ts-pack22.adb s-pack22.ads s-pack23.adb s-pack23.ads \n-\ts-pack24.adb s-pack24.ads s-pack25.adb s-pack25.ads \n-\ts-pack26.adb s-pack26.ads s-pack27.adb s-pack27.ads \n-\ts-pack28.adb s-pack28.ads s-pack29.adb s-pack29.ads \n-\ts-pack30.adb s-pack30.ads s-pack31.adb s-pack31.ads \n-\ts-pack33.adb s-pack33.ads s-pack34.adb s-pack34.ads \n-\ts-pack35.adb s-pack35.ads s-pack36.adb s-pack36.ads \n-\ts-pack37.adb s-pack37.ads s-pack38.adb s-pack38.ads \n-\ts-pack39.adb s-pack39.ads s-pack40.adb s-pack40.ads \n-\ts-pack41.adb s-pack41.ads s-pack42.adb s-pack42.ads \n-\ts-pack43.adb s-pack43.ads s-pack44.adb s-pack44.ads \n-\ts-pack45.adb s-pack45.ads s-pack46.adb s-pack46.ads \n-\ts-pack47.adb s-pack47.ads s-pack48.adb s-pack48.ads \n-\ts-pack49.adb s-pack49.ads s-pack50.adb s-pack50.ads \n-\ts-pack51.adb s-pack51.ads s-pack52.adb s-pack52.ads \n-\ts-pack53.adb s-pack53.ads s-pack54.adb s-pack54.ads \n-\ts-pack55.adb s-pack55.ads s-pack56.adb s-pack56.ads \n-\ts-pack57.adb s-pack57.ads s-pack58.adb s-pack58.ads \n-\ts-pack59.adb s-pack59.ads s-pack60.adb s-pack60.ads \n-\ts-pack61.adb s-pack61.ads s-pack62.adb s-pack62.ads \n-\ts-pack63.adb s-pack63.ads s-parame.adb s-parame.ads \n-\ts-parint.adb s-parint.ads s-pooglo.adb s-pooglo.ads \n-\ts-pooloc.adb s-pooloc.ads s-poosiz.adb s-poosiz.ads \n-\ts-powtab.ads s-proinf.adb s-proinf.ads s-rpc.adb s-rpc.ads \n-\ts-scaval.ads s-secsta.adb s-secsta.ads s-sequio.adb \n-\ts-sequio.ads s-shasto.adb s-shasto.ads s-soflin.adb \n-\ts-soflin.ads s-sopco3.adb s-sopco3.ads s-sopco4.adb \n-\ts-sopco4.ads s-sopco5.adb s-sopco5.ads s-stache.adb \n-\ts-stache.ads s-stalib.adb s-stalib.ads s-stoele.adb \n-\ts-stopoo.ads s-stratt.adb s-stratt.ads s-strops.adb \n-\ts-strops.ads s-taprob.ads s-taprop.ads s-tarest.ads \n-\ts-tasdeb.adb s-tasdeb.ads s-tasinf.adb s-tasinf.ads \n-\ts-tasini.ads s-taskin.ads s-tasren.ads s-tasres.ads \n-\ts-tassta.ads s-tpinop.adb s-tpinop.ads s-tpoben.ads \n-\ts-tpobop.ads s-unstyp.ads s-vaflop.adb s-vaflop.ads \n-\ts-valboo.adb s-valboo.ads s-valcha.adb s-valcha.ads \n-\ts-valdec.adb s-valdec.ads s-valenu.adb s-valenu.ads \n-\ts-valint.adb s-valint.ads s-vallld.adb s-vallld.ads \n-\ts-vallli.adb s-vallli.ads s-valllu.adb s-valllu.ads \n-\ts-valrea.adb s-valrea.ads s-valuns.adb s-valuns.ads \n-\ts-valuti.adb s-valuti.ads s-valwch.adb s-valwch.ads \n-\ts-vercon.adb s-vercon.ads s-vmexta.adb s-vmexta.ads \n-\ts-wchcnv.adb s-wchcnv.ads s-wchcon.ads s-wchjis.adb \n-\ts-wchjis.ads s-wchstw.adb s-wchstw.ads s-wchwts.adb \n-\ts-wchwts.ads s-widboo.adb s-widboo.ads s-widcha.adb \n-\ts-widcha.ads s-widenu.adb s-widenu.ads s-widlli.adb \n-\ts-widlli.ads s-widllu.adb s-widllu.ads s-widwch.adb \n-\ts-widwch.ads s-wwdcha.adb s-wwdcha.ads s-wwdenu.adb \n-\ts-wwdenu.ads s-wwdwch.adb s-wwdwch.ads scans.adb scans.ads \n-\tscn-nlit.adb scn-slit.adb scn.adb scn.ads sdefault.ads sem.adb \n-\tsem.ads sem_aggr.adb sem_aggr.ads sem_attr.adb sem_attr.ads \n-\tsem_case.adb sem_case.ads sem_cat.adb sem_cat.ads sem_ch10.adb \n-\tsem_ch10.ads sem_ch11.adb sem_ch11.ads sem_ch12.adb \n-\tsem_ch12.ads sem_ch13.adb sem_ch13.ads sem_ch2.adb sem_ch2.ads \n-\tsem_ch3.adb sem_ch3.ads sem_ch4.adb sem_ch4.ads sem_ch5.adb \n-\tsem_ch5.ads sem_ch6.adb sem_ch6.ads sem_ch7.adb sem_ch7.ads \n-\tsem_ch8.adb sem_ch8.ads sem_ch9.adb sem_ch9.ads sem_disp.adb \n-\tsem_disp.ads sem_dist.adb sem_dist.ads sem_elab.adb \n-\tsem_elab.ads sem_elim.adb sem_elim.ads sem_eval.adb \n-\tsem_eval.ads sem_intr.adb sem_intr.ads sem_maps.adb \n-\tsem_maps.ads sem_mech.adb sem_mech.ads sem_prag.adb \n-\tsem_prag.ads sem_res.adb sem_res.ads sem_smem.adb sem_smem.ads \n-\tsem_type.adb sem_type.ads sem_util.adb sem_util.ads \n-\tsem_vfpt.adb sem_vfpt.ads sem_warn.adb sem_warn.ads \n-\tsfn_scan.adb sfn_scan.ads sinfo-cn.adb sinfo-cn.ads sinfo.adb \n-\tsinfo.ads sinfo.h sinput-l.adb sinput-l.ads sinput-p.adb \n-\tsinput-p.ads sinput.adb sinput.ads snames.adb snames.ads \n-\tsnames.h sprint.adb sprint.ads stand.adb stand.ads stringt.adb \n-\tstringt.ads stringt.h style.adb style.ads stylesw.adb \n-\tstylesw.ads switch.adb switch.ads sysdep.c system.ads \n-\ttable.adb table.ads targparm.adb targparm.ads targtyps.c \n-\ttbuild.adb tbuild.ads trans.c tree_gen.adb tree_gen.ads \n-\ttree_in.adb tree_in.ads tree_io.adb tree_io.ads treepr.adb \n-\ttreepr.ads treeprs.ads treeprs.adt ttypef.ads ttypes.ads \n-\ttypes.adb types.ads types.h uintp.adb uintp.ads uintp.h \n-\tuname.adb uname.ads urealp.adb urealp.ads urealp.h usage.adb \n-\tusage.ads utils.c utils2.c validsw.adb validsw.ads \n-\twidechar.adb widechar.ads xeinfo.adb xnmake.adb xr_tabls.adb \n-\txr_tabls.ads xref_lib.adb xref_lib.ads xsinfo.adb xsnames.adb \n+\t* 1aexcept.adb 1aexcept.ads 41intnam.ads 42intnam.ads\n+\t4aintnam.ads 4cintnam.ads 4dintnam.ads 4hexcpol.adb\n+\t4lintnam.ads 4mintnam.ads 4nintnam.ads 4onumaux.ads\n+\t4pintnam.ads 4rintnam.ads 4sintnam.ads 4uintnam.ads\n+\t4vcalend.adb 4vintnam.ads 4wcalend.adb 4wexcpol.adb\n+\t4wintnam.ads 4zintnam.ads 4znumaux.ads 4zsytaco.adb\n+\t4zsytaco.ads 51osinte.adb 51osinte.ads 52osinte.adb\n+\t52osinte.ads 52system.ads 53osinte.ads 5aosinte.ads\n+\t5asystem.ads 5atasinf.ads 5ataspri.ads 5avxwork.ads\n+\t5bosinte.ads 5bsystem.ads 5cosinte.ads 5dosinte.ads\n+\t5esystem.ads 5fosinte.ads 5fsystem.ads 5ftasinf.ads\n+\t5ginterr.adb 5gmastop.adb 5gosinte.ads 5gproinf.adb\n+\t5gproinf.ads 5gsystem.ads 5gtasinf.adb 5gtasinf.ads\n+\t5gtpgetc.adb 5hparame.ads 5hsystem.ads 5htaspri.ads\n+\t5iosinte.ads 5itaspri.ads 5ksystem.ads 5kvxwork.ads\n+\t5losinte.ads 5lsystem.ads 5mosinte.ads 5mvxwork.ads\n+\t5ninmaop.adb 5nintman.adb 5nosinte.ads 5ntaspri.ads\n+\t5oosprim.adb 5oparame.adb 5osystem.ads 5posinte.ads\n+\t5posprim.adb 5pvxwork.ads 5rosinte.ads 5rparame.adb\n+\t5sintman.adb 5sosinte.ads 5sparame.adb 5ssystem.ads\n+\t5stasinf.adb 5stasinf.ads 5staspri.ads 5svxwork.ads\n+\t5tosinte.ads 5uosinte.ads 5vasthan.adb 5vinterr.adb\n+\t5vintman.ads 5vosinte.ads 5vosprim.adb 5vosprim.ads\n+\t5vparame.ads 5vsystem.ads 5vtaspri.ads 5vtpopde.adb\n+\t5vtpopde.ads 5vvaflop.adb 5wintman.adb 5wmemory.adb\n+\t5wosinte.ads 5wosprim.adb 5wsystem.ads 5wtaprop.adb\n+\t5wtaspri.ads 5ysystem.ads 5zinterr.adb 5zosinte.adb\n+\t5zosinte.ads 5zosprim.adb 5zsystem.ads 6vcpp.adb 6vcstrea.adb\n+\t7sosprim.adb 86numaux.adb 86numaux.ads 9drpc.adb a-astaco.adb\n+\ta-caldel.ads a-calend.adb a-calend.ads a-chahan.adb\n+\ta-chahan.ads a-colien.adb a-colien.ads a-colire.adb\n+\ta-colire.ads a-comlin.adb a-comlin.ads a-cwila1.ads\n+\ta-decima.adb a-decima.ads a-diocst.adb a-diocst.ads\n+\ta-direio.adb a-direio.ads a-einuoc.adb a-einuoc.ads\n+\ta-except.adb a-except.ads a-excpol.adb a-exctra.adb\n+\ta-exctra.ads a-filico.adb a-filico.ads a-finali.adb\n+\ta-finali.ads a-interr.ads a-intsig.adb a-intsig.ads\n+\ta-ngcefu.adb a-ngcoty.adb a-ngcoty.ads a-ngelfu.adb\n+\ta-nudira.adb a-nudira.ads a-nuflra.adb a-nuflra.ads\n+\ta-numaux.ads a-reatim.ads a-retide.ads a-sequio.adb\n+\ta-sequio.ads a-siocst.adb a-siocst.ads a-ssicst.adb\n+\ta-ssicst.ads a-stmaco.ads a-storio.adb a-strbou.adb\n+\ta-strbou.ads a-stream.ads a-strfix.adb a-strfix.ads\n+\ta-strmap.adb a-strmap.ads a-strsea.adb a-strsea.ads\n+\ta-strunb.adb a-strunb.ads a-ststio.adb a-ststio.ads\n+\ta-stunau.adb a-stunau.ads a-stwibo.adb a-stwibo.ads\n+\ta-stwifi.adb a-stwima.adb a-stwima.ads a-stwise.adb\n+\ta-stwise.ads a-stwiun.adb a-stwiun.ads a-suteio.adb\n+\ta-suteio.ads a-swmwco.ads a-swuwti.adb a-swuwti.ads\n+\ta-sytaco.adb a-sytaco.ads a-tags.adb a-tags.ads a-tasatt.ads\n+\ta-taside.adb a-taside.ads a-teioed.adb a-teioed.ads\n+\ta-textio.adb a-textio.ads a-ticoau.adb a-ticoau.ads\n+\ta-ticoio.adb a-ticoio.ads a-tideau.adb a-tideau.ads\n+\ta-tideio.adb a-tideio.ads a-tienau.adb a-tienau.ads\n+\ta-tienio.adb a-tienio.ads a-tifiio.adb a-tifiio.ads\n+\ta-tiflau.adb a-tiflau.ads a-tiflio.adb a-tiflio.ads\n+\ta-tigeau.adb a-tigeau.ads a-tiinau.adb a-tiinau.ads\n+\ta-tiinio.adb a-tiinio.ads a-timoau.adb a-timoau.ads\n+\ta-timoio.adb a-timoio.ads a-tiocst.adb a-tiocst.ads\n+\ta-titest.adb a-witeio.adb a-witeio.ads a-wtcoau.adb\n+\ta-wtcoau.ads a-wtcoio.adb a-wtcstr.adb a-wtcstr.ads\n+\ta-wtdeau.adb a-wtdeau.ads a-wtdeio.adb a-wtdeio.ads\n+\ta-wtedit.adb a-wtedit.ads a-wtenau.adb a-wtenau.ads\n+\ta-wtenio.adb a-wtenio.ads a-wtfiio.adb a-wtfiio.ads\n+\ta-wtflau.adb a-wtflau.ads a-wtflio.adb a-wtflio.ads\n+\ta-wtgeau.adb a-wtgeau.ads a-wtinau.adb a-wtinau.ads\n+\ta-wtinio.adb a-wtmoau.adb a-wtmoau.ads a-wtmoio.adb\n+\ta-wtmoio.ads a-wttest.adb ada-tree.def ada-tree.h ada.h\n+\tadaint.c adaint.h ali-util.adb ali-util.ads ali.adb ali.ads\n+\talloc.ads argv.c atree.adb atree.ads atree.h back_end.adb\n+\tback_end.ads bcheck.adb bcheck.ads binde.adb binde.ads\n+\tbinderr.adb binderr.ads bindgen.adb bindgen.ads bindusg.adb\n+\tbindusg.ads butil.adb butil.ads cal.c casing.adb casing.ads\n+\tceinfo.adb checks.adb checks.ads cio.c comperr.adb comperr.ads\n+\tcsets.adb csets.ads csinfo.adb cstand.adb cstand.ads\n+\tcstreams.c cuintp.c debug.adb debug.ads debug_a.adb\n+\tdebug_a.ads dec-io.adb dec-io.ads dec.ads decl.c deftarg.c\n+\teinfo.adb einfo.ads einfo.h elists.adb elists.ads elists.h\n+\terrno.c errout.adb errout.ads eval_fat.adb eval_fat.ads exit.c\n+\texp_aggr.adb exp_aggr.ads exp_attr.adb exp_attr.ads\n+\texp_ch10.ads exp_ch11.adb exp_ch11.ads exp_ch12.adb\n+\texp_ch12.ads exp_ch13.adb exp_ch13.ads exp_ch2.adb exp_ch2.ads\n+\texp_ch3.adb exp_ch3.ads exp_ch4.adb exp_ch4.ads exp_ch5.adb\n+\texp_ch5.ads exp_ch6.adb exp_ch6.ads exp_ch7.adb exp_ch7.ads\n+\texp_ch8.adb exp_ch8.ads exp_ch9.adb exp_ch9.ads exp_code.adb\n+\texp_code.ads exp_dbug.adb exp_dbug.ads exp_disp.adb\n+\texp_disp.ads exp_dist.adb exp_dist.ads exp_fixd.adb\n+\texp_fixd.ads exp_imgv.adb exp_imgv.ads exp_intr.adb\n+\texp_intr.ads exp_pakd.adb exp_pakd.ads exp_prag.adb\n+\texp_prag.ads exp_smem.adb exp_smem.ads exp_strm.adb\n+\texp_strm.ads exp_tss.adb exp_tss.ads exp_util.adb exp_util.ads\n+\texp_vfpt.adb exp_vfpt.ads expander.adb expander.ads fe.h\n+\tfinal.c fmap.adb fmap.ads fname-sf.adb fname-sf.ads\n+\tfname-uf.adb fname-uf.ads fname.adb fname.ads freeze.adb\n+\tfreeze.ads frontend.adb frontend.ads g-calend.ads g-comlin.adb\n+\tg-debpoo.adb g-debpoo.ads g-locfil.adb g-os_lib.ads\n+\tg-regist.adb g-regist.ads get_targ.adb get_targ.ads gigi.h\n+\tgmem.c gnat1drv.adb gnat1drv.ads gnat_ug.texi gnatbind.adb\n+\tgnatbind.ads gnatbl.c gnatcmd.adb gnatcmd.ads gnatdll.adb\n+\tgnatfind.adb gnatkr.adb gnatkr.ads gnatlbr.adb gnatlink.adb\n+\tgnatlink.ads gnatls.adb gnatls.ads gnatmake.adb gnatmake.ads\n+\tgnatmem.adb gnatprep.adb gnatprep.ads gnatpsta.adb gnatvsn.ads\n+\tgnatxref.adb hlo.adb hlo.ads hostparm.ads i-c.adb i-cexten.ads\n+\ti-cobol.adb i-cobol.ads i-cpoint.adb i-cpoint.ads i-cpp.adb\n+\ti-cpp.ads i-cstrea.adb i-cstrea.ads i-cstrin.adb i-cstrin.ads\n+\ti-fortra.adb i-os2err.ads i-os2lib.adb i-os2lib.ads\n+\ti-os2syn.ads i-os2thr.ads i-pacdec.adb i-pacdec.ads\n+\timpunit.adb impunit.ads init.c inline.adb inline.ads io-aux.c\n+\titypes.adb itypes.ads krunch.adb krunch.ads lang-options.h\n+\tlang-specs.h layout.adb layout.ads lib-list.adb lib-load.adb\n+\tlib-load.ads lib-sort.adb lib-util.adb lib-util.ads\n+\tlib-writ.adb lib-writ.ads lib-xref.adb lib-xref.ads lib.adb\n+\tlib.ads link.c live.adb live.ads make.adb make.ads makeusg.adb\n+\tmakeusg.ads math_lib.adb mdll.adb mdll.ads memtrack.adb misc.c\n+\tnamet.adb namet.ads namet.h nlists.adb nlists.ads nlists.h\n+\tnmake.adb nmake.ads nmake.adt opt.adb opt.ads osint.adb\n+\tosint.ads output.adb output.ads par-ch10.adb par-ch11.adb\n+\tpar-ch12.adb par-ch13.adb par-ch2.adb par-ch3.adb par-ch4.adb\n+\tpar-ch5.adb par-ch6.adb par-ch7.adb par-ch8.adb par-ch9.adb\n+\tpar-endh.adb par-labl.adb par-load.adb par-prag.adb\n+\tpar-sync.adb par-tchk.adb par-util.adb par.adb par.ads\n+\tprj-attr.adb prj-attr.ads prj-com.adb prj-com.ads prj-dect.adb\n+\tprj-dect.ads prj-env.adb prj-env.ads prj-ext.adb prj-ext.ads\n+\tprj-nmsc.adb prj-nmsc.ads prj-pars.adb prj-pars.ads\n+\tprj-part.adb prj-part.ads prj-proc.adb prj-proc.ads\n+\tprj-strt.adb prj-strt.ads prj-tree.adb prj-tree.ads\n+\tprj-util.adb prj-util.ads prj.adb prj.ads raise.c raise.h\n+\trepinfo.adb repinfo.ads repinfo.h restrict.adb restrict.ads\n+\trident.ads rtsfind.adb rtsfind.ads s-addima.adb s-addima.ads\n+\ts-arit64.adb s-arit64.ads s-assert.adb s-assert.ads\n+\ts-asthan.adb s-asthan.ads s-atacco.adb s-auxdec.adb\n+\ts-auxdec.ads s-bitops.adb s-bitops.ads s-chepoo.ads\n+\ts-direio.adb s-direio.ads s-except.ads s-exctab.adb\n+\ts-exctab.ads s-exnflt.ads s-exngen.adb s-exngen.ads\n+\ts-exnint.ads s-exnlfl.ads s-exnlin.ads s-exnllf.ads\n+\ts-exnlli.ads s-exnsfl.ads s-exnsin.ads s-exnssi.ads\n+\ts-expflt.ads s-expgen.adb s-expgen.ads s-expint.ads\n+\ts-explfl.ads s-explin.ads s-expllf.ads s-explli.ads\n+\ts-expllu.adb s-expllu.ads s-expmod.adb s-expmod.ads\n+\ts-expsfl.ads s-expsin.ads s-expssi.ads s-expuns.adb\n+\ts-expuns.ads s-fatflt.ads s-fatgen.adb s-fatgen.ads\n+\ts-fatlfl.ads s-fatllf.ads s-fatsfl.ads s-ficobl.ads\n+\ts-fileio.adb s-fileio.ads s-finimp.adb s-finimp.ads\n+\ts-finroo.adb s-finroo.ads s-fore.adb s-fore.ads s-imgbiu.adb\n+\ts-imgbiu.ads s-imgboo.adb s-imgboo.ads s-imgcha.adb\n+\ts-imgcha.ads s-imgdec.adb s-imgdec.ads s-imgenu.adb\n+\ts-imgenu.ads s-imgint.adb s-imgint.ads s-imgllb.adb\n+\ts-imgllb.ads s-imglld.adb s-imglld.ads s-imglli.adb\n+\ts-imglli.ads s-imgllu.adb s-imgllu.ads s-imgllw.adb\n+\ts-imgllw.ads s-imgrea.adb s-imgrea.ads s-imguns.adb\n+\ts-imguns.ads s-imgwch.adb s-imgwch.ads s-imgwiu.adb\n+\ts-imgwiu.ads s-inmaop.ads s-interr.adb s-interr.ads\n+\ts-intman.ads s-io.adb s-io.ads s-maccod.ads s-mantis.adb\n+\ts-mantis.ads s-memory.adb s-memory.ads s-osprim.ads\n+\ts-pack03.adb s-pack03.ads s-pack05.adb s-pack05.ads\n+\ts-pack06.adb s-pack06.ads s-pack07.adb s-pack07.ads\n+\ts-pack09.adb s-pack09.ads s-pack10.adb s-pack10.ads\n+\ts-pack11.adb s-pack11.ads s-pack12.adb s-pack12.ads\n+\ts-pack13.adb s-pack13.ads s-pack14.adb s-pack14.ads\n+\ts-pack15.adb s-pack15.ads s-pack17.adb s-pack17.ads\n+\ts-pack18.adb s-pack18.ads s-pack19.adb s-pack19.ads\n+\ts-pack20.adb s-pack20.ads s-pack21.adb s-pack21.ads\n+\ts-pack22.adb s-pack22.ads s-pack23.adb s-pack23.ads\n+\ts-pack24.adb s-pack24.ads s-pack25.adb s-pack25.ads\n+\ts-pack26.adb s-pack26.ads s-pack27.adb s-pack27.ads\n+\ts-pack28.adb s-pack28.ads s-pack29.adb s-pack29.ads\n+\ts-pack30.adb s-pack30.ads s-pack31.adb s-pack31.ads\n+\ts-pack33.adb s-pack33.ads s-pack34.adb s-pack34.ads\n+\ts-pack35.adb s-pack35.ads s-pack36.adb s-pack36.ads\n+\ts-pack37.adb s-pack37.ads s-pack38.adb s-pack38.ads\n+\ts-pack39.adb s-pack39.ads s-pack40.adb s-pack40.ads\n+\ts-pack41.adb s-pack41.ads s-pack42.adb s-pack42.ads\n+\ts-pack43.adb s-pack43.ads s-pack44.adb s-pack44.ads\n+\ts-pack45.adb s-pack45.ads s-pack46.adb s-pack46.ads\n+\ts-pack47.adb s-pack47.ads s-pack48.adb s-pack48.ads\n+\ts-pack49.adb s-pack49.ads s-pack50.adb s-pack50.ads\n+\ts-pack51.adb s-pack51.ads s-pack52.adb s-pack52.ads\n+\ts-pack53.adb s-pack53.ads s-pack54.adb s-pack54.ads\n+\ts-pack55.adb s-pack55.ads s-pack56.adb s-pack56.ads\n+\ts-pack57.adb s-pack57.ads s-pack58.adb s-pack58.ads\n+\ts-pack59.adb s-pack59.ads s-pack60.adb s-pack60.ads\n+\ts-pack61.adb s-pack61.ads s-pack62.adb s-pack62.ads\n+\ts-pack63.adb s-pack63.ads s-parame.adb s-parame.ads\n+\ts-parint.adb s-parint.ads s-pooglo.adb s-pooglo.ads\n+\ts-pooloc.adb s-pooloc.ads s-poosiz.adb s-poosiz.ads\n+\ts-powtab.ads s-proinf.adb s-proinf.ads s-rpc.adb s-rpc.ads\n+\ts-scaval.ads s-secsta.adb s-secsta.ads s-sequio.adb\n+\ts-sequio.ads s-shasto.adb s-shasto.ads s-soflin.adb\n+\ts-soflin.ads s-sopco3.adb s-sopco3.ads s-sopco4.adb\n+\ts-sopco4.ads s-sopco5.adb s-sopco5.ads s-stache.adb\n+\ts-stache.ads s-stalib.adb s-stalib.ads s-stoele.adb\n+\ts-stopoo.ads s-stratt.adb s-stratt.ads s-strops.adb\n+\ts-strops.ads s-taprob.ads s-taprop.ads s-tarest.ads\n+\ts-tasdeb.adb s-tasdeb.ads s-tasinf.adb s-tasinf.ads\n+\ts-tasini.ads s-taskin.ads s-tasren.ads s-tasres.ads\n+\ts-tassta.ads s-tpinop.adb s-tpinop.ads s-tpoben.ads\n+\ts-tpobop.ads s-unstyp.ads s-vaflop.adb s-vaflop.ads\n+\ts-valboo.adb s-valboo.ads s-valcha.adb s-valcha.ads\n+\ts-valdec.adb s-valdec.ads s-valenu.adb s-valenu.ads\n+\ts-valint.adb s-valint.ads s-vallld.adb s-vallld.ads\n+\ts-vallli.adb s-vallli.ads s-valllu.adb s-valllu.ads\n+\ts-valrea.adb s-valrea.ads s-valuns.adb s-valuns.ads\n+\ts-valuti.adb s-valuti.ads s-valwch.adb s-valwch.ads\n+\ts-vercon.adb s-vercon.ads s-vmexta.adb s-vmexta.ads\n+\ts-wchcnv.adb s-wchcnv.ads s-wchcon.ads s-wchjis.adb\n+\ts-wchjis.ads s-wchstw.adb s-wchstw.ads s-wchwts.adb\n+\ts-wchwts.ads s-widboo.adb s-widboo.ads s-widcha.adb\n+\ts-widcha.ads s-widenu.adb s-widenu.ads s-widlli.adb\n+\ts-widlli.ads s-widllu.adb s-widllu.ads s-widwch.adb\n+\ts-widwch.ads s-wwdcha.adb s-wwdcha.ads s-wwdenu.adb\n+\ts-wwdenu.ads s-wwdwch.adb s-wwdwch.ads scans.adb scans.ads\n+\tscn-nlit.adb scn-slit.adb scn.adb scn.ads sdefault.ads sem.adb\n+\tsem.ads sem_aggr.adb sem_aggr.ads sem_attr.adb sem_attr.ads\n+\tsem_case.adb sem_case.ads sem_cat.adb sem_cat.ads sem_ch10.adb\n+\tsem_ch10.ads sem_ch11.adb sem_ch11.ads sem_ch12.adb\n+\tsem_ch12.ads sem_ch13.adb sem_ch13.ads sem_ch2.adb sem_ch2.ads\n+\tsem_ch3.adb sem_ch3.ads sem_ch4.adb sem_ch4.ads sem_ch5.adb\n+\tsem_ch5.ads sem_ch6.adb sem_ch6.ads sem_ch7.adb sem_ch7.ads\n+\tsem_ch8.adb sem_ch8.ads sem_ch9.adb sem_ch9.ads sem_disp.adb\n+\tsem_disp.ads sem_dist.adb sem_dist.ads sem_elab.adb\n+\tsem_elab.ads sem_elim.adb sem_elim.ads sem_eval.adb\n+\tsem_eval.ads sem_intr.adb sem_intr.ads sem_maps.adb\n+\tsem_maps.ads sem_mech.adb sem_mech.ads sem_prag.adb\n+\tsem_prag.ads sem_res.adb sem_res.ads sem_smem.adb sem_smem.ads\n+\tsem_type.adb sem_type.ads sem_util.adb sem_util.ads\n+\tsem_vfpt.adb sem_vfpt.ads sem_warn.adb sem_warn.ads\n+\tsfn_scan.adb sfn_scan.ads sinfo-cn.adb sinfo-cn.ads sinfo.adb\n+\tsinfo.ads sinfo.h sinput-l.adb sinput-l.ads sinput-p.adb\n+\tsinput-p.ads sinput.adb sinput.ads snames.adb snames.ads\n+\tsnames.h sprint.adb sprint.ads stand.adb stand.ads stringt.adb\n+\tstringt.ads stringt.h style.adb style.ads stylesw.adb\n+\tstylesw.ads switch.adb switch.ads sysdep.c system.ads\n+\ttable.adb table.ads targparm.adb targparm.ads targtyps.c\n+\ttbuild.adb tbuild.ads trans.c tree_gen.adb tree_gen.ads\n+\ttree_in.adb tree_in.ads tree_io.adb tree_io.ads treepr.adb\n+\ttreepr.ads treeprs.ads treeprs.adt ttypef.ads ttypes.ads\n+\ttypes.adb types.ads types.h uintp.adb uintp.ads uintp.h\n+\tuname.adb uname.ads urealp.adb urealp.ads urealp.h usage.adb\n+\tusage.ads utils.c utils2.c validsw.adb validsw.ads\n+\twidechar.adb widechar.ads xeinfo.adb xnmake.adb xr_tabls.adb\n+\txr_tabls.ads xref_lib.adb xref_lib.ads xsinfo.adb xsnames.adb\n \txtreeprs.adb: Correct statements in comments about maintainership\n \tof GNAT.\n "}, {"sha": "d7a6aff87b55284b44ff848ea635962b0b1bdc3d", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 35, "deletions": 39, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -972,14 +972,13 @@ ada/memtrack.o  : ada/memtrack.adb ada/s-memory.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 \\\n \t $(ADA_INCLUDES) $< $(OUTPUT_OPTION) \n \n-ada/adadecode.o : ada/adadecode.c ada/adadecode.h $(CONFIG_H) $(SYSTEM_H) \\\n-\tada/adadecode.h \n-ada/adaint.o  : ada/adaint.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n-ada/argv.o    : ada/argv.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n+ada/adadecode.o : ada/adadecode.c $(CONFIG_H) $(SYSTEM_H) ada/adadecode.h\n+ada/adaint.o   : ada/adaint.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n+ada/argv.o     : ada/argv.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n ada/cstreams.o : ada/cstreams.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n-ada/exit.o    : ada/exit.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n-ada/final.o   : ada/final.c $(CONFIG_H) $(SYSTEM_H) ada/raise.h \n-ada/link.o    : ada/link.c\n+ada/exit.o     : ada/exit.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n+ada/final.o    : ada/final.c $(CONFIG_H) $(SYSTEM_H) ada/raise.h \n+ada/link.o     : ada/link.c\n \n ada/cio.o     : ada/cio.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_ADA_CFLAGS) $(RT_FLAGS) \\\n@@ -999,44 +998,41 @@ ada/tracebak.o  : ada/tracebak.c $(CONFIG_H) $(SYSTEM_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t      -fno-omit-frame-pointer $< $(OUTPUT_OPTION) \n \n-ada/cuintp.o : ada/cuintp.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) ada/ada.h \\\n-   ada/types.h ada/uintp.h ada/atree.h ada/stringt.h ada/elists.h \\\n+ada/cuintp.o : ada/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   ada/ada.h ada/types.h ada/uintp.h ada/atree.h ada/stringt.h ada/elists.h \\\n    ada/nlists.h ada/fe.h ada/gigi.h\n \n-ada/decl.o : ada/decl.c $(CONFIG_H) $(TREE_H) $(srcdir)/flags.h \\\n-   $(srcdir)/toplev.h $(srcdir)/convert.h ada/ada.h ada/types.h ada/atree.h \\\n-   ada/nlists.h ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/snames.h \\\n-   ada/namet.h ada/stringt.h ada/repinfo.h ada/fe.h $(ADA_TREE_H) ada/gigi.h \\\n-   gt-ada-decl.h\n-\n-ada/misc.o : ada/misc.c $(CONFIG_H) $(TREE_H) $(RTL_H) $(srcdir)/expr.h \\\n-   insn-codes.h insn-flags.h insn-config.h $(srcdir)/recog.h \\\n-   $(srcdir)/flags.h $(srcdir)/diagnostic.h $(srcdir)/output.h \\\n-   $(srcdir)/except.h tm_p.h $(srcdir)/langhooks.h $(srcdir)/debug.h \\\n-   $(srcdir)/langhooks-def.h $(srcdir)/libfuncs.h $(srcdir)/optabs.h \\\n-   ada/ada.h ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h \\\n-   ada/einfo.h ada/namet.h ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) \\\n-   ada/gigi.h ada/adadecode.h\n-\n-ada/targtyps.o : ada/targtyps.c $(CONFIG_H) ada/ada.h ada/types.h ada/atree.h \\\n-   ada/nlists.h ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/namet.h \\\n-   ada/snames.h ada/stringt.h ada/urealp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h\n-\n-ada/trans.o : ada/trans.c $(CONFIG_H) $(TREE_H) $(RTL_H) $(srcdir)/flags.h \\\n-   ada/ada.h $(srcdir)/except.h ada/types.h ada/atree.h ada/nlists.h \\\n+ada/decl.o : ada/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   flags.h toplev.h convert.h ada/ada.h ada/types.h ada/atree.h ada/nlists.h \\\n+   ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/snames.h ada/namet.h \\\n+   ada/stringt.h ada/repinfo.h ada/fe.h $(ADA_TREE_H) ada/gigi.h gt-ada-decl.h\n+\n+ada/misc.o : ada/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) expr.h insn-codes.h insn-flags.h insn-config.h recog.h flags.h \\\n+   diagnostic.h output.h except.h $(TM_P_H) langhooks.h debug.h $(LANGHOOKS_DEF_H) \\\n+   libfuncs.h $(OPTABS_H) ada/ada.h ada/types.h ada/atree.h ada/nlists.h \\\n+   ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h ada/stringt.h ada/uintp.h \\\n+   ada/fe.h $(ADA_TREE_H) ada/gigi.h ada/adadecode.h\n+\n+ada/targtyps.o : ada/targtyps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+   ada/ada.h ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/uintp.h \\\n+   ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h ada/urealp.h \\\n+   ada/fe.h $(ADA_TREE_H) ada/gigi.h\n+\n+ada/trans.o : ada/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(RTL_H) flags.h ada/ada.h except.h ada/types.h ada/atree.h ada/nlists.h \\\n    ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h \\\n    ada/stringt.h ada/urealp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h gt-ada-trans.h\n \n-ada/utils.o : ada/utils.c $(CONFIG_H) $(TREE_H) $(srcdir)/flags.h \\\n-   $(srcdir)/expr.h $(srcdir)/convert.h $(srcdir)/defaults.h ada/ada.h \\\n-   ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h \\\n-   ada/namet.h ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h \\\n-   gt-ada-utils.h gtype-ada.h\n+ada/utils.o : ada/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   flags.h expr.h convert.h defaults.h ada/ada.h ada/types.h ada/atree.h \\\n+   ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h ada/stringt.h \\\n+   ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h gt-ada-utils.h gtype-ada.h\n \n-ada/utils2.o : ada/utils2.c $(CONFIG_H) $(TREE_H) $(srcdir)/flags.h ada/ada.h \\\n-   ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h \\\n-   ada/namet.h ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) \\\n-   ada/gigi.h\n+ada/utils2.o : ada/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+   $(TREE_H) flags.h ada/ada.h ada/types.h ada/atree.h ada/nlists.h \\\n+   ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h \\\n+   ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h\n \n #\n # DO NOT PUT SPECIAL RULES BELOW, THIS SECTION IS UPDATED AUTOMATICALLY"}, {"sha": "d5eeb2d2ce185c84c3e539141e347397f151377b", "filename": "gcc/ada/cuintp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fcuintp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fcuintp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcuintp.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -30,6 +30,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"ada.h\"\n #include \"types.h\""}, {"sha": "adf648111b3a9673850320e25c0e5206fd8671ab", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -27,6 +27,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "d69ce22718810e69bf509243b0ed91b90ab5198e", "filename": "gcc/ada/deftarg.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fdeftarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fdeftarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdeftarg.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -34,6 +34,8 @@\n /* Include a default definition for TARGET_FLAGS for gnatpsta.  */\n \n #include \"config.h\"\n-#define MIN(X,Y) ((X) < (Y) ? (X) : (Y))\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n \n int target_flags = TARGET_DEFAULT;"}, {"sha": "1c41f87d56a533ba05adb00f5f39e1b322ea734d", "filename": "gcc/ada/lang-specs.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flang-specs.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -31,12 +31,13 @@\n   {\".ads\", \"@ada\", 0},\n   {\".adb\", \"@ada\", 0},\n   {\"@ada\",\n-   \"gnat1 %{^I*} %{k8:-gnatk8} %{w:-gnatws} %1 %{!Q:-quiet} %{nostdinc*}\\\n+   \"\\\n+ %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n+ %{!gnatc:%{!gnatz:%{!gnats:%{!S:%{!c:\\\n+    %eone of -c, -S, -gnatc, -gnatz, or -gnats is required for Ada}}}}}\\\n+ gnat1 %{I*} %{k8:-gnatk8} %{w:-gnatws} %1 %{!Q:-quiet} %{nostdinc*}\\\n     -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n     %{g*} %{O*} %{W*} %{w} %{p} %{pg:-p} %{m*} %{a} %{f*} %{d*}\\\n     %{!S:%{o*:%w%*-gnatO}} \\\n- %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n-    %i %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-    %{!S:%{!gnatc:%{!gnatz:%{!gnats:as %a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}\\\n-\t\t\t\t    %{!c:%e-c or -S required for Ada}\\\n-\t\t\t\t    %{!pipe:%g.s} %A\\n}}}} \", 0},\n+    %i %{S:%W{o*}%{!o*:-o %b.s}} \\\n+    %{!gnatc:%{!gnatz:%{!gnats:%(invoke_as)}}}\", 0},"}, {"sha": "a8293e709fb5e85270edc6e4b7f5ffbd84c888e6", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -37,6 +37,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"errors.h\"\n@@ -207,8 +209,8 @@ gnat_parse_file (set_yydebug)\n \n /* Decode all the language specific options that cannot be decoded by GCC.\n    The option decoding phase of GCC calls this routine on the flags that\n-   it cannot decode. This routine returns 1 if it is successful, otherwise\n-   it returns 0. */\n+   it cannot decode.  This routine returns the number of consecutive arguments\n+   from ARGV that it successfully decoded; 0 indicates failure.  */\n \n static int\n gnat_decode_option (argc, argv)\n@@ -220,10 +222,28 @@ gnat_decode_option (argc, argv)\n \n   if (!strncmp (p, \"-I\", 2))\n     {\n-      /* Pass the -I switches as-is. */\n-      gnat_argv[gnat_argc] = p;\n-      gnat_argc ++;\n-      return 1;\n+      /* We might get -I foo or -Ifoo.  Canonicalize to the latter.  */\n+      if (p[2] == '\\0')\n+\t{\n+\t  char *q;\n+\n+\t  if (argv[1] == 0)\n+\t    return 0;\n+\n+\t  q = xmalloc (sizeof(\"-I\") + strlen (argv[1]));\n+\t  strcpy (q, \"-I\");\n+\t  strcat (q, argv[1]);\n+\n+\t  gnat_argv[gnat_argc] = q;\n+\t  gnat_argc ++;\n+\t  return 2;  /* consumed argument */\n+\t}\n+      else\n+\t{\n+\t  gnat_argv[gnat_argc] = p;\n+\t  gnat_argc ++;\n+\t  return 1;\n+\t}\n     }\n \n   else if (!strncmp (p, \"-gant\", 5))"}, {"sha": "39a009b0e94732241d5bd1eb18182f54b20dd763", "filename": "gcc/ada/targtyps.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargtyps.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -35,6 +35,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"real.h\"\n #include \"rtl.h\""}, {"sha": "68bb09ed4e9d947e6e01a976c54d7f9c7cb9315e", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -27,6 +27,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"real.h\"\n #include \"flags.h\""}, {"sha": "a5d2860652f2c3b44613fd3353345ef7560bdaac", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -27,6 +27,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"defaults.h\""}, {"sha": "3777a5b2cdd8126a919310f719348ce0071cc2f8", "filename": "gcc/ada/utils2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fada%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils2.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -27,6 +27,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"ada.h\""}, {"sha": "12029f053cd1484d131c24e0e494ea2f70eb7f14", "filename": "gcc/alias.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\""}, {"sha": "313ebbf524316cf29cdc08e463f780d1c7d25d16", "filename": "gcc/attribs.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "a72b9b9dc3c1dbc4712707b8b4b83c2718866f4b", "filename": "gcc/basic-block.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -112,7 +112,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n    be done, other than zero the statistics on the first allocation.  */\n #define MAX_REGNO_REG_SET(NUM_REGS, NEW_P, RENUMBER_P)\n \n-/* Type we use to hold basic block counters.  Should be at least 64bit.  */\n+/* Type we use to hold basic block counters.  Should be at least\n+   64bit.  Although a counter cannot be negative, we use a signed\n+   type, because erroneous negative counts can be generated when the\n+   flow graph is manipulated by various optimizations.  A signed type\n+   makes those easy to detect. */\n typedef HOST_WIDEST_INT gcov_type;\n \n /* Control flow edge information.  */"}, {"sha": "3933c725a86c04044b10282ad27c6d6e22f47a4b", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -82,6 +82,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\""}, {"sha": "7b93eab88a2e0be82cec6680a27075a43629a760", "filename": "gcc/bitmap.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"obstack.h\""}, {"sha": "7c9d999979e62a6dc9b6180320e8a1783d89afb4", "filename": "gcc/builtins.c", "status": "modified", "additions": 185, "deletions": 3, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"machmode.h\"\n #include \"real.h\"\n #include \"rtl.h\"\n@@ -150,7 +152,6 @@ static tree fold_builtin_constant_p\tPARAMS ((tree));\n static tree fold_builtin_classify_type\tPARAMS ((tree));\n static tree fold_builtin_inf\t\tPARAMS ((tree, int));\n static tree fold_builtin_nan\t\tPARAMS ((tree, tree, int));\n-static tree build_function_call_expr\tPARAMS ((tree, tree));\n static int validate_arglist\t\tPARAMS ((tree, ...));\n \n /* Return the alignment in bits of EXP, a pointer valued expression.\n@@ -1484,6 +1485,7 @@ expand_builtin_mathfn (exp, target, subtarget)\n   tree fndecl = TREE_OPERAND (TREE_OPERAND (exp, 0), 0);\n   tree arglist = TREE_OPERAND (exp, 1);\n   enum machine_mode argmode;\n+  bool errno_set = true;\n \n   if (!validate_arglist (arglist, REAL_TYPE, VOID_TYPE))\n     return 0;\n@@ -1534,6 +1536,26 @@ expand_builtin_mathfn (exp, target, subtarget)\n     case BUILT_IN_LOGF:\n     case BUILT_IN_LOGL:\n       builtin_optab = log_optab; break;\n+    case BUILT_IN_FLOOR:\n+    case BUILT_IN_FLOORF:\n+    case BUILT_IN_FLOORL:\n+      errno_set = false ; builtin_optab = floor_optab; break;\n+    case BUILT_IN_CEIL:\n+    case BUILT_IN_CEILF:\n+    case BUILT_IN_CEILL:\n+      errno_set = false ; builtin_optab = ceil_optab; break;\n+    case BUILT_IN_TRUNC:\n+    case BUILT_IN_TRUNCF:\n+    case BUILT_IN_TRUNCL:\n+      errno_set = false ; builtin_optab = trunc_optab; break;\n+    case BUILT_IN_ROUND:\n+    case BUILT_IN_ROUNDF:\n+    case BUILT_IN_ROUNDL:\n+      errno_set = false ; builtin_optab = round_optab; break;\n+    case BUILT_IN_NEARBYINT:\n+    case BUILT_IN_NEARBYINTF:\n+    case BUILT_IN_NEARBYINTL:\n+      errno_set = false ; builtin_optab = nearbyint_optab; break;\n     default:\n       abort ();\n     }\n@@ -1554,7 +1576,7 @@ expand_builtin_mathfn (exp, target, subtarget)\n \n   /* If errno must be maintained, we must set it to EDOM for NaN results.  */\n \n-  if (flag_errno_math && HONOR_NANS (argmode))\n+  if (flag_errno_math && errno_set && HONOR_NANS (argmode))\n     {\n       rtx lab1;\n \n@@ -3744,6 +3766,21 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n       case BUILT_IN_FPUTC_UNLOCKED:\n       case BUILT_IN_FPUTS_UNLOCKED:\n       case BUILT_IN_FWRITE_UNLOCKED:\n+      case BUILT_IN_FLOOR:\n+      case BUILT_IN_FLOORF:\n+      case BUILT_IN_FLOORL:\n+      case BUILT_IN_CEIL:\n+      case BUILT_IN_CEILF:\n+      case BUILT_IN_CEILL:\n+      case BUILT_IN_TRUNC:\n+      case BUILT_IN_TRUNCF:\n+      case BUILT_IN_TRUNCL:\n+      case BUILT_IN_ROUND:\n+      case BUILT_IN_ROUNDF:\n+      case BUILT_IN_ROUNDL:\n+      case BUILT_IN_NEARBYINT:\n+      case BUILT_IN_NEARBYINTF:\n+      case BUILT_IN_NEARBYINTL:\n \treturn expand_call (exp, target, ignore);\n \n       default:\n@@ -3794,6 +3831,21 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n     case BUILT_IN_SQRT:\n     case BUILT_IN_SQRTF:\n     case BUILT_IN_SQRTL:\n+    case BUILT_IN_FLOOR:\n+    case BUILT_IN_FLOORF:\n+    case BUILT_IN_FLOORL:\n+    case BUILT_IN_CEIL:\n+    case BUILT_IN_CEILF:\n+    case BUILT_IN_CEILL:\n+    case BUILT_IN_TRUNC:\n+    case BUILT_IN_TRUNCF:\n+    case BUILT_IN_TRUNCL:\n+    case BUILT_IN_ROUND:\n+    case BUILT_IN_ROUNDF:\n+    case BUILT_IN_ROUNDL:\n+    case BUILT_IN_NEARBYINT:\n+    case BUILT_IN_NEARBYINTF:\n+    case BUILT_IN_NEARBYINTL:\n       target = expand_builtin_mathfn (exp, target, subtarget);\n       if (target)\n \treturn target;\n@@ -4080,6 +4132,37 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n   return expand_call (exp, target, ignore);\n }\n \n+/* Determine whether a tree node represents a call to a built-in\n+   math function.  If the tree T is a call to a built-in function\n+   taking a single real argument, then the return value is the\n+   DECL_FUNCTION_CODE of the call, e.g. BUILT_IN_SQRT.  Otherwise\n+   the return value is END_BUILTINS.  */\n+   \n+enum built_in_function\n+builtin_mathfn_code (t)\n+     tree t;\n+{\n+  tree fndecl, arglist;\n+\n+  if (TREE_CODE (t) != CALL_EXPR\n+      || TREE_CODE (TREE_OPERAND (t, 0)) != ADDR_EXPR)\n+    return END_BUILTINS;\n+\n+  fndecl = TREE_OPERAND (TREE_OPERAND (t, 0), 0);\n+  if (TREE_CODE (fndecl) != FUNCTION_DECL\n+      || ! DECL_BUILT_IN (fndecl)\n+      || DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n+    return END_BUILTINS;\n+\n+  arglist = TREE_OPERAND (t, 1);\n+  if (! arglist\n+      || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != REAL_TYPE\n+      || TREE_CHAIN (arglist))\n+    return END_BUILTINS;\n+\n+  return DECL_FUNCTION_CODE (fndecl);\n+}\n+\n /* Fold a call to __builtin_constant_p, if we know it will evaluate to a\n    constant.  ARGLIST is the argument list of the call.  */\n \n@@ -4208,6 +4291,103 @@ fold_builtin (exp)\n \t}\n       break;\n \n+    case BUILT_IN_SQRT:\n+    case BUILT_IN_SQRTF:\n+    case BUILT_IN_SQRTL:\n+      if (validate_arglist (arglist, REAL_TYPE, VOID_TYPE))\n+\t{\n+\t  enum built_in_function fcode;\n+\t  tree arg = TREE_VALUE (arglist);\n+\n+\t  /* Optimize sqrt of constant value.  */\n+\t  if (TREE_CODE (arg) == REAL_CST\n+\t      && ! TREE_CONSTANT_OVERFLOW (arg))\n+\t    {\n+\t      enum machine_mode mode;\n+\t      REAL_VALUE_TYPE r, x;\n+\n+\t      x = TREE_REAL_CST (arg);\n+\t      mode = TYPE_MODE (TREE_TYPE (arg));\n+\t      if (!HONOR_SNANS (mode) || !real_isnan (&x))\n+\t      {\n+\t\treal_sqrt (&r, mode, &x);\n+\t\treturn build_real (TREE_TYPE (arg), r);\n+\t      }\n+\t    }\n+\n+\t  /* Optimize sqrt(exp(x)) = exp(x/2.0).  */\n+\t  fcode = builtin_mathfn_code (arg);\n+\t  if (flag_unsafe_math_optimizations\n+\t      && (fcode == BUILT_IN_EXP\n+\t\t  || fcode == BUILT_IN_EXPF\n+\t\t  || fcode == BUILT_IN_EXPL))\n+\t    {\n+\t      tree expfn = TREE_OPERAND (TREE_OPERAND (arg, 0), 0);\n+\t      arg = build (RDIV_EXPR, TREE_TYPE (arg),\n+\t\t\t   TREE_VALUE (TREE_OPERAND (arg, 1)),\n+\t\t\t   build_real (TREE_TYPE (arg), dconst2));\n+\t      arglist = build_tree_list (NULL_TREE, arg);\n+\t      return build_function_call_expr (expfn, arglist);\n+\t    }\n+\t}\n+      break;\n+\n+    case BUILT_IN_EXP:\n+    case BUILT_IN_EXPF:\n+    case BUILT_IN_EXPL:\n+      if (validate_arglist (arglist, REAL_TYPE, VOID_TYPE))\n+\t{\n+\t  enum built_in_function fcode;\n+\t  tree arg = TREE_VALUE (arglist);\n+\n+\t  /* Optimize exp(0.0) = 1.0.  */\n+\t  if (real_zerop (arg))\n+\t    return build_real (TREE_TYPE (arg), dconst1);\n+\n+\t  /* Optimize exp(log(x)) = x.  */\n+\t  fcode = builtin_mathfn_code (arg);\n+\t  if (flag_unsafe_math_optimizations\n+\t      && (fcode == BUILT_IN_LOG\n+\t\t  || fcode == BUILT_IN_LOGF\n+\t\t  || fcode == BUILT_IN_LOGL))\n+\t    return TREE_VALUE (TREE_OPERAND (arg, 1));\n+\t}\n+      break;\n+\n+    case BUILT_IN_LOG:\n+    case BUILT_IN_LOGF:\n+    case BUILT_IN_LOGL:\n+      if (validate_arglist (arglist, REAL_TYPE, VOID_TYPE))\n+\t{\n+\t  enum built_in_function fcode;\n+\t  tree arg = TREE_VALUE (arglist);\n+\n+\t  /* Optimize log(1.0) = 0.0.  */\n+\t  if (real_onep (arg))\n+\t    return build_real (TREE_TYPE (arg), dconst0);\n+\n+\t  /* Optimize log(exp(x)) = x.  */\n+\t  fcode = builtin_mathfn_code (arg);\n+\t  if (flag_unsafe_math_optimizations\n+\t      && (fcode == BUILT_IN_EXP\n+\t\t  || fcode == BUILT_IN_EXPF\n+\t\t  || fcode == BUILT_IN_EXPL))\n+\t    return TREE_VALUE (TREE_OPERAND (arg, 1));\n+\n+\t  /* Optimize log(sqrt(x)) = log(x)/2.0.  */\n+\t  if (flag_unsafe_math_optimizations\n+\t      && (fcode == BUILT_IN_SQRT\n+\t\t  || fcode == BUILT_IN_SQRTF\n+\t\t  || fcode == BUILT_IN_SQRTL))\n+\t    {\n+\t      tree logfn = build_function_call_expr (fndecl,\n+\t\t\t\t\t\t     TREE_OPERAND (arg, 1));\n+\t      return fold (build (RDIV_EXPR, TREE_TYPE (arg), logfn,\n+\t\t\t\t  build_real (TREE_TYPE (arg), dconst2)));\n+\t    }\n+\t}\n+      break;\n+\n     case BUILT_IN_INF:\n     case BUILT_IN_INFF:\n     case BUILT_IN_INFL:\n@@ -4235,7 +4415,9 @@ fold_builtin (exp)\n   return 0;\n }\n \n-static tree\n+/* Conveniently construct a function call expression.  */\n+\n+tree\n build_function_call_expr (fn, arglist)\n      tree fn, arglist;\n {"}, {"sha": "4429745789923bc1f4940549c211526a8cdec308", "filename": "gcc/builtins.def", "status": "modified", "additions": 89, "deletions": 13, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -112,9 +112,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Like DEF_LIB_BUILTIN, except that the function is only a part of\n    the standard in C99 or above.  */\n #undef DEF_C99_BUILTIN\t\t\t\t\t\n-#define DEF_C99_BUILTIN(ENUM, NAME, TYPE)\t\t\\\n+#define DEF_C99_BUILTIN(ENUM, NAME, TYPE, ATTRS)\t\\\n   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE,\t\\\n-   \t       true, true, !flag_isoc99, ATTR_NOTHROW_LIST)\n+   \t       true, true, !flag_isoc99, ATTRS)\n \n /* Like DEF_LIB_BUILTIN, except that the function is expanded in the\n    front-end.  */\n@@ -169,39 +169,115 @@ DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSL,\n \t\t       \"__builtin_fabsl\",\n \t\t       BT_FN_LONG_DOUBLE_LONG_DOUBLE)\n \n+DEF_LIB_BUILTIN(BUILT_IN_FLOOR,\n+                \"__builtin_floor\",\n+                BT_FN_DOUBLE_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_LIB_BUILTIN(BUILT_IN_FLOORF,\n+                \"__builtin_floorf\",\n+                BT_FN_FLOAT_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_LIB_BUILTIN(BUILT_IN_FLOORL,\n+                \"__builtin_floorl\",\n+                BT_FN_LONG_DOUBLE_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+\n+DEF_LIB_BUILTIN(BUILT_IN_CEIL,\n+                \"__builtin_ceil\",\n+                BT_FN_DOUBLE_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_LIB_BUILTIN(BUILT_IN_CEILF,\n+                \"__builtin_ceilf\",\n+                BT_FN_FLOAT_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_LIB_BUILTIN(BUILT_IN_CEILL,\n+\t\t\"__builtin_ceill\",\n+\t\tBT_FN_LONG_DOUBLE_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+\n+DEF_C99_BUILTIN(BUILT_IN_ROUND,\n+\t\t\"__builtin_round\",\n+\t\tBT_FN_DOUBLE_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_ROUNDF,\n+\t\t\"__builtin_roundf\",\n+\t\tBT_FN_FLOAT_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_ROUNDL,\n+\t\t\"__builtin_roundl\",\n+\t\tBT_FN_LONG_DOUBLE_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+\n+DEF_C99_BUILTIN(BUILT_IN_TRUNC,\n+\t\t\"__builtin_trunc\",\n+\t\tBT_FN_DOUBLE_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_TRUNCF,\n+\t\t\"__builtin_truncf\",\n+\t\tBT_FN_FLOAT_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_TRUNCL,\n+\t\t\"__builtin_truncl\",\n+\t\tBT_FN_LONG_DOUBLE_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+\n+DEF_C99_BUILTIN(BUILT_IN_NEARBYINT,\n+\t\t\"__builtin_nearbyint\",\n+\t\tBT_FN_DOUBLE_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_NEARBYINTF,\n+\t\t\"__builtin_nearbyintf\",\n+\t\tBT_FN_FLOAT_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN(BUILT_IN_NEARBYINTL,\n+\t\t\"__builtin_nearbyintl\",\n+\t\tBT_FN_LONG_DOUBLE_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n+\n DEF_C99_BUILTIN(BUILT_IN_LLABS,\n \t\t\"__builtin_llabs\",\n-\t\tBT_FN_LONGLONG_LONGLONG)\n+\t\tBT_FN_LONGLONG_LONGLONG,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_IMAXABS,\n \t\t\"__builtin_imaxabs\",\n-\t\tBT_FN_INTMAX_INTMAX)\n+\t\tBT_FN_INTMAX_INTMAX,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CONJ,\n \t\t\"__builtin_conj\",\n-\t\tBT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE)\n+\t\tBT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CONJF,\n \t\t\"__builtin_conjf\",\n-\t\tBT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT)\n+\t\tBT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CONJL,\n \t\t\"__builtin_conjl\",\n-\t\tBT_FN_COMPLEX_LONG_DOUBLE_COMPLEX_LONG_DOUBLE)\n+\t\tBT_FN_COMPLEX_LONG_DOUBLE_COMPLEX_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CREAL,\n \t\t\"__builtin_creal\",\n-\t\tBT_FN_DOUBLE_COMPLEX_DOUBLE)\n+\t\tBT_FN_DOUBLE_COMPLEX_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CREALF,\n \t\t\"__builtin_crealf\",\n-\t\tBT_FN_FLOAT_COMPLEX_FLOAT)\n+\t\tBT_FN_FLOAT_COMPLEX_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CREALL,\n \t\t\"__builtin_creall\",\n-\t\tBT_FN_LONG_DOUBLE_COMPLEX_LONG_DOUBLE)\n+\t\tBT_FN_LONG_DOUBLE_COMPLEX_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CIMAG,\n \t\t\"__builtin_cimag\",\n-\t\tBT_FN_DOUBLE_COMPLEX_DOUBLE)\n+\t\tBT_FN_DOUBLE_COMPLEX_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CIMAGF,\n \t\t\"__builtin_cimagf\",\n-\t\tBT_FN_FLOAT_COMPLEX_FLOAT)\n+\t\tBT_FN_FLOAT_COMPLEX_FLOAT,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN(BUILT_IN_CIMAGL,\n \t\t\"__builtin_cimagl\",\n-\t\tBT_FN_LONG_DOUBLE_COMPLEX_LONG_DOUBLE)\n+\t\tBT_FN_LONG_DOUBLE_COMPLEX_LONG_DOUBLE,\n+\t\tATTR_CONST_NOTHROW_LIST)\n \n DEF_UNUSED_BUILTIN(BUILT_IN_DIV)\n DEF_UNUSED_BUILTIN(BUILT_IN_LDIV)"}, {"sha": "1297cc1337798e27494a3c4b396536af1b3b554f", "filename": "gcc/c-aux-info.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-aux-info.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"tree.h\""}, {"sha": "79502d2fde8f96fecdc355e22882d11eafeedb04", "filename": "gcc/c-common.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"real.h\"\n #include \"flags.h\"\n@@ -5601,6 +5603,7 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n       int len = strlen (p);\n       enum machine_mode mode = VOIDmode;\n       tree typefm;\n+      tree ptr_type;\n \n       if (len > 4 && p[0] == '_' && p[1] == '_'\n \t  && p[len - 1] == '_' && p[len - 2] == '_')\n@@ -5630,6 +5633,10 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n       else if (0 == (typefm = (*lang_hooks.types.type_for_mode)\n \t\t     (mode, TREE_UNSIGNED (type))))\n \terror (\"no data type for mode `%s'\", p);\n+      else if ((TREE_CODE (type) == POINTER_TYPE\n+\t\t|| TREE_CODE (type) == REFERENCE_TYPE)\n+\t       && !(*targetm.valid_pointer_mode) (mode))\n+\terror (\"invalid pointer mode `%s'\", p);\n       else\n \t{\n \t  /* If this is a vector, make sure we either have hardware\n@@ -5642,6 +5649,19 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n \t      return NULL_TREE;\n \t    }\n \n+\t  if (TREE_CODE (type) == POINTER_TYPE)\n+\t    {\n+\t      ptr_type = build_pointer_type_for_mode (TREE_TYPE (type),\n+\t\t\t\t\t\t      mode);\n+\t      *node = ptr_type;\n+\t    }\n+\t  else if (TREE_CODE (type) == REFERENCE_TYPE)\n+\t    {\n+\t      ptr_type = build_reference_type_for_mode (TREE_TYPE (type),\n+\t\t\t\t\t\t\tmode);\n+\t      *node = ptr_type;\n+\t    }\n+\t  else\n \t  *node = typefm;\n \t  /* No need to layout the type here.  The caller should do this.  */\n \t}"}, {"sha": "3c0a21a822ae20ce0d20e05e709aebe836f996d1", "filename": "gcc/c-convert.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-convert.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -26,6 +26,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"convert.h\""}, {"sha": "8c86bc0d87a5a39c6e688356c517711350652d9b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -28,6 +28,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"intl.h\"\n #include \"tree.h\"\n #include \"tree-inline.h\""}, {"sha": "541910b6b9d5df1bf8bab9f60a16df3b60fbe81e", "filename": "gcc/c-dump.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"tree-dump.h\""}, {"sha": "d906357a99dd1a72bd0366fb92da1d260fe0f13b", "filename": "gcc/c-errors.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-errors.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"tm_p.h\""}, {"sha": "7bd654f6b2b6901053c0ab196fb8c08842ab6caa", "filename": "gcc/c-format.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "034889764700992f3d3bfd634d19c53cbaf4c3dd", "filename": "gcc/c-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"c-common.h\""}, {"sha": "5507e6311d0f65ad43ad650b527fce784836a2af", "filename": "gcc/c-lex.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n \n #include \"real.h\"\n #include \"rtl.h\"\n@@ -233,7 +235,7 @@ cb_ident (pfile, line, str)\n   if (! flag_no_ident)\n     {\n       /* Convert escapes in the string.  */\n-      tree value = lex_string (str->text, str->len, 0);\n+      tree value ATTRIBUTE_UNUSED = lex_string (str->text, str->len, 0);\n       ASM_OUTPUT_IDENT (asm_out_file, TREE_STRING_POINTER (value));\n     }\n #endif"}, {"sha": "7d54d7ace4d15936d234daf54a6ca0373e21a44b", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"insn-config.h\""}, {"sha": "85ed5f325aa4965bdde4b4b9e8bbbcfbc1a49743", "filename": "gcc/c-opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\""}, {"sha": "f2ffed0ba1703ffe34236ea06fc9f0f128e54836", "filename": "gcc/c-parse.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -38,6 +38,8 @@ end ifc\n %{\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"input.h\"\n #include \"cpplib.h\""}, {"sha": "a2e4c68d19a6a886979640f6fee0ae3597770cfa", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"function.h\""}, {"sha": "685b46d434f5e1999626ac855c80abaa0449afcc", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"real.h\"\n #include \"c-pretty-print.h\"\n #include \"c-tree.h\""}, {"sha": "0b8f587013461af4d5bd06c1841c0431615b2488", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"function.h\"\n #include \"splay-tree.h\"\n@@ -455,6 +457,17 @@ genrtl_do_stmt (t)\n       expand_stmt (DO_BODY (t));\n       expand_end_null_loop ();\n     }\n+  else if (integer_nonzerop (cond))\n+    {\n+      emit_nop ();\n+      emit_line_note (input_filename, lineno);\n+      expand_start_loop (1);\n+\n+      expand_stmt (DO_BODY (t));\n+\n+      emit_line_note (input_filename, lineno);\n+      expand_end_loop ();\n+    }\n   else\n     {\n       emit_nop ();\n@@ -519,7 +532,10 @@ genrtl_for_stmt (t)\n   /* Expand the initialization.  */\n   emit_nop ();\n   emit_line_note (input_filename, lineno);\n-  expand_start_loop_continue_elsewhere (1); \n+  if (FOR_EXPR (t))\n+    expand_start_loop_continue_elsewhere (1); \n+  else\n+    expand_start_loop (1);\n   genrtl_do_pushlevel ();\n   cond = expand_cond (FOR_COND (t));\n \n@@ -541,9 +557,11 @@ genrtl_for_stmt (t)\n   input_filename = saved_filename;\n   lineno = saved_lineno;\n   emit_line_note (input_filename, lineno);\n-  expand_loop_continue_here ();\n   if (FOR_EXPR (t))\n-    genrtl_expr_stmt (FOR_EXPR (t));\n+    {\n+      expand_loop_continue_here ();\n+      genrtl_expr_stmt (FOR_EXPR (t));\n+    }\n   expand_end_loop ();\n }\n "}, {"sha": "308d0502006ec9434c9b4d12b413eaa22536d3ef", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -31,6 +31,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n@@ -1470,7 +1472,7 @@ build_function_call (function, params)\n {\n   tree fntype, fundecl = 0;\n   tree coerced_params;\n-  tree name = NULL_TREE, assembler_name = NULL_TREE, result;\n+  tree name = NULL_TREE, result;\n \n   /* Strip NON_LVALUE_EXPRs, etc., since we aren't using as an lvalue.  */\n   STRIP_TYPE_NOPS (function);\n@@ -1479,7 +1481,6 @@ build_function_call (function, params)\n   if (TREE_CODE (function) == FUNCTION_DECL)\n     {\n       name = DECL_NAME (function);\n-      assembler_name = DECL_ASSEMBLER_NAME (function);\n \n       /* Differs from default_conversion by not setting TREE_ADDRESSABLE\n \t (because calling an inline function does not mean the function\n@@ -3649,20 +3650,10 @@ build_c_cast (type, expr)\n \n       if (field)\n \t{\n-\t  const char *name;\n \t  tree t;\n \n \t  if (pedantic)\n \t    pedwarn (\"ISO C forbids casts to union type\");\n-\t  if (TYPE_NAME (type) != 0)\n-\t    {\n-\t      if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n-\t\tname = IDENTIFIER_POINTER (TYPE_NAME (type));\n-\t      else\n-\t\tname = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n-\t    }\n-\t  else\n-\t    name = \"\";\n \t  t = digest_init (type, build (CONSTRUCTOR, type, NULL_TREE,\n \t\t\t\t\tbuild_tree_list (field, value)), 0);\n \t  TREE_CONSTANT (t) = TREE_CONSTANT (value);"}, {"sha": "53f3aa54a5cdcf302d6d2e88b426cebc44edf366", "filename": "gcc/caller-save.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"insn-config.h\"\n #include \"flags.h\""}, {"sha": "4d6cdd78aebc4d5a5f806960feac598d591f9bb4", "filename": "gcc/calls.c", "status": "modified", "additions": 15, "deletions": 49, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n@@ -36,10 +38,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"langhooks.h\"\n #include \"target.h\"\n \n-#if !defined FUNCTION_OK_FOR_SIBCALL\n-#define FUNCTION_OK_FOR_SIBCALL(DECL) 1\n-#endif\n-\n /* Decide whether a function's arguments should be processed\n    from first to last or from last to first.\n \n@@ -154,35 +152,6 @@ int stack_arg_under_construction;\n static int calls_function\tPARAMS ((tree, int));\n static int calls_function_1\tPARAMS ((tree, int));\n \n-/* Nonzero if this is a call to a `const' function.  */\n-#define ECF_CONST\t\t1\n-/* Nonzero if this is a call to a `volatile' function.  */\n-#define ECF_NORETURN\t\t2\n-/* Nonzero if this is a call to malloc or a related function.  */\n-#define ECF_MALLOC\t\t4\n-/* Nonzero if it is plausible that this is a call to alloca.  */\n-#define ECF_MAY_BE_ALLOCA\t8\n-/* Nonzero if this is a call to a function that won't throw an exception.  */\n-#define ECF_NOTHROW\t\t16\n-/* Nonzero if this is a call to setjmp or a related function.  */\n-#define ECF_RETURNS_TWICE\t32\n-/* Nonzero if this is a call to `longjmp'.  */\n-#define ECF_LONGJMP\t\t64\n-/* Nonzero if this is a syscall that makes a new process in the image of\n-   the current one.  */\n-#define ECF_FORK_OR_EXEC\t128\n-#define ECF_SIBCALL\t\t256\n-/* Nonzero if this is a call to \"pure\" function (like const function,\n-   but may read memory.  */\n-#define ECF_PURE\t\t512\n-/* Nonzero if this is a call to a function that returns with the stack\n-   pointer depressed.  */\n-#define ECF_SP_DEPRESSED\t1024\n-/* Nonzero if this call is known to always return.  */\n-#define ECF_ALWAYS_RETURN\t2048\n-/* Create libcall block around the call.  */\n-#define ECF_LIBCALL_BLOCK\t4096\n-\n static void emit_call_1\t\tPARAMS ((rtx, tree, tree, HOST_WIDE_INT,\n \t\t\t\t\t HOST_WIDE_INT, HOST_WIDE_INT, rtx,\n \t\t\t\t\t rtx, int, rtx, int,\n@@ -219,7 +188,6 @@ static rtx emit_library_call_value_1 \t\tPARAMS ((int, rtx, rtx,\n \t\t\t\t\t\t\t enum machine_mode,\n \t\t\t\t\t\t\t int, va_list));\n static int special_function_p\t\t\tPARAMS ((tree, int));\n-static int flags_from_decl_or_type \t\tPARAMS ((tree));\n static rtx try_to_integrate\t\t\tPARAMS ((tree, tree, rtx,\n \t\t\t\t\t\t\t int, tree, rtx));\n static int check_sibcall_argument_overlap_1\tPARAMS ((rtx));\n@@ -818,7 +786,7 @@ alloca_call_p (exp)\n \n /* Detect flags (function attributes) from the function decl or type node.  */\n \n-static int\n+int\n flags_from_decl_or_type (exp)\n      tree exp;\n {\n@@ -1717,10 +1685,8 @@ rtx_for_function_call (fndecl, exp)\n   else\n     /* Generate an rtx (probably a pseudo-register) for the address.  */\n     {\n-      rtx funaddr;\n       push_temp_slots ();\n-      funaddr = funexp\n-\t= expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, VOIDmode, 0);\n+      funexp = expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, VOIDmode, 0);\n       pop_temp_slots ();\t/* FUNEXP can't be BLKmode.  */\n       emit_queue ();\n     }\n@@ -2281,7 +2247,10 @@ expand_call (exp, target, ignore)\n       {\n \tstruct_value_size = int_size_in_bytes (TREE_TYPE (exp));\n \n-\tif (target && GET_CODE (target) == MEM)\n+\tif (CALL_EXPR_HAS_RETURN_SLOT_ADDR (exp))\n+\t  /* The structure value address arg is already in actparms.  */\n+\t  structure_value_addr_parm = 1;\n+\telse if (target && GET_CODE (target) == MEM)\n \t  structure_value_addr = XEXP (target, 0);\n \telse\n \t  {\n@@ -2467,16 +2436,13 @@ expand_call (exp, target, ignore)\n \t It does not seem worth the effort since few optimizable\n \t sibling calls will return a structure.  */\n       || structure_value_addr != NULL_RTX\n-      /* If the register holding the address is a callee saved\n-\t register, then we lose.  We have no way to prevent that,\n-\t so we only allow calls to named functions.  */\n-      /* ??? This could be done by having the insn constraints\n-\t use a register class that is all call-clobbered.  Any\n-\t reload insns generated to fix things up would appear\n-\t before the sibcall_epilogue.  */\n-      || fndecl == NULL_TREE\n+      /* Check whether the target is able to optimize the call\n+\t into a sibcall.  */\n+      || !(*targetm.function_ok_for_sibcall) (fndecl, exp)\n+      /* Functions that do not return exactly once may not be sibcall\n+         optimized.  */\n       || (flags & (ECF_RETURNS_TWICE | ECF_LONGJMP | ECF_NORETURN))\n-      || !FUNCTION_OK_FOR_SIBCALL (fndecl)\n+      || TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n       /* If this function requires more stack slots than the current\n \t function, we cannot change it into a sibling call.  */\n       || args_size.constant > current_function_args_size\n@@ -2608,7 +2574,7 @@ expand_call (exp, target, ignore)\n \t is subject to race conditions, just as with multithreaded\n \t programs.  */\n \n-      emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__bb_fork_func\"),\n+      emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__gcov_flush\"),\n \t\t      \t LCT_ALWAYS_RETURN,\n \t\t\t VOIDmode, 0);\n     }"}, {"sha": "36ea2e5276a52dd295d86bb3692aed1aa1b6b092", "filename": "gcc/cfg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -43,6 +43,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \f\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\""}, {"sha": "170ba447315aaa1258f8f032279f45a48706cb7d", "filename": "gcc/cfganal.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* This file contains various simple utilities to analyze the CFG.  */\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "43acb9076ece5a8ffbda7a737267e450c7b340dc", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -34,6 +34,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \f\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\""}, {"sha": "ad507a1cd59353b2aa45d34877a0f91d8734122e", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -33,6 +33,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "e50f2ff856d4c444595e3c9dcc43dccb11bf55c7", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n@@ -740,7 +742,6 @@ duplicate_insn_chain (from, to)\n      be reordered later.  */\n   for (insn = from; insn != NEXT_INSN (to); insn = NEXT_INSN (insn))\n     {\n-      rtx new;\n       switch (GET_CODE (insn))\n \t{\n \tcase INSN:\n@@ -752,7 +753,7 @@ duplicate_insn_chain (from, to)\n \t  if (GET_CODE (PATTERN (insn)) == ADDR_VEC\n \t      || GET_CODE (PATTERN (insn)) == ADDR_DIFF_VEC)\n \t    break;\n-\t  new = emit_copy_of_insn_after (insn, get_last_insn ());\n+\t  emit_copy_of_insn_after (insn, get_last_insn ());\n \t  break;\n \n \tcase CODE_LABEL:"}, {"sha": "da958c22324db34bfd655b7fa17e90289a5c0790", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n@@ -331,11 +333,9 @@ flow_loop_nodes_find (header, loop)\n   basic_block *stack;\n   int sp;\n   int num_nodes = 1;\n-  int findex, lindex;\n \n   header->loop_father = loop;\n   header->loop_depth = loop->depth;\n-  findex = lindex = header->index;\n \n   if (loop->latch->loop_father != loop)\n     {"}, {"sha": "ef233315a337b87985be2371e7a5c7e3c86cbe7d", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -44,6 +44,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \f\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n@@ -1219,7 +1221,6 @@ split_edge (edge_in)\n      edge edge_in;\n {\n   basic_block bb;\n-  edge edge_out;\n   rtx before;\n \n   /* Abnormal edges cannot be split.  */\n@@ -1285,7 +1286,7 @@ split_edge (edge_in)\n \t\t    edge_in->dest->global_live_at_start);\n     }\n \n-  edge_out = make_single_succ_edge (bb, edge_in->dest, EDGE_FALLTHRU);\n+  make_single_succ_edge (bb, edge_in->dest, EDGE_FALLTHRU);\n \n   /* For non-fallthry edges, we must adjust the predecessor's\n      jump instruction to target our new block.  */\n@@ -1818,7 +1819,7 @@ verify_flow_info ()\n \t  if (e->flags & EDGE_FALLTHRU)\n \t    n_fallthru++;\n \n-\t  if ((e->flags & ~EDGE_DFS_BACK) == 0)\n+\t  if ((e->flags & ~(EDGE_DFS_BACK | EDGE_CAN_FALLTHRU)) == 0)\n \t    n_branch++;\n \n \t  if (e->flags & EDGE_ABNORMAL_CALL)"}, {"sha": "59bbb80ed2408fb101508aaf44b95f79d860bbd0", "filename": "gcc/collect2.c", "status": "modified", "additions": 37, "deletions": 33, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -28,6 +28,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include <signal.h>\n #if ! defined( SIGCHLD ) && defined( SIGCLD )\n #  define SIGCHLD SIGCLD\n@@ -300,7 +302,6 @@ static int is_in_list\t\tPARAMS ((const char *, struct id *));\n #endif\n static void write_aix_file\tPARAMS ((FILE *, struct id *));\n static char *resolve_lib_name\tPARAMS ((const char *));\n-static int ignore_library\tPARAMS ((const char *));\n #endif\n static char *extract_string\tPARAMS ((const char **));\n \f\n@@ -2684,6 +2685,41 @@ scan_libraries (prog_name)\n \n #endif\n \n+#ifdef COLLECT_EXPORT_LIST\n+/* Array of standard AIX libraries which should not\n+   be scanned for ctors/dtors.  */\n+static const char *const aix_std_libs[] = {\n+  \"/unix\",\n+  \"/lib/libc.a\",\n+  \"/lib/libm.a\",\n+  \"/lib/libc_r.a\",\n+  \"/lib/libm_r.a\",\n+  \"/usr/lib/libc.a\",\n+  \"/usr/lib/libm.a\",\n+  \"/usr/lib/libc_r.a\",\n+  \"/usr/lib/libm_r.a\",\n+  \"/usr/lib/threads/libc.a\",\n+  \"/usr/ccs/lib/libc.a\",\n+  \"/usr/ccs/lib/libm.a\",\n+  \"/usr/ccs/lib/libc_r.a\",\n+  \"/usr/ccs/lib/libm_r.a\",\n+  NULL\n+};\n+\n+/* This function checks the filename and returns 1\n+   if this name matches the location of a standard AIX library.  */\n+static int ignore_library\tPARAMS ((const char *));\n+static int\n+ignore_library (name)\n+     const char *name;\n+{\n+  const char *const *p = &aix_std_libs[0];\n+  while (*p++ != NULL)\n+    if (! strcmp (name, *p)) return 1;\n+  return 0;\n+}\n+#endif /* COLLECT_EXPORT_LIST */\n+\n extern char *ldgetname ();\n \n /* COFF version to scan the name list of the loaded program for\n@@ -2903,38 +2939,6 @@ if (debug) fprintf (stderr, \"found: %s\\n\", lib_buf);\n     fatal (\"library lib%s not found\", name);\n   return (NULL);\n }\n-\n-/* Array of standard AIX libraries which should not\n-   be scanned for ctors/dtors.  */\n-static const char *const aix_std_libs[] = {\n-  \"/unix\",\n-  \"/lib/libc.a\",\n-  \"/lib/libm.a\",\n-  \"/lib/libc_r.a\",\n-  \"/lib/libm_r.a\",\n-  \"/usr/lib/libc.a\",\n-  \"/usr/lib/libm.a\",\n-  \"/usr/lib/libc_r.a\",\n-  \"/usr/lib/libm_r.a\",\n-  \"/usr/lib/threads/libc.a\",\n-  \"/usr/ccs/lib/libc.a\",\n-  \"/usr/ccs/lib/libm.a\",\n-  \"/usr/ccs/lib/libc_r.a\",\n-  \"/usr/ccs/lib/libm_r.a\",\n-  NULL\n-};\n-\n-/* This function checks the filename and returns 1\n-   if this name matches the location of a standard AIX library.  */\n-static int\n-ignore_library (name)\n-     const char *name;\n-{\n-  const char *const *p = &aix_std_libs[0];\n-  while (*p++ != NULL)\n-    if (! strcmp (name, *p)) return 1;\n-  return 0;\n-}\n #endif /* COLLECT_EXPORT_LIST */\n \n \f"}, {"sha": "d6a86756ee901e1b102465c0ac5450a883372466", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -76,6 +76,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n@@ -167,11 +169,6 @@ static int last_call_cuid;\n \n static rtx subst_insn;\n \n-/* This is an insn that belongs before subst_insn, but is not currently\n-   on the insn chain.  */\n-\n-static rtx subst_prev_insn;\n-\n /* This is the lowest CUID that `subst' is currently dealing with.\n    get_last_value will not return a value if the register was set at or\n    after this CUID.  If not for this mechanism, we could get confused if\n@@ -199,7 +196,6 @@ static basic_block this_basic_block;\n    After combine, we'll need to re-do global life analysis with\n    those blocks as starting points.  */\n static sbitmap refresh_blocks;\n-static int need_refresh;\n \f\n /* The next group of arrays allows the recording of the last value assigned\n    to (hard or pseudo) register n.  We use this information to see if a\n@@ -571,15 +567,10 @@ combine_instructions (f, nregs)\n \n   label_tick = 1;\n \n-  /* We need to initialize it here, because record_dead_and_set_regs may call\n-     get_last_value.  */\n-  subst_prev_insn = NULL_RTX;\n-\n   setup_incoming_promotions ();\n \n   refresh_blocks = sbitmap_alloc (last_basic_block);\n   sbitmap_zero (refresh_blocks);\n-  need_refresh = 0;\n \n   for (insn = f, i = 0; insn; insn = NEXT_INSN (insn))\n     {\n@@ -1752,11 +1743,10 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n \t     never appear in the insn stream so giving it the same INSN_UID\n \t     as I2 will not cause a problem.  */\n \n-\t  subst_prev_insn = i1\n-\t    = gen_rtx_INSN (VOIDmode, INSN_UID (i2), NULL_RTX, i2,\n-\t\t\t    BLOCK_FOR_INSN (i2), INSN_SCOPE (i2),\n-\t\t\t    XVECEXP (PATTERN (i2), 0, 1), -1, NULL_RTX,\n-\t\t\t    NULL_RTX);\n+\t  i1 = gen_rtx_INSN (VOIDmode, INSN_UID (i2), NULL_RTX, i2,\n+\t\t\t     BLOCK_FOR_INSN (i2), INSN_SCOPE (i2),\n+\t\t\t     XVECEXP (PATTERN (i2), 0, 1), -1, NULL_RTX,\n+\t\t\t     NULL_RTX);\n \n \t  SUBST (PATTERN (i2), XVECEXP (PATTERN (i2), 0, 0));\n \t  SUBST (XEXP (SET_SRC (PATTERN (i2)), 0),\n@@ -2860,10 +2850,6 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n   combine_successes++;\n   undo_commit ();\n \n-  /* Clear this here, so that subsequent get_last_value calls are not\n-     affected.  */\n-  subst_prev_insn = NULL_RTX;\n-\n   if (added_links_insn\n       && (newi2pat == 0 || INSN_CUID (added_links_insn) < INSN_CUID (i2))\n       && INSN_CUID (added_links_insn) < INSN_CUID (i3))\n@@ -2892,10 +2878,6 @@ undo_all ()\n     }\n \n   undobuf.undos = 0;\n-\n-  /* Clear this here, so that subsequent get_last_value calls are not\n-     affected.  */\n-  subst_prev_insn = NULL_RTX;\n }\n \n /* We've committed to accepting the changes we made.  Move all\n@@ -12700,10 +12682,7 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t      if (REG_NOTE_KIND (note) == REG_DEAD && place == 0\n \t\t  && REGNO_REG_SET_P (bb->global_live_at_start,\n \t\t\t\t      REGNO (XEXP (note, 0))))\n-\t\t{\n-\t\t  SET_BIT (refresh_blocks, this_basic_block->index);\n-\t\t  need_refresh = 1;\n-\t\t}\n+\t\tSET_BIT (refresh_blocks, this_basic_block->index);\n \t    }\n \n \t  /* If the register is set or already dead at PLACE, we needn't do\n@@ -12720,10 +12699,7 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t the note is a noop, we'll need do a global live update\n \t\t after we remove them in delete_noop_moves.  */\n \t      if (noop_move_p (place))\n-\t\t{\n-\t\t  SET_BIT (refresh_blocks, this_basic_block->index);\n-\t\t  need_refresh = 1;\n-\t\t}\n+\t\tSET_BIT (refresh_blocks, this_basic_block->index);\n \n \t      if (dead_or_set_p (place, XEXP (note, 0))\n \t\t  || reg_bitfield_target_p (XEXP (note, 0), PATTERN (place)))\n@@ -12795,7 +12771,6 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t\t\t      {\n \t\t\t\t\tSET_BIT (refresh_blocks,\n \t\t\t\t\t\t this_basic_block->index);\n-\t\t\t\t\tneed_refresh = 1;\n \t\t\t\t\tbreak;\n \t\t\t\t      }\n \t\t\t\t    continue;"}, {"sha": "abf17fb8c487d0e0145055a05bfe061cff65eedc", "filename": "gcc/config.gcc", "status": "modified", "additions": 60, "deletions": 99, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -150,6 +150,13 @@\n #\n #  gas\t\t\tSet to yes or no depending on whether the target\n #\t\t\tsystem normally uses GNU as.\n+#\n+#  need_64bit_hwint\tSet to yes if HOST_WIDE_INT must be 64 bits wide\n+#\t\t\tfor this target.  This is true iff\n+#\t\t\tMAX_LONG_TYPE_SIZE is 64.  (The code which\n+#\t\t\tdetermines the underlying integral type for\n+#\t\t\tHOST_WIDE_INT cannot see the definition of\n+#\t\t\tMAX_LONG_TYPE_SIZE.)\n \n # The following variables are used in each case-construct to build up the\n # outgoing variables:\n@@ -209,6 +216,7 @@ gas=\"$gas_flag\"\n gnu_ld=\"$gnu_ld_flag\"\n enable_threads=$enable_threads_flag\n target_gtfiles=\n+need_64bit_hwint=\n \n # Obsolete configurations.\n case $machine in\n@@ -219,7 +227,6 @@ case $machine in\n  | mn10200-*-*      \\\n  | ns32k-*-openbsd* \\\n  | romp-*-openbsd*  \\\n- | vax-*-vms* \\\n  )\n     if test \"x$enable_obsolete\" != xyes; then\n       echo \"*** Configuration $machine is obsolete.\" >&2\n@@ -238,6 +245,7 @@ cpu_type=`echo $machine | sed 's/-.*$//'`\n case $machine in\n alpha*-*-*)\n \tcpu_type=alpha\n+\tneed_64bit_hwint=yes\n \t;;\n strongarm*-*-*)\n \tcpu_type=arm\n@@ -255,9 +263,11 @@ i[34567]86-*-*)\n x86_64-*-*)\n \tcpu_type=i386\n \textra_headers=\"mmintrin.h xmmintrin.h\"\n+\tneed_64bit_hwint=yes\n \t;;\n ia64-*-*)\n \textra_headers=ia64intrin.h\n+\tneed_64bit_hwint=yes\n \t;;\n hppa*-*-* | parisc*-*-*)\n \tcpu_type=pa\n@@ -271,17 +281,30 @@ m68k-*-*)\n \t;;\n mips*-*-*)\n \tcpu_type=mips\n+\tneed_64bit_hwint=yes\n \t;;\n powerpc*-*-*)\n \tcpu_type=rs6000\n \textra_headers=\"ppc-asm.h altivec.h spe.h\"\n+\tneed_64bit_hwint=yes\n+\t;;\n+rs6000*-*-*)\n+\tneed_64bit_hwint=yes\n+\t;;\n+sparc64*-*-*)\n+\tcpu_type=sparc\n+\tneed_64bit_hwint=yes\n \t;;\n sparc*-*-*)\n \tcpu_type=sparc\n \t;;\n+s390*-*-*)\n+\tneed_64bit_hwint=yes\n+\t;;\n # Note the 'l'; we need to be able to match e.g. \"shle\" or \"shl\".\n sh[123456789l]*-*-*)\n \tcpu_type=sh\n+\tneed_64bit_hwint=yes\n \t;;\n tic4x-*-*)\n         cpu_type=c4x\n@@ -312,7 +335,7 @@ case $machine in\n \t;;\n esac\n \n-# Common parts for GNU/Linux, GNU/Hurd, OpenBSD, NetBSD, and FreeBSD systems.\n+# Common parts for widely ported systems.\n case $machine in\n *-*-linux*)\n \txm_defines=POSIX\n@@ -437,6 +460,13 @@ case $machine in\n \tesac\n \tfbsd_tm_file=\"${fbsd_tm_file} freebsd-spec.h freebsd.h\"\n \t;;\n+*-*-vxworks*)\n+\ttmake_file=t-vxworks\n+\ttm_file=\"${tm_file} elfos.h svr4.h vxworks.h\"\n+\tthread_file='vxworks'\n+\tuse_collect2=yes\n+\txm_defines=POSIX\n+\t;;\n esac\n \n case $machine in\n@@ -472,7 +502,6 @@ alpha-*-interix)\n \ttarget_cpu_default=\"MASK_GAS|MASK_IEEE_CONFORMANT\"\n \n \txm_defines=POSIX\n-\txm_file=\"alpha/xm-alpha-interix.h\"\n \ttmake_file=\"alpha/t-alpha t-interix alpha/t-interix alpha/t-ieee\"\n \tif test x$enable_threads = xyes ; then\n \t\tthread_file='posix'\n@@ -556,21 +585,10 @@ alpha*-dec-osf[45]*)\n \t    ;;\n \tesac\n \t;;\n-alpha*-*-vxworks*)\n-\txm_defines=POSIX\n-\ttm_file=\"${tm_file} dbx.h alpha/vxworks.h\"\n-\ttmake_file=\"alpha/t-alpha alpha/t-ieee\"\n-\tif [ x$gas != xyes ]\n-\tthen\n-\t\textra_passes=\"mips-tfile mips-tdump\"\n-\tfi\n-\tuse_collect2=yes\n-\tthread_file='vxworks'\n-\t;;\n alpha64-dec-*vms*)\n \txm_defines=POSIX\n \ttm_file=\"${tm_file} alpha/vms.h alpha/vms64.h\"\n-\txm_file=\"alpha/xm-vms.h alpha/xm-vms64.h\"\n+\txm_file=\"alpha/xm-vms.h\"\n \ttmake_file=\"alpha/t-alpha alpha/t-vms alpha/t-vms64 alpha/t-ieee\"\n \txmake_file=alpha/x-vms\n \texeext=.exe\n@@ -611,11 +629,6 @@ arm-*-coff* | armel-*-coff*)\n \ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h\"\n \ttmake_file=arm/t-arm-coff\n \t;;\n-arm-*-vxworks*)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h arm/vxarm.h arm/arm.h\"\n-\ttmake_file=arm/t-arm-coff\n-\tthread_file='vxworks'\n-\t;;\n arm-semi-aout | armel-semi-aout)\n \ttm_file=\"arm/semi.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-semi\n@@ -751,6 +764,7 @@ hppa*64*-*-linux* | parisc*64*-*-linux*)\n \t\t pa/pa-linux.h pa/pa64-regs.h pa/pa-64.h pa/pa64-linux.h\"\n \ttmake_file=pa/t-linux64\n \tgas=yes gnu_ld=yes\n+\tneed_64bit_hwint=yes\n \t;;\n hppa*-*-linux* | parisc*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n@@ -891,6 +905,7 @@ hppa*64*-*-hpux11*)\n \t\t\t pa/pa64-regs.h pa/long_double.h pa/pa-hpux.h \\\n \t\t\t pa/pa-hpux11.h pa/pa-64.h pa/pa64-hpux.h\"\n \tfi\n+\tneed_64bit_hwint=yes\n \ttmake_file=\"pa/t-pa64 pa/t-pa-hpux\"\n \txmake_file=\"pa/x-ada\"\n \ttarget_cpu_default=\"(MASK_PA_11|MASK_PA_20|MASK_GAS)\"\n@@ -1052,10 +1067,6 @@ i[34567]86-sequent-sysv*)\t# would otherwise be caught by i?86-*-sysv*\n \techo \"*** Configuration $machine not supported\" 1>&2\n \texit 1\n \t;;\n-i[34567]86-wrs-vxworks*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h i386/vxi386.h\"\n-\tthread_file='vxworks'\n-\t;;\n i[34567]86-*-aout*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h i386/i386-aout.h\"\n \t;;\n@@ -1323,7 +1334,6 @@ i[34567]86-*-uwin*)\n \t;;\n i[34567]86-*-interix3*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/i386-interix.h i386/i386-interix3.h interix.h interix3.h\"\n-\txm_file=\"i386/xm-i386-interix.h\"\n \txm_defines=POSIX\n \ttmake_file=\"t-interix i386/t-interix\"\n \textra_objs=winnt.o\n@@ -1337,7 +1347,6 @@ i[34567]86-*-interix3*)\n \t;;\n i[34567]86-*-interix*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/i386-interix.h interix.h\"\n-\txm_file=\"i386/xm-i386-interix.h\"\n \txm_defines=POSIX\n \ttmake_file=\"t-interix i386/t-interix\"\n \textra_objs=winnt.o\n@@ -1348,30 +1357,6 @@ i[34567]86-*-interix*)\n \t\ttm_file=\"${tm_file} dbxcoff.h\"\n \tfi\n \t;;\n-i960-wrs-vxworks5 | i960-wrs-vxworks5.0*)\n-\ttm_file=\"${tm_file} i960/vx960.h\"\n-\ttmake_file=i960/t-vxworks960\n-\tuse_collect2=yes\n-\tthread_file='vxworks'\n-\tc_target_objs=\"i960-c.o\"\n-\tcxx_target_objs=\"i960-c.o\"\n-\t;;\n-i960-wrs-vxworks5* | i960-wrs-vxworks)\n-\ttm_file=\"${tm_file} dbxcoff.h i960/i960-coff.h i960/vx960-coff.h\"\n-\ttmake_file=i960/t-vxworks960\n-\tuse_collect2=yes\n-\tthread_file='vxworks'\n-\tc_target_objs=\"i960-c.o\"\n-\tcxx_target_objs=\"i960-c.o\"\n-\t;;\n-i960-wrs-vxworks*)\n-\ttm_file=\"${tm_file} i960/vx960.h\"\n-\ttmake_file=i960/t-vxworks960\n-\tuse_collect2=yes\n-\tthread_file='vxworks'\n-\tc_target_objs=\"i960-c.o\"\n-\tcxx_target_objs=\"i960-c.o\"\n-\t;;\n i960-*-coff*)\n \ttm_file=\"${tm_file} dbxcoff.h i960/i960-coff.h libgloss.h\"\n \ttmake_file=i960/t-960bare\n@@ -1425,6 +1410,9 @@ ia64*-*-linux*)\n \ttmake_file=\"t-slibgcc-elf-ver t-linux ia64/t-ia64 ia64/t-glibc\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n+\tif test x\"$use_libunwind_exceptions\" = xyes; then\n+\t  tmake_file=\"$tmake_file t-libunwind\"\n+\tfi\n \t;;\n ia64*-*-hpux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h ia64/sysv4.h ia64/hpux.h ia64/hpux_longdouble.h\"\n@@ -1612,11 +1600,6 @@ m68k-sun-sunos*)\t\t\t# For SunOS 4 (the default).\n \tfi\n \tuse_collect2=yes\n \t;;\n-m68k-wrs-vxworks*)\n-\ttm_file=m68k/vxm68k.h\n-\ttmake_file=m68k/t-vxworks68\n-\tthread_file='vxworks'\n-\t;;\n m68k-*-aout*)\n \ttmake_file=m68k/t-m68kbare\n \ttm_file=\"m68k/m68k-aout.h libgloss.h\"\n@@ -1758,14 +1741,6 @@ mips-sgi-irix6*)\t\t# SGI System V.4., IRIX 6\n #\t\tthread_file='irix'\n #\tfi\n \t;;\n-mips-wrs-vxworks)\n-\ttm_file=\"${tm_file} mips/elf.h mips/vxworks.h\"\n-\ttmake_file=mips/t-ecoff\n-\tgas=yes\n-\tgnu_ld=yes\n-\textra_parts=\"crtbegin.o crtend.o\"\n-\tthread_file='vxworks'\n-\t;;\n mips-sgi-irix5cross64)\t\t# Irix5 host, Irix 6 target, cross64\n \ttm_file=\"mips/iris6.h mips/cross64.h\"\n \txm_defines=POSIX\n@@ -1825,7 +1800,7 @@ mips-sgi-*)\t# would otherwise be caught by mips-*-elf*\n mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n \ttm_file=\"elfos.h ${tm_file} mips/netbsd.h\"\n-\ttmake_file=\"${tmake_file} mips/t-netbsd\"\n+\ttmake_file=\"${tmake_file}\"\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         tm_file=\"dbxelf.h elfos.h svr4.h linux.h ${tm_file} mips/linux.h\"\n@@ -1835,7 +1810,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \t\ttm_defines=\"MIPS_ISA_DEFAULT=32\"\n                 ;;\n         esac\n-\ttmake_file=\"t-slibgcc-elf-ver t-linux mips/t-linux\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t;;\n mips*el-*-openbsd*)\t# mips little endian\n \ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n@@ -1919,6 +1894,7 @@ mipstx39-*-elf* | mipstx39el-*-elf*)\n \ttmake_file=mips/t-r3900\n \t;;\n mmix-knuth-mmixware)\n+\tneed_64bit_hwint=yes\n \t;;\n mn10200-*-*)\n \ttm_file=\"dbxelf.h elfos.h svr4.h ${tm_file}\"\n@@ -1991,10 +1967,11 @@ powerpc-*-darwin*)\n \t# Darwin linker does collect2 functionality\n \tuse_collect2=no\n \textra_headers=altivec.h\n+\t# override ppc default\n+\tneed_64bit_hwint=\n \t;;\n powerpc*-*-freebsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} rs6000/sysv4.h rs6000/freebsd.h\"\n-\txm_file=rs6000/xm-sysv4.h\n \tout_file=rs6000/rs6000.c\n \ttmake_file=\"rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n@@ -2095,23 +2072,19 @@ powerpc-*-gnu*)\n \tfi\n \t;;\n powerpc-wrs-vxworks*)\n-\txm_defines=POSIX\n-        tm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/vxppc.h\"\n-        tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n-\tthread_file='vxworks'\n-        ;;\n+\t# We want vxworks.h after rs6000/sysv4.h, which unfortunately\n+\t# means we have to redo the tm_file list from scratch.\n+\ttm_file=\"rs6000/rs6000.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} vxworks.h rs6000/vxworks.h\"\n+\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-vxworks\"\n+\textra_headers=ppc-asm.h\n+\t;;\n powerpc-wrs-windiss*)\n         xm_defines=POSIX\n \ttm_file=\"${tm_file} elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/windiss.h\"\n         tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n         thread_file=\"\"\n         ;;\n-powerpcle-wrs-vxworks*)\n-\txm_defines=POSIX\n-        tm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/vxppc.h\"\n-        tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n-\tthread_file='vxworks'\n-        ;;\n powerpcle-*-sysv*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \txm_defines=POSIX\n@@ -2249,7 +2222,7 @@ sh-*-rtems*)\n \tfi\n \t;;\n sh-*-linux* | sh[2346lbe]*-*-linux*)\n-\ttmake_file=\"sh/t-sh sh/t-elf sh/t-linux\"\n+\ttmake_file=\"sh/t-sh sh/t-elf t-slibgcc-elf-ver t-linux sh/t-linux\"\n \tcase $machine in\n \tsh*be-*-* | sh*eb-*-*) ;;\n \t*)\n@@ -2258,7 +2231,6 @@ sh-*-linux* | sh[2346lbe]*-*-linux*)\n \t\t;;\n \tesac\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/elf.h sh/linux.h\"\n-\tgas=yes gnu_ld=yes\n \tcase $machine in\n \tsh64*)\n \t\ttmake_file=\"${tmake_file} sh/t-sh64\"\n@@ -2315,17 +2287,6 @@ sparc-tti-*)\n \ttm_file=\"${tm_file} sparc/pbd.h\"\n \txm_defines=POSIX\n \t;;\n-sparc64-wrs-vxworks*)\n-        tm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sol2.h sparc/sol2.h sparc/elf.h sparc/biarch64.h gofast.h sparc/vxsparc64.h\"\n-        tmake_file=\"sparc/t-vxsparc64 sparc/t-crtfm\"\n-        use_collect2=yes\n-        ;;\n-sparc-wrs-vxworks* | sparclite-wrs-vxworks*)\n-\ttm_file=\"${tm_file} aoutos.h sparc/aout.h gofast.h sparc/vxsparc.h\"\n-\ttmake_file=sparc/t-vxsparc\n-\tuse_collect2=yes\n-\tthread_file='vxworks'\n-\t;;\n sparc-*-aout*)\n \ttmake_file=sparc/t-sparcbare\n \ttm_file=\"sparc/sparc.h aoutos.h sparc/aout.h libgloss.h\"\n@@ -2348,7 +2309,6 @@ sparc-*-openbsd*)\n \t;;\n sparc64-*-openbsd*)\n \ttm_file=\"sparc/openbsd1-64.h sparc/sparc.h elfos.h svr4.h sparc/sysv4.h sparc/sol2.h sparc/sp64-elf.h openbsd.h sparc/openbsd64.h\"\n-\txm_file=sparc/xm-sp64.h\n \tgas=yes gnu_ld=yes\n \twith_cpu=ultrasparc\n \t;;\n@@ -2435,6 +2395,7 @@ sparc64-*-solaris2* | sparcv9-*-solaris2*)\n \t\tthread_file='solaris'\n \t    fi\n \tfi\n+\tneed_64bit_hwint=yes\n \t;;\n sparc-hal-solaris2*)\n         xm_defines=POSIX\n@@ -2475,6 +2436,7 @@ sparc-*-solaris2*)\n \t\t\ttm_file=\"${tm_file} sparc/sol2-gas-bi.h\"\n \t\tfi\n \t\ttmake_file=\"$tmake_file sparc/t-sol2-64\"\n+\t\tneed_64bit_hwint=yes\n \t\t;;\n \tesac\n \txm_defines=POSIX\n@@ -2515,11 +2477,6 @@ sparc-*-sysv4*)\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n-sparc-*-vxsim*)\n-\txm_defines=POSIX\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/vxsim.h\"\n-\ttmake_file=sparc/t-vxsparc\n-\t;;\n sparclet-*-aout*)\n \ttm_file=\"${tm_file} aoutos.h sparc/aout.h sparc/splet.h libgloss.h\"\n \ttmake_file=sparc/t-splet\n@@ -2563,6 +2520,7 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t\tx) with_cpu=ultrasparc ;;\n \t\t*) echo \"$with_cpu not supported for freebsd target\"; exit 1 ;;\n \tesac\n+\tneed_64bit_hwint=yes\n \t;;\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \ttmake_file=\"t-slibgcc-elf-ver t-linux sparc/t-linux64 sparc/t-crtfm\"\n@@ -2666,8 +2624,8 @@ vax-*-ultrix*)\t\t\t# VAXen running ultrix\n \ttm_file=\"${tm_file} vax/ultrix.h\"\n \t;;\n vax-*-vms*)\t\t\t# VAXen running VMS\n-\txm_file=vax/xm-vms.h\n-\ttm_file=vax/vms.h\n+\techo \"Configuration $machine no longer supported\" 1>&2\n+\texit 1\n \t;;\n vax-*-*)\t\t\t# VAX default entry\n \t;;\n@@ -2746,6 +2704,9 @@ i586-*-*)\n \t;;\n i686-*-* | i786-*-*)\n \tcase $target_alias in\n+\t\tk8-*)\n+\t\t\ttarget_cpu_default2=TARGET_CPU_DEFAULT_k8\n+\t\t\t;;\n \t\tathlon_xp-*|athlon_mp-*|athlon_4-*)\n \t\t\ttarget_cpu_default2=TARGET_CPU_DEFAULT_athlon_sse\n \t\t\t;;\n@@ -2770,7 +2731,7 @@ x86_64-*-*)\n \t# We should have hammer chip here, but it does not exist yet and\n \t# thus it is not supported.  Athlon_SSE is probably equivalent feature\n \t# wise to hammer from our point of view except for 64bit mode.\n-\ttarget_cpu_default2=TARGET_CPU_DEFAULT_athlon_sse\n+\ttarget_cpu_default2=TARGET_CPU_DEFAULT_k8\n \t;;\n alpha*-*-*)\n \tcase $machine in"}, {"sha": "0900cb4b07bd133c30f79323d6db356b3b9ffd9e", "filename": "gcc/config.in", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,4 +1,4 @@\n-/* config.in.  Generated automatically from configure.in by autoheader.  */\n+/* config.in.  Generated automatically from configure.in by autoheader 2.13.  */\n \n /* Define if using alloca.c.  */\n #undef C_ALLOCA\n@@ -366,10 +366,16 @@\n /* Define as the number of bits in a byte, if `limits.h' doesn't. */\n #undef CHAR_BIT\n \n+/* whether byteorder is bigendian */\n+#undef WORDS_BIGENDIAN\n+\n /* Define if the host machine stores words of multi-word integers in\n    big-endian order. */\n #undef HOST_WORDS_BIG_ENDIAN\n \n+/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n+#undef BYTEORDER\n+\n /* Define to the floating point format of the host machine, if not IEEE. */\n #undef HOST_FLOAT_FORMAT\n \n@@ -492,6 +498,15 @@\n /* Define if host mkdir takes a single argument. */\n #undef MKDIR_TAKES_ONE_ARG\n \n+/* Define 0/1 to force the choice for exception handling model. */\n+#undef CONFIG_SJLJ_EXCEPTIONS\n+\n+/* Define if gcc should use -lunwind. */\n+#undef USE_LIBUNWIND_EXCEPTIONS\n+\n+/* Define to 1 if HOST_WIDE_INT must be 64 bits wide (see hwint.h). */\n+#undef NEED_64BIT_HOST_WIDE_INT\n+\n /* Define to the name of a file containing a list of extra machine modes\n    for this architecture. */\n #undef EXTRA_MODES_FILE\n@@ -596,12 +611,6 @@\n /* Define if your MIPS libgloss linker scripts consistently include STARTUP directives. */\n #undef HAVE_MIPS_LIBGLOSS_STARTUP_DIRECTIVES\n \n-/* Define 0/1 to force the choice for exception handling model. */\n-#undef CONFIG_SJLJ_EXCEPTIONS\n-\n-/* Define if gcc should use -lunwind. */\n-#undef USE_LIBUNWIND_EXCEPTIONS\n-\n \n /* Bison unconditionally undefines `const' if neither `__STDC__' nor\n    __cplusplus are defined.  That's a problem since we use `const' in"}, {"sha": "eeab805720484c47d1b498b675062012e9dc85f9", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\"\n@@ -118,6 +120,8 @@ int alpha_this_literal_sequence_number;\n int alpha_this_gpdisp_sequence_number;\n \n /* Declarations of static functions.  */\n+static bool alpha_function_ok_for_sibcall\n+  PARAMS ((tree, tree));\n static int tls_symbolic_operand_1\n   PARAMS ((rtx, enum machine_mode, int, int));\n static enum tls_model tls_symbolic_operand_type\n@@ -297,6 +301,9 @@ static void unicosmk_unique_section PARAMS ((tree, int));\n #undef  TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN alpha_expand_builtin\n \n+#undef TARGET_FUNCTION_OK_FOR_SIBCALL\n+#define TARGET_FUNCTION_OK_FOR_SIBCALL alpha_function_ok_for_sibcall\n+\n #if TARGET_ABI_OSF\n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK alpha_output_mi_thunk_osf\n@@ -2274,6 +2281,19 @@ alpha_legitimize_address (x, scratch, mode)\n   }\n }\n \n+/* We do not allow indirect calls to be optimized into sibling calls, nor\n+   can we allow a call to a function in a different compilation unit to\n+   be optimized into a sibcall.  */\n+static bool\n+alpha_function_ok_for_sibcall (decl, exp)\n+     tree decl;\n+     tree exp ATTRIBUTE_UNUSED;\n+{\n+  return (decl\n+\t  && (! TREE_PUBLIC (decl)\n+\t      || (TREE_ASM_WRITTEN (decl) && (*targetm.binds_local_p) (decl))));\n+}\n+\n /* For TARGET_EXPLICIT_RELOCS, we don't obfuscate a SYMBOL_REF to a\n    small symbolic operand until after reload.  At which point we need\n    to replace (mem (symbol_ref)) with (mem (lo_sum $29 symbol_ref))\n@@ -9673,7 +9693,7 @@ unicosmk_output_addr_vec (file, vec)\n   int vlen = XVECLEN (body, 0);\n   int idx;\n \n-  ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (lab));\n+  (*targetm.asm_out.internal_label) (file, \"L\", CODE_LABEL_NUMBER (lab));\n \n   for (idx = 0; idx < vlen; idx++)\n     {"}, {"sha": "026c62a0bedb78720f9c1a41e61773b002ea8515", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1164,14 +1164,6 @@ extern int alpha_memory_latency;\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-/* We do not allow indirect calls to be optimized into sibling calls, nor\n-   can we allow a call to a function in a different compilation unit to\n-   be optimized into a sibcall.  */\n-#define FUNCTION_OK_FOR_SIBCALL(DECL)\t\t\t\\\n-  (DECL\t\t\t\t\t\t\t\\\n-   && (! TREE_PUBLIC (DECL)\t\t\t\t\\\n-       || (TREE_ASM_WRITTEN (DECL) && (*targetm.binds_local_p) (DECL))))\n-\n /* Try to output insns to set TARGET equal to the constant C if it can be\n    done in less than N insns.  Do all computations in MODE.  Returns the place\n    where the output has been placed if it can be done and the insns have been\n@@ -1285,12 +1277,6 @@ do {\t\t\t\t\t\t\\\n \f\n /* Addressing modes, and classification of registers for them.  */\n \n-/* #define HAVE_POST_INCREMENT 0 */\n-/* #define HAVE_POST_DECREMENT 0 */\n-\n-/* #define HAVE_PRE_DECREMENT 0 */\n-/* #define HAVE_PRE_INCREMENT 0 */\n-\n /* Macros to check register numbers against specific register classes.  */\n \n /* These assume that REGNO is a hard or pseudo reg number.\n@@ -1757,18 +1743,12 @@ do {\t\t\t\t\t\t\\\n \n #define USER_LABEL_PREFIX \"\"\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"$%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to output a label for a jump table.  Arguments are the same as\n-   for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n+   for (*targetm.asm_out.internal_label), except the insn for the jump table is\n    passed.  */\n \n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n-{ ASM_OUTPUT_ALIGN (FILE, 2); ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM); }\n+{ ASM_OUTPUT_ALIGN (FILE, 2); (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM); }\n \n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n@@ -1877,14 +1857,6 @@ do {\t\t\t\t\t\t\\\n ( fputs (\"\\t.lcomm \", (FILE)),\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n   fprintf ((FILE), \",%d\\n\", (SIZE)))\n-\n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n \f\n \n /* Print operand X (an rtx) in assembler syntax to file FILE."}, {"sha": "062e05e5c423b2b1759767fc31c434eccbde2b8b", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 102, "deletions": 9, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -4727,20 +4727,19 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n    (use (reg:DI 26))\n    (clobber (reg:DI 27))]\n   \"TARGET_ABI_OPEN_VMS\"\n-  \"*\n {\n   switch (which_alternative)\n     {\n     case 0:\n-   \treturn \\\"mov %2,$27\\;jsr $26,0\\;ldq $27,0($29)\\\";\n+   \treturn \"mov %2,$27\\;jsr $26,0\\;ldq $27,0($29)\";\n     case 1:\n \toperands [2] = alpha_use_linkage (operands [0], cfun->decl, 1, 0);\n \toperands [3] = alpha_use_linkage (operands [0], cfun->decl, 0, 0);\n-   \treturn \\\"ldq $26,%3\\;ldq $27,%2\\;jsr $26,%0\\;ldq $27,0($29)\\\";\n+   \treturn \"ldq $26,%3\\;ldq $27,%2\\;jsr $26,%0\\;ldq $27,0($29)\";\n     default:\n       abort();\n     }\n-}\"\n+}\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,16\")])\n \n@@ -6460,6 +6459,56 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n     FAIL;\n })\n \n+(define_expand \"movstrdi\"\n+  [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n+\t\t   (match_operand:BLK 1 \"memory_operand\" \"\"))\n+\t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n+\t      (use (match_operand:DI 3 \"immediate_operand\" \"\"))\n+\t      (use (match_dup 4))\n+\t      (clobber (reg:DI 25))\n+\t      (clobber (reg:DI 16))\n+\t      (clobber (reg:DI 17))\n+\t      (clobber (reg:DI 18))\n+\t      (clobber (reg:DI 19))\n+\t      (clobber (reg:DI 20))\n+\t      (clobber (reg:DI 26))\n+\t      (clobber (reg:DI 27))])]\n+  \"TARGET_ABI_OPEN_VMS\"\n+{\n+  operands[4] = gen_rtx_SYMBOL_REF (Pmode, \"OTS$MOVE\");\n+  alpha_need_linkage (XSTR (operands[4], 0), 0);\n+})\n+\n+(define_insn \"*movstrdi_1\"\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=m,=m\")\n+\t(match_operand:BLK 1 \"memory_operand\" \"m,m\"))\n+   (use (match_operand:DI 2 \"nonmemory_operand\" \"r,i\"))\n+   (use (match_operand:DI 3 \"immediate_operand\" \"\"))\n+   (use (match_operand:DI 4 \"call_operand\" \"i,i\"))\n+   (clobber (reg:DI 25))\n+   (clobber (reg:DI 16))\n+   (clobber (reg:DI 17))\n+   (clobber (reg:DI 18))\n+   (clobber (reg:DI 19))\n+   (clobber (reg:DI 20))\n+   (clobber (reg:DI 26))\n+   (clobber (reg:DI 27))]\n+  \"TARGET_ABI_OPEN_VMS\"\n+{\n+  operands [5] = alpha_use_linkage (operands [4], cfun->decl, 0, 1);\n+  switch (which_alternative)\n+    {\n+    case 0:\n+\treturn \"lda $16,%0\\;bis $31,%2,$17\\;lda $18,%1\\;ldq $26,%5\\;lda $25,3($31)\\;jsr $26,%4\\;ldq $27,0($29)\";\n+    case 1:\n+\treturn \"lda $16,%0\\;lda $17,%2($31)\\;lda $18,%1\\;ldq $26,%5\\;lda $25,3($31)\\;jsr $26,%4\\;ldq $27,0($29)\";\n+    default:\n+      abort();\n+    }\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"28\")])\n+\n (define_expand \"clrstrqi\"\n   [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n \t\t   (const_int 0))\n@@ -6472,6 +6521,51 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   else\n     FAIL;\n })\n+\n+(define_expand \"clrstrdi\"\n+  [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n+\t\t   (const_int 0))\n+\t      (use (match_operand:DI 1 \"immediate_operand\" \"\"))\n+\t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n+\t      (use (match_dup 3))\n+\t      (clobber (reg:DI 25))\n+\t      (clobber (reg:DI 16))\n+\t      (clobber (reg:DI 17))\n+\t      (clobber (reg:DI 26))\n+\t      (clobber (reg:DI 27))])]\n+  \"TARGET_ABI_OPEN_VMS\"\n+{\n+  operands[3] = gen_rtx_SYMBOL_REF (Pmode, \"OTS$ZERO\");\n+  alpha_need_linkage (XSTR (operands[3], 0), 0);\n+})\n+\n+(define_insn \"*clrstrdi_1\"\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=m,=m\")\n+\t\t   (const_int 0))\n+   (use (match_operand:DI 1 \"nonmemory_operand\" \"r,i\"))\n+   (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n+   (use (match_operand:DI 3 \"call_operand\" \"i,i\"))\n+   (clobber (reg:DI 25))\n+   (clobber (reg:DI 16))\n+   (clobber (reg:DI 17))\n+   (clobber (reg:DI 26))\n+   (clobber (reg:DI 27))]\n+  \"TARGET_ABI_OPEN_VMS\"\n+{\n+  operands [4] = alpha_use_linkage (operands [3], cfun->decl, 0, 1);\n+  switch (which_alternative)\n+    {\n+    case 0:\n+\treturn \"lda $16,%0\\;bis $31,%1,$17\\;ldq $26,%4\\;lda $25,2($31)\\;jsr $26,%3\\;ldq $27,0($29)\";\n+    case 1:\n+\treturn \"lda $16,%0\\;lda $17,%1($31)\\;ldq $26,%4\\;lda $25,2($31)\\;jsr $26,%3\\;ldq $27,0($29)\";\n+    default:\n+      abort();\n+    }\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"24\")])\n+\n \f\n ;; Subroutine of stack space allocation.  Perform a stack probe.\n (define_expand \"probe_stack\"\n@@ -6571,7 +6665,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   \"\"\n {\n   operands[2] = gen_label_rtx ();\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t     CODE_LABEL_NUMBER (operands[2]));\n \n   return \"stq $31,-8192(%1)\\;subq %0,1,%0\\;lda %1,-8192(%1)\\;bne %0,%l2\";\n@@ -7918,20 +8012,19 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n    (use (reg:DI 26))\n    (clobber (reg:DI 27))]\n   \"TARGET_ABI_OPEN_VMS\"\n-  \"*\n {\n   switch (which_alternative)\n     {\n     case 0:\n-   \treturn \\\"mov %3,$27\\;jsr $26,0\\;ldq $27,0($29)\\\";\n+   \treturn \"mov %3,$27\\;jsr $26,0\\;ldq $27,0($29)\";\n     case 1:\n \toperands [3] = alpha_use_linkage (operands [1], cfun->decl, 1, 0);\n \toperands [4] = alpha_use_linkage (operands [1], cfun->decl, 0, 0);\n-   \treturn \\\"ldq $26,%4\\;ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\\\";\n+   \treturn \"ldq $26,%4\\;ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\";\n     default:\n       abort();\n     }\n-}\"\n+}\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,16\")])\n "}, {"sha": "afe96462d4ed38f59628716288765613c3bdef7f", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -103,7 +103,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CASE_LABEL(FILE, PREFIX, NUM, JUMPTABLE)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_BEFORE_CASE_LABEL (FILE, PREFIX, NUM, JUMPTABLE)\t\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\t\\\n+    (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\t\t\\\n   } while (0)\n \n /* The standard SVR4 assembler seems to require that certain builtin"}, {"sha": "b8f9512f522edfee1ebead61b0dcbb8e489a7190", "filename": "gcc/config/alpha/unicosmk.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Funicosmk.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Funicosmk.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Funicosmk.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -350,12 +350,12 @@ ssib_section ()\t\t\t\\\n #undef ASM_OUTPUT_SOURCE_FILENAME\n \n /* This is how to output a label for a jump table.  Arguments are the same as\n-   for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n+   for (*targetm.asm_out.internal_label), except the insn for the jump table is\n    passed.  */\n \n #undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n-  ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM)\n+  (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM)\n \n /* CAM has some restrictions with respect to string literals. It won't\n    accept lines with more that 256 characters which means that we have"}, {"sha": "07b668f983dc4cac9f3a9a6938f2f2e390548a01", "filename": "gcc/config/alpha/vms-cc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms-cc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms-cc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms-cc.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -25,6 +25,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n \n #undef PATH_SEPARATOR\n #undef PATH_SEPARATOR_STR"}, {"sha": "60e01d8ddd6de2168e07270e82e57a0f8c4a6dda", "filename": "gcc/config/alpha/vms-ld.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms-ld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms-ld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms-ld.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -26,6 +26,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n \n typedef struct dsc {unsigned short len, mbz; char *adr; } Descr;\n "}, {"sha": "57d8e697c466b1e0be73532b7c356b1f25612471", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -306,7 +306,7 @@ extern void literals_section\tPARAMS ((void));\n \n #undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n-{ ASM_OUTPUT_ALIGN (FILE, 3); ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM); }\n+{ ASM_OUTPUT_ALIGN (FILE, 3); (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM); }\n \n /* This says how to output assembler code to declare an                \n    uninitialized external linkage data object.  */ \n@@ -448,10 +448,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE VMS_AND_DWARF2_DEBUG\n \n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 12),\t\\\n-  sprintf ((OUTPUT), \"%s___%d\", (NAME), (LABELNO)))\n+#define ASM_PN_FORMAT \"%s___%lu\"\n \n /* ??? VMS uses different linkage.  */\n #undef TARGET_ASM_OUTPUT_MI_THUNK"}, {"sha": "a27c6452116fb9d000d7d3c050d4df7942840268", "filename": "gcc/config/alpha/vxworks.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvxworks.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,55 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  Vxworks Alpha version.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This file just exists to give specs for the Alpha running on VxWorks.  */\n-\n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC \"\\\n-%{mvxsim:-DCPU=SIMALPHADUNIX} \\\n-%{!mvxsim: %{!mcpu*|mcpu=21064:-DCPU=21064} %{mcpu=21164:-DCPU=21164}} \\\n-%{posix: -D_POSIX_SOURCE}\"\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-    do {\t\t\t\t\t\\\n-\tbuiltin_define (\"__vxworks\");\t\t\\\n-\tbuiltin_define (\"__alpha_vxworks\");\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\\\n-\tbuiltin_assert (\"system=vxworks\");\t\\\n-\tbuiltin_assert (\"system=embedded\");\t\\\n-    } while (0)\n-\n-/* VxWorks does all the library stuff itself.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"\"\n-\n-/* VxWorks uses object files, not loadable images.  Make linker just combine\n-   objects.  Also show using 32 bit mode and set start of text to 0.  */\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-r -taso -T 0\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"\""}, {"sha": "dd71a1dfa09aed558704adbf05b9418cf69e5981", "filename": "gcc/config/alpha/xm-alpha-interix.h", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fxm-alpha-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fxm-alpha-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-alpha-interix.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,39 +0,0 @@\n-/* Configuration for GNU compiler\n-   for an DEC/Compaq Alpha\n-   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n-   Donn Terry, Softway Systems, Inc.\n-     derived from code by Douglas B. Rupp (drupp@cs.washington.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define HOST_BITS_PER_WIDE_INT 64\n-#ifdef __GNUC__\n-#   define HOST_WIDE_INT long long\n-#else\n-#   define HOST_WIDE_INT __int64\n-#endif\n-\n-#define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONGLONG\n-#ifdef __GNUC__\n-#   define HOST_WIDEST_INT long long\n-#else\n-#   define HOST_WIDEST_INT __int64\n-#endif\n-#define HOST_WIDEST_INT_PRINT_DEC \"%lld\"\n-#define HOST_WIDEST_INT_PRINT_UNSIGNED \"%llu\"\n-#define HOST_WIDEST_INT_PRINT_HEX \"0x%llx\""}, {"sha": "51806acd10da6503ffa14156d7ec05d69081d1b0", "filename": "gcc/config/alpha/xm-vms.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-vms.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -19,9 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define HOST_WIDE_INT long long\n-#define HOST_BITS_PER_WIDE_INT 64\n-\n /* A couple of conditionals for execution machine are controlled here.  */\n #ifndef VMS\n #define VMS"}, {"sha": "26fd82923a473f8d88b0c6608637c01ad56585d9", "filename": "gcc/config/alpha/xm-vms64.h", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fxm-vms64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Falpha%2Fxm-vms64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-vms64.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,29 +0,0 @@\n-/* Configuration for GNU C-compiler for openVMS/Alpha.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n-   Contributed by Douglas Rupp (rupp@gnat.com).\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef HOST_WIDE_INT\n-\n-/* Since DEC C long != Gnu C long */\n-#define HOST_PTR_PRINTF \"%llx\"\n-#define HOST_WIDE_INT_PRINT_DEC \"%lld\"\n-#define HOST_WIDE_INT_PRINT_UNSIGNED \"%llu\"\n-#define HOST_WIDE_INT_PRINT_HEX \"0x%llx\"\n-#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%llx%016llx\""}, {"sha": "c106b88e2cff49130514c68eb624401e0fdbfb47", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -93,6 +95,7 @@ static bool arc_assemble_integer PARAMS ((rtx, unsigned int, int));\n static void arc_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void arc_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static void arc_encode_section_info PARAMS ((tree, int));\n+static void arc_internal_label PARAMS ((FILE *, const char *, unsigned long));\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n@@ -110,6 +113,8 @@ static void arc_encode_section_info PARAMS ((tree, int));\n #define TARGET_ATTRIBUTE_TABLE arc_attribute_table\n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO arc_encode_section_info\n+#undef TARGET_ASM_INTERNAL_LABEL\n+#define  TARGET_ASM_INTERNAL_LABEL arc_internal_label\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -1922,7 +1927,7 @@ record_cc_ref (insn)\n    0 -> 2 final_prescan_insn, if the `target' is an unconditional branch\n    1 -> 3 branch patterns, after having not output the conditional branch\n    2 -> 4 branch patterns, after having not output the conditional branch\n-   3 -> 0 ASM_OUTPUT_INTERNAL_LABEL, if the `target' label is reached\n+   3 -> 0 (*targetm.asm_out.internal_label), if the `target' label is reached\n           (the target label has CODE_LABEL_NUMBER equal to\n \t  arc_ccfsm_target_label).\n    4 -> 0 final_prescan_insn, if `target' unconditional branch is reached\n@@ -2218,7 +2223,7 @@ arc_final_prescan_insn (insn, opvec, noperands)\n /* Record that we are currently outputting label NUM with prefix PREFIX.\n    It it's the label we're looking for, reset the ccfsm machinery.\n \n-   Called from ASM_OUTPUT_INTERNAL_LABEL.  */\n+   Called from (*targetm.asm_out.internal_label).  */\n \n void\n arc_ccfsm_at_label (prefix, num)\n@@ -2358,3 +2363,16 @@ arc_encode_section_info (decl, first)\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     SYMBOL_REF_FLAG (XEXP (DECL_RTL (decl), 0)) = 1;\n }\n+\n+/* This is how to output a definition of an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.  */\n+\n+static void\n+arc_internal_label (stream, prefix, labelno)\n+     FILE *stream;\n+     const char *prefix;\n+     unsigned long labelno;\n+{\n+  arc_ccfsm_at_label (prefix, labelno);\n+  default_internal_label (stream, prefix, labelno);\n+}"}, {"sha": "7739fa4cdad7cdee60a7cbfbbb2065f2de5d89b0", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1202,7 +1202,7 @@ do {\t\t\t\t\t\t\t\\\n    compiled for different cpus.  */\n /* We work around a dwarfout.c deficiency by watching for labels from it and\n    not adding the '_' prefix nor the cpu suffix.  There is a comment in\n-   dwarfout.c that says it should be using ASM_OUTPUT_INTERNAL_LABEL.  */\n+   dwarfout.c that says it should be using (*targetm.asm_out.internal_label).  */\n extern const char *arc_mangle_cpu;\n #define ASM_OUTPUT_LABELREF(FILE, NAME) \\\n do {\t\t\t\t\t\t\t\\\n@@ -1217,22 +1217,6 @@ do {\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* This is how to output a definition of an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM) \\\n-do {\t\t\t\t\t\t\\\n-  arc_ccfsm_at_label (PREFIX, NUM);\t\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM);\t\\\n-} while (0)\n-\n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO) \\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n /* Assembler pseudo-op to equate one value with another.  */\n /* ??? This is needed because dwarfout.c provides a default definition too\n    late for defaults.h (which contains the default definition of ASM_OUTPUT_DEF"}, {"sha": "73b62b5bb586c624d4627f5e2f0d5d4490d3ccd0", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #define LINK_LIBGCC_SPECIAL 1\n \n #define LINK_SPEC \"%{aof} %{bin} %{aif} %{ihf} %{shl,*} %{reent*} %{split} \\\n-\t\t   %{ov*,*} %{reloc*} -nodebug\"\n+\t\t   %{ov*} %{reloc*} -nodebug\"\n \n #define STARTFILE_SPEC \"crtbegin.o%s\"\n \n@@ -267,10 +267,6 @@ do {\t\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(STRING,PREFIX,NUM)\t\\\n   sprintf ((STRING), \"*|%s..%ld|\", (PREFIX), (long)(NUM))\n \n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR,NAME,NUMBER)\t\\\n- ((OUTVAR) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTVAR), \"%s.%d\", (NAME), (NUMBER)))\n-\n /* How initialization functions are handled */\n \n #define CTORS_SECTION_ASM_OP \"\\tAREA\\t|C$$gnu_ctorsvec|, DATA, READONLY\""}, {"sha": "a142ae11944f87ed8786f8ff9a16e792ccc59025", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -127,7 +127,7 @@ Boston, MA 02111-1307, USA.  */\n       output_quoted_string (STREAM, NAME);\t\t\t\t\\\n       fprintf (STREAM, \",%d,0,315,%s\\n\", N_SO, &ltext_label_name[1]);\t\\\n       text_section ();\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_INTERNAL_LABEL (STREAM, \"Ltext\", 0);\t\t\t\\\n+      (*targetm.asm_out.internal_label) (STREAM, \"Ltext\", 0);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n   \n@@ -151,11 +151,6 @@ Boston, MA 02111-1307, USA.  */\n   sprintf (STRING, \"*%s%s%u\", LOCAL_LABEL_PREFIX, PREFIX, (unsigned int)(NUM))\n #endif\n      \n-/* Construct a private name.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR, NAME, NUMBER)  \\\n-  ((OUTVAR) = (char *) alloca (strlen (NAME) + 10),  \\\n-   sprintf (OUTVAR, \"%s.%d\", NAME, NUMBER))\n-\n /* Output an element of a dispatch table.  */\n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE)  \\\n   asm_fprintf (STREAM, \"\\t.word\\t%LL%d\\n\", VALUE)"}, {"sha": "b0173be189494645aaf80479aaf32bc2667f14e3", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -42,7 +42,6 @@ extern unsigned int  arm_compute_initial_elimination_offset PARAMS ((unsigned in\n #ifdef TREE_CODE\n extern int    arm_return_in_memory\tPARAMS ((tree));\n extern void   arm_encode_call_attribute\tPARAMS ((tree, int));\n-extern int    arm_function_ok_for_sibcall PARAMS ((tree));\n #endif\n #ifdef RTX_CODE\n extern int    arm_hard_regno_mode_ok\tPARAMS ((unsigned int,"}, {"sha": "c4326bac5c16936f2144d5b1f01492c7ff210777", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n     \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"obstack.h\"\n@@ -117,6 +119,7 @@ static void\t arm_set_default_type_attributes  PARAMS ((tree));\n static int\t arm_adjust_cost\t\tPARAMS ((rtx, rtx, rtx, int));\n static int\t count_insns_for_constant\tPARAMS ((HOST_WIDE_INT, int));\n static int\t arm_get_strip_length\t\tPARAMS ((int));\n+static bool      arm_function_ok_for_sibcall    PARAMS ((tree, tree));\n #ifdef OBJECT_FORMAT_ELF\n static void\t arm_elf_asm_named_section\tPARAMS ((const char *, unsigned int));\n #endif\n@@ -126,6 +129,7 @@ static void\t arm_encode_section_info\tPARAMS ((tree, int));\n #ifdef AOF_ASSEMBLER\n static void\t aof_globalize_label\t\tPARAMS ((FILE *, const char *));\n #endif\n+static void\t arm_internal_label\t\tPARAMS ((FILE *, const char *, unsigned long));\n static void arm_output_mi_thunk\t\t\tPARAMS ((FILE *, tree,\n \t\t\t\t\t\t\t HOST_WIDE_INT,\n \t\t\t\t\t\t\t HOST_WIDE_INT, tree));\n@@ -191,6 +195,12 @@ static void arm_output_mi_thunk\t\t\tPARAMS ((FILE *, tree,\n #undef TARGET_STRIP_NAME_ENCODING\n #define TARGET_STRIP_NAME_ENCODING arm_strip_name_encoding\n \n+#undef TARGET_ASM_INTERNAL_LABEL\n+#define TARGET_ASM_INTERNAL_LABEL arm_internal_label\n+\n+#undef TARGET_FUNCTION_OK_FOR_SIBCALL\n+#define TARGET_FUNCTION_OK_FOR_SIBCALL arm_function_ok_for_sibcall\n+\n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK arm_output_mi_thunk\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n@@ -2308,16 +2318,17 @@ arm_is_longcall_p (sym_ref, call_cookie, call_symbol)\n \n /* Return nonzero if it is ok to make a tail-call to DECL.  */\n \n-int\n-arm_function_ok_for_sibcall (decl)\n+static bool\n+arm_function_ok_for_sibcall (decl, exp)\n      tree decl;\n+     tree exp ATTRIBUTE_UNUSED;\n {\n   int call_type = TARGET_LONG_CALLS ? CALL_LONG : CALL_NORMAL;\n \n   /* Never tailcall something for which we have no decl, or if we\n      are in Thumb mode.  */\n   if (decl == NULL || TARGET_THUMB)\n-    return 0;\n+    return false;\n \n   /* Get the calling method.  */\n   if (lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n@@ -2329,20 +2340,20 @@ arm_function_ok_for_sibcall (decl)\n      a branch instruction.  However, if not compiling PIC, we know\n      we can reach the symbol if it is in this compilation unit.  */\n   if (call_type == CALL_LONG && (flag_pic || !TREE_ASM_WRITTEN (decl)))\n-    return 0;\n+    return false;\n \n   /* If we are interworking and the function is not declared static\n      then we can't tail-call it unless we know that it exists in this \n      compilation unit (since it might be a Thumb routine).  */\n   if (TARGET_INTERWORK && TREE_PUBLIC (decl) && !TREE_ASM_WRITTEN (decl))\n-    return 0;\n+    return false;\n \n   /* Never tailcall from an ISR routine - it needs a special exit sequence.  */\n   if (IS_INTERRUPT (arm_current_func_type ()))\n-    return 0;\n+    return false;\n \n   /* Everything else is ok.  */\n-  return 1;\n+  return true;\n }\n \n \f\n@@ -8853,7 +8864,7 @@ arm_assemble_integer (x, size, aligned_p)\n    0 -> 2 final_prescan_insn if the `target' is an unconditional branch\n    1 -> 3 ASM_OUTPUT_OPCODE after not having output the conditional branch\n    2 -> 4 ASM_OUTPUT_OPCODE after not having output the conditional branch\n-   3 -> 0 ASM_OUTPUT_INTERNAL_LABEL if the `target' label is reached\n+   3 -> 0 (*targetm.asm_out.internal_label) if the `target' label is reached\n           (the target label has CODE_LABEL_NUMBER equal to arm_target_label).\n    4 -> 0 final_prescan_insn if the `target' unconditional branch is reached\n           (the target insn is arm_target_insn).\n@@ -11353,6 +11364,21 @@ arm_encode_section_info (decl, first)\n }\n #endif /* !ARM_PE */\n \n+static void\n+arm_internal_label (stream, prefix, labelno)\n+     FILE *stream;\n+     const char *prefix;\n+     unsigned long labelno;\n+{\n+  if (arm_ccfsm_state == 3 && (unsigned) arm_target_label == labelno\n+      && !strcmp (prefix, \"L\"))\n+    {\n+      arm_ccfsm_state = 0;\n+      arm_target_insn = NULL;\n+    }\n+  default_internal_label (stream, prefix, labelno);\n+}\n+\n /* Output code to add DELTA to the first argument, and then jump\n    to FUNCTION.  Used for C++ multiple inheritance.  */\n \n@@ -11390,4 +11416,3 @@ arm_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n     fputs (\"(PLT)\", file);\n   fputc ('\\n', file);\n }\n-"}, {"sha": "186664c54e446e9d0665fb74c54e3f375816b31f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1517,12 +1517,6 @@ typedef struct\n   arm_va_arg (valist, type)\n \n \f\n-/* Tail calling.  */\n-\n-/* A C expression that evaluates to true if it is ok to perform a sibling\n-   call to DECL.  */\n-#define FUNCTION_OK_FOR_SIBCALL(DECL) arm_function_ok_for_sibcall ((DECL))\n-\n /* Perform any actions needed for a function that is receiving a variable\n    number of arguments.  CUM is as above.  MODE and TYPE are the mode and type\n    of the current parameter.  PRETEND_SIZE is a variable that should be set to\n@@ -2486,25 +2480,6 @@ extern int making_const_table;\n #undef  ASM_APP_OFF\n #define ASM_APP_OFF (TARGET_THUMB ? \"\\t.code\\t16\\n\" : \"\")\n \n-/* Output an internal label definition.  */\n-#ifndef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(STREAM, PREFIX, NUM)\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      char * s = (char *) alloca (40 + strlen (PREFIX));\t\\\n-\t\t\t\t\t\t\t\t\\\n-      if (arm_ccfsm_state == 3 && arm_target_label == (NUM)\t\\\n-\t  && !strcmp (PREFIX, \"L\"))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  arm_ccfsm_state = 0;\t\t\t\t\t\\\n-\t  arm_target_insn = NULL;\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      ASM_GENERATE_INTERNAL_LABEL (s, (PREFIX), (NUM));\t\t\\\n-      ASM_OUTPUT_LABEL (STREAM, s);\t\t                \\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-#endif\n-\n /* Output a push or a pop instruction (only used when profiling).  */\n #define ASM_OUTPUT_REG_PUSH(STREAM, REGNO)\t\t\\\n   if (TARGET_ARM)\t\t\t\t\t\\\n@@ -2529,7 +2504,7 @@ extern int making_const_table;\n     {\t\t\t\t\t\t\t\t\\\n       if (TARGET_THUMB)\t\t\t\t\t\t\\\n         ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\\\n-      ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\\\n+      (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "be955ce61b05747634944ad7b7c73ecc64726ce1", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -4206,7 +4206,7 @@\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_THUMB && flag_pic\"\n   \"*\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (operands[1]));\n   return \\\"add\\\\t%0, %|pc\\\";\n   \"\n@@ -4219,7 +4219,7 @@\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_ARM && flag_pic\"\n   \"*\n-    ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+    (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t       CODE_LABEL_NUMBER (operands[1]));\n     return \\\"add%?\\\\t%0, %|pc, %0\\\";\n   \""}, {"sha": "53a67d5c11eb2fe321f75eb27ae57c13f1460b9f", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -128,26 +128,6 @@ Boston, MA 02111-1307, USA.  */\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n #endif\n-\n-/* Output an internal label definition.  */\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(STREAM, PREFIX, NUM)  \t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      char * s = (char *) alloca (40 + strlen (PREFIX));\t\\\n-      extern int arm_target_label, arm_ccfsm_state;\t\t\\\n-      extern rtx arm_target_insn;\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-      if (arm_ccfsm_state == 3 && arm_target_label == (NUM)\t\\\n-\t  && !strcmp (PREFIX, \"L\"))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  arm_ccfsm_state = 0;\t\t\t\t\t\\\n-\t  arm_target_insn = NULL;\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      ASM_GENERATE_INTERNAL_LABEL (s, (PREFIX), (NUM));\t\t\\\n-      ASM_OUTPUT_LABEL (STREAM, s);\t\t                \\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n \f\n #undef  TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION  arm_elf_asm_named_section"}, {"sha": "57c53f3b77c13c7cdf142e335efc61861fca46b5", "filename": "gcc/config/arm/pe.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"output.h\"\n #include \"flags.h\""}, {"sha": "ba4ea10e402d9bfa421c8969e0f413367f886af8", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,8 +20,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n-pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) output.h \\\n-   flags.h $(TREE_H) $(EXPR_H) toplev.h $(TM_P_H)\n+pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n \n MULTILIB_OPTIONS = mhard-float mthumb"}, {"sha": "e6c65bfc69e9a04a5287fe7f33515d709db13003", "filename": "gcc/config/arm/t-strongarm-pe", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Ft-strongarm-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Farm%2Ft-strongarm-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-strongarm-pe?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,7 +20,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n-pe.o: $(srcdir)/config/arm/pe.c\n+pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n \n MULTILIB_OPTIONS  = mhard-float/msoft-float"}, {"sha": "473362e4332d8fb18339a9fda6c506b603a0a4d5", "filename": "gcc/config/arm/vxarm.h", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Farm%2Fvxarm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Farm%2Fvxarm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxarm.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,71 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for ARM with targetting the VXWorks run time environment. \n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n-\n-   Contributed by: Mike Stump <mrs@wrs.com>\n-   \n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm710\n-\n-#undef  SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC\t\t\\\n-\"%{march=arm710:-DCPU=ARM710A}\t\t\\\n- %{march=arm7tdmi:-DCPU=ARM7TDMI}\t\\\n- %{march=arm810:-DCPU=ARM810}\t\t\\\n- %{march=strongarm110:-DCPU=ARMSA110}\t\\\n- %{!march=*:\t\t\t\t\\\n-  %{mcpu=arm710:-DCPU=ARM710A}\t\t\\\n-  %{mcpu=arm7tdmi:-DCPU=ARM7TDMI}\t\\\n-  %{mcpu=arm810:-DCPU=ARM810}\t\t\\\n-  %{mcpu=strongarm110:-DCPU=ARMSA110}}\t\\\n-  %{!mcpu*:%{!march=*:-DCPU=ARM710A}}\t\\\n-\"\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-    do {\t\t\t\t\t\\\n-\tbuiltin_define (\"__vxworks\");\t\t\\\n-    } while (0)\n-\n-/* VxWorks does all the library stuff itself.  */\n-#undef  LIB_SPEC\n-#define LIB_SPEC \t\"\"\n-\n-/* VxWorks uses object files, not loadable images.  make linker just\n-   combine objects. */\n-#undef  LINK_SPEC\n-#define LINK_SPEC \t\"-r\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-#undef  STARTFILE_SPEC\n-#define STARTFILE_SPEC \t\"\"\n-\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC \t\"\"\n-\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION\tfputs (\" (ARM/VxWorks)\", stderr);\n-\n-#undef  ASM_FILE_START\n-#define ASM_FILE_START(STREAM) \t\t\t\t\t\t\\\n-  do \t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (STREAM, \"%s Generated by gcc %s for ARM/VxWorks\\n\",\t\\\n-\t       ASM_COMMENT_START, version_string);\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)"}, {"sha": "fcfec615c91d58e21cf089912fe58cea2dd94c6a", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "4dcef89b91e803a71587cf34d371bd7e068b4f61", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 5, "deletions": 55, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1307,8 +1307,6 @@ extern int avr_reg_order[];\n    addressing.  */\n \n #define HAVE_PRE_DECREMENT 1\n-/* #define HAVE_PRE_INCREMENT\n-   #define HAVE_POST_DECREMENT  */\n /* Similar for other kinds of addressing.  */\n \n #define CONSTANT_ADDRESS_P(X) CONSTANT_P (X)\n@@ -2103,32 +2101,13 @@ do {\t\t\t\t\t\t\t\t\t \\\n    setting the `DECL_ONE_ONLY' flag is enough to mark a declaration to\n    be emitted as one-only.  */\n \n-#define ASM_OUTPUT_INTERNAL_LABEL(STREAM, PREFIX, NUM)\t\\\n-fprintf(STREAM, \".%s%d:\\n\", PREFIX, NUM)\n-/* A C statement to output to the stdio stream STREAM a label whose\n-   name is made from the string PREFIX and the number NUM.\n-\n-   It is absolutely essential that these labels be distinct from the\n-   labels used for user-level functions and variables.  Otherwise,\n-   certain programs will have name conflicts with internal labels.\n-\n-   It is desirable to exclude internal labels from the symbol table\n-   of the object file.  Most assemblers have a naming convention for\n-   labels that should be excluded; on many systems, the letter `L' at\n-   the beginning of a label has this effect.  You should find out what\n-   convention your system uses, and follow it.\n-\n-   The usual definition of this macro is as follows:\n-\n-   fprintf (STREAM, \"L%s%d:\\n\", PREFIX, NUM)  */\n-\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM)\t\\\n sprintf (STRING, \"*.%s%d\", PREFIX, NUM)\n /* A C statement to store into the string STRING a label whose name\n    is made from the string PREFIX and the number NUM.\n \n    This string, when output subsequently by `assemble_name', should\n-   produce the output that `ASM_OUTPUT_INTERNAL_LABEL' would produce\n+   produce the output that `(*targetm.asm_out.internal_label)' would produce\n    with the same PREFIX and NUM.\n \n    If the string begins with `*', then `assemble_name' will output\n@@ -2139,27 +2118,6 @@ sprintf (STRING, \"*.%s%d\", PREFIX, NUM)\n    `ASM_OUTPUT_LABELREF' is also part of your machine description, so\n    you should know what it does on your machine.)  */\n \n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n-/* A C expression to assign to OUTVAR (which is a variable of type\n-   `char *') a newly allocated string made from the string NAME and\n-   the number NUMBER, with some suitable punctuation added.  Use\n-   `alloca' to get space for the string.\n-\n-   The string will be used as an argument to `ASM_OUTPUT_LABELREF' to\n-   produce an assembler label for an internal static variable whose\n-   name is NAME.  Therefore, the string must be such as to result in\n-   valid assembler code.  The argument NUMBER is different each time\n-   this macro is executed; it prevents conflicts between\n-   similarly-named internal static variables in different scopes.\n-\n-   Ideally this string should not be a valid C identifier, to prevent\n-   any conflict with the user's own symbols.  Most assemblers allow\n-   periods or percent signs in assembler symbols; putting at least\n-   one of these between the name and the number will suffice.  */\n-\n /* `ASM_OUTPUT_WEAK_ALIAS (STREAM, NAME, VALUE)'\n    A C statement to output to the stdio stream STREAM assembler code\n    which defines (equates) the weak symbol NAME to have the value\n@@ -2304,26 +2262,26 @@ sprintf (STRING, \"*.%s%d\", PREFIX, NUM)\n    The definition should be a C statement to output to the stdio\n    stream STREAM an assembler pseudo-instruction to generate a\n    reference to a label.  VALUE is the number of an internal label\n-   whose definition is output using `ASM_OUTPUT_INTERNAL_LABEL'.  For\n+   whose definition is output using `(*targetm.asm_out.internal_label)'.  For\n    example,\n \n    fprintf (STREAM, \"\\t.word L%d\\n\", VALUE)  */\n \n #define ASM_OUTPUT_CASE_LABEL(STREAM, PREFIX, NUM, TABLE) \\\n-  progmem_section (), ASM_OUTPUT_INTERNAL_LABEL (STREAM, PREFIX, NUM)\n+  progmem_section (), (*targetm.asm_out.internal_label) (STREAM, PREFIX, NUM)\n \n /* `ASM_OUTPUT_CASE_LABEL (STREAM, PREFIX, NUM, TABLE)'\n    Define this if the label before a jump-table needs to be output\n    specially.  The first three arguments are the same as for\n-   `ASM_OUTPUT_INTERNAL_LABEL'; the fourth argument is the jump-table\n+   `(*targetm.asm_out.internal_label)'; the fourth argument is the jump-table\n    which follows (a `jump_insn' containing an `addr_vec' or\n    `addr_diff_vec').\n \n    This feature is used on system V to output a `swbeg' statement for\n    the table.\n \n    If this macro is not defined, these labels are output with\n-   `ASM_OUTPUT_INTERNAL_LABEL'.  */\n+   `(*targetm.asm_out.internal_label)'.  */\n \n /* `ASM_OUTPUT_CASE_END (STREAM, NUM, TABLE)'\n    Define this if something special must be output at the end of a\n@@ -2530,14 +2488,6 @@ extern int avr_case_values_threshold;\n    pass to `cc1plus'.  */\n \n #define ASM_SPEC \"%{mmcu=*:-mmcu=%*}\"\n-/* A C string constant that tells the GNU CC driver program options to\n-   pass to the assembler.  It can also specify how to translate\n-   options you give to GNU CC into options for GNU CC to pass to the\n-   assembler.  See the file `sun3.h' for an example of this.\n-\n-   Do not define this macro if it does not need to do anything.  */\n-\n-#define ASM_FINAL_SPEC \"\"\n /* A C string constant that tells the GNU CC driver program how to\n    run any programs which cleanup after the normal assembler.\n    Normally, this is not needed.  See the file `mips.h' for an"}, {"sha": "5b958a2ba973e28108022fe2d11144782be4e4fd", "filename": "gcc/config/c4x/c4x-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"toplev.h\"\n #include \"cpplib.h\""}, {"sha": "8fe42862d95f60b0741526bd7ba0511fa4b82ad5", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -25,6 +25,8 @@ Boston, MA 02111-1307, USA.  */\n /* Some output-actions in c4x.md need these.  */\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\""}, {"sha": "576aaff3826e6175e80f1704118efe396800f83a", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1651,17 +1651,11 @@ fini_section ()\t\t\t\t\t\t\t\\\n /* The TI assembler wants to have hex numbers this way.  */\n \n #undef HOST_WIDE_INT_PRINT_HEX\n-#ifndef HOST_WIDE_INT_PRINT_HEX\n-# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-#  define HOST_WIDE_INT_PRINT_HEX \"0%xh\"\n-# else\n-#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n-#   define HOST_WIDE_INT_PRINT_HEX \"0%lxh\"\n-#  else\n-#   define HOST_WIDE_INT_PRINT_HEX \"0%llxh\"\n-#  endif\n-# endif\n-#endif /* ! HOST_WIDE_INT_PRINT_HEX */\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+# define HOST_WIDE_INT_PRINT_HEX \"0%lxh\"\n+#else\n+# define HOST_WIDE_INT_PRINT_HEX \"0%llxh\"\n+#endif\n \n /* Overall Framework of an Assembler File.  */\n /* We need to have a data section we can identify so that we can set\n@@ -1724,12 +1718,6 @@ c4x_file_end (FILE)\n \n #define USER_LABEL_PREFIX \"_\"\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\\\n-\tfprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n@@ -1738,14 +1726,6 @@ c4x_file_end (FILE)\n #define ASM_GENERATE_INTERNAL_LABEL(BUFFER, PREFIX, NUM) \\\n     sprintf (BUFFER, \"*%s%d\", PREFIX, NUM)\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)  \\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),    \\\n-  sprintf ((OUTPUT), \"%s$%d\", (NAME), (LABELNO)))\n-\n /* A C statement to output to the stdio stream STREAM assembler code which\n    defines (equates) the symbol NAME to have the value VALUE.  */\n "}, {"sha": "0ac2c7f178261e71ab6c96377709a1a693a41cbc", "filename": "gcc/config/c4x/t-c4x", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Ft-c4x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fc4x%2Ft-c4x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Ft-c4x?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -7,9 +7,9 @@ LIB1ASMFUNCS = _divsf3 _divsi3 _udivsi3 _umodsi3 _modsi3 _mulsi3 \\\n \n TARGET_LIBGCC2_CFLAGS = -Dexit=unused_exit\n \n-c4x-c.o: $(srcdir)/config/c4x/c4x-c.c $(CONFIG_H) $(SYSTEM_H) cpplib.h \\\n-  $(TREE_H) c-pragma.h toplev.h $(TM_P_H) \n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+c4x-c.o: $(srcdir)/config/c4x/c4x-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(TM_H) $(TREE_H) toplev.h $(CPPLIB_H) c-pragma.h $(TM_P_H) \n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/c4x/c4x-c.c\n \n MULTILIB_OPTIONS = m30 msmall mmemparm\n MULTILIB_DIRNAMES = c3x small mem"}, {"sha": "0aeccc01636871437fe3ee7b5015c69fb29b7022", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "bd044f3a51aa8a6838b203e18aabc16c590a2b67", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -122,7 +122,7 @@ extern const char *cris_elinux_stacksize_str;\n    someone will fight for us.  This year in the mountains.\n    Note that for -melinux and -mlinux, command-line -isystem options are\n    emitted both before and after the synthesized one.  We can't remove all\n-   of them: a %{<isystem} will only remove the first one and %{<isystem*}\n+   of them: a %<isystem will only remove the first one and %<isystem*\n    will not do TRT.  Those extra occurrences are harmless anyway.  */\n #define CPP_SPEC \\\n  \"-$ -D__CRIS_ABI_version=2\\\n@@ -1580,28 +1580,11 @@ call_ ## FUNC (void)\t\t\t\t\t\t\\\n    handle (to #undef or ignore it) in a.out.  */\n #define HAVE_GAS_HIDDEN 1\n \n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      asm_fprintf (FILE, \"%L%s%d:\\n\", PREFIX, NUM);\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* Remove any previous definition (elfos.h).  */\n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n   sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long) NUM)\n \n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10);\t\\\n-      sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO));\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-\n /* Node: Initialization */\n /* (no definitions) */\n "}, {"sha": "4f282a80bcf1c9f3eb7fa4d44bfc632b442d5148", "filename": "gcc/config/d30v/d30v.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fd30v%2Fd30v.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fd30v%2Fd30v.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\""}, {"sha": "6fdbbd434d5dc3f4a03e46ba9be7a26cec2e4d50", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 6, "deletions": 50, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -2207,9 +2207,7 @@ typedef struct machine_function GTY(())\n #define HAVE_POST_INCREMENT 1\n \n /* Similar for other kinds of addressing.  */\n-/* #define HAVE_PRE_INCREMENT 0 */\n #define HAVE_POST_DECREMENT 1\n-/* #define HAVE_PRE_DECREMENT 0 */\n \n /* A C expression that is 1 if the RTX X is a constant which is a valid\n    address.  On most machines, this can be defined as `CONSTANT_P (X)', but a\n@@ -2819,7 +2817,7 @@ extern const char *d30v_branch_cost_string;\n    outputting the label definition at the proper place.  Here is how to do\n    this:\n \n-        ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LC\", LABELNO);\n+        (*targetm.asm_out.internal_label) (FILE, \"LC\", LABELNO);\n \n    When you output a pool entry specially, you should end with a `goto' to the\n    label JUMPTO.  This will prevent the same pool entry from being output a\n@@ -3075,31 +3073,11 @@ extern const char *d30v_branch_cost_string;\n    is in most Berkeley Unix systems.  This macro is used in `assemble_name'.  */\n /* #define ASM_OUTPUT_LABELREF(STREAM, NAME) */\n \n-/* A C statement to output to the stdio stream STREAM a label whose name is\n-   made from the string PREFIX and the number NUM.\n-\n-   It is absolutely essential that these labels be distinct from the labels\n-   used for user-level functions and variables.  Otherwise, certain programs\n-   will have name conflicts with internal labels.\n-\n-   It is desirable to exclude internal labels from the symbol table of the\n-   object file.  Most assemblers have a naming convention for labels that\n-   should be excluded; on many systems, the letter `L' at the beginning of a\n-   label has this effect.  You should find out what convention your system\n-   uses, and follow it.\n-\n-   The usual definition of this macro is as follows:\n-\n-        fprintf (STREAM, \"L%s%d:\\n\", PREFIX, NUM)\n-\n-   Defined in svr4.h.  */\n-/* #define ASM_OUTPUT_INTERNAL_LABEL(STREAM, PREFIX, NUM) */\n-\n /* A C statement to store into the string STRING a label whose name is made\n    from the string PREFIX and the number NUM.\n \n    This string, when output subsequently by `assemble_name', should produce the\n-   output that `ASM_OUTPUT_INTERNAL_LABEL' would produce with the same PREFIX\n+   output that `(*targetm.asm_out.internal_label)' would produce with the same PREFIX\n    and NUM.\n \n    If the string begins with `*', then `assemble_name' will output the rest of\n@@ -3118,28 +3096,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n */\n \n-/* A C expression to assign to OUTVAR (which is a variable of type `char *') a\n-   newly allocated string made from the string NAME and the number NUMBER, with\n-   some suitable punctuation added.  Use `alloca' to get space for the string.\n-\n-   The string will be used as an argument to `ASM_OUTPUT_LABELREF' to produce\n-   an assembler label for an internal static variable whose name is NAME.\n-   Therefore, the string must be such as to result in valid assembler code.\n-   The argument NUMBER is different each time this macro is executed; it\n-   prevents conflicts between similarly-named internal static variables in\n-   different scopes.\n-\n-   Ideally this string should not be a valid C identifier, to prevent any\n-   conflict with the user's own symbols.  Most assemblers allow periods or\n-   percent signs in assembler symbols; putting at least one of these between\n-   the name and the number will suffice.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR, NAME, NUMBER)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  (OUTVAR) = (char *) alloca (strlen ((NAME)) + 12);\t\t\t\\\n-  sprintf ((OUTVAR), \"%s.%ld\", (NAME), (long)(NUMBER));\t\t\t\\\n-} while (0)\n-\n /* A C statement to output to the stdio stream STREAM assembler code which\n    defines (equates) the symbol NAME to have the value VALUE.\n \n@@ -3495,7 +3451,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a difference between two labels.\n    VALUE and REL are the numbers of two internal labels.  The definitions of\n-   these labels are output using `ASM_OUTPUT_INTERNAL_LABEL', and they must be\n+   these labels are output using `(*targetm.asm_out.internal_label)', and they must be\n    printed in the same way here.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d-L%d\\n\", VALUE, REL)  */\n@@ -3509,23 +3465,23 @@ fprintf (STREAM, \"\\t.word .L%d-.L%d\\n\", VALUE, REL)\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a reference to a label.  VALUE\n    is the number of an internal label whose definition is output using\n-   `ASM_OUTPUT_INTERNAL_LABEL'.  For example,\n+   `(*targetm.asm_out.internal_label)'.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d\\n\", VALUE)  */\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE) \\\n fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n \n /* Define this if the label before a jump-table needs to be output specially.\n-   The first three arguments are the same as for `ASM_OUTPUT_INTERNAL_LABEL';\n+   The first three arguments are the same as for `(*targetm.asm_out.internal_label)';\n    the fourth argument is the jump-table which follows (a `jump_insn'\n    containing an `addr_vec' or `addr_diff_vec').\n \n    This feature is used on system V to output a `swbeg' statement for the\n    table.\n \n    If this macro is not defined, these labels are output with\n-   `ASM_OUTPUT_INTERNAL_LABEL'.\n+   `(*targetm.asm_out.internal_label)'.\n \n    Defined in svr4.h.  */\n /* #define ASM_OUTPUT_CASE_LABEL(STREAM, PREFIX, NUM, TABLE) */"}, {"sha": "805a82486a283fb914e6404f425df461bd0f4c19", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n #include \"c-pragma.h\""}, {"sha": "a7dfe59bec6cbd7f2b0f1677edf5664d9d67e889", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "a3dcc166818efc17c16952c5675e31fc39d0b592", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -694,13 +694,6 @@ objc_section_init ()\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf (LABEL, \"*%s%ld\", PREFIX, (long)(NUM))\n \n-/* This is how to output an internal numbered label where PREFIX is\n-   the class of label and NUM is the number within the class.  */\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n-\n /* Since we have a separate readonly data section, define this so that\n    jump tables end up in text rather than data.  */\n "}, {"sha": "1d54ecf36047332aee203a5a3df206c92af5d404", "filename": "gcc/config/dbxcoff.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdbxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdbxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxcoff.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -70,7 +70,7 @@ Boston, MA 02111-1307, USA.  */\n     assemble_name (FILE,\t\t\t\t\t\\\n \t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n     putc ('\\n', FILE);\t\t\t\t\t\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LM\", sym_lineno);\t\t\\\n+    (*targetm.asm_out.internal_label) (FILE, \"LM\", sym_lineno);\t\t\\\n     sym_lineno++;\t\t\t\t\t\t\\\n   } }\n "}, {"sha": "dbc8f347eb384baa9cda64705a0634b05139dd25", "filename": "gcc/config/dbxelf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdbxelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdbxelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxelf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -69,7 +69,7 @@ do\t\t\t\t\t\t\t\t\t\\\n     assemble_name (FILE,\t\t\t\t\t\t\\\n \t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\\\n     putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LM\", sym_lineno);\t\t\t\\\n+    (*targetm.asm_out.internal_label) (FILE, \"LM\", sym_lineno);\t\t\t\\\n     sym_lineno += 1;\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)"}, {"sha": "c2a2584682d7e7809091bfffc3737e1a31ceff25", "filename": "gcc/config/dsp16xx/dsp16xx-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -81,7 +81,7 @@ extern void asm_output_float PARAMS ((FILE *, double));\n extern void dsp16xx_file_start PARAMS ((void));\n extern void coff_dsp16xx_file_start PARAMS ((FILE *));\n extern void luxworks_dsp16xx_file_start PARAMS ((FILE *));\n-extern struct rtx_def *(*dsp16xx_compare_gen) PARAMS (());\n+extern bool dsp16xx_compare_gen;\n extern int hard_regno_mode_ok PARAMS ((int, enum machine_mode));\n extern enum reg_class dsp16xx_reg_class_from_letter PARAMS ((int));\n extern int regno_reg_class PARAMS ((int));"}, {"sha": "3b9f752914a61df067dfc9e906fe1f29ddc4cfb0", "filename": "gcc/config/dsp16xx/dsp16xx.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA.  */\n /* Some output-actions in dsp1600.md need these.  */\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -58,7 +60,7 @@ const char *save_chip_name;\n \n rtx dsp16xx_compare_op0;\n rtx dsp16xx_compare_op1;\n-rtx (*dsp16xx_compare_gen) PARAMS (());\n+bool dsp16xx_compare_gen;\n \n static const char *fp;\n static const char *sp;"}, {"sha": "fbbf50efec3754d4e70fe4ce10afaf3e8ec6b292", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1288,9 +1288,6 @@ extern struct dsp16xx_frame_info current_frame_info;\n #define HAVE_POST_INCREMENT 1\n #define HAVE_POST_DECREMENT 1\n \n-/* #define HAVE_PRE_DECREMENT 0 */\n-/* #define HAVE_PRE_INCREMENT 0 */\n-\n /* Recognize any constant value that is a valid address.  */\n #define CONSTANT_ADDRESS_P(X)  CONSTANT_P (X)\n \n@@ -1642,22 +1639,7 @@ extern struct dsp16xx_frame_info current_frame_info;\n   }\t\t\t\t\t\t\t\t\t      \\\n   while (0)\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable or function\n-   named NAME. LABELNO is an integer which is different for\n-   each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    int len = strlen (NAME);\t\t\t\t\t\t\\\n-    char *temp = (char *) alloca (len + 3);\t\t\t\t\\\n-    temp[0] = 'L';\t\t\t\t\t\t\t\\\n-    strcpy (&temp[1], (NAME));\t\t\t\t\t\t\\\n-    temp[len + 1] = '_';\t\t\t\t\t\t\\\n-    temp[len + 2] = 0;\t\t\t\t\t\t\t\\\n-    (OUTPUT) = (char *) alloca (strlen (NAME) + 11);\t\t\t\\\n-    ASM_GENERATE_INTERNAL_LABEL (OUTPUT, temp, LABELNO);\t\t\\\n-  } while (0)\n+#define ASM_PN_FORMAT \"*L%s_%lu\"\n \f\n /* OUTPUT OF UNINITIALIZED VARIABLES */\n \n@@ -1702,11 +1684,6 @@ extern struct dsp16xx_frame_info current_frame_info;\n \n #define USER_LABEL_PREFIX \"_\"\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class."}, {"sha": "fdb71de10a9d86ebfed61ffe916f434378b62648", "filename": "gcc/config/dsp16xx/dsp16xx.md", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -70,7 +70,7 @@\n   \"\"\n   \"\n {\n-  dsp16xx_compare_gen = gen_tst_reg;\n+  dsp16xx_compare_gen = false;\n   dsp16xx_compare_op0 = operands[0];\n   dsp16xx_compare_op1 = const0_rtx;\n   DONE;\n@@ -89,7 +89,7 @@\n   \"\"\n   \"\n {\n-  dsp16xx_compare_gen = gen_tst_reg;\n+  dsp16xx_compare_gen = false;\n   dsp16xx_compare_op0 = operands[0];\n   dsp16xx_compare_op1 = const0_rtx;\n   DONE;\n@@ -181,7 +181,7 @@\n   if (GET_CODE (operands[1]) == CONST_INT)\n     operands[1] = force_reg (HImode, operands[1]);\n \n-  dsp16xx_compare_gen = gen_compare_reg;\n+  dsp16xx_compare_gen = true;\n   dsp16xx_compare_op0 = operands[0];\n   dsp16xx_compare_op1 = operands[1];\n   DONE;\n@@ -266,7 +266,7 @@\n  {\n   if (operands[0])\t/* Avoid unused code warning */\n     {\n-      dsp16xx_compare_gen = gen_compare_reg;\n+      dsp16xx_compare_gen = true;\n       dsp16xx_compare_op0 = operands[0];\n       dsp16xx_compare_op1 = operands[1];\n       DONE;\n@@ -433,7 +433,7 @@\n   if (!dsp16xx_cmphf3_libcall)\n     dsp16xx_cmphf3_libcall = gen_rtx_SYMBOL_REF (Pmode, CMPHF3_LIBCALL);\n \n-   dsp16xx_compare_gen = gen_compare_reg;\n+   dsp16xx_compare_gen = true;\n    dsp16xx_compare_op0 = operands[0];\n    dsp16xx_compare_op1 = operands[1];\n    emit_library_call (dsp16xx_cmphf3_libcall, 1, HImode, 2,\n@@ -2397,10 +2397,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(EQ, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (EQ, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n (define_expand \"sne\"\n@@ -2409,10 +2409,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(NE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (NE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2422,10 +2422,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2435,10 +2435,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n (define_expand \"sge\"\n@@ -2447,10 +2447,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2460,10 +2460,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2473,10 +2473,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2486,10 +2486,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2499,10 +2499,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2512,10 +2512,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2539,10 +2539,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(EQ, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (EQ, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n (define_expand \"bne\"\n@@ -2554,10 +2554,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(NE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (NE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2570,10 +2570,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2586,10 +2586,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2602,10 +2602,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LT, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2618,10 +2618,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LE, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2634,10 +2634,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2650,10 +2650,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(GEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (GEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2666,10 +2666,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LTU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n \n@@ -2682,10 +2682,10 @@\n   \"\"\n   \"\n { \n-   if (dsp16xx_compare_gen == gen_compare_reg)\n-     operands[1] = (*dsp16xx_compare_gen)(LEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n+   if (dsp16xx_compare_gen)\n+     operands[1] = gen_compare_reg (LEU, dsp16xx_compare_op0, dsp16xx_compare_op1);\n    else\n-     operands[1] = (*dsp16xx_compare_gen)(dsp16xx_compare_op0);\n+     operands[1] = gen_tst_reg (dsp16xx_compare_op0);\n }\")\n \n "}, {"sha": "3254a0ce621b0e7f0016fc4ff6cdbdfb1f5bec42", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -110,20 +110,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_SKIP(FILE, SIZE) \\\n   fprintf (FILE, \"%s%u\\n\", SKIP_ASM_OP, (SIZE))\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-\n-   For most svr4 systems, the convention is that any symbol which begins\n-   with a period is not put into the linker symbol table by the assembler.  */\n-\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \".%s%u:\\n\", PREFIX, (unsigned) (NUM));\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n@@ -161,7 +147,7 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       ASM_OUTPUT_BEFORE_CASE_LABEL (FILE, PREFIX, NUM, JUMPTABLE)\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\t\\\n+\t(*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "495a5978ac010d5bfd4b56abf8b1dfb3ccfbeee5", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -44,6 +44,8 @@ Boston, MA 02111-1307, USA.  */\n    to one copy, then compile both copies and add them to libgcc.a.  */\n \n #include \"tconfig.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"fp-bit.h\"\n \n /* The following macros can be defined to change the behavior of this file:"}, {"sha": "0c143b3422491a626c49282db1bf66e0aac355a6", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "57b249606794ac7cd6758e506cceb544446a4183", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1166,29 +1166,6 @@ do\t\t\t\t\t\t\t\t\t\t\\\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.globl \"\n \n-/* A C expression to assign to OUTVAR (which is a variable of type `char *') a\n-   newly allocated string made from the string NAME and the number NUMBER, with\n-   some suitable punctuation added.  Use `alloca' to get space for the string.\n-\n-   The string will be used as an argument to `ASM_OUTPUT_LABELREF' to produce\n-   an assembler label for an internal static variable whose name is NAME.\n-   Therefore, the string must be such as to result in valid assembler code.\n-   The argument NUMBER is different each time this macro is executed; it\n-   prevents conflicts between similarly-named internal static variables in\n-   different scopes.\n-\n-   Ideally this string should not be a valid C identifier, to prevent any\n-   conflict with the user's own symbols.  Most assemblers allow periods or\n-   percent signs in assembler symbols; putting at least one of these between\n-   the name and the number will suffice.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR, NAME, NUMBER)\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      (OUTVAR) = (char *) alloca (strlen ((NAME)) + 12);\t\\\n-      sprintf ((OUTVAR), \"%s.%ld\", (NAME), (long)(NUMBER));\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /*}}}*/ \f\n /*{{{  Output of Assembler Instructions.  */ \n \n@@ -1243,7 +1220,7 @@ do\t\t\t\t\t\t\t\t\t\t\\\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a difference between two labels.\n    VALUE and REL are the numbers of two internal labels.  The definitions of\n-   these labels are output using `ASM_OUTPUT_INTERNAL_LABEL', and they must be\n+   these labels are output using `(*targetm.asm_out.internal_label)', and they must be\n    printed in the same way here.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d-L%d\\n\", VALUE, REL)  */\n@@ -1256,7 +1233,7 @@ fprintf (STREAM, \"\\t.word .L%d-.L%d\\n\", VALUE, REL)\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a reference to a label.  VALUE\n    is the number of an internal label whose definition is output using\n-   `ASM_OUTPUT_INTERNAL_LABEL'.  For example,\n+   `(*targetm.asm_out.internal_label)'.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d\\n\", VALUE)  */\n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE) \\"}, {"sha": "aa29d248c47b5cf9e6dcfbcb98eef0a3108e063d", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\""}, {"sha": "e7a481a728fed1cae147271f28ff6139d625ee98", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 6, "deletions": 30, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -2888,7 +2888,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    from the string PREFIX and the number NUM.\n \n    This string, when output subsequently by `assemble_name', should produce the\n-   output that `ASM_OUTPUT_INTERNAL_LABEL' would produce with the same PREFIX\n+   output that `(*targetm.asm_out.internal_label)' would produce with the same PREFIX\n    and NUM.\n \n    If the string begins with `*', then `assemble_name' will output the rest of\n@@ -2905,27 +2905,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   sprintf (LABEL, \"*.%s%ld\", PREFIX, (long)NUM);\t\t\t\\\n } while (0)\n \n-/* A C expression to assign to OUTVAR (which is a variable of type `char *') a\n-   newly allocated string made from the string NAME and the number NUMBER, with\n-   some suitable punctuation added.  Use `alloca' to get space for the string.\n-\n-   The string will be used as an argument to `ASM_OUTPUT_LABELREF' to produce\n-   an assembler label for an internal static variable whose name is NAME.\n-   Therefore, the string must be such as to result in valid assembler code.\n-   The argument NUMBER is different each time this macro is executed; it\n-   prevents conflicts between similarly-named internal static variables in\n-   different scopes.\n-\n-   Ideally this string should not be a valid C identifier, to prevent any\n-   conflict with the user's own symbols.  Most assemblers allow periods or\n-   percent signs in assembler symbols; putting at least one of these between\n-   the name and the number will suffice.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR, NAME, NUMBER)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  (OUTVAR) = (char *) alloca (strlen ((NAME)) + 12);\t\t\t\\\n-  sprintf ((OUTVAR), \"%s.%ld\", (NAME), (long)(NUMBER));\t\t\t\\\n-} while (0)\n-\n \f\n /* Macros Controlling Initialization Routines.  */\n \n@@ -3115,7 +3094,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a difference between two labels.\n    VALUE and REL are the numbers of two internal labels.  The definitions of\n-   these labels are output using `ASM_OUTPUT_INTERNAL_LABEL', and they must be\n+   these labels are output using `(*targetm.asm_out.internal_label)', and they must be\n    printed in the same way here.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d-L%d\\n\", VALUE, REL)  */\n@@ -3128,22 +3107,22 @@ fprintf (STREAM, \"\\t.word .L%d-.L%d\\n\", VALUE, REL)\n    The definition should be a C statement to output to the stdio stream STREAM\n    an assembler pseudo-instruction to generate a reference to a label.  VALUE\n    is the number of an internal label whose definition is output using\n-   `ASM_OUTPUT_INTERNAL_LABEL'.  For example,\n+   `(*targetm.asm_out.internal_label)'.  For example,\n \n         fprintf (STREAM, \"\\t.word L%d\\n\", VALUE)  */\n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE) \\\n fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n \n /* Define this if the label before a jump-table needs to be output specially.\n-   The first three arguments are the same as for `ASM_OUTPUT_INTERNAL_LABEL';\n+   The first three arguments are the same as for `(*targetm.asm_out.internal_label)';\n    the fourth argument is the jump-table which follows (a `jump_insn'\n    containing an `addr_vec' or `addr_diff_vec').\n \n    This feature is used on system V to output a `swbeg' statement for the\n    table.\n \n    If this macro is not defined, these labels are output with\n-   `ASM_OUTPUT_INTERNAL_LABEL'.\n+   `(*targetm.asm_out.internal_label)'.\n \n    Defined in svr4.h.  */\n /* When generating embedded PIC or mips16 code we want to put the jump\n@@ -3158,7 +3137,7 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n do {                                                                    \\\n   if (flag_pic)                                                         \\\n     function_section (current_function_decl);                           \\\n-  ASM_OUTPUT_INTERNAL_LABEL (STREAM, PREFIX, NUM);                      \\\n+  (*targetm.asm_out.internal_label) (STREAM, PREFIX, NUM);                      \\\n } while (0)\n \n /* Define this to determine whether case statement labels are relative to\n@@ -3492,9 +3471,6 @@ frv_ifcvt_modify_multiple_tests (CE_INFO, BB, &TRUE_EXPR, &FALSE_EXPR)\n    scheduling.  */\n #define FIRST_CYCLE_MULTIPASS_SCHEDULING_LOOKAHEAD frv_sched_lookahead\n \n-/* Return true if a function is ok to be called as a sibcall.  */\n-#define FUNCTION_OK_FOR_SIBCALL(DECL) 0\n-\n enum frv_builtins\n {\n   FRV_BUILTIN_MAND,"}, {"sha": "078c4a976518c63e59d131f9775e8775fe4b7830", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\""}, {"sha": "49c47ef7a234011bebe4450cf5635b9744ac0bb1", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1159,20 +1159,13 @@ struct cum_arg\n \n #define USER_LABEL_PREFIX \"_\"\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-\n-   N.B.: The h8300.md branch_true and branch_false patterns also know\n-   how to generate internal labels.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n-   This is suitable for output with `assemble_name'.  */\n+   This is suitable for output with `assemble_name'.  \n \n+   N.B.: The h8300.md branch_true and branch_false patterns also know\n+   how to generate internal labels.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n   sprintf (LABEL, \"*.%s%d\", PREFIX, NUM)\n \n@@ -1238,13 +1231,7 @@ struct cum_arg\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n   fprintf ((FILE), \",%d\\n\", (SIZE)))\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s___%d\", (NAME), (LABELNO)))\n+#define ASM_PN_FORMAT \"%s___%lu\"\n \n /* Print an instruction operand X on file FILE.\n    Look in h8300.c for details.  */"}, {"sha": "cf4e6a95cb1f0602ba890bce8cd157456b06e222", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -353,7 +353,7 @@\n        || register_operand (operands[1], SImode))\"\n   \"*\n {\n-  int rn = -1;\n+  unsigned int rn = -1;\n   switch (which_alternative)\n     {\n     case 0:\n@@ -420,7 +420,7 @@\n   \"*\n {\n   /* Copy of the movsi stuff.  */\n-  int rn = -1;\n+  unsigned int rn = -1;\n   switch (which_alternative)\n     {\n     case 0:"}, {"sha": "ab67c75e2c6d11c72c7e3535d832b0e1a8acee8d", "filename": "gcc/config/i370/i370-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"toplev.h\"\n #include \"cpplib.h\""}, {"sha": "3db961a61701257ecf460ecffe20a6e5d9e99393", "filename": "gcc/config/i370/i370.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\"\n@@ -109,6 +111,7 @@ static void i370_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static int mvs_hash_alias PARAMS ((const char *));\n #endif\n static void i370_encode_section_info PARAMS ((tree, int));\n+static void i370_internal_label PARAMS ((FILE *, const char *, unsigned long));\n \n /* ===================================================== */\n /* defines and functions specific to the HLASM assembler */\n@@ -312,6 +315,8 @@ static const unsigned char ebcasc[256] =\n #define TARGET_ASM_FUNCTION_EPILOGUE i370_output_function_epilogue\n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO i370_encode_section_info\n+#undef TARGET_ASM_INTERNAL_LABEL\n+#define  TARGET_ASM_INTERNAL_LABEL i370_internal_label\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -1597,3 +1602,14 @@ i370_encode_section_info (decl, first)\n     SYMBOL_REF_FLAG (XEXP (DECL_RTL (decl), 0)) = 1;\n }\n \n+static void\n+i370_internal_label (stream, prefix, labelno)\n+     FILE *stream;\n+     const char *prefix;\n+     unsigned long labelno;\n+{\n+  if (!strcmp (prefix, \"L\"))\n+    mvs_add_label(labelno);\n+\n+  default_internal_label (stream, prefix, labelno);\n+}"}, {"sha": "802103315d2817b8f4777c9f3ce8a409f87fe00d", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 2, "deletions": 45, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -656,12 +656,6 @@ enum reg_class\n \n /* Addressing modes, and classification of registers for them.  */\n \n-/* #define HAVE_POST_INCREMENT */\n-/* #define HAVE_POST_DECREMENT */\n-\n-/* #define HAVE_PRE_DECREMENT */\n-/* #define HAVE_PRE_INCREMENT */\n-\n /* These assume that REGNO is a hard or pseudo reg number.  They give\n    nonzero only if REGNO is a hard reg of the suitable class or a pseudo\n    reg currently allocated to a suitable hard reg.\n@@ -1098,18 +1092,6 @@ enum reg_class\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n   sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n \n-/* Generate internal label.  Since we can branch here from off page, we\n-   must reload the base register.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM) \t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (!strcmp (PREFIX,\"L\"))\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      mvs_add_label(NUM);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"%s%d\\tEQU\\t*\\n\", PREFIX, NUM);\t\t\t\\\n-}\n-\n /* Generate case label.  For HLASM we can change to the data CSECT\n    and put the vectors out of the code body. The assembler just\n    concatenates CSECTs with the same name.  */\n@@ -1258,15 +1240,7 @@ enum reg_class\n   ASM_OUTPUT_SKIP (FILE,SIZE);\t\t\t\t\t\t\\\n }\n \n-/* Store in OUTPUT a string (made with alloca) containing an\n-   assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)  \t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10);\t\t\t\\\n-  sprintf ((OUTPUT), \"%s%d\", (NAME), (LABELNO));\t\t\t\\\n-}\n+#define ASM_PN_FORMAT \"%s%lu\"\n \n /* Print operand XV (an rtx) in assembler syntax to file FILE.\n    CODE is a letter or dot (`z' in `%z0') or 0 if no letter was specified.\n@@ -1837,19 +1811,6 @@ abort(); \\\n \n /* #define ASM_OUTPUT_LABELREF(FILE, NAME) */\t/* use gas -- defaults.h */\n \n-/* Generate internal label.  Since we can branch here from off page, we\n-   must reload the base register.  Note that internal labels are generated\n-   for loops, goto's and case labels.  */\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM) \t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (!strcmp (PREFIX,\"L\"))\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      mvs_add_label(NUM);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM); \t\t\t\t\\\n-}\n-\n /* let config/svr4.h define this ...\n  *  #define ASM_OUTPUT_CASE_LABEL(FILE, PREFIX, NUM, TABLE)\n  *    fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n@@ -1886,11 +1847,7 @@ abort(); \\\n #undef SHIFT_DOUBLE_OMITS_COUNT\n #define SHIFT_DOUBLE_OMITS_COUNT 0\n \n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)  \\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),    \\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n- \n- /* Implicit library calls should use memcpy, not bcopy, etc.  */\n+/* Implicit library calls should use memcpy, not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n  \n /* Output before read-only data.  */"}, {"sha": "96138a1c372de7f5dcf7abc07258dce0cfe80fbc", "filename": "gcc/config/i370/t-i370", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Ft-i370", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi370%2Ft-i370", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Ft-i370?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,3 +1,3 @@\n-i370-c.o: $(srcdir)/config/i370/i370-c.c $(CONFIG_H) $(SYSTEM_H) cpplib.h \\\n-  $(TREE_H) c-pragma.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+i370-c.o: $(srcdir)/config/i370/i370-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\n+  $(TM_H) $(TREE_H) toplev.h $(CPPLIB_H) c-pragma.h $(TM_P_H)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i370/i370-c.c"}, {"sha": "719046fcd619c29cc1c247dbfd96f703ff7c78bb", "filename": "gcc/config/i386/athlon.md", "status": "modified", "additions": 631, "deletions": 172, "changes": 803, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fathlon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fathlon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fathlon.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,34 +1,5 @@\n ;; AMD Athlon Scheduling\n-;; Copyright (C) 2002 Free Software Foundation, Inc.\n ;;\n-;; This file is part of GNU CC.\n-;;\n-;; GNU CC is free software; you can redistribute it and/or modify\n-;; it under the terms of the GNU General Public License as published by\n-;; the Free Software Foundation; either version 2, or (at your option)\n-;; any later version.\n-;;\n-;; GNU CC is distributed in the hope that it will be useful,\n-;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n-;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-;; GNU General Public License for more details.\n-;;\n-;; You should have received a copy of the GNU General Public License\n-;; along with GNU CC; see the file COPYING.  If not, write to\n-;; the Free Software Foundation, 59 Temple Place - Suite 330,\n-;; Boston, MA 02111-1307, USA.  */\n-(define_attr \"athlon_decode\" \"direct,vector\"\n-  (cond [(eq_attr \"type\" \"call,imul,idiv,other,multi,fcmov,fpspc,str,pop,cld,fcmov\")\n-\t   (const_string \"vector\")\n-         (and (eq_attr \"type\" \"push\")\n-              (match_operand 1 \"memory_operand\" \"\"))\n-\t   (const_string \"vector\")\n-         (and (eq_attr \"type\" \"fmov\")\n-\t      (and (eq_attr \"memory\" \"load,store\")\n-\t\t   (eq_attr \"mode\" \"XF\")))\n-\t   (const_string \"vector\")]\n-\t(const_string \"direct\")))\n-\n ;; The Athlon does contain three pipelined FP units, three integer units and\n ;; three address generation units. \n ;;\n@@ -46,161 +17,649 @@\n ;; The load/store queue unit is not attached to the schedulers but\n ;; communicates with all the execution units separately instead.\n \n-(define_function_unit \"athlon_vectordec\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_decode\" \"vector\"))\n-  1 1)\n-\n-(define_function_unit \"athlon_directdec\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_decode\" \"direct\"))\n-  1 1)\n-\n-(define_function_unit \"athlon_vectordec\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_decode\" \"direct\"))\n-  1 1 [(eq_attr \"athlon_decode\" \"vector\")])\n-\n-(define_function_unit \"athlon_ieu\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"alu1,negnot,alu,icmp,test,imov,imovx,lea,incdec,ishift,ishift1,rotate,rotate1,ibr,call,callv,icmov,cld,pop,setcc,push,pop\"))\n-  1 1)\n-\n-(define_function_unit \"athlon_ieu\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"str\"))\n-  15 15)\n-\n-(define_function_unit \"athlon_ieu\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"imul\"))\n-  5 0)\n-\n-(define_function_unit \"athlon_ieu\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"idiv\"))\n-  42 0)\n-\n-(define_function_unit \"athlon_muldiv\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"imul\"))\n-  5 0)\n-\n-(define_function_unit \"athlon_muldiv\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"idiv\"))\n-  42 42)\n-\n-(define_attr \"athlon_fpunits\" \"none,store,mul,add,muladd,any\"\n-  (cond [(eq_attr \"type\" \"fop,fcmp,fistp\")\n-\t   (const_string \"add\")\n-         (eq_attr \"type\" \"fmul,fdiv,fpspc,fsgn,fcmov\")\n-\t   (const_string \"mul\")\n-\t (and (eq_attr \"type\" \"fmov\") (eq_attr \"memory\" \"store,both\"))\n-\t   (const_string \"store\")\n-\t (and (eq_attr \"type\" \"fmov\") (eq_attr \"memory\" \"load\"))\n-\t   (const_string \"any\")\n+(define_attr \"athlon_decode\" \"direct,vector\"\n+  (cond [(eq_attr \"type\" \"call,imul,idiv,other,multi,fcmov,fpspc,str,pop,cld,leave\")\n+\t   (const_string \"vector\")\n+         (and (eq_attr \"type\" \"push\")\n+              (match_operand 1 \"memory_operand\" \"\"))\n+\t   (const_string \"vector\")\n          (and (eq_attr \"type\" \"fmov\")\n-              (ior (match_operand:SI 1 \"register_operand\" \"\")\n-                   (match_operand 1 \"immediate_operand\" \"\")))\n-\t   (const_string \"store\")\n-         (eq_attr \"type\" \"fmov\")\n-\t   (const_string \"muladd\")]\n-\t(const_string \"none\")))\n-\n-;; We use latencies 1 for definitions.  This is OK to model colisions\n-;; in execution units.  The real latencies are modeled in the \"fp\" pipeline.\n-\n-;; fsin, fcos: 96-192\n-;; fsincos: 107-211\n-;; fsqrt: 19 for SFmode, 27 for DFmode, 35 for XFmode.\n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"fpspc\"))\n-  100 1)\n-\n-;; 16 cycles for SFmode, 20 for DFmode and 24 for XFmode.\n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"fdiv\"))\n-  24 1)\n-\n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"fop,fmul,fistp\"))\n-  4 1)\n-\n-;; XFmode loads are slow.\n-;; XFmode store is slow too (8 cycles), but we don't need to model it, because\n-;; there are no dependent instructions.\n+\t      (and (eq_attr \"memory\" \"load,store\")\n+\t\t   (eq_attr \"mode\" \"XF\")))\n+\t   (const_string \"vector\")]\n+\t(const_string \"direct\")))\n \n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (and (eq_attr \"type\" \"fmov\")\n-\t    (and (eq_attr \"memory\" \"load\")\n-\t\t (eq_attr \"mode\" \"XF\"))))\n-  10 1)\n+;;\n+;;           decode0 decode1 decode2\n+;;                 \\    |   /\n+;;    instruction control unit (72 entry scheduler)\n+;;                |                        |\n+;;      integer scheduler (18)         stack map\n+;;     /  |    |    |    |   \\        stack rename\n+;;  ieu0 agu0 ieu1 agu1 ieu2 agu2      scheduler\n+;;    |  agu0  |   agu1      agu2    register file\n+;;    |      \\ |    |       /         |     |     |\n+;;     \\      /\\    |     /         fadd  fmul  fstore\n+;;       \\  /    \\  |   /           fadd  fmul  fstore\n+;;       imul  load/store (2x)      fadd  fmul  fstore\n \n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"fmov,fsgn\"))\n-  2 1)\n+(define_automaton \"athlon,athlon_load,athlon_mult,athlon_fp\")\n+(define_cpu_unit \"athlon-decode0\" \"athlon\")\n+(define_cpu_unit \"athlon-decode1\" \"athlon\")\n+(define_cpu_unit \"athlon-decode2\" \"athlon\")\n+(define_cpu_unit \"athlon-decodev\" \"athlon\")\n+;; Model the fact that double decoded instruction may take 2 cycles\n+;; to decode when decoder2 and decoder0 in next cycle\n+;; is used (this is needed to allow troughput of 1.5 double decoded\n+;; instructions per cycle).\n+;;\n+;; In order to avoid dependnece between reservation of decoder\n+;; and other units, we model decoder as two stage fully pipelined unit\n+;; and only double decoded instruction may occupy unit in the first cycle.\n+;; With this scheme however two double instructions can be issued cycle0.\n+;;\n+;; Avoid this by using presence set requiring decoder0 to be allocated\n+;; too. Vector decoded instructions then can't be issued when\n+;; modeled as consuming decoder0+decoder1+decoder2.\n+;; We solve that by specialized vector decoder unit and exclusion set.\n+(presence_set \"athlon-decode2\" \"athlon-decode0\")\n+(exclusion_set \"athlon-decodev\" \"athlon-decode0,athlon-decode1,athlon-decode2\")\n+(define_reservation \"athlon-vector\" \"nothing,athlon-decodev\")\n+(define_reservation \"athlon-direct0\" \"nothing,athlon-decode0\")\n+(define_reservation \"athlon-direct\" \"nothing,\n+\t\t\t\t     (athlon-decode0 | athlon-decode1\n+\t\t\t\t     | athlon-decode2)\")\n+;; Double instructions behaves like two direct instructions.\n+(define_reservation \"athlon-double\" \"((athlon-decode2, athlon-decode0)\n+\t\t\t\t     | (nothing,(athlon-decode0 + athlon-decode1))\n+\t\t\t\t     | (nothing,(athlon-decode1 + athlon-decode2)))\")\n \n-;; fcmp and ftst instructions\n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (and (eq_attr \"type\" \"fcmp\")\n-\t    (eq_attr \"athlon_decode\" \"direct\")))\n-  3 1)\n+;; Agu and ieu unit results in extremly large automatons and\n+;; in our approximation they are hardly filled in.  Only ieu\n+;; unit can, as issue rate is 3 and agu unit is always used\n+;; first in the insn reservations.  Skip the models.\n \n-;; fcmpi instructions.\n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (and (eq_attr \"type\" \"fcmp\")\n-\t    (eq_attr \"athlon_decode\" \"vector\")))\n-  3 1)\n+;(define_cpu_unit \"athlon-ieu0\" \"athlon_ieu\")\n+;(define_cpu_unit \"athlon-ieu1\" \"athlon_ieu\")\n+;(define_cpu_unit \"athlon-ieu2\" \"athlon_ieu\")\n+;(define_reservation \"athlon-ieu\" \"(athlon-ieu0 | athlon-ieu1 | athlon-ieu2)\")\n+(define_reservation \"athlon-ieu\" \"nothing\")\n+(define_cpu_unit \"athlon-ieu0\" \"athlon\")\n+;(define_cpu_unit \"athlon-agu0\" \"athlon_agu\")\n+;(define_cpu_unit \"athlon-agu1\" \"athlon_agu\")\n+;(define_cpu_unit \"athlon-agu2\" \"athlon_agu\")\n+;(define_reservation \"athlon-agu\" \"(athlon-agu0 | athlon-agu1 | athlon-agu2)\")\n+(define_reservation \"athlon-agu\" \"nothing,nothing\")\n \n-(define_function_unit \"athlon_fp\" 3 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"fcmov\"))\n-  7 1)\n+(define_cpu_unit \"athlon-mult\" \"athlon_mult\")\n \n-(define_function_unit \"athlon_fp_mul\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_fpunits\" \"mul\"))\n-  1 1)\n+(define_cpu_unit \"athlon-load0\" \"athlon_load\")\n+(define_cpu_unit \"athlon-load1\" \"athlon_load\")\n+(define_reservation \"athlon-load\" \"athlon-agu,\n+\t\t\t\t   (athlon-load0 | athlon-load1)\")\n+(define_reservation \"athlon-store\" \"nothing\")\n \n-(define_function_unit \"athlon_fp_add\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_fpunits\" \"add\"))\n-  1 1)\n+;; The three fp units are fully pipelined with latency of 3\n+(define_cpu_unit \"athlon-fadd\" \"athlon_fp\")\n+(define_cpu_unit \"athlon-fmul\" \"athlon_fp\")\n+(define_cpu_unit \"athlon-fstore\" \"athlon_fp\")\n+(define_reservation \"athlon-fany\" \"(athlon-fadd | athlon-fmul | athlon-fstore)\")\n+(define_reservation \"athlon-faddmul\" \"(athlon-fadd | athlon-fmul)\")\n \n-(define_function_unit \"athlon_fp_muladd\" 2 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_fpunits\" \"muladd,mul,add\"))\n-  1 1)\n \n-(define_function_unit \"athlon_fp_store\" 1 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"athlon_fpunits\" \"store\"))\n-  1 1)\n+;; Jump instructions are executed in the branch unit compltetely transparent to us\n+(define_insn_reservation \"athlon_branch\" 0\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"ibr\"))\n+\t\t\t \"athlon-direct\")\n+(define_insn_reservation \"athlon_call\" 0\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"call,callv\"))\n+\t\t\t \"athlon-vector\")\n \n-;; We don't need to model the Address Generation Unit, since we don't model\n-;; the re-order buffer yet and thus we never schedule more than three operations\n-;; at time.  Later we may want to experiment with MD_SCHED macros modeling the\n-;; decoders independently on the functional units.\n+;; Latency of push operation is 3 cycles, but ESP value is available\n+;; earlier\n+(define_insn_reservation \"athlon_push\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"push\"))\n+\t\t\t \"athlon-direct,nothing,athlon-store\")\n+(define_insn_reservation \"athlon_pop\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"pop\"))\n+\t\t\t \"athlon-vector,athlon-ieu,athlon-load\")\n+(define_insn_reservation \"athlon_pop_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"pop\"))\n+\t\t\t \"athlon-double,athlon-ieu,athlon-load\")\n+(define_insn_reservation \"athlon_leave\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"leave\"))\n+\t\t\t \"athlon-vector,athlon-load\")\n+(define_insn_reservation \"athlon_leave_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"leave\"))\n+\t\t\t \"athlon-double,athlon-load\")\n \n-;(define_function_unit \"athlon_agu\" 3 0\n-;  (and (eq_attr \"cpu\" \"athlon\")\n-;       (and (eq_attr \"memory\" \"!none\")\n-;            (eq_attr \"athlon_fpunits\" \"none\")))\n-;  1 1)\n+;; Lea executes in AGU unit with 2 cycles latency.\n+(define_insn_reservation \"athlon_lea\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"lea\"))\n+\t\t\t \"athlon-direct,athlon-agu\")\n \n-;; Model load unit to avoid too long sequences of loads.  We don't need to\n-;; model store queue, since it is hardly going to be bottleneck.\n+;; Mul executes in special multiplier unit attached to IEU0\n+(define_insn_reservation \"athlon_imul\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n+\t\t\t \"athlon-vector,athlon-ieu0,athlon-mult,nothing,nothing,athlon-ieu0\")\n+;; ??? Widening multiply is vector or double.\n+(define_insn_reservation \"athlon_imul_k8_DI\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0\")\n+(define_insn_reservation \"athlon_imul_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n+\t\t\t \"athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0\")\n+(define_insn_reservation \"athlon_imul_mem\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu,athlon-mult,nothing,nothing,athlon-ieu\")\n+(define_insn_reservation \"athlon_imul_mem_k8_DI\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load,both\"))))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu,athlon-mult,nothing,athlon-ieu\")\n+(define_insn_reservation \"athlon_imul_mem_k8\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu\")\n+(define_insn_reservation \"athlon_idiv\" 42\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n+\t\t\t \"athlon-vector,athlon-ieu*42\")\n+(define_insn_reservation \"athlon_idiv_mem\" 45\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu*42\")\n+(define_insn_reservation \"athlon_str\" 15\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"str\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both,store\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu*10\")\n \n-(define_function_unit \"athlon_load\" 2 0\n-  (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"memory\" \"load,both\"))\n-  1 1)\n+(define_insn_reservation \"athlon_idirect\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"athlon-direct,athlon-ieu\")\n+(define_insn_reservation \"athlon_ivector\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"athlon-vector,athlon-ieu,athlon-ieu\")\n+(define_insn_reservation \"athlon_idirect_loadmov\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load\")\n+(define_insn_reservation \"athlon_idirect_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-ieu\")\n+(define_insn_reservation \"athlon_ivector_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu,athlon-ieu\")\n+(define_insn_reservation \"athlon_idirect_movstore\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"imov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store\")))\n+\t\t\t \"athlon-direct,athlon-agu,athlon-store\")\n+(define_insn_reservation \"athlon_idirect_both\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"both\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-ieu,\n+\t\t\t  athlon-store\")\n+(define_insn_reservation \"athlon_ivector_both\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"both\"))))\n+\t\t\t \"athlon-vector,athlon-load,athlon-ieu,athlon-ieu,\n+\t\t\t  athlon-store\")\n+(define_insn_reservation \"athlon_idirect_store\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n+\t\t\t \"athlon-direct,athlon-ieu,\n+\t\t\t  athlon-store\")\n+(define_insn_reservation \"athlon_ivector_store\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n+\t\t\t \"athlon-vector,athlon-ieu,athlon-ieu,\n+\t\t\t  athlon-store\")\n \n+;; Athlon floatin point unit\n+(define_insn_reservation \"athlon_fldxf\" 12\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"athlon-vector,athlon-fany\")\n+(define_insn_reservation \"athlon_fldxf_k8\" 13\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"athlon-vector,athlon-fany\")\n+(define_insn_reservation \"athlon_fld\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-fany,nothing,athlon-load\")\n+(define_insn_reservation \"athlon_fld_k8\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-fany,athlon-load\")\n+(define_insn_reservation \"athlon_fstxf\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"store,both\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"athlon-vector,athlon-fstore\")\n+(define_insn_reservation \"athlon_fstxf_k8\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"store,both\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"athlon-vector,athlon-fstore\")\n+(define_insn_reservation \"athlon_fst\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n+\t\t\t \"athlon-direct,athlon-fstore,nothing,athlon-store\")\n+(define_insn_reservation \"athlon_fst_k8\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n+\t\t\t \"athlon-direct,athlon-fstore,athlon-store\")\n+(define_insn_reservation \"athlon_fist\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fistp\"))\n+\t\t\t \"athlon-direct,athlon-fstore,nothing\")\n+(define_insn_reservation \"athlon_fmov\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fmov\"))\n+\t\t\t \"athlon-direct,athlon-faddmul\")\n+(define_insn_reservation \"athlon_fadd_load\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fop\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_fadd_load_k8\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fop\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_fadd\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fop\"))\n+\t\t\t \"athlon-direct,athlon-fadd\")\n+(define_insn_reservation \"athlon_fmul_load\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fmul_load_k8\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fmul\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fmul\"))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_fsgn\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fsgn\"))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_fdiv_load\" 24\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fdiv_load_k8\" 13\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fdiv\" 24\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"fdiv\"))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_fdiv_k8\" 11\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"fdiv\"))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_fpspc_load\" 103\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fpspc\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fpspc\" 100\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fpspc\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_fcmov_load\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fcmov\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"fcmov\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_fcmov_load_k8\" 17\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_fcmov_k8\" 15\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"fcmov\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_fcomi_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmp\")\n+\t\t\t\t   (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_fcomi\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"athlon_decode\" \"vector\")\n+\t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_fcom_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmp\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_fcom\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fcmp\"))\n+\t\t\t \"athlon-direct,athlon-fadd\")\n+(define_insn_reservation \"athlon_fxch\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"fxch\"))\n+\t\t\t \"athlon-direct,athlon-fany\")\n+;; Athlon handle MMX operations in the FPU unit with shorter latencies\n+(define_insn_reservation \"athlon_movlpd_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (match_operand:DF 1 \"memory_operand\" \"\")))\n+\t\t\t \"athlon-direct,athlon-load\")\n+(define_insn_reservation \"athlon_movaps_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-double,athlon-load\")\n+(define_insn_reservation \"athlon_movss_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-double,athlon-load\")\n+(define_insn_reservation \"athlon_mmxsseld\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-fany,athlon-load\")\n+(define_insn_reservation \"athlon_mmxssest\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store,both\"))))\n+\t\t\t \"athlon-double,athlon-store\")\n+(define_insn_reservation \"athlon_mmxssest_k8\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n+\t\t\t \"athlon-direct,athlon-store\")\n+(define_insn_reservation \"athlon_movaps\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (eq_attr \"mode\" \"V4SF,V2DF\")))\n+\t\t\t \"athlon-double,athlon-faddmul,athlon-faddmul\")\n+(define_insn_reservation \"athlon_mmxssemov\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"mmxmov,ssemov\"))\n+\t\t\t \"athlon-direct,athlon-faddmul\")\n+(define_insn_reservation \"athlon_mmxmul_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_mmxmul\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"type\" \"mmxmul\"))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_mmx_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"unit\" \"mmx\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-direct,athlon-load,athlon-faddmul\")\n+(define_insn_reservation \"athlon_mmx\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (eq_attr \"unit\" \"mmx\"))\n+\t\t\t \"athlon-direct,athlon-faddmul\")\n+;; SSE operations are handled by the i387 unit as well.  The latnecy\n+;; is same as for i387 operations for scalar operations\n+(define_insn_reservation \"athlon_sselog_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"sselog\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_sselog_load_k8\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"sselog\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-double,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_sselog\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"sselog\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_sselog_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"sselog\"))\n+\t\t\t \"athlon-double,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssecmp_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecmp\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"athlon-direct,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecmpvector_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecmpvector_load_k8\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-double,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecmpvector\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"ssecmp\"))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecmpvector_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"ssecmp\"))\n+\t\t\t \"athlon-double,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseadd_load\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"sseadd\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseadd_load_k8\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"sseadd\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseadd\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"sseadd\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"athlon-direct,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseaddvector_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"sseadd\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseaddvector_load_k8\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"sseadd\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseaddvector\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"sseadd\"))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_sseaddvector_k8\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"sseadd\"))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvt_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvt_load_k8\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvt\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"athlon-direct,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvtvector_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvtvector_load_k8\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvtvector\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"ssecvt\"))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssecvtvector_k8\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"ssecvt\"))\n+\t\t\t \"athlon-vector,athlon-fadd\")\n+(define_insn_reservation \"athlon_ssemul_load\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemul_load_k8\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemul\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemulvector_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemulvector_load_k8\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-double,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemulvector\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"ssemul\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssemulvector_k8\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"ssemul\"))\n+\t\t\t \"athlon-double,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssediv_load\" 19\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssediv_load_k8\" 18\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"athlon-direct,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssediv\" 16\n+\t\t\t (and (eq_attr \"cpu\" \"athlon,k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"athlon-direct,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssedivvector_load\" 32\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssedivvector_load_k8\" 35\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"athlon-vector,athlon-load,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssedivvector\" 29\n+\t\t\t (and (eq_attr \"cpu\" \"athlon\")\n+\t\t\t      (eq_attr \"type\" \"ssediv\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")\n+(define_insn_reservation \"athlon_ssedivvector_k8\" 33\n+\t\t\t (and (eq_attr \"cpu\" \"k8\")\n+\t\t\t      (eq_attr \"type\" \"ssediv\"))\n+\t\t\t \"athlon-vector,athlon-fmul\")"}, {"sha": "8d9930852f7a638402d9e95a427ea6e57b8f856f", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -90,13 +90,6 @@ do\t\t\t\t\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \"%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUMBER))\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s%s%d:\\n\", LOCAL_LABEL_PREFIX, PREFIX, NUM)\n-\n /* The prefix to add to user-visible assembler symbols.  */\n \n #undef USER_LABEL_PREFIX"}, {"sha": "9f396ec46aefa50af69a95f1794d780d96a39fb0", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -88,12 +88,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n     sprintf ((BUF), \"*%s%ld\", (PREFIX), (long)(NUMBER))\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n-\n /* The prefix to add to user-visible assembler symbols.  */\n \n #define USER_LABEL_PREFIX \"_\""}, {"sha": "646cf13b5d836cb46f20f07f6e47921e756748c0", "filename": "gcc/config/i386/freebsd-aout.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -198,7 +198,8 @@ do {                                                                    \\\n       ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n \n-#define ASM_SPEC   \" %| %{fpic:-k} %{fPIC:-k}\"\n+#define AS_NEEDS_DASH_FOR_PIPED_INPUT\n+#define ASM_SPEC   \"%{fpic:-k} %{fPIC:-k}\"\n #define LINK_SPEC \\\n   \"%{p:%e`-p' not supported; use `-pg' and gprof(1)} \\\n    %{shared:-Bshareable} \\"}, {"sha": "a4bb04ad729157fc7e917fe4c1ce60ead48b354e", "filename": "gcc/config/i386/i386-coff.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-coff.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -60,11 +60,4 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \".%s%ld\", (PREFIX), (long)(NUMBER))\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n-\n /* end of i386-coff.h */"}, {"sha": "7e2290f2d3ac794543e4ed965b37de8ba03c51ca", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -35,11 +35,12 @@ Boston, MA 02111-1307, USA.  */\n \n /* By default, target has a 80387, uses IEEE compatible arithmetic,\n    and returns float values in the 387 and needs stack probes\n-   We also align doubles to 64-bits for MSVC default compatibility */\n+   We also align doubles to 64-bits for MSVC default compatibility\n+   We do bitfields MSVC-compatably by default, too. */\n #undef TARGET_SUBTARGET_DEFAULT\n #define TARGET_SUBTARGET_DEFAULT \\\n    (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_STACK_PROBE | \\\n-    MASK_ALIGN_DOUBLE)\n+    MASK_ALIGN_DOUBLE | MASK_MS_BITFIELD_LAYOUT)\n \n #undef TARGET_CPU_DEFAULT\n #define TARGET_CPU_DEFAULT 2 /* 486 */\n@@ -243,6 +244,28 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_NOP_FUN_DLLIMPORT 1\n #define drectve_section()  /* nothing */\n \n+/* Objective C has its own packing rules...\n+   Objc tries to parallel the code in stor-layout.c at runtime\t\n+   (see libobjc/encoding.c).  This (compile-time) packing info isn't \n+   available at runtime, so it's hopeless to try.\n+\n+   And if the user tries to set the flag for objc, give an error\n+   so he has some clue. */\n+\n+#undef  SUBTARGET_OVERRIDE_OPTIONS\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (strcmp (lang_hooks.name, \"GNU Objective-C\") == 0)\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if ((target_flags & MASK_MS_BITFIELD_LAYOUT) != 0\t\t\t\\\n+\t  && (target_flags_explicit & MASK_MS_BITFIELD_LAYOUT) != 0)\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t   error (\"ms-bitfields not supported for objc\");\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      target_flags &= ~MASK_MS_BITFIELD_LAYOUT;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n #define EH_FRAME_IN_DATA_SECTION\n \n #define READONLY_DATA_SECTION_ASM_OP\t\"\\t.section\\t.rdata,\\\"r\\\"\"\n@@ -273,8 +296,6 @@ while (0)\n #define HOST_PTR_AS_INT unsigned long\n \n #define PCC_BITFIELD_TYPE_MATTERS 1\n-#define PCC_BITFIELD_TYPE_TEST TYPE_NATIVE(rec)\n-#define GROUP_BITFIELDS_BY_ALIGN TYPE_NATIVE(rec)\n \n /* The following two flags are usually \"off\" for i386, because some non-gnu\n    tools (for the i386) don't handle them.  However, we don't have that"}, {"sha": "e403950ab32f206524230acfeadf0293a249671c", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -41,6 +41,9 @@ extern int ix86_aligned_p PARAMS ((rtx));\n extern int standard_80387_constant_p PARAMS ((rtx));\n extern int standard_sse_constant_p PARAMS ((rtx));\n extern int symbolic_reference_mentioned_p PARAMS ((rtx));\n+extern bool extended_reg_mentioned_p PARAMS ((rtx));\n+extern bool x86_extended_QIreg_mentioned_p PARAMS ((rtx));\n+extern bool x86_extended_reg_mentioned_p PARAMS ((rtx));\n \n extern int any_fp_register_operand PARAMS ((rtx, enum machine_mode));\n extern int register_and_not_any_fp_reg_operand PARAMS ((rtx, enum machine_mode));\n@@ -63,6 +66,7 @@ extern int initial_exec_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int local_exec_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int pic_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int call_insn_operand PARAMS ((rtx, enum machine_mode));\n+extern int sibcall_insn_operand PARAMS ((rtx, enum machine_mode));\n extern int constant_call_address_operand PARAMS ((rtx, enum machine_mode));\n extern int const0_operand PARAMS ((rtx, enum machine_mode));\n extern int const1_operand PARAMS ((rtx, enum machine_mode));\n@@ -137,7 +141,7 @@ extern void ix86_expand_branch PARAMS ((enum rtx_code, rtx));\n extern int ix86_expand_setcc PARAMS ((enum rtx_code, rtx));\n extern int ix86_expand_int_movcc PARAMS ((rtx[]));\n extern int ix86_expand_fp_movcc PARAMS ((rtx[]));\n-extern void ix86_expand_call PARAMS ((rtx, rtx, rtx, rtx, rtx));\n+extern void ix86_expand_call PARAMS ((rtx, rtx, rtx, rtx, rtx, int));\n extern void x86_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n extern rtx ix86_zero_extend_to_Pmode PARAMS ((rtx));\n extern void ix86_split_long_move PARAMS ((rtx[]));"}, {"sha": "2eaa1c548750f921e0c624d0d8c56e90871cdcab", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 547, "deletions": 162, "changes": 709, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n@@ -55,9 +57,9 @@ struct processor_costs size_cost = {\t/* costs for tunning for size */\n   3,\t\t\t\t\t/* cost of a lea instruction */\n   2,\t\t\t\t\t/* variable shift costs */\n   3,\t\t\t\t\t/* constant shift costs */\n-  3,\t\t\t\t\t/* cost of starting a multiply */\n+  {3, 3, 3, 3, 5},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  3,\t\t\t\t\t/* cost of a divide/mod */\n+  {3, 3, 3, 3, 5},\t\t\t/* cost of a divide/mod */\n   3,\t\t\t\t\t/* cost of movsx */\n   3,\t\t\t\t\t/* cost of movzx */\n   0,\t\t\t\t\t/* \"large\" insn */\n@@ -84,6 +86,7 @@ struct processor_costs size_cost = {\t/* costs for tunning for size */\n   3,\t\t\t\t\t/* MMX or SSE register to integer */\n   0,\t\t\t\t\t/* size of prefetch block */\n   0,\t\t\t\t\t/* number of parallel prefetches */\n+  1,\t\t\t\t\t/* Branch cost */\n   2,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   2,\t\t\t\t\t/* cost of FMUL instruction.  */\n   2,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -99,9 +102,9 @@ struct processor_costs i386_cost = {\t/* 386 specific costs */\n   1,\t\t\t\t\t/* cost of a lea instruction */\n   3,\t\t\t\t\t/* variable shift costs */\n   2,\t\t\t\t\t/* constant shift costs */\n-  6,\t\t\t\t\t/* cost of starting a multiply */\n+  {6, 6, 6, 6, 6},\t\t\t/* cost of starting a multiply */\n   1,\t\t\t\t\t/* cost of multiply per each bit set */\n-  23,\t\t\t\t\t/* cost of a divide/mod */\n+  {23, 23, 23, 23, 23},\t\t\t/* cost of a divide/mod */\n   3,\t\t\t\t\t/* cost of movsx */\n   2,\t\t\t\t\t/* cost of movzx */\n   15,\t\t\t\t\t/* \"large\" insn */\n@@ -128,6 +131,7 @@ struct processor_costs i386_cost = {\t/* 386 specific costs */\n   3,\t\t\t\t\t/* MMX or SSE register to integer */\n   0,\t\t\t\t\t/* size of prefetch block */\n   0,\t\t\t\t\t/* number of parallel prefetches */\n+  1,\t\t\t\t\t/* Branch cost */\n   23,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   27,\t\t\t\t\t/* cost of FMUL instruction.  */\n   88,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -142,9 +146,9 @@ struct processor_costs i486_cost = {\t/* 486 specific costs */\n   1,\t\t\t\t\t/* cost of a lea instruction */\n   3,\t\t\t\t\t/* variable shift costs */\n   2,\t\t\t\t\t/* constant shift costs */\n-  12,\t\t\t\t\t/* cost of starting a multiply */\n+  {12, 12, 12, 12, 12},\t\t\t/* cost of starting a multiply */\n   1,\t\t\t\t\t/* cost of multiply per each bit set */\n-  40,\t\t\t\t\t/* cost of a divide/mod */\n+  {40, 40, 40, 40, 40},\t\t\t/* cost of a divide/mod */\n   3,\t\t\t\t\t/* cost of movsx */\n   2,\t\t\t\t\t/* cost of movzx */\n   15,\t\t\t\t\t/* \"large\" insn */\n@@ -171,6 +175,7 @@ struct processor_costs i486_cost = {\t/* 486 specific costs */\n   3,\t\t\t\t\t/* MMX or SSE register to integer */\n   0,\t\t\t\t\t/* size of prefetch block */\n   0,\t\t\t\t\t/* number of parallel prefetches */\n+  1,\t\t\t\t\t/* Branch cost */\n   8,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   16,\t\t\t\t\t/* cost of FMUL instruction.  */\n   73,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -185,9 +190,9 @@ struct processor_costs pentium_cost = {\n   1,\t\t\t\t\t/* cost of a lea instruction */\n   4,\t\t\t\t\t/* variable shift costs */\n   1,\t\t\t\t\t/* constant shift costs */\n-  11,\t\t\t\t\t/* cost of starting a multiply */\n+  {11, 11, 11, 11, 11},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  25,\t\t\t\t\t/* cost of a divide/mod */\n+  {25, 25, 25, 25, 25},\t\t\t/* cost of a divide/mod */\n   3,\t\t\t\t\t/* cost of movsx */\n   2,\t\t\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n@@ -214,6 +219,7 @@ struct processor_costs pentium_cost = {\n   3,\t\t\t\t\t/* MMX or SSE register to integer */\n   0,\t\t\t\t\t/* size of prefetch block */\n   0,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n   3,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   3,\t\t\t\t\t/* cost of FMUL instruction.  */\n   39,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -228,9 +234,9 @@ struct processor_costs pentiumpro_cost = {\n   1,\t\t\t\t\t/* cost of a lea instruction */\n   1,\t\t\t\t\t/* variable shift costs */\n   1,\t\t\t\t\t/* constant shift costs */\n-  4,\t\t\t\t\t/* cost of starting a multiply */\n+  {4, 4, 4, 4, 4},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  17,\t\t\t\t\t/* cost of a divide/mod */\n+  {17, 17, 17, 17, 17},\t\t\t/* cost of a divide/mod */\n   1,\t\t\t\t\t/* cost of movsx */\n   1,\t\t\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n@@ -257,6 +263,7 @@ struct processor_costs pentiumpro_cost = {\n   3,\t\t\t\t\t/* MMX or SSE register to integer */\n   32,\t\t\t\t\t/* size of prefetch block */\n   6,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n   3,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   5,\t\t\t\t\t/* cost of FMUL instruction.  */\n   56,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -271,9 +278,9 @@ struct processor_costs k6_cost = {\n   2,\t\t\t\t\t/* cost of a lea instruction */\n   1,\t\t\t\t\t/* variable shift costs */\n   1,\t\t\t\t\t/* constant shift costs */\n-  3,\t\t\t\t\t/* cost of starting a multiply */\n+  {3, 3, 3, 3, 3},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  18,\t\t\t\t\t/* cost of a divide/mod */\n+  {18, 18, 18, 18, 18},\t\t\t/* cost of a divide/mod */\n   2,\t\t\t\t\t/* cost of movsx */\n   2,\t\t\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n@@ -300,6 +307,7 @@ struct processor_costs k6_cost = {\n   6,\t\t\t\t\t/* MMX or SSE register to integer */\n   32,\t\t\t\t\t/* size of prefetch block */\n   1,\t\t\t\t\t/* number of parallel prefetches */\n+  1,\t\t\t\t\t/* Branch cost */\n   2,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   2,\t\t\t\t\t/* cost of FMUL instruction.  */\n   56,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -314,9 +322,9 @@ struct processor_costs athlon_cost = {\n   2,\t\t\t\t\t/* cost of a lea instruction */\n   1,\t\t\t\t\t/* variable shift costs */\n   1,\t\t\t\t\t/* constant shift costs */\n-  5,\t\t\t\t\t/* cost of starting a multiply */\n+  {5, 5, 5, 5, 5},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  42,\t\t\t\t\t/* cost of a divide/mod */\n+  {18, 26, 42, 74, 74},\t\t\t/* cost of a divide/mod */\n   1,\t\t\t\t\t/* cost of movsx */\n   1,\t\t\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n@@ -343,6 +351,7 @@ struct processor_costs athlon_cost = {\n   5,\t\t\t\t\t/* MMX or SSE register to integer */\n   64,\t\t\t\t\t/* size of prefetch block */\n   6,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n   4,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   4,\t\t\t\t\t/* cost of FMUL instruction.  */\n   24,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -351,15 +360,59 @@ struct processor_costs athlon_cost = {\n   35,\t\t\t\t\t/* cost of FSQRT instruction.  */\n };\n \n+static const\n+struct processor_costs k8_cost = {\n+  1,\t\t\t\t\t/* cost of an add instruction */\n+  2,\t\t\t\t\t/* cost of a lea instruction */\n+  1,\t\t\t\t\t/* variable shift costs */\n+  1,\t\t\t\t\t/* constant shift costs */\n+  {3, 4, 3, 4, 5},\t\t\t/* cost of starting a multiply */\n+  0,\t\t\t\t\t/* cost of multiply per each bit set */\n+  {18, 26, 42, 74, 74},\t\t\t/* cost of a divide/mod */\n+  1,\t\t\t\t\t/* cost of movsx */\n+  1,\t\t\t\t\t/* cost of movzx */\n+  8,\t\t\t\t\t/* \"large\" insn */\n+  9,\t\t\t\t\t/* MOVE_RATIO */\n+  4,\t\t\t\t\t/* cost for loading QImode using movzbl */\n+  {3, 4, 3},\t\t\t\t/* cost of loading integer registers\n+\t\t\t\t\t   in QImode, HImode and SImode.\n+\t\t\t\t\t   Relative to reg-reg move (2).  */\n+  {3, 4, 3},\t\t\t\t/* cost of storing integer registers */\n+  4,\t\t\t\t\t/* cost of reg,reg fld/fst */\n+  {4, 4, 12},\t\t\t\t/* cost of loading fp registers\n+\t\t\t\t\t   in SFmode, DFmode and XFmode */\n+  {6, 6, 8},\t\t\t\t/* cost of loading integer registers */\n+  2,\t\t\t\t\t/* cost of moving MMX register */\n+  {3, 3},\t\t\t\t/* cost of loading MMX registers\n+\t\t\t\t\t   in SImode and DImode */\n+  {4, 4},\t\t\t\t/* cost of storing MMX registers\n+\t\t\t\t\t   in SImode and DImode */\n+  2,\t\t\t\t\t/* cost of moving SSE register */\n+  {4, 3, 6},\t\t\t\t/* cost of loading SSE registers\n+\t\t\t\t\t   in SImode, DImode and TImode */\n+  {4, 4, 5},\t\t\t\t/* cost of storing SSE registers\n+\t\t\t\t\t   in SImode, DImode and TImode */\n+  5,\t\t\t\t\t/* MMX or SSE register to integer */\n+  64,\t\t\t\t\t/* size of prefetch block */\n+  6,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n+  4,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n+  4,\t\t\t\t\t/* cost of FMUL instruction.  */\n+  19,\t\t\t\t\t/* cost of FDIV instruction.  */\n+  2,\t\t\t\t\t/* cost of FABS instruction.  */\n+  2,\t\t\t\t\t/* cost of FCHS instruction.  */\n+  35,\t\t\t\t\t/* cost of FSQRT instruction.  */\n+};\n+\n static const\n struct processor_costs pentium4_cost = {\n   1,\t\t\t\t\t/* cost of an add instruction */\n   1,\t\t\t\t\t/* cost of a lea instruction */\n-  8,\t\t\t\t\t/* variable shift costs */\n-  8,\t\t\t\t\t/* constant shift costs */\n-  30,\t\t\t\t\t/* cost of starting a multiply */\n+  4,\t\t\t\t\t/* variable shift costs */\n+  4,\t\t\t\t\t/* constant shift costs */\n+  {15, 15, 15, 15, 15},\t\t\t/* cost of starting a multiply */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  112,\t\t\t\t\t/* cost of a divide/mod */\n+  {56, 56, 56, 56, 56},\t\t\t/* cost of a divide/mod */\n   1,\t\t\t\t\t/* cost of movsx */\n   1,\t\t\t\t\t/* cost of movzx */\n   16,\t\t\t\t\t/* \"large\" insn */\n@@ -386,6 +439,7 @@ struct processor_costs pentium4_cost = {\n   10,\t\t\t\t\t/* MMX or SSE register to integer */\n   64,\t\t\t\t\t/* size of prefetch block */\n   6,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n   5,\t\t\t\t\t/* cost of FADD and FSUB insns.  */\n   7,\t\t\t\t\t/* cost of FMUL instruction.  */\n   43,\t\t\t\t\t/* cost of FDIV instruction.  */\n@@ -404,52 +458,66 @@ const struct processor_costs *ix86_cost = &pentium_cost;\n #define m_K6  (1<<PROCESSOR_K6)\n #define m_ATHLON  (1<<PROCESSOR_ATHLON)\n #define m_PENT4  (1<<PROCESSOR_PENTIUM4)\n+#define m_K8  (1<<PROCESSOR_K8)\n+#define m_ATHLON_K8  (m_K8 | m_ATHLON)\n \n-const int x86_use_leave = m_386 | m_K6 | m_ATHLON;\n-const int x86_push_memory = m_386 | m_K6 | m_ATHLON | m_PENT4;\n+const int x86_use_leave = m_386 | m_K6 | m_ATHLON_K8;\n+const int x86_push_memory = m_386 | m_K6 | m_ATHLON_K8 | m_PENT4;\n const int x86_zero_extend_with_and = m_486 | m_PENT;\n-const int x86_movx = m_ATHLON | m_PPRO | m_PENT4 /* m_386 | m_K6 */;\n+const int x86_movx = m_ATHLON_K8 | m_PPRO | m_PENT4 /* m_386 | m_K6 */;\n const int x86_double_with_add = ~m_386;\n const int x86_use_bit_test = m_386;\n-const int x86_unroll_strlen = m_486 | m_PENT | m_PPRO | m_ATHLON | m_K6;\n-const int x86_cmove = m_PPRO | m_ATHLON | m_PENT4;\n-const int x86_3dnow_a = m_ATHLON;\n-const int x86_deep_branch = m_PPRO | m_K6 | m_ATHLON | m_PENT4;\n+const int x86_unroll_strlen = m_486 | m_PENT | m_PPRO | m_ATHLON_K8 | m_K6;\n+const int x86_cmove = m_PPRO | m_ATHLON_K8 | m_PENT4;\n+const int x86_3dnow_a = m_ATHLON_K8;\n+const int x86_deep_branch = m_PPRO | m_K6 | m_ATHLON_K8 | m_PENT4;\n const int x86_branch_hints = m_PENT4;\n const int x86_use_sahf = m_PPRO | m_K6 | m_PENT4;\n const int x86_partial_reg_stall = m_PPRO;\n const int x86_use_loop = m_K6;\n-const int x86_use_fiop = ~(m_PPRO | m_ATHLON | m_PENT);\n+const int x86_use_fiop = ~(m_PPRO | m_ATHLON_K8 | m_PENT);\n const int x86_use_mov0 = m_K6;\n const int x86_use_cltd = ~(m_PENT | m_K6);\n const int x86_read_modify_write = ~m_PENT;\n const int x86_read_modify = ~(m_PENT | m_PPRO);\n const int x86_split_long_moves = m_PPRO;\n-const int x86_promote_QImode = m_K6 | m_PENT | m_386 | m_486 | m_ATHLON;\n+const int x86_promote_QImode = m_K6 | m_PENT | m_386 | m_486 | m_ATHLON_K8;\n const int x86_fast_prefix = ~(m_PENT | m_486 | m_386);\n const int x86_single_stringop = m_386 | m_PENT4;\n const int x86_qimode_math = ~(0);\n const int x86_promote_qi_regs = 0;\n const int x86_himode_math = ~(m_PPRO);\n const int x86_promote_hi_regs = m_PPRO;\n-const int x86_sub_esp_4 = m_ATHLON | m_PPRO | m_PENT4;\n-const int x86_sub_esp_8 = m_ATHLON | m_PPRO | m_386 | m_486 | m_PENT4;\n-const int x86_add_esp_4 = m_ATHLON | m_K6 | m_PENT4;\n-const int x86_add_esp_8 = m_ATHLON | m_PPRO | m_K6 | m_386 | m_486 | m_PENT4;\n-const int x86_integer_DFmode_moves = ~(m_ATHLON | m_PENT4 | m_PPRO);\n-const int x86_partial_reg_dependency = m_ATHLON | m_PENT4;\n-const int x86_memory_mismatch_stall = m_ATHLON | m_PENT4;\n-const int x86_accumulate_outgoing_args = m_ATHLON | m_PENT4 | m_PPRO;\n-const int x86_prologue_using_move = m_ATHLON | m_PENT4 | m_PPRO;\n-const int x86_epilogue_using_move = m_ATHLON | m_PENT4 | m_PPRO;\n+const int x86_sub_esp_4 = m_ATHLON_K8 | m_PPRO | m_PENT4;\n+const int x86_sub_esp_8 = m_ATHLON_K8 | m_PPRO | m_386 | m_486 | m_PENT4;\n+const int x86_add_esp_4 = m_ATHLON_K8 | m_K6 | m_PENT4;\n+const int x86_add_esp_8 = m_ATHLON_K8 | m_PPRO | m_K6 | m_386 | m_486 | m_PENT4;\n+const int x86_integer_DFmode_moves = ~(m_ATHLON_K8 | m_PENT4 | m_PPRO);\n+const int x86_partial_reg_dependency = m_ATHLON_K8 | m_PENT4;\n+const int x86_memory_mismatch_stall = m_ATHLON_K8 | m_PENT4;\n+const int x86_accumulate_outgoing_args = m_ATHLON_K8 | m_PENT4 | m_PPRO;\n+const int x86_prologue_using_move = m_ATHLON_K8 | m_PENT4 | m_PPRO;\n+const int x86_epilogue_using_move = m_ATHLON_K8 | m_PENT4 | m_PPRO;\n const int x86_decompose_lea = m_PENT4;\n const int x86_shift1 = ~m_486;\n-const int x86_arch_always_fancy_math_387 = m_PENT | m_PPRO | m_ATHLON | m_PENT4;\n+const int x86_arch_always_fancy_math_387 = m_PENT | m_PPRO | m_ATHLON_K8 | m_PENT4;\n+const int x86_sse_partial_reg_dependency = m_PENT4 | m_PPRO;\n+/* Set for machines where the type and dependencies are resolved on SSE register\n+   parts insetad of whole registers, so we may maintain just lower part of\n+   scalar values in proper format leaving the upper part undefined.  */\n+const int x86_sse_partial_regs = m_ATHLON_K8;\n+/* Athlon optimizes partial-register FPS special case, thus avoiding the\n+   need for extra instructions beforehand  */\n+const int x86_sse_partial_regs_for_cvtsd2ss = 0;\n+const int x86_sse_typeless_stores = m_ATHLON_K8;\n+const int x86_sse_load0_by_pxor = m_PPRO | m_PENT4;\n+const int x86_use_ffreep = m_ATHLON_K8;\n+const int x86_rep_movl_optimal = m_386 | m_PENT | m_PPRO | m_K6;\n \n /* In case the avreage insn count for single function invocation is\n    lower than this constant, emit fast (but longer) prologue and\n    epilogue code.  */\n-#define FAST_PROLOGUE_INSN_COUNT 30\n+#define FAST_PROLOGUE_INSN_COUNT 20\n \n /* Set by prologue expander and used by epilogue expander to determine\n    the style used.  */\n@@ -755,6 +823,7 @@ static void x86_output_mi_thunk PARAMS ((FILE *, tree, HOST_WIDE_INT,\n \t\t\t\t\t HOST_WIDE_INT, tree));\n static bool x86_can_output_mi_thunk PARAMS ((tree, HOST_WIDE_INT,\n \t\t\t\t\t     HOST_WIDE_INT, tree));\n+bool ix86_expand_carry_flag_compare PARAMS ((enum rtx_code, rtx, rtx, rtx*));\n \n struct ix86_address\n {\n@@ -796,9 +865,12 @@ static void ix86_compute_frame_layout PARAMS ((struct ix86_frame *));\n static int ix86_comp_type_attributes PARAMS ((tree, tree));\n static int ix86_fntype_regparm PARAMS ((tree));\n const struct attribute_spec ix86_attribute_table[];\n+static bool ix86_function_ok_for_sibcall PARAMS ((tree, tree));\n static tree ix86_handle_cdecl_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static tree ix86_handle_regparm_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static int ix86_value_regno PARAMS ((enum machine_mode));\n+static bool ix86_ms_bitfield_layout_p PARAMS ((tree));\n+static int extended_reg_mentioned_1 PARAMS ((rtx *, void *));\n \n #if defined (DO_GLOBAL_CTORS_BODY) && defined (HAS_INIT_SECTION)\n static void ix86_svr3_asm_out_constructor PARAMS ((rtx, int));\n@@ -897,13 +969,19 @@ static enum x86_64_reg_class merge_classes PARAMS ((enum x86_64_reg_class,\n #define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD \\\n   ia32_multipass_dfa_lookahead\n \n+#undef TARGET_FUNCTION_OK_FOR_SIBCALL\n+#define TARGET_FUNCTION_OK_FOR_SIBCALL ix86_function_ok_for_sibcall\n+\n #ifdef HAVE_AS_TLS\n #undef TARGET_HAVE_TLS\n #define TARGET_HAVE_TLS true\n #endif\n #undef TARGET_CANNOT_FORCE_CONST_MEM\n #define TARGET_CANNOT_FORCE_CONST_MEM ix86_cannot_force_const_mem\n \n+#undef TARGET_MS_BITFIELD_LAYOUT_P\n+#define TARGET_MS_BITFIELD_LAYOUT_P ix86_ms_bitfield_layout_p\n+\n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK x86_output_mi_thunk\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n@@ -937,17 +1015,17 @@ override_options ()\n       const int align_jump;\n       const int align_jump_max_skip;\n       const int align_func;\n-      const int branch_cost;\n     }\n   const processor_target_table[PROCESSOR_max] =\n     {\n-      {&i386_cost, 0, 0, 4, 3, 4, 3, 4, 1},\n-      {&i486_cost, 0, 0, 16, 15, 16, 15, 16, 1},\n-      {&pentium_cost, 0, 0, 16, 7, 16, 7, 16, 1},\n-      {&pentiumpro_cost, 0, 0, 16, 15, 16, 7, 16, 1},\n-      {&k6_cost, 0, 0, 32, 7, 32, 7, 32, 1},\n-      {&athlon_cost, 0, 0, 16, 7, 64, 7, 16, 1},\n-      {&pentium4_cost, 0, 0, 0, 0, 0, 0, 0, 1}\n+      {&i386_cost, 0, 0, 4, 3, 4, 3, 4},\n+      {&i486_cost, 0, 0, 16, 15, 16, 15, 16},\n+      {&pentium_cost, 0, 0, 16, 7, 16, 7, 16},\n+      {&pentiumpro_cost, 0, 0, 16, 15, 16, 7, 16},\n+      {&k6_cost, 0, 0, 32, 7, 32, 7, 32},\n+      {&athlon_cost, 0, 0, 16, 7, 16, 7, 16},\n+      {&pentium4_cost, 0, 0, 0, 0, 0, 0, 0},\n+      {&k8_cost, 0, 0, 16, 7, 16, 7, 16}\n     };\n \n   static const char * const cpu_names[] = TARGET_CPU_DEFAULT_NAMES;\n@@ -962,7 +1040,8 @@ override_options ()\n \t  PTA_MMX = 4,\n \t  PTA_PREFETCH_SSE = 8,\n \t  PTA_3DNOW = 16,\n-\t  PTA_3DNOW_A = 64\n+\t  PTA_3DNOW_A = 64,\n+\t  PTA_64BIT = 128\n \t} flags;\n     }\n   const processor_alias_table[] =\n@@ -994,6 +1073,8 @@ override_options ()\n \t\t\t\t      | PTA_3DNOW_A | PTA_SSE},\n       {\"athlon-mp\", PROCESSOR_ATHLON, PTA_MMX | PTA_PREFETCH_SSE | PTA_3DNOW\n \t\t\t\t      | PTA_3DNOW_A | PTA_SSE},\n+      {\"k8\", PROCESSOR_K8, PTA_MMX | PTA_PREFETCH_SSE | PTA_3DNOW | PTA_64BIT\n+\t\t\t\t      | PTA_3DNOW_A | PTA_SSE | PTA_SSE2},\n     };\n \n   int const pta_size = ARRAY_SIZE (processor_alias_table);\n@@ -1033,7 +1114,7 @@ override_options ()\n   if (!ix86_cpu_string)\n     ix86_cpu_string = cpu_names [TARGET_CPU_DEFAULT];\n   if (!ix86_arch_string)\n-    ix86_arch_string = TARGET_64BIT ? \"athlon-4\" : \"i386\";\n+    ix86_arch_string = TARGET_64BIT ? \"k8\" : \"i386\";\n \n   if (ix86_cmodel_string != 0)\n     {\n@@ -1099,6 +1180,8 @@ override_options ()\n \t  target_flags |= MASK_SSE2;\n \tif (processor_alias_table[i].flags & PTA_PREFETCH_SSE)\n \t  x86_prefetch_sse = true;\n+\tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n+\t  error (\"CPU you selected does not support x86-64 instruction set\");\n \tbreak;\n       }\n \n@@ -1109,6 +1192,8 @@ override_options ()\n     if (! strcmp (ix86_cpu_string, processor_alias_table[i].name))\n       {\n \tix86_cpu = processor_alias_table[i].processor;\n+\tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n+\t  error (\"CPU you selected does not support x86-64 instruction set\");\n \tbreak;\n       }\n   if (processor_alias_table[i].flags & PTA_PREFETCH_SSE)\n@@ -1215,7 +1300,7 @@ override_options ()\n     }\n \n   /* Validate -mbranch-cost= value, or provide default.  */\n-  ix86_branch_cost = processor_target_table[ix86_cpu].branch_cost;\n+  ix86_branch_cost = processor_target_table[ix86_cpu].cost->branch_cost;\n   if (ix86_branch_cost_string)\n     {\n       i = atoi (ix86_branch_cost_string);\n@@ -1371,6 +1456,60 @@ const struct attribute_spec ix86_attribute_table[] =\n   { NULL,        0, 0, false, false, false, NULL }\n };\n \n+/* If PIC, we cannot make sibling calls to global functions\n+   because the PLT requires %ebx live.\n+   If we are returning floats on the register stack, we cannot make\n+   sibling calls to functions that return floats.  (The stack adjust\n+   instruction will wind up after the sibcall jump, and not be executed.)  */\n+\n+static bool\n+ix86_function_ok_for_sibcall (decl, exp)\n+     tree decl;\n+     tree exp;\n+{\n+  /* If we are generating position-independent code, we cannot sibcall\n+     optimize any indirect call, or a direct call to a global function,\n+     as the PLT requires %ebx be live.  */\n+  if (!TARGET_64BIT && flag_pic && (!decl || TREE_PUBLIC (decl)))\n+    return false;\n+\n+  /* If we are returning floats on the 80387 register stack, we cannot\n+     make a sibcall from a function that doesn't return a float to a\n+     function that does; the necessary stack adjustment will not be\n+     executed.  */\n+  if (STACK_REG_P (ix86_function_value (TREE_TYPE (exp)))\n+      && ! STACK_REG_P (ix86_function_value (TREE_TYPE (DECL_RESULT (cfun->decl)))))\n+    return false;\n+\n+  /* If this call is indirect, we'll need to be able to use a call-clobbered\n+     register for the address of the target function.  Make sure that all \n+     such registers are not used for passing parameters.  */\n+  if (!decl && !TARGET_64BIT)\n+    {\n+      int regparm = ix86_regparm;\n+      tree attr, type;\n+\n+      /* We're looking at the CALL_EXPR, we need the type of the function.  */\n+      type = TREE_OPERAND (exp, 0);\t\t/* pointer expression */\n+      type = TREE_TYPE (type);\t\t\t/* pointer type */\n+      type = TREE_TYPE (type);\t\t\t/* function type */\n+\n+      attr = lookup_attribute (\"regparm\", TYPE_ATTRIBUTES (type));\n+      if (attr)\n+        regparm = TREE_INT_CST_LOW (TREE_VALUE (TREE_VALUE (attr)));\n+\n+      if (regparm >= 3)\n+\t{\n+\t  /* ??? Need to count the actual number of registers to be used,\n+\t     not the possible number of registers.  Fix later.  */\n+\t  return false;\n+\t}\n+    }\n+\n+  /* Otherwise okay.  That also includes certain types of indirect calls.  */\n+  return true;\n+}\n+\n /* Handle a \"cdecl\" or \"stdcall\" attribute;\n    arguments as in struct attribute_spec.handler.  */\n static tree\n@@ -3209,6 +3348,32 @@ call_insn_operand (op, mode)\n   return general_operand (op, Pmode);\n }\n \n+/* Test for a valid operand for a call instruction.  Don't allow the\n+   arg pointer register or virtual regs since they may decay into\n+   reg + const, which the patterns can't handle.  */\n+\n+int\n+sibcall_insn_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  /* Disallow indirect through a virtual register.  This leads to\n+     compiler aborts when trying to eliminate them.  */\n+  if (GET_CODE (op) == REG\n+      && (op == arg_pointer_rtx\n+\t  || op == frame_pointer_rtx\n+\t  || (REGNO (op) >= FIRST_PSEUDO_REGISTER\n+\t      && REGNO (op) <= LAST_VIRTUAL_REGISTER)))\n+    return 0;\n+\n+  /* Explicitly allow SYMBOL_REF even if pic.  */\n+  if (GET_CODE (op) == SYMBOL_REF)\n+    return 1;\n+\n+  /* Otherwise we can only allow register operands.  */\n+  return register_operand (op, Pmode);\n+}\n+\n int\n constant_call_address_operand (op, mode)\n      rtx op;\n@@ -3387,6 +3552,18 @@ q_regs_operand (op, mode)\n   return ANY_QI_REG_P (op);\n }\n \n+/* Return true if op is an flags register.  */\n+\n+int\n+flags_reg_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  if (mode != VOIDmode && GET_MODE (op) != mode)\n+    return 0;\n+  return REG_P (op) && REGNO (op) == FLAGS_REG && GET_MODE (op) != VOIDmode;\n+}\n+\n /* Return true if op is a NON_Q_REGS class register.  */\n \n int\n@@ -3401,6 +3578,31 @@ non_q_regs_operand (op, mode)\n   return NON_QI_REG_P (op);\n }\n \n+int\n+zero_extended_scalar_load_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  unsigned n_elts;\n+  if (GET_CODE (op) != MEM)\n+    return 0;\n+  op = maybe_get_pool_constant (op);\n+  if (!op)\n+    return 0;\n+  if (GET_CODE (op) != CONST_VECTOR)\n+    return 0;\n+  n_elts =\n+    (GET_MODE_SIZE (GET_MODE (op)) /\n+     GET_MODE_SIZE (GET_MODE_INNER (GET_MODE (op))));\n+  for (n_elts--; n_elts > 0; n_elts--)\n+    {\n+      rtx elt = CONST_VECTOR_ELT (op, n_elts);\n+      if (elt != CONST0_RTX (GET_MODE_INNER (GET_MODE (op))))\n+\treturn 0;\n+    }\n+  return 1;\n+}\n+\n /* Return 1 if OP is a comparison that can be used in the CMPSS/CMPPS\n    insns.  */\n int\n@@ -4160,7 +4362,7 @@ output_set_got (dest)\n          is what will be referred to by the Mach-O PIC subsystem.  */\n       ASM_OUTPUT_LABEL (asm_out_file, machopic_function_base_name ());\n #endif\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t CODE_LABEL_NUMBER (XEXP (xops[2], 0)));\n \n       if (flag_pic)\n@@ -4456,14 +4658,32 @@ ix86_expand_prologue ()\n   int use_mov = 0;\n   HOST_WIDE_INT allocate;\n \n+  ix86_compute_frame_layout (&frame);\n   if (!optimize_size)\n     {\n-      use_fast_prologue_epilogue\n-\t = !expensive_function_p (FAST_PROLOGUE_INSN_COUNT);\n+      int count = frame.nregs;\n+\n+      /* The fast prologue uses move instead of push to save registers.  This\n+         is significantly longer, but also executes faster as modern hardware\n+         can execute the moves in parallel, but can't do that for push/pop.\n+\t \n+\t Be curefull about choosing what prologue to emit:  When function takes\n+\t many instructions to execute we may use slow version as well as in\n+\t case function is known to be outside hot spot (this is known with\n+\t feedback only).  Weight the size of function by number of registers\n+\t to save as it is cheap to use one or two push instructions but very\n+\t slow to use many of them.  */\n+      if (count)\n+\tcount = (count - 1) * FAST_PROLOGUE_INSN_COUNT;\n+      if (cfun->function_frequency < FUNCTION_FREQUENCY_NORMAL\n+\t  || (flag_branch_probabilities\n+\t      && cfun->function_frequency < FUNCTION_FREQUENCY_HOT))\n+\tuse_fast_prologue_epilogue = 0;\n+      else\n+        use_fast_prologue_epilogue = !expensive_function_p (count);\n       if (TARGET_PROLOGUE_USING_MOVE)\n         use_mov = use_fast_prologue_epilogue;\n     }\n-  ix86_compute_frame_layout (&frame);\n \n   /* Note: AT&T enter does NOT have reversed args.  Enter is probably\n      slower on all targets.  Also sdb doesn't like it.  */\n@@ -8960,6 +9180,84 @@ ix86_expand_setcc (code, dest)\n   return 1; /* DONE */\n }\n \n+/* Expand comparison setting or clearing carry flag.  Return true when sucesfull\n+   and set pop for the operation.  */\n+bool\n+ix86_expand_carry_flag_compare (code, op0, op1, pop)\n+     rtx op0, op1, *pop;\n+     enum rtx_code code;\n+{\n+  enum machine_mode mode =\n+    GET_MODE (op0) != VOIDmode ? GET_MODE (op0) : GET_MODE (op1);\n+\n+  /* Do not handle DImode compares that go trought special path.  Also we can't\n+     deal with FP compares yet.  This is possible to add.   */\n+  if ((mode == DImode && !TARGET_64BIT) || !INTEGRAL_MODE_P (mode))\n+    return false;\n+  switch (code)\n+    {\n+    case LTU:\n+    case GEU:\n+      break;\n+\n+    /* Convert a==0 into (unsigned)a<1.  */\n+    case EQ:\n+    case NE:\n+      if (op1 != const0_rtx)\n+\treturn false;\n+      op1 = const1_rtx;\n+      code = (code == EQ ? LTU : GEU);\n+      break;\n+\n+    /* Convert a>b into b<a or a>=b-1.  */\n+    case GTU:\n+    case LEU:\n+      if (GET_CODE (op1) == CONST_INT)\n+\t{\n+\t  op1 = gen_int_mode (INTVAL (op1) + 1, GET_MODE (op0));\n+\t  /* Bail out on overflow.  We still can swap operands but that\n+\t     would force loading of the constant into register. */\n+\t  if (op1 == const0_rtx\n+\t      || !x86_64_immediate_operand (op1, GET_MODE (op1)))\n+\t    return false;\n+\t  code = (code == GTU ? GEU : LTU);\n+\t}\n+      else\n+\t{\n+\t  rtx tmp = op1;\n+\t  op1 = op0;\n+\t  op0 = tmp;\n+\t  code = (code == GTU ? LTU : GEU);\n+\t}\n+      break;\n+\n+    /* Convert a>0 into (unsigned)a<0x7fffffff.  */\n+    case LT:\n+    case GE:\n+      if (mode == DImode || op1 != const0_rtx)\n+\treturn false;\n+      op1 = gen_int_mode (~(1 << (GET_MODE_BITSIZE (mode) - 1)), mode);\n+      code = (code == LT ? GEU : LTU);\n+      break;\n+    case LE:\n+    case GT:\n+      if (mode == DImode || op1 != constm1_rtx)\n+\treturn false;\n+      op1 = gen_int_mode (~(1 << (GET_MODE_BITSIZE (mode) - 1)), mode);\n+      code = (code == LE ? GEU : LTU);\n+      break;\n+\n+    default:\n+      return false;\n+    }\n+  ix86_compare_op0 = op0;\n+  ix86_compare_op1 = op1;\n+  *pop = ix86_expand_compare (code, NULL, NULL);\n+  if (GET_CODE (*pop) != LTU && GET_CODE (*pop) != GEU)\n+    abort ();\n+  return true;\n+}\n+\n int\n ix86_expand_int_movcc (operands)\n      rtx operands[];\n@@ -8968,30 +9266,7 @@ ix86_expand_int_movcc (operands)\n   rtx compare_seq, compare_op;\n   rtx second_test, bypass_test;\n   enum machine_mode mode = GET_MODE (operands[0]);\n-\n-  /* When the compare code is not LTU or GEU, we can not use sbbl case.\n-     In case comparsion is done with immediate, we can convert it to LTU or\n-     GEU by altering the integer.  */\n-\n-  if ((code == LEU || code == GTU)\n-      && GET_CODE (ix86_compare_op1) == CONST_INT\n-      && mode != HImode\n-      && INTVAL (ix86_compare_op1) != -1\n-      /* For x86-64, the immediate field in the instruction is 32-bit\n-\t signed, so we can't increment a DImode value above 0x7fffffff.  */\n-      && (!TARGET_64BIT\n-\t  || GET_MODE (ix86_compare_op0) != DImode\n-\t  || INTVAL (ix86_compare_op1) != 0x7fffffff)\n-      && GET_CODE (operands[2]) == CONST_INT\n-      && GET_CODE (operands[3]) == CONST_INT)\n-    {\n-      if (code == LEU)\n-\tcode = LTU;\n-      else\n-\tcode = GEU;\n-      ix86_compare_op1 = gen_int_mode (INTVAL (ix86_compare_op1) + 1,\n-\t\t\t\t       GET_MODE (ix86_compare_op0));\n-    }\n+  bool sign_bit_compare_p = false;;\n \n   start_sequence ();\n   compare_op = ix86_expand_compare (code, &second_test, &bypass_test);\n@@ -9000,10 +9275,14 @@ ix86_expand_int_movcc (operands)\n \n   compare_code = GET_CODE (compare_op);\n \n+  if ((ix86_compare_op1 == const0_rtx && (code == GE || code == LT))\n+      || (ix86_compare_op1 == constm1_rtx && (code == GT || code == LE)))\n+    sign_bit_compare_p = true;\n+\n   /* Don't attempt mode expansion here -- if we had to expand 5 or 6\n      HImode insns, we'd be swallowed in word prefix ops.  */\n \n-  if (mode != HImode\n+  if ((mode != HImode || TARGET_FAST_PREFIX)\n       && (mode != DImode || TARGET_64BIT)\n       && GET_CODE (operands[2]) == CONST_INT\n       && GET_CODE (operands[3]) == CONST_INT)\n@@ -9013,32 +9292,53 @@ ix86_expand_int_movcc (operands)\n       HOST_WIDE_INT cf = INTVAL (operands[3]);\n       HOST_WIDE_INT diff;\n \n-      if ((compare_code == LTU || compare_code == GEU)\n-\t  && !second_test && !bypass_test)\n+      diff = ct - cf;\n+      /*  Sign bit compares are better done using shifts than we do by using\n+ \t  sbb.  */\n+      if (sign_bit_compare_p\n+\t  || ix86_expand_carry_flag_compare (code, ix86_compare_op0,\n+\t\t\t\t\t     ix86_compare_op1, &compare_op))\n \t{\n \t  /* Detect overlap between destination and compare sources.  */\n \t  rtx tmp = out;\n \n-\t  /* To simplify rest of code, restrict to the GEU case.  */\n-\t  if (compare_code == LTU)\n+          if (!sign_bit_compare_p)\n \t    {\n-\t      HOST_WIDE_INT tmp = ct;\n-\t      ct = cf;\n-\t      cf = tmp;\n-\t      compare_code = reverse_condition (compare_code);\n-\t      code = reverse_condition (code);\n-\t    }\n-\t  diff = ct - cf;\n+\t      compare_code = GET_CODE (compare_op);\n+\n+\t      /* To simplify rest of code, restrict to the GEU case.  */\n+\t      if (compare_code == LTU)\n+\t\t{\n+\t\t  HOST_WIDE_INT tmp = ct;\n+\t\t  ct = cf;\n+\t\t  cf = tmp;\n+\t\t  compare_code = reverse_condition (compare_code);\n+\t\t  code = reverse_condition (code);\n+\t\t}\n+\t      diff = ct - cf;\n \n-\t  if (reg_overlap_mentioned_p (out, ix86_compare_op0)\n-\t      || reg_overlap_mentioned_p (out, ix86_compare_op1))\n-\t    tmp = gen_reg_rtx (mode);\n+\t      if (reg_overlap_mentioned_p (out, ix86_compare_op0)\n+\t\t  || reg_overlap_mentioned_p (out, ix86_compare_op1))\n+\t\ttmp = gen_reg_rtx (mode);\n \n-\t  emit_insn (compare_seq);\n-\t  if (mode == DImode)\n-\t    emit_insn (gen_x86_movdicc_0_m1_rex64 (tmp));\n+\t      if (mode == DImode)\n+\t\temit_insn (gen_x86_movdicc_0_m1_rex64 (tmp));\n+\t      else\n+\t\temit_insn (gen_x86_movsicc_0_m1 (gen_lowpart (SImode, tmp)));\n+\t    }\n \t  else\n-\t    emit_insn (gen_x86_movsicc_0_m1 (tmp));\n+\t    {\n+\t      if (code == GT || code == GE)\n+\t\tcode = reverse_condition (code);\n+\t      else\n+\t\t{\n+\t\t  HOST_WIDE_INT tmp = ct;\n+\t\t  ct = cf;\n+\t\t  cf = tmp;\n+\t\t}\n+\t      tmp = emit_store_flag (tmp, code, ix86_compare_op0,\n+\t\t\t\t     ix86_compare_op1, VOIDmode, 0, -1);\n+\t    }\n \n \t  if (diff == 1)\n \t    {\n@@ -9052,7 +9352,7 @@ ix86_expand_int_movcc (operands)\n \t      if (ct)\n \t       \ttmp = expand_simple_binop (mode, PLUS,\n \t\t\t\t\t   tmp, GEN_INT (ct),\n-\t\t\t\t\t   tmp, 1, OPTAB_DIRECT);\n+\t\t\t\t\t   copy_rtx (tmp), 1, OPTAB_DIRECT);\n \t    }\n \t  else if (cf == -1)\n \t    {\n@@ -9065,7 +9365,7 @@ ix86_expand_int_movcc (operands)\n \t       */\n \t      tmp = expand_simple_binop (mode, IOR,\n \t\t\t\t\t tmp, GEN_INT (ct),\n-\t\t\t\t\t tmp, 1, OPTAB_DIRECT);\n+\t\t\t\t\t copy_rtx (tmp), 1, OPTAB_DIRECT);\n \t    }\n \t  else if (diff == -1 && ct)\n \t    {\n@@ -9077,11 +9377,11 @@ ix86_expand_int_movcc (operands)\n \t       *\n \t       * Size 8 - 11.\n \t       */\n-\t      tmp = expand_simple_unop (mode, NOT, tmp, tmp, 1);\n+\t      tmp = expand_simple_unop (mode, NOT, tmp, copy_rtx (tmp), 1);\n \t      if (cf)\n \t       \ttmp = expand_simple_binop (mode, PLUS,\n-\t\t\t\t\t   tmp, GEN_INT (cf),\n-\t\t\t\t\t   tmp, 1, OPTAB_DIRECT);\n+\t\t\t\t\t   copy_rtx (tmp), GEN_INT (cf),\n+\t\t\t\t\t   copy_rtx (tmp), 1, OPTAB_DIRECT);\n \t    }\n \t  else\n \t    {\n@@ -9099,26 +9399,25 @@ ix86_expand_int_movcc (operands)\n \t\t{\n \t\t  cf = ct;\n \t\t  ct = 0;\n-\t\t  tmp = expand_simple_unop (mode, NOT, tmp, tmp, 1);\n+\t\t  tmp = expand_simple_unop (mode, NOT, tmp, copy_rtx (tmp), 1);\n \t\t}\n \n \t      tmp = expand_simple_binop (mode, AND,\n-\t\t\t\t\t tmp,\n+\t\t\t\t\t copy_rtx (tmp),\n \t\t\t\t\t gen_int_mode (cf - ct, mode),\n-\t\t\t\t\t tmp, 1, OPTAB_DIRECT);\n+\t\t\t\t\t copy_rtx (tmp), 1, OPTAB_DIRECT);\n \t      if (ct)\n \t       \ttmp = expand_simple_binop (mode, PLUS,\n-\t\t\t\t\t   tmp, GEN_INT (ct),\n-\t\t\t\t\t   tmp, 1, OPTAB_DIRECT);\n+\t\t\t\t\t   copy_rtx (tmp), GEN_INT (ct),\n+\t\t\t\t\t   copy_rtx (tmp), 1, OPTAB_DIRECT);\n \t    }\n \n-\t  if (tmp != out)\n-\t    emit_move_insn (out, tmp);\n+\t  if (!rtx_equal_p (tmp, out))\n+\t    emit_move_insn (copy_rtx (out), copy_rtx (tmp));\n \n \t  return 1; /* DONE */\n \t}\n \n-      diff = ct - cf;\n       if (diff < 0)\n \t{\n \t  HOST_WIDE_INT tmp;\n@@ -9194,8 +9493,10 @@ ix86_expand_int_movcc (operands)\n \t    }\n \t}\n \n+\n       if ((diff == 1 || diff == 2 || diff == 4 || diff == 8\n \t   || diff == 3 || diff == 5 || diff == 9)\n+\t  && ((mode != QImode && mode != HImode) || !TARGET_PARTIAL_REG_STALL)\n \t  && (mode != DImode || x86_64_sign_extended_value (GEN_INT (cf))))\n \t{\n \t  /*\n@@ -9237,15 +9538,14 @@ ix86_expand_int_movcc (operands)\n \t      tmp = gen_rtx_PLUS (mode, tmp, GEN_INT (cf));\n \t      nops++;\n \t    }\n-\t  if (tmp != out\n-\t      && (GET_CODE (tmp) != SUBREG || SUBREG_REG (tmp) != out))\n+\t  if (!rtx_equal_p (tmp, out))\n \t    {\n \t      if (nops == 1)\n \t\tout = force_operand (tmp, out);\n \t      else\n-\t\temit_insn (gen_rtx_SET (VOIDmode, out, tmp));\n+\t\temit_insn (gen_rtx_SET (VOIDmode, copy_rtx (out), copy_rtx (tmp)));\n \t    }\n-\t  if (out != operands[0])\n+\t  if (!rtx_equal_p (out, operands[0]))\n \t    emit_move_insn (operands[0], copy_rtx (out));\n \n \t  return 1; /* DONE */\n@@ -9265,12 +9565,10 @@ ix86_expand_int_movcc (operands)\n        * This is reasonably steep, but branch mispredict costs are\n        * high on modern cpus, so consider failing only if optimizing\n        * for space.\n-       *\n-       * %%% Parameterize branch_cost on the tuning architecture, then\n-       * use that.  The 80386 couldn't care less about mispredicts.\n        */\n \n-      if (!optimize_size && !TARGET_CMOVE)\n+      if ((!TARGET_CMOVE || (mode == QImode && TARGET_PARTIAL_REG_STALL))\n+\t  && BRANCH_COST >= 2)\n \t{\n \t  if (cf == 0)\n \t    {\n@@ -9324,31 +9622,31 @@ ix86_expand_int_movcc (operands)\n \t      out = emit_store_flag (out, code, ix86_compare_op0,\n \t\t\t\t     ix86_compare_op1, VOIDmode, 0, 1);\n \n-\t      out = expand_simple_binop (mode, PLUS, out, constm1_rtx,\n-\t\t\t\t\t out, 1, OPTAB_DIRECT);\n+\t      out = expand_simple_binop (mode, PLUS, copy_rtx (out), constm1_rtx,\n+\t\t\t\t\t copy_rtx (out), 1, OPTAB_DIRECT);\n \t    }\n \n-\t  out = expand_simple_binop (mode, AND, out,\n+\t  out = expand_simple_binop (mode, AND, copy_rtx (out),\n \t\t\t\t     gen_int_mode (cf - ct, mode),\n-\t\t\t\t     out, 1, OPTAB_DIRECT);\n+\t\t\t\t     copy_rtx (out), 1, OPTAB_DIRECT);\n \t  if (ct)\n-\t    out = expand_simple_binop (mode, PLUS, out, GEN_INT (ct),\n-\t\t\t\t       out, 1, OPTAB_DIRECT);\n-\t  if (out != operands[0])\n-\t    emit_move_insn (operands[0], out);\n+\t    out = expand_simple_binop (mode, PLUS, copy_rtx (out), GEN_INT (ct),\n+\t\t\t\t       copy_rtx (out), 1, OPTAB_DIRECT);\n+\t  if (!rtx_equal_p (out, operands[0]))\n+\t    emit_move_insn (operands[0], copy_rtx (out));\n \n \t  return 1; /* DONE */\n \t}\n     }\n \n-  if (!TARGET_CMOVE)\n+  if (!TARGET_CMOVE || (mode == QImode && TARGET_PARTIAL_REG_STALL))\n     {\n       /* Try a few things more with specific constants and a variable.  */\n \n       optab op;\n       rtx var, orig_out, out, tmp;\n \n-      if (optimize_size)\n+      if (BRANCH_COST <= 2)\n \treturn 0; /* FAIL */\n \n       /* If one of the two operands is an interesting constant, load a\n@@ -9357,19 +9655,19 @@ ix86_expand_int_movcc (operands)\n       if (GET_CODE (operands[2]) == CONST_INT)\n \t{\n \t  var = operands[3];\n-\t  if (INTVAL (operands[2]) == 0)\n+\t  if (INTVAL (operands[2]) == 0 && operands[3] != constm1_rtx)\n \t    operands[3] = constm1_rtx, op = and_optab;\n-\t  else if (INTVAL (operands[2]) == -1)\n+\t  else if (INTVAL (operands[2]) == -1 && operands[3] != const0_rtx)\n \t    operands[3] = const0_rtx, op = ior_optab;\n \t  else\n \t    return 0; /* FAIL */\n \t}\n       else if (GET_CODE (operands[3]) == CONST_INT)\n \t{\n \t  var = operands[2];\n-\t  if (INTVAL (operands[3]) == 0)\n+\t  if (INTVAL (operands[3]) == 0 && operands[2] != constm1_rtx)\n \t    operands[2] = constm1_rtx, op = and_optab;\n-\t  else if (INTVAL (operands[3]) == -1)\n+\t  else if (INTVAL (operands[3]) == -1 && operands[3] != const0_rtx)\n \t    operands[2] = const0_rtx, op = ior_optab;\n \t  else\n \t    return 0; /* FAIL */\n@@ -9388,8 +9686,8 @@ ix86_expand_int_movcc (operands)\n       /* Mask in the interesting variable.  */\n       out = expand_binop (mode, op, var, tmp, orig_out, 0,\n \t\t\t  OPTAB_WIDEN);\n-      if (out != orig_out)\n-\temit_move_insn (orig_out, out);\n+      if (!rtx_equal_p (out, orig_out))\n+\temit_move_insn (copy_rtx (orig_out), copy_rtx (out));\n \n       return 1; /* DONE */\n     }\n@@ -9422,27 +9720,33 @@ ix86_expand_int_movcc (operands)\n       emit_move_insn (tmp, operands[2]);\n       operands[2] = tmp;\n     }\n+\n   if (! register_operand (operands[2], VOIDmode)\n-      && ! register_operand (operands[3], VOIDmode))\n+      && (mode == QImode \n+          || ! register_operand (operands[3], VOIDmode)))\n     operands[2] = force_reg (mode, operands[2]);\n \n+  if (mode == QImode\n+      && ! register_operand (operands[3], VOIDmode))\n+    operands[3] = force_reg (mode, operands[3]);\n+\n   emit_insn (compare_seq);\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n \t\t\t  gen_rtx_IF_THEN_ELSE (mode,\n \t\t\t\t\t\tcompare_op, operands[2],\n \t\t\t\t\t\toperands[3])));\n   if (bypass_test)\n-    emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+    emit_insn (gen_rtx_SET (VOIDmode, copy_rtx (operands[0]),\n \t\t\t    gen_rtx_IF_THEN_ELSE (mode,\n \t\t\t\t  bypass_test,\n-\t\t\t\t  operands[3],\n-\t\t\t\t  operands[0])));\n+\t\t\t\t  copy_rtx (operands[3]),\n+\t\t\t\t  copy_rtx (operands[0]))));\n   if (second_test)\n-    emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+    emit_insn (gen_rtx_SET (VOIDmode, copy_rtx (operands[0]),\n \t\t\t    gen_rtx_IF_THEN_ELSE (mode,\n \t\t\t\t  second_test,\n-\t\t\t\t  operands[2],\n-\t\t\t\t  operands[0])));\n+\t\t\t\t  copy_rtx (operands[2]),\n+\t\t\t\t  copy_rtx (operands[0]))));\n \n   return 1; /* DONE */\n }\n@@ -9483,8 +9787,14 @@ ix86_expand_fp_movcc (operands)\n       if (rtx_equal_p (operands[2], op0) && rtx_equal_p (operands[3], op1))\n \t{\n \t  /* Check for min operation.  */\n-\t  if (code == LT)\n+\t  if (code == LT || code == UNLE)\n \t    {\n+\t       if (code == UNLE)\n+\t\t{\n+\t\t  rtx tmp = op0;\n+\t\t  op0 = op1;\n+\t\t  op1 = tmp;\n+\t\t}\n \t       operands[0] = force_reg (GET_MODE (operands[0]), operands[0]);\n \t       if (memory_operand (op0, VOIDmode))\n \t\t op0 = force_reg (GET_MODE (operands[0]), op0);\n@@ -9495,8 +9805,14 @@ ix86_expand_fp_movcc (operands)\n \t       return 1;\n \t    }\n \t  /* Check for max operation.  */\n-\t  if (code == GT)\n+\t  if (code == GT || code == UNGE)\n \t    {\n+\t       if (code == UNGE)\n+\t\t{\n+\t\t  rtx tmp = op0;\n+\t\t  op0 = op1;\n+\t\t  op1 = tmp;\n+\t\t}\n \t       operands[0] = force_reg (GET_MODE (operands[0]), operands[0]);\n \t       if (memory_operand (op0, VOIDmode))\n \t\t op0 = force_reg (GET_MODE (operands[0]), op0);\n@@ -10242,8 +10558,12 @@ ix86_expand_movstr (dst, src, count_exp, align_exp)\n \n       /* In case we don't know anything about the alignment, default to\n          library version, since it is usually equally fast and result in\n-         shorter code.  */\n-      if (!TARGET_INLINE_ALL_STRINGOPS && align < UNITS_PER_WORD)\n+         shorter code. \n+\n+\t Also emit call when we know that the count is large and call overhead\n+\t will not be important.  */\n+      if (!TARGET_INLINE_ALL_STRINGOPS\n+\t  && (align < UNITS_PER_WORD || !TARGET_REP_MOVL_OPTIMAL))\n \t{\n \t  end_sequence ();\n \t  return 0;\n@@ -10457,8 +10777,12 @@ ix86_expand_clrstr (src, count_exp, align_exp)\n \n       /* In case we don't know anything about the alignment, default to\n          library version, since it is usually equally fast and result in\n-         shorter code.  */\n-      if (!TARGET_INLINE_ALL_STRINGOPS && align < UNITS_PER_WORD)\n+         shorter code.\n+\n+\t Also emit call when we know that the count is large and call overhead\n+\t will not be important.  */\n+      if (!TARGET_INLINE_ALL_STRINGOPS\n+\t  && (align < UNITS_PER_WORD || !TARGET_REP_MOVL_OPTIMAL))\n \treturn 0;\n \n       if (TARGET_SINGLE_STRINGOP)\n@@ -10828,8 +11152,9 @@ ix86_expand_strlensi_unroll_1 (out, align_rtx)\n }\n \n void\n-ix86_expand_call (retval, fnaddr, callarg1, callarg2, pop)\n+ix86_expand_call (retval, fnaddr, callarg1, callarg2, pop, sibcall)\n      rtx retval, fnaddr, callarg1, callarg2, pop;\n+     int sibcall;\n {\n   rtx use = NULL, call;\n \n@@ -10861,6 +11186,15 @@ ix86_expand_call (retval, fnaddr, callarg1, callarg2, pop)\n       fnaddr = copy_to_mode_reg (Pmode, XEXP (fnaddr, 0));\n       fnaddr = gen_rtx_MEM (QImode, fnaddr);\n     }\n+  if (sibcall && TARGET_64BIT\n+      && !constant_call_address_operand (XEXP (fnaddr, 0), Pmode))\n+    {\n+      rtx addr;\n+      addr = copy_to_mode_reg (Pmode, XEXP (fnaddr, 0));\n+      fnaddr = gen_rtx_REG (Pmode, 40);\n+      emit_move_insn (fnaddr, addr);\n+      fnaddr = gen_rtx_MEM (QImode, fnaddr);\n+    }\n \n   call = gen_rtx_CALL (VOIDmode, fnaddr, callarg1);\n   if (retval)\n@@ -11060,6 +11394,7 @@ ix86_issue_rate ()\n     case PROCESSOR_PENTIUMPRO:\n     case PROCESSOR_PENTIUM4:\n     case PROCESSOR_ATHLON:\n+    case PROCESSOR_K8:\n       return 3;\n \n     default:\n@@ -11271,16 +11606,10 @@ ix86_adjust_cost (insn, link, dep_insn, cost)\n       break;\n \n     case PROCESSOR_ATHLON:\n+    case PROCESSOR_K8:\n       memory = get_attr_memory (insn);\n       dep_memory = get_attr_memory (dep_insn);\n \n-      if (dep_memory == MEMORY_LOAD || dep_memory == MEMORY_BOTH)\n-\t{\n-\t  if (dep_insn_type == TYPE_IMOV || dep_insn_type == TYPE_FMOV)\n-\t    cost += 2;\n-\t  else\n-\t    cost += 3;\n-        }\n       /* Show ability of reorder buffer to hide latency of load by executing\n \t in parallel with previous instruction in case\n \t previous instruction is not needed to compute the address.  */\n@@ -11554,7 +11883,7 @@ ix86_variable_issue (dump, sched_verbose, insn, can_issue_more)\n static int\n ia32_use_dfa_pipeline_interface ()\n {\n-  if (ix86_cpu == PROCESSOR_PENTIUM)\n+  if (TARGET_PENTIUM || TARGET_ATHLON_K8)\n     return 1;\n   return 0;\n }\n@@ -12764,7 +13093,8 @@ safe_vector_operand (x, mode)\n \t\t\t      : gen_rtx_SUBREG (DImode, x, 0)));\n   else\n     emit_insn (gen_sse_clrv4sf (mode == V4SFmode ? x\n-\t\t\t\t: gen_rtx_SUBREG (V4SFmode, x, 0)));\n+\t\t\t\t: gen_rtx_SUBREG (V4SFmode, x, 0),\n+\t\t\t\tCONST0_RTX (V4SFmode)));\n   return x;\n }\n \n@@ -13434,7 +13764,7 @@ ix86_expand_builtin (exp, target, subtarget, mode, ignore)\n \n     case IX86_BUILTIN_SSE_ZERO:\n       target = gen_reg_rtx (V4SFmode);\n-      emit_insn (gen_sse_clrv4sf (target));\n+      emit_insn (gen_sse_clrv4sf (target, CONST0_RTX (V4SFmode)));\n       return target;\n \n     case IX86_BUILTIN_MMX_ZERO:\n@@ -14058,6 +14388,17 @@ x86_order_regs_for_local_alloc ()\n      reg_alloc_order [pos++] = 0;\n }\n \n+#ifndef TARGET_USE_MS_BITFIELD_LAYOUT\n+#define TARGET_USE_MS_BITFIELD_LAYOUT 0\n+#endif\n+\n+static bool\n+ix86_ms_bitfield_layout_p (record_type)\n+     tree record_type ATTRIBUTE_UNUSED;\n+{\n+  return TARGET_USE_MS_BITFIELD_LAYOUT;\n+}\n+\n /* Returns an expression indicating where the this parameter is\n    located on entry to the FUNCTION.  */\n \n@@ -14317,7 +14658,7 @@ x86_machine_dependent_reorg (first)\n {\n   edge e;\n \n-  if (!TARGET_ATHLON || !optimize || optimize_size)\n+  if (!TARGET_ATHLON_K8 || !optimize || optimize_size)\n     return;\n   for (e = EXIT_BLOCK_PTR->pred; e; e = e->pred_next)\n   {\n@@ -14328,25 +14669,69 @@ x86_machine_dependent_reorg (first)\n \n     if (!returnjump_p (ret) || !maybe_hot_bb_p (bb))\n       continue;\n-    prev = prev_nonnote_insn (ret);\n+    for (prev = PREV_INSN (ret); prev; prev = PREV_INSN (prev))\n+      if (active_insn_p (prev) || GET_CODE (prev) == CODE_LABEL)\n+\tbreak;\n     if (prev && GET_CODE (prev) == CODE_LABEL)\n       {\n \tedge e;\n \tfor (e = bb->pred; e; e = e->pred_next)\n-\t  if (EDGE_FREQUENCY (e) && e->src->index > 0\n+\t  if (EDGE_FREQUENCY (e) && e->src->index >= 0\n \t      && !(e->flags & EDGE_FALLTHRU))\n \t    insert = 1;\n       }\n     if (!insert)\n       {\n-\tprev = prev_real_insn (ret);\n+\tprev = prev_active_insn (ret);\n \tif (prev && GET_CODE (prev) == JUMP_INSN\n \t    && any_condjump_p (prev))\n \t  insert = 1;\n+\t/* Empty functions get branch misspredict even when the jump destination\n+\t   is not visible to us.  */\n+\tif (!prev && cfun->function_frequency > FUNCTION_FREQUENCY_UNLIKELY_EXECUTED)\n+\t  insert = 1;\n       }\n     if (insert)\n       emit_insn_before (gen_nop (), ret);\n   }\n }\n \n+/* Return nonzero when QImode register that must be represented via REX prefix\n+   is used.  */\n+bool\n+x86_extended_QIreg_mentioned_p (insn)\n+     rtx insn;\n+{\n+  int i;\n+  extract_insn_cached (insn);\n+  for (i = 0; i < recog_data.n_operands; i++)\n+    if (REG_P (recog_data.operand[i])\n+\t&& REGNO (recog_data.operand[i]) >= 4)\n+       return true;\n+  return false;\n+}\n+\n+/* Return nonzero when P points to register encoded via REX prefix.\n+   Called via for_each_rtx.  */\n+static int\n+extended_reg_mentioned_1 (p, data)\n+\trtx *p;\n+\tvoid *data ATTRIBUTE_UNUSED;\n+{\n+   unsigned int regno;\n+   if (!REG_P (*p))\n+     return 0;\n+   regno = REGNO (*p);\n+   return REX_INT_REGNO_P (regno) || REX_SSE_REGNO_P (regno);\n+}\n+\n+/* Return true when INSN mentions register that must be encoded using REX\n+   prefix.  */\n+bool\n+x86_extended_reg_mentioned_p (insn)\n+     rtx insn;\n+{\n+  return for_each_rtx (&PATTERN (insn), extended_reg_mentioned_1, NULL);\n+}\n+\n #include \"gt-i386.h\""}, {"sha": "c1f40dc209c12a6eaf1e542118f1936e01201060", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 56, "deletions": 31, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -41,9 +41,11 @@ struct processor_costs {\n   const int lea;\t\t/* cost of a lea instruction */\n   const int shift_var;\t\t/* variable shift costs */\n   const int shift_const;\t/* constant shift costs */\n-  const int mult_init;\t\t/* cost of starting a multiply */\n+  const int mult_init[5];\t/* cost of starting a multiply \n+\t\t\t\t   in QImode, HImode, SImode, DImode, TImode*/\n   const int mult_bit;\t\t/* cost of multiply per each bit set */\n-  const int divide;\t\t/* cost of a divide/mod */\n+  const int divide[5];\t\t/* cost of a divide/mod \n+\t\t\t\t   in QImode, HImode, SImode, DImode, TImode*/\n   int movsx;\t\t\t/* The cost of movsx operation.  */\n   int movzx;\t\t\t/* The cost of movzx operation.  */\n   const int large_insn;\t\t/* insns larger than this cost more */\n@@ -75,6 +77,7 @@ struct processor_costs {\n   const int prefetch_block;\t/* bytes moved to cache for prefetch.  */\n   const int simultaneous_prefetches; /* number of parallel prefetch\n \t\t\t\t   operations.  */\n+  const int branch_cost;\t/* Default value for BRANCH_COST.  */\n   const int fadd;\t\t/* cost of FADD and FSUB instructions.  */\n   const int fmul;\t\t/* cost of FMUL instruction.  */\n   const int fdiv;\t\t/* cost of FDIV instruction.  */\n@@ -118,8 +121,9 @@ extern int target_flags;\n #define MASK_3DNOW_A\t\t0x00020000\t/* Support Athlon 3Dnow builtins */\n #define MASK_128BIT_LONG_DOUBLE 0x00040000\t/* long double size is 128bit */\n #define MASK_64BIT\t\t0x00080000\t/* Produce 64bit code */\n+#define MASK_MS_BITFIELD_LAYOUT 0x00100000\t/* Use native (MS) bitfield layout */\n \n-/* Unused:\t\t\t0x03f0000\t*/\n+/* Unused:\t\t\t0x03e0000\t*/\n \n /* ... overlap with subtarget options starts by 0x04000000.  */\n #define MASK_NO_RED_ZONE\t0x04000000\t/* Do not use red zone */\n@@ -204,6 +208,8 @@ extern int target_flags;\n #define TARGET_K6 (ix86_cpu == PROCESSOR_K6)\n #define TARGET_ATHLON (ix86_cpu == PROCESSOR_ATHLON)\n #define TARGET_PENTIUM4 (ix86_cpu == PROCESSOR_PENTIUM4)\n+#define TARGET_K8 (ix86_cpu == PROCESSOR_K8)\n+#define TARGET_ATHLON_K8 (TARGET_K8 || TARGET_ATHLON)\n \n #define CPUMASK (1 << ix86_cpu)\n extern const int x86_use_leave, x86_push_memory, x86_zero_extend_with_and;\n@@ -221,6 +227,9 @@ extern const int x86_partial_reg_dependency, x86_memory_mismatch_stall;\n extern const int x86_accumulate_outgoing_args, x86_prologue_using_move;\n extern const int x86_epilogue_using_move, x86_decompose_lea;\n extern const int x86_arch_always_fancy_math_387, x86_shift1;\n+extern const int x86_sse_partial_reg_dependency, x86_sse_partial_regs;\n+extern const int x86_sse_typeless_stores, x86_sse_load0_by_pxor;\n+extern const int x86_use_ffreep, x86_sse_partial_regs_for_cvtsd2ss;\n extern int x86_prefetch_sse;\n \n #define TARGET_USE_LEAVE (x86_use_leave & CPUMASK)\n@@ -257,12 +266,22 @@ extern int x86_prefetch_sse;\n #define TARGET_SUB_ESP_8 (x86_sub_esp_8 & CPUMASK)\n #define TARGET_INTEGER_DFMODE_MOVES (x86_integer_DFmode_moves & CPUMASK)\n #define TARGET_PARTIAL_REG_DEPENDENCY (x86_partial_reg_dependency & CPUMASK)\n+#define TARGET_SSE_PARTIAL_REG_DEPENDENCY \\\n+\t\t\t\t      (x86_sse_partial_reg_dependency & CPUMASK)\n+#define TARGET_SSE_PARTIAL_REGS (x86_sse_partial_regs & CPUMASK)\n+#define TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS \\\n+\t\t\t\t(x86_sse_partial_regs_for_cvtsd2ss & CPUMASK)\n+#define TARGET_SSE_TYPELESS_STORES (x86_sse_typeless_stores & CPUMASK)\n+#define TARGET_SSE_TYPELESS_LOAD0 (x86_sse_typeless_load0 & CPUMASK)\n+#define TARGET_SSE_LOAD0_BY_PXOR (x86_sse_load0_by_pxor & CPUMASK)\n #define TARGET_MEMORY_MISMATCH_STALL (x86_memory_mismatch_stall & CPUMASK)\n #define TARGET_PROLOGUE_USING_MOVE (x86_prologue_using_move & CPUMASK)\n #define TARGET_EPILOGUE_USING_MOVE (x86_epilogue_using_move & CPUMASK)\n #define TARGET_DECOMPOSE_LEA (x86_decompose_lea & CPUMASK)\n #define TARGET_PREFETCH_SSE (x86_prefetch_sse)\n #define TARGET_SHIFT1 (x86_shift1 & CPUMASK)\n+#define TARGET_USE_FFREEP (x86_use_ffreep & CPUMASK)\n+#define TARGET_REP_MOVL_OPTIMAL (x86_rep_movl_optimal & CPUMASK)\n \n #define TARGET_STACK_PROBE (target_flags & MASK_STACK_PROBE)\n \n@@ -282,6 +301,8 @@ extern int x86_prefetch_sse;\n \n #define TARGET_RED_ZONE (!(target_flags & MASK_NO_RED_ZONE))\n \n+#define TARGET_USE_MS_BITFIELD_LAYOUT  (target_flags & MASK_MS_BITFIELD_LAYOUT)\n+\n #define TARGET_GNU_TLS (ix86_tls_dialect == TLS_DIALECT_GNU)\n #define TARGET_SUN_TLS (ix86_tls_dialect == TLS_DIALECT_SUN)\n \n@@ -374,6 +395,10 @@ extern int x86_prefetch_sse;\n     N_(\"Generate 64bit x86-64 code\") },\t\t\t\t\t      \\\n   { \"32\",\t\t\t-MASK_64BIT,\t\t\t\t      \\\n     N_(\"Generate 32bit i386 code\") },\t\t\t\t\t      \\\n+  { \"ms-bitfields\",\t\tMASK_MS_BITFIELD_LAYOUT,\t\t      \\\n+    N_(\"Use native (MS) bitfield layout\") },\t\t\t\t      \\\n+  { \"no-ms-bitfields\",\t\t-MASK_MS_BITFIELD_LAYOUT,\t\t      \\\n+    N_(\"Use gcc default bitfield layout\") },\t\t\t\t      \\\n   { \"red-zone\",\t\t\t-MASK_NO_RED_ZONE,\t\t\t      \\\n     N_(\"Use red-zone in the x86-64 code\") },\t\t\t\t      \\\n   { \"no-red-zone\",\t\tMASK_NO_RED_ZONE,\t\t\t      \\\n@@ -540,6 +565,8 @@ extern int x86_prefetch_sse;\n \t  if (last_cpu_char != 'n')\t\t\t\t\\\n \t    builtin_define (\"__tune_athlon_sse__\");\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (TARGET_K8)\t\t\t\t\t\\\n+\tbuiltin_define (\"__tune_k8__\");\t\t\t\t\\\n       else if (TARGET_PENTIUM4)\t\t\t\t\t\\\n \tbuiltin_define (\"__tune_pentium4__\");\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -598,6 +625,11 @@ extern int x86_prefetch_sse;\n \t  if (last_arch_char != 'n')\t\t\t\t\\\n \t    builtin_define (\"__athlon_sse__\");\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_K8)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__k8\");\t\t\t\t\\\n+\t  builtin_define (\"__k8__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n       else if (ix86_arch == PROCESSOR_PENTIUM4)\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__pentium4\");\t\t\t\\\n@@ -619,11 +651,12 @@ extern int x86_prefetch_sse;\n #define TARGET_CPU_DEFAULT_k6_3 10\n #define TARGET_CPU_DEFAULT_athlon 11\n #define TARGET_CPU_DEFAULT_athlon_sse 12\n+#define TARGET_CPU_DEFAULT_k8 13\n \n #define TARGET_CPU_DEFAULT_NAMES {\"i386\", \"i486\", \"pentium\", \"pentium-mmx\",\\\n \t\t\t\t  \"pentiumpro\", \"pentium2\", \"pentium3\", \\\n \t\t\t\t  \"pentium4\", \"k6\", \"k6-2\", \"k6-3\",\\\n-\t\t\t\t  \"athlon\", \"athlon-4\"}\n+\t\t\t\t  \"athlon\", \"athlon-4\", \"k8\"}\n \n #ifndef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) \"\n@@ -1335,6 +1368,9 @@ enum reg_class\n   (((N) >= FIRST_SSE_REG && (N) <= LAST_SSE_REG) \\\n    || ((N) >= FIRST_REX_SSE_REG && (N) <= LAST_REX_SSE_REG))\n \n+#define REX_SSE_REGNO_P(N) \\\n+   ((N) >= FIRST_REX_SSE_REG && (N) <= LAST_REX_SSE_REG)\n+\n #define SSE_REGNO(N) \\\n   ((N) < 8 ? FIRST_SSE_REG + (N) : FIRST_REX_SSE_REG + (N) - 8)\n #define SSE_REG_P(N) (REG_P (N) && SSE_REGNO_P (REGNO (N)))\n@@ -1716,18 +1752,6 @@ typedef struct ix86_args {\n \n #define FUNCTION_ARG_PARTIAL_NREGS(CUM, MODE, TYPE, NAMED) 0\n \n-/* If PIC, we cannot make sibling calls to global functions\n-   because the PLT requires %ebx live.\n-   If we are returning floats on the register stack, we cannot make\n-   sibling calls to functions that return floats.  (The stack adjust\n-   instruction will wind up after the sibcall jump, and not be executed.) */\n-#define FUNCTION_OK_FOR_SIBCALL(DECL)\t\t\t\t\t\\\n-  ((DECL)\t\t\t\t\t\t\t\t\\\n-   && (! flag_pic || ! TREE_PUBLIC (DECL))\t\t\t\t\\\n-   && (! TARGET_FLOAT_RETURNS_IN_80387\t\t\t\t\t\\\n-       || ! FLOAT_MODE_P (TYPE_MODE (TREE_TYPE (TREE_TYPE (DECL))))\t\\\n-       || FLOAT_MODE_P (TYPE_MODE (TREE_TYPE (TREE_TYPE (cfun->decl))))))\n-\n /* Perform any needed actions needed for a function that is receiving a\n    variable number of arguments.\n \n@@ -1839,12 +1863,6 @@ typedef struct ix86_args {\n \f\n /* Addressing modes, and classification of registers for them.  */\n \n-/* #define HAVE_POST_INCREMENT 0 */\n-/* #define HAVE_POST_DECREMENT 0 */\n-\n-/* #define HAVE_PRE_DECREMENT 0 */\n-/* #define HAVE_PRE_INCREMENT 0 */\n-\n /* Macros to check register numbers against specific register classes.  */\n \n /* These assume that REGNO is a hard or pseudo reg number.\n@@ -2602,6 +2620,14 @@ do {\t\t\t\t\t\t\t\\\n #define TOPLEVEL_COSTS_N_INSNS(N) \\\n   do { total = COSTS_N_INSNS (N); goto egress_rtx_costs; } while (0)\n \n+/* Return index of given mode in mult and division cost tables.  */\n+#define MODE_INDEX(mode)\t\t\t\t\t\\\n+  ((mode) == QImode ? 0\t\t\t\t\t\t\\\n+   : (mode) == HImode ? 1\t\t\t\t\t\\\n+   : (mode) == SImode ? 2\t\t\t\t\t\\\n+   : (mode) == DImode ? 3\t\t\t\t\t\\\n+   : 4)\n+\n /* Like `CONST_COSTS' but applies to nonconstant RTL expressions.\n    This can be used, for example, to indicate how costly a multiply\n    instruction is.  In writing this macro, you can use the construct\n@@ -2687,10 +2713,12 @@ do {\t\t\t\t\t\t\t\\\n \t  } \t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tTOPLEVEL_COSTS_N_INSNS (ix86_cost->mult_init\t\t\t\\\n+\t\t\t\t[MODE_INDEX (GET_MODE (X))]\t\t\\\n \t\t\t        + nbits * ix86_cost->mult_bit);\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t/* This is arbitrary */\t\t\t\\\n       TOPLEVEL_COSTS_N_INSNS (ix86_cost->mult_init\t\t\t\\\n+\t\t\t      [MODE_INDEX (GET_MODE (X))]\t\t\\\n \t\t\t      + 7 * ix86_cost->mult_bit);\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   case DIV:\t\t\t\t\t\t\t\t\\\n@@ -2700,7 +2728,8 @@ do {\t\t\t\t\t\t\t\\\n     if (FLOAT_MODE_P (GET_MODE (X)))\t\t\t\t\t\\\n       TOPLEVEL_COSTS_N_INSNS (ix86_cost->fdiv);\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n-      TOPLEVEL_COSTS_N_INSNS (ix86_cost->divide);\t\t\t\\\n+      TOPLEVEL_COSTS_N_INSNS (ix86_cost->divide\t\t\t\t\\\n+\t\t\t      [MODE_INDEX (GET_MODE (X))]);\t\t\\\n     break;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   case PLUS:\t\t\t\t\t\t\t\t\\\n@@ -3040,14 +3069,6 @@ extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER];\n     ? ((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4\\\n    : DW_EH_PE_absptr)\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n \n@@ -3241,6 +3262,7 @@ do {\t\t\t\t\t\t\\\n \t\t       LABEL_REF, SUBREG, REG, MEM}},\t\t\t\\\n   {\"pic_symbolic_operand\", {CONST}},\t\t\t\t\t\\\n   {\"call_insn_operand\", {REG, SUBREG, MEM, SYMBOL_REF}},\t\t\\\n+  {\"sibcall_insn_operand\", {REG, SUBREG, SYMBOL_REF}},\t\t\t\\\n   {\"constant_call_address_operand\", {SYMBOL_REF, CONST}},\t\t\\\n   {\"const0_operand\", {CONST_INT, CONST_DOUBLE}},\t\t\t\\\n   {\"const1_operand\", {CONST_INT}},\t\t\t\t\t\\\n@@ -3252,6 +3274,7 @@ do {\t\t\t\t\t\t\\\n \t\t\tSYMBOL_REF, LABEL_REF, SUBREG, REG, MEM}},\t\\\n   {\"nonmemory_no_elim_operand\", {CONST_INT, REG, SUBREG}},\t\t\\\n   {\"index_register_operand\", {SUBREG, REG}},\t\t\t\t\\\n+  {\"flags_reg_operand\", {REG}},\t\t\t\t\t\t\\\n   {\"q_regs_operand\", {SUBREG, REG}},\t\t\t\t\t\\\n   {\"non_q_regs_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"fcmov_comparison_operator\", {EQ, NE, LTU, GTU, LEU, GEU, UNORDERED, \\\n@@ -3286,6 +3309,7 @@ do {\t\t\t\t\t\t\\\n   {\"register_and_not_any_fp_reg_operand\", {REG}},\t\t\t\\\n   {\"fp_register_operand\", {REG}},\t\t\t\t\t\\\n   {\"register_and_not_fp_reg_operand\", {REG}},\t\t\t\t\\\n+  {\"zero_extended_scalar_load_operand\", {MEM}},\t\t\t\t\\\n \n /* A list of predicates that do special things with modes, and so\n    should not elicit warnings for VOIDmode match_operand.  */\n@@ -3305,6 +3329,7 @@ enum processor_type\n   PROCESSOR_K6,\n   PROCESSOR_ATHLON,\n   PROCESSOR_PENTIUM4,\n+  PROCESSOR_K8,\n   PROCESSOR_max\n };\n "}, {"sha": "d625f586d46dc1715b6f6f4cac27e7c4ed47d1cf", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1008, "deletions": 414, "changes": 1422, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -132,7 +132,7 @@\n \f\n ;; Processor type.  This attribute must exactly match the processor_type\n ;; enumeration in i386.h.\n-(define_attr \"cpu\" \"i386,i486,pentium,pentiumpro,k6,athlon,pentium4\"\n+(define_attr \"cpu\" \"i386,i486,pentium,pentiumpro,k6,athlon,pentium4,k8\"\n   (const (symbol_ref \"ix86_cpu\")))\n \n ;; A basic instruction type.  Refinements due to arguments to be\n@@ -142,7 +142,7 @@\n    alu,alu1,negnot,imov,imovx,lea,\n    incdec,ishift,ishift1,rotate,rotate1,imul,idiv,\n    icmp,test,ibr,setcc,icmov,\n-   push,pop,call,callv,\n+   push,pop,call,callv,leave,\n    str,cld,\n    fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,fistp,\n    sselog,sseiadd,sseishft,sseimul,\n@@ -152,7 +152,7 @@\n \n ;; Main data type used by the insn\n (define_attr \"mode\"\n-  \"unknown,none,QI,HI,SI,DI,unknownfp,SF,DF,XF,TI,V4SF,V2DF,V2SF\"\n+  \"unknown,none,QI,HI,SI,DI,SF,DF,XF,TI,V4SF,V2DF,V2SF\"\n   (const_string \"unknown\"))\n \n ;; The CPU unit operations uses.\n@@ -170,7 +170,7 @@\n \n ;; The (bounding maximum) length of an instruction immediate.\n (define_attr \"length_immediate\" \"\"\n-  (cond [(eq_attr \"type\" \"incdec,setcc,icmov,str,cld,lea,other,multi,idiv\")\n+  (cond [(eq_attr \"type\" \"incdec,setcc,icmov,str,cld,lea,other,multi,idiv,leave\")\n \t   (const_int 0)\n \t (eq_attr \"unit\" \"i387,sse,mmx\")\n \t   (const_int 0)\n@@ -232,9 +232,24 @@\n     (const_int 1)\n     (const_int 0)))\n \n+;; Set when 0f opcode prefix is used.\n+(define_attr \"prefix_rex\" \"\"\n+  (cond [(and (eq_attr \"mode\" \"DI\")\n+  \t      (eq_attr \"type\" \"!push,pop,call,callv,leave,ibr\"))\n+\t   (const_int 1)\n+\t (and (eq_attr \"mode\" \"QI\")\n+\t      (ne (symbol_ref \"x86_extended_QIreg_mentioned_p (insn)\")\n+\t\t  (const_int 0)))\n+\t   (const_int 1)\n+\t (ne (symbol_ref \"x86_extended_reg_mentioned_p (insn)\")\n+\t     (const_int 0))\n+\t   (const_int 1)\n+\t]\n+\t(const_int 0)))\n+\n ;; Set when modrm byte is used.\n (define_attr \"modrm\" \"\"\n-  (cond [(eq_attr \"type\" \"str,cld\")\n+  (cond [(eq_attr \"type\" \"str,cld,leave\")\n \t   (const_int 0)\n \t (eq_attr \"unit\" \"i387\")\n \t   (const_int 0)\n@@ -273,7 +288,8 @@\n \t\t       (attr \"length_address\")))]\n \t (plus (plus (attr \"modrm\")\n \t\t     (plus (attr \"prefix_0f\")\n-\t\t\t   (const_int 1)))\n+\t\t\t   (plus (attr \"prefix_rex\")\n+\t\t\t\t (const_int 1))))\n \t       (plus (attr \"prefix_rep\")\n \t\t     (plus (attr \"prefix_data16\")\n \t\t\t   (plus (attr \"length_immediate\")\n@@ -288,7 +304,7 @@\n \t   (const_string \"unknown\")\n \t (eq_attr \"type\" \"lea,fcmov,fpspc,cld\")\n \t   (const_string \"none\")\n-\t (eq_attr \"type\" \"fistp\")\n+\t (eq_attr \"type\" \"fistp,leave\")\n \t   (const_string \"both\")\n \t (eq_attr \"type\" \"push\")\n \t   (if_then_else (match_operand 1 \"memory_operand\" \"\")\n@@ -754,7 +770,13 @@\n     return \"ftst\\;fnstsw\\t%0\";\n }\n   [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"unknownfp\")])\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))])\n \n ;; We may not use \"#\" to split and emit these, since the REG_DEAD notes\n ;; used to manage the reg stack popping would not be preserved.\n@@ -857,7 +879,13 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 0, 1);\"\n   [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"unknownfp\")])\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))])\n \n (define_insn \"*cmpfp_2u_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n@@ -871,7 +899,13 @@\n    && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n   \"* return output_fp_compare (insn, operands, 2, 1);\"\n   [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"unknownfp\")])\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))])\n \n ;; Patterns to match the SImode-in-memory ficom instructions.\n ;;\n@@ -911,7 +945,7 @@\n ;; FP compares, step 2\n ;; Move the fpsw to ax.\n \n-(define_insn \"x86_fnstsw_1\"\n+(define_insn \"*x86_fnstsw_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI [(reg 18)] UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n@@ -946,7 +980,13 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[0])\"\n   \"* return output_fp_compare (insn, operands, 1, 0);\"\n   [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*cmpfp_i_sse\"\n@@ -958,7 +998,10 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[0])\"\n   \"* return output_fp_compare (insn, operands, 1, 0);\"\n   [(set_attr \"type\" \"fcmp,ssecmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (if_then_else (match_operand:SF 1 \"\" \"\")\n+        (const_string \"SF\")\n+        (const_string \"DF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*cmpfp_i_sse_only\"\n@@ -969,7 +1012,10 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[0])\"\n   \"* return output_fp_compare (insn, operands, 1, 0);\"\n   [(set_attr \"type\" \"ssecmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (if_then_else (match_operand:SF 1 \"\" \"\")\n+        (const_string \"SF\")\n+        (const_string \"DF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*cmpfp_iu\"\n@@ -982,7 +1028,13 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 1, 1);\"\n   [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*cmpfp_iu_sse\"\n@@ -994,7 +1046,10 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 1, 1);\"\n   [(set_attr \"type\" \"fcmp,ssecmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (if_then_else (match_operand:SF 1 \"\" \"\")\n+        (const_string \"SF\")\n+        (const_string \"DF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*cmpfp_iu_sse_only\"\n@@ -1005,7 +1060,10 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 1, 1);\"\n   [(set_attr \"type\" \"ssecmp\")\n-   (set_attr \"mode\" \"unknownfp\")\n+   (set (attr \"mode\")\n+     (if_then_else (match_operand:SF 1 \"\" \"\")\n+        (const_string \"SF\")\n+        (const_string \"DF\")))\n    (set_attr \"athlon_decode\" \"vector\")])\n \f\n ;; Move instructions.\n@@ -2011,22 +2069,11 @@\n {\n   switch (which_alternative)\n     {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (SFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (4);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n     case 1:\n       return \"push{l}\\t%1\";\n-    case 2:\n-      return \"#\";\n \n     default:\n+      /* This insn should be already splitted before reg-stack.  */\n       abort ();\n     }\n }\n@@ -2040,23 +2087,11 @@\n {\n   switch (which_alternative)\n     {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (SFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (8);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{q}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{q}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n     case 1:\n       return \"push{q}\\t%q1\";\n \n-    case 2:\n-      return \"#\";\n-\n     default:\n+      /* This insn should be already splitted before reg-stack.  */\n       abort ();\n     }\n }\n@@ -2104,7 +2139,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2130,12 +2170,12 @@\n     case 4:\n       return \"mov{l}\\t{%1, %0|%0, %1}\";\n     case 5:\n-      if (TARGET_SSE2 && !TARGET_ATHLON)\n+      if (get_attr_mode (insn) == MODE_TI)\n \treturn \"pxor\\t%0, %0\";\n       else\n \treturn \"xorps\\t%0, %0\";\n     case 6:\n-      if (TARGET_PARTIAL_REG_DEPENDENCY)\n+      if (get_attr_mode (insn) == MODE_V4SF)\n \treturn \"movaps\\t{%1, %0|%0, %1}\";\n       else\n \treturn \"movss\\t{%1, %0|%0, %1}\";\n@@ -2155,7 +2195,40 @@\n     }\n }\n   [(set_attr \"type\" \"fmov,fmov,fmov,imov,imov,ssemov,ssemov,ssemov,ssemov,mmxmov,mmxmov,mmxmov\")\n-   (set_attr \"mode\" \"SF,SF,SF,SI,SI,TI,SF,SF,SF,SI,SI,DI\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"3,4,9,10\")\n+\t\t (const_string \"SI\")\n+\t       (eq_attr \"alternative\" \"5\")\n+\t\t (if_then_else\n+\t\t   (and (and (ne (symbol_ref \"TARGET_SSE_LOAD0_BY_PXOR\")\n+\t\t\t    \t (const_int 0))\n+\t\t\t     (ne (symbol_ref \"TARGET_SSE2\")\n+\t\t\t\t (const_int 0)))\n+\t\t\t(eq (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"TI\")\n+\t\t   (const_string \"V4SF\"))\n+\t       /* For architectures resolving dependencies on\n+\t\t  whole SSE registers use APS move to break dependency\n+\t\t  chains, otherwise use short move to avoid extra work. \n+\n+\t\t  Do the same for architectures resolving dependencies on\n+\t\t  the parts.  While in DF mode it is better to always handle\n+\t\t  just register parts, the SF mode is different due to lack\n+\t\t  of instructions to load just part of the register.  It is\n+\t\t  better to maintain the whole registers in single format\n+\t\t  to avoid problems on using packed logical operations.  */\n+\t       (eq_attr \"alternative\" \"6\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"TARGET_SSE_PARTIAL_REGS\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"SF\"))\n+\t       (eq_attr \"alternative\" \"11\")\n+\t\t (const_string \"DI\")]\n+\t       (const_string \"SF\")))])\n \n (define_insn \"*swapsf\"\n   [(set (match_operand:SF 0 \"register_operand\" \"+f\")\n@@ -2188,26 +2261,8 @@\n \t(match_operand:DF 1 \"general_no_elim_operand\" \"f#Y,Fo#fY,*r#fY,Y#f\"))]\n   \"!TARGET_64BIT && !TARGET_INTEGER_DFMODE_MOVES\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (DFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (8);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-    case 1:\n-    case 2:\n-    case 3:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"DF,SI,SI,DF\")])\n@@ -2217,32 +2272,8 @@\n \t(match_operand:DF 1 \"general_no_elim_operand\" \"f#rY,rFo#fY,Y#rf\"))]\n   \"TARGET_64BIT || TARGET_INTEGER_DFMODE_MOVES\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (DFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (8);\n-      if (TARGET_64BIT)\n-\tif (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\t  return \"sub{q}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-\telse\n-\t  return \"sub{q}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-      else\n-\tif (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\t  return \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-\telse\n-\t  return \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-\n-    case 1:\n-    case 2:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"DF,SI,DF\")])\n@@ -2279,7 +2310,7 @@\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f#Y,m,f#Y,*r,o,Y#f,Y#f,Y#f,m\")\n \t(match_operand:DF 1 \"general_operand\" \"fm#Y,f#Y,G,*roF,F*r,C,Y#f,YHm#f,Y#f\"))]\n   \"(GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n-   && (optimize_size || !TARGET_INTEGER_DFMODE_MOVES)\n+   && ((optimize_size || !TARGET_INTEGER_DFMODE_MOVES) && !TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n        || (ix86_cmodel == CM_MEDIUM || ix86_cmodel == CM_LARGE)\n        || GET_CODE (operands[1]) != CONST_DOUBLE\n@@ -2290,7 +2321,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2316,31 +2352,84 @@\n     case 4:\n       return \"#\";\n     case 5:\n-      if (TARGET_ATHLON)\n-        return \"xorpd\\t%0, %0\";\n-      else\n-        return \"pxor\\t%0, %0\";\n+      switch (get_attr_mode (insn))\n+\t{\n+\tcase MODE_V4SF:\n+\t  return \"xorps\\t%0, %0\";\n+\tcase MODE_V2DF:\n+\t  return \"xorpd\\t%0, %0\";\n+\tcase MODE_TI:\n+\t  return \"pxor\\t%0, %0\";\n+\tdefault:\n+\t  abort ();\n+\t}\n     case 6:\n-      if (TARGET_PARTIAL_REG_DEPENDENCY)\n-\treturn \"movapd\\t{%1, %0|%0, %1}\";\n+      switch (get_attr_mode (insn))\n+\t{\n+\tcase MODE_V4SF:\n+\t  return \"movaps\\t{%1, %0|%0, %1}\";\n+\tcase MODE_V2DF:\n+\t  return \"movapd\\t{%1, %0|%0, %1}\";\n+\tcase MODE_DF:\n+\t  return \"movsd\\t{%1, %0|%0, %1}\";\n+\tdefault:\n+\t  abort ();\n+\t}\n+    case 7:\n+      if (get_attr_mode (insn) == MODE_V2DF)\n+\treturn \"movlpd\\t{%1, %0|%0, %1}\";\n       else\n \treturn \"movsd\\t{%1, %0|%0, %1}\";\n-    case 7:\n     case 8:\n-        return \"movsd\\t{%1, %0|%0, %1}\";\n+      return \"movsd\\t{%1, %0|%0, %1}\";\n \n     default:\n       abort();\n     }\n }\n   [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,ssemov,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"DF,DF,DF,SI,SI,TI,DF,DF,DF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"3,4\")\n+\t\t (const_string \"SI\")\n+\t       /* xorps is one byte shorter.  */\n+\t       (eq_attr \"alternative\" \"5\")\n+\t\t (cond [(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0))\n+\t\t\t  (const_string \"V4SF\")\n+\t\t\t(ne (symbol_ref \"TARGET_SSE_LOAD0_BY_PXOR\")\n+\t\t\t    (const_int 0))\n+\t\t\t  (const_string \"TI\")]\n+\t\t       (const_string \"V2DF\"))\n+\t       /* For architectures resolving dependencies on\n+\t\t  whole SSE registers use APD move to break dependency\n+\t\t  chains, otherwise use short move to avoid extra work.\n+\n+\t\t  movaps encodes one byte shorter.  */\n+\t       (eq_attr \"alternative\" \"6\")\n+\t\t (cond\n+\t\t  [(ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t     (const_string \"V4SF\")\n+\t\t   (ne (symbol_ref \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n+\t\t       (const_int 0))\n+\t\t     (const_string \"V2DF\")]\n+\t\t   (const_string \"DF\"))\n+\t       /* For achitectures resolving dependencies on register\n+\t\t  parts we may avoid extra work to zero out upper part\n+\t\t  of register.  */\n+\t       (eq_attr \"alternative\" \"7\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"TARGET_SSE_PARTIAL_REGS\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V2DF\")\n+\t\t   (const_string \"DF\"))]\n+\t       (const_string \"DF\")))])\n \n (define_insn \"*movdf_integer\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f#Yr,m,f#Yr,r#Yf,o,Y#rf,Y#rf,Y#rf,m\")\n \t(match_operand:DF 1 \"general_operand\" \"fm#Yr,f#Yr,G,roF#Yf,Fr#Yf,C,Y#rf,Ym#rf,Y#rf\"))]\n   \"(GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n-   && !optimize_size && TARGET_INTEGER_DFMODE_MOVES\n+   && ((!optimize_size && TARGET_INTEGER_DFMODE_MOVES) || TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n        || (ix86_cmodel == CM_MEDIUM || ix86_cmodel == CM_LARGE)\n        || GET_CODE (operands[1]) != CONST_DOUBLE\n@@ -2351,7 +2440,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2378,16 +2472,34 @@\n       return \"#\";\n \n     case 5:\n-      if (TARGET_ATHLON)\n-        return \"xorpd\\t%0, %0\";\n-      else\n-        return \"pxor\\t%0, %0\";\n+      switch (get_attr_mode (insn))\n+\t{\n+\tcase MODE_V4SF:\n+\t  return \"xorps\\t%0, %0\";\n+\tcase MODE_V2DF:\n+\t  return \"xorpd\\t%0, %0\";\n+\tcase MODE_TI:\n+\t  return \"pxor\\t%0, %0\";\n+\tdefault:\n+\t  abort ();\n+\t}\n     case 6:\n-      if (TARGET_PARTIAL_REG_DEPENDENCY)\n-\treturn \"movapd\\t{%1, %0|%0, %1}\";\n+      switch (get_attr_mode (insn))\n+\t{\n+\tcase MODE_V4SF:\n+\t  return \"movaps\\t{%1, %0|%0, %1}\";\n+\tcase MODE_V2DF:\n+\t  return \"movapd\\t{%1, %0|%0, %1}\";\n+\tcase MODE_DF:\n+\t  return \"movsd\\t{%1, %0|%0, %1}\";\n+\tdefault:\n+\t  abort ();\n+\t}\n+    case 7:\n+      if (get_attr_mode (insn) == MODE_V2DF)\n+\treturn \"movlpd\\t{%1, %0|%0, %1}\";\n       else\n \treturn \"movsd\\t{%1, %0|%0, %1}\";\n-    case 7:\n     case 8:\n       return \"movsd\\t{%1, %0|%0, %1}\";\n \n@@ -2396,7 +2508,42 @@\n     }\n }\n   [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,ssemov,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"DF,DF,DF,SI,SI,TI,DF,DF,DF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"3,4\")\n+\t\t (const_string \"SI\")\n+\t       /* xorps is one byte shorter.  */\n+\t       (eq_attr \"alternative\" \"5\")\n+\t\t (cond [(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0))\n+\t\t\t  (const_string \"V4SF\")\n+\t\t\t(ne (symbol_ref \"TARGET_SSE_LOAD0_BY_PXOR\")\n+\t\t\t    (const_int 0))\n+\t\t\t  (const_string \"TI\")]\n+\t\t       (const_string \"V2DF\"))\n+\t       /* For architectures resolving dependencies on\n+\t\t  whole SSE registers use APD move to break dependency\n+\t\t  chains, otherwise use short move to avoid extra work.  \n+\n+\t\t  movaps encodes one byte shorter.  */\n+\t       (eq_attr \"alternative\" \"6\")\n+\t\t (cond\n+\t\t  [(ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t     (const_string \"V4SF\")\n+\t\t   (ne (symbol_ref \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n+\t\t       (const_int 0))\n+\t\t     (const_string \"V2DF\")]\n+\t\t   (const_string \"DF\"))\n+\t       /* For achitectures resolving dependencies on register\n+\t\t  parts we may avoid extra work to zero out upper part\n+\t\t  of register.  */\n+\t       (eq_attr \"alternative\" \"7\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"TARGET_SSE_PARTIAL_REGS\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V2DF\")\n+\t\t   (const_string \"DF\"))]\n+\t       (const_string \"DF\")))])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -2451,25 +2598,8 @@\n \t(match_operand:XF 1 \"general_no_elim_operand\" \"f,Fo,*r\"))]\n   \"!TARGET_64BIT && optimize_size\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (XFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (12);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-    case 1:\n-    case 2:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"XF,SI,SI\")])\n@@ -2479,25 +2609,8 @@\n \t(match_operand:TF 1 \"general_no_elim_operand\" \"f,Fo,*r\"))]\n   \"optimize_size\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (XFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (16);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-    case 1:\n-    case 2:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"XF,SI,SI\")])\n@@ -2507,24 +2620,8 @@\n \t(match_operand:XF 1 \"general_no_elim_operand\" \"f#r,ro#f\"))]\n   \"!TARGET_64BIT && !optimize_size\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (XFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (12);\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-      else\n-\treturn \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-    case 1:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"XF,SI\")])\n@@ -2534,30 +2631,8 @@\n \t(match_operand:TF 1 \"general_no_elim_operand\" \"f#r,rFo#f\"))]\n   \"!optimize_size\"\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      /* %%% We loose REG_DEAD notes for controling pops if we split late.  */\n-      operands[0] = gen_rtx_MEM (XFmode, stack_pointer_rtx);\n-      operands[2] = stack_pointer_rtx;\n-      operands[3] = GEN_INT (16);\n-      if (TARGET_64BIT)\n-\tif (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\t  return \"sub{q}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-\telse\n-\t  return \"sub{q}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-      else\n-\tif (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\t  return \"sub{l}\\t{%3, %2|%2, %3}\\;fstp%z0\\t%y0\";\n-\telse\n-\t  return \"sub{l}\\t{%3, %2|%2, %3}\\;fst%z0\\t%y0\";\n-\n-    case 1:\n-      return \"#\";\n-\n-    default:\n-      abort ();\n-    }\n+  /* This insn should be already splitted before reg-stack.  */\n+  abort ();\n }\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"XF,SI\")])\n@@ -2610,7 +2685,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2657,7 +2737,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2704,7 +2789,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -2751,7 +2841,12 @@\n     case 0:\n       if (REG_P (operands[1])\n           && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp\\t%y0\";\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG\n+\t      && TARGET_USE_FFREEP)\n+\t    return \"ffreep\\t%y0\";\n+          return \"fstp\\t%y0\";\n+\t}\n       else if (STACK_TOP_P (operands[0]))\n         return \"fld%z1\\t%y1\";\n       else\n@@ -3699,11 +3794,11 @@\n    (set_attr \"mode\" \"SF,SF,SF,SF\")])\n \n (define_insn \"*truncdfsf2_1_sse\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*!m,?f#rx,?r#fx,?x#rf,Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*!m#fxr,?f#xr,?r#fx,?x#fr,Y#fr\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"f,f,f,f,mY\")))\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"f#Y,f#Y,f#Y,f#Y,mY#f\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m,X\"))]\n-  \"TARGET_80387 && TARGET_SSE2\"\n+  \"TARGET_80387 && TARGET_SSE2 && !TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\"\n {\n   switch (which_alternative)\n     {\n@@ -3713,7 +3808,30 @@\n       else\n \treturn \"fst%z0\\t%y0\";\n     case 4:\n-      return \"cvtsd2ss\\t{%1, %0|%0, %1}\";\n+      return \"#\";\n+    default:\n+      abort ();\n+    }\n+}\n+  [(set_attr \"type\" \"fmov,multi,multi,multi,ssecvt\")\n+   (set_attr \"mode\" \"SF,SF,SF,SF,DF\")])\n+\n+(define_insn \"*truncdfsf2_1_sse_nooverlap\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*!m,?f#rx,?r#fx,?x#rf,&Y\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"f#Y,f#Y,f#Y,f#Y,mY#f\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m,X\"))]\n+  \"TARGET_80387 && TARGET_SSE2 && TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \"fstp%z0\\t%y0\";\n+      else\n+\treturn \"fst%z0\\t%y0\";\n+    case 4:\n+      return \"#\";\n     default:\n       abort ();\n     }\n@@ -3724,8 +3842,8 @@\n (define_insn \"*truncdfsf2_2\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=Y,!m\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY,f\")))]\n-  \"TARGET_80387 && TARGET_SSE2\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY,f#Y\")))]\n+  \"TARGET_80387 && TARGET_SSE2 && !TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n {\n   switch (which_alternative)\n@@ -3744,7 +3862,30 @@\n   [(set_attr \"type\" \"ssecvt,fmov\")\n    (set_attr \"mode\" \"DF,SF\")])\n \n-(define_insn \"truncdfsf2_3\"\n+(define_insn \"*truncdfsf2_2_nooverlap\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=&Y,!m\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY,f\")))]\n+  \"TARGET_80387 && TARGET_SSE2 && TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"#\";\n+    case 1:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \"fstp%z0\\t%y0\";\n+      else\n+\treturn \"fst%z0\\t%y0\";\n+    default:\n+      abort ();\n+    }\n+}\n+  [(set_attr \"type\" \"ssecvt,fmov\")\n+   (set_attr \"mode\" \"DF,SF\")])\n+\n+(define_insn \"*truncdfsf2_3\"\n   [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"register_operand\" \"f\")))]\n@@ -3762,11 +3903,20 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=Y\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"nonimmediate_operand\" \"mY\")))]\n-  \"!TARGET_80387 && TARGET_SSE2\"\n+  \"!TARGET_80387 && TARGET_SSE2 && !TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\"\n   \"cvtsd2ss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"DF\")])\n \n+(define_insn \"*truncdfsf2_sse_only_nooverlap\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=&Y\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY\")))]\n+  \"!TARGET_80387 && TARGET_SSE2 && TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\"\n+  \"#\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"mode\" \"DF\")])\n+\n (define_split\n   [(set (match_operand:SF 0 \"memory_operand\" \"\")\n \t(float_truncate:SF\n@@ -3776,15 +3926,56 @@\n   [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n   \"\")\n \n+; Avoid possible reformating penalty on the destination by first\n+; zeroing it out\n (define_split\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"nonimmediate_operand\" \"\")))\n    (clobber (match_operand 2 \"\" \"\"))]\n   \"TARGET_80387 && reload_completed\n-   && !FP_REG_P (operands[0]) && !FP_REG_P (operands[1])\"\n-  [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n-  \"\")\n+   && SSE_REG_P (operands[0])\n+   && !STACK_REG_P (operands[1])\"\n+  [(const_int 0)]\n+{\n+  rtx src, dest;\n+  if (!TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS)\n+    emit_insn (gen_truncdfsf2_sse_only (operands[0], operands[1]));\n+  else\n+    {\n+      dest = simplify_gen_subreg (V4SFmode, operands[0], SFmode, 0);\n+      src = simplify_gen_subreg (V2DFmode, operands[1], DFmode, 0);\n+      /* simplify_gen_subreg refuses to widen memory references.  */\n+      if (GET_CODE (src) == SUBREG)\n+\talter_subreg (&src);\n+      if (reg_overlap_mentioned_p (operands[0], operands[1]))\n+\tabort ();\n+      emit_insn (gen_sse_clrv4sf (dest, CONST0_RTX (V4SFmode)));\n+      emit_insn (gen_cvtsd2ss (dest, dest, src));\n+    }\n+  DONE;\n+})\n+\n+(define_split\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 && reload_completed\n+   && SSE_REG_P (operands[0]) && TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS\"\n+  [(const_int 0)]\n+{\n+  rtx src, dest;\n+  dest = simplify_gen_subreg (V4SFmode, operands[0], SFmode, 0);\n+  src = simplify_gen_subreg (V2DFmode, operands[1], DFmode, 0);\n+  /* simplify_gen_subreg refuses to widen memory references.  */\n+  if (GET_CODE (src) == SUBREG)\n+    alter_subreg (&src);\n+  if (reg_overlap_mentioned_p (operands[0], operands[1]))\n+    abort ();\n+  emit_insn (gen_sse_clrv4sf (dest, CONST0_RTX (V4SFmode)));\n+  emit_insn (gen_cvtsd2ss (dest, dest, src));\n+  DONE;\n+})\n \n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n@@ -4468,7 +4659,7 @@\n   \"\")\n \n (define_insn \"*floatsisf2_i387\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,?f,x\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f#x,?f#x,x#f\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n   \"TARGET_80387 && (!TARGET_SSE || TARGET_MIX_SSE_I387)\"\n   \"@\n@@ -4488,6 +4679,22 @@\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n+; Avoid possible reformating penalty on the destination by first\n+; zeroing it out\n+(define_split\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 && reload_completed && TARGET_SSE_PARTIAL_REGS\n+   && SSE_REG_P (operands[0])\"\n+  [(const_int 0)]\n+{\n+  rtx dest;\n+  dest = simplify_gen_subreg (V4SFmode, operands[0], SFmode, 0);\n+  emit_insn (gen_sse_clrv4sf (dest, CONST0_RTX (V4SFmode)));\n+  emit_insn (gen_cvtsi2ss (dest, dest, operands[1]));\n+  DONE;\n+})\n+\n (define_expand \"floatdisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n@@ -4506,7 +4713,7 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatdisf2_i387\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,?f,x\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f#x,?f#x,x#f\")\n \t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n   \"TARGET_64BIT && TARGET_80387 && (!TARGET_SSE || TARGET_MIX_SSE_I387)\"\n   \"@\n@@ -4526,6 +4733,22 @@\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n+; Avoid possible reformating penalty on the destination by first\n+; zeroing it out\n+(define_split\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 && reload_completed && TARGET_SSE_PARTIAL_REGS\n+   && SSE_REG_P (operands[0])\"\n+  [(const_int 0)]\n+{\n+  rtx dest;\n+  dest = simplify_gen_subreg (V4SFmode, operands[0], SFmode, 0);\n+  emit_insn (gen_sse_clrv4sf (dest, CONST0_RTX (V4SFmode)));\n+  emit_insn (gen_cvtsi2ssq (dest, dest, operands[1]));\n+  DONE;\n+})\n+\n (define_insn \"floathidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n@@ -4544,7 +4767,7 @@\n   \"\")\n \n (define_insn \"*floatsidf2_i387\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f#Y,?f#Y,Y#f\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n   \"TARGET_80387 && (!TARGET_SSE2 || TARGET_MIX_SSE_I387)\"\n   \"@\n@@ -4582,7 +4805,7 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatdidf2_i387\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f#Y,?f#Y,Y#f\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n   \"TARGET_64BIT && TARGET_80387 && (!TARGET_SSE2 || TARGET_MIX_SSE_I387)\"\n   \"@\n@@ -9269,12 +9492,15 @@\n \t     in register.  */\n \t  rtx reg = gen_reg_rtx (SFmode);\n \t  rtx dest = operands[0];\n+\t  rtx imm = gen_lowpart (SFmode, gen_int_mode (0x80000000, SImode));\n \n \t  operands[1] = force_reg (SFmode, operands[1]);\n \t  operands[0] = force_reg (SFmode, operands[0]);\n-\t  emit_move_insn (reg,\n-\t\t\t  gen_lowpart (SFmode,\n-\t\t\t\t       gen_int_mode (0x80000000, SImode)));\n+\t  reg = force_reg (V4SFmode,\n+\t\t\t   gen_rtx_CONST_VECTOR (V4SFmode,\n+\t\t\t     gen_rtvec (4, imm, CONST0_RTX (SFmode),\n+\t\t\t\t\tCONST0_RTX (SFmode),\n+\t\t\t\t\tCONST0_RTX (SFmode))));\n \t  emit_insn (gen_negsf2_ifs (operands[0], operands[1], reg));\n \t  if (dest != operands[0])\n \t    emit_move_insn (dest, operands[0]);\n@@ -9293,7 +9519,7 @@\n (define_insn \"negsf2_ifs\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=x#fr,x#fr,f#xr,rm#xf\")\n \t(neg:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,x#fr,0,0\")))\n-   (use (match_operand:SF 2 \"nonmemory_operand\" \"x,0#x,*g#x,*g#x\"))\n+   (use (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm,0,xm*r,xm*r\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_SSE\n    && (reload_in_progress || reload_completed\n@@ -9314,7 +9540,7 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (use (match_operand:SF 2 \"\" \"\"))\n+   (use (match_operand:V4SF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && !SSE_REG_P (operands[0])\"\n   [(parallel [(set (match_dup 0)\n@@ -9324,13 +9550,15 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (use (match_operand:SF 2 \"register_operand\" \"\"))\n+   (use (match_operand:V4SF 2 \"nonimmediate_operand\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && SSE_REG_P (operands[0])\"\n   [(set (subreg:TI (match_dup 0) 0)\n-\t(xor:TI (subreg:TI (match_dup 1) 0)\n-\t\t(subreg:TI (match_dup 2) 0)))]\n+\t(xor:TI (match_dup 1)\n+\t\t(match_dup 2)))]\n {\n+  operands[1] = simplify_gen_subreg (TImode, operands[1], SFmode, 0);\n+  operands[2] = simplify_gen_subreg (TImode, operands[2], V4SFmode, 0);\n   if (operands_match_p (operands[0], operands[2]))\n     {\n       rtx tmp;\n@@ -9403,7 +9631,7 @@\n \t{\n \t  /* Using SSE is tricky, since we need bitwise negation of -0\n \t     in register.  */\n-\t  rtx reg = gen_reg_rtx (DFmode);\n+\t  rtx reg;\n #if HOST_BITS_PER_WIDE_INT >= 64\n \t  rtx imm = gen_int_mode (((HOST_WIDE_INT)1) << 63, DImode);\n #else\n@@ -9413,7 +9641,10 @@\n \n \t  operands[1] = force_reg (DFmode, operands[1]);\n \t  operands[0] = force_reg (DFmode, operands[0]);\n-\t  emit_move_insn (reg, gen_lowpart (DFmode, imm));\n+\t  imm = gen_lowpart (DFmode, imm);\n+\t  reg = force_reg (V2DFmode,\n+\t\t\t   gen_rtx_CONST_VECTOR (V2DFmode,\n+\t\t\t     gen_rtvec (2, imm, CONST0_RTX (DFmode))));\n \t  emit_insn (gen_negdf2_ifs (operands[0], operands[1], reg));\n \t  if (dest != operands[0])\n \t    emit_move_insn (dest, operands[0]);\n@@ -9432,7 +9663,7 @@\n (define_insn \"negdf2_ifs\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#fr,Y#fr,f#Yr,rm#Yf\")\n \t(neg:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,Y#fr,0,0\")))\n-   (use (match_operand:DF 2 \"nonmemory_operand\" \"Y,0,*g#Y,*g#Y\"))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"Ym,0,Ym*r,Ym*r\"))\n    (clobber (reg:CC 17))]\n   \"!TARGET_64BIT && TARGET_SSE2\n    && (reload_in_progress || reload_completed\n@@ -9442,8 +9673,8 @@\n \n (define_insn \"*negdf2_ifs_rex64\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#f,Y#f,fm#Y\")\n-\t(neg:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,Y#f,0\")))\n-   (use (match_operand:DF 2 \"general_operand\" \"Y,0,*g#Y*r\"))\n+\t(neg:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,Y#fr,0\")))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"Ym,0,Ym*r\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_64BIT && TARGET_SSE2\n    && (reload_in_progress || reload_completed\n@@ -9454,7 +9685,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"memory_operand\" \"\")\n \t(neg:DF (match_operand:DF 1 \"memory_operand\" \"\")))\n-   (use (match_operand:DF 2 \"\" \"\"))\n+   (use (match_operand:V2DF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"\"\n   [(parallel [(set (match_dup 0)\n@@ -9464,7 +9695,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (use (match_operand:DF 2 \"\" \"\"))\n+   (use (match_operand:V2DF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && !SSE_REG_P (operands[0])\n    && (!TARGET_64BIT || FP_REG_P (operands[0]))\"\n@@ -9475,7 +9706,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (use (match_operand:DF 2 \"\" \"\"))\n+   (use (match_operand:V2DF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_64BIT && reload_completed && GENERAL_REG_P (operands[0])\"\n   [(parallel [(set (match_dup 0)\n@@ -9488,13 +9719,19 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (use (match_operand:DF 2 \"register_operand\" \"\"))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && SSE_REG_P (operands[0])\"\n   [(set (subreg:TI (match_dup 0) 0)\n-\t(xor:TI (subreg:TI (match_dup 1) 0)\n-\t\t(subreg:TI (match_dup 2) 0)))]\n+\t(xor:TI (match_dup 1)\n+\t\t(match_dup 2)))]\n {\n+  operands[0] = simplify_gen_subreg (V2DFmode, operands[0], DFmode, 0);\n+  operands[1] = simplify_gen_subreg (TImode, operands[1], DFmode, 0);\n+  operands[2] = simplify_gen_subreg (TImode, operands[2], V2DFmode, 0);\n+  /* Avoid possible reformating on the operands.  */\n+  if (TARGET_SSE_PARTIAL_REGS && !optimize_size)\n+    emit_insn (gen_sse2_unpcklpd (operands[0], operands[0], operands[0]));\n   if (operands_match_p (operands[0], operands[2]))\n     {\n       rtx tmp;\n@@ -9727,14 +9964,18 @@\n \t{\n \t  /* Using SSE is tricky, since we need bitwise negation of -0\n \t     in register.  */\n-\t  rtx reg = gen_reg_rtx (SFmode);\n+\t  rtx reg = gen_reg_rtx (V4SFmode);\n \t  rtx dest = operands[0];\n+\t  rtx imm;\n \n \t  operands[1] = force_reg (SFmode, operands[1]);\n \t  operands[0] = force_reg (SFmode, operands[0]);\n-\t  emit_move_insn (reg,\n-\t\t\t  gen_lowpart (SFmode,\n-\t\t\t\t       gen_int_mode (0x80000000, SImode)));\n+\t  imm = gen_lowpart (SFmode, gen_int_mode(~0x80000000, SImode));\n+\t  reg = force_reg (V4SFmode,\n+\t\t\t   gen_rtx_CONST_VECTOR (V4SFmode,\n+\t\t\t   gen_rtvec (4, imm, CONST0_RTX (SFmode),\n+\t\t\t\t      CONST0_RTX (SFmode),\n+\t\t\t\t      CONST0_RTX (SFmode))));\n \t  emit_insn (gen_abssf2_ifs (operands[0], operands[1], reg));\n \t  if (dest != operands[0])\n \t    emit_move_insn (dest, operands[0]);\n@@ -9751,20 +9992,20 @@\n   \"#\")\n \n (define_insn \"abssf2_ifs\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=x#fr,f#xr,rm#xf\")\n-\t(abs:SF (match_operand:SF 1 \"nonimmediate_operand\" \"x,0,0\")))\n-   (use (match_operand:SF 2 \"nonmemory_operand\" \"*0#x,*g#x,*g#x\"))\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=x#fr,x#fr,f#xr,rm#xf\")\n+\t(abs:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,x#fr,0,0\")))\n+   (use (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm,0,xm*r,xm*r\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_SSE\n    && (reload_in_progress || reload_completed\n        || (register_operand (operands[0], VOIDmode)\n-\t   && register_operand (operands[1], VOIDmode)))\"\n+\t    && register_operand (operands[1], VOIDmode)))\"\n   \"#\")\n \n (define_split\n   [(set (match_operand:SF 0 \"memory_operand\" \"\")\n \t(abs:SF (match_operand:SF 1 \"memory_operand\" \"\")))\n-   (use (match_operand:SF 2 \"\" \"\"))\n+   (use (match_operand:V4SF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"\"\n   [(parallel [(set (match_dup 0)\n@@ -9774,7 +10015,7 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(abs:SF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (use (match_operand:SF 2 \"\" \"\"))\n+   (use (match_operand:V4SF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && !SSE_REG_P (operands[0])\"\n   [(parallel [(set (match_dup 0)\n@@ -9784,12 +10025,23 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(abs:SF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (use (match_operand:SF 2 \"register_operand\" \"\"))\n+   (use (match_operand:V4SF 2 \"nonimmediate_operand\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && SSE_REG_P (operands[0])\"\n   [(set (subreg:TI (match_dup 0) 0)\n-\t(and:TI (not:TI (subreg:TI (match_dup 2) 0))\n-\t\t(subreg:TI (match_dup 1) 0)))])\n+\t(and:TI (match_dup 1)\n+\t\t(match_dup 2)))]\n+{\n+  operands[1] = simplify_gen_subreg (TImode, operands[1], SFmode, 0);\n+  operands[2] = simplify_gen_subreg (TImode, operands[2], V4SFmode, 0);\n+  if (operands_match_p (operands[0], operands[2]))\n+    {\n+      rtx tmp;\n+      tmp = operands[1];\n+      operands[1] = operands[2];\n+      operands[2] = tmp;\n+    }\n+})\n \n ;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n ;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n@@ -9852,17 +10104,22 @@\n \t{\n \t  /* Using SSE is tricky, since we need bitwise negation of -0\n \t     in register.  */\n-\t  rtx reg = gen_reg_rtx (DFmode);\n+\t  rtx reg = gen_reg_rtx (V2DFmode);\n #if HOST_BITS_PER_WIDE_INT >= 64\n-\t  rtx imm = gen_int_mode (((HOST_WIDE_INT)1) << 63, DImode);\n+\t  rtx imm = gen_int_mode (~(((HOST_WIDE_INT)1) << 63), DImode);\n #else\n-\t  rtx imm = immed_double_const (0, 0x80000000, DImode);\n+\t  rtx imm = immed_double_const (~0, ~0x80000000, DImode);\n #endif\n \t  rtx dest = operands[0];\n \n \t  operands[1] = force_reg (DFmode, operands[1]);\n \t  operands[0] = force_reg (DFmode, operands[0]);\n-\t  emit_move_insn (reg, gen_lowpart (DFmode, imm));\n+\n+\t  /* Produce LONG_DOUBLE with the proper immediate argument.  */\n+\t  imm = gen_lowpart (DFmode, imm);\n+\t  reg = force_reg (V2DFmode,\n+\t\t\t   gen_rtx_CONST_VECTOR (V2DFmode,\n+\t\t\t   gen_rtvec (2, imm, CONST0_RTX (DFmode))));\n \t  emit_insn (gen_absdf2_ifs (operands[0], operands[1], reg));\n \t  if (dest != operands[0])\n \t    emit_move_insn (dest, operands[0]);\n@@ -9879,9 +10136,9 @@\n   \"#\")\n \n (define_insn \"absdf2_ifs\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#fr,mf#Yr,mr#Yf\")\n-\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"Y,0,0\")))\n-   (use (match_operand:DF 2 \"nonmemory_operand\" \"*0#Y,*g#Y,*g#Y\"))\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#fr,Y#fr,mf#Yr,mr#Yf\")\n+\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,Y#fr,0,0\")))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"Ym,0,Ym*r,Ym*r\"))\n    (clobber (reg:CC 17))]\n   \"!TARGET_64BIT && TARGET_SSE2\n    && (reload_in_progress || reload_completed\n@@ -9890,9 +10147,9 @@\n   \"#\")\n \n (define_insn \"*absdf2_ifs_rex64\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#fr,mf#Yr\")\n-\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"Y,0\")))\n-   (use (match_operand:DF 2 \"nonmemory_operand\" \"*0#Y,*g#Y\"))\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y#fr,Y#fr,mf#Yr\")\n+\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,Y#fr,0\")))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"Ym,0,Ym*r\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_64BIT && TARGET_SSE2\n    && (reload_in_progress || reload_completed\n@@ -9903,7 +10160,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"memory_operand\" \"\")\n \t(abs:DF (match_operand:DF 1 \"memory_operand\" \"\")))\n-   (use (match_operand:DF 2 \"\" \"\"))\n+   (use (match_operand:V2DF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"\"\n   [(parallel [(set (match_dup 0)\n@@ -9913,7 +10170,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(abs:DF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (use (match_operand:DF 2 \"\" \"\"))\n+   (use (match_operand:V2DF 2 \"\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && !SSE_REG_P (operands[0])\"\n   [(parallel [(set (match_dup 0)\n@@ -9923,12 +10180,27 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(abs:DF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (use (match_operand:DF 2 \"register_operand\" \"\"))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\" \"\"))\n    (clobber (reg:CC 17))]\n   \"reload_completed && SSE_REG_P (operands[0])\"\n   [(set (subreg:TI (match_dup 0) 0)\n-\t(and:TI (not:TI (subreg:TI (match_dup 2) 0))\n-\t\t(subreg:TI (match_dup 1) 0)))])\n+\t(and:TI (match_dup 1)\n+\t\t(match_dup 2)))]\n+{\n+  operands[0] = simplify_gen_subreg (V2DFmode, operands[0], DFmode, 0);\n+  operands[1] = simplify_gen_subreg (TImode, operands[1], DFmode, 0);\n+  operands[2] = simplify_gen_subreg (TImode, operands[2], V2DFmode, 0);\n+  /* Avoid possible reformating on the operands.  */\n+  if (TARGET_SSE_PARTIAL_REGS && !optimize_size)\n+    emit_insn (gen_sse2_unpcklpd (operands[0], operands[0], operands[0]));\n+  if (operands_match_p (operands[0], operands[2]))\n+    {\n+      rtx tmp;\n+      tmp = operands[1];\n+      operands[1] = operands[2];\n+      operands[2] = tmp;\n+    }\n+})\n \n \n ;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n@@ -13367,7 +13639,7 @@\n \t\t\t    (match_operand:SI 3 \"\" \"\")))])]\n   \"!TARGET_64BIT\"\n {\n-  ix86_expand_call (NULL, operands[0], operands[1], operands[2], operands[3]);\n+  ix86_expand_call (NULL, operands[0], operands[1], operands[2], operands[3], 0);\n   DONE;\n })\n \n@@ -13412,7 +13684,17 @@\n    (use (match_operand 2 \"\" \"\"))]\n   \"\"\n {\n-  ix86_expand_call (NULL, operands[0], operands[1], operands[2], NULL);\n+  ix86_expand_call (NULL, operands[0], operands[1], operands[2], NULL, 0);\n+  DONE;\n+})\n+\n+(define_expand \"sibcall\"\n+  [(call (match_operand:QI 0 \"\" \"\")\n+\t (match_operand 1 \"\" \"\"))\n+   (use (match_operand 2 \"\" \"\"))]\n+  \"\"\n+{\n+  ix86_expand_call (NULL, operands[0], operands[1], operands[2], NULL, 1);\n   DONE;\n })\n \n@@ -13431,41 +13713,51 @@\n (define_insn \"*call_1\"\n   [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"rsm\"))\n \t (match_operand 1 \"\" \"\"))]\n-  \"!TARGET_64BIT\"\n+  \"!SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n   if (constant_call_address_operand (operands[0], QImode))\n-    {\n-      if (SIBLING_CALL_P (insn))\n-\treturn \"jmp\\t%P0\";\n-      else\n-\treturn \"call\\t%P0\";\n-    }\n-  if (SIBLING_CALL_P (insn))\n-    return \"jmp\\t%A0\";\n-  else\n-    return \"call\\t%A0\";\n+    return \"call\\t%P0\";\n+  return \"call\\t%A0\";\n+}\n+  [(set_attr \"type\" \"call\")])\n+\n+(define_insn \"*sibcall_1\"\n+  [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"s,c,d,a\"))\n+\t (match_operand 1 \"\" \"\"))]\n+  \"SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n+{\n+  if (constant_call_address_operand (operands[0], QImode))\n+    return \"jmp\\t%P0\";\n+  return \"jmp\\t%A0\";\n }\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*call_1_rex64\"\n   [(call (mem:QI (match_operand:DI 0 \"call_insn_operand\" \"rsm\"))\n \t (match_operand 1 \"\" \"\"))]\n-  \"TARGET_64BIT\"\n+  \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n {\n   if (constant_call_address_operand (operands[0], QImode))\n-    {\n-      if (SIBLING_CALL_P (insn))\n-\treturn \"jmp\\t%P0\";\n-      else\n-\treturn \"call\\t%P0\";\n-    }\n-  if (SIBLING_CALL_P (insn))\n-    return \"jmp\\t%A0\";\n-  else\n-    return \"call\\t%A0\";\n+    return \"call\\t%P0\";\n+  return \"call\\t%A0\";\n }\n   [(set_attr \"type\" \"call\")])\n \n+(define_insn \"*sibcall_1_rex64\"\n+  [(call (mem:QI (match_operand:DI 0 \"constant_call_address_operand\" \"\"))\n+\t (match_operand 1 \"\" \"\"))]\n+  \"SIBLING_CALL_P (insn) && TARGET_64BIT\"\n+  \"jmp\\t%P0\"\n+  [(set_attr \"type\" \"call\")])\n+\n+(define_insn \"*sibcall_1_rex64_v\"\n+  [(call (mem:QI (reg:DI 40))\n+\t (match_operand 0 \"\" \"\"))]\n+  \"SIBLING_CALL_P (insn) && TARGET_64BIT\"\n+  \"jmp\\t*%%r11\"\n+  [(set_attr \"type\" \"call\")])\n+\n+\n ;; Call subroutine, returning value in operand 0\n \n (define_expand \"call_value_pop\"\n@@ -13478,7 +13770,7 @@\n   \"!TARGET_64BIT\"\n {\n   ix86_expand_call (operands[0], operands[1], operands[2],\n-\t\t    operands[3], operands[4]);\n+\t\t    operands[3], operands[4], 0);\n   DONE;\n })\n \n@@ -13490,7 +13782,19 @@\n   ;; Operand 2 not used on the i386.\n   \"\"\n {\n-  ix86_expand_call (operands[0], operands[1], operands[2], operands[3], NULL);\n+  ix86_expand_call (operands[0], operands[1], operands[2], operands[3], NULL, 0);\n+  DONE;\n+})\n+\n+(define_expand \"sibcall_value\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"\" \"\")\n+\t      (match_operand:SI 2 \"\" \"\")))\n+   (use (match_operand:SI 3 \"\" \"\"))]\n+  ;; Operand 2 not used on the i386.\n+  \"\"\n+{\n+  ix86_expand_call (operands[0], operands[1], operands[2], operands[3], NULL, 1);\n   DONE;\n })\n \n@@ -13513,7 +13817,7 @@\n   ix86_expand_call ((TARGET_FLOAT_RETURNS_IN_80387\n \t\t     ? gen_rtx_REG (XCmode, FIRST_FLOAT_REG) : NULL),\n \t\t    operands[0], const0_rtx, GEN_INT (SSE_REGPARM_MAX - 1),\n-\t\t    NULL);\n+\t\t    NULL, 0);\n \n   for (i = 0; i < XVECLEN (operands[2], 0); i++)\n     {\n@@ -13662,23 +13966,15 @@\n    (clobber (mem:BLK (scratch)))]\n   \"!TARGET_64BIT\"\n   \"leave\"\n-  [(set_attr \"length_immediate\" \"0\")\n-   (set_attr \"length\" \"1\")\n-   (set_attr \"modrm\" \"0\")\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"ppro_uops\" \"few\")])\n+  [(set_attr \"type\" \"leave\")])\n \n (define_insn \"leave_rex64\"\n   [(set (reg:DI 7) (plus:DI (reg:DI 6) (const_int 8)))\n    (set (reg:DI 6) (mem:DI (reg:DI 6)))\n    (clobber (mem:BLK (scratch)))]\n   \"TARGET_64BIT\"\n   \"leave\"\n-  [(set_attr \"length_immediate\" \"0\")\n-   (set_attr \"length\" \"1\")\n-   (set_attr \"modrm\" \"0\")\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"ppro_uops\" \"few\")])\n+  [(set_attr \"type\" \"leave\")])\n \f\n (define_expand \"ffssi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\") \n@@ -14312,6 +14608,24 @@\n               (const_string \"fop\")))\n    (set_attr \"mode\" \"SF\")])\n \n+(define_insn \"*fop_df_6\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(match_operator:DF 3 \"binary_fp_operator\"\n+\t  [(float_extend:DF\n+\t    (match_operand:SF 1 \"register_operand\" \"0,f\"))\n+\t   (float_extend:DF\n+\t    (match_operand:SF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+  \"TARGET_80387 && !(TARGET_SSE2 && TARGET_SSE_MATH)\"\n+  \"* return output_387_binary_op (insn, operands);\"\n+  [(set (attr \"type\") \n+        (cond [(match_operand:DF 3 \"mult_operator\" \"\") \n+                 (const_string \"fmul\")\n+               (match_operand:DF 3 \"div_operator\" \"\") \n+                 (const_string \"fdiv\")\n+              ]\n+              (const_string \"fop\")))\n+   (set_attr \"mode\" \"SF\")])\n+\n (define_insn \"*fop_xf_1\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n@@ -14421,7 +14735,7 @@\n (define_insn \"*fop_xf_4\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n-\t   [(float_extend:XF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,0\"))\n+\t   [(float_extend:XF (match_operand 1 \"nonimmediate_operand\" \"fm,0\"))\n \t    (match_operand:XF 2 \"register_operand\" \"0,f\")]))]\n   \"!TARGET_64BIT && TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n@@ -14437,7 +14751,7 @@\n (define_insn \"*fop_tf_4\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:TF 3 \"binary_fp_operator\"\n-\t   [(float_extend:TF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,0\"))\n+\t   [(float_extend:TF (match_operand 1 \"nonimmediate_operand\" \"fm,0\"))\n \t    (match_operand:TF 2 \"register_operand\" \"0,f\")]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n@@ -14455,7 +14769,7 @@\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t  [(match_operand:XF 1 \"register_operand\" \"0,f\")\n \t   (float_extend:XF\n-\t    (match_operand:SF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t    (match_operand 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"!TARGET_64BIT && TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n@@ -14472,7 +14786,7 @@\n \t(match_operator:TF 3 \"binary_fp_operator\"\n \t  [(match_operand:TF 1 \"register_operand\" \"0,f\")\n \t   (float_extend:TF\n-\t    (match_operand:SF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t    (match_operand 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n@@ -14487,41 +14801,10 @@\n (define_insn \"*fop_xf_6\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n-\t   [(float_extend:XF (match_operand:DF 1 \"nonimmediate_operand\" \"fm,0\"))\n-\t    (match_operand:XF 2 \"register_operand\" \"0,f\")]))]\n-  \"!TARGET_64BIT && TARGET_80387\"\n-  \"* return output_387_binary_op (insn, operands);\"\n-  [(set (attr \"type\") \n-        (cond [(match_operand:XF 3 \"mult_operator\" \"\") \n-                 (const_string \"fmul\")\n-               (match_operand:XF 3 \"div_operator\" \"\") \n-                 (const_string \"fdiv\")\n-              ]\n-              (const_string \"fop\")))\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*fop_tf_6\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n-\t(match_operator:TF 3 \"binary_fp_operator\"\n-\t   [(float_extend:TF (match_operand:DF 1 \"nonimmediate_operand\" \"fm,0\"))\n-\t    (match_operand:TF 2 \"register_operand\" \"0,f\")]))]\n-  \"TARGET_80387\"\n-  \"* return output_387_binary_op (insn, operands);\"\n-  [(set (attr \"type\") \n-        (cond [(match_operand:TF 3 \"mult_operator\" \"\") \n-                 (const_string \"fmul\")\n-               (match_operand:TF 3 \"div_operator\" \"\") \n-                 (const_string \"fdiv\")\n-              ]\n-              (const_string \"fop\")))\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*fop_xf_7\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(match_operator:XF 3 \"binary_fp_operator\"\n-\t  [(match_operand:XF 1 \"register_operand\" \"0,f\")\n+\t  [(float_extend:XF\n+\t    (match_operand 1 \"register_operand\" \"0,f\"))\n \t   (float_extend:XF\n-\t    (match_operand:DF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t    (match_operand 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"!TARGET_64BIT && TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n@@ -14531,14 +14814,15 @@\n                  (const_string \"fdiv\")\n               ]\n               (const_string \"fop\")))\n-   (set_attr \"mode\" \"DF\")])\n+   (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*fop_tf_7\"\n+(define_insn \"*fop_tf_6\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:TF 3 \"binary_fp_operator\"\n-\t  [(match_operand:TF 1 \"register_operand\" \"0,f\")\n+\t  [(float_extend:TF\n+\t    (match_operand 1 \"register_operand\" \"0,f\"))\n \t   (float_extend:TF\n-\t    (match_operand:DF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t    (match_operand 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n@@ -14548,7 +14832,7 @@\n                  (const_string \"fdiv\")\n               ]\n               (const_string \"fop\")))\n-   (set_attr \"mode\" \"DF\")])\n+   (set_attr \"mode\" \"SF\")])\n \n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n@@ -15949,9 +16233,9 @@\n (define_expand \"movhicc\"\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n \t(if_then_else:HI (match_operand 1 \"comparison_operator\" \"\")\n-\t\t\t (match_operand:HI 2 \"nonimmediate_operand\" \"\")\n-\t\t\t (match_operand:HI 3 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_CMOVE && TARGET_HIMODE_MATH\"\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"\")\n+\t\t\t (match_operand:HI 3 \"general_operand\" \"\")))]\n+  \"TARGET_HIMODE_MATH\"\n   \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n \n (define_insn \"*movhicc_noc\"\n@@ -15968,6 +16252,33 @@\n   [(set_attr \"type\" \"icmov\")\n    (set_attr \"mode\" \"HI\")])\n \n+(define_expand \"movqicc\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"\")\n+\t(if_then_else:QI (match_operand 1 \"comparison_operator\" \"\")\n+\t\t\t (match_operand:QI 2 \"general_operand\" \"\")\n+\t\t\t (match_operand:QI 3 \"general_operand\" \"\")))]\n+  \"TARGET_QIMODE_MATH\"\n+  \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n+\n+(define_insn_and_split \"*movqicc_noc\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r,r\")\n+\t(if_then_else:QI (match_operator 1 \"ix86_comparison_operator\" \n+\t\t\t\t[(match_operand 4 \"flags_reg_operand\" \"\") (const_int 0)])\n+\t\t      (match_operand:QI 2 \"register_operand\" \"r,0\")\n+\t\t      (match_operand:QI 3 \"register_operand\" \"0,r\")))]\n+  \"TARGET_CMOVE && !TARGET_PARTIAL_REG_STALL\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+\t(if_then_else:SI (match_op_dup 1 [(match_dup 4) (const_int 0)])\n+\t\t      (match_dup 2)\n+\t\t      (match_dup 3)))]\n+  \"operands[0] = gen_lowpart (SImode, operands[0]);\n+   operands[2] = gen_lowpart (SImode, operands[2]);\n+   operands[3] = gen_lowpart (SImode, operands[3]);\"\n+  [(set_attr \"type\" \"icmov\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_expand \"movsfcc\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(if_then_else:SF (match_operand 1 \"comparison_operator\" \"\")\n@@ -16035,7 +16346,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_and_not_any_fp_reg_operand\" \"\")\n \t(if_then_else:DF (match_operator 1 \"fcmov_comparison_operator\" \n-\t\t\t\t[(match_operand 4 \"\" \"\") (const_int 0)])\n+\t\t\t\t[(match_operand 4 \"flags_reg_operand\" \"\") (const_int 0)])\n \t\t      (match_operand:DF 2 \"nonimmediate_operand\" \"\")\n \t\t      (match_operand:DF 3 \"nonimmediate_operand\" \"\")))]\n   \"!TARGET_64BIT && reload_completed\"\n@@ -16549,6 +16860,12 @@\n    (clobber (reg:CC 17))]\n   \"TARGET_SSE\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\n+   /* Avoid combine from being smart and converting min/max\n+      instruction patterns into conditional moves.  */\n+   && ((GET_CODE (operands[1]) != LT && GET_CODE (operands[1]) != GT\n+\t&& GET_CODE (operands[1]) != UNLE && GET_CODE (operands[1]) != UNGE)\n+       || !rtx_equal_p (operands[4], operands[2])\n+       || !rtx_equal_p (operands[5], operands[3]))\n    && (!TARGET_IEEE_FP\n        || (GET_CODE (operands[1]) != EQ && GET_CODE (operands[1]) != NE))\"\n   \"#\")\n@@ -16576,6 +16893,12 @@\n    (clobber (reg:CC 17))]\n   \"TARGET_SSE2\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\n+   /* Avoid combine from being smart and converting min/max\n+      instruction patterns into conditional moves.  */\n+   && ((GET_CODE (operands[1]) != LT && GET_CODE (operands[1]) != GT\n+\t&& GET_CODE (operands[1]) != UNLE && GET_CODE (operands[1]) != UNGE)\n+       || !rtx_equal_p (operands[4], operands[2])\n+       || !rtx_equal_p (operands[5], operands[3]))\n    && (!TARGET_IEEE_FP\n        || (GET_CODE (operands[1]) != EQ && GET_CODE (operands[1]) != NE))\"\n   \"#\")\n@@ -16637,6 +16960,14 @@\n    (set (subreg:TI (match_dup 0) 0) (ior:TI (subreg:TI (match_dup 6) 0)\n \t\t\t\t\t    (subreg:TI (match_dup 7) 0)))]\n {\n+  if (GET_MODE (operands[2]) == DFmode\n+      && TARGET_SSE_PARTIAL_REGS && !optimize_size)\n+    {\n+      rtx op = simplify_gen_subreg (V2DFmode, operands[2], DFmode, 0);\n+      emit_insn (gen_sse2_unpcklpd (op, op, op));\n+      op = simplify_gen_subreg (V2DFmode, operands[3], DFmode, 0);\n+      emit_insn (gen_sse2_unpcklpd (op, op, op));\n+    }\n   /* If op2 == op3, op3 will be clobbered before it is used.\n      This should be optimized out though.  */\n   if (operands_match_p (operands[2], operands[3]))\n@@ -16743,8 +17074,22 @@\n        || const0_operand (operands[3], GET_MODE (operands[0])))\"\n   [(set (match_dup 0) (match_op_dup 1 [(match_dup 0) (match_dup 5)]))\n    (set (subreg:TI (match_dup 0) 0) (and:TI (match_dup 6)\n-\t\t\t\t\t    (subreg:TI (match_dup 7) 0)))]\n+\t\t\t\t\t    (match_dup 7)))]\n {\n+  if (TARGET_SSE_PARTIAL_REGS && !optimize_size\n+      && GET_MODE (operands[2]) == DFmode)\n+    {\n+      if (REG_P (operands[2]))\n+\t{\n+\t  rtx op = simplify_gen_subreg (V2DFmode, operands[2], DFmode, 0);\n+\t  emit_insn (gen_sse2_unpcklpd (op, op, op));\n+\t}\n+      if (REG_P (operands[3]))\n+\t{\n+\t  rtx op = simplify_gen_subreg (V2DFmode, operands[3], DFmode, 0);\n+\t  emit_insn (gen_sse2_unpcklpd (op, op, op));\n+\t}\n+    }\n   PUT_MODE (operands[1], GET_MODE (operands[0]));\n   if (!sse_comparison_operator (operands[1], VOIDmode))\n     {\n@@ -16764,6 +17109,8 @@\n       operands[7] = operands[2];\n       operands[6] = gen_rtx_SUBREG (TImode, operands[0], 0);\n     }\n+  operands[7] = simplify_gen_subreg (TImode, operands[7],\n+  \t\t\t\t     GET_MODE (operands[7]), 0);\n })\n \n (define_expand \"allocate_stack_worker\"\n@@ -17759,41 +18106,53 @@\n   [(set (match_operand 0 \"\" \"\")\n \t(call (mem:QI (match_operand:SI 1 \"call_insn_operand\" \"rsm\"))\n \t      (match_operand:SI 2 \"\" \"\")))]\n-  \"!TARGET_64BIT\"\n+  \"!SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n   if (constant_call_address_operand (operands[1], QImode))\n-    {\n-      if (SIBLING_CALL_P (insn))\n-\treturn \"jmp\\t%P1\";\n-      else\n-\treturn \"call\\t%P1\";\n-    }\n-  if (SIBLING_CALL_P (insn))\n-    return \"jmp\\t%*%1\";\n-  else\n-    return \"call\\t%*%1\";\n+    return \"call\\t%P1\";\n+  return \"call\\t%*%1\";\n+}\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*sibcall_value_1\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:QI (match_operand:SI 1 \"sibcall_insn_operand\" \"s,c,d,a\"))\n+\t      (match_operand:SI 2 \"\" \"\")))]\n+  \"SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n+{\n+  if (constant_call_address_operand (operands[1], QImode))\n+    return \"jmp\\t%P1\";\n+  return \"jmp\\t%*%1\";\n }\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn \"*call_value_1_rex64\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (mem:QI (match_operand:DI 1 \"call_insn_operand\" \"rsm\"))\n \t      (match_operand:DI 2 \"\" \"\")))]\n-  \"TARGET_64BIT\"\n+  \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n {\n   if (constant_call_address_operand (operands[1], QImode))\n-    {\n-      if (SIBLING_CALL_P (insn))\n-\treturn \"jmp\\t%P1\";\n-      else\n-\treturn \"call\\t%P1\";\n-    }\n-  if (SIBLING_CALL_P (insn))\n-    return \"jmp\\t%A1\";\n-  else\n-    return \"call\\t%A1\";\n+    return \"call\\t%P1\";\n+  return \"call\\t%A1\";\n }\n   [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*sibcall_value_1_rex64\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:QI (match_operand:DI 1 \"constant_call_address_operand\" \"\"))\n+\t      (match_operand:DI 2 \"\" \"\")))]\n+  \"SIBLING_CALL_P (insn) && TARGET_64BIT\"\n+  \"jmp\\t%P1\"\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*sibcall_value_1_rex64_v\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:QI (reg:DI 40))\n+\t      (match_operand:DI 1 \"\" \"\")))]\n+  \"SIBLING_CALL_P (insn) && TARGET_64BIT\"\n+  \"jmp\\t*%%r11\"\n+  [(set_attr \"type\" \"callv\")])\n \f\n (define_insn \"trap\"\n   [(trap_if (const_int 1) (const_int 5))]\n@@ -17838,7 +18197,7 @@\n {\n   operands[2] = gen_label_rtx ();\n   output_asm_insn (\"j%c0\\t%l2\\; int\\t%1\", operands);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t     CODE_LABEL_NUMBER (operands[2]));\n   RET;\n })\n@@ -17851,28 +18210,93 @@\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\"))]\n   \"TARGET_SSE\"\n-  ;; @@@ let's try to use movaps here.\n   \"movaps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+(define_split\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n+\t(match_operand:V4SF 1 \"zero_extended_scalar_load_operand\" \"\"))]\n+  \"TARGET_SSE\"\n+  [(set (match_dup 0)\n+\t(vec_merge:V4SF\n+\t (vec_duplicate:V4SF (match_dup 1))\n+\t (match_dup 2)\n+\t (const_int 1)))]\n+{\n+  operands[1] = simplify_gen_subreg (SFmode, operands[1], V4SFmode, 0);\n+  operands[2] = CONST0_RTX (V4SFmode);\n+})\n+\n (define_insn \"movv4si_internal\"\n   [(set (match_operand:V4SI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V4SI 1 \"nonimmediate_operand\" \"xm,x\"))]\n   \"TARGET_SSE\"\n-  ;; @@@ let's try to use movaps here.\n-  \"movaps\\t{%1, %0|%0, %1}\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return \"movaps\\t{%1, %0|%0, %1}\";\n+  else\n+    return \"movdqa\\t{%1, %0|%0, %1}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"1\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"TI\")))])\n \n (define_insn \"movv2di_internal\"\n   [(set (match_operand:V2DI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V2DI 1 \"nonimmediate_operand\" \"xm,x\"))]\n-  \"TARGET_SSE\"\n-  ;; @@@ let's try to use movaps here.\n-  \"movdqa\\t{%1, %0|%0, %1}\"\n+  \"TARGET_SSE2\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return \"movaps\\t{%1, %0|%0, %1}\";\n+  else\n+    return \"movdqa\\t{%1, %0|%0, %1}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"1\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"TI\")))])\n+\n+(define_split\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"\")\n+\t(match_operand:V2DF 1 \"zero_extended_scalar_load_operand\" \"\"))]\n+  \"TARGET_SSE2\"\n+  [(set (match_dup 0)\n+\t(vec_merge:V2DF\n+\t (vec_duplicate:V2DF (match_dup 1))\n+\t (match_dup 2)\n+\t (const_int 1)))]\n+{\n+  operands[1] = simplify_gen_subreg (DFmode, operands[1], V2DFmode, 0);\n+  operands[2] = CONST0_RTX (V2DFmode);\n+})\n \n (define_insn \"movv8qi_internal\"\n   [(set (match_operand:V8QI 0 \"nonimmediate_operand\" \"=y,m\")\n@@ -17922,28 +18346,85 @@\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm,x\"))]\n   \"TARGET_SSE2\"\n-  ;; @@@ let's try to use movaps here.\n-  \"movapd\\t{%1, %0|%0, %1}\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return \"movaps\\t{%1, %0|%0, %1}\";\n+  else\n+    return \"movapd\\t{%1, %0|%0, %1}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"V2DF\"))\n+\t       (eq_attr \"alternative\" \"1\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"V2DF\"))]\n+\t       (const_string \"V2DF\")))])\n \n (define_insn \"movv8hi_internal\"\n   [(set (match_operand:V8HI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V8HI 1 \"nonimmediate_operand\" \"xm,x\"))]\n   \"TARGET_SSE2\"\n-  ;; @@@ let's try to use movaps here.\n-  \"movaps\\t{%1, %0|%0, %1}\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return \"movaps\\t{%1, %0|%0, %1}\";\n+  else\n+    return \"movdqa\\t{%1, %0|%0, %1}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"1\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"TI\")))])\n \n (define_insn \"movv16qi_internal\"\n   [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(match_operand:V16QI 1 \"nonimmediate_operand\" \"xm,x\"))]\n   \"TARGET_SSE2\"\n-  ;; @@@ let's try to use movaps here.\n-  \"movaps\\t{%1, %0|%0, %1}\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return \"movaps\\t{%1, %0|%0, %1}\";\n+  else\n+    return \"movdqa\\t{%1, %0|%0, %1}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"1\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"TI\")))])\n \n (define_expand \"movv2df\"\n   [(set (match_operand:V2DF 0 \"general_operand\" \"\")\n@@ -18160,26 +18641,83 @@\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=x,x,m\")\n \t(match_operand:TI 1 \"general_operand\" \"C,xm,x\"))]\n   \"TARGET_SSE && !TARGET_64BIT\"\n-  \"@\n-   xorps\\t%0, %0\n-   movaps\\t{%1, %0|%0, %1}\n-   movaps\\t{%1, %0|%0, %1}\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (get_attr_mode (insn) == MODE_V4SF)\n+\treturn \"xorps\\t%0, %0\";\n+      else\n+\treturn \"pxor\\t%0, %0\";\n+    case 1:\n+    case 2:\n+      if (get_attr_mode (insn) == MODE_V4SF)\n+\treturn \"movaps\\t{%1, %0|%0, %1}\";\n+      else\n+\treturn \"movdqa\\t{%1, %0|%0, %1}\";\n+    default:\n+      abort ();\n+    }\n+}\n   [(set_attr \"type\" \"ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"0,1\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"2\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"TI\")))])\n \n (define_insn \"*movti_rex64\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o,x,mx,x\")\n-\t(match_operand:TI 1 \"general_operand\" \"riFo,riF,O,x,m\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o,x,x,xm\")\n+\t(match_operand:TI 1 \"general_operand\" \"riFo,riF,O,xm,x\"))]\n   \"TARGET_64BIT\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n-  \"@\n-   #\n-   #\n-   xorps\\t%0, %0\n-   movaps\\\\t{%1, %0|%0, %1}\n-   movaps\\\\t{%1, %0|%0, %1}\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+    case 1:\n+      return \"#\";\n+    case 2:\n+      if (get_attr_mode (insn) == MODE_V4SF)\n+\treturn \"xorps\\t%0, %0\";\n+      else\n+\treturn \"pxor\\t%0, %0\";\n+    case 3:\n+    case 4:\n+      if (get_attr_mode (insn) == MODE_V4SF)\n+\treturn \"movaps\\t{%1, %0|%0, %1}\";\n+      else\n+\treturn \"movdqa\\t{%1, %0|%0, %1}\";\n+    default:\n+      abort ();\n+    }\n+}\n   [(set_attr \"type\" \"*,*,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+        (cond [(eq_attr \"alternative\" \"2,3\")\n+\t\t (if_then_else\n+\t\t   (ne (symbol_ref \"optimize_size\")\n+\t\t       (const_int 0))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))\n+\t       (eq_attr \"alternative\" \"4\")\n+\t\t (if_then_else\n+\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t    (const_int 0))\n+\t\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t\t    (const_int 0)))\n+\t\t   (const_string \"V4SF\")\n+\t\t   (const_string \"TI\"))]\n+\t       (const_string \"DI\")))])\n \n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n@@ -18329,11 +18867,21 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"sse_loadss\"\n+(define_expand \"sse_loadss\"\n+  [(match_operand:V4SF 0 \"register_operand\" \"\")\n+   (match_operand:SF 1 \"memory_operand\" \"\")]\n+  \"TARGET_SSE\"\n+{\n+  emit_insn (gen_sse_loadss_1 (operands[0], operands[1],\n+\t\t\t       CONST0_RTX (V4SFmode)));\n+  DONE;\n+})\n+\n+(define_insn \"sse_loadss_1\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n-\t (match_operand:V4SF 1 \"memory_operand\" \"m\")\n-\t (vec_duplicate:V4SF (float:SF (const_int 0)))\n+\t (vec_duplicate:V4SF (match_operand:SF 1 \"memory_operand\" \"m\"))\n+\t (match_operand:V4SF 2 \"const0_operand\" \"X\")\n \t (const_int 1)))]\n   \"TARGET_SSE\"\n   \"movss\\t{%1, %0|%0, %1}\"\n@@ -18856,12 +19404,26 @@\n ;; this insn.\n (define_insn \"sse_clrv4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-        (unspec:V4SF [(const_int 0)] UNSPEC_NOP))]\n+\t(match_operand:V4SF 1 \"const0_operand\" \"X\"))]\n   \"TARGET_SSE\"\n-  \"xorps\\t{%0, %0|%0, %0}\"\n+{\n+  if (get_attr_mode (insn) == MODE_TI)\n+    return \"pxor\\t{%0, %0|%0, %0}\";\n+  else\n+    return \"xorps\\t{%0, %0|%0, %0}\";\n+}\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"memory\" \"none\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"mode\")\n+\t(if_then_else\n+\t   (and (and (ne (symbol_ref \"TARGET_SSE_LOAD0_BY_PXOR\")\n+\t\t\t (const_int 0))\n+\t\t     (ne (symbol_ref \"TARGET_SSE2\")\n+\t\t\t (const_int 0)))\n+\t\t(eq (symbol_ref \"optimize_size\")\n+\t\t    (const_int 0)))\n+\t (const_string \"TI\")\n+\t (const_string \"V4SF\")))])\n \n ;; Use xor, but don't show input operands so they aren't live before\n ;; this insn.\n@@ -19093,6 +19655,18 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"SF\")])\n \n+(define_insn \"cvtsi2ssq\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V4SF\n+\t (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t (vec_duplicate:V4SF\n+\t  (float:SF (match_operand:DI 2 \"nonimmediate_operand\" \"rm\")))\n+\t (const_int 14)))]\n+  \"TARGET_SSE && TARGET_64BIT\"\n+  \"cvtsi2ssq\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"mode\" \"SF\")])\n+\n (define_insn \"cvtss2si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(vec_select:SI\n@@ -19883,7 +20457,7 @@\n         output_asm_insn (\\\"rex\\\", operands);\n       output_asm_insn (\\\"movaps\\\\t{%5, %4|%4, %5}\\\", operands);\n     }\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (operands[3]));\n   RET;\n }\n@@ -20720,7 +21294,7 @@\n \t(vec_merge:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n \t \t\t(vec_duplicate:V4SF\n \t\t\t  (float_truncate:V2SF\n-\t\t\t    (match_operand:V2DF 2 \"register_operand\" \"xm\")))\n+\t\t\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")))\n \t\t\t(const_int 14)))]\n   \"TARGET_SSE2\"\n   \"cvtsd2ss\\t{%2, %0|%0, %2}\"\n@@ -20732,7 +21306,7 @@\n \t(vec_merge:V2DF (match_operand:V2DF 1 \"register_operand\" \"0\")\n \t \t\t(float_extend:V2DF\n \t\t\t  (vec_select:V2SF\n-\t\t\t    (match_operand:V4SF 2 \"register_operand\" \"xm\")\n+\t\t\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n \t\t\t    (parallel [(const_int 0)\n \t\t\t\t       (const_int 1)])))\n \t\t\t(const_int 2)))]\n@@ -21008,10 +21582,20 @@\n (define_insn \"sse2_clrti\"\n   [(set (match_operand:TI 0 \"register_operand\" \"=x\") (const_int 0))]\n   \"TARGET_SSE2\"\n-  \"pxor\\t{%0, %0|%0, %0}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+{\n+  if (get_attr_mode (insn) == MODE_TI)\n+    return \"pxor\\t%0, %0\";\n+  else\n+    return \"xorps\\t%0, %0\";\n+}\n+  [(set_attr \"type\" \"ssemov\")\n    (set_attr \"memory\" \"none\")\n-   (set_attr \"mode\" \"TI\")])\n+   (set (attr \"mode\")\n+\t      (if_then_else\n+\t\t(ne (symbol_ref \"optimize_size\")\n+\t\t    (const_int 0))\n+\t\t(const_string \"V4SF\")\n+\t\t(const_string \"TI\")))])\n \n ;; MMX unsigned averages/sum of absolute differences\n \n@@ -21716,11 +22300,21 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-(define_insn \"sse2_loadsd\"\n+(define_expand \"sse2_loadsd\"\n+  [(match_operand:V2DF 0 \"register_operand\" \"\")\n+   (match_operand:DF 1 \"memory_operand\" \"\")]\n+  \"TARGET_SSE2\"\n+{\n+  emit_insn (gen_sse2_loadsd_1 (operands[0], operands[1],\n+\t\t\t        CONST0_RTX (V2DFmode)));\n+  DONE;\n+})\n+\n+(define_insn \"sse2_loadsd_1\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V2DF\n-\t (match_operand:DF 1 \"memory_operand\" \"m\")\n-\t (vec_duplicate:DF (float:DF (const_int 0)))\n+\t (vec_duplicate:V2DF (match_operand:DF 1 \"memory_operand\" \"m\"))\n+\t (match_operand:V2DF 2 \"const0_operand\" \"X\")\n \t (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"movsd\\t{%1, %0|%0, %1}\""}, {"sha": "d9f6d84b022af132c1603afac7e2ddc83a1e4ba2", "filename": "gcc/config/i386/k6.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fk6.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fk6.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fk6.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -71,7 +71,7 @@\n ;; Load unit have two cycle latency, but we take care for it in adjust_cost\n (define_function_unit \"k6_load\" 1 0\n   (and (eq_attr \"cpu\" \"k6\")\n-       (ior (eq_attr \"type\" \"pop\")\n+       (ior (eq_attr \"type\" \"pop,leave\")\n \t    (eq_attr \"memory\" \"load,both\")))\n   1 1)\n "}, {"sha": "8d41add6cee59fe04b7382b0367a9c1f588e3fbf", "filename": "gcc/config/i386/lynx-ng.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Flynx-ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Flynx-ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx-ng.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -68,10 +68,3 @@ Boston, MA 02111-1307, USA.  */\n #undef  ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \".%s%ld\", (PREFIX), (long)(NUMBER))\n-\n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)"}, {"sha": "bdbfbe65f0fc7366bd40a80377efea58689d69d7", "filename": "gcc/config/i386/lynx.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -69,10 +69,3 @@ Boston, MA 02111-1307, USA.  */\n #undef  ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \".%s%ld\", (PREFIX), (long)(NUMBER))\n-\n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)"}, {"sha": "24f8becb02ac3db18e93d3751e194a135af8c6ea", "filename": "gcc/config/i386/pentium.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fpentium.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fpentium.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpentium.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -194,7 +194,7 @@\n \n (define_insn_reservation \"pent_pop\" 1\n   (and (eq_attr \"cpu\" \"pentium\")\n-       (eq_attr \"type\" \"pop\"))\n+       (eq_attr \"type\" \"pop,leave\"))\n   \"pentium-firstuv\")\n \n ;; Call and branch instruction can execute in either pipe, but"}, {"sha": "67cc1f1e2938236ea579559418eb12ba9825f761", "filename": "gcc/config/i386/ppro.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fppro.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fppro.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fppro.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -29,7 +29,7 @@\n (define_attr \"ppro_uops\" \"one,few,many\"\n   (cond [(eq_attr \"type\" \"other,multi,call,callv,fpspc,str\")\n \t   (const_string \"many\")\n-\t (eq_attr \"type\" \"icmov,fcmov,str,cld\")\n+\t (eq_attr \"type\" \"icmov,fcmov,str,cld,leave\")\n \t   (const_string \"few\")\n \t (eq_attr \"type\" \"imov\")\n \t   (if_then_else (eq_attr \"memory\" \"store,both\")\n@@ -118,7 +118,7 @@\n \n (define_function_unit \"ppro_p2\" 1 0\n   (and (eq_attr \"cpu\" \"pentiumpro\")\n-       (ior (eq_attr \"type\" \"pop\")\n+       (ior (eq_attr \"type\" \"pop,leave\")\n \t    (eq_attr \"memory\" \"load,both\")))\n   3 1)\n "}, {"sha": "3b25b65d826cb5078400afdb2a3b465d50dcf309", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -343,7 +343,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_ELF)\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_ALIGN ((FILE), 2);\t\t\t\t\t\\\n-  ASM_OUTPUT_INTERNAL_LABEL((FILE),(PREFIX),(NUM));\t\t\t\\\n+  (*targetm.asm_out.internal_label)((FILE),(PREFIX),(NUM));\t\t\t\\\n } while (0)\n \n #undef ASM_OUTPUT_IDENT\n@@ -354,10 +354,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\t\t\t\\\n   if (TARGET_ELF) (*targetm.asm_out.globalize_label) (FILE, XSTR (FUN, 0))\n \n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\t\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n-\n /* The prefix to add to user-visible assembler symbols.  */\n \n #undef USER_LABEL_PREFIX"}, {"sha": "b4ea698cbc24c1ae889e79876a77c9a7e5a06873", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -14,7 +14,9 @@ LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/include \\\n \t-I$(srcdir)/../winsup/cygwin/include \\\n \t-I$(srcdir)/../winsup/w32api/include\n \n-winnt.o: $(srcdir)/config/i386/winnt.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n+winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n+  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n \n # Don't run fixproto"}, {"sha": "d5fff6167b7723d827eb7b152123dfc36db9d432", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1,6 +1,7 @@\n LIB1ASMSRC = i386/cygwin.asm\n LIB1ASMFUNCS = _chkstk\n \n-winnt.o: $(srcdir)/config/i386/winnt.c $(TM_P_H)\n+winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n+  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n-"}, {"sha": "ee4a74093f8e0332c82a287cc718dd602af47d41", "filename": "gcc/config/i386/vxi386.h", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi386%2Fvxi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi386%2Fvxi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxi386.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,66 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  VxWorks i386 version.\n-   Copyright (C) 1998, 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (80386, VxWorks BSD syntax)\"); \n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      builtin_define (\"__vxworks\");\t\t\t\\\n-      builtin_assert (\"system=unix\");\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-      if (TARGET_386)\t\t\t\t\t\\\n-\tbuiltin_define (\"CPU=I80386\");\t\t\t\\\n-      else if (TARGET_486)\t\t\t\t\\\n-\tbuiltin_define (\"CPU=I80486\");\t\t\t\\\n-      else if (TARGET_PENTIUM)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"CPU=PENTIUM\");\t\t\\\n-\t  builtin_define (\"CPU_VARIANT=PENTIUM\");\t\\\n-\t}\t\t\t\t\t\t\\\n-      else if (TARGET_PENTIUMPRO)\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"CPU=PENTIUM\");\t\t\\\n-\t  builtin_define (\"CPU_VARIANT=PENTIUMPRO\");\t\\\n-\t}\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define HANDLE_SYSV_PRAGMA 1\n-\n-/* VxWorks does all the library stuff itself.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"\"\n-\n-/* VxWorks uses object files, not loadable images.  make linker just\n-   combine objects.  */\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-r\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"\""}, {"sha": "bc2527aaca5cefbbcae1597e9ef97ad4e5881cf1", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "bd010e47bc5115d1ffdc3e9476c358bc37c8991a", "filename": "gcc/config/i386/xm-i386-interix.h", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi386%2Fxm-i386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi386%2Fxm-i386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-i386-interix.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,32 +0,0 @@\n-/* Configuration for GNU compiler\n-   for an Intel i386 or later processor running Interix.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n-   Contributed by Donn Terry (donn@interix.com)\n-     Derived from code by Douglas B. Rupp (drupp@cs.washington.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONGLONG\n-#ifdef __GNUC__\n-#   define HOST_WIDEST_INT long long\n-#else\n-#   define HOST_WIDEST_INT __int64\n-#endif\n-#define HOST_WIDEST_INT_PRINT_DEC \"%lld\"\n-#define HOST_WIDEST_INT_PRINT_UNSIGNED \"%llu\"\n-#define HOST_WIDEST_INT_PRINT_HEX \"0x%llx\""}, {"sha": "781224a0e529d23cc9ac1c2269382cba4b788c37", "filename": "gcc/config/i960/i960-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n #include \"c-pragma.h\""}, {"sha": "08894aa46b15aecbba7a8a96200298d01062f509", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include <math.h>\n #include \"rtl.h\"\n #include \"regs.h\""}, {"sha": "3ce98e2301190c1248c4b9ea9a1eb4a231f65144", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -931,12 +931,6 @@ struct cum_args { int ca_nregparms; int ca_nstackparms; };\n \f\n /* Addressing modes, and classification of registers for them.  */\n \n-/* #define HAVE_POST_INCREMENT 0 */\n-/* #define HAVE_POST_DECREMENT 0 */\n-\n-/* #define HAVE_PRE_DECREMENT 0 */\n-/* #define HAVE_PRE_INCREMENT 0 */\n-\n /* Macros to check register numbers against specific register classes.  */\n \n /* These assume that REGNO is a hard or pseudo reg number.\n@@ -1259,12 +1253,6 @@ extern struct rtx_def *i960_compare_op0, *i960_compare_op1;\n \n #define USER_LABEL_PREFIX \"_\"\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n@@ -1350,13 +1338,6 @@ extern struct rtx_def *i960_compare_op0, *i960_compare_op1;\n \n #define\tLABEL_ALIGN_AFTER_BARRIER(LABEL) (TARGET_CODE_ALIGN ? 3 : 0)\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-\t( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-\t  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n \f\n /* Print operand X (an rtx) in assembler syntax to file FILE.\n    CODE is a letter or dot (`z' in `%z0') or 0 if no letter was specified."}, {"sha": "e335294f11b03c0c8fc555491f295a8f1fd62a50", "filename": "gcc/config/i960/t-960bare", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Ft-960bare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fi960%2Ft-960bare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-960bare?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -18,9 +18,9 @@ xp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n \n-i960-c.o: $(srcdir)/config/i960/i960-c.c $(CONFIG_H) $(SYSTEM_H) cpplib.h \\\n-    $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+i960-c.o: $(srcdir)/config/i960/i960-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i960/i960-c.c\n \n MULTILIB_OPTIONS=mnumerics/msoft-float mlong-double-64\n MULTILIB_DIRNAMES=float soft-float ld64"}, {"sha": "0c5f40fdbf5bdb9ce6b1f242d2117c489f1f89a8", "filename": "gcc/config/i960/t-vxworks960", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-vxworks960?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,33 +0,0 @@\n-# We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n-# does not have _exit.\n-TARGET_LIBGCC2_CFLAGS = -Dexit=unused_exit\n-LIB2FUNCS_EXTRA = xp-bit.c\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-xp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n-\n-i960-c.o: $(srcdir)/config/i960/i960-c.c $(CONFIG_H) $(SYSTEM_H) cpplib.h \\\n-    $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n-\n-MULTILIB_OPTIONS=mnumerics/msoft-float mlong-double-64\n-MULTILIB_DIRNAMES=float soft-float ld64\n-MULTILIB_MATCHES=mnumerics=msb mnumerics=msc mnumerics=mkb mnumerics=mkc mnumerics=mmc mnumerics=mcb mnumerics=mcc msoft-float=msa msoft-float=mka msoft-float=mca msoft-float=mcf\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "76352582671a00b3f28c529472f8c17677eb3b88", "filename": "gcc/config/i960/vx960-coff.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Fvx960-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Fvx960-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fvx960-coff.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,73 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  Vxworks i960 version.\n-   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This file just exists to give specs for the 960 running on VxWorks.\n-   VxWorks does all the library stuff itself.  */\n-\n-#undef MULTILIB_DEFAULTS\n-#define MULTILIB_DEFAULTS { \"msoft-float\" }\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\"\n-\n-/* Predefine vxworks.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di960 -Di80960 -DI960 -DI80960 -Dvxworks -Acpu=i960 -Amachine=i960\"\n-\n-/* The VxWorks header files expect the compiler to define CPU to a\n-   magic number.  Note that we define CPU here even if the user\n-   has specified -ansi.  This violates user namespace, but the VxWorks\n-   headers, and potentially user code, all explicitly rely upon the\n-   definition of CPU in order to get the proper processor information.  */\n-\n-#undef CPP_SPEC\n-#define\tCPP_SPEC \"%{mic*:-D__i960\\\n-\t\t\t%{mka:-D__i960KA}%{mkb:-D__i960KB}\\\n-\t\t\t%{msa:-D__i960SA}%{msb:-D__i960SB}\\\n-\t\t\t%{mmc:-D__i960MC}\\\n-\t\t\t%{mca:-D__i960CA}%{mcc:-D__i960CC}\\\n-\t\t\t%{mcf:-D__i960CF}}\\\n-\t%{mka:-D__i960KA__ -D__i960_KA__ -DCPU=I960KA}\\\n-\t%{mkb:-D__i960KB__ -D__i960_KB__ -DCPU=I960KB}\\\n-\t%{msa:-D__i960SA__ -D__i960_SA__}\\\n-\t%{msb:-D__i960SB__ -D__i960_SB__}\\\n-\t%{mmc:-D__i960MC__ -D__i960_MC__}\\\n-\t%{mca:-D__i960CA__ -D__i960_CA__ -DCPU=I960CA}\\\n-\t%{mcc:-D__i960CC__ -D__i960_CC__}\\\n-\t%{mcf:-D__i960CF__ -D__i960_CF__}\\\n-\t%{!mka:%{!mkb:%{!msa:%{!msb:%{!mmc:%{!mca:\\\n-\t\t%{!mcc:%{!mcf:-D__i960_CA -D__i960CA__ -DCPU=I960CA\\\n-\t\t\t      %{mic*:-D__i960CA}}}}}}}}}\\\n-\t%{mlong-double-64:-D__LONG_DOUBLE_64__}\"\n-\n-/* Default to -mca.  */\n-\n-#undef CC1_SPEC\n-#define CC1_SPEC \\\n-\t\"%{!mka:%{!mkb:%{!msa:%{!msb:%{!mmc:%{!mca:%{!mcc:%{!mcf:-mca}}}}}}}}\\\n-\t %{!gs*:%{!gc*:%{mbout:%{g*:-gstabs}}\\\n-\t\t       %{mcoff:%{g*:-gcoff}}\\\n-\t\t       %{!mbout:%{!mcoff:%{g*:-gcoff}}}}}\""}, {"sha": "ebf70dc183a8422f804951165bf1879d2fc2fc16", "filename": "gcc/config/i960/vx960.h", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Fvx960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fi960%2Fvx960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fvx960.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,30 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  Vxworks i960 version.\n-   Copyright (C) 1994, 1996 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This file just exists to give specs for the 960 running on VxWorks. \n-   VxWorks does all the library stuff itself.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\""}, {"sha": "efd3a9a1efc7960594aa3160bab6622c33b45698", "filename": "gcc/config/ia64/ia64-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"cpplib.h\"\n #include \"c-common.h\""}, {"sha": "dd7b6d7350ae595f87aca12ffee82fd02ff1dc76", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"regs.h\""}, {"sha": "3cfc061920fca9a67f95841b10f35a8698694e5f", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1903,18 +1903,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n   sprintf (LABEL, \"*.%s%d\", PREFIX, NUM);\t\t\t\t\\\n } while (0)\n \n-/* A C expression to assign to OUTVAR (which is a variable of type `char *') a\n-   newly allocated string made from the string NAME and the number NUMBER, with\n-   some suitable punctuation added.  */\n-\n /* ??? Not sure if using a ? in the name for Intel as is safe.  */\n \n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR, NAME, NUMBER)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  (OUTVAR) = (char *) alloca (strlen (NAME) + 12);\t\t\t\\\n-  sprintf (OUTVAR, \"%s%c%ld\", (NAME), (TARGET_GNU_AS ? '.' : '?'),\t\\\n-\t   (long)(NUMBER));\t\t\t\t\t\t\\\n-} while (0)\n+#define ASM_PN_FORMAT (TARGET_GNU_AS ? \"%s.%lu\" : \"%s?%lu\")\n \n /* A C statement to output to the stdio stream STREAM assembler code which\n    defines (equates) the symbol NAME to have the value VALUE.  */\n@@ -2231,7 +2222,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Use tags for debug info labels, so that they don't break instruction\n    bundles.  This also avoids getting spurious DV warnings from the\n-   assembler.  This is similar to ASM_OUTPUT_INTERNAL_LABEL, except that we\n+   assembler.  This is similar to (*targetm.asm_out.internal_label), except that we\n    add brackets around the label.  */\n \n #define ASM_OUTPUT_DEBUG_LABEL(FILE, PREFIX, NUM) \\"}, {"sha": "67362a898cd7c1039b849aae6d116acb1f039996", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -43,5 +43,5 @@ crtfastmath.o: $(srcdir)/config/ia64/crtfastmath.c $(GCC_PASSES)\n LIB2ADDEH = $(srcdir)/config/ia64/unwind-ia64.c $(srcdir)/unwind-sjlj.c\n \n ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n-    $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) c-pragma.h toplev.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) c-pragma.h toplev.h\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/ia64/ia64-c.c"}, {"sha": "d04e5477dd7de315255b005c86da6a0bb60561d7", "filename": "gcc/config/interix.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -70,19 +70,6 @@ for windows/multi thread */\n   && strcmp (STR, \"Tbss\"))\n \n \n-#if 0\t\n-/* don't do this until we can sort out the default path issues. MK */\n-#undef STANDARD_EXEC_PREFIX\n-#define STANDARD_EXEC_PREFIX \"\"\n-\n-#undef STANDARD_STARTFILE_PREFIX\n-#define STANDARD_STARTFILE_PREFIX \"\"\n-\n-#undef TOOLDIR_BASE_PREFIX\n-#define TOOLDIR_BASE_PREFIX \"\"\n-\n-#endif /* 0 */\n-\n #define STDC_0_IN_SYSTEM_HEADERS 1\n \n #define HANDLE_SYSV_PRAGMA 1"}, {"sha": "93d2ab27f5c05aadae11c10fc6dbacdd91d4dc47", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -22,6 +22,8 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "467dfa7b2d26b8078d40ab95714191946f31de04", "filename": "gcc/config/ip2k/ip2k.h", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fip2k%2Fip2k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fip2k%2Fip2k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -2129,28 +2129,6 @@ do {\t\t\t\t\t\t\t\\\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \".global\\t\"\n \n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n-/* A C expression to assign to OUTVAR (which is a variable of type\n-   `char *') a newly allocated string made from the string NAME and\n-   the number NUMBER, with some suitable punctuation added.  Use\n-   `alloca' to get space for the string.\n-\n-   The string will be used as an argument to `ASM_OUTPUT_LABELREF' to\n-   produce an assembler label for an internal static variable whose\n-   name is NAME.  Therefore, the string must be such as to result in\n-   valid assembler code.  The argument NUMBER is different each time\n-   this macro is executed; it prevents conflicts between\n-   similarly-named internal static variables in different scopes.\n-\n-   Ideally this string should not be a valid C identifier, to prevent\n-   any conflict with the user's own symbols.  Most assemblers allow\n-   periods or percent signs in assembler symbols; putting at least\n-   one of these between the name and the number will suffice.  */\n-\n #define REGISTER_NAMES\t{\t\t\t\t\t\\\n   \"$00\",\"$01\",\"$02\",\"$03\",\"iph\",\"ipl\",\"sph\",\"spl\",\t\t\\\n   \"pch\",\"pcl\",\"wreg\",\"status\",\"dph\",\"dpl\",\"$0e\",\"mulh\",\t\t\\\n@@ -2266,7 +2244,7 @@ do {\t\t\t\t\t\t\t\\\n    The definition should be a C statement to output to the stdio\n    stream STREAM an assembler pseudo-instruction to generate a\n    reference to a label.  VALUE is the number of an internal label\n-   whose definition is output using `ASM_OUTPUT_INTERNAL_LABEL'.  For\n+   whose definition is output using `(*targetm.asm_out.internal_label)'.  For\n    example,\n \n    fprintf ((STREAM), \"\\t.word L%d\\n\", (VALUE))  */"}, {"sha": "b95a4684a34765683f50feca33b1c5a3eaecd1ca", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\""}, {"sha": "195b4682a1fb3c31702f7078037f406d66706baf", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1694,17 +1694,6 @@ sbss_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10);\\\n-      sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO));\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */\n #ifndef SUBTARGET_REGISTER_NAMES"}, {"sha": "6f6165946054d20f41d8eb2e432e9c39be46d7ab", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -35,6 +35,8 @@ Boston, MA 02111-1307, USA.\n #include <stdio.h>\n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n@@ -64,7 +66,6 @@ static int go_if_legitimate_address_internal PARAMS((rtx, enum machine_mode,\n                                                      int));\n static int register_indirect_p PARAMS((rtx, enum machine_mode, int));\n static rtx m68hc11_expand_compare PARAMS((enum rtx_code, rtx, rtx));\n-static int m68hc11_autoinc_compatible_p PARAMS ((rtx, rtx));\n static int must_parenthesize PARAMS ((rtx));\n static int m68hc11_shift_cost PARAMS ((enum machine_mode, rtx, int));\n static int m68hc11_auto_inc_p PARAMS ((rtx));\n@@ -78,6 +79,8 @@ static void m68hc11_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static void m68hc11_asm_out_constructor PARAMS ((rtx, int));\n static void m68hc11_asm_out_destructor PARAMS ((rtx, int));\n static void m68hc11_encode_section_info PARAMS((tree, int));\n+static int autoinc_mode PARAMS((rtx));\n+static int m68hc11_make_autoinc_notes PARAMS((rtx *, void *));\n \n rtx m68hc11_soft_tmp_reg;\n "}, {"sha": "393ab7bbf420ecc4d17fd11fd98529853b56ba93", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1604,16 +1604,6 @@ do {                                                                    \\\n   assemble_name (FILE, NAME); \\\n   fputs (\"\\n\", FILE);}\n \n-\n-\n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n /* How to refer to registers in assembler output.  This sequence is indexed\n    by compiler's hard-register-number (see above).  */\n #define REGISTER_NAMES\t\t\t\t\t\t\\"}, {"sha": "beeded3d6adc1d8c1b3fa066c2dc8a341ac970e9", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1483,7 +1483,7 @@\n   if (X_REG_P (operands[0]))\n     output_asm_insn (\\\"dex\\\", operands);\n \n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n \n   if (!X_REG_P (operands[0]))\n     {\n@@ -1552,7 +1552,7 @@\n       output_asm_insn (\\\"bpl\\\\t%l0\\\", ops);\n       output_asm_insn (\\\"deca\\\", operands);\n \n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", \n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", \n \t\t\t\t CODE_LABEL_NUMBER (ops[0]));\n     }\n    else\n@@ -1570,7 +1570,7 @@\n \t  output_asm_insn (\\\"bpl\\\\t%l0\\\", ops);\n         }\n       output_asm_insn (\\\"dec\\\\t%h0\\\", operands);\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t         CODE_LABEL_NUMBER (ops[0]));\n     }\n \n@@ -1653,7 +1653,7 @@\n   ops[0] = gen_label_rtx ();\n   output_asm_insn (\\\"bpl\\\\t%l0\\\", ops);\n   output_asm_insn (\\\"dex\\\", operands);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n \n   return \\\"\\\";\n }\")\n@@ -1810,7 +1810,7 @@\n   output_asm_insn (\\\"inx\\\", ops);\n \n   CC_STATUS_INIT;\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n   return \\\"\\\";  \n }\")\n \n@@ -1892,7 +1892,7 @@\n       output_asm_insn (\\\"bcc\\\\t%l3\\\", ops);\n       output_asm_insn (\\\"inx\\\", ops);\n \n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[3]));\n     }\n   CC_STATUS_INIT;\n@@ -1995,7 +1995,7 @@\n           output_asm_insn (inch_mem, ops);\n \t}\n     }\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[2]));\n \n   CC_STATUS_INIT;\n   return \\\"\\\";\n@@ -2060,7 +2060,7 @@\n   ops[0] = gen_label_rtx ();\n   output_asm_insn (\\\"bcc\\\\t%l0\\\", ops);\n   output_asm_insn (\\\"in%0\\\", operands);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n   CC_STATUS_INIT;\n   return \\\"\\\";\n }\")\n@@ -2538,7 +2538,7 @@\n   output_asm_insn (\\\"subd\\\\t%2\\\", operands);\n   output_asm_insn (\\\"bcc\\\\t%l0\\\", ops);\n   output_asm_insn (\\\"dex\\\", ops);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n   CC_STATUS_INIT;\n   return \\\"\\\";\n }\")\n@@ -2565,7 +2565,7 @@\n   output_asm_insn (\\\"sbca\\\\t#0\\\", operands);\n   output_asm_insn (\\\"bcc\\\\t%l0\\\", ops);\n   output_asm_insn (\\\"dex\\\", ops);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n   CC_STATUS_INIT;\n   return \\\"\\\";\n }\")\n@@ -3090,7 +3090,7 @@\n       if ((val & 0x0FF00) != 0x0FF00)\n         output_asm_insn (\\\"bclr\\\\t0,%2, %h1\\\", operands);\n \n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[2]));\n       return \\\"\\\";\n     }\n@@ -3241,7 +3241,7 @@\n       output_asm_insn (\\\".relax\\\\t%l2\\\", ops);\n       m68hc11_gen_movhi (insn, ops);\n       output_asm_insn (\\\"bclr\\\\t0,%2, %1\\\", operands);\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[2]));\n       return \\\"\\\";\n     }\n@@ -3357,7 +3357,7 @@\n \n       if ((val & 0x0FF00) != 0)\n         output_asm_insn (\\\"bset\\\\t0,%2, %h1\\\", operands);\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[2]));\n       return \\\"\\\";\n     }\n@@ -3455,7 +3455,7 @@\n       output_asm_insn (\\\".relax\\\\t%l2\\\", ops);\n       m68hc11_gen_movhi (insn, ops);\n       output_asm_insn (\\\"bset\\\\t0,%2, %1\\\", operands);\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[2]));\n       return \\\"\\\";\n     }\n@@ -4283,7 +4283,7 @@\n   output_asm_insn (\\\"comb\\\\n\\\\tcoma\\\\n\\\\tinx\\\\n\\\\txgdx\\\", operands);\n   output_asm_insn (\\\"bne\\\\t%l0\\\", ops);\n   output_asm_insn (\\\"inx\\\", operands);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (ops[0]));\n   return \\\"\\\";\n }\")\n \n@@ -4993,7 +4993,7 @@\n       output_asm_insn (\\\"comb\\\", operands);\n \n       CC_STATUS_INIT;\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[0]));\n       return \\\"\\\";\n     }\n@@ -5007,7 +5007,7 @@\n       output_asm_insn (\\\"bge\\\\t%l0\\\", ops);\n       output_asm_insn (\\\"deca\\\", operands);\n \n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[0]));\n \n       val -= 8;\n@@ -5030,7 +5030,7 @@\n       output_asm_insn (\\\"bcc\\\\t%l0\\\", ops);\n       output_asm_insn (\\\"coma\\\", ops);\n \n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\t CODE_LABEL_NUMBER (ops[0]));\n       return \\\"\\\";\n     }\n@@ -5722,14 +5722,14 @@\n   ops[1] = gen_label_rtx ();\n   output_asm_insn (\\\"ble\\\\t%l1\\\", ops);\n \n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (ops[0]));\n \n   output_asm_insn (\\\"lsrb\\\", operands);\n   output_asm_insn (\\\"deca\\\", operands);\n   output_asm_insn (\\\"bne\\\\t%l0\\\", ops);\n \n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (ops[1]));\n   return \\\"\\\";\n }\")"}, {"sha": "655e45c8c8146703b934f6c3faa014e944d9c678", "filename": "gcc/config/m68k/3b1.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2F3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2F3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2F3b1.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -96,7 +96,6 @@ output_file_directive ((FILE), main_input_filename)\n /* Override parts of m68k.h to fit the SGS-3b1 assembler.  */\n \n #undef TARGET_VERSION\n-#undef ASM_FORMAT_PRIVATE_NAME\n #undef ASM_OUTPUT_ALIGN\n #undef ASM_OUTPUT_SOURCE_FILENAME\n #undef ASM_OUTPUT_SOURCE_LINE\n@@ -105,21 +104,14 @@ output_file_directive ((FILE), main_input_filename)\n #undef FUNCTION_PROFILER\n #undef ASM_OUTPUT_ADDR_VEC_ELT\n #undef ASM_OUTPUT_ADDR_DIFF_ELT\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n #undef ASM_OUTPUT_OPCODE\n #undef ASM_OUTPUT_LOCAL\n #undef USER_LABEL_PREFIX\n #undef ASM_OUTPUT_ASCII\n \n #define TARGET_VERSION fprintf (stderr, \" (68k, SGS/AT&T unixpc syntax)\");\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 12),\t\\\n-  sprintf ((OUTPUT), \"%s_%%%d\", (NAME), (LABELNO)))\n+#define ASM_PN_FORMAT \"%s_%%%lu\"\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n do {\t\t\t\t\t\\\n@@ -323,9 +315,6 @@ do {\t\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n   sprintf ((LABEL), \"%s%%%ld\", (PREFIX), (long)(NUM))\n \n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-    fprintf (FILE, \"%s%%%d:\\n\", PREFIX, NUM)\n-\n /* Must put address in  %a0 , not  %d0 . -- LGM, 7/15/88 */\n #define FUNCTION_PROFILER(FILE, LABEL_NO)\t\\\n     fprintf (FILE, \"\\tmov.l &LP%%%d,%%a0\\n\\tjsr mcount\\n\", (LABEL_NO))"}, {"sha": "b634f391f8f8c5f699c52c97cd7bd7a45a988b15", "filename": "gcc/config/m68k/amix.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Famix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Famix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Famix.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -142,10 +142,3 @@ do {\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\\\n     sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM)); \\\n } while (0)\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  if (flag_pic && !strcmp(PREFIX,\"LC\"))\t\t\t\\\n-    fprintf (FILE, \"%s%%%d:\\n\", PREFIX, NUM);\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    asm_fprintf (FILE, \"%0L%s%d:\\n\", PREFIX, NUM)"}, {"sha": "67528c3a7dffe07ad9b176b7adf1db6dbf53b8e8", "filename": "gcc/config/m68k/atari.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fatari.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fatari.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fatari.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -99,10 +99,3 @@ do {\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\\\n     sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM)); \\\n } while (0)\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  if (flag_pic && !strcmp(PREFIX,\"LC\"))\t\t\t\\\n-    fprintf (FILE, \"%s%%%d:\\n\", PREFIX, NUM);\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    asm_fprintf (FILE, \"%0L%s%d:\\n\", PREFIX, NUM)"}, {"sha": "a7839bac1f916946a709ede352642f6566ddcfad", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -171,9 +171,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_OUTPUT_SKIP\n #undef ASM_OUTPUT_COMMON\n #undef ASM_OUTPUT_LOCAL\n-#undef ASM_FORMAT_PRIVATE_NAME\n #undef FUNCTION_PROFILER\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n #undef GLOBAL_ASM_OP\n #undef IMMEDIATE_PREFIX\n #undef REGISTER_PREFIX\n@@ -249,20 +247,7 @@ Boston, MA 02111-1307, USA.  */\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",%u,2\\n\", (ROUNDED)))\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 12),\t\\\n-  sprintf ((OUTPUT), \"%s___%d\", (NAME), (LABELNO)))\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-do{  if (PREFIX[0] == 'L' && PREFIX[1] == 'I')\t\t\\\n-    fprintf(FILE, \"\\tset %s%d,.+2\\n\", PREFIX, NUM);\t\\\n-  else\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM);\t\t\\\n-} while(0)\n+#define ASM_PN_FORMAT \"%s___%lu\"\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)  \\\n   fprintf (FILE, \"\\tlong L%d\\n\", VALUE)"}, {"sha": "c7e0e5cdfade9238e666f95137610c21bd49ac9d", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 38, "deletions": 15, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"function.h\"\n@@ -65,6 +67,9 @@ static void m68k_coff_asm_named_section PARAMS ((const char *, unsigned int));\n #ifdef CTOR_LIST_BEGIN\n static void m68k_svr3_asm_out_constructor PARAMS ((rtx, int));\n #endif\n+#ifdef HPUX_ASM\n+static void m68k_hp320_internal_label PARAMS ((FILE *, const char *, unsigned long));\n+#endif\n static void m68k_output_mi_thunk PARAMS ((FILE *, tree, HOST_WIDE_INT,\n \t\t\t\t\t  HOST_WIDE_INT, tree));\n static int m68k_save_reg PARAMS ((unsigned int));\n@@ -124,6 +129,10 @@ int m68k_last_compare_had_fp_operands;\n #define TARGET_ASM_FUNCTION_PROLOGUE m68k_output_function_prologue\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE m68k_output_function_epilogue\n+#ifdef HPUX_ASM\n+#undef TARGET_ASM_INTERNAL_LABEL\n+#define  TARGET_ASM_INTERNAL_LABEL m68k_hp320_internal_label\n+#endif\n \n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK m68k_output_mi_thunk\n@@ -1377,13 +1386,13 @@ output_scc_di(op, operand1, operand2, dest)\n   switch (op_code)\n     {\n       case EQ:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"seq %5\", loperands);\n         break;\n \n       case NE:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sne %5\", loperands);\n         break;\n@@ -1395,15 +1404,15 @@ output_scc_di(op, operand1, operand2, dest)\n #else\n         output_asm_insn (\"shi %5\\n\\tjra %l6\", loperands);\n #endif\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sgt %5\", loperands);\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[6]));\n         break;\n \n       case GTU:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"shi %5\", loperands);\n         break;\n@@ -1415,15 +1424,15 @@ output_scc_di(op, operand1, operand2, dest)\n #else\n         output_asm_insn (\"scs %5\\n\\tjra %l6\", loperands);\n #endif\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"slt %5\", loperands);\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[6]));\n         break;\n \n       case LTU:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"scs %5\", loperands);\n         break;\n@@ -1435,15 +1444,15 @@ output_scc_di(op, operand1, operand2, dest)\n #else\n         output_asm_insn (\"scc %5\\n\\tjra %l6\", loperands);\n #endif\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sge %5\", loperands);\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[6]));\n         break;\n \n       case GEU:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"scc %5\", loperands);\n         break;\n@@ -1455,15 +1464,15 @@ output_scc_di(op, operand1, operand2, dest)\n #else\n         output_asm_insn (\"sls %5\\n\\tjra %l6\", loperands);\n #endif\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sle %5\", loperands);\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[6]));\n         break;\n \n       case LEU:\n-        ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n+        (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t    CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sls %5\", loperands);\n         break;\n@@ -1878,7 +1887,7 @@ output_move_himode (operands)\n \t\t   CODE_LABEL_NUMBER (XEXP (labelref, 0)));\n #endif /* not SGS */\n #else /* SGS_SWITCH_TABLES or not MOTOROLA */\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"LI\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \"LI\",\n \t\t\t\t CODE_LABEL_NUMBER (XEXP (labelref, 0)));\n #ifdef SGS_SWITCH_TABLES\n       /* Set flag saying we need to define the symbol\n@@ -3856,6 +3865,20 @@ m68k_svr3_asm_out_constructor (symbol, priority)\n }\n #endif\n \n+#ifdef HPUX_ASM\n+static void\n+m68k_hp320_internal_label (stream, prefix, labelno)\n+     FILE *stream;\n+     const char *prefix;\n+     unsigned long labelno;\n+{\n+  if (prefix[0] == 'L' && prefix[1] == 'I')\n+    fprintf(stream, \"\\tset %s%ld,.+2\\n\", prefix, labelno);\n+  else\n+    fprintf (stream, \"%s%ld:\\n\", prefix, labelno);\n+}\n+#endif\n+\n static void\n m68k_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n      FILE *file;"}, {"sha": "7d07a13a9623e93c070710086d0bc516429d47eb", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1190,10 +1190,8 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n /* Addressing modes, and classification of registers for them.  */\n \n #define HAVE_POST_INCREMENT 1\n-/* #define HAVE_POST_DECREMENT 0 */\n \n #define HAVE_PRE_DECREMENT 1\n-/* #define HAVE_PRE_INCREMENT 0 */\n \n /* Macros to check register numbers against specific register classes.  */\n \n@@ -1758,12 +1756,6 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n #define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n   asm_fprintf (FILE, \"%0U%s\", NAME)\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  asm_fprintf (FILE, \"%0L%s%d:\\n\", PREFIX, NUM)\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n@@ -1825,14 +1817,6 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",%u\\n\", (ROUNDED)))\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n /* Output a float value (represented as a C double) as an immediate operand.\n    This macro is a 68k-specific macro.  */\n "}, {"sha": "8ce07245216f772ad4930b7ec17c0e361a3297a8", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -2326,7 +2326,7 @@\n #else\n   output_asm_insn (\\\"add%.l %#1,%2\\\", operands);\n #endif\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[3]));\n   return \\\"\\\";\n }\")\n@@ -6187,7 +6187,7 @@\n       output_asm_insn (\\\"cmp%.w %#0,%0\\;jne %l4\\;cmp%.w %#0,%3\\;jeq %l1\\\", operands);\n #endif\n     }\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[4]));\n   return \\\"\\\";\n } \")\n@@ -7481,7 +7481,7 @@\n \t           CODE_LABEL_NUMBER (XEXP (labelref, 0)));\n #endif /* not SGS */\n #else /* SGS_SWITCH_TABLES or not MOTOROLA */\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LI\\\",\n+      (*targetm.asm_out.internal_label) (asm_out_file, \\\"LI\\\",\n \t\t\t\t CODE_LABEL_NUMBER (XEXP (labelref, 0)));\n #ifdef SGS_SWITCH_TABLES\n       /* Set flag saying we need to define the symbol"}, {"sha": "6304e531dea5be69202032181a16b629fecca58a", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -276,14 +276,7 @@ Boston, MA 02111-1307, USA.  */\n #define GLOBAL_ASM_OP \"\\tglobal\\t\"\n #endif /* USE_GAS */\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 12),\t\\\n-  sprintf ((OUTPUT), \"%s_%%%d\", (NAME), (LABELNO)))\n+#define ASM_PN_FORMAT \"%s_%%%lu\"\n \n #undef INT_OP_GROUP\n #ifdef USE_GAS\n@@ -393,13 +386,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n   sprintf ((LABEL), \"%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUM))\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-    asm_fprintf (FILE, \"%L%s%d:\\n\", PREFIX, NUM)\n-\n /* The prefix to add to user-visible assembler symbols.  */\n \n #undef USER_LABEL_PREFIX\n@@ -411,7 +397,7 @@ Boston, MA 02111-1307, USA.  */\n /* The L after the local prefix is the \"L\" prefix for the normal labels\n    generated by gcc; why are ASM_OUTPUT_ADDR_VEC_ELT and\n    ASM_OUTPUT_ADDR_DIFF_ELT not called with a PREFIX parameter, like\n-   ASM_OUTPUT_INTERNAL_LABEL ? */\n+   (*targetm.asm_out.internal_label) ? */\n \n #undef ASM_OUTPUT_ADDR_VEC_ELT\n #define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\\"}, {"sha": "62f67ef534d0fbbd2d36601024d0fa2dab4c0752", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -103,10 +103,12 @@ Boston, MA 02111-1307, USA.  */\n \n #undef ASM_SPEC\n #define ASM_SPEC \\\n-  \" %| %(asm_default_spec) \\\n+  \"%(asm_default_spec) \\\n     %{m68010} %{m68020} %{m68030} %{m68040} %{m68060} \\\n     %{fpic:-k} %{fPIC:-k -K}\"\n \n+#define AS_NEEDS_DASH_FOR_PIPED_INPUT\n+\n /* Provide a LINK_SPEC appropriate for a NetBSD/m68k ELF target.  */\n \n #undef LINK_SPEC"}, {"sha": "69a88afe0d59bd794f272d9eff57b16bf1a671fe", "filename": "gcc/config/m68k/netbsd.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -31,7 +31,9 @@\n   \"%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %(netbsd_cpp_spec)\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \" %| %{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}\"\n+#define ASM_SPEC \"%{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}\"\n+\n+#define AS_NEEDS_DASH_FOR_PIPED_INPUT\n \n \f\n /* Make gcc agree with <machine/ansi.h> */"}, {"sha": "baa4ef0928caa3e9a2f46f9469746e2ae7ff4344", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -38,7 +38,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* m68k as needs to know about the processor subtype.  */\n #undef ASM_SPEC\n-#define ASM_SPEC \"%| %{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}\"\n+#define ASM_SPEC \"%{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}\"\n+\n+#define AS_NEEDS_DASH_FOR_PIPED_INPUT\n \n /* Layout of source language data types.  */\n "}, {"sha": "fb799bed6bdcfd1120225db473541b227a004b00", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -42,7 +42,7 @@ Boston, MA 02111-1307, USA.  */\n #define SWBEG_ASM_OP\t\t\"\\t.swbeg \"\n #define SET_ASM_OP\t\t\"\\t.set \"\n \n-#define ASM_PN_FORMAT\t\t\"%s_%d\"\t\t/* Format for private names */\n+#define ASM_PN_FORMAT\t\t\"%s_%lu\"\t/* Format for private names */\n \n /* Here are four prefixes that are used by asm_fprintf to\n    facilitate customization for alternate assembler syntaxes.\n@@ -360,7 +360,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLE)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_BEFORE_CASE_LABEL((FILE),(PREFIX),(NUM),(TABLE));\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL((FILE),(PREFIX),(NUM));\t\t\t\\\n+    (*targetm.asm_out.internal_label)((FILE),(PREFIX),(NUM));\t\t\t\\\n   } while (0)\n \n /* At end of a switch table, define LDnnn iff the symbol LInnn was defined.\n@@ -390,13 +390,3 @@ extern int switch_table_difference_label_flag;\n    keep switch tables in the text section.  */\n    \n #define JUMP_TABLES_IN_TEXT_SECTION 1\n-\n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), ASM_PN_FORMAT, (NAME), (LABELNO)))\n-"}, {"sha": "f3f8d7bd13c5589d2ecd4d34d046e08e269972d1", "filename": "gcc/config/m68k/t-vxworks68", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fm68k%2Ft-vxworks68", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fm68k%2Ft-vxworks68", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-vxworks68?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,24 +0,0 @@\n-LIB1ASMSRC = m68k/lb1sf68.asm\n-LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \\\n-   _double _float _floatex \\\n-   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \\\n-   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2\n-\n-# We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n-# does not have _exit.\n-TARGET_LIBGCC2_CFLAGS = -Dexit=unused_exit\n-\n-LIB2FUNCS_EXTRA = fpgnulib.c xfgnulib.c\n-\n-fpgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n-\tcp $(srcdir)/config/m68k/fpgnulib.c fpgnulib.c\n-xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n-\techo '#define EXTFLOAT' > xfgnulib.c\n-\tcat $(srcdir)/config/m68k/fpgnulib.c >> xfgnulib.c\n-\n-MULTILIB_OPTIONS = m68000/m68020 m68881/msoft-float\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 m68000=m68332 m68020=mc68020 m68020=m68040\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "f81268b061c8fdfc2a5c9e72bafb3cae2ec13d45", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -46,7 +46,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_SPEC \"-D__TOWER_ASM__ %{m68881:-D__HAVE_68881__}\"\n \n /* We don't want local labels to start with period.\n-   See ASM_OUTPUT_INTERNAL_LABEL.  */\n+   See (*targetm.asm_out.internal_label).  */\n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \"\"\n \n@@ -210,14 +210,7 @@ Boston, MA 02111-1307, USA.  */\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",%d\\n\", ((SIZE) == 0) ? (ROUNDED) : (SIZE)))\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-\n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 11),\t\\\n-  sprintf ((OUTPUT), \"%s%%%%%d\", (NAME), (LABELNO)))\n+#define ASM_PN_FORMAT \"%s%%%%%lu\"\n  \n /* This is the command to make the user-level label named NAME\n    defined for reference from other files.  */\n@@ -229,10 +222,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n   sprintf ((LABEL), \"%s%%%ld\", (PREFIX), (long)(NUM))\n \n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf ((FILE), \"%s%%%d:\\n\", (PREFIX), (NUM))\n-\n #undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLE)\t\t\t\\\n   fprintf (FILE, \"\\tswbeg &%d\\n%s%%%d:\\n\",\t\t\t\t\\"}, {"sha": "a4daa367afaf5779a2851192354ed39ee757c5c2", "filename": "gcc/config/m68k/vxm68k.h", "status": "removed", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fm68k%2Fvxm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fm68k%2Fvxm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fvxm68k.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00", "patch": "@@ -1,103 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  Vxworks m68k version.\n-   Copyright (C) 1994, 1996, 1997, 1998 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This comment is here to see if it will keep Sun's cpp from dying.  */\n-\n-#include \"m68k/m68k-none.h\"\n-#include \"aoutos.h\"\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000 -D__vxworks -D__vxworks_5 -Acpu=m68k -Amachine=m68k\"\n-\n-/* The default value for -DCPU=.  */\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68k || TARGET_CPU_DEFAULT == M68K_CPU_m68020\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68020\"\n-#else\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68000\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68000\"\n-#else\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68030\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68030\"\n-#else\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68040\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68040\"\n-#else\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68302\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68302\"\n-#else\n-#if TARGET_CPU_DEFAULT == M68K_CPU_m68332\n-#define CPP_SUBTARGET_CPU_DEFAULT_SPEC \"-DCPU=MC68332\"\n-#else\n-Unrecognized value in TARGET_CPU_DEFAULT.\n-#endif\n-#endif\n-#endif\n-#endif\n-#endif\n-#endif\n-\n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n-{ \"cpp_subtarget_cpu_default\", CPP_SUBTARGET_CPU_DEFAULT_SPEC }\n-\n-/* Vxworks header files require that the macro CPU be set.  */\n-/* ??? The previous code didn't set CPU if -ansi.  */\n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC \"\\\n-%{m68000:-DCPU=MC68000 }%{m68010:-DCPU=MC68010 }%{m68020:-DCPU=MC68020 }%{mc68020:-DCPU=MC68020 }%{m68030:-DCPU=MC68030 }%{m68040:-DCPU=MC68040 }%{m68020-40:-DCPU=MC68020 }%{m68302:-DCPU=MC68000 }%{m68332:-DCPU=CPU32 } \\\n-%{!mc68000:%{!m68000:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68302:%{!m68332:%(cpp_subtarget_cpu_default) }}}}}}}}}} \\\n-\"\n-\n-#define DBX_DEBUGGING_INFO 1\n-#undef SDB_DEBUGGING_INFO\n-\n-/* These are the official values from WRS.  */\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"char\"\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 8\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-#undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-/* VxWorks does all the library stuff itself.  */\n-\n-#define LIB_SPEC \"\"\n-\n-/* Provide required defaults for linker.  */\n- \n-#define LINK_SPEC \"-r\"\n-\n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n-\n-#define STARTFILE_SPEC \"\"\n-\n-/* Every structure or union's size must be a multiple of 2 bytes.  */\n-\n-#define STRUCTURE_SIZE_BOUNDARY 16\n-\n-/* GCC is the primary compiler for VxWorks, so we don't need this.  */\n-#undef PCC_STATIC_STRUCT_RETURN\n-\n-/* Restrict use of 128 bit floating-point by default since VxWorks doesn't\n-   have the proper accuracy routines for that size; this is not done because\n-   the hardware doesn't support it, despite the name.  */\n-#define WIDEST_HARDWARE_FP_SIZE 64"}, {"sha": "44ca220c4e1a93525f8e8df879dcbce32a150b12", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -23,6 +23,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -74,6 +76,9 @@ static void m88k_svr3_asm_out_destructor PARAMS ((rtx, int));\n static void m88k_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n static int m88k_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n static void m88k_encode_section_info PARAMS ((tree, int));\n+#ifdef AS_BUG_DOT_LABELS\n+static void m88k_internal_label PARAMS ((FILE *, const char *, unsigned long));\n+#endif\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_BYTE_OP\n@@ -101,6 +106,10 @@ static void m88k_encode_section_info PARAMS ((tree, int));\n \n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO  m88k_encode_section_info\n+#ifdef AS_BUG_DOT_LABELS\n+#undef TARGET_ASM_INTERNAL_LABEL\n+#define  TARGET_ASM_INTERNAL_LABEL m88k_internal_label\n+#endif\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -892,7 +901,9 @@ output_call (operands, addr)\n       jump = XVECEXP (final_sequence, 0, 1);\n       if (GET_CODE (jump) == JUMP_INSN)\n \t{\n+#ifndef USE_GAS\n \t  rtx low, high;\n+#endif\n \t  const char *last;\n \t  rtx dest = XEXP (SET_SRC (PATTERN (jump)), 0);\n \t  int delta = 4 * (INSN_ADDRESSES (INSN_UID (dest))\n@@ -1714,7 +1725,7 @@ void\n output_label (label_number)\n      int label_number;\n {\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\", label_number);\n+  (*targetm.asm_out.internal_label) (asm_out_file, \"L\", label_number);\n }\n \f\n /* Generate the assembly code for function entry.\n@@ -3339,3 +3350,15 @@ m88k_encode_section_info (decl, first)\n \tSYMBOL_REF_FLAG (XEXP (TREE_CST_RTL (decl), 0)) = 1;\n     }\n }\n+\n+#ifdef AS_BUG_DOT_LABELS /* The assembler requires a declaration of local.  */\n+static void\n+m88k_internal_label (stream, prefix, labelno)\n+     FILE *stream;\n+     const char *prefix;\n+     unsigned long labelno;\n+{\n+  fprintf (stream, TARGET_SVR4 ? \".%s%lu:\\n%s.%s%lu\\n\" : \"@%s%ld:\\n\",\n+\t   prefix, labelno, INTERNAL_ASM_OP, prefix, labelno);\n+}\n+#endif"}, {"sha": "c702094f423053f6e998fb643038a895174b4291", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 5, "deletions": 32, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1104,7 +1104,7 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n   fprintf (FILE, \"\\tor\\t %s,%s,0\\n\", reg_names[11], reg_names[1]);\t\\\n   /* Locate this block; transfer to the next instruction.  */\t\t\\\n   fprintf (FILE, \"\\tbsr\\t %s\\n\", &buf[1]);\t\t\t\t\t\\\n-  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LTRMP\", labelno);\t\t\t\\\n+  (*targetm.asm_out.internal_label) (FILE, \"LTRMP\", labelno);\t\t\t\\\n   /* Save r10; use it as the relative pointer; restore r1.  */\t\t\\\n   fprintf (FILE, \"\\tst\\t %s,%s,24\\n\", reg_names[10], reg_names[1]);\t\\\n   fprintf (FILE, \"\\tor\\t %s,%s,0\\n\", reg_names[10], reg_names[1]);\t\\\n@@ -1155,12 +1155,6 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n \n #define SELECT_CC_MODE(OP,X,Y) CCmode\n \n-/* #define HAVE_POST_INCREMENT 0 */\n-/* #define HAVE_POST_DECREMENT 0 */\n-\n-/* #define HAVE_PRE_DECREMENT 0 */\n-/* #define HAVE_PRE_INCREMENT 0 */\n-\n /* Recognize any constant value that is a valid address.\n    When PIC, we do not accept an address that would require a scratch reg\n    to load into a register.  */\n@@ -1877,25 +1871,11 @@ do {\t\t\t\t\t\t\t\t\t \\\n     fputs (NAME, FILE);\t\t\t\t\t\\\n   }\n \n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-   For V.4, labels use `.' rather than `@'.  */\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#ifdef AS_BUG_DOT_LABELS /* The assembler requires a declaration of local.  */\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\t\t\\\n-  fprintf (FILE, TARGET_SVR4 ? \".%s%d:\\n%s.%s%d\\n\" : \"@%s%d:\\n\", \\\n-\t   PREFIX, NUM, INTERNAL_ASM_OP, PREFIX, NUM)\n-#else\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\t\t\\\n-  fprintf (FILE, TARGET_SVR4 ? \".%s%d:\\n\" : \"@%s%d:\\n\", PREFIX, NUM)\n-#endif /* AS_BUG_DOT_LABELS */\n-\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  This must agree\n-   with ASM_OUTPUT_INTERNAL_LABEL above, except for being prefixed\n+   with (*targetm.asm_out.internal_label) above, except for being prefixed\n    with an `*'.  */\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n@@ -1917,7 +1897,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n         readonly_data_section ();\t\t\t\t\t\\\n         ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\t\\\n+    (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\t\t\\\n   } while (0)\n \n /* Epilogue for case labels.  This jump instruction is called by casesi\n@@ -1992,13 +1972,6 @@ do {\t\t\t\t\t\t\t\t\t \\\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n   fprintf ((FILE), \",%u,%d\\n\", (SIZE) ? (SIZE) : 1, (SIZE) <= 4 ? 4 : 8))\n \n-/* Store in OUTPUT a string (made with alloca) containing\n-   an assembler-name for a local static variable named NAME.\n-   LABELNO is an integer which is different for each call.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n-\n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n #define ASM_OUTPUT_REG_PUSH(FILE,REGNO)  \\\n@@ -2030,10 +2003,10 @@ do {\t\t\t\t\t\t\t\t\t \\\n #define OCS_END_PREFIX\t\t\"Lte\"\n \n #define PUT_OCS_FUNCTION_START(FILE) \\\n-  { ASM_OUTPUT_INTERNAL_LABEL (FILE, OCS_START_PREFIX, m88k_function_number); }\n+  { (*targetm.asm_out.internal_label) (FILE, OCS_START_PREFIX, m88k_function_number); }\n \n #define PUT_OCS_FUNCTION_END(FILE) \\\n-  { ASM_OUTPUT_INTERNAL_LABEL (FILE, OCS_END_PREFIX, m88k_function_number); }\n+  { (*targetm.asm_out.internal_label) (FILE, OCS_END_PREFIX, m88k_function_number); }\n \n /* Macros for debug information */\n #define DEBUGGER_AUTO_OFFSET(X) \\"}, {"sha": "a6ea4d4282c42f2a5bf1e68f9f016f44fdf34292", "filename": "gcc/config/mcore/mcore-pe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -125,7 +125,7 @@ drectve_section ()\t\t\t\t\t\t\\\n         assemble_name (FILE,\t\t\t\t\t\t  \\\n \t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n         putc ('\\n', FILE);\t\t\t\t\t\t  \\\n-        ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LM\", sym_lineno);\t\t  \\\n+        (*targetm.asm_out.internal_label) (FILE, \"LM\", sym_lineno);\t\t  \\\n         sym_lineno ++;\t\t\t\t\t\t\t  \\\n       }\t\t\t\t\t\t\t\t\t  \\\n   }"}, {"sha": "dfe02828bfe278bc6da5b2c5eb2df5b42d22ff7b", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -20,6 +20,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n@@ -2618,7 +2620,7 @@ mcore_output_jump_label_table ()\n \t{\n \t  pool_node * p = pool_vector + i;\n \n-\t  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\", CODE_LABEL_NUMBER (p->label));\n+\t  (*targetm.asm_out.internal_label) (asm_out_file, \"L\", CODE_LABEL_NUMBER (p->label));\n \t  \n \t  output_asm_insn (\".long\t%0\", &p->value);\n \t}"}, {"sha": "bfa8271b8f7cbb9835ba6b2d7dc2bb9dcd5d565a", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -1173,16 +1173,6 @@ extern long mcore_current_compilation_timestamp;\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM)  \\\n   sprintf (STRING, \"*.%s%ld\", PREFIX, (long) NUM)\n \n-/* Output an internal label definition.  */\n-#undef  ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n-\n-/* Construct a private name.  */\n-#define ASM_FORMAT_PRIVATE_NAME(OUTVAR,NAME,NUMBER)  \\\n-  ((OUTVAR) = (char *) alloca (strlen (NAME) + 10),  \\\n-   sprintf ((OUTVAR), \"%s.%d\", (NAME), (NUMBER)))\n-\n /* Jump tables must be 32 bit aligned. */\n #undef  ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(STREAM,PREFIX,NUM,TABLE) \\"}, {"sha": "fe71e377290fce28ec7a10ca4d50f7442673e6a5", "filename": "gcc/config/mcore/mcore.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmcore%2Fmcore.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -3319,7 +3319,7 @@\n   \"\"\n \"*\n {\n-  int op0 = REGNO (operands[0]);\n+  unsigned int op0 = REGNO (operands[0]);\n \n   if (GET_CODE (operands[3]) == REG)\n     {"}, {"sha": "cdac9fafea4fb154719dde7652ccfd7cebe68152", "filename": "gcc/config/mips/irix6-libc-compat.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5", "patch": "@@ -54,6 +54,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n \n /* This must only be used for the N32 and N64 ABIs.  O32 is correct.  */\n "}, {"sha": "959a065d2fcac59073092dc3c63c48b46d9e694f", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "6d3d16783ee449bdb618029eff6ba2bdf8400054", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f8f3cb6eb7cc8d41832bc1a86077af4b920971de", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "5be556f7d70114b32cf6756a0ee9e7b16aaf6b6a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "46e4fdd86a4edbb575227b5686fa8fafee2a5a34", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "73a81926be4879801b00c8136aaabb7ecfdbdc77", "filename": "gcc/config/mips/openbsd.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fopenbsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "1352599a300b6795e545c4f49299bae355667eb2", "filename": "gcc/config/mips/vr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fvr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmips%2Fvr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvr.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "67838e201fdc31bd5d6ec69f4f40a3c9963e91dc", "filename": "gcc/config/mips/vxworks.h", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "fb3705a403cf11a25704ec529fde9a51b6558d23", "filename": "gcc/config/mmix/mmix-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "db4bb4c1e54b0ca5444e0bd5a7d5c6c36ce65d7a", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "562c39e1ef3ca79c099b1a0d848f5a7f1442b10a", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "39a378d3285dbbf2af5e6763b8bd68a03ce12205", "filename": "gcc/config/mn10200/mn10200.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "112b90d866bdeb6f3dbb89f3ae85755f87b369b4", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "578ba644033891d47ccf5836dba7987f1622d11a", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "73a355f2790ee346e07211e9d6062c34f8f422dd", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f7eb1bf14495dae679ebf351ce736da9acd1a2be", "filename": "gcc/config/netbsd-aout.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fnetbsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fnetbsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-aout.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "fba27cf8604e9996a70a017b97085274971db2b6", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ba53a6fc28d42562cba41d47aa56d5bc5c42d765", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "5d93b53d5f4ea516d4d50277e41e6320bd423d9b", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ef12922ae2fbf72d10d4df6be142c1036b545d63", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "a39ef318a00dd014d688a041353ebc47a14a2836", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ccb37d24d07e934fdd3410259cfe1a4e9a04feef", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 53, "deletions": 9, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "a1954e189fc503830b620c3204516cb00d7a7925", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 43, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "00ea6e9b49d250c7f2bfdeae50131636d7c0f2dd", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f212b7c0e34935d145a866338468656aba0251d9", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "d2f25ca6a29ef9087ba426d20b06bb5692fbedaf", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f9eb3f0e96a06a5a806e46b26aa5827098028ce5", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "4560b86eab30203773e87eb7b51c823dc1f8da34", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "dc9761c711318ceaa7db57aaefe1d38a65f696c8", "filename": "gcc/config/romp/romp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fromp%2Fromp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fromp%2Fromp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "e659f8c8b0461cbb21ed4ef76171571387539e31", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "3d5d7e447b813a4cd00d8f2ffbcb5a9d4fe168d6", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9689bf150f914b9779cf794bf4800f2356e1ef38", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "a9ea94f9e05769efcdfdf05d28e3986b1d7cf25a", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "27069b6f1d9a580208eb4563187240ca163662a2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9bb6373682bfcd010d6cc0eaf2fcad5e9f76c9bc", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "2f11f5781cb7164a6d2674d688c65d0584f298e6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 43, "deletions": 10, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "b10649d904afa030b71b344736f88ff9a4b4794e", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 81, "deletions": 148, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "b9a92dd9f831bf10b9ec0ee1668374c0917bb721", "filename": "gcc/config/rs6000/t-rs6000-c-rule", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Ft-rs6000-c-rule", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Ft-rs6000-c-rule", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000-c-rule?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "e89e47b8d09244f6771178f34bebbc427d15744f", "filename": "gcc/config/rs6000/t-vxworks", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-vxworks?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "91250a6890945a47db5699a357a4a2fa68f38be6", "filename": "gcc/config/rs6000/vxppc.h", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Frs6000%2Fvxppc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Frs6000%2Fvxppc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxppc.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "dddd26d8d5e4bead1c7b5af6c3e4ce754c2f89ac", "filename": "gcc/config/rs6000/vxworks.h", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "64a0dcd45db07a5405d784749a1e74a7c6330a57", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "5e4741e86be28140a29c5a3f0be2f0cc1ebfa5dc", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "6d8943e760dee94cba6d4b3071bf3f1318bce73e", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "4767ebbdaf53d781c017d6763718450aa634ed76", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "4d6443e0209ae74e41ae466a73c61a17d914a82b", "filename": "gcc/config/sh/coff.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fcoff.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "858adb1d2c45163c682933bbd02d6982aadcbbae", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "77bb48a9128d4448b0400bf5ce7a8c206b35e41b", "filename": "gcc/config/sh/lib1funcs.asm", "status": "modified", "additions": 182, "deletions": 9, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flib1funcs.asm?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "734d3d6bfe18c276e51f08c7e87c4f5f8d1995c9", "filename": "gcc/config/sh/libgcc-glibc.ver", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "c4f6171a5d0226b9817e500103a45f3f51723295", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "fd98b421c0e5df7d23cec2a8ab3947c9ab841a26", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "261f3247af57cf9ef47132cdb01f87706437b767", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 136, "deletions": 6, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "4d27e64bcb0539c30d5a8eb9cd22ed0acc65e10c", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "029632f4c0a17eb88fa4e65ba3cd980db6837b9d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "195279a664aca69bcdb2c5f7ab057a622f91b6c8", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "bd7fcd244451c73bd5f1131cdd0cedaec09d4f97", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "c42badcf761f9ffc1216d8d2c23cb1440eb3a053", "filename": "gcc/config/sparc/gmon-sol2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "2879c642a712ac952d870be2317a9dc2029ded74", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "40fd23257f7e07b1d7f14c596c70191156044011", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "7e0d70d9e79ced4682265ffd6b6e5b8299ec3de9", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "dd47b36882895762d3c7babc82e3bdd413e7954b", "filename": "gcc/config/sparc/pbd.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fpbd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fpbd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fpbd.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ba0243ceee22c451047202aa3f30c135e0d9ba40", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "aed7e4b79d5cbe834d7ac4728e3c6350d858342d", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ab000da6a6e080b16c252a28be6fa3971297ed59", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 42, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "0543b46d531dfde6589e0398fee71dae8fbb39e0", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f32765ff7f75beec7bab8e5f003cbe48e895d335", "filename": "gcc/config/sparc/t-sol2", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsparc%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "5a47341ac40f043cb0f4b7879b052c43d30e5c44", "filename": "gcc/config/sparc/t-vxsparc", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Ft-vxsparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Ft-vxsparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-vxsparc?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "ee779eec91b907cbf464c9676296a85cde141469", "filename": "gcc/config/sparc/t-vxsparc64", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Ft-vxsparc64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Ft-vxsparc64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-vxsparc64?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "c9c356991185c104fabc3bcd62fcaf8632a4331d", "filename": "gcc/config/sparc/vxsim.h", "status": "removed", "additions": 0, "deletions": 136, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxsim.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "da3e59105d81ff2e2063c6ca05da0410ef9f46d1", "filename": "gcc/config/sparc/vxsparc.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxsparc.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "1da8b7f2566493955ec81ab087b7afbdfb336bf6", "filename": "gcc/config/sparc/vxsparc64.h", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsparc64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fsparc%2Fvxsparc64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxsparc64.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "4d98ea7bf85d12faa7c6f728d0d92dbc4f0885d1", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "30f34a4748cb8ae9e6cbcc597a0c4980831ecbb8", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 2, "deletions": 45, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "8e1e9063e95ea8dc8a633982636e174d8c61a7ea", "filename": "gcc/config/svr3.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsvr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsvr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr3.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "029ad2ccacedbc9eaa3505eaa4f22e61fe238bcf", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "e8682e17db8d5f9b8ac751e42f9366f5b94d7aa2", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "be50bc481c5f29ce339e2e40e1e91cf97b988fd6", "filename": "gcc/config/t-libunwind", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-libunwind", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-libunwind", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-libunwind?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "550a161152aef278ac74f050a16c0879c8a17ce0", "filename": "gcc/config/t-vxworks", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "75c3b4695bd1958d9933bc1629caa07630f81246", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "431114edfdbd0bedea339a159ef8228e62e9eff4", "filename": "gcc/config/v850/v850-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "dcbb644ae2ad50d23d44e96a1f775b48223dd02d", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "aab4dd94d0b0ada5336d5d16bff9cddbeab7fedf", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "307f5eb40efbd51e3e34886e3cfd190ebdb87283", "filename": "gcc/config/vax/vax-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax-protos.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "69b175fd81887414968ef62fc58b24aa30152e3b", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 2, "deletions": 288, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ec08c0eeb55aa09f80e5d3439b3d53dc18fcc5fb", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "870ebaf04eb00225758a5f2b07a68c46d11216c9", "filename": "gcc/config/vax/vms.h", "status": "removed", "additions": 0, "deletions": 274, "changes": 274, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fvax%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fvax%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvms.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "eaf5f3bf510ae51a377dd7748c1f003e2b68e83c", "filename": "gcc/config/vax/xm-vms.h", "status": "removed", "additions": 0, "deletions": 174, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vms.h?ref=b51dc045004ee7eb8d2bf4358ddf22a6cc6c1d00"}, {"sha": "89e0c3514d971fdeb2bd69f852a5e70f115aeb89", "filename": "gcc/config/vxlib.c", "status": "added", "additions": 325, "deletions": 0, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvxlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvxlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxlib.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "75aae79d68ef891650f32a548b12b0b4d266e75b", "filename": "gcc/config/vxworks.h", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "4ad8c80475b252aafc184fc8c515ea9959582a14", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "d51b6795a34268eef6c92ea1164585bbdffbecc3", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "30cbfaeef7b2c7637885d803b9a1d5fe6bbaca65", "filename": "gcc/configure", "status": "modified", "additions": 562, "deletions": 426, "changes": 988, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "cb01381e6deee4fa02edbcfae0fcdd33bf1252b4", "filename": "gcc/configure.in", "status": "modified", "additions": 65, "deletions": 40, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "3848b378b031c06f0bd657a99426c45d6db12247", "filename": "gcc/conflict.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconflict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconflict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconflict.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "2ceccac41b3eaf6a0ed8b6ff5d4ecc9669f72bb0", "filename": "gcc/convert.c", "status": "modified", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "d381c281983df01f0828becca66faefbcfd636b7", "filename": "gcc/coretypes.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ceafa26e3a76470e34b9e34e71c546df628fc3e6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "6c7a6753165fa3de7aa922747d49795329f72621", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "f766092f3393448a6d56adcf2696d5be110f24da", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9f95c994703600869efa7ca9ec95e262fbcac266", "filename": "gcc/cp/class.c", "status": "modified", "additions": 84, "deletions": 10, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "42b2da0c130e1f77dabc37ce1ed5b011bb3f6606", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9176eba7d49cb0eda64734719a5fe81dbb10d9f7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 64, "deletions": 48, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "2443505bd8ff896688570b59721930e4557f6c5b", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "42da31559a16acf39fcb4dcceaecf3660e20eba0", "filename": "gcc/cp/cxxfilt.c", "status": "added", "additions": 304, "deletions": 0, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcxxfilt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fcxxfilt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxxfilt.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "e3f5b5a9f294c60d77a4325aa0af282769a9d8ac", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "6734301f2dfea3cad70ff1302e678be466456aed", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "fa55833e2089359162ea894c76f83d07e86024fd", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9ede84a715616a2a278c8494c71cbdbbc83bcac2", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "753686b1114c67ff38dad01c3e4cce3937027d6e", "filename": "gcc/cp/except.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "ede1c473677094adc68e00597ba962d0739d8e99", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "9e4741143126f4cbae66dd60191d8d494d8d3de0", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "2d8e8f429a5753dc16f90fa9ad22b29af9b321e4", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "bfce5564b4b8699f1f524b8a5a56bb6d232d9484", "filename": "gcc/cp/init.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}, {"sha": "e60ebe8761e80ff4c5fc774370fcdb78c38e614c", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4977bab6ed59f01c73f9c8b9e92298706df9b6d5/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=4977bab6ed59f01c73f9c8b9e92298706df9b6d5"}]}