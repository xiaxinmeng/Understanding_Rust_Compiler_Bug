{"sha": "0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY0MTc3NmNlZmIwYmEzNWNjNzVjM2JiMjc0NTFhN2U3MDZkYzJjZA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-07-05T11:23:01Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-05T11:23:01Z"}, "message": "genattrtab.c (write_attr_get): Revert part of last patch to always write out a prototype.\n\n\t* genattrtab.c (write_attr_get): Revert part of last patch to\n\talways write out a prototype.\n\n\t* genemit.c (gen_split): Readd lost unused attributes in last\n\tpatch.\n\nFrom-SVN: r68967", "tree": {"sha": "d15ef9a5b1d57584e24690ce03a860ec3d006db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d15ef9a5b1d57584e24690ce03a860ec3d006db7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "977129f68d0dd100969506fd888cbdcae9d68c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977129f68d0dd100969506fd888cbdcae9d68c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/977129f68d0dd100969506fd888cbdcae9d68c50"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "f3369639fa46531dc87617acfbdd1ca7e8a8f28e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "patch": "@@ -1,3 +1,11 @@\n+2003-07-05  Andreas Jaeger  <aj@suse.de>\n+\n+\t* genattrtab.c (write_attr_get): Revert part of last patch to\n+\talways write out a prototype.\n+\n+\t* genemit.c (gen_split): Readd lost unused attributes in last\n+\tpatch.\n+\n 2003-07-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* cfgloopmanip.c (force_single_succ_latches): Force latch to be"}, {"sha": "a4f6e267f028ded08b55469d5afd5bd1edcb4739", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "patch": "@@ -4765,6 +4765,21 @@ write_attr_get (struct attr_desc *attr)\n      switch we will generate.  */\n   common_av = find_most_used (attr);\n \n+  /* Write out prototype of function.  */\n+  if (!attr->is_numeric)\n+    printf (\"extern enum attr_%s \", attr->name);\n+  else if (attr->unsigned_p)\n+    printf (\"extern unsigned int \");\n+  else\n+    printf (\"extern int \");\n+  /* If the attribute name starts with a star, the remainder is the name of\n+     the subroutine to use, instead of `get_attr_...'.  */\n+  if (attr->name[0] == '*')\n+    printf (\"%s (rtx);\\n\", &attr->name[1]);\n+  else\n+    printf (\"get_attr_%s (%s);\\n\", attr->name,\n+\t    (attr->is_const ? \"void\" : \"rtx\"));\n+\n   /* Write out start of function, then all values with explicit `case' lines,\n      then a `default', then the value with the most uses.  */\n   if (!attr->is_numeric)"}, {"sha": "35b58a099e09d898c663742263e747cdf53f439f", "filename": "gcc/genemit.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0641776cefb0ba35cc75c3bb27451a7e706dc2cd/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=0641776cefb0ba35cc75c3bb27451a7e706dc2cd", "patch": "@@ -587,13 +587,13 @@ gen_split (rtx split)\n     {\n       printf (\"extern rtx gen_%s_%d (rtx, rtx *);\\n\",\n \t      name, insn_code_number);\n-      printf (\"rtx\\ngen_%s_%d (rtx curr_insn ATTRIBUTE_UNUSED, rtx *operands)\\n\",\n-\t      name, insn_code_number);\n+      printf (\"rtx\\ngen_%s_%d (rtx curr_insn ATTRIBUTE_UNUSED, rtx *operands%s)\\n\",\n+\t      name, insn_code_number, unused);\n     }\n   else\n     {\n       printf (\"extern rtx gen_split_%d (rtx *);\\n\", insn_code_number);\n-      printf (\"rtx\\ngen_%s_%d (rtx *operands)\\n\", name, insn_code_number);\n+      printf (\"rtx\\ngen_%s_%d (rtx *operands%s)\\n\", name, insn_code_number, unused);\n     }\n   printf (\"{\\n\");\n "}]}