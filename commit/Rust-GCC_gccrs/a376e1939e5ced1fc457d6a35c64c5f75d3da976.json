{"sha": "a376e1939e5ced1fc457d6a35c64c5f75d3da976", "node_id": "C_kwDOANBUbNoAKGEzNzZlMTkzOWU1Y2VkMWZjNDU3ZDZhMzVjNjRjNWY3NWQzZGE5NzY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-08T09:43:50Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T13:26:11Z"}, "message": "hir: Keep BaseKind enum inside the Node class\n\nCo-authored-by: philberty <philip.herron@embecosm.com>", "tree": {"sha": "8bb54730d2c2bfef18d21674e8725090c72453b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bb54730d2c2bfef18d21674e8725090c72453b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a376e1939e5ced1fc457d6a35c64c5f75d3da976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a376e1939e5ced1fc457d6a35c64c5f75d3da976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a376e1939e5ced1fc457d6a35c64c5f75d3da976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a376e1939e5ced1fc457d6a35c64c5f75d3da976/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be8f2ead95b292615d1c27f7c486384d32a70c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8f2ead95b292615d1c27f7c486384d32a70c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8f2ead95b292615d1c27f7c486384d32a70c49"}], "stats": {"total": 53, "additions": 27, "deletions": 26}, "files": [{"sha": "67cfb3ae423336bc642b5664b985477b51aaaad2", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=a376e1939e5ced1fc457d6a35c64c5f75d3da976", "patch": "@@ -45,33 +45,33 @@ class HIRTypeVisitor;\n // forward decl for use in token tree method\n class Token;\n \n-// Kind for downcasting various HIR nodes to other base classes when visiting\n-// them\n-enum BaseKind\n-{\n-  /* class ExternalItem */\n-  EXTERNAL,\n-  /* class TraitItem */\n-  TRAIT_ITEM,\n-  /* class VisItem */\n-  VIS_ITEM,\n-  /* class Item */\n-  ITEM,\n-  /* class ImplItem */\n-  IMPL,\n-  /* class Type */\n-  TYPE,\n-  /* class Stmt */\n-  STMT,\n-  /* class Expr */\n-  EXPR,\n-  /* class Pattern */\n-  PATTERN,\n-};\n-\n class Node\n {\n public:\n+  // Kind for downcasting various HIR nodes to other base classes when visiting\n+  // them\n+  enum BaseKind\n+  {\n+    /* class ExternalItem */\n+    EXTERNAL,\n+    /* class TraitItem */\n+    TRAIT_ITEM,\n+    /* class VisItem */\n+    VIS_ITEM,\n+    /* class Item */\n+    ITEM,\n+    /* class ImplItem */\n+    IMPL,\n+    /* class Type */\n+    TYPE,\n+    /* class Stmt */\n+    STMT,\n+    /* class Expr */\n+    EXPR,\n+    /* class Pattern */\n+    PATTERN,\n+  };\n+\n   /**\n    * Get the kind of HIR node we are dealing with. This is useful for\n    * downcasting to more precise types when necessary, i.e going from an `Item*`"}, {"sha": "d52d8e1a64fc0c8116fe1bdad25b4b79c992f523", "filename": "gcc/rust/privacy/rust-privacy-check.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc?ref=a376e1939e5ced1fc457d6a35c64c5f75d3da976", "patch": "@@ -33,7 +33,7 @@ Resolver::resolve (HIR::Crate &crate)\n   const auto &items = crate.items;\n   for (auto &item : items)\n     {\n-      if (item->get_hir_kind () == HIR::VIS_ITEM)\n+      if (item->get_hir_kind () == HIR::Node::VIS_ITEM)\n \t{\n \t  auto vis_item = static_cast<HIR::VisItem *> (item.get ());\n \t  vis_item->accept_vis (visitor);"}, {"sha": "629944a390c70e23247be9624e806544f6e30874", "filename": "gcc/rust/privacy/rust-privacy-ctx.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc?ref=a376e1939e5ced1fc457d6a35c64c5f75d3da976", "patch": "@@ -21,6 +21,7 @@\n \n namespace Rust {\n namespace Privacy {\n+\n static ReachLevel\n insert_if_higher (ReachLevel new_level,\n \t\t  std::unordered_map<HirId, ReachLevel>::iterator &existing)"}, {"sha": "e76ba714c6d15c77fa1351d236bef39a9d2c1da3", "filename": "gcc/rust/privacy/rust-reachability.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a376e1939e5ced1fc457d6a35c64c5f75d3da976/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.cc?ref=a376e1939e5ced1fc457d6a35c64c5f75d3da976", "patch": "@@ -24,7 +24,7 @@ namespace Privacy {\n static HIR::VisItem *\n maybe_get_vis_item (std::unique_ptr<HIR::Item> &item)\n {\n-  if (item->get_hir_kind () != HIR::VIS_ITEM)\n+  if (item->get_hir_kind () != HIR::Node::VIS_ITEM)\n     return nullptr;\n \n   return static_cast<HIR::VisItem *> (item.get ());"}]}