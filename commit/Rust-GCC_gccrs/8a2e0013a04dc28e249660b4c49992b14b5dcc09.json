{"sha": "8a2e0013a04dc28e249660b4c49992b14b5dcc09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyZTAwMTNhMDRkYzI4ZTI0OTY2MGI0YzQ5OTkyYjE0YjVkY2MwOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-08-02T17:51:53Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-08-02T17:51:53Z"}, "message": "re PR c++/53009 (pointer to static member function of template class is \u201cinvalid\u201d as a template argument of another template class)\n\n\tPR c++/53009\n\t* g++.dg/cpp0x/nontype3.C: New test.\n\nFrom-SVN: r274027", "tree": {"sha": "289997bc6ceff1e5829e4047ddf7831a58432acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/289997bc6ceff1e5829e4047ddf7831a58432acf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a2e0013a04dc28e249660b4c49992b14b5dcc09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2e0013a04dc28e249660b4c49992b14b5dcc09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2e0013a04dc28e249660b4c49992b14b5dcc09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2e0013a04dc28e249660b4c49992b14b5dcc09/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8707c01da9b4a2160fbe04d282e2526da38d3e48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8707c01da9b4a2160fbe04d282e2526da38d3e48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8707c01da9b4a2160fbe04d282e2526da38d3e48"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "d57410cb92b640bc947692d310070ad60b9c2360", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2e0013a04dc28e249660b4c49992b14b5dcc09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2e0013a04dc28e249660b4c49992b14b5dcc09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a2e0013a04dc28e249660b4c49992b14b5dcc09", "patch": "@@ -1,3 +1,8 @@\n+2019-08-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/53009\n+\t* g++.dg/cpp0x/nontype3.C: New test.\n+\n 2019-08-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/77575"}, {"sha": "02b5f60c3fc8d6c36d9e7facb216d9a41585b8db", "filename": "gcc/testsuite/g++.dg/cpp0x/nontype3.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2e0013a04dc28e249660b4c49992b14b5dcc09/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnontype3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2e0013a04dc28e249660b4c49992b14b5dcc09/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnontype3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnontype3.C?ref=8a2e0013a04dc28e249660b4c49992b14b5dcc09", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/53009\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T, T> class function_proxy;\n+\n+template<typename Return, typename Obj, Return(*func)(Obj)>\n+struct function_proxy<Return(*)(Obj), func>\n+{\n+    static void wrapper(){ }\n+};\n+\n+template<typename CT, CT> class member_helper;\n+\n+template<typename Class, void(Class::*fun)()>\n+struct member_helper<void(Class::*)(), fun>\n+{\n+    static void as_free(Class& obj){ }\n+\n+    static void worker(){\n+        (void) function_proxy<decltype(&as_free), &as_free>::wrapper;\n+    }\n+};\n+\n+struct Test\n+{\n+    void test(){ }\n+};\n+\n+int main()\n+{\n+    member_helper<decltype(&Test::test), &Test::test>::worker();\n+}"}]}