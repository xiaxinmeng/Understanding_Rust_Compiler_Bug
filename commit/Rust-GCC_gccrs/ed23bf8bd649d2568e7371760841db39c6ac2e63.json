{"sha": "ed23bf8bd649d2568e7371760841db39c6ac2e63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyM2JmOGJkNjQ5ZDI1NjhlNzM3MTc2MDg0MWRiMzljNmFjMmU2Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-05T17:59:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-05T17:59:40Z"}, "message": "re PR c++/62659 (Regression in template argument substitution in 4.9+)\n\n\tPR c++/62659\n\t* semantics.c (potential_constant_expression_1): Handle un-folded\n\tpointer to member constants.\n\nFrom-SVN: r214974", "tree": {"sha": "5802052cd03ae89ce9db8b9ffb7e4f5c7f30e08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5802052cd03ae89ce9db8b9ffb7e4f5c7f30e08b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed23bf8bd649d2568e7371760841db39c6ac2e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed23bf8bd649d2568e7371760841db39c6ac2e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed23bf8bd649d2568e7371760841db39c6ac2e63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed23bf8bd649d2568e7371760841db39c6ac2e63/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01c2fa9d53bee9a6aeeb2b8026081db22c2a66f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c2fa9d53bee9a6aeeb2b8026081db22c2a66f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c2fa9d53bee9a6aeeb2b8026081db22c2a66f1"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "3d8723139304e0d3fad4c23ca987a009a48c7116", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ed23bf8bd649d2568e7371760841db39c6ac2e63", "patch": "@@ -1,3 +1,9 @@\n+2014-09-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/62659\n+\t* semantics.c (potential_constant_expression_1): Handle un-folded\n+\tpointer to member constants.\n+\n 2014-09-04  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR ipa/61659"}, {"sha": "776fa264488a3e470e50d993aa81a7a85c1f5677", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ed23bf8bd649d2568e7371760841db39c6ac2e63", "patch": "@@ -10348,6 +10348,11 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n             designates an object with thread or automatic storage\n             duration;  */\n       t = TREE_OPERAND (t, 0);\n+\n+      if (TREE_CODE (t) == OFFSET_REF && PTRMEM_OK_P (t))\n+\t/* A pointer-to-member constant.  */\n+\treturn true;\n+\n #if 0\n       /* FIXME adjust when issue 1197 is fully resolved.  For now don't do\n          any checking here, as we might dereference the pointer later.  If"}, {"sha": "7700c0b9722b8eca8c74c40b1fdb631d1ff5f48a", "filename": "gcc/testsuite/g++.dg/template/ptrmem29.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bf8bd649d2568e7371760841db39c6ac2e63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem29.C?ref=ed23bf8bd649d2568e7371760841db39c6ac2e63", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/62659\n+\n+struct D {\n+  typedef int (D::*cont_func)();\n+  template <cont_func> struct B;\n+  template <cont_func cont_f> void wait(B<cont_f> ***);\n+\n+  int done();\n+  template <bool> void fix() { wait<&D::done>(0); }\n+};"}]}