{"sha": "77bd447bb4f1c1a1f864fb944de7e9616180310a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiZDQ0N2JiNGYxYzFhMWY4NjRmYjk0NGRlN2U5NjE2MTgwMzEwYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-12-16T19:52:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-12-16T19:52:37Z"}, "message": "re PR libstdc++/8949 (numeric_limits<>::denorm_min() and is_iec559 problems.)\n\n2002-12-16  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/8949\n\t* include/std/std_limits.h\n\t(struct numeric_limits<short>,\n\tstruct numeric_limits<unsigned short>,\n\tstruct numeric_limits<int>,\n\tstruct numeric_limits<unsigned int>,\n\tstruct numeric_limits<long>,\n\tstruct numeric_limits<unsigned long>,\n\tstruct numeric_limits<long long>,\n\tstruct numeric_limits<unsigned long long>): According\n\tto 18.2.1.2,53 and 18.2.1.5,1 is_iec559 shall be false.\n\t* testsuite/18_support/numeric_limits.cc: Add test04.\n\nFrom-SVN: r60181", "tree": {"sha": "dd055e94ad7122fff411c9f0971653a27778391a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd055e94ad7122fff411c9f0971653a27778391a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77bd447bb4f1c1a1f864fb944de7e9616180310a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77bd447bb4f1c1a1f864fb944de7e9616180310a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77bd447bb4f1c1a1f864fb944de7e9616180310a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77bd447bb4f1c1a1f864fb944de7e9616180310a/comments", "author": null, "committer": null, "parents": [{"sha": "165bfb59b275721eec9785d8d9cefcaab3df7550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bfb59b275721eec9785d8d9cefcaab3df7550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165bfb59b275721eec9785d8d9cefcaab3df7550"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "f8a5ec2c320b961876649edfce596c6e3c7b9dba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=77bd447bb4f1c1a1f864fb944de7e9616180310a", "patch": "@@ -1,3 +1,18 @@\n+2002-12-16  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/8949\n+\t* include/std/std_limits.h\n+\t(struct numeric_limits<short>,\n+\tstruct numeric_limits<unsigned short>,\n+\tstruct numeric_limits<int>,\n+\tstruct numeric_limits<unsigned int>,\n+\tstruct numeric_limits<long>,\n+\tstruct numeric_limits<unsigned long>,\n+\tstruct numeric_limits<long long>,\n+\tstruct numeric_limits<unsigned long long>): According\n+\tto 18.2.1.2,53 and 18.2.1.5,1 is_iec559 shall be false.\n+\t* testsuite/18_support/numeric_limits.cc: Add test04.\n+\n 2002-12-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n         * configure.in (GLIBCPP_ENABLE_DEBUG): Default to none."}, {"sha": "9be69477958fe5ba6563745f1e81326079ac4a69", "filename": "libstdc++-v3/include/std/std_limits.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h?ref=77bd447bb4f1c1a1f864fb944de7e9616180310a", "patch": "@@ -508,7 +508,7 @@ namespace std\n       static short denorm_min() throw()\n       { return short(); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -558,7 +558,7 @@ namespace std\n       static unsigned short denorm_min() throw()\n       { return static_cast<unsigned short>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -608,7 +608,7 @@ namespace std\n       static int denorm_min() throw()\n       { return static_cast<int>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -658,7 +658,7 @@ namespace std\n       static unsigned int denorm_min() throw()\n       { return static_cast<unsigned int>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -708,7 +708,7 @@ namespace std\n       static long denorm_min() throw()\n       { return static_cast<long>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -758,7 +758,7 @@ namespace std\n       static unsigned long denorm_min() throw()\n       { return static_cast<unsigned long>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -808,7 +808,7 @@ namespace std\n       static long long denorm_min() throw()\n       { return static_cast<long long>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n \n@@ -858,7 +858,7 @@ namespace std\n       static unsigned long long denorm_min() throw()\n       { return static_cast<unsigned long long>(0); }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n       static const bool is_modulo = true;\n "}, {"sha": "540b4b7759f042661b386cc1e2b45ac1337c6ed8", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77bd447bb4f1c1a1f864fb944de7e9616180310a/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc?ref=77bd447bb4f1c1a1f864fb944de7e9616180310a", "patch": "@@ -289,12 +289,33 @@ bool test03()\n   return test;\n }\n \n+// libstdc++/8949\n+bool test04()\n+{\n+  bool test = true;\n+\n+  VERIFY( !std::numeric_limits<short>::is_iec559 );\n+  VERIFY( !std::numeric_limits<unsigned short>::is_iec559 );\n+  VERIFY( !std::numeric_limits<int>::is_iec559 );\n+  VERIFY( !std::numeric_limits<unsigned int>::is_iec559 );\n+  VERIFY( !std::numeric_limits<long>::is_iec559 );\n+  VERIFY( !std::numeric_limits<unsigned long>::is_iec559 );\n+  VERIFY( !std::numeric_limits<long long>::is_iec559 );\n+  VERIFY( !std::numeric_limits<unsigned long long>::is_iec559 );\n+\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+\n+  return test;\n+}\n \n int main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n \n   test_extrema<char>();\n   test_extrema<signed char>();"}]}