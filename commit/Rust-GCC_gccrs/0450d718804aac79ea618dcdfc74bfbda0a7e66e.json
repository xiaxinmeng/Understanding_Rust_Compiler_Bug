{"sha": "0450d718804aac79ea618dcdfc74bfbda0a7e66e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1MGQ3MTg4MDRhYWM3OWVhNjE4ZGNkZmM3NGJmYmRhMGE3ZTY2ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-11-05T11:14:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-11-05T11:14:16Z"}, "message": "tree-ssa-loop-niter.c (find_loop_niter): Remove just_once_each_iteration_p.\n\n\n\n\t* tree-ssa-loop-niter.c (find_loop_niter): Remove just_once_each_iteration_p.\n\t(maybe_lower_iteration_bound): Initialize not_executed_last_iteration to  NULL\n\t* tree-ssa-loop-ivcanon.c (canonicalize_loop_induction_variables): Skip\n\tjust_once_each_iteration_p; record estimated bound when loop has only one\n\tlikely exit; test just_once_each_iteration_p before IV canon itself.\n\nFrom-SVN: r193159", "tree": {"sha": "f146274ac306166de82576e3d78df124ff7791e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f146274ac306166de82576e3d78df124ff7791e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0450d718804aac79ea618dcdfc74bfbda0a7e66e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0450d718804aac79ea618dcdfc74bfbda0a7e66e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0450d718804aac79ea618dcdfc74bfbda0a7e66e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0450d718804aac79ea618dcdfc74bfbda0a7e66e/comments", "author": null, "committer": null, "parents": [{"sha": "264bd20fa702de13289a6be9088879eea24805a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264bd20fa702de13289a6be9088879eea24805a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264bd20fa702de13289a6be9088879eea24805a4"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "be526da445b2d2b220400ed6def37f5be8edf170", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0450d718804aac79ea618dcdfc74bfbda0a7e66e", "patch": "@@ -4,6 +4,14 @@\n \t* dwarf2out.c (value_format) <case dw_val_class_high_pc>: Handle\n \talso DWARF2_ADDR_SIZE 1 and 2.\n \n+2012-11-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-loop-niter.c (find_loop_niter): Remove just_once_each_iteration_p.\n+\t(maybe_lower_iteration_bound): Initialize not_executed_last_iteration to  NULL\n+\t* tree-ssa-loop-ivcanon.c (canonicalize_loop_induction_variables): Skip\n+\tjust_once_each_iteration_p; record estimated bound when loop has only one\n+\tlikely exit; test just_once_each_iteration_p before IV canon itself.\n+\n 2012-11-05  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (leaf_node_p): Rename to ..."}, {"sha": "58f45d2d1c4b314bfc3a1a2010865482c397c685", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=0450d718804aac79ea618dcdfc74bfbda0a7e66e", "patch": "@@ -760,11 +760,7 @@ canonicalize_loop_induction_variables (struct loop *loop,\n \n   niter = number_of_latch_executions (loop);\n   if (TREE_CODE (niter) == INTEGER_CST)\n-    {\n-      exit = single_exit (loop);\n-      if (!just_once_each_iteration_p (loop, exit->src))\n-\treturn false;\n-    }\n+    exit = single_exit (loop);\n   else\n     {\n       /* If the loop has more than one exit, try checking all of them\n@@ -785,7 +781,10 @@ canonicalize_loop_induction_variables (struct loop *loop,\n   /* We work exceptionally hard here to estimate the bound\n      by find_loop_niter_by_eval.  Be sure to keep it for future.  */\n   if (niter && TREE_CODE (niter) == INTEGER_CST)\n-    record_niter_bound (loop, tree_to_double_int (niter), false, true);\n+    {\n+      record_niter_bound (loop, tree_to_double_int (niter),\n+\t\t\t  exit == single_likely_exit (loop), true);\n+    }\n \n   /* Force re-computation of loop bounds so we can remove redundant exits.  */\n   maxiter = max_loop_iterations_int (loop);\n@@ -813,7 +812,8 @@ canonicalize_loop_induction_variables (struct loop *loop,\n     return true;\n \n   if (create_iv\n-      && niter && !chrec_contains_undetermined (niter))\n+      && niter && !chrec_contains_undetermined (niter)\n+      && exit && just_once_each_iteration_p (loop, exit->src))\n     create_canonical_iv (loop, exit, niter);\n \n   return modified;"}, {"sha": "87b550cf5b4e8de24c54af1813659d30b41f80f7", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0450d718804aac79ea618dcdfc74bfbda0a7e66e/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=0450d718804aac79ea618dcdfc74bfbda0a7e66e", "patch": "@@ -1941,9 +1941,6 @@ find_loop_niter (struct loop *loop, edge *exit)\n   *exit = NULL;\n   FOR_EACH_VEC_ELT (edge, exits, i, ex)\n     {\n-      if (!just_once_each_iteration_p (loop, ex->src))\n-\tcontinue;\n-\n       if (!number_of_iterations_exit (loop, ex, &desc, false))\n \tcontinue;\n \n@@ -3186,7 +3183,7 @@ discover_iteration_bound_by_body_walk (struct loop *loop)\n static void\n maybe_lower_iteration_bound (struct loop *loop)\n {\n-  pointer_set_t *not_executed_last_iteration = pointer_set_create ();\n+  pointer_set_t *not_executed_last_iteration = NULL;\n   struct nb_iter_bound *elt;\n   bool found_exit = false;\n   VEC (basic_block, heap) *queue = NULL;"}]}