{"sha": "77103685ff4b50b3c4d7ee76688bdf452acc82c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcxMDM2ODVmZjRiNTBiM2M0ZDdlZTc2Njg4YmRmNDUyYWNjODJjNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-05T20:36:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-09T19:31:51Z"}, "message": "tree-inline: Fix VLA handling [PR95552]\n\nThe problem in this testcase comes from cloning the constructor into\ncomplete and base variants.  When we clone the body the first time,\nwalk_tree_1 calls copy_tree_body_r on the type of the artificial TYPE_DECL\nwe made for the VLA type without calling it on the decl itself, so we\noverwrite the type of the TYPE_DECL without copying the decl first.\n\nThis has been broken since we started inserting a TYPE_DECL for anonymous\nVLAs in r7-457.\n\nThis patch fixes walk_tree_1 to call the function on the TYPE_DECL, as we do\nfor other decls of a DECL_EXPR.\n\ngcc/ChangeLog:\n\n\tPR c++/95552\n\t* tree.c (walk_tree_1): Call func on the TYPE_DECL of a DECL_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95552\n\t* g++.dg/ext/vla23.C: New test.", "tree": {"sha": "02414b1b8578c53c9922428d49a46a975acaa020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02414b1b8578c53c9922428d49a46a975acaa020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77103685ff4b50b3c4d7ee76688bdf452acc82c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77103685ff4b50b3c4d7ee76688bdf452acc82c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77103685ff4b50b3c4d7ee76688bdf452acc82c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77103685ff4b50b3c4d7ee76688bdf452acc82c7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab2789ec507a94f1a75a6534bca51c7b39037ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2789ec507a94f1a75a6534bca51c7b39037ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab2789ec507a94f1a75a6534bca51c7b39037ce0"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "317a824b2f31fdc0c8b66cb480639d971e29a0e0", "filename": "gcc/testsuite/g++.dg/ext/vla23.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77103685ff4b50b3c4d7ee76688bdf452acc82c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77103685ff4b50b3c4d7ee76688bdf452acc82c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla23.C?ref=77103685ff4b50b3c4d7ee76688bdf452acc82c7", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/95552\n+// Test for VLA and cloned constructor.\n+// { dg-additional-options -Wno-vla }\n+// { dg-require-effective-target alloca }\n+\n+struct VB { };\n+struct ViewDom: virtual VB\n+{\n+  ViewDom(int i) { char (*a)[i]; }\n+};\n+void element( )\n+{\n+  ViewDom a(2);\n+}"}, {"sha": "805f669a94575eb2833bd30982cfe57c26592e00", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77103685ff4b50b3c4d7ee76688bdf452acc82c7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77103685ff4b50b3c4d7ee76688bdf452acc82c7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=77103685ff4b50b3c4d7ee76688bdf452acc82c7", "patch": "@@ -12212,6 +12212,12 @@ walk_tree_1 (tree *tp, walk_tree_fn func, void *data,\n \t Note that DECLs get walked as part of processing the BIND_EXPR.  */\n       if (TREE_CODE (DECL_EXPR_DECL (*tp)) == TYPE_DECL)\n \t{\n+\t  /* Call the function for the decl so e.g. copy_tree_body_r can\n+\t     replace it with the remapped one.  */\n+\t  result = (*func) (&DECL_EXPR_DECL (*tp), &walk_subtrees, data);\n+\t  if (result || !walk_subtrees)\n+\t    return result;\n+\n \t  tree *type_p = &TREE_TYPE (DECL_EXPR_DECL (*tp));\n \t  if (TREE_CODE (*type_p) == ERROR_MARK)\n \t    return NULL_TREE;"}]}