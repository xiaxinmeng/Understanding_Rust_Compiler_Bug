{"sha": "584a3c080bbd6e64131fa53771c7424bcf9d21fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg0YTNjMDgwYmJkNmU2NDEzMWZhNTM3NzFjNzQyNGJjZjlkMjFmYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-15T09:14:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-15T11:54:32Z"}, "message": "tree-optimization/92260 - improve fix\n\nThis improves the fix for PR92260 changing the number of vector\ncomputation to the canonical one, not needing to look at the\nusing stmt.\n\n2020-05-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92260\n\t* tree-vect-slp.c (vect_get_constant_vectors): Compute\n\tthe number of vector stmts in a canonical way.", "tree": {"sha": "adacc7be3b6e128a5530b6c5e8354a041a509316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adacc7be3b6e128a5530b6c5e8354a041a509316"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/584a3c080bbd6e64131fa53771c7424bcf9d21fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/584a3c080bbd6e64131fa53771c7424bcf9d21fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/584a3c080bbd6e64131fa53771c7424bcf9d21fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/584a3c080bbd6e64131fa53771c7424bcf9d21fa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "5eaa1b8af2788c6737b5cfc7dd8843abdd0732da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/584a3c080bbd6e64131fa53771c7424bcf9d21fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/584a3c080bbd6e64131fa53771c7424bcf9d21fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=584a3c080bbd6e64131fa53771c7424bcf9d21fa", "patch": "@@ -1,3 +1,9 @@\n+2020-05-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92260\n+\t* tree-vect-slp.c (vect_get_constant_vectors): Compute\n+\tthe number of vector stmts in a canonical way.\n+\n 2020-05-15  Martin Liska  <mliska@suse.cz>\n \n \t* hsa-gen.c (get_symbol_for_decl): Fix misleading indentation"}, {"sha": "15eea74d8d1af29bacb9eeb2a682110b4f79f313", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/584a3c080bbd6e64131fa53771c7424bcf9d21fa/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/584a3c080bbd6e64131fa53771c7424bcf9d21fa/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=584a3c080bbd6e64131fa53771c7424bcf9d21fa", "patch": "@@ -3561,19 +3561,12 @@ vect_get_constant_vectors (vec_info *vinfo,\n   else\n     vector_type = get_vectype_for_scalar_type (vinfo, TREE_TYPE (op), op_node);\n \n-  /* ???  For lane-reducing ops we should also have the required number\n-     of vector stmts initialized rather than second-guessing here.  */\n-  unsigned int number_of_vectors;\n-  if (is_gimple_assign (stmt_vinfo->stmt)\n-      && (gimple_assign_rhs_code (stmt_vinfo->stmt) == SAD_EXPR\n-\t  || gimple_assign_rhs_code (stmt_vinfo->stmt) == DOT_PROD_EXPR\n-\t  || gimple_assign_rhs_code (stmt_vinfo->stmt) == WIDEN_SUM_EXPR))\n-    number_of_vectors = SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node);\n-  else\n-    number_of_vectors\n-      = vect_get_num_vectors (SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node)\n-\t\t\t      * TYPE_VECTOR_SUBPARTS (stmt_vectype),\n-\t\t\t      vector_type);\n+  poly_uint64 vf = 1;\n+  if (loop_vec_info loop_vinfo = dyn_cast <loop_vec_info> (vinfo))\n+    vf = loop_vinfo->vectorization_factor;\n+  unsigned int number_of_vectors\n+    = vect_get_num_vectors (vf * group_size, vector_type);\n+\n   vec_oprnds->create (number_of_vectors);\n   auto_vec<tree> voprnds (number_of_vectors);\n "}]}