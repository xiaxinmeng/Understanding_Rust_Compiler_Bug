{"sha": "5079b7781a2c506dcdfb241347d74c7891268225", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3OWI3NzgxYTJjNTA2ZGNkZmIyNDEzNDdkNzRjNzg5MTI2ODIyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-18T09:10:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-18T09:10:43Z"}, "message": "openmp: Add nothing directive support\n\nAs has been clarified, it is intentional that nothing directive is accepted\nin substatements of selection and looping statements and after labels and\nis handled as if the directive just isn't there, so that\nvoid\nfoo (int x)\n{\n  if (x)\n    #pragma omp metadirective when (...:nothing) when (...:parallel)\n    bar ();\n}\nbehaves consistently; declarative and stand-alone directives aren't allowed\nat that point, but constructs are parsed with the following statement as\nthe construct body and nothing or missing default on metadirective therefore\nshould handle the following statement as part of the if substatement instead\nof having nothing as the substatement and bar done unconditionally after the\nif.\n\n2021-08-18  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/c-family/\n\t* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_NOTHING.\n\t* c-pragma.c (omp_pragmas): Add nothing directive.\n\t* c-omp.c (omp_directives): Uncomment nothing directive entry.\ngcc/c/\n\t* c-parser.c (c_parser_omp_nothing): New function.\n\t(c_parser_pragma): Handle PRAGMA_OMP_NOTHING.\ngcc/cp/\n\t* parser.c (cp_parser_omp_nothing): New function.\n\t(cp_parser_pragma): Handle PRAGMA_OMP_NOTHING.\ngcc/testsuite/\n\t* c-c++-common/gomp/nothing-1.c: New test.\n\t* g++.dg/gomp/attrs-1.C (bar): Add nothing directive test.\n\t* g++.dg/gomp/attrs-2.C (bar): Likewise.\n\t* g++.dg/gomp/attrs-9.C: Likewise.\nlibgomp/\n\t* testsuite/libgomp.c-c++-common/nothing-1.c: New test.", "tree": {"sha": "c10555cf313e8e8190de6037b35385e672c441f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c10555cf313e8e8190de6037b35385e672c441f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5079b7781a2c506dcdfb241347d74c7891268225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5079b7781a2c506dcdfb241347d74c7891268225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5079b7781a2c506dcdfb241347d74c7891268225", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5079b7781a2c506dcdfb241347d74c7891268225/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0684c8d3effab2c9c1b29938f5e56c77106af564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0684c8d3effab2c9c1b29938f5e56c77106af564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0684c8d3effab2c9c1b29938f5e56c77106af564"}], "stats": {"total": 122, "additions": 120, "deletions": 2}, "files": [{"sha": "d4e98bfd76ba1d3cd2549aae3c57144298d2cb82", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -3007,8 +3007,8 @@ static const struct c_omp_directive omp_directives[] = {\n     C_OMP_DIR_CONSTRUCT, true },\n   /* { \"metadirective\", nullptr, nullptr, PRAGMA_OMP_METADIRECTIVE,\n     C_OMP_DIR_???, ??? },  */\n-  /* { \"nothing\", nullptr, nullptr, PRAGMA_OMP_NOTHING,\n-    C_OMP_DIR_UTILITY, false },  */\n+  { \"nothing\", nullptr, nullptr, PRAGMA_OMP_NOTHING,\n+    C_OMP_DIR_UTILITY, false },\n   /* ordered with depend clause is C_OMP_DIR_STANDALONE.  */\n   { \"ordered\", nullptr, nullptr, PRAGMA_OMP_ORDERED,\n     C_OMP_DIR_CONSTRUCT, true },"}, {"sha": "238309d4a775b858142909dbdc252c64698eabf1", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -1328,6 +1328,7 @@ static const struct omp_pragma_def omp_pragmas[] = {\n   { \"depobj\", PRAGMA_OMP_DEPOBJ },\n   { \"end\", PRAGMA_OMP_END_DECLARE_TARGET },\n   { \"flush\", PRAGMA_OMP_FLUSH },\n+  { \"nothing\", PRAGMA_OMP_NOTHING },\n   { \"requires\", PRAGMA_OMP_REQUIRES },\n   { \"scope\", PRAGMA_OMP_SCOPE },\n   { \"section\", PRAGMA_OMP_SECTION },"}, {"sha": "dc9e8a6616df91d25645ea32d621a75c4e2bcdb4", "filename": "gcc/c-family/c-pragma.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc-family%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.h?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -57,6 +57,7 @@ enum pragma_kind {\n   PRAGMA_OMP_FLUSH,\n   PRAGMA_OMP_FOR,\n   PRAGMA_OMP_LOOP,\n+  PRAGMA_OMP_NOTHING,\n   PRAGMA_OMP_MASKED,\n   PRAGMA_OMP_MASTER,\n   PRAGMA_OMP_ORDERED,"}, {"sha": "d5f51b11423113b517f7d20f79fae5c830979f9b", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -1578,6 +1578,7 @@ static tree c_parser_omp_for_loop (location_t, c_parser *, enum tree_code,\n static void c_parser_omp_taskwait (c_parser *);\n static void c_parser_omp_taskyield (c_parser *);\n static void c_parser_omp_cancel (c_parser *);\n+static void c_parser_omp_nothing (c_parser *);\n \n enum pragma_context { pragma_external, pragma_struct, pragma_param,\n \t\t      pragma_stmt, pragma_compound };\n@@ -12480,6 +12481,10 @@ c_parser_pragma (c_parser *parser, enum pragma_context context, bool *if_p)\n       c_parser_omp_requires (parser);\n       return false;\n \n+    case PRAGMA_OMP_NOTHING:\n+      c_parser_omp_nothing (parser);\n+      return false;\n+\n     case PRAGMA_OMP_ORDERED:\n       return c_parser_omp_ordered (parser, context, if_p);\n \n@@ -21908,6 +21913,16 @@ c_parser_omp_taskloop (location_t loc, c_parser *parser,\n   return ret;\n }\n \n+/* OpenMP 5.1\n+   #pragma omp nothing new-line  */\n+\n+static void\n+c_parser_omp_nothing (c_parser *parser)\n+{\n+  c_parser_consume_pragma (parser);\n+  c_parser_skip_to_pragma_eol (parser);\n+}\n+\n /* Main entry point to parsing most OpenMP pragmas.  */\n \n static void"}, {"sha": "04116fbcef4a7e1c15c0bae5f315dc1dc2a2ebf3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -45564,6 +45564,16 @@ cp_parser_omp_requires (cp_parser *parser, cp_token *pragma_tok)\n }\n \n \n+/* OpenMP 5.1:\n+   #pragma omp nothing new-line  */\n+\n+static void\n+cp_parser_omp_nothing (cp_parser *parser, cp_token *pragma_tok)\n+{\n+  cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n+}\n+\n+\n /* OpenMP 4.5:\n    #pragma omp taskloop taskloop-clause[optseq] new-line\n      for-loop\n@@ -46673,6 +46683,10 @@ cp_parser_pragma (cp_parser *parser, enum pragma_context context, bool *if_p)\n \t}\n       return cp_parser_omp_requires (parser, pragma_tok);\n \n+    case PRAGMA_OMP_NOTHING:\n+      cp_parser_omp_nothing (parser, pragma_tok);\n+      return false;\n+\n     case PRAGMA_OMP_ORDERED:\n       if (context != pragma_stmt && context != pragma_compound)\n \tgoto bad_stmt;"}, {"sha": "d50c92a67c313613e1f310411dfe4ffa94691268", "filename": "gcc/testsuite/c-c++-common/gomp/nothing-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fnothing-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fnothing-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fnothing-1.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -0,0 +1,37 @@\n+#pragma omp nothing\n+\n+struct S\n+{\n+  #pragma omp nothing\n+  int s;\n+};\n+\n+int\n+foo (int i)\n+{\n+  #pragma omp nothing\n+  if (0)\n+    #pragma omp nothing\n+    i++;\n+  if (1)\n+    ;\n+  else\n+    #pragma omp nothing\n+    i++;\n+  switch (0)\n+    #pragma omp nothing\n+    {\n+    default:\n+      break;\n+    }\n+  while (0)\n+    #pragma omp nothing\n+    i++;\n+  for (; 0;)\n+    #pragma omp nothing\n+    i++;\n+  lab:\n+  #pragma omp nothing\n+  i++;\n+  return i;\n+}"}, {"sha": "435d54fb762e1370eab273e2334d6d827cbe91bd", "filename": "gcc/testsuite/g++.dg/gomp/attrs-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-1.C?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -111,6 +111,7 @@ void\n bar (int d, int m, int i1, int i2, int i3, int p, int *idp, int s,\n      int nte, int tl, int nth, int g, int nta, int fi, int pp, int *q, int *dd, int ntm)\n {\n+  [[omp::directive (nothing)]];\n   [[omp::directive (for simd\n     private (p) firstprivate (f) lastprivate (l) linear (ll:1) reduction(+:r) schedule(static, 4) collapse(1) nowait\n     safelen(8) simdlen(4) aligned(q: 32) nontemporal(ntm) if(i1) order(concurrent) allocate (f))]]"}, {"sha": "bea657f02b9a80433867c81b2fb2ad42da710397", "filename": "gcc/testsuite/g++.dg/gomp/attrs-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-2.C?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -111,6 +111,7 @@ void\n bar (int d, int m, int i1, int i2, int i3, int p, int *idp, int s,\n      int nte, int tl, int nth, int g, int nta, int fi, int pp, int *q, int *dd, int ntm)\n {\n+  [[omp::directive (nothing)]];\n   [[omp::directive (for simd,\n     private (p),firstprivate (f),lastprivate (l),linear (ll:1),reduction(+:r),schedule(static, 4),collapse(1),nowait,\n     safelen(8),simdlen(4),aligned(q: 32),nontemporal(ntm),if(i1),order(concurrent),allocate (f))]]"}, {"sha": "08cd2b1dfd94e4efede5b674c86258e0fce38487", "filename": "gcc/testsuite/g++.dg/gomp/attrs-9.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -13,3 +13,4 @@ int b, c;\n int d;\n [[omp::directive (end declare target)]];\n [[omp::directive (end declare target)]];\n+[[omp::directive (nothing)]];"}, {"sha": "69716b18d98cb272425d8cb4e63a97568b0f57b9", "filename": "libgomp/testsuite/libgomp.c-c++-common/nothing-1.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5079b7781a2c506dcdfb241347d74c7891268225/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fnothing-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5079b7781a2c506dcdfb241347d74c7891268225/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fnothing-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fnothing-1.c?ref=5079b7781a2c506dcdfb241347d74c7891268225", "patch": "@@ -0,0 +1,47 @@\n+#include <stdlib.h>\n+\n+#pragma omp nothing\n+\n+struct S\n+{\n+  #pragma omp nothing\n+  int s;\n+};\n+\n+int\n+foo (int i)\n+{\n+  #pragma omp nothing\n+  if (0)\n+    #pragma omp nothing\n+    i++;\n+  if (1)\n+    ;\n+  else\n+    #pragma omp nothing\n+    i++;\n+  switch (0)\n+    #pragma omp nothing\n+    {\n+    default:\n+      break;\n+    }\n+  while (0)\n+    #pragma omp nothing\n+    i++;\n+  for (; 0;)\n+    #pragma omp nothing\n+    i++;\n+  lab:\n+  #pragma omp nothing\n+  i++;\n+  return i;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (5) != 6 || foo (-2) != -1)\n+    abort ();\n+  return 0;\n+}"}]}