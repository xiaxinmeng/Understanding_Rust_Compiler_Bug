{"sha": "f668cd6f2be34526a20dcedff00cac876c6760c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2OGNkNmYyYmUzNDUyNmEyMGRjZWRmZjAwY2FjODc2YzY3NjBjNg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2014-05-05T07:53:35Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2014-05-05T07:53:35Z"}, "message": "hoist-register-pressure-1.c: Replace int with long.\n\n2014-05-05  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* gcc.dg/hoist-register-pressure-1.c: Replace int with long.\n\tDisable asm scan for s390.\n\t* gcc.dg/hoist-register-pressure-2.c: Likewise.\n\t* gcc.dg/hoist-register-pressure-3.c: Likewise.\n\nFrom-SVN: r210060", "tree": {"sha": "7914e6311529355029fd05132ff9b77c9b4b3185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7914e6311529355029fd05132ff9b77c9b4b3185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f668cd6f2be34526a20dcedff00cac876c6760c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f668cd6f2be34526a20dcedff00cac876c6760c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f668cd6f2be34526a20dcedff00cac876c6760c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f668cd6f2be34526a20dcedff00cac876c6760c6/comments", "author": null, "committer": null, "parents": [{"sha": "cb8f1a57612438e0922264c142cfa9c71aa67771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8f1a57612438e0922264c142cfa9c71aa67771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8f1a57612438e0922264c142cfa9c71aa67771"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "d64a06f60d90ae9eb58b10e5af45459d26cbc662", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f668cd6f2be34526a20dcedff00cac876c6760c6", "patch": "@@ -1,3 +1,10 @@\n+2014-05-05  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* gcc.dg/hoist-register-pressure-1.c: Replace int with long.\n+\tDisable asm scan for s390.\n+\t* gcc.dg/hoist-register-pressure-2.c: Likewise.\n+\t* gcc.dg/hoist-register-pressure-3.c: Likewise.\n+\n 2014-05-05  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/60363"}, {"sha": "4aabcb78daf72423709a877a38a9c7f3c0f7853a", "filename": "gcc/testsuite/gcc.dg/hoist-register-pressure-1.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-1.c?ref=f668cd6f2be34526a20dcedff00cac876c6760c6", "patch": "@@ -1,14 +1,18 @@\n /* { dg-options \"-Os -fdump-rtl-hoist\" }  */\n-/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" { target { nonpic } } } } */\n+/* The rtl hoist pass requires that the expression to be hoisted can\n+   be assigned without clobbering cc.  For a PLUS rtx on S/390 this\n+   requires a load address instruction which is fine on 64 bit but\n+   cannot be used on 31 bit since it does a 31 bit add only.  */\n+/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" { target { { ! s390-*-* } && nonpic } } } } */\n /* { dg-final { cleanup-rtl-dump \"hoist\" } } */\n \n #define BUF 100\n-int a[BUF];\n+long a[BUF];\n \n-void com (int);\n-void bar (int);\n+void com (long);\n+void bar (long);\n \n-int foo (int x, int y, int z)\n+long foo (long x, long y, long z)\n {\n   /* \"x+y\" won't be hoisted if \"-fira-hoist-pressure\" is disabled,\n      because its rtx_cost is too small.  */"}, {"sha": "f1c927ec434ad66e677eb3d19e3d0eb2b2e68ab8", "filename": "gcc/testsuite/gcc.dg/hoist-register-pressure-2.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-2.c?ref=f668cd6f2be34526a20dcedff00cac876c6760c6", "patch": "@@ -1,14 +1,18 @@\n /* { dg-options \"-Os -fdump-rtl-hoist\" }  */\n-/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" } } */\n+/* The rtl hoist pass requires that the expression to be hoisted can\n+   be assigned without clobbering cc.  For a PLUS rtx on S/390 this\n+   requires a load address instruction which is fine on 64 bit but\n+   cannot be used on 31 bit since it does a 31 bit add only.  */\n+/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" { target { ! s390-*-* } } } } */\n /* { dg-final { cleanup-rtl-dump \"hoist\" } } */\n \n #define BUF 100\n-int a[BUF];\n+long a[BUF];\n \n-void com (int);\n-void bar (int);\n+void com (long);\n+void bar (long);\n \n-int foo (int x, int y, int z)\n+long foo (long x, long y, long z)\n {\n   /* \"x+y\" won't be hoisted if \"-fira-hoist-pressure\" is disabled,\n      because its rtx_cost is too small.  */"}, {"sha": "24abaa6ade4c8552386e3ea5e83da76358ef0383", "filename": "gcc/testsuite/gcc.dg/hoist-register-pressure-3.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668cd6f2be34526a20dcedff00cac876c6760c6/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fhoist-register-pressure-3.c?ref=f668cd6f2be34526a20dcedff00cac876c6760c6", "patch": "@@ -1,14 +1,18 @@\n /* { dg-options \"-Os -fdump-rtl-hoist\" }  */\n-/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" } } */\n+/* The rtl hoist pass requires that the expression to be hoisted can\n+   be assigned without clobbering cc.  For a PLUS rtx on S/390 this\n+   requires a load address instruction which is fine on 64 bit but\n+   cannot be used on 31 bit since it does a 31 bit add only.  */\n+/* { dg-final { scan-rtl-dump \"PRE/HOIST: end of bb .* copying expression\" \"hoist\" { target { ! s390-*-* } } } } */\n /* { dg-final { cleanup-rtl-dump \"hoist\" } } */\n \n #define BUF 100\n-int a[BUF];\n+long a[BUF];\n \n-void com (int);\n-void bar (int);\n+void com (long);\n+void bar (long);\n \n-int foo (int x, int y, int z)\n+long foo (long x, long y, long z)\n {\n   /* \"x+y\" won't be hoisted if \"-fira-hoist-pressure\" is disabled,\n      because its rtx_cost is too small.  */"}]}