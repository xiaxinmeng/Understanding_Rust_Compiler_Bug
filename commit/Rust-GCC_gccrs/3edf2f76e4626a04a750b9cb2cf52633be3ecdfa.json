{"sha": "3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkZjJmNzZlNDYyNmEwNGE3NTBiOWNiMmNmNTI2MzNiZTNlY2RmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T10:35:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T10:35:28Z"}, "message": "[multiple changes]\n\n2009-04-20  Bob Duff  <duff@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Put call to Check_Library_Items inside\n\tpragma Debug.\n\n2009-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.adb (Build_Protected_Sub_Specification): Mark generated\n\tsubprogram as Eliminated when source operation is.\n\t(Expand_N_Protected_Type_Declaration): Generate protected and\n\tunprotected specs for the internal operations, even if the source\n\toperation is eliminated.\n\n2009-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb (Make_Predefined_Primitive_Specs,\n\tPredefined_Primitive_Bodies): Do not create the declarations and bodies\n\tof the primitive subprograms associated with dispatching select\n\tstatements when the runtime is in configurable mode.\n\n2009-04-20  Ed Falis  <falis@adacore.com>\n\n\t* s-vxwext-kernel.ads (tickGet): Use tick64Get.\n\nFrom-SVN: r146393", "tree": {"sha": "96319ef8d0650e1b483d824a45aa17d4abd8f3f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96319ef8d0650e1b483d824a45aa17d4abd8f3f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/comments", "author": null, "committer": null, "parents": [{"sha": "4fd1e8b0018d82b6830bd57d413e8429b379e580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd1e8b0018d82b6830bd57d413e8429b379e580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd1e8b0018d82b6830bd57d413e8429b379e580"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "ed49cb77411af7cba1225f2f2b9d0bda83676d79", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "patch": "@@ -1,3 +1,27 @@\n+2009-04-20  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Put call to Check_Library_Items inside\n+\tpragma Debug.\n+\n+2009-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Protected_Sub_Specification): Mark generated\n+\tsubprogram as Eliminated when source operation is.\n+\t(Expand_N_Protected_Type_Declaration): Generate protected and\n+\tunprotected specs for the internal operations, even if the source\n+\toperation is eliminated.\n+\n+2009-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Predefined_Primitive_Specs,\n+\tPredefined_Primitive_Bodies): Do not create the declarations and bodies\n+\tof the primitive subprograms associated with dispatching select\n+\tstatements when the runtime is in configurable mode.\n+\n+2009-04-20  Ed Falis  <falis@adacore.com>\n+\n+\t* s-vxwext-kernel.ads (tickGet): Use tick64Get.\n+\n 2009-04-20  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-oscons-tmplt.c: Add support for generating a dummy version of"}, {"sha": "3af685d1a9bcd1e29b539d8c3b098e54e53dec58", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "patch": "@@ -7819,12 +7819,13 @@ package body Exp_Ch3 is\n \n       --  These operations cannot be implemented on VM targets, so we simply\n       --  disable their generation in this case. Disable the generation of\n-      --  these bodies if No_Dispatching_Calls or Ravenscar is active.\n+      --  these bodies if No_Dispatching_Calls, Ravenscar or ZFP is active.\n \n       if Ada_Version >= Ada_05\n         and then VM_Target = No_VM\n         and then not Restriction_Active (No_Dispatching_Calls)\n         and then not Restriction_Active (No_Select_Statements)\n+        and then RTE_Available (RE_Select_Specific_Data)\n       then\n          --  These primitives are defined abstract in interface types\n \n@@ -8313,7 +8314,7 @@ package body Exp_Ch3 is\n \n       --  These operations cannot be implemented on VM targets, so we simply\n       --  disable their generation in this case. Disable the generation of\n-      --  these bodies if No_Dispatching_Calls or Ravenscar is active.\n+      --  these bodies if No_Dispatching_Calls, Ravenscar or ZFP is active.\n \n       if Ada_Version >= Ada_05\n         and then VM_Target = No_VM\n@@ -8325,6 +8326,7 @@ package body Exp_Ch3 is\n                       and then Has_Interfaces (Tag_Typ)))\n         and then not Restriction_Active (No_Dispatching_Calls)\n         and then not Restriction_Active (No_Select_Statements)\n+        and then RTE_Available (RE_Select_Specific_Data)\n       then\n          Append_To (Res, Make_Disp_Asynchronous_Select_Body (Tag_Typ));\n          Append_To (Res, Make_Disp_Conditional_Select_Body  (Tag_Typ));"}, {"sha": "e142d2debbe1aac35289b105c9fef11c5c983755", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "patch": "@@ -2791,6 +2791,11 @@ package body Exp_Ch9 is\n \n       Set_Debug_Info_Needed (New_Id);\n \n+      --  If a pragma Eliminate applies to the source entity, the internal\n+      --  subprograms will be eliminated as well.\n+\n+      Set_Is_Eliminated (New_Id, Is_Eliminated (Def_Id));\n+\n       if Nkind (Specification (Decl)) = N_Procedure_Specification then\n          New_Spec :=\n            Make_Procedure_Specification (Loc,\n@@ -7212,7 +7217,7 @@ package body Exp_Ch9 is\n \n             when N_Subprogram_Body =>\n \n-               --  Exclude functions created to analyze defaults\n+               --  Do not create bodies for eliminated operations.\n \n                if not Is_Eliminated (Defining_Entity (Op_Body))\n                  and then not Is_Eliminated (Corresponding_Spec (Op_Body))\n@@ -7803,9 +7808,7 @@ package body Exp_Ch9 is\n       Comp := First (Visible_Declarations (Pdef));\n \n       while Present (Comp) loop\n-         if Nkind (Comp) = N_Subprogram_Declaration\n-           and then not Is_Eliminated (Defining_Entity (Comp))\n-         then\n+         if Nkind (Comp) = N_Subprogram_Declaration then\n             Sub :=\n               Make_Subprogram_Declaration (Loc,\n                 Specification =>"}, {"sha": "2fa24f4741a69a25aba964b7320a76a29e2ac932", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "patch": "@@ -732,7 +732,7 @@ begin\n       Namet.Lock;\n       Stringt.Lock;\n \n-      Check_Library_Items;  --  For debugging\n+      pragma Debug (Check_Library_Items);\n \n       --  Here we call the back end to generate the output code\n "}, {"sha": "055c0a4536cf08dced3edba0bbfdeda90dba779a", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edf2f76e4626a04a750b9cb2cf52633be3ecdfa/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=3edf2f76e4626a04a750b9cb2cf52633be3ecdfa", "patch": "@@ -75,4 +75,10 @@ package System.VxWorks.Ext is\n    function Set_Time_Slice (ticks : int) return int;\n    pragma Import (C, Set_Time_Slice, \"kernelTimeSlice\");\n \n+   type UINT64 is mod 2 ** Long_Long_Integer'Size;\n+\n+   function tickGet return UINT64;\n+   --  \"tickGet\" not available for cert vThreads:\n+   pragma Import (C, tickGet, \"tick64Get\");\n+\n end System.VxWorks.Ext;"}]}