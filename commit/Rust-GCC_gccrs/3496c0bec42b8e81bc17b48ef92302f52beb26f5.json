{"sha": "3496c0bec42b8e81bc17b48ef92302f52beb26f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5NmMwYmVjNDJiOGU4MWJjMTdiNDhlZjkyMzAyZjUyYmViMjZmNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-15T20:40:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-15T20:40:20Z"}, "message": "update\n\nFrom-SVN: r17110", "tree": {"sha": "daa1eaea0fdea9951766dc4e19b3aa995ba165db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daa1eaea0fdea9951766dc4e19b3aa995ba165db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3496c0bec42b8e81bc17b48ef92302f52beb26f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3496c0bec42b8e81bc17b48ef92302f52beb26f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3496c0bec42b8e81bc17b48ef92302f52beb26f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3496c0bec42b8e81bc17b48ef92302f52beb26f5/comments", "author": null, "committer": null, "parents": [{"sha": "4bfc4dda74870b24309f9bee27cb7e0d8c160340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfc4dda74870b24309f9bee27cb7e0d8c160340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfc4dda74870b24309f9bee27cb7e0d8c160340"}], "stats": {"total": 253, "additions": 172, "deletions": 81}, "files": [{"sha": "7ea79d72841406e96d88d022ddb50584dc5b6608", "filename": "gcc/cp/g++FAQ.texi", "status": "modified", "additions": 172, "deletions": 81, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3496c0bec42b8e81bc17b48ef92302f52beb26f5/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3496c0bec42b8e81bc17b48ef92302f52beb26f5/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2BFAQ.texi?ref=3496c0bec42b8e81bc17b48ef92302f52beb26f5", "patch": "@@ -3,7 +3,7 @@\n @setfilename g++FAQ.info\n @settitle Frequently asked questions about the GNU C++ compiler\n @setchapternewpage off\n-@c version: @(#)g++FAQ.texi\t1.56 09/15/97\n+@c version: @(#)g++FAQ.texi\t1.57 12/14/97\n @c %**end of header\n \n @iftex\n@@ -12,7 +12,7 @@\n @titlepage\n @title G++ FAQ\n @subtitle Frequently asked questions about the GNU C++ compiler\n-@subtitle September 14, 1997\n+@subtitle December 14, 1997\n @sp 1\n @author Joe Buck\n @page\n@@ -35,15 +35,14 @@ all those who sent suggestions for improvements.  Thanks to Marcus Speh\n for doing the index.  A hypertext version is available on the World Wide\n Web at @file{http://www.cygnus.com/misc/g++FAQ_toc.html}.\n \n-This document has just been reorganized a bit.  There is some new\n-information about upcoming g++ releases and egcs; more needs to be done\n-but that will need to wait for next time.  A diff would look misleadingly\n-large, since I blew away and rebuilt the texinfo menus.\n+@strong{News flash}: egcs has been released, and the 2.8.0 release is\n+expected very soon!\n \n Please send updates and corrections to the FAQ to\n @code{jbuck@@synopsys.com}.  Please do @emph{not} use me as a resource\n to get your questions answered; that's what @file{gnu.g++.help} is for and I\n-don't have the time to support the net's use of g++.\n+don't have the time to support the net's use of g++.  If you ignore this\n+request your message to me may be deleted without a reply.  Sorry.\n \n Many FAQs, including this one, are available on the archive site\n ``rtfm.mit.edu''; see @*\n@@ -64,6 +63,7 @@ or in HTML form at @file{http://www.cerfnet.com/~mpcline/On-Line-C++-FAQs/}.\n \n @menu\n * basics::                      What is g++?  How do I get it?\n+* egcs and 2.8.0::              The next generation(s) of g++\n * installation::                How to install, installation problems\n * evolution::                   The Evolution of g++\n * User Problems::               Commonly reported problems and bugs\n@@ -81,6 +81,14 @@ The basics: what is g++?\n * g++ for other platforms::     \n * 1.x vs 2.x versions::         \n \n+The Next Generation(s) of g++\n+\n+* egcs-intro::                  What is egcs?\n+* egcs-whats-new::              What's new in egcs vs 2.7.2?\n+* egcs-run-both::               How can I run both egcs and an FSF release?\n+* egcs-vs-2.8.0::               How will egcs affect 2.8.0?\n+* egcs-robustness::             How robust is egcs-1.0?\n+\n Installation Issues and Problems\n \n * gcc-2 + g++-1::               \n@@ -102,11 +110,8 @@ Installation Issues and Problems\n \n The Evolution of g++\n \n-* version 2.7.x::               \n+* version 2.7.x::               What's changed in 2.7.x from earlier versions\n * libstdc++::                   \n-* new work::                    \n-* egcs::                        \n-* When?::                       \n \n User Problems\n \n@@ -138,7 +143,7 @@ User Problems\n * assignment to streams::       \n @end menu\n \n-@node basics, installation, Top, Top\n+@node basics, egcs and 2.8.0, Top, Top\n @chapter The basics: what is g++?\n \n @cindex Free Software Foundation\n@@ -167,6 +172,11 @@ or GPL (@pxref{legalities}).\n @node latest versions, g++ for Unix, basics, basics\n @section What is the latest version of gcc, g++, and libg++?\n \n+@cindex egcs release\n+\n+The egcs project (on the Web: @file{http://www.cygnus.com/egcs/}) has\n+now released egcs-1.0 as of December 3, 1997.\n+\n @cindex gcc/g++, version date\n The current version of gcc/g++ is 2.7.2.3, released August 20, 1997.\n Although that looks very recent, the only change is a minor patch to\n@@ -436,7 +446,144 @@ install the C++ compiler as well.\n One could argue that we shouldn't even refer to \"g++-2.x.y\" but it's a\n convention.  It means ``the C++ compiler included with gcc-2.x.y.''\n \n-@node installation, evolution, basics, Top\n+@node egcs and 2.8.0, installation, basics, Top\n+@chapter The Next Generation(s) of g++\n+\n+@menu\n+* egcs-intro::                  What is egcs?\n+* egcs-whats-new::              What's new in egcs vs 2.7.2?\n+* egcs-run-both::               How can I run both egcs and an FSF release?\n+* egcs-vs-2.8.0::               How will egcs affect 2.8.0?\n+* egcs-robustness::             How robust is egcs-1.0?\n+@end menu\n+\n+@node egcs-intro, egcs-whats-new, egcs and 2.8.0, egcs and 2.8.0\n+@section What is egcs?\n+\n+egcs is the Experimental GNU compiler system (see\n+@file{http://www.cygnus.com/egcs} on the Web).  It is an effort to\n+accelerate development of new gcc features by providing a more open\n+development model than gcc has traditionally used.\n+\n+The first egcs release, egcs-1.0, came out on December 3, 1997.\n+Questions not addressed here may be answered in the egcs FAQ\n+(@file{http://www.cygnus.com/egcs/faq.html}).\n+\n+@node egcs-whats-new, egcs-run-both, egcs-intro, egcs and 2.8.0\n+@section What new C++ features are in egcs?\n+\n+@strong{Note}: unless indicated otherwise, these features are expected\n+to be present in g++ 2.8.0 when released.\n+\n+@itemize @bullet\n+@item\n+@cindex integrated libstdc++\n+\n+The standard C++ classes are integrated with the egcs release (this is\n+@emph{not} expected to be true of gcc-2.8.0).  libg++ is not being\n+supported, though a version that will work with egcs has been\n+contributed (FIXME: pointer?).  The compiler and library are configured\n+and built in one step.\n+\n+@item\n+@cindex new template implementation\n+A completely new template implementation, much closer to the draft\n+standard.  Limitations in 2.7.2.x concerning inlining template functions\n+will be eliminated.  Static template data members, template class member\n+functions, partial specification, and default template arguments will be\n+supported.  An instantiation method resembling that used in Borland C++\n+(instantiating functions possibly in multiple .o files and using weak\n+symbols to link correctly) is provided, in addition to other\n+options.  The SGI version of STL is shipped verbatim with libstdc++.\n+\n+@item\n+@cindex redundant template elimination\n+@cindex templates: removing redundancy\n+On ELF platforms (Linux/ELF, Solaris, SVR4), if the GNU linker is used,\n+duplicated template functions and virtual function tables are eliminated\n+at link time.\n+\n+@item\n+@cindex repository\n+@cindex -frepo\n+The @code{-frepo} flag is supported in egcs (it will not be in 2.8.0).\n+However, because of the previous item, I don't recommend its use on ELF\n+systems.\n+\n+@item\n+@cindex new exception implementation\n+Exception handling has been re-worked; exceptions will work together\n+with optimization.\n+Actually, there are two separate implementations: one based on setjmp/longjmp\n+and designed to be highly portable, and one designed to be more efficient but\n+requiring more processor-specific support (getting exceptions right has proven\n+to be extremely difficult and has been the chief obstacle to getting a new\n+release out).\n+\n+@item\n+@cindex RTTI\n+RTTI has been re-done to work correctly and is on by default.\n+\n+@item\n+@cindex overloading\n+Overloading has been re-worked to conform to the latest draft of the\n+standard.\n+\n+@item\n+There are many more changes: see @file{http://www.cygnus.com/egcs/c++features.html} for a list.\n+@end itemize\n+\n+Features that are still missing include namespaces and templates as\n+template arguments.\n+\n+@node egcs-run-both, egcs-vs-2.8.0, egcs-whats-new, egcs and 2.8.0\n+@section How can I run both egcs and an FSF release of g++ on the same machine?\n+\n+The recommended approach is to provide a different argument to the\n+@code{--prefix} flag when you configure egcs.  For example, say\n+@code{--prefix=/usr/local/egcs} and then, after installation, you\n+can make symbolic links from @file{/usr/local/egcs/bin} to whereever\n+you want, for example\n+\n+@example\n+ln -s /usr/local/egcs/bin/gcc /usr/local/bin/egcc\n+ln -s /usr/local/egcs/bin/g++ /usr/local/bin/eg++\n+@end example\n+\n+@node egcs-vs-2.8.0, egcs-robustness, egcs-run-both, egcs and 2.8.0\n+@section What about 2.8.0?  How does egcs affect the 2.8.x development?\n+\n+2.8.0 is expected Real Soon Now (I would guess by the end of 1997, but that\n+is only a guess).  The C++ front end should be essentially the same.\n+\n+Bug fixes generated in egcs will be passed to the 2.8.x releases for\n+inclusion; the reverse is also taking place, though a bug fix may\n+appear in one before it does in the other.\n+\n+@node egcs-robustness,  , egcs-vs-2.8.0, egcs and 2.8.0\n+@section How solid is egcs-1.0?\n+\n+While the 'e' stands for 'experimental', egcs has been tested thoroughly\n+and should be of high quality.  There are a few glitches which should be\n+fixed shortly (in a 1.0.1 release, probably in early January):\n+\n+@itemize @bullet\n+@item\n+Deeply nested templates sometimes lead to a very large memory requirement\n+if the @code{-Wreturn-type} option is on (note: this flag is implicitly\n+turned on by @code{-W} or @code{-Wall}.  A workaround is to give the\n+flag @code{-Wno-return-type} if you use @code{-Wall}.\n+\n+@item\n+On Red Hat 5.0, it may be necessary to link all C++ programs with\n+@code{-lpthread} to work around an undefined symbol problem.\n+\n+@item\n+A patch is needed to fix egcs on Solaris/X86.  It is in the egcs FAQ\n+(see above).\n+@end itemize\n+\n+@node installation, evolution, egcs and 2.8.0, Top\n @chapter Installation Issues and Problems\n \n @menu\n@@ -554,6 +701,11 @@ debug format (e.g. Suns running SunOS 4.x), the GNU linker compresses\n the debug symbol table considerably.  The 2.7 version adds some symbol\n table compression for ELF and Solaris targets.\n \n+Users of egcs or 2.8.0 (when released) on ELF systems should definitely\n+use GNU ld (2.8 or later), as it will automatically remove duplicate\n+instantiations of templates, virtual function tables, or ``outlined''\n+copies of inline functions.\n+\n @cindex collect linker, advantages\n Advantages of collect:\n \n@@ -951,10 +1103,7 @@ in the future.\n \n @menu\n * version 2.7.x::               What's changed in 2.7.x from earlier versions\n-* libstdc++::                   The GNU C++ standard library\n-* new work::                    What's been done since 2.7.x\n-* egcs::                        The Experimental GNU Compiler System\n-* When?::                       When can I get all this new stuff?\n+* libstdc++::                   \n @end menu\n \n @node version 2.7.x, libstdc++, evolution, evolution\n@@ -1086,7 +1235,7 @@ though they are not needed).\n \n @end itemize\n \n-@node libstdc++, new work, version 2.7.x, evolution\n+@node libstdc++,  , version 2.7.x, evolution\n @section The GNU Standard C++ Library\n \n The GNU Standard C++ Library (also called the ``GNU ANSI C++ Library''\n@@ -1112,67 +1261,6 @@ The maintainers of libg++ have de-emphasized work on the older libg++ classes\n in favor of enhancing libstdc++ to cover the full language, so while libg++\n will always be available, enhancements to it should not be expected.\n \n-@node new work, egcs, libstdc++, evolution\n-@section What can we expect in future gcc releases?\n-\n-A great deal of work has gone into enhancements to the C++ front end, as well\n-as to other aspects of the compiler.\n-\n-The next major release(s) of gcc/g++ can be expected to have the following\n-features:\n-\n-@itemize @bullet\n-@cindex new template implementation\n-@item\n-A completely new template implementation, much closer to the draft\n-standard.  Limitations in 2.7.2.x concerning inlining template functions\n-will be eliminated.  Static template data members, template class member\n-functions, partial specification, and default template arguments will be\n-supported.  An instantiation method resembling that used in Borland C++\n-(instantiating functions possibly in multiple .o files and using weak\n-symbols to link correctly) will be provided, in addition to other\n-options.  The SGI version of STL will be shipped with libstdc++ and will\n-compile unchanged.\n-\n-@item\n-@cindex new exception implementation\n-Exception handling has been re-worked; exceptions will work together\n-with optimization.\n-Actually, there are two separate implementations: one based on setjmp/longjmp\n-and designed to be highly portable, and one designed to be more efficient but\n-requiring more processor-specific support (getting exceptions right has proven\n-to be extremely difficult and has been the chief obstacle to getting a new\n-release out).\n-\n-@item\n-@cindex RTTI\n-RTTI has been re-done to work correctly and is on by default.\n-\n-@item\n-@cindex overloading\n-Overloading has been re-worked to conform to the latest draft of the\n-standard.\n-@end itemize\n-\n-Features that are still missing include namespaces and templates as\n-template arguments.\n-\n-@node egcs, When?, new work, evolution\n-@section What's this I hear about egcs?\n-\n-The egcs effort is a new effort to merge several threads of gcc\n-development and to provide a faster development process.\n-For more information see @file{http://www.cygnus.com/egcs/}.\n-\n-@node When?,  , egcs, evolution\n-@section OK, when can I get this stuff?\n-\n-The FSF has a policy of never announcing release dates in advance.\n-I'm sure this is frustrating to a lot of people, since it's taken\n-so long, and this frustration was one of the reasons the egcs effort\n-was created.  An egcs release should be expected to occur in the\n-very near future.   [ More on this next time ].\n-\n @node User Problems, legalities, evolution, Top\n @chapter User Problems\n \n@@ -1620,8 +1708,11 @@ another manual @file{libio/iostream.texi} describing the iostreams\n implementation.\n @item\n While there is no libg++-specific document describing the STL\n-implementation, SGI's web site, at @file{http://www.sgi.com/Technology/STL/},\n-is an excellent resource.\n+implementation, SGI's web site, at\n+@file{http://www.sgi.com/Technology/STL/}, is an excellent resource.\n+Note that the SGI version of STL is the one that is included with the\n+egcs and 2.8.0 (when it occurs) releases of g++.\n+\n @end itemize\n \n @node templates, undefined templates, documentation, User Problems"}]}