{"sha": "2dc1070584c5d700ab878fa13a18e2e25f0380c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjMTA3MDU4NGM1ZDcwMGFiODc4ZmExM2ExOGUyZTI1ZjAzODBjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-07-20T14:43:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-07-20T14:43:49Z"}, "message": "Fix ICE on class template argument deduction with inherited ctor.\n\nIn general, when we see a dependent using-declaration we don't know whether\nit names a function or not, so it doesn't get an OVERLOAD unless we see\noverloads of the same name in the current class.  In the case of an\ninherited constructor we could figure that out from the name, but it's\nsimpler to handle USING_DECL properly.\n\n\t* cp-tree.h (ovl_iterator::using_p): A USING_DECL by itself was also\n\tintroduced by a using-declaration.\n\nFrom-SVN: r273623", "tree": {"sha": "de3478d6add3f50cb727ad27e7ed04056bee0786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de3478d6add3f50cb727ad27e7ed04056bee0786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dc1070584c5d700ab878fa13a18e2e25f0380c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc1070584c5d700ab878fa13a18e2e25f0380c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc1070584c5d700ab878fa13a18e2e25f0380c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc1070584c5d700ab878fa13a18e2e25f0380c8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ab1f3502038323f6f5cd8c16c0ac1b1416e3545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab1f3502038323f6f5cd8c16c0ac1b1416e3545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab1f3502038323f6f5cd8c16c0ac1b1416e3545"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "d645cdef147be15f212ddbc2ee0a514d4b3edb13", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2dc1070584c5d700ab878fa13a18e2e25f0380c8", "patch": "@@ -1,3 +1,8 @@\n+2019-07-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (ovl_iterator::using_p): A USING_DECL by itself was also\n+\tintroduced by a using-declaration.\n+\n 2019-07-20  Jason Merrill  <jason@redhat.com>\n \n \tReduce memory consumption for push/pop_access_scope."}, {"sha": "688924cdd12d1465f417530aec2a7956914d1d3b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2dc1070584c5d700ab878fa13a18e2e25f0380c8", "patch": "@@ -774,7 +774,8 @@ class ovl_iterator\n   /* Whether this overload was introduced by a using decl.  */\n   bool using_p () const\n   {\n-    return TREE_CODE (ovl) == OVERLOAD && OVL_USING_P (ovl);\n+    return (TREE_CODE (ovl) == USING_DECL\n+\t    || (TREE_CODE (ovl) == OVERLOAD && OVL_USING_P (ovl)));\n   }\n   bool hidden_p () const\n   {"}, {"sha": "4624794c4b72c87c6fcf2464083e215669c7920c", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction67.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc1070584c5d700ab878fa13a18e2e25f0380c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction67.C?ref=2dc1070584c5d700ab878fa13a18e2e25f0380c8", "patch": "@@ -0,0 +1,21 @@\n+// Deduction from inherited constructors isn't supported yet, but we shouldn't\n+// crash.  It may well be supported in C++23.\n+\n+//{ dg-do compile { target c++17 } }\n+\n+template <class T> struct A\n+{\n+  A(T);\n+};\n+\n+template <class T> struct B: A<T>\n+{\n+  using A<T>::A;\n+};\n+\n+int main()\n+{\n+  B b = 42;\t\t\t// { dg-line init }\n+  // { dg-prune-output \"no matching function\" }\n+  // { dg-error \"class template argument deduction\" \"\" { target *-*-* } init }\n+}"}]}