{"sha": "94e416d23b8cb2824d395230f23fac300ee6d496", "node_id": "C_kwDOANBUbNoAKDk0ZTQxNmQyM2I4Y2IyODI0ZDM5NTIzMGYyM2ZhYzMwMGVlNmQ0OTY", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-04-27T07:52:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:16Z"}, "message": "[Ada] Issue better error message for out-of-order keywords in record def\n\nVarious cases of out-of-order keywords in the definition of a record\nwere already detected. This adds a similar detection after NULL and\nRECORD keywords.\n\ngcc/ada/\n\n\t* par-ch3.adb (P_Known_Discriminant_Part_Opt): Reword error\n\tmessage to benefit from existing codefix.\n\t(P_Record_Definition): Detect out-of-order keywords in record\n\tdefinition and issue appropriate messages. Other cases are\n\talready caught at appropriate places.", "tree": {"sha": "046aa4f552274cafbee7da98167ac98b6b0fe9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/046aa4f552274cafbee7da98167ac98b6b0fe9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94e416d23b8cb2824d395230f23fac300ee6d496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e416d23b8cb2824d395230f23fac300ee6d496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e416d23b8cb2824d395230f23fac300ee6d496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e416d23b8cb2824d395230f23fac300ee6d496/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73514ab714d651795c10e0790217a67eb6b41b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73514ab714d651795c10e0790217a67eb6b41b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73514ab714d651795c10e0790217a67eb6b41b48"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "557a9cb77630f9e3e56efe02739aa58f32fbd037", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e416d23b8cb2824d395230f23fac300ee6d496/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e416d23b8cb2824d395230f23fac300ee6d496/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=94e416d23b8cb2824d395230f23fac300ee6d496", "patch": "@@ -3180,7 +3180,8 @@ package body Ch3 is\n                   Scan;\n \n                   if Token = Tok_Access then\n-                     Error_Msg_SC (\"CONSTANT must appear after ACCESS\");\n+                     Error_Msg_SC -- CODEFIX\n+                       (\"ACCESS must come before CONSTANT\");\n                      Set_Discriminant_Type\n                        (Specification_Node,\n                         P_Access_Definition (Not_Null_Present));\n@@ -3462,8 +3463,42 @@ package body Ch3 is\n    --  Error recovery: can raise Error_Resync\n \n    function P_Record_Definition return Node_Id is\n+\n+      procedure Catch_Out_Of_Order_Keywords (Keyword : String);\n+      --  Catch ouf-of-order keywords in a record definition\n+\n+      ---------------------------------\n+      -- Catch_Out_Of_Order_Keywords --\n+      ---------------------------------\n+\n+      procedure Catch_Out_Of_Order_Keywords (Keyword : String) is\n+      begin\n+         loop\n+            if Token = Tok_Abstract then\n+               Error_Msg_SC -- CODEFIX\n+                 (\"ABSTRACT must come before \" & Keyword);\n+               Scan; -- past ABSTRACT\n+\n+            elsif Token = Tok_Tagged then\n+               Error_Msg_SC -- CODEFIX\n+                 (\"TAGGED must come before \" & Keyword);\n+               Scan; -- past TAGGED\n+\n+            elsif Token = Tok_Limited then\n+               Error_Msg_SC -- CODEFIX\n+                 (\"LIMITED must come before \" & Keyword);\n+               Scan; -- past LIMITED\n+\n+            else\n+               exit;\n+            end if;\n+         end loop;\n+      end Catch_Out_Of_Order_Keywords;\n+\n       Rec_Node : Node_Id;\n \n+   --  Start of processing for P_Record_Definition\n+\n    begin\n       Inside_Record_Definition := True;\n       Rec_Node := New_Node (N_Record_Definition, Token_Ptr);\n@@ -3472,8 +3507,11 @@ package body Ch3 is\n \n       if Token = Tok_Null then\n          Scan; -- past NULL\n+\n+         Catch_Out_Of_Order_Keywords (\"NULL\");\n          T_Record;\n          Set_Null_Present (Rec_Node, True);\n+         Catch_Out_Of_Order_Keywords (\"RECORD\");\n \n       --  Catch incomplete declaration to prevent cascaded errors, see\n       --  ACATS B393002 for an example.\n@@ -3501,6 +3539,7 @@ package body Ch3 is\n          Scopes (Scope.Last).Junk := (Token /= Tok_Record);\n \n          T_Record;\n+         Catch_Out_Of_Order_Keywords (\"RECORD\");\n \n          Set_Component_List (Rec_Node, P_Component_List);\n "}]}