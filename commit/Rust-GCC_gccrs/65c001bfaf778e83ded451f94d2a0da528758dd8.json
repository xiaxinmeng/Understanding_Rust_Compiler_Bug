{"sha": "65c001bfaf778e83ded451f94d2a0da528758dd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVjMDAxYmZhZjc3OGU4M2RlZDQ1MWY5NGQyYTBkYTUyODc1OGRkOA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-03-14T17:11:14Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-03-28T12:47:35Z"}, "message": "d: Don't generate per-module wrapper for calling DSO constructor/destructor.\n\nThe static constructor/destructor list only ever has one function to\ncall in it, so mark the gdc.dso_ctor and gdc.dso_dtor functions as\nstatic ctor/dtor directly instead.\n\ngcc/d/ChangeLog:\n\n\t* config-lang.in (gtfiles): Remove modules.cc.\n\t* modules.cc (struct module_info): Remove GTY marker.\n\t(static_ctor_list): Remove variable.\n\t(static_dtor_list): Remove variable.\n\t(register_moduleinfo): Directly set DECL_STATIC_CONSTRUCTOR on\n\tdso_ctor, and DECL_STATIC_DESTRUCTOR on dso_dtor.\n\t(d_finish_compilation): Remove static ctor/dtor handling.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.dg/gdc270a.d: Removed.\n\t* gdc.dg/gdc270b.d: Removed.", "tree": {"sha": "04d037e0ee151f92d1f9c47e2405ca8fe2fac994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04d037e0ee151f92d1f9c47e2405ca8fe2fac994"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65c001bfaf778e83ded451f94d2a0da528758dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c001bfaf778e83ded451f94d2a0da528758dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65c001bfaf778e83ded451f94d2a0da528758dd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c001bfaf778e83ded451f94d2a0da528758dd8/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21001c793e97d88013d05226a8ea93a149726b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21001c793e97d88013d05226a8ea93a149726b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21001c793e97d88013d05226a8ea93a149726b1"}], "stats": {"total": 56, "additions": 6, "deletions": 50}, "files": [{"sha": "0568b8da1de73b64d66e2dd7d6499c3f4c93e1a0", "filename": "gcc/d/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c001bfaf778e83ded451f94d2a0da528758dd8/gcc%2Fd%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c001bfaf778e83ded451f94d2a0da528758dd8/gcc%2Fd%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fconfig-lang.in?ref=65c001bfaf778e83ded451f94d2a0da528758dd8", "patch": "@@ -45,7 +45,7 @@ case \"${noconfigdirs}\" in\n     ;;\n esac\n \n-gtfiles=\"\\$(srcdir)/d/d-tree.h \\$(srcdir)/d/d-builtins.cc \\$(srcdir)/d/d-lang.cc \\$(srcdir)/d/modules.cc \\$(srcdir)/d/typeinfo.cc\"\n+gtfiles=\"\\$(srcdir)/d/d-tree.h \\$(srcdir)/d/d-builtins.cc \\$(srcdir)/d/d-lang.cc \\$(srcdir)/d/typeinfo.cc\"\n \n # Do not build by default.\n build_by_default=\"no\""}, {"sha": "af69815deb956bf959103098de57f04684b58635", "filename": "gcc/d/modules.cc", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c001bfaf778e83ded451f94d2a0da528758dd8/gcc%2Fd%2Fmodules.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c001bfaf778e83ded451f94d2a0da528758dd8/gcc%2Fd%2Fmodules.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fmodules.cc?ref=65c001bfaf778e83ded451f94d2a0da528758dd8", "patch": "@@ -75,7 +75,7 @@ static tree stop_minfo_node;\n /* Record information about module initialization, termination,\n    unit testing, and thread local storage in the compilation.  */\n \n-struct GTY(()) module_info\n+struct module_info\n {\n   vec <tree, va_gc> *ctors;\n   vec <tree, va_gc> *dtors;\n@@ -121,11 +121,6 @@ static module_info *current_testing_module;\n \n static Module *current_module_decl;\n \n-/* Static constructors and destructors (not D `static this').  */\n-\n-static GTY(()) vec <tree, va_gc> *static_ctor_list;\n-static GTY(()) vec <tree, va_gc> *static_dtor_list;\n-\n /* Returns an internal function identified by IDENT.  This is used\n    by both module initialization and dso handlers.  */\n \n@@ -460,10 +455,12 @@ register_moduleinfo (Module *decl, tree minfo)\n \n   /* Declare dso_ctor() and dso_dtor().  */\n   tree dso_ctor = build_dso_cdtor_fn (true);\n-  vec_safe_push (static_ctor_list, dso_ctor);\n+  DECL_STATIC_CONSTRUCTOR (dso_ctor) = 1;\n+  decl_init_priority_insert (dso_ctor, DEFAULT_INIT_PRIORITY);\n \n   tree dso_dtor = build_dso_cdtor_fn (false);\n-  vec_safe_push (static_dtor_list, dso_dtor);\n+  DECL_STATIC_DESTRUCTOR (dso_dtor) = 1;\n+  decl_fini_priority_insert (dso_dtor, DEFAULT_INIT_PRIORITY);\n \n   first_module = false;\n }\n@@ -908,27 +905,4 @@ d_finish_compilation (tree *vec, int len)\n       tree decl = vec[i];\n       wrapup_global_declarations (&decl, 1);\n     }\n-\n-  /* If the target does not directly support static constructors,\n-     static_ctor_list contains a list of all static constructors defined\n-     so far.  This routine will create a function to call all of those\n-     and is picked up by collect2.  */\n-  if (static_ctor_list)\n-    {\n-      tree decl = build_funcs_gates_fn (get_file_function_name (\"I\"),\n-\t\t\t\t\tstatic_ctor_list, NULL);\n-      DECL_STATIC_CONSTRUCTOR (decl) = 1;\n-      decl_init_priority_insert (decl, DEFAULT_INIT_PRIORITY);\n-    }\n-\n-  if (static_dtor_list)\n-    {\n-      tree decl = build_funcs_gates_fn (get_file_function_name (\"D\"),\n-\t\t\t\t\tstatic_dtor_list, NULL);\n-      DECL_STATIC_DESTRUCTOR (decl) = 1;\n-      decl_fini_priority_insert (decl, DEFAULT_INIT_PRIORITY);\n-    }\n }\n-\n-\n-#include \"gt-d-modules.h\""}, {"sha": "4df6f02f75332dd17c059446703b7095262244f8", "filename": "gcc/testsuite/gdc.dg/gdc270a.d", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21001c793e97d88013d05226a8ea93a149726b1/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21001c793e97d88013d05226a8ea93a149726b1/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d?ref=d21001c793e97d88013d05226a8ea93a149726b1", "patch": "@@ -1,11 +0,0 @@\n-// https://bugzilla.gdcproject.org/show_bug.cgi?id=270\n-// { dg-do compile }\n-\n-module gdc270;\n-\n-void foo()\n-{\n-}\n-\n-/* { dg-final { scan-assembler \"_GLOBAL__D_6gdc270\" } } */\n-/* { dg-final { scan-assembler \"_GLOBAL__I_6gdc270\" } } */"}, {"sha": "5a544c58693fca5d817f98527c7ef54f51b5d3a9", "filename": "gcc/testsuite/gdc.dg/gdc270b.d", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21001c793e97d88013d05226a8ea93a149726b1/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21001c793e97d88013d05226a8ea93a149726b1/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d?ref=d21001c793e97d88013d05226a8ea93a149726b1", "patch": "@@ -1,7 +0,0 @@\n-// https://bugzilla.gdcproject.org/show_bug.cgi?id=270\n-// { dg-do compile }\n-\n-module gdc270;\n-\n-/* { dg-final { scan-assembler \"_GLOBAL__D_6gdc270\" } } */\n-/* { dg-final { scan-assembler \"_GLOBAL__I_6gdc270\" } } */"}]}