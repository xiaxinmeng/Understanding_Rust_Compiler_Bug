{"sha": "ab940869ea83c4734ab516d5b39237828db72585", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5NDA4NjllYTgzYzQ3MzRhYjUxNmQ1YjM5MjM3ODI4ZGI3MjU4NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-10-21T08:34:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-10-21T08:34:06Z"}, "message": "re PR libstdc++/24450 (Exception safety problem in messages/__timepunct)\n\n2005-10-21  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/24450\n\t* config/locale/generic/time_members.h (__timepunct<>::\n\t__timepunct(__c_locale, const char*, size_t)): Avoid leaking\n\tmemory if new throws inside _M_initialize_timepunct.\n\t* config/locale/gnu/time_members.h (__timepunct<>::\n\t__timepunct(__c_locale, const char*, size_t)): Likewise.\n\t* config/locale/gnu/message_members.h (messages<>::\n\tmessages(__c_locale, const char*, size_t)): Rearrange to\n\tavoid memory leaks.\n\nFrom-SVN: r105729", "tree": {"sha": "b65c26f6b3e557d747179c8034fa30bbd1d44082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b65c26f6b3e557d747179c8034fa30bbd1d44082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab940869ea83c4734ab516d5b39237828db72585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab940869ea83c4734ab516d5b39237828db72585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab940869ea83c4734ab516d5b39237828db72585", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab940869ea83c4734ab516d5b39237828db72585/comments", "author": null, "committer": null, "parents": [{"sha": "972f427b1b75d4c033508680295ef4bd252e63c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972f427b1b75d4c033508680295ef4bd252e63c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972f427b1b75d4c033508680295ef4bd252e63c4"}], "stats": {"total": 65, "additions": 48, "deletions": 17}, "files": [{"sha": "0bc4a95e8b4377134acace3fda5b788e1adf3477", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab940869ea83c4734ab516d5b39237828db72585", "patch": "@@ -1,3 +1,15 @@\n+2005-10-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/24450\n+\t* config/locale/generic/time_members.h (__timepunct<>::\n+\t__timepunct(__c_locale, const char*, size_t)): Avoid leaking\n+\tmemory if new throws inside _M_initialize_timepunct.\n+\t* config/locale/gnu/time_members.h (__timepunct<>::\n+\t__timepunct(__c_locale, const char*, size_t)): Likewise.\n+\t* config/locale/gnu/message_members.h (messages<>::\n+\tmessages(__c_locale, const char*, size_t)): Rearrange to\n+\tavoid memory leaks.\n+\n 2005-10-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/sso_string_base.h (_M_swap): Rewrite."}, {"sha": "b3112dc4e37d5d9a958f89d812e322ad87f56848", "filename": "libstdc++-v3/config/locale/generic/time_members.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h?ref=ab940869ea83c4734ab516d5b39237828db72585", "patch": "@@ -1,6 +1,6 @@\n // std::time_get, std::time_put implementation, generic version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,10 +55,18 @@\n \t\t\t\t     size_t __refs) \n     : facet(__refs), _M_data(NULL)\n     { \n-      char* __tmp = new char[std::strlen(__s) + 1];\n-      std::strcpy(__tmp, __s);\n+      const size_t __len = std::strlen(__s) + 1;\n+      char* __tmp = new char[__len];\n+      std::memcpy(__tmp, __s, __len);\n       _M_name_timepunct = __tmp;\n-      _M_initialize_timepunct(__cloc); \n+\n+      try\n+\t{ _M_initialize_timepunct(__cloc); }\n+      catch(...)\n+\t{ \n+\t  delete [] _M_name_timepunct;\n+\t  __throw_exception_again;\n+\t}\n     }\n \n   template<typename _CharT>"}, {"sha": "5fb7a999da016af95e36334c4a74c3cac60dab25", "filename": "libstdc++-v3/config/locale/gnu/messages_members.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h?ref=ab940869ea83c4734ab516d5b39237828db72585", "patch": "@@ -1,6 +1,6 @@\n // std::messages implementation details, GNU version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,18 +37,21 @@\n   template<typename _CharT>\n      messages<_CharT>::messages(size_t __refs)\n      : facet(__refs), _M_c_locale_messages(_S_get_c_locale()), \n-     _M_name_messages(_S_get_c_name())\n+       _M_name_messages(_S_get_c_name())\n      { }\n \n   template<typename _CharT>\n      messages<_CharT>::messages(__c_locale __cloc, const char* __s, \n \t\t\t\tsize_t __refs) \n-     : facet(__refs), _M_c_locale_messages(_S_clone_c_locale(__cloc)),\n-     _M_name_messages(__s)\n+     : facet(__refs), _M_c_locale_messages(NULL), _M_name_messages(NULL)\n      {\n-       char* __tmp = new char[std::strlen(__s) + 1];\n-       std::strcpy(__tmp, __s);\n+       const size_t __len = std::strlen(__s) + 1;\n+       char* __tmp = new char[__len];\n+       std::memcpy(__tmp, __s, __len);\n        _M_name_messages = __tmp;\n+\n+       // Last to avoid leaking memory if new throws.\n+       _M_c_locale_messages = _S_clone_c_locale(__cloc);\n      }\n \n   template<typename _CharT>"}, {"sha": "7014630731e4757d1a38dc374aac4a76615fd641", "filename": "libstdc++-v3/config/locale/gnu/time_members.h", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab940869ea83c4734ab516d5b39237828db72585/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h?ref=ab940869ea83c4734ab516d5b39237828db72585", "patch": "@@ -1,6 +1,6 @@\n // std::time_get, std::time_put implementation, GNU version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,25 +37,33 @@\n   template<typename _CharT>\n     __timepunct<_CharT>::__timepunct(size_t __refs) \n     : facet(__refs), _M_data(NULL), _M_c_locale_timepunct(NULL), \n-    _M_name_timepunct(_S_get_c_name())\n+      _M_name_timepunct(_S_get_c_name())\n     { _M_initialize_timepunct(); }\n \n   template<typename _CharT>\n     __timepunct<_CharT>::__timepunct(__cache_type* __cache, size_t __refs) \n     : facet(__refs), _M_data(__cache), _M_c_locale_timepunct(NULL), \n-    _M_name_timepunct(_S_get_c_name())\n+      _M_name_timepunct(_S_get_c_name())\n     { _M_initialize_timepunct(); }\n \n   template<typename _CharT>\n     __timepunct<_CharT>::__timepunct(__c_locale __cloc, const char* __s,\n \t\t\t\t     size_t __refs) \n     : facet(__refs), _M_data(NULL), _M_c_locale_timepunct(NULL), \n-    _M_name_timepunct(__s)\n+      _M_name_timepunct(NULL)\n     { \n-      char* __tmp = new char[std::strlen(__s) + 1];\n-      std::strcpy(__tmp, __s);\n+      const size_t __len = std::strlen(__s) + 1;\n+      char* __tmp = new char[__len];\n+      std::memcpy(__tmp, __s, __len);\n       _M_name_timepunct = __tmp;\n-      _M_initialize_timepunct(__cloc); \n+\n+      try\n+\t{ _M_initialize_timepunct(__cloc); }\n+      catch(...)\n+\t{\n+\t  delete [] _M_name_timepunct;\n+\t  __throw_exception_again;\n+\t}\n     }\n \n   template<typename _CharT>"}]}