{"sha": "8a441bd5d7cba9c956b687d2afea47b1b7be1996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE0NDFiZDVkN2NiYTljOTU2YjY4N2QyYWZlYTQ3YjFiN2JlMTk5Ng==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-04-20T21:14:32Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-04-20T21:14:32Z"}, "message": "re PR libstdc++/35954 (cannot build from read-only source tree)\n\nlibstdc++-v3/\n\tPR libstdc++/35954\n\t* include/Makefile.am (pch*_output): Do not touch pch*_output_anchor.\n\tCall 'mkdir -p' unconditionally, but ignore its return value.\n\t* include/Makefile.in: Regenerate.\n\nFrom-SVN: r134494", "tree": {"sha": "0674a6a8316fb1c914bc43cbc4f52788b6c0b261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0674a6a8316fb1c914bc43cbc4f52788b6c0b261"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a441bd5d7cba9c956b687d2afea47b1b7be1996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a441bd5d7cba9c956b687d2afea47b1b7be1996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a441bd5d7cba9c956b687d2afea47b1b7be1996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a441bd5d7cba9c956b687d2afea47b1b7be1996/comments", "author": null, "committer": null, "parents": [{"sha": "f449022dca52d61f2f57cb40e6fc4b9b69049314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f449022dca52d61f2f57cb40e6fc4b9b69049314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f449022dca52d61f2f57cb40e6fc4b9b69049314"}], "stats": {"total": 45, "additions": 13, "deletions": 32}, "files": [{"sha": "f4b180e25f2f1e7b785866603c7e6e514ecad54a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8a441bd5d7cba9c956b687d2afea47b1b7be1996", "patch": "@@ -1,5 +1,10 @@\n 2008-04-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n+\tPR libstdc++/35954\n+\t* include/Makefile.am (pch*_output): Do not touch pch*_output_anchor.\n+\tCall 'mkdir -p' unconditionally, but ignore its return value.\n+\t* include/Makefile.in: Regenerate.\n+\n \t* include/Makefile.am: Fix most stamp rules to regenerate\n \tthe links for all sources newer than the stamp file.\n \t* include/Makefile.in: Regenerate."}, {"sha": "e2b7412f1cd869c2eeb4f59bd11f432bde8cb2a3", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=8a441bd5d7cba9c956b687d2afea47b1b7be1996", "patch": "@@ -1080,34 +1080,22 @@ ${host_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcxx_thread_h} \\\n \n # Build two precompiled C++ includes, stdc++.h.gch/*.gch\n ${pch1a_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch1_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O0 -g ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n \n ${pch1b_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch1_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n \n # Build a precompiled TR1 include, stdtr1c++.h.gch/O2.gch\n ${pch2_output}: ${pch2_source} ${pch1_output}\n-\tif [ ! -d \"${pch2_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch2_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch2_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch2_source} -o $@\n-\ttouch ${pch2_output_anchor}\n \n # Build a precompiled extension include, extc++.h.gch/O2.gch\n ${pch3_output}: ${pch3_source} ${pch2_output}\n-\tif [ ! -d \"${pch3_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch3_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch3_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch3_source} -o $@\n-\ttouch ${pch3_output_anchor}\n \n # For robustness sake (in light of junk files or in-source\n # configuration), copy from the build or source tree to the install"}, {"sha": "092ad96e4fbd0488417ba841e6c76ebca953d631", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a441bd5d7cba9c956b687d2afea47b1b7be1996/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=8a441bd5d7cba9c956b687d2afea47b1b7be1996", "patch": "@@ -1474,34 +1474,22 @@ ${host_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcxx_thread_h} \\\n \n # Build two precompiled C++ includes, stdc++.h.gch/*.gch\n ${pch1a_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch1_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O0 -g ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n \n ${pch1b_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch1_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n \n # Build a precompiled TR1 include, stdtr1c++.h.gch/O2.gch\n ${pch2_output}: ${pch2_source} ${pch1_output}\n-\tif [ ! -d \"${pch2_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch2_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch2_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch2_source} -o $@\n-\ttouch ${pch2_output_anchor}\n \n # Build a precompiled extension include, extc++.h.gch/O2.gch\n ${pch3_output}: ${pch3_source} ${pch2_output}\n-\tif [ ! -d \"${pch3_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch3_output_builddir}; \\\n-\tfi; \\\n+\t-mkdir -p ${pch3_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch3_source} -o $@\n-\ttouch ${pch3_output_anchor}\n \n # For robustness sake (in light of junk files or in-source\n # configuration), copy from the build or source tree to the install"}]}