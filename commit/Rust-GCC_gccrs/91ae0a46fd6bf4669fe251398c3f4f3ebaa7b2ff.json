{"sha": "91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhZTBhNDZmZDZiZjQ2NjlmZTI1MTM5OGMzZjRmM2ViYWE3YjJmZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-30T16:32:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-30T16:32:38Z"}, "message": "Fortran/OpenMP] Don't create \"alloc:\" for 'target exit data'\n\n        gcc/\n        * gimplify.c (gimplify_scan_omp_clauses): Remove FE-generated\n        GOMP_MAP_TO_PSET and GOMP_MAP_POINTER mapping for 'target update'\n        and 'target exit data'.\n\n        libgomp/\n        * testsuite/libgomp.fortran/target9.f90: New.\n\nFrom-SVN: r277631", "tree": {"sha": "2446475dfa38f4d550198d2fe4b2ee54539f5128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2446475dfa38f4d550198d2fe4b2ee54539f5128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d03eca30d746a097635d8dedc9e059c6b2f80907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03eca30d746a097635d8dedc9e059c6b2f80907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d03eca30d746a097635d8dedc9e059c6b2f80907"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "d1110fced48f99de1d024c6200fa25f6ac4ac858", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "patch": "@@ -1,3 +1,9 @@\n+2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_scan_omp_clauses): Remove FE-generated\n+\tGOMP_MAP_TO_PSET and GOMP_MAP_POINTER mapping for 'target update'\n+\tand 'target exit data'.\n+\n 2019-10-30  Martin Jambor  <mjambor@suse.cz>\n \n \tipa/92278"}, {"sha": "12ed3f8eb2129f2a68a054347d23e6f3eae2197a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "patch": "@@ -8590,6 +8590,17 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \t    default:\n \t      break;\n \t    }\n+\t  /* For Fortran, not only the pointer to the data is mapped but also\n+\t     the address of the pointer, the array descriptor etc.; for\n+\t     'exit data' - and in particular for 'delete:' - having an 'alloc:'\n+\t     does not make sense.  Likewise, for 'update' only transferring the\n+\t     data itself is needed as the rest has been handled in previous\n+\t     directives.  */\n+\t  if ((code == OMP_TARGET_EXIT_DATA || code == OMP_TARGET_UPDATE)\n+\t      && (OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_POINTER\n+\t\t  || OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_TO_PSET))\n+\t    remove = true;\n+\n \t  if (remove)\n \t    break;\n \t  if (DECL_P (decl) && outer_ctx && (region_type & ORT_ACC))"}, {"sha": "03ce2fb4f20c80582941a051ec6e058c6cf964d1", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "patch": "@@ -1,3 +1,7 @@\n+2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/target9.f90: New.\n+\n 2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/aligned1.f03: Replace 'STOP' by 'stop'."}, {"sha": "91d60a33307eb960d7687dbf11e2df7b763fdcb6", "filename": "libgomp/testsuite/libgomp.fortran/target9.f90", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget9.f90?ref=91ae0a46fd6bf4669fe251398c3f4f3ebaa7b2ff", "patch": "@@ -0,0 +1,123 @@\n+! { dg-require-effective-target offload_device_nonshared_as } */\n+\n+module target_test\n+  implicit none (type, external)\n+  integer, parameter :: N = 40\n+  integer :: sum\n+  integer :: var1 = 1\n+  integer :: var2 = 2\n+\n+  !$omp declare target to(D)\n+  integer :: D(N) = 0\n+contains\n+  subroutine enter_data (X)\n+    integer :: X(:)\n+    !$omp target enter data map(to: var1, var2, X) map(alloc: sum)\n+  end subroutine enter_data\n+\n+  subroutine exit_data_0 (D)\n+    integer :: D(N)\n+    !$omp target exit data map(delete: D)\n+  end subroutine exit_data_0\n+\n+  subroutine exit_data_1 ()\n+    !$omp target exit data map(from: var1)\n+  end subroutine exit_data_1\n+\n+  subroutine exit_data_2 (X)\n+    integer :: X(N)\n+    !$omp target exit data map(from: var2) map(release: X, sum)\n+  end subroutine exit_data_2\n+\n+  subroutine exit_data_3 (p, idx)\n+    integer :: p(:)\n+    integer, value :: idx\n+    !$omp target exit data map(from: p(idx))\n+  end subroutine exit_data_3\n+\n+  subroutine test_nested ()\n+    integer :: X, Y, Z\n+    X = 0\n+    Y = 0\n+    Z = 0\n+\n+    !$omp target data map(from: X, Y, Z)\n+      !$omp target data map(from: X, Y, Z)\n+        !$omp target map(from: X, Y, Z)\n+          X = 1337\n+          Y = 1337\n+          Z = 1337\n+        !$omp end target\n+        if (X /= 0) stop 11\n+        if (Y /= 0) stop 12\n+        if (Z /= 0) stop 13\n+\n+        !$omp target exit data map(from: X) map(release: Y)\n+        if (X /= 0) stop 14\n+        if (Y /= 0) stop 15\n+\n+        !$omp target exit data map(release: Y) map(delete: Z)\n+        if (Y /= 0) stop 16\n+        if (Z /= 0) stop 17\n+      !$omp end target data\n+      if (X /= 1337) stop 18\n+      if (Y /= 0) stop 19\n+      if (Z /= 0) stop 20\n+\n+      !$omp target map(from: X)\n+        X = 2448\n+      !$omp end target\n+      if (X /= 2448) stop 21\n+      if (Y /= 0) stop 22\n+      if (Z /= 0) stop 23\n+\n+      X = 4896\n+    !$omp end target data\n+    if (X /= 4896) stop 24\n+    if (Y /= 0) stop 25\n+    if (Z /= 0) stop 26\n+  end subroutine test_nested\n+end module target_test\n+\n+program main\n+  use target_test\n+  implicit none (type, external)\n+\n+  integer, allocatable :: X(:)\n+  integer, pointer, contiguous :: Y(:)\n+\n+\n+  allocate(X(N), Y(N))\n+  X(10) = 10\n+  Y(20) = 20\n+  call enter_data (X)\n+\n+  call exit_data_0 (D)  ! This should have no effect on D.\n+\n+  !$omp target map(alloc: var1, var2, X) map(to: Y) map(always, from: sum)\n+    var1 = var1 + X(10)\n+    var2 = var2 + Y(20)\n+    sum = var1 + var2\n+    D(sum) = D(sum) + 1\n+  !$omp end target\n+\n+  if (var1 /= 1) stop 1\n+  if (var2 /= 2) stop 2\n+  if (sum /= 33) stop 3\n+\n+  call exit_data_1 ()\n+  if (var1 /= 11) stop 4\n+  if (var2 /= 2) stop 5\n+\n+  ! Increase refcount of already mapped X(1:N).\n+  !$omp target enter data map(alloc: X(16:17))\n+\n+  call exit_data_2 (X)\n+  if (var2 /= 22) stop 6\n+\n+  call exit_data_3 (X, 5) ! Unmap X(1:N).\n+\n+  deallocate (X, Y)\n+\n+  call test_nested ()\n+end program main"}]}