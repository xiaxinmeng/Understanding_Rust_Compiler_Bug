{"sha": "82e8e335f917b9ce40801838c06f7945cf88da43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlOGUzMzVmOTE3YjljZTQwODAxODM4YzA2Zjc5NDVjZjg4ZGE0Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-23T12:41:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-23T12:41:49Z"}, "message": "re PR tree-optimization/65930 (Reduction with sign-change not handled)\n\n2019-10-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65930\n\t* tree-vect-loop.c (check_reduction_path): Allow conversions\n\tthat only change the sign.\n\t(vectorizable_reduction): Relax latch def stmts we handle further.\n\n\t* gcc.dg/vect/vect-reduc-2char-big-array.c: Adjust.\n\t* gcc.dg/vect/vect-reduc-2char.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-2short.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-s8b.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-pattern-2c.c: Likewise.\n\nFrom-SVN: r277322", "tree": {"sha": "eed4184c1fa462a64d4a722463477af5dab26a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed4184c1fa462a64d4a722463477af5dab26a10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82e8e335f917b9ce40801838c06f7945cf88da43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e8e335f917b9ce40801838c06f7945cf88da43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e8e335f917b9ce40801838c06f7945cf88da43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e8e335f917b9ce40801838c06f7945cf88da43/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9eabacb0483ac1f730112d551551c258365f02e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9eabacb0483ac1f730112d551551c258365f02e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9eabacb0483ac1f730112d551551c258365f02e"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "508207dfc51a35b0e9645ee2957839e76421207e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -1,3 +1,10 @@\n+2019-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65930\n+\t* tree-vect-loop.c (check_reduction_path): Allow conversions\n+\tthat only change the sign.\n+\t(vectorizable_reduction): Relax latch def stmts we handle further.\n+\n 2019-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/90231"}, {"sha": "a9c44136a2c75efc42818dc01d13b1d3728ba815", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -1,3 +1,12 @@\n+2019-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65930\n+\t* gcc.dg/vect/vect-reduc-2char-big-array.c: Adjust.\n+\t* gcc.dg/vect/vect-reduc-2char.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-2short.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-s8b.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-pattern-2c.c: Likewise.\n+\n 2019-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/cpp2a/constexpr-dtor3.C: Expect in 'constexpr' expansion of"}, {"sha": "c40f8625b8485129439a08b3842fd2254cdc5990", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-2char-big-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char-big-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char-big-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char-big-array.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -62,4 +62,4 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */"}, {"sha": "dd3045502f1831a7775cc655934e98f4a048ea0e", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-2char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2char.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -46,4 +46,4 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */"}, {"sha": "1a2d8d04f4e8618be153ef5aa2a6605d2217bbaf", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-2short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2short.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -45,4 +45,4 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */"}, {"sha": "c0ee5dc01c576065d1b2d06978444b7b39808fbd", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s8b.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -12,12 +12,6 @@ signed char Y[N] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__)));\n \n /* char->short->short dot product.\n    The dot-product pattern should be detected.\n-   The reduction is currently not vectorized becaus of the signed->unsigned->signed\n-   casts, since this patch:\n-\n-     2005-12-26  Kazu Hirata  <kazu@codesourcery.com>\n-                                                                                                \n-        PR tree-optimization/25125\n \n    When the dot-product is detected, the loop should be vectorized on vect_sdot_qi \n    targets (targets that support dot-product of signed char).  \n@@ -60,5 +54,5 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vect_recog_dot_prod_pattern: detected\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"vect_recog_widen_mult_pattern: detected\" 1 \"vect\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n "}, {"sha": "71df5741e16b44fe7e136cfd465a793c7dad0c20", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-pattern-2c.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-pattern-2c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-pattern-2c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-pattern-2c.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -21,6 +21,8 @@ foo ()\n      2005-12-26  Kazu Hirata  <kazu@codesourcery.com>\n                                                                                 \n         PR tree-optimization/25125\n+\n+     but we still handle the reduction.\n    */\n \n   for (i = 0; i < N; i++)\n@@ -43,5 +45,4 @@ main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vect_recog_widen_sum_pattern: detected\" 1 \"vect\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" { target { ! vect_widen_sum_qi_to_hi } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "b66f211c350dee8153c0e29044baef8b35aac2b6", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e8e335f917b9ce40801838c06f7945cf88da43/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=82e8e335f917b9ce40801838c06f7945cf88da43", "patch": "@@ -2695,7 +2695,11 @@ check_reduction_path (dump_user_location_t loc, loop_p loop, gphi *phi,\n \t  if (gimple_assign_rhs2 (use_stmt) == op)\n \t    neg = ! neg;\n \t}\n-      if (*code == ERROR_MARK)\n+      if (CONVERT_EXPR_CODE_P (use_code)\n+\t  && tree_nop_conversion_p (TREE_TYPE (gimple_assign_lhs (use_stmt)),\n+\t\t\t\t    TREE_TYPE (gimple_assign_rhs1 (use_stmt))))\n+\t;\n+      else if (*code == ERROR_MARK)\n \t*code = use_code;\n       else if (use_code != *code)\n \t{\n@@ -5692,19 +5696,6 @@ vectorizable_reduction (stmt_vec_info stmt_info, slp_tree slp_node,\n         which is defined by the loop-header-phi.  */\n \n   gassign *stmt = as_a <gassign *> (stmt_info->stmt);\n-  switch (get_gimple_rhs_class (gimple_assign_rhs_code (stmt)))\n-    {\n-    case GIMPLE_BINARY_RHS:\n-    case GIMPLE_TERNARY_RHS:\n-      break;\n-\n-    case GIMPLE_UNARY_RHS:\n-    case GIMPLE_SINGLE_RHS:\n-      return false;\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n   enum tree_code code = gimple_assign_rhs_code (stmt);\n   int op_type = TREE_CODE_LENGTH (code);\n "}]}