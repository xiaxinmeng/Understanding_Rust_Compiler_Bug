{"sha": "6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzMTEwMmNlM2YxYWMxOWE5YzY2Mzc4MjdiMWY0ZGZmOWVlYTk3Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-23T17:04:56Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-23T17:04:56Z"}, "message": "re PR c++/80866 (segfault in is_overloaded_fn())\n\n\tPR c++/80866\n\t* parser.c (cp_parser_template_id): Keep the lookup when stashing\n\tthe template_id.\n\n\tPR c++/80866\n\t* g++.dg/parse/pr80866.C: New.\n\nFrom-SVN: r248377", "tree": {"sha": "edabca55a819f56695f04ed2eceaf24350dafd87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edabca55a819f56695f04ed2eceaf24350dafd87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b4b1fc7cab09c63681cd4deeddcb81a4ee90d1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4b1fc7cab09c63681cd4deeddcb81a4ee90d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4b1fc7cab09c63681cd4deeddcb81a4ee90d1b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "254f5b7cb7217a12df645bf4033bfcc5ddbfbb59", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "patch": "@@ -1,5 +1,9 @@\n 2017-05-23  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/80866\n+\t* parser.c (cp_parser_template_id): Keep the lookup when stashing\n+\tthe template_id.\n+\n \t* cp-tree.h (DECL_HIDDEN_P): New.\n \t* name-lookup.c (set_decl_context,\n \tset_local_extern_decl_linkage):\tNew, broken out of ..."}, {"sha": "71e1d166eacb1fbe8472be2fe8ad761b67f81fe1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "patch": "@@ -15570,6 +15570,11 @@ cp_parser_template_id (cp_parser *parser,\n \t= make_location (token->location, token->location, finish_loc);\n       token->location = combined_loc;\n \n+      /* We must mark the lookup as kept, so we don't throw it away on\n+\t the first parse.  */\n+      if (is_overloaded_fn (template_id))\n+\tlookup_keep (get_fns (template_id), true);\n+\n       /* Retrieve any deferred checks.  Do not pop this access checks yet\n \t so the memory will not be reclaimed during token replacing below.  */\n       token->u.tree_check_value = ggc_cleared_alloc<struct tree_check> ();"}, {"sha": "f536dda0fda70884fb2bd13d6727a2e8f55f2f3b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "patch": "@@ -1,3 +1,8 @@\n+2017-05-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/80866\n+\t* g++.dg/parse/pr80866.C: New.\n+\n 2017-05-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/ipa/ctor-empty-1.c: Update template."}, {"sha": "18543baba194bf5173c775bbe8f236a0175bfb26", "filename": "gcc/testsuite/g++.dg/parse/pr80866.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr80866.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6131102ce3f1ac19a9c6637827b1f4dff9eea97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr80866.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr80866.C?ref=6131102ce3f1ac19a9c6637827b1f4dff9eea97b", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++11 } }\n+// PR 80866 recycled a lookup too soon.\n+\n+void pow();\n+namespace math {\n+  template <typename T> void pow(T);\n+}\n+using namespace math;\n+\n+decltype(pow<>(0)) z();"}]}