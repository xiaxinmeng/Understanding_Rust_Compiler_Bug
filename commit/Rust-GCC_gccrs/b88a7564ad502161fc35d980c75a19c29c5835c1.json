{"sha": "b88a7564ad502161fc35d980c75a19c29c5835c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg4YTc1NjRhZDUwMjE2MWZjMzVkOTgwYzc1YTE5YzI5YzU4MzVjMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2005-10-20T11:54:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-10-20T11:54:41Z"}, "message": "re PR bootstrap/18939 (spurious relink of gcov and gcov-dump with the base compiler)\n\n\tPR bootstrap/18939\n\t* Makefile.def (gcc) <target>: Fix thinko.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r105669", "tree": {"sha": "7f0de8e7485cc5212f937cf5466efd2a99c962a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f0de8e7485cc5212f937cf5466efd2a99c962a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b88a7564ad502161fc35d980c75a19c29c5835c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a7564ad502161fc35d980c75a19c29c5835c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88a7564ad502161fc35d980c75a19c29c5835c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a7564ad502161fc35d980c75a19c29c5835c1/comments", "author": null, "committer": null, "parents": [{"sha": "b501d4432bb86806def232246378db4d8814bc73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b501d4432bb86806def232246378db4d8814bc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b501d4432bb86806def232246378db4d8814bc73"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c1f3af135952ddef2062de81a05ff87c4dbe5928", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88a7564ad502161fc35d980c75a19c29c5835c1/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88a7564ad502161fc35d980c75a19c29c5835c1/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b88a7564ad502161fc35d980c75a19c29c5835c1", "patch": "@@ -1,3 +1,9 @@\n+2005-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/18939\n+\t* Makefile.def (gcc) <target>: Fix thinko.\n+\t* Makefile.in: Regenerate.\n+\n 2005-10-17  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* configure.in (bfin-*-*): Use test, not brackets, in if statement."}, {"sha": "035def58c52af982e1ecf26e6cc4fa9a804801dd", "filename": "Makefile.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88a7564ad502161fc35d980c75a19c29c5835c1/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88a7564ad502161fc35d980c75a19c29c5835c1/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=b88a7564ad502161fc35d980c75a19c29c5835c1", "patch": "@@ -60,7 +60,7 @@ host_modules= { module= fixincludes;\n host_modules= { module= flex; no_check_cross= true; };\n host_modules= { module= gas; bootstrap=true; };\n host_modules= { module= gcc; bootstrap=true; \n-\t\ttarget=\"`if [ -f gcc/stage_last ]; then echo quickstrap ; else echo all; fi`\";\n+\t\ttarget=\"`if [ -f stage_last ]; then echo quickstrap ; else echo all; fi`\";\n \t\textra_make_flags=\"$(EXTRA_GCC_FLAGS)\"; };\n host_modules= { module= gawk; };\n host_modules= { module= gettext; };"}, {"sha": "22333c05cf906453298813649a7560de8e192fae", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88a7564ad502161fc35d980c75a19c29c5835c1/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88a7564ad502161fc35d980c75a19c29c5835c1/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=b88a7564ad502161fc35d980c75a19c29c5835c1", "patch": "@@ -11248,7 +11248,7 @@ configure-stagefeedback-gcc:\n .PHONY: all-gcc maybe-all-gcc\n maybe-all-gcc:\n @if gcc\n-TARGET-gcc=`if [ -f gcc/stage_last ]; then echo quickstrap ; else echo all; fi`\n+TARGET-gcc=`if [ -f stage_last ]; then echo quickstrap ; else echo all; fi`\n maybe-all-gcc: all-gcc\n all-gcc: configure-gcc\n \t@test -f stage_last && exit 0; \\"}]}