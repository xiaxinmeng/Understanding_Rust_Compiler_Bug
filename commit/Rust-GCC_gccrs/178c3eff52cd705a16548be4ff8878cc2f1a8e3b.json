{"sha": "178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4YzNlZmY1MmNkNzA1YTE2NTQ4YmU0ZmY4ODc4Y2MyZjFhOGUzYg==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2002-04-16T21:56:09Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-04-16T21:56:09Z"}, "message": "rs6000.c (rs6000_output_function_prologue): Compute instruction addresses.\n\n2002-04-16  Dale Johannesen <dalej@apple.com>\n\n        * config/rs6000/rs6000.c (rs6000_output_function_prologue): Compute\n        instruction addresses.\n        (rs6000_output_function_epilogue): Likewise.\n\nFrom-SVN: r52378", "tree": {"sha": "eb032992e2a8b3df8b807ef7eaee71a9dc4e654e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb032992e2a8b3df8b807ef7eaee71a9dc4e654e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/comments", "author": null, "committer": null, "parents": [{"sha": "7d6f6369938e8ce41d3d748da8c7b6ce663ccd4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6f6369938e8ce41d3d748da8c7b6ce663ccd4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6f6369938e8ce41d3d748da8c7b6ce663ccd4a"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "3a185ec3e00b6793b5f2d61840f72de102f1701a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,3 +1,9 @@\n+2002-04-16  Dale Johannesen <dalej@apple.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_output_function_prologue): Compute\n+\tinstruction addresses.\n+\t(rs6000_output_function_epilogue): Likewise.\n+\n 2002-04-16  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* c-parse.in (poplevel, compstmt_start,"}, {"sha": "bb16748cbe38f99881ec09d946c770586ffab6d2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -7250,11 +7250,11 @@ rs6000_emit_cmove (dest, op, true_cond, false_cond)\n   rtx temp;\n \n   /* These modes should always match. */\n-  if ( GET_MODE (op1) != compare_mode )\n+  if (GET_MODE (op1) != compare_mode)\n     return 0;\n-  if ( GET_MODE (true_cond) != result_mode )\n+  if (GET_MODE (true_cond) != result_mode)\n     return 0;\n-  if ( GET_MODE (false_cond) != result_mode )\n+  if (GET_MODE (false_cond) != result_mode)\n     return 0;\n \n   /* First, work out if the hardware can do this at all, or\n@@ -9039,6 +9039,17 @@ rs6000_output_function_prologue (file, size)\n       emit_note (0, NOTE_INSN_DELETED);\n       rs6000_emit_prologue ();\n       emit_note (0, NOTE_INSN_DELETED);\n+\n+      /* Expand INSN_ADDRESSES so final() doesn't crash. */\n+      {\n+\trtx insn;\n+\tunsigned addr = 0;\n+\tfor (insn = get_insns (); insn != 0; insn = NEXT_INSN (insn))\n+\t  {\n+\t    INSN_ADDRESSES_NEW (insn, addr);\n+\t    addr += 4;\n+\t  }\n+      }\n       \n       if (TARGET_DEBUG_STACK)\n \tdebug_rtx_list (get_insns (), 100);\n@@ -9427,6 +9438,17 @@ rs6000_output_function_epilogue (file, size)\n \t  rs6000_emit_epilogue (FALSE);\n \t  emit_note (0, NOTE_INSN_DELETED);\n \n+\t  /* Expand INSN_ADDRESSES so final() doesn't crash. */\n+\t  {\n+\t    rtx insn;\n+\t    unsigned addr = 0;\n+\t    for (insn = get_insns (); insn != 0; insn = NEXT_INSN (insn))\n+\t      {\n+\t\tINSN_ADDRESSES_NEW (insn, addr);\n+\t\taddr += 4;\n+\t      }\n+\t  }\n+\n \t  if (TARGET_DEBUG_STACK)\n \t    debug_rtx_list (get_insns (), 100);\n \t  final (get_insns (), file, FALSE, FALSE);"}]}