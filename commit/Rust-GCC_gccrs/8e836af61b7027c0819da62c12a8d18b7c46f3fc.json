{"sha": "8e836af61b7027c0819da62c12a8d18b7c46f3fc", "node_id": "C_kwDOANBUbNoAKDhlODM2YWY2MWI3MDI3YzA4MTlkYTYyYzEyYThkMThiN2M0NmYzZmM", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-29T13:46:47Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-12-07T13:37:02Z"}, "message": "Fix --help -Q output\n\n\tPR middle-end/103438\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.c (s390_valid_target_attribute_inner_p):\n\tUse new enum CLVC_INTEGER.\n\t* opt-functions.awk: Use new CLVC_INTEGER.\n\t* opts-common.c (set_option): Likewise.\n\t(option_enabled): Return -1,0,1 for CLVC_INTEGER.\n\t(get_option_state): Use new CLVC_INTEGER.\n\t(control_warning_option): Likewise.\n\t* opts.h (enum cl_var_type): Likewise.", "tree": {"sha": "b6976486e39e428ba0e7b2a261fddd3cadbdcbc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6976486e39e428ba0e7b2a261fddd3cadbdcbc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e836af61b7027c0819da62c12a8d18b7c46f3fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e836af61b7027c0819da62c12a8d18b7c46f3fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e836af61b7027c0819da62c12a8d18b7c46f3fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e836af61b7027c0819da62c12a8d18b7c46f3fc/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a2257e6b3fa288d6c50831987949b9ff7dfb865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2257e6b3fa288d6c50831987949b9ff7dfb865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2257e6b3fa288d6c50831987949b9ff7dfb865"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "3a22f7833a94e9e3cfdf5834efa00a4758be97b8", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=8e836af61b7027c0819da62c12a8d18b7c46f3fc", "patch": "@@ -15926,7 +15926,7 @@ s390_valid_target_attribute_inner_p (tree args,\n \t  new_opts_set->x_target_flags |= mask;\n \t}\n \n-      else if (cl_options[opt].var_type == CLVC_BOOLEAN)\n+      else if (cl_options[opt].var_type == CLVC_INTEGER)\n \t{\n \t  int value;\n "}, {"sha": "ffe4eb920276a3dc390b5e3817e1276cda86e9f1", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=8e836af61b7027c0819da62c12a8d18b7c46f3fc", "patch": "@@ -303,7 +303,7 @@ function var_set(flags)\n \t\treturn \"0, CLVC_STRING, 0\"\n \tif (flag_set_p(\"ByteSize\", flags))\n \t\treturn \"0, CLVC_SIZE, 0\"\n-\treturn \"0, CLVC_BOOLEAN, 0\"\n+\treturn \"0, CLVC_INTEGER, 0\"\n }\n \n # Given that an option called NAME has flags FLAGS, return an initializer"}, {"sha": "ef2130e318fb16355f4e3f47be1c8cab795fa110", "filename": "gcc/opts-common.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=8e836af61b7027c0819da62c12a8d18b7c46f3fc", "patch": "@@ -1458,7 +1458,7 @@ set_option (struct gcc_options *opts, struct gcc_options *opts_set,\n \n   switch (option->var_type)\n     {\n-    case CLVC_BOOLEAN:\n+    case CLVC_INTEGER:\n \tif (option->cl_host_wide_int)\n \t  {\n \t    *(HOST_WIDE_INT *) flag_var = value;\n@@ -1586,7 +1586,8 @@ option_flag_var (int opt_index, struct gcc_options *opts)\n }\n \n /* Return 1 if option OPT_IDX is enabled in OPTS, 0 if it is disabled,\n-   or -1 if it isn't a simple on-off switch.  */\n+   or -1 if it isn't a simple on-off switch\n+   (or if the value is unknown, typically set later in target).  */\n \n int\n option_enabled (int opt_idx, unsigned lang_mask, void *opts)\n@@ -1606,11 +1607,17 @@ option_enabled (int opt_idx, unsigned lang_mask, void *opts)\n   if (flag_var)\n     switch (option->var_type)\n       {\n-      case CLVC_BOOLEAN:\n+      case CLVC_INTEGER:\n \tif (option->cl_host_wide_int)\n-\t  return *(HOST_WIDE_INT *) flag_var != 0;\n+\t  {\n+\t    HOST_WIDE_INT v = *(HOST_WIDE_INT *) flag_var;\n+\t    return v != 0 ? (v < 0 ? -1 : 1) : 0;\n+\t  }\n \telse\n-\t  return *(int *) flag_var != 0;\n+\t  {\n+\t    int v = *(int *) flag_var;\n+\t    return v != 0 ? (v < 0 ? -1 : 1) : 0;\n+\t  }\n \n       case CLVC_EQUAL:\n \tif (option->cl_host_wide_int) \n@@ -1658,7 +1665,7 @@ get_option_state (struct gcc_options *opts, int option,\n \n   switch (cl_options[option].var_type)\n     {\n-    case CLVC_BOOLEAN:\n+    case CLVC_INTEGER:\n     case CLVC_EQUAL:\n     case CLVC_SIZE:\n       state->data = flag_var;\n@@ -1725,7 +1732,7 @@ control_warning_option (unsigned int opt_index, int kind, const char *arg,\n       const struct cl_option *option = &cl_options[opt_index];\n \n       /* -Werror=foo implies -Wfoo.  */\n-      if (option->var_type == CLVC_BOOLEAN\n+      if (option->var_type == CLVC_INTEGER\n \t  || option->var_type == CLVC_ENUM\n \t  || option->var_type == CLVC_SIZE)\n \t{"}, {"sha": "4c2b77ec0f0061263421d6668fe3f788aa573ffb", "filename": "gcc/opts.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e836af61b7027c0819da62c12a8d18b7c46f3fc/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=8e836af61b7027c0819da62c12a8d18b7c46f3fc", "patch": "@@ -24,8 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Specifies how a switch's VAR_VALUE relates to its FLAG_VAR.  */\n enum cl_var_type {\n-  /* The switch is enabled when FLAG_VAR is nonzero.  */\n-  CLVC_BOOLEAN,\n+  /* The switch is an integer value.  */\n+  CLVC_INTEGER,\n \n   /* The switch is enabled when FLAG_VAR == VAR_VALUE.  */\n   CLVC_EQUAL,"}]}