{"sha": "38e8f66392205d315970363059813572a89f1b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhlOGY2NjM5MjIwNWQzMTU5NzAzNjMwNTk4MTM1NzJhODlmMWI4Zg==", "commit": {"author": {"name": "Yvan Roux", "email": "yvan.roux@linaro.org", "date": "2013-09-26T09:09:30Z"}, "committer": {"name": "Yvan Roux", "email": "yroux@gcc.gnu.org", "date": "2013-09-26T09:09:30Z"}, "message": "aarch64.opt (mlra): New option.\n\n2013-09-26  Yvan Roux  <yvan.roux@linaro.org>\n\n\t* config/aarch64/aarch64.opt (mlra): New option.\n\t* config/aarch64/aarch64.c (aarch64_lra_p): New function.\n\t(TARGET_LRA_P): Define.\n\nFrom-SVN: r202940", "tree": {"sha": "061cea780d6391b6a5c2c41ccc85424065c7dc95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/061cea780d6391b6a5c2c41ccc85424065c7dc95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38e8f66392205d315970363059813572a89f1b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e8f66392205d315970363059813572a89f1b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e8f66392205d315970363059813572a89f1b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e8f66392205d315970363059813572a89f1b8f/comments", "author": {"login": "yroux", "id": 2749479, "node_id": "MDQ6VXNlcjI3NDk0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2749479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yroux", "html_url": "https://github.com/yroux", "followers_url": "https://api.github.com/users/yroux/followers", "following_url": "https://api.github.com/users/yroux/following{/other_user}", "gists_url": "https://api.github.com/users/yroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/yroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yroux/subscriptions", "organizations_url": "https://api.github.com/users/yroux/orgs", "repos_url": "https://api.github.com/users/yroux/repos", "events_url": "https://api.github.com/users/yroux/events{/privacy}", "received_events_url": "https://api.github.com/users/yroux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4167e8d415ff7708a2f9a23542245e24a6ee3632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4167e8d415ff7708a2f9a23542245e24a6ee3632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4167e8d415ff7708a2f9a23542245e24a6ee3632"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f5162aabb75927f32a6f138c6e4897ab17f84108", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e8f66392205d315970363059813572a89f1b8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e8f66392205d315970363059813572a89f1b8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38e8f66392205d315970363059813572a89f1b8f", "patch": "@@ -1,3 +1,9 @@\n+2013-09-26  Yvan Roux  <yvan.roux@linaro.org>\n+\n+\t* config/aarch64/aarch64.opt (mlra): New option.\n+\t* config/aarch64/aarch64.c (aarch64_lra_p): New function.\n+\t(TARGET_LRA_P): Define.\n+\n 2013-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (expand_assignment): Remove obsolete comment."}, {"sha": "1558183a08f334417bf70a89f0372a383417a124", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e8f66392205d315970363059813572a89f1b8f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e8f66392205d315970363059813572a89f1b8f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=38e8f66392205d315970363059813572a89f1b8f", "patch": "@@ -109,6 +109,7 @@ enum aarch64_code_model aarch64_cmodel;\n #define TARGET_HAVE_TLS 1\n #endif\n \n+static bool aarch64_lra_p (void);\n static bool aarch64_composite_type_p (const_tree, enum machine_mode);\n static bool aarch64_vfp_is_call_or_return_candidate (enum machine_mode,\n \t\t\t\t\t\t     const_tree,\n@@ -6092,6 +6093,13 @@ aapcs_vfp_sub_candidate (const_tree type, enum machine_mode *modep)\n   return -1;\n }\n \n+/* Return true if we use LRA instead of reload pass.  */\n+static bool\n+aarch64_lra_p (void)\n+{\n+  return aarch64_lra_flag;\n+}\n+\n /* Return TRUE if the type, as described by TYPE and MODE, is a composite\n    type as described in AAPCS64 \\S 4.3.  This includes aggregate, union and\n    array types.  The C99 floating-point complex types are also considered\n@@ -8268,6 +8276,9 @@ aarch64_vectorize_vec_perm_const_ok (enum machine_mode vmode,\n #undef TARGET_LIBGCC_CMP_RETURN_MODE\n #define TARGET_LIBGCC_CMP_RETURN_MODE aarch64_libgcc_cmp_return_mode\n \n+#undef TARGET_LRA_P\n+#define TARGET_LRA_P aarch64_lra_p\n+\n #undef TARGET_MANGLE_TYPE\n #define TARGET_MANGLE_TYPE aarch64_mangle_type\n "}, {"sha": "3b3e6c3b94d96eecdd915794b6e28e9330fa4d01", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e8f66392205d315970363059813572a89f1b8f/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e8f66392205d315970363059813572a89f1b8f/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=38e8f66392205d315970363059813572a89f1b8f", "patch": "@@ -103,6 +103,10 @@ mabi=\n Target RejectNegative Joined Enum(aarch64_abi) Var(aarch64_abi) Init(AARCH64_ABI_DEFAULT)\n -mabi=ABI\tGenerate code that conforms to the specified ABI\n \n+mlra\n+Target Report Var(aarch64_lra_flag) Init(1) Save\n+Use LRA instead of reload (transitional)\n+\n Enum\n Name(aarch64_abi) Type(int)\n Known AArch64 ABIs (for use with the -mabi= option):"}]}