{"sha": "9d503515ceebc778a5c2958f7459367c34f1fed0", "node_id": "C_kwDOANBUbNoAKDlkNTAzNTE1Y2VlYmM3NzhhNWMyOTU4Zjc0NTkzNjdjMzRmMWZlZDA", "commit": {"author": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-09-14T05:22:27Z"}, "committer": {"name": "Yvan Roux", "email": "yvan.roux@st.com", "date": "2022-09-14T06:58:15Z"}, "message": "testsuite: gluefile file need to be prefixed\n\nWhen the status wrapper is used, the gluefile need to be prefixed with\n-Wl, in order for the test cases to have the dump files with the\nexpected names.\n\n2022-09-14  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n\ngcc/testsuite/\n\tPR target/95720\n\t* lib/g++.exp: Moved gluefile block to after flags have been\n\t  prefixed for the target_compile call.\n\t* lib/gcc.exp: Likewise.\n\t* lib/wrapper.exp: Reset adjusted state flag.\n\nCo-Authored-By: Yvan ROUX  <yvan.roux@foss.st.com>\nSigned-off-by: Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>", "tree": {"sha": "2a28278f9f1672bc958203f3e08670627b455ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a28278f9f1672bc958203f3e08670627b455ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d503515ceebc778a5c2958f7459367c34f1fed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d503515ceebc778a5c2958f7459367c34f1fed0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d503515ceebc778a5c2958f7459367c34f1fed0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d503515ceebc778a5c2958f7459367c34f1fed0/comments", "author": null, "committer": {"login": "yroux", "id": 2749479, "node_id": "MDQ6VXNlcjI3NDk0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2749479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yroux", "html_url": "https://github.com/yroux", "followers_url": "https://api.github.com/users/yroux/followers", "following_url": "https://api.github.com/users/yroux/following{/other_user}", "gists_url": "https://api.github.com/users/yroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/yroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yroux/subscriptions", "organizations_url": "https://api.github.com/users/yroux/orgs", "repos_url": "https://api.github.com/users/yroux/repos", "events_url": "https://api.github.com/users/yroux/events{/privacy}", "received_events_url": "https://api.github.com/users/yroux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1995a0227d2602718fd0b283a8c7050fdfc701fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1995a0227d2602718fd0b283a8c7050fdfc701fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1995a0227d2602718fd0b283a8c7050fdfc701fb"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "16e61fb4ad49269df779b6ef9e66983a371316f8", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=9d503515ceebc778a5c2958f7459367c34f1fed0", "patch": "@@ -303,11 +303,6 @@ proc g++_target_compile { source dest type options } {\n     global flags_to_postpone\n     global board_info\n \n-    if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n-\tlappend options \"libs=${gluefile}\"\n-\tlappend options \"ldflags=${wrap_flags}\"\n-    }\n-\n     global TEST_EXTRA_LIBS\n     if [info exists TEST_EXTRA_LIBS] {\n \tlappend options \"ldflags=$TEST_EXTRA_LIBS\"\n@@ -333,6 +328,11 @@ proc g++_target_compile { source dest type options } {\n \n     set options [dg-additional-files-options $options $source]\n \n+    if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n+\tlappend options \"libs=${gluefile}\"\n+\tlappend options \"ldflags=${wrap_flags}\"\n+    }\n+\n     set result [target_compile $source $dest $type $options]\n \n     if {[board_info $tboard exists multilib_flags]} {"}, {"sha": "2f145d0fdf4f35bb0fb603e16e28bbb7b22c74f4", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=9d503515ceebc778a5c2958f7459367c34f1fed0", "patch": "@@ -129,16 +129,6 @@ proc gcc_target_compile { source dest type options } {\n     global flags_to_postpone\n     global board_info\n \n-    if {[target_info needs_status_wrapper] != \"\" && \\\n-\t    [target_info needs_status_wrapper] != \"0\" && \\\n-\t    [info exists gluefile] } {\n-\tlappend options \"libs=${gluefile}\"\n-\tlappend options \"ldflags=$wrap_flags\"\n-\tif { $type == \"executable\" } {\n-\t    set options [concat \"{additional_flags=-dumpbase \\\"\\\"}\" $options]\n-\t}\n-    }\n-\n     global TEST_EXTRA_LIBS\n     if [info exists TEST_EXTRA_LIBS] {\n \tlappend options \"ldflags=$TEST_EXTRA_LIBS\"\n@@ -170,6 +160,17 @@ proc gcc_target_compile { source dest type options } {\n     lappend options \"timeout=[timeout_value]\"\n     lappend options \"compiler=$GCC_UNDER_TEST\"\n     set options [dg-additional-files-options $options $source]\n+\n+    if {[target_info needs_status_wrapper] != \"\" && \\\n+\t    [target_info needs_status_wrapper] != \"0\" && \\\n+\t    [info exists gluefile] } {\n+\tlappend options \"libs=${gluefile}\"\n+\tlappend options \"ldflags=$wrap_flags\"\n+\tif { $type == \"executable\" } {\n+\t    set options [concat \"{additional_flags=-dumpbase \\\"\\\"}\" $options]\n+\t}\n+    }\n+\n     set return_val [target_compile $source $dest $type $options]\n \n     if {[board_info $tboard exists multilib_flags]} {"}, {"sha": "4a7d56941fcdfcf1ba02b126208c5a96d6f46297", "filename": "gcc/testsuite/lib/wrapper.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fwrapper.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d503515ceebc778a5c2958f7459367c34f1fed0/gcc%2Ftestsuite%2Flib%2Fwrapper.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fwrapper.exp?ref=9d503515ceebc778a5c2958f7459367c34f1fed0", "patch": "@@ -22,7 +22,7 @@\n # the compiler when compiling FILENAME.\n \n proc ${tool}_maybe_build_wrapper { filename args } {\n-    global gluefile wrap_flags\n+    global gluefile wrap_flags gcc_adjusted_linker_flags\n \n     if { [target_info needs_status_wrapper] != \"\" \\\n  \t && [target_info needs_status_wrapper] != \"0\" \\\n@@ -43,6 +43,11 @@ proc ${tool}_maybe_build_wrapper { filename args } {\n \tif { $result != \"\" } {\n \t    set gluefile [lindex $result 0]\n \t    set wrap_flags [lindex $result 1]\n+\n+\t    # Reset the cached state of the adjusted flags\n+\t    if { [info exists gcc_adjusted_linker_flags] } {\n+\t\tset gcc_adjusted_linker_flags 0\n+\t    }\n \t}\n     }\n }"}]}