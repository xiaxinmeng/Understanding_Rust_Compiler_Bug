{"sha": "2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmNTAxOTkxN2E5YjE5NzJlZWY5Y2IwZWFkZDFmOGZlN2MxZDA5NQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-04-03T17:32:02Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-04-03T17:32:02Z"}, "message": "boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Set to use `build_int_2.'\n\n2001-03-28  Hans Boehm  <boehm@acm.org>\n\n        * boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Set to use `build_int_2.'\n        (get_boehm_type_descriptor): Set type on returned value to be a\n        pointer length integer.\n\n(http://gcc.gnu.org/ml/java/2001-03/msg00444.html)\n\nFrom-SVN: r41059", "tree": {"sha": "550e869aa7caa222392f65e4478661e5b7a6a286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/550e869aa7caa222392f65e4478661e5b7a6a286"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095/comments", "author": null, "committer": null, "parents": [{"sha": "ddef6bc7a3c885433f0b8a611cdbb4bef0ce4bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddef6bc7a3c885433f0b8a611cdbb4bef0ce4bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddef6bc7a3c885433f0b8a611cdbb4bef0ce4bc3"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "863569996c5fe5536a00eeae0997a7b78960fa5f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "patch": "@@ -4,6 +4,12 @@\n \tlang_printable_name call in a scratch buffer, so it \n \twon't be clobbered by the second call.\n \n+2001-03-28  Hans Boehm  <boehm@acm.org>\n+\n+\t* boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Set to use `build_int_2.'\n+\t(get_boehm_type_descriptor): Set type on returned value to be a\n+\tpointer length integer.\n+\n 2001-03-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* expr.c (pop_type_0): Call `concat' rather than building the\n@@ -13,12 +19,6 @@\n \t* parse.y (patch_method_invocation): Avoid casting away\n \tconst-ness.\n \n-2001-03-21  Alexandre Petit-Bianco  <apbianco@redhat.com>\n-\n-\t* parse.y (qualify_ambiguous_name): Broaden `length'\n-\trecognition. Help MODIFY_EXPR be resolved as expression names.\n-\tFixes PR java/2066. Fixes PR java/2400.\n-\n 2001-03-28  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* jvgenmain.c (do_mangle_classname): End string constant with '\\0'.\n@@ -174,6 +174,12 @@\n \t* gjavah.c (cxx_keywords): Update from the definitive list in cp/lex.c.\n \t* lex.c (cxx_keywords): Likewise.\n \n+2001-03-21  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (qualify_ambiguous_name): Broaden `length'\n+\trecognition. Help MODIFY_EXPR be resolved as expression names.\n+\tFixes PR java/2066. Fixes PR java/2400.\n+\n 2001-03-21  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* gjavah.c (process_file): Mark interface definitions with "}, {"sha": "c76cad3475f866c9b3888463882cf6be5ea4281c", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=2ff5019917a9b1972eef9cb0eadd1f8fe7c1d095", "patch": "@@ -48,7 +48,7 @@ static void set_bit PARAMS ((unsigned HOST_WIDE_INT *,\n \t    (((((env) << LOG_MAX_MARK_PROCS) | (proc_index)) << DS_TAG_BITS) \\\n \t    | DS_PROC)\n    Here DS_PROC == 2.  */\n-#define PROCEDURE_OBJECT_DESCRIPTOR integer_two_node\n+#define PROCEDURE_OBJECT_DESCRIPTOR build_int_2 (2, 0)\n \n /* Treat two HOST_WIDE_INT's as a contiguous bitmap, with bit 0 being\n    the least significant.  This function sets bit N in the bitmap.  */\n@@ -228,5 +228,6 @@ get_boehm_type_descriptor (tree type)\n   else\n     value = PROCEDURE_OBJECT_DESCRIPTOR;\n \n+  TREE_TYPE (value) = type_for_mode (ptr_mode, 1);\n   return value;\n }"}]}