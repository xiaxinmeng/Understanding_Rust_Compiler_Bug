{"sha": "d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmMTZjMmIzYjBhNTAxZDJiOTUyNzU3MGM4YzE0MTAzZmVhYTM4Zg==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-30T21:02:56Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-30T21:02:56Z"}, "message": "2003-11-30  Jeff Sturm <jsturm@one-point.com>\n\n\t* java/net/InetAddress.java:\n\t(static): Don'f force DNS request for ANY_IF address.\n\n2003-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java,\n\tjava/net/natInetAddressNoNet.cc,\n\tjava/net/natInetAddressPosix.cc,\n\tjava/net/natInetAddressWin32.cc:\n\tReverted my last patch.\n\nFrom-SVN: r74074", "tree": {"sha": "0ceebd43e8c91a4b8505ccbe74ec164516fb1e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ceebd43e8c91a4b8505ccbe74ec164516fb1e27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/comments", "author": null, "committer": null, "parents": [{"sha": "b97366d9b363fd591fb7caa31ffb46a5c106c241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97366d9b363fd591fb7caa31ffb46a5c106c241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97366d9b363fd591fb7caa31ffb46a5c106c241"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "f38bd03a23f80ebbde1a18fd3db590aeb179e1df", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "patch": "@@ -1,3 +1,16 @@\n+2003-11-30  Jeff Sturm <jsturm@one-point.com>\n+\n+\t* java/net/InetAddress.java:\n+\t(static): Don'f force DNS request for ANY_IF address.\n+\n+2003-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java,\n+\tjava/net/natInetAddressNoNet.cc,\n+\tjava/net/natInetAddressPosix.cc,\n+\tjava/net/natInetAddressWin32.cc:\n+\tReverted my last patch.\n+\n 2003-11-28  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/InetAddress.java"}, {"sha": "0a69c1aab07fcee27497183ff96a3e71eda33ab8", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "patch": "@@ -82,7 +82,7 @@ public class InetAddress implements Serializable\n       }\n     \n     byte[] zeros = { 0, 0, 0, 0 };\n-    ANY_IF = new InetAddress (zeros, null);\n+    ANY_IF = new InetAddress (zeros, \"0.0.0.0\");\n   }\n \n   /**\n@@ -564,23 +564,8 @@ public static InetAddress getByAddress (String host, byte[] addr)\n    */\n   private static native byte[] aton (String host);\n \n-  private static native InetAddress[] implLookup(String hostname,\n-\t\t                                 InetAddress addr,\n-\t\t\t\t\t\t boolean all);\n-\n-  private static InetAddress[] lookup (String hostname,\n-\t\t\t\t       InetAddress addr, boolean all)\n-  {\n-    if (addr.equals(ANY_IF))\n-      {\n-\tbyte[] zeros = { 0, 0, 0, 0 };\n-\tInetAddress[] result = new InetAddress[1];\n-\tresult[0] = new InetAddress(zeros, \"0.0.0.0\");\n-\treturn result;\n-      }\n-\n-    return implLookup(hostname, addr, all);\n-  }\n+  private static native InetAddress[] lookup (String hostname,\n+\t\t                              InetAddress addr, boolean all);\n \n   private static native int getFamily (byte[] address);\n "}, {"sha": "0374af18f88f8953a852188cda8b58c97c8c2223", "filename": "libjava/java/net/natInetAddressNoNet.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc?ref=d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "patch": "@@ -24,7 +24,7 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n }\n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::implLookup (jstring, java::net::InetAddress *, jboolean)\n+java::net::InetAddress::lookup (jstring, java::net::InetAddress *, jboolean)\n {\n   return NULL;\n }"}, {"sha": "b97502e19b0002c4934f4483589dbd868d5f0aee", "filename": "libjava/java/net/natInetAddressPosix.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc?ref=d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "patch": "@@ -106,9 +106,8 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n \n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::implLookup (jstring host,\n-\t\t\t\t    java::net::InetAddress* iaddr,\n-\t\t\t\t    jboolean all)\n+java::net::InetAddress::lookup (jstring host, java::net::InetAddress* iaddr,\n+\t\t\t\tjboolean all)\n {\n   struct hostent *hptr = NULL;\n #if defined (HAVE_GETHOSTBYNAME_R) || defined (HAVE_GETHOSTBYADDR_R)"}, {"sha": "42c7d7db9e81c4b8ec086f4cd19bf191a2eede56", "filename": "libjava/java/net/natInetAddressWin32.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f16c2b3b0a501d2b9527570c8c14103feaa38f/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc?ref=d7f16c2b3b0a501d2b9527570c8c14103feaa38f", "patch": "@@ -50,9 +50,8 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n \n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::implLookup (jstring host,\n-\t\t\t\t    java::net::InetAddress* iaddr,\n-\t\t\t\t    jboolean all)\n+java::net::InetAddress::lookup (jstring host, java::net::InetAddress* iaddr,\n+        jboolean all)\n {\n   struct hostent *hptr = NULL;\n   if (host != NULL)"}]}