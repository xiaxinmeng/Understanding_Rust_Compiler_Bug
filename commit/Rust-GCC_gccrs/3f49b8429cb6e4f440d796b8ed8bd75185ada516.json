{"sha": "3f49b8429cb6e4f440d796b8ed8bd75185ada516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y0OWI4NDI5Y2I2ZTRmNDQwZDc5NmI4ZWQ4YmQ3NTE4NWFkYTUxNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-30T16:12:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-30T16:12:56Z"}, "message": "mkcheck.in: Rely on exit status instead of the presence of a core file.\n\n\n2000-04-28  Loren J. Rittle  <ljrittle@acm.org>\n\n        * mkcheck.in: Rely on exit status instead of the presence of a\n        core file.  Added comments on how/where to save core and exe\n        files.  Move shell wildcards outside quotes and fix core path.\n\nFrom-SVN: r33550", "tree": {"sha": "6490aa565a28570bd1bb91f1edc51472ef61e73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6490aa565a28570bd1bb91f1edc51472ef61e73c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f49b8429cb6e4f440d796b8ed8bd75185ada516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f49b8429cb6e4f440d796b8ed8bd75185ada516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f49b8429cb6e4f440d796b8ed8bd75185ada516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f49b8429cb6e4f440d796b8ed8bd75185ada516/comments", "author": null, "committer": null, "parents": [{"sha": "4d0482f6eb8ad9ecc2e552a3285175c0cecc9c76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0482f6eb8ad9ecc2e552a3285175c0cecc9c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0482f6eb8ad9ecc2e552a3285175c0cecc9c76"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "7c903fa40b9571bac64d484272fad03f196f5765", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f49b8429cb6e4f440d796b8ed8bd75185ada516/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f49b8429cb6e4f440d796b8ed8bd75185ada516/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3f49b8429cb6e4f440d796b8ed8bd75185ada516", "patch": "@@ -2,6 +2,17 @@\n \n \t* docs/download.html:  Add link to list of mirror sites.\n \n+2000-04-28  Loren J. Rittle  <ljrittle@acm.org>\n+\n+        * mkcheck.in: Rely on exit status instead of the presence of a\n+        core file.  Added comments on how/where to save core and exe\n+        files.  Move shell wildcards outside quotes and fix core path.\n+\t\n+2000-04-27  scott snyder  <snyder@fnal.gov>\n+\n+        * src/misc-inst.cc: Explicitly instantiate ifstream and ofstream\n+        classes.\n+\n 2000-04-26  Nathan C. Myers  <ncm@cantrip.org>\n \n \t* bits/basic_string.h: include <bits/atomicity.h> instead"}, {"sha": "83c34194af36a248474dca55f4e4317767c1bc73", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f49b8429cb6e4f440d796b8ed8bd75185ada516/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f49b8429cb6e4f440d796b8ed8bd75185ada516/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=3f49b8429cb6e4f440d796b8ed8bd75185ada516", "patch": "@@ -124,8 +124,10 @@ if [ ! -x \"$TEST_DIR/printnow\" ]; then\n fi\n \n # Remove old executables.\n-rm -rf \"$TEST_DIR/*exe\"\n-rm -rf \"$TEST_DIR/core\" \"$TEST_DIR/*core\"\n+rm -rf \"$TEST_DIR\"/*exe\n+\n+# Remove old core files (which now get left in cwd, not $TEST_DIR).\n+rm -rf ./*core\n \n # Copy over the data files for filebufs in read-only mode\n cp $SRC_DIR/testsuite/27_io/*.txt $TEST_DIR\n@@ -202,16 +204,21 @@ do\n         # Actually run the executable and time it . . .\n         TIMEFORMAT='timemark %R'\n         E_TIME_TEXT=\"$(exec 2>&1; time $ST_NAME)\"\n+\tE_ABNORMAL_TERMINATION=$?\n         E_TIME=\"$(echo $E_TIME_TEXT | awk '{print $2}')\"\n         # joining those two commands does not work due to quoting problems:\n         #E_TIME=\"$(exec 2>&1; time $ST_NAME | awk '{print $2}')\"\n         # this will work as a fallback on certain systems...?\n         #E_TIME=$(exec 2>&1; time $ST_NAME | cut -d ' ' -f 2)\n  \n-\tif [ -f core ]; then\n-\t    ST_EXEC='-'\n-\t    echo \"st_fail\" | awk '{printf(\"\\t%s\\n\", $1)}'\n-\t    rm core\n+       if [ \"$E_ABNORMAL_TERMINATION\" -ne 0 ]; then\n+            ST_EXEC='-'\n+            echo \"st_fail\" | awk '{printf(\"\\t%s\\n\", $1)}'\n+\t    rm -f ./*core\n+\t    # sometimes you want to save all core files for review:\n+\t    #mv ./core $ST_NAME.core\n+\t    # sometimes the OS names core files as programname.core:\n+\t    #mv ./*core $ST_NAME.core\n \telse\n \t    # XXX this should probably be a function? \n \n@@ -258,13 +265,17 @@ do\n \t\t\trm $DIFF_FILE\n \t\t    done\n \t\telse\n-\t\t    # the file does no output, and didn't core, so\n-\t\t    # assume passed.\n+\t\t    # the file does no output, and didn't abnormally\n+\t\t    # terminate, so assume passed.\n \t\t    ST_EXEC=\"+\"\n \t\t    echo \"st_pass\" | awk '{printf(\"\\t%s\\t\", $1)}'\n \t\tfi\n \t    fi\n \trm \"$ST_NAME\"\n+\t# sometimes you want to save all failing exe files for review:\n+\t#if [ \"$ST_EXEC\" = \"+\" ]; then\n+\t#    rm \"$ST_NAME\"\n+\t#fi\n     else\n         # the file did not compile. Write out compilation info to the log file.\n \techo \"$CXX $CXX_FLAG $ST_FLAG $INC_PATH $LIB_PATH $CNAME -o $ST_NAME\" \\"}]}