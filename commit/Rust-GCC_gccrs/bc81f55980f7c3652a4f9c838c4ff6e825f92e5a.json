{"sha": "bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4MWY1NTk4MGY3YzM2NTJhNGY5YzgzOGM0ZmY2ZTgyNWY5MmU1YQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-12-29T14:51:44Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-12-29T14:51:44Z"}, "message": "frontend-passes.c (gfc_code_walker): Handle expressions in EXEC_CALL, EXEC_ASSIGN_CALL and EXEC_CALL_PPC.\n\n2010-12-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* frontend-passes.c (gfc_code_walker): Handle expressions\n\tin EXEC_CALL, EXEC_ASSIGN_CALL and EXEC_CALL_PPC.\n\tSeparate cases in switch statements by blank lines.\n\n2010-12-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* gfortran.dg/character_comparison_7.f90:  New test.\n\nFrom-SVN: r168320", "tree": {"sha": "6f97c3608592c8259135c9949e3301ad024fbb10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f97c3608592c8259135c9949e3301ad024fbb10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/comments", "author": null, "committer": null, "parents": [{"sha": "7539a95b5aa7baaa3ddca69f236ce71baaa9865e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7539a95b5aa7baaa3ddca69f236ce71baaa9865e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7539a95b5aa7baaa3ddca69f236ce71baaa9865e"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "8fc74f8ca631cf4f5b84c4453baaf45c7eafb638", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "patch": "@@ -1,3 +1,9 @@\n+2010-12-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* frontend-passes.c (gfc_code_walker): Handle expressions\n+\tin EXEC_CALL, EXEC_ASSIGN_CALL and EXEC_CALL_PPC.\n+\tSeparate cases in switch statements by blank lines.\n+\n 2010-12-28  Janus Weil  <janus@gcc.gnu.org>\n \t    Daniel Franke  <dfranke@gcc.gnu.org>\n "}, {"sha": "339458e2d621f22fc1e54ee56ef742ca35b2ae07", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "patch": "@@ -524,9 +524,12 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n       int result = codefn (c, &walk_subtrees, data);\n       if (result)\n \treturn result;\n+\n       if (walk_subtrees)\n \t{\n \t  gfc_code *b;\n+\t  gfc_actual_arglist *a;\n+\n \t  switch ((*c)->op)\n \t    {\n \t    case EXEC_DO:\n@@ -535,6 +538,19 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t      WALK_SUBEXPR ((*c)->ext.iterator->end);\n \t      WALK_SUBEXPR ((*c)->ext.iterator->step);\n \t      break;\n+\n+\t    case EXEC_CALL:\n+\t    case EXEC_ASSIGN_CALL:\n+\t      for (a = (*c)->ext.actual; a; a = a->next)\n+\t\tWALK_SUBEXPR (a->expr);\n+\t      break;\n+\n+\t    case EXEC_CALL_PPC:\n+\t      WALK_SUBEXPR ((*c)->expr1);\n+\t      for (a = (*c)->ext.actual; a; a = a->next)\n+\t\tWALK_SUBEXPR (a->expr);\n+\t      break;\n+\n \t    case EXEC_SELECT:\n \t      WALK_SUBEXPR ((*c)->expr1);\n \t      for (b = (*c)->block; b; b = b->block)\n@@ -548,6 +564,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t\t  WALK_SUBCODE (b->next);\n \t\t}\n \t      continue;\n+\n \t    case EXEC_ALLOCATE:\n \t    case EXEC_DEALLOCATE:\n \t      {\n@@ -556,6 +573,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t\t  WALK_SUBEXPR (a->expr);\n \t\tbreak;\n \t      }\n+\n \t    case EXEC_FORALL:\n \t      {\n \t\tgfc_forall_iterator *fa;\n@@ -568,6 +586,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t\t  }\n \t\tbreak;\n \t      }\n+\n \t    case EXEC_OPEN:\n \t      WALK_SUBEXPR ((*c)->ext.open->unit);\n \t      WALK_SUBEXPR ((*c)->ext.open->file);\n@@ -591,12 +610,14 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t      WALK_SUBEXPR ((*c)->ext.open->id);\n \t      WALK_SUBEXPR ((*c)->ext.open->newunit);\n \t      break;\n+\n \t    case EXEC_CLOSE:\n \t      WALK_SUBEXPR ((*c)->ext.close->unit);\n \t      WALK_SUBEXPR ((*c)->ext.close->status);\n \t      WALK_SUBEXPR ((*c)->ext.close->iostat);\n \t      WALK_SUBEXPR ((*c)->ext.close->iomsg);\n \t      break;\n+\n \t    case EXEC_BACKSPACE:\n \t    case EXEC_ENDFILE:\n \t    case EXEC_REWIND:\n@@ -605,6 +626,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t      WALK_SUBEXPR ((*c)->ext.filepos->iostat);\n \t      WALK_SUBEXPR ((*c)->ext.filepos->iomsg);\n \t      break;\n+\n \t    case EXEC_INQUIRE:\n \t      WALK_SUBEXPR ((*c)->ext.inquire->unit);\n \t      WALK_SUBEXPR ((*c)->ext.inquire->file);\n@@ -643,12 +665,14 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t      WALK_SUBEXPR ((*c)->ext.inquire->size);\n \t      WALK_SUBEXPR ((*c)->ext.inquire->round);\n \t      break;\n+\n \t    case EXEC_WAIT:\n \t      WALK_SUBEXPR ((*c)->ext.wait->unit);\n \t      WALK_SUBEXPR ((*c)->ext.wait->iostat);\n \t      WALK_SUBEXPR ((*c)->ext.wait->iomsg);\n \t      WALK_SUBEXPR ((*c)->ext.wait->id);\n \t      break;\n+\n \t    case EXEC_READ:\n \t    case EXEC_WRITE:\n \t      WALK_SUBEXPR ((*c)->ext.dt->io_unit);\n@@ -669,6 +693,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t      WALK_SUBEXPR ((*c)->ext.dt->sign);\n \t      WALK_SUBEXPR ((*c)->ext.dt->extra_comma);\n \t      break;\n+\n \t    case EXEC_OMP_DO:\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n@@ -689,6 +714,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t    default:\n \t      break;\n \t    }\n+\n \t  WALK_SUBEXPR ((*c)->expr1);\n \t  WALK_SUBEXPR ((*c)->expr2);\n \t  WALK_SUBEXPR ((*c)->expr3);"}, {"sha": "4e245c9467c247aa55c04647eb24bbb940e7a7f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "patch": "@@ -1,3 +1,7 @@\n+2010-12-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* gfortran.dg/character_comparison_7.f90:  New test.\n+\n 2010-12-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/47075"}, {"sha": "7983969a8ba94b142833c940b81e14418266b734", "filename": "gcc/testsuite/gfortran.dg/character_comparison_7.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharacter_comparison_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc81f55980f7c3652a4f9c838c4ff6e825f92e5a/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharacter_comparison_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharacter_comparison_7.f90?ref=bc81f55980f7c3652a4f9c838c4ff6e825f92e5a", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do run }\n+! { dg-options \"-O -fdump-tree-original\" }\n+! Test that expressions in subroutine calls are also optimized\n+program main\n+  implicit none\n+  character(len=4) :: c\n+  c = 'abcd'\n+  call yes(c == c)\n+  call no(c /= c)\n+end program main\n+\n+subroutine yes(a)\n+  implicit none\n+  logical, intent(in) :: a\n+  if (.not. a) call abort\n+end subroutine yes\n+\n+subroutine no(a)\n+  implicit none\n+  logical, intent(in) :: a\n+  if (a) call abort\n+end subroutine no\n+\n+! { dg-final { scan-tree-dump-times \"gfortran_compare_string\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+"}]}