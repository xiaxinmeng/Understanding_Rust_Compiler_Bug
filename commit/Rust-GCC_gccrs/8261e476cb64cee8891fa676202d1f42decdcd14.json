{"sha": "8261e476cb64cee8891fa676202d1f42decdcd14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2MWU0NzZjYjY0Y2VlODg5MWZhNjc2MjAyZDFmNDJkZWNkY2QxNA==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2016-12-02T15:34:36Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2016-12-02T15:34:36Z"}, "message": "Added support for ARMV8-M Security Extension cmse_nonsecure_caller intrinsic\n\n    gcc/ChangeLog:\n    2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\t\tThomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* config/arm/arm-builtins.c (arm_builtins): Define\n\tARM_BUILTIN_CMSE_NONSECURE_CALLER.\n\t(bdesc_2arg): Add line for cmse_nonsecure_caller.\n\t(arm_init_builtins): Handle cmse_nonsecure_caller.\n\t(arm_expand_builtin): Likewise.\n\t* config/arm/arm_cmse.h (cmse_nonsecure_caller): New.\n\n    gcc/testsuite/ChangeLog:\n    2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\t\tThomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* gcc.target/arm/cmse/cmse-1.c: Add test for\n\tcmse_nonsecure_caller.\n\n\nCo-Authored-By: Thomas Preud'homme <thomas.preudhomme@arm.com>\n\nFrom-SVN: r243193", "tree": {"sha": "e595f9c03cad200ba46316eab9d9c01d22da3f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e595f9c03cad200ba46316eab9d9c01d22da3f66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8261e476cb64cee8891fa676202d1f42decdcd14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8261e476cb64cee8891fa676202d1f42decdcd14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8261e476cb64cee8891fa676202d1f42decdcd14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8261e476cb64cee8891fa676202d1f42decdcd14/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c92e08e3d766baf88c7507cd5224d4d241ff8d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c92e08e3d766baf88c7507cd5224d4d241ff8d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c92e08e3d766baf88c7507cd5224d4d241ff8d39"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "65443a19582f2b1dfeeeee2a591e575b4749fcd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -1,3 +1,13 @@\n+2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm-builtins.c (arm_builtins): Define\n+\tARM_BUILTIN_CMSE_NONSECURE_CALLER.\n+\t(bdesc_2arg): Add line for cmse_nonsecure_caller.\n+\t(arm_init_builtins): Handle cmse_nonsecure_caller.\n+\t(arm_expand_builtin): Likewise.\n+\t* config/arm/arm_cmse.h (cmse_nonsecure_caller): New.\n+\n 2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n "}, {"sha": "14444206814fb95268ba5ba008245513b0dc94f1", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -528,6 +528,8 @@ enum arm_builtins\n   ARM_BUILTIN_GET_FPSCR,\n   ARM_BUILTIN_SET_FPSCR,\n \n+  ARM_BUILTIN_CMSE_NONSECURE_CALLER,\n+\n #undef CRYPTO1\n #undef CRYPTO2\n #undef CRYPTO3\n@@ -1833,6 +1835,17 @@ arm_init_builtins (void)\n \t= add_builtin_function (\"__builtin_arm_stfscr\", ftype_set_fpscr,\n \t\t\t\tARM_BUILTIN_SET_FPSCR, BUILT_IN_MD, NULL, NULL_TREE);\n     }\n+\n+  if (use_cmse)\n+    {\n+      tree ftype_cmse_nonsecure_caller\n+\t= build_function_type_list (unsigned_type_node, NULL);\n+      arm_builtin_decls[ARM_BUILTIN_CMSE_NONSECURE_CALLER]\n+\t= add_builtin_function (\"__builtin_arm_cmse_nonsecure_caller\",\n+\t\t\t\tftype_cmse_nonsecure_caller,\n+\t\t\t\tARM_BUILTIN_CMSE_NONSECURE_CALLER, BUILT_IN_MD,\n+\t\t\t\tNULL, NULL_TREE);\n+    }\n }\n \n /* Return the ARM builtin for CODE.  */\n@@ -2453,6 +2466,12 @@ arm_expand_builtin (tree exp,\n       emit_insn (pat);\n       return target;\n \n+    case ARM_BUILTIN_CMSE_NONSECURE_CALLER:\n+      target = gen_reg_rtx (SImode);\n+      op0 = arm_return_addr (0, NULL_RTX);\n+      emit_insn (gen_addsi3 (target, op0, const1_rtx));\n+      return target;\n+\n     case ARM_BUILTIN_TEXTRMSB:\n     case ARM_BUILTIN_TEXTRMUB:\n     case ARM_BUILTIN_TEXTRMSH:"}, {"sha": "82b58b1c4f4a12ba6062e2cc2632653788d0eeb7", "filename": "gcc/config/arm/arm_cmse.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fconfig%2Farm%2Farm_cmse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fconfig%2Farm%2Farm_cmse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_cmse.h?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -163,6 +163,13 @@ __attribute__ ((__always_inline__))\n cmse_TTAT (void *__p)\n __CMSE_TT_ASM (at)\n \n+/* FIXME: diagnose use outside cmse_nonsecure_entry functions.  */\n+__extension__ static __inline int __attribute__ ((__always_inline__))\n+cmse_nonsecure_caller (void)\n+{\n+  return __builtin_arm_cmse_nonsecure_caller ();\n+}\n+\n #define CMSE_AU_NONSECURE\t2\n #define CMSE_MPU_NONSECURE\t16\n #define CMSE_NONSECURE\t\t18"}, {"sha": "a8402e104bd991b4f2c4aa337f20ecc00681f059", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -12666,6 +12666,7 @@ cmse_address_info_t cmse_TTAT_fptr (FPTR)\n void * cmse_check_address_range (void *, size_t, int)\n typeof(p) cmse_nsfptr_create (FPTR p)\n intptr_t cmse_is_nsfptr (FPTR)\n+int cmse_nonsecure_caller (void)\n @end smallexample\n \n @node AVR Built-in Functions"}, {"sha": "7cb66d99693bea49787f5bcd67467274b6a42ba3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -1,3 +1,9 @@\n+2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.target/arm/cmse/cmse-1.c: Add test for\n+\tcmse_nonsecure_caller.\n+\n 2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n "}, {"sha": "c13272eed683aa06db027cd4646e5fe67817212b", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-1.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8261e476cb64cee8891fa676202d1f42decdcd14/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-1.c?ref=8261e476cb64cee8891fa676202d1f42decdcd14", "patch": "@@ -65,3 +65,42 @@ int foo (char * p)\n /* { dg-final { scan-assembler-times \"ttat \" 2 } } */\n /* { dg-final { scan-assembler-times \"bl.cmse_check_address_range\" 7 } } */\n /* { dg-final { scan-assembler-not \"cmse_check_pointed_object\" } } */\n+\n+int __attribute__ ((cmse_nonsecure_entry))\n+baz (void)\n+{\n+  return cmse_nonsecure_caller ();\n+}\n+\n+typedef int __attribute__ ((cmse_nonsecure_call)) (int_nsfunc_t) (void);\n+\n+int default_callback (void)\n+{\n+  return 0;\n+}\n+\n+int_nsfunc_t * fp = (int_nsfunc_t *) default_callback;\n+\n+void __attribute__ ((cmse_nonsecure_entry))\n+qux (int_nsfunc_t * callback)\n+{\n+  fp = cmse_nsfptr_create (callback);\n+}\n+\n+int call_callback (void)\n+{\n+  if (cmse_is_nsfptr (fp))\n+      return fp ();\n+  else\n+    return default_callback ();\n+}\n+/* { dg-final { scan-assembler \"baz:\" } } */\n+/* { dg-final { scan-assembler \"__acle_se_baz:\" } } */\n+/* { dg-final { scan-assembler \"qux:\" } } */\n+/* { dg-final { scan-assembler \"__acle_se_qux:\" } } */\n+/* { dg-final { scan-assembler-not \"\\tcmse_nonsecure_caller\" } } */\n+/* { dg-final { scan-rtl-dump \"and.*reg.*const_int 1\" expand } } */\n+/* { dg-final { scan-assembler \"bic\" } } */\n+/* { dg-final { scan-assembler \"push\\t\\{r4, r5, r6\" } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq\" } } */\n+/* { dg-final { scan-assembler-times \"bl\\\\s+__gnu_cmse_nonsecure_call\" 1 } } */"}]}