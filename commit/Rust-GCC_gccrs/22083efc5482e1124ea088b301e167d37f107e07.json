{"sha": "22083efc5482e1124ea088b301e167d37f107e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwODNlZmM1NDgyZTExMjRlYTA4OGIzMDFlMTY3ZDM3ZjEwN2UwNw==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2007-09-12T15:16:23Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-09-12T15:16:23Z"}, "message": "configure.host: Enable interpreter for mips64.\n\n\t* configure.host: Enable interpreter for mips64.  Enable hash\n\tsynchronization for all mips*-*-linux* targets.\n\t* sysdep/mips/locks.h (compare_and_swap, compare_and_swap_release) Use\n\t__sync_bool_compare_and_swap instead of in-line asm.\n\t(release_set, read_barrier, write_barrier): Use __sync_synchronize\n\tinstead of in-line asm.\n\nFrom-SVN: r128438", "tree": {"sha": "8a37e2c14445db886dc63dac3e8db5e51eeaf54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a37e2c14445db886dc63dac3e8db5e51eeaf54e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22083efc5482e1124ea088b301e167d37f107e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22083efc5482e1124ea088b301e167d37f107e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22083efc5482e1124ea088b301e167d37f107e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22083efc5482e1124ea088b301e167d37f107e07/comments", "author": null, "committer": null, "parents": [{"sha": "b9baeecdcc22a80357e232383421c6cb0cd3ab69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9baeecdcc22a80357e232383421c6cb0cd3ab69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9baeecdcc22a80357e232383421c6cb0cd3ab69"}], "stats": {"total": 74, "additions": 19, "deletions": 55}, "files": [{"sha": "53c1b54d84f75a3f62d007ff47ecebe3b9effa75", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22083efc5482e1124ea088b301e167d37f107e07/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22083efc5482e1124ea088b301e167d37f107e07/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=22083efc5482e1124ea088b301e167d37f107e07", "patch": "@@ -1,3 +1,12 @@\n+2007-09-12  David Daney  <ddaney@avtrex.com>\n+\n+\t* configure.host: Enable interpreter for mips64.  Enable hash\n+\tsynchronization for all mips*-*-linux* targets.\n+\t* sysdep/mips/locks.h (compare_and_swap, compare_and_swap_release) Use\n+\t__sync_bool_compare_and_swap instead of in-line asm.\n+\t(release_set, read_barrier, write_barrier): Use __sync_synchronize\n+\tinstead of in-line asm.\n+\n 2007-09-09  Andreas Tobler  <a.tobler@schweiz.org>\n \n \tPR libgcj/33326"}, {"sha": "7fcfc3934d1d16c68d1210744517c16b3b776846", "filename": "libjava/configure.host", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22083efc5482e1124ea088b301e167d37f107e07/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22083efc5482e1124ea088b301e167d37f107e07/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=22083efc5482e1124ea088b301e167d37f107e07", "patch": "@@ -98,7 +98,7 @@ case \"${host}\" in\n  \tenable_java_net_default=no\n  \tenable_getenv_properties_default=no\n \t;;\n-  mipsel-*|mips-*)\n+  mips*-*)\n \tlibgcj_interpreter=yes\n \t;;\n   i686-*|i586-*|i486-*|i386-*)\n@@ -283,11 +283,7 @@ EOF\n   \tsysdeps_dir=mips\n   \tcan_unwind_signal=yes\n \tDIVIDESPEC=-fno-use-divide-subroutine\n-\tcase \"${host}\" in\n-\t    mipsel*-linux* | mipsisa32el*-linux*)\n-\t\tenable_hash_synchronization_default=yes\n-\t    ;;\n-\tesac\n+\tenable_hash_synchronization_default=yes\n \t;;\n   powerpc*-*-darwin*)\n \tenable_hash_synchronization_default=yes"}, {"sha": "c8e30cf688823e5cbe2da6894a811eed83fa188c", "filename": "libjava/sysdep/mips/locks.h", "status": "modified", "additions": 8, "deletions": 49, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22083efc5482e1124ea088b301e167d37f107e07/libjava%2Fsysdep%2Fmips%2Flocks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22083efc5482e1124ea088b301e167d37f107e07/libjava%2Fsysdep%2Fmips%2Flocks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fmips%2Flocks.h?ref=22083efc5482e1124ea088b301e167d37f107e07", "patch": "@@ -22,29 +22,9 @@ typedef unsigned obj_addr_t __attribute__((__mode__(__pointer__)));\n inline static bool\n compare_and_swap(volatile obj_addr_t *addr,\n                  obj_addr_t old,\n-                 obj_addr_t new_val) \n+                 obj_addr_t new_val)\n {\n-  long result;\n-  __asm__ __volatile__(\".set\\tpush\\n\\t\"\n-                       \".set\\tnoreorder\\n\\t\"\n-                       \".set\\tnomacro\\n\\t\"\n-                       \"1:\\n\\t\"\n-#if _MIPS_SIM == _ABIO32\n-                       \".set\\tmips2\\n\\t\"\n-#endif\n-                       \"ll\\t%[result],0(%[addr])\\n\\t\"\n-                       \"bne\\t%[result],%[old],2f\\n\\t\"\n-                       \"move\\t%[result],$0\\n\\t\"        // delay slot\n-                       \"move\\t%[result],%[new_val]\\n\\t\"\n-                       \"sc\\t%[result],0(%[addr])\\n\\t\"\n-                       \"beq\\t%[result],$0,1b\\n\\t\"\n-                       \"nop\\n\\t\"                       // delay slot\n-                       \"2:\\n\\t\"\n-                       \".set\\tpop\"\n-          : [result] \"=&r\" (result)\n-          : [addr] \"r\" (addr), [new_val] \"r\" (new_val), [old] \"r\"(old)\n-          : \"memory\");\n-  return (bool) result;\n+  return __sync_bool_compare_and_swap(addr, old, new_val);\n }\n \n // Set *addr to new_val with release semantics, i.e. making sure\n@@ -53,12 +33,7 @@ compare_and_swap(volatile obj_addr_t *addr,\n inline static void\n release_set(volatile obj_addr_t *addr, obj_addr_t new_val)\n {\n-  __asm__ __volatile__(\".set\\tpush\\n\\t\"\n-#if _MIPS_SIM == _ABIO32\n-                       \".set\\tmips2\\n\\t\"\n-#endif\n-                       \"sync\\n\\t\"\n-                       \".set\\tpop\" : : : \"memory\");\n+  __sync_synchronize();\n   *(addr) = new_val;\n }\n \n@@ -67,16 +42,10 @@ release_set(volatile obj_addr_t *addr, obj_addr_t new_val)\n // implementation can be the same.\n inline static bool\n compare_and_swap_release(volatile obj_addr_t *addr,\n-\t\t  \t\t\t\t     obj_addr_t old,\n-\t\t\t\t\t\t     obj_addr_t new_val)\n+\t\t\t obj_addr_t old,\n+\t\t\t obj_addr_t new_val)\n {\n-  __asm__ __volatile__(\".set\\tpush\\n\\t\"\n-#if _MIPS_SIM == _ABIO32\n-                       \".set\\tmips2\\n\\t\"\n-#endif\n-                       \"sync\\n\\t\"\n-                       \".set\\tpop\" : : : \"memory\");\n-  return compare_and_swap(addr, old, new_val);\n+  return __sync_bool_compare_and_swap(addr, old, new_val);\n }\n \n // Ensure that subsequent instructions do not execute on stale\n@@ -85,25 +54,15 @@ compare_and_swap_release(volatile obj_addr_t *addr,\n inline static void\n read_barrier()\n {\n-  __asm__ __volatile__(\".set\\tpush\\n\\t\"\n-#if _MIPS_SIM == _ABIO32\n-                       \".set\\tmips2\\n\\t\"\n-#endif\n-                       \"sync\\n\\t\"\n-                       \".set\\tpop\" : : : \"memory\");\n+  __sync_synchronize();\n }\n \n // Ensure that prior stores to memory are completed with respect to other\n // processors.\n inline static void\n write_barrier()\n {\n-  __asm__ __volatile__(\".set\\tpush\\n\\t\"\n-#if _MIPS_SIM == _ABIO32\n-                       \".set\\tmips2\\n\\t\"\n-#endif\n-                       \"sync\\n\\t\"\n-                       \".set\\tpop\" : : : \"memory\");\n+  __sync_synchronize();\n }\n \n #endif   // __SYSDEP_LOCKS_H__"}]}