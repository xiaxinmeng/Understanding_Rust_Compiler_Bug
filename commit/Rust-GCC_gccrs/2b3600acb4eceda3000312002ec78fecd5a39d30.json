{"sha": "2b3600acb4eceda3000312002ec78fecd5a39d30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIzNjAwYWNiNGVjZWRhMzAwMDMxMjAwMmVjNzhmZWNkNWEzOWQzMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-03-18T18:38:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-03-18T18:38:59Z"}, "message": "m68k.c (m68k_last_compare_had_fp_operands): New variable.\n\n        * m68k/m68k.c (m68k_last_compare_had_fp_operands): New variable.\n        * m68k/m68k.h (m68k_last_compare_had_fp_operands): Declare it.\n        * m68k/m68k.md (tst*, cmp*): Turn all of these into\n        define_expand/define_insn pairs.  Keep track of whether or not\n        the test/compare has fp operands.\n        (seq, sne, sgt, slt, sge, sle): Turn these into\n        define_expand/define_insn pairs.  Make the expanders FAIL if\n        TARGET_68060 and the last comparison/test had fp operands.\n\nFrom-SVN: r13731", "tree": {"sha": "97afa754389a4b6eb1eb73901dab73f242a04343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97afa754389a4b6eb1eb73901dab73f242a04343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b3600acb4eceda3000312002ec78fecd5a39d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3600acb4eceda3000312002ec78fecd5a39d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3600acb4eceda3000312002ec78fecd5a39d30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3600acb4eceda3000312002ec78fecd5a39d30/comments", "author": null, "committer": null, "parents": [{"sha": "f57b1ad380462f8b4fd5ce5208b605095f81d50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57b1ad380462f8b4fd5ce5208b605095f81d50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f57b1ad380462f8b4fd5ce5208b605095f81d50b"}], "stats": {"total": 171, "additions": 156, "deletions": 15}, "files": [{"sha": "d41eb0ea1c3a7ca0e52b05f7955e018e51a58587", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=2b3600acb4eceda3000312002ec78fecd5a39d30", "patch": "@@ -68,6 +68,10 @@ int m68k_align_jumps;\n /* Specify power of two alignment used for functions. */\n int m68k_align_funcs;\n \n+/* Nonzero if the last compare/test insn had FP operands.  The\n+   sCC expanders peek at this to determine what to do for the\n+   68060, which has no fsCC instructions.  */\n+int m68k_last_compare_had_fp_operands;\n \n /* Sometimes certain combinations of command options do not make\n    sense on a particular target machine.  You can define a macro"}, {"sha": "918878c04cf80edc3def5f6a5ce37a61a58373ca", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=2b3600acb4eceda3000312002ec78fecd5a39d30", "patch": "@@ -2094,6 +2094,7 @@ extern char *m68k_align_funcs_string;\n extern int m68k_align_loops;\n extern int m68k_align_jumps;\n extern int m68k_align_funcs;\n+extern int m68k_last_compare_had_fp_operands;\n \n \f\n /*"}, {"sha": "64ba09489ec0648c245f7f9d78755e12ec3553d3", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 151, "deletions": 15, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3600acb4eceda3000312002ec78fecd5a39d30/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=2b3600acb4eceda3000312002ec78fecd5a39d30", "patch": "@@ -303,7 +303,15 @@\n ;; (set (cc0) (const_int foo)) has no mode information.  Such insns will\n ;; be folded while optimizing anyway.\n \n-(define_insn \"tstdi\"\n+(define_expand \"tstdi\"\n+  [(set (cc0)\n+\t(match_operand:DI 0 \"nonimmediate_operand\" \"\"))\n+   (clobber (match_scratch:SI 1 \"\"))\n+   (clobber (match_scratch:DI 2 \"\"))]\n+  \"\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(match_operand:DI 0 \"nonimmediate_operand\" \"am,d\"))\n    (clobber (match_scratch:SI 1 \"=X,d\"))\n@@ -335,7 +343,13 @@\n     return \\\"sub%.l %1,%1\\;tst%.l %R0\\;subx%.l %1,%0\\\";\n }\")\n \n-(define_insn \"tstsi\"\n+(define_expand \"tstsi\"\n+  [(set (cc0)\n+\t(match_operand:SI 0 \"nonimmediate_operand\" \"\"))]\n+  \"\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))]\n   \"\"\n@@ -360,13 +374,25 @@\n \n ;; This can't use an address register, because comparisons\n ;; with address registers as second operand always test the whole word.\n-(define_insn \"tsthi\"\n+(define_expand \"tsthi\"\n+  [(set (cc0)\n+\t(match_operand:HI 0 \"nonimmediate_operand\" \"\"))]\n+  \"\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(match_operand:HI 0 \"nonimmediate_operand\" \"dm\"))]\n   \"\"\n   \"tst%.w %0\")\n \n-(define_insn \"tstqi\"\n+(define_expand \"tstqi\"\n+  [(set (cc0)\n+\t(match_operand:QI 0 \"nonimmediate_operand\" \"\"))]\n+  \"\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(match_operand:QI 0 \"nonimmediate_operand\" \"dm\"))]\n   \"\"\n@@ -378,6 +404,7 @@\n   \"TARGET_68881 || TARGET_FPA\"\n   \"\n {\n+  m68k_last_compare_had_fp_operands = 1;\n   if (TARGET_FPA)\n     {\n       emit_insn (gen_tstsf_fpa (operands[0]));\n@@ -410,6 +437,7 @@\n   \"TARGET_68881 || TARGET_FPA\"\n   \"\n {\n+  m68k_last_compare_had_fp_operands = 1;\n   if (TARGET_FPA)\n     {\n       emit_insn (gen_tstsf_fpa (operands[0]));\n@@ -445,7 +473,7 @@\n \t\t   (match_operand:DI 1 \"general_operand\" \"\")))\n      (clobber (match_dup 2))])]\n   \"\"\n-  \"operands[2] = gen_reg_rtx (DImode);\")\n+  \"m68k_last_compare_had_fp_operands = 0; operands[2] = gen_reg_rtx (DImode);\")\n \n (define_insn \"\"\n   [(set (cc0)\n@@ -473,6 +501,7 @@\n   \"\"\n   \"\n {\n+  m68k_last_compare_had_fp_operands = 0;\n   if (flag_pic && symbolic_operand (operands[1], SImode))\n     {\n       /* The source is an address which requires PIC relocation.\n@@ -538,7 +567,14 @@\n #endif\n }\")\n \n-(define_insn \"cmphi\"\n+(define_expand \"cmphi\"\n+  [(set (cc0)\n+\t(compare (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:HI 1 \"general_operand\" \"\")))]\n+  \"!TARGET_5200\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare (match_operand:HI 0 \"nonimmediate_operand\" \"rnm,d,n,m,>\")\n \t\t (match_operand:HI 1 \"general_operand\" \"d,rnm,m,n,>\")))]\n@@ -567,7 +603,14 @@\n #endif\n }\")\n \n-(define_insn \"cmpqi\"\n+(define_expand \"cmpqi\"\n+  [(set (cc0)\n+\t(compare (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:QI 1 \"general_operand\" \"\")))]\n+  \"!TARGET_5200\"\n+  \"m68k_last_compare_had_fp_operands = 0;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare (match_operand:QI 0 \"nonimmediate_operand\" \"dn,md,>\")\n \t\t (match_operand:QI 1 \"general_operand\" \"dm,nd,>\")))]\n@@ -603,6 +646,7 @@\n   \"TARGET_68881 || TARGET_FPA\"\n   \"\n {\n+  m68k_last_compare_had_fp_operands = 1;\n   if (TARGET_FPA)\n     {\n       emit_insn (gen_cmpdf_fpa (operands[0], operands[1]));\n@@ -656,6 +700,7 @@\n  \"TARGET_68881 || TARGET_FPA\"\n  \"\n {\n+  m68k_last_compare_had_fp_operands = 1;\n   if (TARGET_FPA)\n     {\n       emit_insn (gen_cmpsf_fpa (operands[0], operands[1]));\n@@ -5332,7 +5377,20 @@\n   return output_scc_di (operands[1], operands[2], operands[3], operands[0]);\n } \")\n \n-(define_insn \"seq\"\n+(define_expand \"seq\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(eq:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(eq:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -5341,7 +5399,20 @@\n   OUTPUT_JUMP (\\\"seq %0\\\", \\\"fseq %0\\\", \\\"seq %0\\\");\n \")\n \n-(define_insn \"sne\"\n+(define_expand \"sne\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(ne:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(ne:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -5350,7 +5421,20 @@\n   OUTPUT_JUMP (\\\"sne %0\\\", \\\"fsne %0\\\", \\\"sne %0\\\");\n \")\n \n-(define_insn \"sgt\"\n+(define_expand \"sgt\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(gt:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(gt:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -5366,7 +5450,20 @@\n   \"* cc_status = cc_prev_status;\n      return \\\"shi %0\\\"; \")\n \n-(define_insn \"slt\"\n+(define_expand \"slt\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(lt:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(lt:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -5380,7 +5477,20 @@\n   \"* cc_status = cc_prev_status;\n      return \\\"scs %0\\\"; \")\n \n-(define_insn \"sge\"\n+(define_expand \"sge\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(ge:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(ge:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -5394,7 +5504,20 @@\n   \"* cc_status = cc_prev_status;\n      return \\\"scc %0\\\"; \")\n \n-(define_insn \"sle\"\n+(define_expand \"sle\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(le:QI (cc0) (const_int 0)))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_68060 && m68k_last_compare_had_fp_operands)\n+    {\n+      m68k_last_compare_had_fp_operands = 0;\n+      FAIL;\n+    }\n+}\")\n+\n+(define_insn \"\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(le:QI (cc0) (const_int 0)))]\n   \"\"\n@@ -6844,7 +6967,13 @@\n    fpsm%.s %x3,%2,%x1,%0\n    fpsm%.s %x3,%2,%x1,%0\")\n \n-(define_insn \"tstxf\"\n+(define_expand \"tstxf\"\n+  [(set (cc0)\n+\t(match_operand:XF 0 \"nonimmediate_operand\" \"\"))]\n+  \"TARGET_68881\"\n+  \"m68k_last_compare_had_fp_operands = 1;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(match_operand:XF 0 \"nonimmediate_operand\" \"fm\"))]\n   \"TARGET_68881\"\n@@ -6854,7 +6983,14 @@\n   return \\\"ftst%.x %0\\\";\n }\")\n \n-(define_insn \"cmpxf\"\n+(define_expand \"cmpxf\"\n+  [(set (cc0)\n+\t(compare (match_operand:XF 0 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:XF 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_68881\"\n+  \"m68k_last_compare_had_fp_operands = 1;\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare (match_operand:XF 0 \"nonimmediate_operand\" \"f,m\")\n \t\t (match_operand:XF 1 \"nonimmediate_operand\" \"fm,f\")))]"}]}