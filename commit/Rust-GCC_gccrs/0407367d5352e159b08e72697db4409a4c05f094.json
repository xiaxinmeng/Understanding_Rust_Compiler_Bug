{"sha": "0407367d5352e159b08e72697db4409a4c05f094", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwNzM2N2Q1MzUyZTE1OWIwOGU3MjY5N2RiNDQwOWE0YzA1ZjA5NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-28T23:32:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-28T23:32:44Z"}, "message": "(convert_move): Added handling of PDImode conversions.\n\nFrom-SVN: r8161", "tree": {"sha": "83d7544b2cac84fbe72d9953656dae1575b2c0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83d7544b2cac84fbe72d9953656dae1575b2c0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0407367d5352e159b08e72697db4409a4c05f094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0407367d5352e159b08e72697db4409a4c05f094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0407367d5352e159b08e72697db4409a4c05f094", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0407367d5352e159b08e72697db4409a4c05f094/comments", "author": null, "committer": null, "parents": [{"sha": "f1ed434da0fe589533a3f666a97e87fca3238654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ed434da0fe589533a3f666a97e87fca3238654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ed434da0fe589533a3f666a97e87fca3238654"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "743f8095676a5e536d5d50a648cdaee0e36ec51b", "filename": "gcc/expr.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407367d5352e159b08e72697db4409a4c05f094/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407367d5352e159b08e72697db4409a4c05f094/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0407367d5352e159b08e72697db4409a4c05f094", "patch": "@@ -1025,6 +1025,41 @@ convert_move (to, from, unsignedp)\n \t}\n     }\n \n+  if (to_mode == PDImode)\n+    {\n+      if (from_mode != DImode)\n+\tfrom = convert_to_mode (DImode, from, unsignedp);\n+\n+#ifdef HAVE_truncdipdi2\n+      if (HAVE_truncdipdi2)\n+\t{\n+\t  emit_unop_insn (CODE_FOR_truncdipdi2, to, from, UNKNOWN);\n+\t  return;\n+\t}\n+#endif /* HAVE_truncdipdi2 */\n+      abort ();\n+    }\n+\n+  if (from_mode == PDImode)\n+    {\n+      if (to_mode != DImode)\n+\t{\n+\t  from = convert_to_mode (DImode, from, unsignedp);\n+\t  from_mode = DImode;\n+\t}\n+      else\n+\t{\n+#ifdef HAVE_extendpdidi2\n+\t  if (HAVE_extendpdidi2)\n+\t    {\n+\t      emit_unop_insn (CODE_FOR_extendpdidi2, to, from, UNKNOWN);\n+\t      return;\n+\t    }\n+#endif /* HAVE_extendpdidi2 */\n+\t  abort ();\n+\t}\n+    }\n+\n   /* Now follow all the conversions between integers\n      no more than a word long.  */\n "}]}