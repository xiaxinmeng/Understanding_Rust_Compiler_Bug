{"sha": "92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhN2Y0NmIwOWQ4MjVlOWMxOGIzZjdlOTE1NDQ5NWY4MmIwMWU1Yw==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rv@rasmusvillemoes.dk", "date": "2018-10-16T09:40:27Z"}, "committer": {"name": "Rasmus Villemoes", "email": "villemoes@gcc.gnu.org", "date": "2018-10-16T09:40:27Z"}, "message": "fixincludes: vxworks: regs.h: Fix includes in regs.h wrapper\n\nA quick experiment reveals that this hack is needed for C code - simply\nremoving this hack entirely breaks the build of libstdc++, since\nregs.h (more accurately, the cpu-specific header it pulls in) defines\nstructs in terms of types from vxTypesOld. Those definitions are\nproperly guarded by #ifndef _ASMLANGUAGE, but the cpu-files do not take\ncare to include vxTypesOld.h for the types they depend on.\n\nBut when using regs.h from some assembly file, the assembler chokes on\nthe typedefs in vxTypesOld.h. We can fix that by guarding the include of\nvxTypesOld by !_ASMLANGUAGE. This should not affect existing C code.\n\nNow, the OS' regs.h contains preprocessor conditionals such as\n\n#if     CPU_FAMILY==I960\n...\n#endif  /* CPU_FAMILY==I960 */\n#if     CPU_FAMILY==MC680X0\n...\n#endif  /* CPU_FAMILY==MC680X0 */\n\nWithout definitions of CPU_FAMILY, I960 etc., these would all be true,\nwhich will not end well. Code using the fix-included regs.h\nautomatically get vxCpu.h via a chain of includes from vxTypesOld.h, but\nwe can make regs.h a little more self-contained for both C and asm users\nby doing an explicit include of vxCpu.h.\n\nFrom-SVN: r265187", "tree": {"sha": "3251f4094fc4497acdcdabc5fec7edc90fe23c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3251f4094fc4497acdcdabc5fec7edc90fe23c89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/comments", "author": {"login": "Villemoes", "id": 4375908, "node_id": "MDQ6VXNlcjQzNzU5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4375908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villemoes", "html_url": "https://github.com/Villemoes", "followers_url": "https://api.github.com/users/Villemoes/followers", "following_url": "https://api.github.com/users/Villemoes/following{/other_user}", "gists_url": "https://api.github.com/users/Villemoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villemoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villemoes/subscriptions", "organizations_url": "https://api.github.com/users/Villemoes/orgs", "repos_url": "https://api.github.com/users/Villemoes/repos", "events_url": "https://api.github.com/users/Villemoes/events{/privacy}", "received_events_url": "https://api.github.com/users/Villemoes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca3a27b6389aceef621dc64f4867b4c14868fe11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3a27b6389aceef621dc64f4867b4c14868fe11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3a27b6389aceef621dc64f4867b4c14868fe11"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "e7223659ab693c934095c5570ca685a845fafa05", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "patch": "@@ -1,3 +1,10 @@\n+2018-10-16  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* inclhack.def (AAB_vxworks_regs_vxtypes): Add unconditional\n+\tinclude of vxCpu.h, guard include of vxTypesOld.h by\n+\t!_ASMLANGUAGE.\n+\t* fixincl.x: Regenerate.\n+\n 2018-09-03  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n \n \t* inclhack.def (vxworks_ioctl_macro): Remove parentheses from"}, {"sha": "ad5824da01517a7f560e112a446a0526fa8e74bf", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  September  3, 2018 at 03:24:05 PM by AutoGen 5.18.7\n+ * It has been AutoGen-ed  October 16, 2018 at 11:38:39 AM by AutoGen 5.18.7\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Sep  3 15:24:05 CEST 2018\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Oct 16 11:38:39 CEST 2018\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -579,7 +579,17 @@ tSCC* apzAab_Vxworks_Regs_VxtypesMachs[] = {\n static const char* apzAab_Vxworks_Regs_VxtypesPatch[] = {\n \"#ifndef _REGS_H\\n\\\n #define _REGS_H\\n\\\n+/* regs.h depends on CPU_FAMILY being properly defined, which\\n\\\n+   is done by vxCpu.h.  */\\n\\\n+#include <types/vxCpu.h>\\n\\\n+/* regs.h includes a CPU_FAMILY-specific header that requires\\n\\\n+   vxTypesOld.h to already have been included.  Those headers\\n\\\n+   contain proper _ASMLANGUAGE guards around their typedefs,\\n\\\n+   but vxTypesOld.h itself does not. So we avoid including\\n\\\n+   vxTypesOld.h from assembly.  */\\n\\\n+#ifndef _ASMLANGUAGE\\n\\\n #include <types/vxTypesOld.h>\\n\\\n+#endif\\n\\\n #include_next <arch/../regs.h>\\n\\\n #endif\",\n     (char*)NULL };"}, {"sha": "8fd9f7ef295e2bb5f0c5872b529fc813ea8bee9f", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7f46b09d825e9c18b3f7e9154495f82b01e5c/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=92a7f46b09d825e9c18b3f7e9154495f82b01e5c", "patch": "@@ -426,7 +426,17 @@ fix = {\n     replace     = <<- _EndOfHeader_\n \t#ifndef _REGS_H\n \t#define _REGS_H\n+\t/* regs.h depends on CPU_FAMILY being properly defined, which\n+\t   is done by vxCpu.h.  */\n+\t#include <types/vxCpu.h>\n+\t/* regs.h includes a CPU_FAMILY-specific header that requires\n+\t   vxTypesOld.h to already have been included.  Those headers\n+\t   contain proper _ASMLANGUAGE guards around their typedefs,\n+\t   but vxTypesOld.h itself does not. So we avoid including\n+\t   vxTypesOld.h from assembly.  */\n+\t#ifndef _ASMLANGUAGE\n \t#include <types/vxTypesOld.h>\n+\t#endif\n \t#include_next <arch/../regs.h>\n \t#endif\n \t_EndOfHeader_;"}]}