{"sha": "3f880d38dc55082cf671731ab4424b3808bbaf30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y4ODBkMzhkYzU1MDgyY2Y2NzE3MzFhYjQ0MjRiMzgwOGJiYWYzMA==", "commit": {"author": {"name": "Alex Velenko", "email": "Alex.Velenko@arm.com", "date": "2015-02-16T18:12:10Z"}, "committer": {"name": "Alex Velenko", "email": "avelenko@gcc.gnu.org", "date": "2015-02-16T18:12:10Z"}, "message": "atomic-op-consume.c (scan-assember-times): Directive adjusted to scan for ldaxr.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/atomic-op-consume.c (scan-assember-times):\n\tDirective adjusted to scan for ldaxr.\n\t* gcc.target/arm/atomic-op-consume.c (scan-assember-times): Directive\n\tadjusted to scan for ldaex.\n\nFrom-SVN: r220740", "tree": {"sha": "43a933a7f4369c99e96697e68b1b999487ec30f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43a933a7f4369c99e96697e68b1b999487ec30f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f880d38dc55082cf671731ab4424b3808bbaf30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f880d38dc55082cf671731ab4424b3808bbaf30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f880d38dc55082cf671731ab4424b3808bbaf30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f880d38dc55082cf671731ab4424b3808bbaf30/comments", "author": null, "committer": null, "parents": [{"sha": "205c0affcacc9b87200fe4ac066610a81263391c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205c0affcacc9b87200fe4ac066610a81263391c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/205c0affcacc9b87200fe4ac066610a81263391c"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "abc735816a2fb65972aebc4de8ee93f0fddabb9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f880d38dc55082cf671731ab4424b3808bbaf30", "patch": "@@ -1,3 +1,10 @@\n+2015-02-16  Alex Velenko  <Alex.Velenko@arm.com>\n+\n+\t* gcc.target/aarch64/atomic-op-consume.c (scan-assember-times):\n+\tDirective adjusted to scan for ldaxr.\n+\t* gcc.target/arm/atomic-op-consume.c (scan-assember-times): Directive\n+\tadjusted to scan for ldaex.\n+\n 2015-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65080"}, {"sha": "26ebbdf70aba3828482868c2ac18ad2cf8876c1e", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-consume.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c?ref=3f880d38dc55082cf671731ab4424b3808bbaf30", "patch": "@@ -3,6 +3,6 @@\n \n #include \"atomic-op-consume.x\"\n \n-/* PR59448 consume not implemented yet.  */\n-/* { dg-final { scan-assembler-times \"ldxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 { xfail *-*-* } } } */\n+/* Scan for ldaxr is a PR59448 consume workaround.  */\n+/* { dg-final { scan-assembler-times \"ldaxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "6c5f989726138507b20d7fe02ed1c6e9d6b0a880", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f880d38dc55082cf671731ab4424b3808bbaf30/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c?ref=3f880d38dc55082cf671731ab4424b3808bbaf30", "patch": "@@ -5,7 +5,7 @@\n \n #include \"../aarch64/atomic-op-consume.x\"\n \n-/* PR59448 consume not implemented yet.  */\n-/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 { xfail *-*-* } } } */\n+/* Scan for ldaex is a PR59448 consume workaround.  */\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-not \"dmb\" } } */"}]}