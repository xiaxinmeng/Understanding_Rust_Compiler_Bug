{"sha": "825bd25cb621ed2f6c88ff32c8604372de61dc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1YmQyNWNiNjIxZWQyZjZjODhmZjMyYzg2MDQzNzJkZTYxZGM0Zg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-06-17T00:03:24Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-06-17T00:03:24Z"}, "message": "simplify-rtx.c (simplify_subreg): Do not over-extend vector constants.\n\n2003-06-16  Aldy Hernandez  <aldyh@redhat.com>\n\n\t* simplify-rtx.c (simplify_subreg): Do not over-extend vector\n\tconstants.\n\n\t* testsuite/gcc.c-torture/execute/simd-4.c: New.\n\n[[Split portion of a mixed commit.]]\n\nFrom-SVN: r68047.2", "tree": {"sha": "74fd80ca70747089c5d2d3c9bfaffdbd0a52e6fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74fd80ca70747089c5d2d3c9bfaffdbd0a52e6fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825bd25cb621ed2f6c88ff32c8604372de61dc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825bd25cb621ed2f6c88ff32c8604372de61dc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825bd25cb621ed2f6c88ff32c8604372de61dc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825bd25cb621ed2f6c88ff32c8604372de61dc4f/comments", "author": null, "committer": null, "parents": [{"sha": "c24851dee56337fd1d88a87749792980cf0d30bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24851dee56337fd1d88a87749792980cf0d30bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24851dee56337fd1d88a87749792980cf0d30bc"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "132b3aba37555b679ac8c673868a9ee7677802ae", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825bd25cb621ed2f6c88ff32c8604372de61dc4f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825bd25cb621ed2f6c88ff32c8604372de61dc4f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=825bd25cb621ed2f6c88ff32c8604372de61dc4f", "patch": "@@ -2657,6 +2657,10 @@ simplify_subreg (outermode, op, innermode, byte)\n \t  unsigned i = BYTES_BIG_ENDIAN ? offset : offset + n_elts - 1;\n \t  unsigned step = BYTES_BIG_ENDIAN ? 1 : -1;\n \t  int shift = BITS_PER_UNIT * elt_size;\n+\t  unsigned HOST_WIDE_INT unit_mask;\n+\n+\t  unit_mask = (unsigned HOST_WIDE_INT) -1\n+\t    >> (sizeof (HOST_WIDE_INT) * BITS_PER_UNIT - shift);\n \n \t  for (; n_elts--; i += step)\n \t    {\n@@ -2675,7 +2679,7 @@ simplify_subreg (outermode, op, innermode, byte)\n \t      if (high >> (HOST_BITS_PER_WIDE_INT - shift))\n \t\treturn NULL_RTX;\n \t      high = high << shift | sum >> (HOST_BITS_PER_WIDE_INT - shift);\n-\t      sum = (sum << shift) + INTVAL (elt);\n+\t      sum = (sum << shift) + (INTVAL (elt) & unit_mask);\n \t    }\n \t  if (GET_MODE_BITSIZE (outermode) <= HOST_BITS_PER_WIDE_INT)\n \t    return GEN_INT (trunc_int_for_mode (sum, outermode));"}, {"sha": "c8ddb534603bb4a8a5944db8099cd21b36e4a64c", "filename": "gcc/testsuite/gcc.c-torture/execute/simd-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825bd25cb621ed2f6c88ff32c8604372de61dc4f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825bd25cb621ed2f6c88ff32c8604372de61dc4f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c?ref=825bd25cb621ed2f6c88ff32c8604372de61dc4f", "patch": "@@ -0,0 +1,16 @@\n+typedef int __attribute__((vector_size(8))) v2si;\n+long long s64;\n+\n+static inline long long\n+__ev_convert_s64 (v2si a)\n+{\n+  return (long long) a;\n+}\n+\n+int main()\n+{\n+  s64 = __ev_convert_s64 ((v2si){1,0xffffffff});\n+  if (s64 != 0x1ffffffffLL)\n+    abort ();\n+  return 0;\n+}"}]}