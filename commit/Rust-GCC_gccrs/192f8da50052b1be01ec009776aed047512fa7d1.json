{"sha": "192f8da50052b1be01ec009776aed047512fa7d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyZjhkYTUwMDUyYjFiZTAxZWMwMDk3NzZhZWQwNDc1MTJmYTdkMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-15T09:43:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-15T09:43:01Z"}, "message": "re PR lto/44150 (g++.dg/lto/20081109 cp_lto_20081109_0.o-cp_lto_20081109_1.o)\n\n2010-11-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/44150\n\t* lto-opts.c (lto_write_options): Write -fexceptions even if\n\tnot set by the user.\n\nFrom-SVN: r166744", "tree": {"sha": "74b6548bdd26130fbb79820bade116e8b13b1ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74b6548bdd26130fbb79820bade116e8b13b1ccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/192f8da50052b1be01ec009776aed047512fa7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192f8da50052b1be01ec009776aed047512fa7d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192f8da50052b1be01ec009776aed047512fa7d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192f8da50052b1be01ec009776aed047512fa7d1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db710796abeb37e6a8ed8bc148c288107bc87636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db710796abeb37e6a8ed8bc148c288107bc87636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db710796abeb37e6a8ed8bc148c288107bc87636"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "08864a5bec1b7506adf5485a63ab0856f98a15c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192f8da50052b1be01ec009776aed047512fa7d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192f8da50052b1be01ec009776aed047512fa7d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=192f8da50052b1be01ec009776aed047512fa7d1", "patch": "@@ -1,3 +1,9 @@\n+2010-11-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44150\n+\t* lto-opts.c (lto_write_options): Write -fexceptions even if\n+\tnot set by the user.\n+\n 2010-11-13  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR c/46462"}, {"sha": "807f55b227fcddc858ec06f383bae5efcc419b3f", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192f8da50052b1be01ec009776aed047512fa7d1/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192f8da50052b1be01ec009776aed047512fa7d1/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=192f8da50052b1be01ec009776aed047512fa7d1", "patch": "@@ -299,6 +299,13 @@ lto_write_options (void)\n   struct lto_simple_header header;\n   struct lto_output_stream *header_stream;\n \n+  /* Targets and languages can provide defaults for -fexceptions but\n+     we only process user options from the command-line.  Until we\n+     serialize out a white list of options from the new global state\n+     explicitly append important options as user options here.  */\n+  if (flag_exceptions)\n+    lto_register_user_option (OPT_fexceptions, NULL, 1, CL_COMMON);\n+\n   lto_begin_section (section_name, !flag_wpa);\n   free (section_name);\n "}]}