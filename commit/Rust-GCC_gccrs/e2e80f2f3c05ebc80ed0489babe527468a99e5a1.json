{"sha": "e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlODBmMmYzYzA1ZWJjODBlZDA0ODliYWJlNTI3NDY4YTk5ZTVhMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-23T23:29:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-23T23:29:51Z"}, "message": "PR c++/79056 - C++17 ICE with invalid template syntax.\n\n\t* parser.c (cp_parser_simple_type_specifier): Don't assume that type\n\tis a TYPE_DECL.\n\t(cp_parser_check_for_invalid_template_id): Handle TYPE_DECL.\n\t* pt.c (template_placeholder_p): New.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r249614", "tree": {"sha": "89321169b9afe369809cbf60b8fd80fbb0a0593a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89321169b9afe369809cbf60b8fd80fbb0a0593a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee444c5f45985c29dcf5b4341f05a0bd15cc1897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee444c5f45985c29dcf5b4341f05a0bd15cc1897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee444c5f45985c29dcf5b4341f05a0bd15cc1897"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "2d590a5d66f074964a74038572cd62beda98de5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "patch": "@@ -1,3 +1,12 @@\n+2017-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/79056 - C++17 ICE with invalid template syntax.\n+\t* parser.c (cp_parser_simple_type_specifier): Don't assume that type\n+\tis a TYPE_DECL.\n+\t(cp_parser_check_for_invalid_template_id): Handle TYPE_DECL.\n+\t* pt.c (template_placeholder_p): New.\n+\t* cp-tree.h: Declare it.\n+\n 2017-06-23  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* decl.c (duplicate_decls): Use builtin_structptr_types."}, {"sha": "33dde158dae269e8fd8ee2ca3b46c1b7fd498743", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "patch": "@@ -6413,6 +6413,7 @@ extern void check_template_variable\t\t(tree);\n extern tree make_auto\t\t\t\t(void);\n extern tree make_decltype_auto\t\t\t(void);\n extern tree make_template_placeholder\t\t(tree);\n+extern bool template_placeholder_p\t\t(tree);\n extern tree do_auto_deduction                   (tree, tree, tree);\n extern tree do_auto_deduction                   (tree, tree, tree,\n                                                  tsubst_flags_t,"}, {"sha": "97cd9237bf20e44973bb433e789013f6a18fd023", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "patch": "@@ -2983,7 +2983,9 @@ cp_parser_check_for_invalid_template_id (cp_parser* parser,\n \n   if (cp_lexer_next_token_is (parser->lexer, CPP_LESS))\n     {\n-      if (TYPE_P (type))\n+      if (TREE_CODE (type) == TYPE_DECL)\n+\ttype = TREE_TYPE (type);\n+      if (TYPE_P (type) && !template_placeholder_p (type))\n \terror_at (location, \"%qT is not a template\", type);\n       else if (identifier_p (type))\n \t{\n@@ -17060,7 +17062,7 @@ cp_parser_simple_type_specifier (cp_parser* parser,\n       /* There is no valid C++ program where a non-template type is\n \t followed by a \"<\".  That usually indicates that the user\n \t thought that the type was a template.  */\n-      cp_parser_check_for_invalid_template_id (parser, TREE_TYPE (type),\n+      cp_parser_check_for_invalid_template_id (parser, type,\n \t\t\t\t\t       none_type,\n \t\t\t\t\t       token->location);\n     }"}, {"sha": "392fba07714b30b17a5ba41cd7719b06628fdf34", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "patch": "@@ -24799,6 +24799,14 @@ make_template_placeholder (tree tmpl)\n   return t;\n }\n \n+/* True iff T is a C++17 class template deduction placeholder.  */\n+\n+bool\n+template_placeholder_p (tree t)\n+{\n+  return is_auto (t) && CLASS_PLACEHOLDER_TEMPLATE (t);\n+}\n+\n /* Make a \"constrained auto\" type-specifier. This is an\n    auto type with constraints that must be associated after\n    deduction.  The constraint is formed from the given"}, {"sha": "6868bc8528534c8c4b4d556355edec482898b2be", "filename": "gcc/testsuite/g++.dg/parse/template28.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e80f2f3c05ebc80ed0489babe527468a99e5a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate28.C?ref=e2e80f2f3c05ebc80ed0489babe527468a99e5a1", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/79056\n+\n+template<class> struct A {};\n+\n+template<class T> void foo(A<T>=A<T>()) {} // { dg-error \"\" }\n+\n+void bar()\n+{\n+  foo(A<int>());\t\t// { dg-error \"\" }\n+}"}]}