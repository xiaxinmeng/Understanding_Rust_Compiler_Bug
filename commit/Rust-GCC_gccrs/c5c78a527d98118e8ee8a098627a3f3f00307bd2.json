{"sha": "c5c78a527d98118e8ee8a098627a3f3f00307bd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjNzhhNTI3ZDk4MTE4ZThlZThhMDk4NjI3YTNmM2YwMDMwN2JkMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-02-28T15:13:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-02-28T15:13:16Z"}, "message": "runtime: fix sigfwd to not allocate memory\n    \n    The use of &[1]uintptr{fn} was causing sigfwd to allocate memory, even\n    though it is being compiled for the runtime package.  That is a bad\n    idea for this function, which is invoked by a signal handler.  Rewrite\n    it to use only constructs that do not allocate memory when compiled\n    for the runtime package.\n    \n    The test for this is misc/cgo/testcarchive in the main repo, which we\n    don't yet test.\n    \n    Reviewed-on: https://go-review.googlesource.com/37454\n\nFrom-SVN: r245777", "tree": {"sha": "fc4c1d5e48b8405527572ac35f9bbf74d5e442f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc4c1d5e48b8405527572ac35f9bbf74d5e442f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5c78a527d98118e8ee8a098627a3f3f00307bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c78a527d98118e8ee8a098627a3f3f00307bd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5c78a527d98118e8ee8a098627a3f3f00307bd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c78a527d98118e8ee8a098627a3f3f00307bd2/comments", "author": null, "committer": null, "parents": [{"sha": "5d805ca6229a56bc74337689d2a7129a14185e16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d805ca6229a56bc74337689d2a7129a14185e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d805ca6229a56bc74337689d2a7129a14185e16"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "3f3dddeb5e727d245b1a7139e34c6ddd5d9cf956", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c78a527d98118e8ee8a098627a3f3f00307bd2/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c78a527d98118e8ee8a098627a3f3f00307bd2/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=c5c78a527d98118e8ee8a098627a3f3f00307bd2", "patch": "@@ -1,4 +1,4 @@\n-0bcc1bc98dca48af40d9f54f4eacbbafaa30beb1\n+e1502234b5011a1ab859519f1f217dbf4369ec9b\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "b4257c9f973109b2c4b977b4a2fe49b0803d2580", "filename": "libgo/go/runtime/signal_gccgo.go", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c78a527d98118e8ee8a098627a3f3f00307bd2/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c78a527d98118e8ee8a098627a3f3f00307bd2/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go?ref=c5c78a527d98118e8ee8a098627a3f3f00307bd2", "patch": "@@ -127,9 +127,10 @@ func raiseproc(sig uint32) {\n //go:nosplit\n //go:nowritebarrierrec\n func sigfwd(fn uintptr, sig uint32, info *_siginfo_t, ctx unsafe.Pointer) {\n-\tf1 := &[1]uintptr{fn}\n-\tf2 := *(*func(uint32, *_siginfo_t, unsafe.Pointer))(unsafe.Pointer(&f1))\n-\tf2(sig, info, ctx)\n+\tf1 := [1]uintptr{fn}\n+\tf2 := &f1\n+\tf3 := *(*func(uint32, *_siginfo_t, unsafe.Pointer))(unsafe.Pointer(&f2))\n+\tf3(sig, info, ctx)\n }\n \n //go:nosplit"}]}