{"sha": "0aa54da2ef5219a097442dfeb17b082b6361d41b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFhNTRkYTJlZjUyMTlhMDk3NDQyZGZlYjE3YjA4MmI2MzYxZDQxYg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-06-10T11:25:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-06-10T11:25:47Z"}, "message": "sh.h (TARGET_HARWARD, [...]): Changed the former to the latter.\n\n\t* sh.h (TARGET_HARWARD, TARGET_HARVARD): Changed the former to the\n\tlatter.\n\t* sh.md (ic_invalidate_line_i): Remove second alternative.\n\nFrom-SVN: r27469", "tree": {"sha": "1e822dc240f5b1377bd418e8ff0ab9289dda3234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e822dc240f5b1377bd418e8ff0ab9289dda3234"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aa54da2ef5219a097442dfeb17b082b6361d41b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa54da2ef5219a097442dfeb17b082b6361d41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aa54da2ef5219a097442dfeb17b082b6361d41b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa54da2ef5219a097442dfeb17b082b6361d41b/comments", "author": null, "committer": null, "parents": [{"sha": "b4e01caa36a6984d4225c95ad7df7d77468d18b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e01caa36a6984d4225c95ad7df7d77468d18b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e01caa36a6984d4225c95ad7df7d77468d18b0"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "825a4ee79be7965b17e1d636edaadaef8b4c5b05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0aa54da2ef5219a097442dfeb17b082b6361d41b", "patch": "@@ -1,3 +1,10 @@\n+Thu Jun 10 19:23:00 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.h (TARGET_HARWARD, TARGET_HARVARD): Changed the former to the\n+\tlatter.\n+\n+\t* sh.md (ic_invalidate_line_i): Remove second alternative.\n+\n Thu Jun 10 06:55 1999  Bruce Korb <ddsinc09@ix.netcom.com>\n \n \t*fixinc/inclhack.def(sun_auth_proto): We do not know how to"}, {"sha": "23c315f09c7635ad4231181fe05c98f60476d205", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=0aa54da2ef5219a097442dfeb17b082b6361d41b", "patch": "@@ -131,7 +131,7 @@ extern int target_flags;\n #define TARGET_SUPERSCALAR (target_flags & HARD_SH4_BIT)\n \n /* Nonzero if the target has separate instruction and data caches.  */\n-#define TARGET_HARWARD (target_flags & HARD_SH4_BIT)\n+#define TARGET_HARVARD (target_flags & HARD_SH4_BIT)\n \n /* Nonzero if compiling for SH4 hardware (to be used for insn costs etc.)  */\n #define TARGET_HARD_SH4 (target_flags & HARD_SH4_BIT)\n@@ -354,7 +354,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   barrier_align (LABEL_AFTER_BARRIER)\n \n #define LOOP_ALIGN(A_LABEL) \\\n-  ((! optimize || TARGET_HARWARD || TARGET_SMALLCODE) ? 0 : 2)\n+  ((! optimize || TARGET_HARVARD || TARGET_SMALLCODE) ? 0 : 2)\n \n #define LABEL_ALIGN(A_LABEL) \\\n (\t\t\t\t\t\t\t\t\t\\\n@@ -1123,7 +1123,7 @@ extern int current_function_anonymous_args;\n \n /* Alignment required for a trampoline in bits .  */\n #define TRAMPOLINE_ALIGNMENT \\\n-  ((CACHE_LOG < 3 || TARGET_SMALLCODE && ! TARGET_HARWARD) ? 32 : 64)\n+  ((CACHE_LOG < 3 || TARGET_SMALLCODE && ! TARGET_HARVARD) ? 32 : 64)\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n@@ -1139,7 +1139,7 @@ extern int current_function_anonymous_args;\n \t\t  (CXT));\t\t\t\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 12)),\t\\\n \t\t  (FNADDR));\t\t\t\t\t\t\\\n-  if (TARGET_HARWARD)\t\t\t\t\t\t\t\\\n+  if (TARGET_HARVARD)\t\t\t\t\t\t\t\\\n     emit_insn (gen_ic_invalidate_line (TRAMP));\t\t\t\t\\\n }\n "}, {"sha": "2acbb0f157d624c18c9dc92776dbaebd482c16bb", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa54da2ef5219a097442dfeb17b082b6361d41b/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=0aa54da2ef5219a097442dfeb17b082b6361d41b", "patch": "@@ -2242,16 +2242,16 @@\n }\")\n \n ;; The address %0 is assumed to be 4-aligned at least.  Thus, by ORing\n-;; 0xf0000008, we get the low-oder bits *1*00 (binary), ;; which fits\n-;; the requirement *0*00 for associative address writes.  The alignment of\n+;; 0xf0000008, we get the low-oder bits *1*00 (binary), which fits\n+;; the requirement *1*00 for associative address writes.  The alignment of\n ;; %0 implies that its least significant bit is cleared,\n ;; thus we clear the V bit of a matching entry if there is one.\n (define_insn \"ic_invalidate_line_i\"\n-  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"r,r\")\n-\t\t     (match_operand:SI 1 \"register_operand\" \"r,r\")] 12)\n-   (clobber (match_scratch:SI 2 \"=&r,1\"))]\n+  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t     (match_operand:SI 1 \"register_operand\" \"r\")] 12)\n+   (clobber (match_scratch:SI 2 \"=&r\"))]\n   \"TARGET_HARD_SH4\"\n-  \"ocbwb\\\\t@%0\\;extu.w\\\\t%0,%2\\;or\\\\t%r1,%r2\\;mov.l\\\\t%0,@%2\"\n+  \"ocbwb\\\\t@%0\\;extu.w\\\\t%0,%2\\;or\\\\t%1,%2\\;mov.l\\\\t%0,@%2\"\n   [(set_attr \"length\" \"8\")])\n \n (define_insn \"movqi_i\""}]}