{"sha": "0fced8150b9bc8be3dd0ea2134002f4645428f6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjZWQ4MTUwYjliYzhiZTNkZDBlYTIxMzQwMDJmNDY0NTQyOGY2Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-04-17T17:20:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-04-17T17:20:02Z"}, "message": "re PR c++/52599 (ICE on illegal constexpr constructor declaration)\n\n/cp\n2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52599\n\t* semantics.c (build_constexpr_constructor_member_initializers):\n\tCheck for function-try-block as function-body.\n\n/testsuite\n2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52599\n\t* g++.dg/cpp0x/constexpr-ctor10.C: New.\n\n/cp\n2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53003\n\t* parser.c (cp_parser_member_declaration): Check that\n\tinitializer_token_start is non null before dereferencing it.\n\n/testsuite\n2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53003\n\t* g++.dg/parse/crash59.C: New.\n\nFrom-SVN: r186541", "tree": {"sha": "3c2f1f6512eae507a52d28f15ef83744c1a25051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c2f1f6512eae507a52d28f15ef83744c1a25051"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fced8150b9bc8be3dd0ea2134002f4645428f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fced8150b9bc8be3dd0ea2134002f4645428f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fced8150b9bc8be3dd0ea2134002f4645428f6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fced8150b9bc8be3dd0ea2134002f4645428f6b/comments", "author": null, "committer": null, "parents": [{"sha": "9fc37b2b7bd36846fa166fe8f9911a9ec8c6978a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc37b2b7bd36846fa166fe8f9911a9ec8c6978a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc37b2b7bd36846fa166fe8f9911a9ec8c6978a"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "16dceecf3f638c87a0dde3102a639ef614b02a29", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -1,3 +1,15 @@\n+2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52599\n+\t* semantics.c (build_constexpr_constructor_member_initializers):\n+\tCheck for function-try-block as function-body.\n+\n+2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53003\n+\t* parser.c (cp_parser_member_declaration): Check that\n+\tinitializer_token_start is non null before dereferencing it.\n+\n 2012-04-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38543"}, {"sha": "8aefefac7e7a5dcdbe9e35e24d0f15a8030adb04", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -19109,7 +19109,7 @@ cp_parser_member_declaration (cp_parser* parser)\n \t\t     possible that this fact is an oversight in the\n \t\t     standard, since a pure function may be defined\n \t\t     outside of the class-specifier.  */\n-\t\t  if (initializer)\n+\t\t  if (initializer && initializer_token_start)\n \t\t    error_at (initializer_token_start->location,\n \t\t\t      \"pure-specifier on function-definition\");\n \t\t  decl = cp_parser_save_member_function_body (parser,"}, {"sha": "22185ea72abbeb06984ad58f2c28bc2cd34a6a9f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -5921,6 +5921,12 @@ build_constexpr_constructor_member_initializers (tree type, tree body)\n \t    break;\n \t}\n     }\n+  else if (TREE_CODE (body) == TRY_BLOCK)\n+    {\n+      error (\"body of %<constexpr%> constructor cannot be \"\n+\t     \"a function-try-block\");\n+      return error_mark_node;\n+    }\n   else if (EXPR_P (body))\n     ok = build_data_member_initialization (body, &vec);\n   else"}, {"sha": "0c42dee169d4d139574909db641df37aaf176920", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -1,3 +1,13 @@\n+2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52599\n+\t* g++.dg/cpp0x/constexpr-ctor10.C: New.\n+\n+2012-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53003\n+\t* g++.dg/parse/crash59.C: New.\n+\n 2012-04-17  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/18437"}, {"sha": "c1279e2b7fc7fd29d680b41bb3caa87b08771105", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor10.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/52599\n+// { dg-options -std=c++11 }\n+\n+struct foo {\n+  constexpr foo() try { } catch(...) { };  // { dg-error \"constructor\" }\n+};"}, {"sha": "e5e62986a3e74f8acf16cc3c78620853f520ea22", "filename": "gcc/testsuite/g++.dg/parse/crash59.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fced8150b9bc8be3dd0ea2134002f4645428f6b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C?ref=0fced8150b9bc8be3dd0ea2134002f4645428f6b", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/53003\n+\n+struct A{ void a{} return b  // { dg-error \"function definition|expected\" }"}]}