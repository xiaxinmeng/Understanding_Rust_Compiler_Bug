{"sha": "e81941b70ea127c83c7c5ac1754bb15925fea2b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgxOTQxYjcwZWExMjdjODNjN2M1YWMxNzU0YmIxNTkyNWZlYTJiOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-07-06T10:57:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-07-06T10:57:07Z"}, "message": "i386.md (simple lea to add peephole): Also transform RTXes where second PLUS operand matches output.\n\n\t* config/i386/i386.md (simple lea to add peephole): Also transform\n\tRTXes where second PLUS operand matches output.\n\nFrom-SVN: r189320", "tree": {"sha": "bcf15c57eec011d485dd8f6d78a93d379c07f369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcf15c57eec011d485dd8f6d78a93d379c07f369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e81941b70ea127c83c7c5ac1754bb15925fea2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81941b70ea127c83c7c5ac1754bb15925fea2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81941b70ea127c83c7c5ac1754bb15925fea2b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81941b70ea127c83c7c5ac1754bb15925fea2b9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b908be7954917cd2aedc9f546ba91334ba218d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b908be7954917cd2aedc9f546ba91334ba218d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b908be7954917cd2aedc9f546ba91334ba218d3"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "15053da446bfb1352c524d336a80b22d4120cf13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81941b70ea127c83c7c5ac1754bb15925fea2b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81941b70ea127c83c7c5ac1754bb15925fea2b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e81941b70ea127c83c7c5ac1754bb15925fea2b9", "patch": "@@ -1,3 +1,8 @@\n+2012-07-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (simple lea to add peephole): Also transform\n+\tRTXes where second PLUS operand matches output.\n+\n 2012-07-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (construct_plt_address): Make static."}, {"sha": "b88db5b4ef5ee39b27ac68d2feb245e8bbd170aa", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81941b70ea127c83c7c5ac1754bb15925fea2b9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81941b70ea127c83c7c5ac1754bb15925fea2b9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e81941b70ea127c83c7c5ac1754bb15925fea2b9", "patch": "@@ -17300,6 +17300,14 @@\n   [(parallel [(set (match_dup 0) (plus:SWI48 (match_dup 0) (match_dup 1)))\n \t      (clobber (reg:CC FLAGS_REG))])])\n \n+(define_peephole2\n+  [(set (match_operand:SWI48 0 \"register_operand\")\n+  \t(plus:SWI48 (match_operand:SWI48 1 \"<nonmemory_operand>\")\n+\t\t    (match_dup 0)))]\n+  \"peep2_regno_dead_p (0, FLAGS_REG)\"\n+  [(parallel [(set (match_dup 0) (plus:SWI48 (match_dup 0) (match_dup 1)))\n+\t      (clobber (reg:CC FLAGS_REG))])])\n+\n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\")\n   \t(subreg:SI (plus:DI (match_operand:DI 1 \"register_operand\")\n@@ -17311,6 +17319,17 @@\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"operands[2] = gen_lowpart (SImode, operands[2]);\")\n \n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\")\n+  \t(subreg:SI (plus:DI (match_operand:DI 1 \"nonmemory_operand\")\n+\t\t\t    (match_operand:DI 2 \"register_operand\")) 0))]\n+  \"TARGET_64BIT\n+   && peep2_regno_dead_p (0, FLAGS_REG)\n+   && REGNO (operands[0]) == REGNO (operands[2])\"\n+  [(parallel [(set (match_dup 0) (plus:SI (match_dup 0) (match_dup 1)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[1] = gen_lowpart (SImode, operands[1]);\")\n+\n (define_peephole2\n   [(set (match_operand:SWI48 0 \"register_operand\")\n   \t(mult:SWI48 (match_dup 0)"}]}