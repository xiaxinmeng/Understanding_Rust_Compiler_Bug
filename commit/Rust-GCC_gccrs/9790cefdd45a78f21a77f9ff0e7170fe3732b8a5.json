{"sha": "9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5MGNlZmRkNDVhNzhmMjFhNzdmOWZmMGU3MTcwZmUzNzMyYjhhNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-09-19T13:39:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-09-19T13:39:10Z"}, "message": "stmt.c (expand_expr_stmt): Only call warn_if_unused_value if the tree has side effects.\n\n        * stmt.c (expand_expr_stmt): Only call warn_if_unused_value\n        if the tree has side effects.\n        (warn_if_unused_value): Do not warn about void constructs.\n\nFrom-SVN: r36532", "tree": {"sha": "923b7f25e39f6b01258cfeb1721e12e7bd3e602e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923b7f25e39f6b01258cfeb1721e12e7bd3e602e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5/comments", "author": null, "committer": null, "parents": [{"sha": "8e5a0fcb7520eb7a21aab9c6b06bf488d4314698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e5a0fcb7520eb7a21aab9c6b06bf488d4314698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e5a0fcb7520eb7a21aab9c6b06bf488d4314698"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "e74d3c7ff6742cd4ee72cbd3c089d376fef8c8e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "patch": "@@ -1,5 +1,9 @@\n 2000-09-19  Richard Henderson  <rth@cygnus.com>\n \n+\t* stmt.c (expand_expr_stmt): Only call warn_if_unused_value\n+\tif the tree has side effects.\n+\t(warn_if_unused_value): Do not warn about void constructs.\n+\n \t* c-decl.c (poplevel): Invoke warn_about_unused_variables.\n \n \t* unroll.c (copy_loop_body): Update LABEL_NUSES before"}, {"sha": "2892d340b8909d6de7448692271e44f411bde026", "filename": "gcc/stmt.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9790cefdd45a78f21a77f9ff0e7170fe3732b8a5/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=9790cefdd45a78f21a77f9ff0e7170fe3732b8a5", "patch": "@@ -1908,12 +1908,14 @@ expand_expr_stmt (exp)\n      except inside a ({...}) where they may be useful.  */\n   if (expr_stmts_for_value == 0 && exp != error_mark_node)\n     {\n-      if (! TREE_SIDE_EFFECTS (exp)\n-\t  && (extra_warnings || warn_unused_value)\n-\t  && !(TREE_CODE (exp) == CONVERT_EXPR\n-\t       && VOID_TYPE_P (TREE_TYPE (exp))))\n-\twarning_with_file_and_line (emit_filename, emit_lineno,\n-\t\t\t\t    \"statement with no effect\");\n+      if (! TREE_SIDE_EFFECTS (exp))\n+\t{\n+\t  if ((extra_warnings || warn_unused_value)\n+\t      && !(TREE_CODE (exp) == CONVERT_EXPR\n+\t\t   && VOID_TYPE_P (TREE_TYPE (exp))))\n+\t    warning_with_file_and_line (emit_filename, emit_lineno,\n+\t\t\t\t        \"statement with no effect\");\n+\t}\n       else if (warn_unused_value)\n \twarn_if_unused_value (exp);\n     }\n@@ -1978,6 +1980,12 @@ warn_if_unused_value (exp)\n   if (TREE_USED (exp))\n     return 0;\n \n+  /* Don't warn about void constructs.  This includes casting to void,\n+     void function calls, and statement expressions with a final cast\n+     to void.  */\n+  if (VOID_TYPE_P (TREE_TYPE (exp)))\n+    return 0;\n+\n   switch (TREE_CODE (exp))\n     {\n     case PREINCREMENT_EXPR:\n@@ -2023,9 +2031,6 @@ warn_if_unused_value (exp)\n     case NOP_EXPR:\n     case CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n-      /* Don't warn about values cast to void.  */\n-      if (VOID_TYPE_P (TREE_TYPE (exp)))\n-\treturn 0;\n       /* Don't warn about conversions not explicit in the user's program.  */\n       if (TREE_NO_UNUSED_WARNING (exp))\n \treturn 0;"}]}