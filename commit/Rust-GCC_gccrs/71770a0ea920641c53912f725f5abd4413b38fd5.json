{"sha": "71770a0ea920641c53912f725f5abd4413b38fd5", "node_id": "C_kwDOANBUbNoAKDcxNzcwYTBlYTkyMDY0MWM1MzkxMmY3MjVmNWFiZDQ0MTNiMzhmZDU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T08:07:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T08:07:26Z"}, "message": "gimple.cc: Adjust gimple_call_builtin_p and gimple_call_combined_fn [PR105150]\n\nOn Tue, Apr 05, 2022 at 11:28:53AM +0200, Richard Biener wrote:\n> > In GIMPLE, we call:\n> >   && gimple_builtin_call_types_compatible_p (stmt, fndecl)\n> > but that is insufficient, that verifies whether the arguments passed to\n> > GIMPLE_CALL match the fndecl argument types.  But that fndecl may very well\n> > be the user declaration, so doesn't have to match exactly the builtin\n> > as predeclared by builtins.def etc. (though, there is the cotcha that say\n> > for FILE * we just use void * etc.).  So e.g. in tree-ssa-strlen.cc\n> > we use additional:\n> >   tree callee = gimple_call_fndecl (stmt);\n> >   tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (callee));\n> >   if (decl\n> >       && decl != callee\n> >       && !gimple_builtin_call_types_compatible_p (stmt, decl))\n> >     return false;\n>\n> Yeah, I think we should use that (and only that) function decl\n> in get_call_combined_fn and gimple_call_combined_fn until the\n> frontend stops slapping wrong BUILT_IN_* on random decls.\n\nSo, as a preparation step, this patch adjusts gimple_call_builtin_p\nand gimple_call_combined_fn so that they check argument types against\nthe builtin_decl_explicit TYPE_ARG_TYPES rather than against the\nactual used fndecl.\n\n2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/105150\n\t* gimple.cc (gimple_call_builtin_p, gimple_call_combined_fn):\n\tFor BUILT_IN_NORMAL calls, call gimple_builtin_call_types_compatible_p\n\tpreferrably on builtin_decl_explicit decl rather than fndecl.\n\t* tree-ssa-strlen.cc (valid_builtin_call): Don't call\n\tgimple_builtin_call_types_compatible_p here.", "tree": {"sha": "9eafdc174f3c4a47617cd40723939fd1f858793f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eafdc174f3c4a47617cd40723939fd1f858793f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71770a0ea920641c53912f725f5abd4413b38fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71770a0ea920641c53912f725f5abd4413b38fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71770a0ea920641c53912f725f5abd4413b38fd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71770a0ea920641c53912f725f5abd4413b38fd5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d037d9ad323ec9eef3e50c6e2cbc1e31191daa5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d037d9ad323ec9eef3e50c6e2cbc1e31191daa5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d037d9ad323ec9eef3e50c6e2cbc1e31191daa5d"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "4953bf483794dadc72b8a5b8e4005ec659147503", "filename": "gcc/gimple.cc", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71770a0ea920641c53912f725f5abd4413b38fd5/gcc%2Fgimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71770a0ea920641c53912f725f5abd4413b38fd5/gcc%2Fgimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.cc?ref=71770a0ea920641c53912f725f5abd4413b38fd5", "patch": "@@ -2841,7 +2841,12 @@ gimple_call_builtin_p (const gimple *stmt)\n   if (is_gimple_call (stmt)\n       && (fndecl = gimple_call_fndecl (stmt)) != NULL_TREE\n       && DECL_BUILT_IN_CLASS (fndecl) != NOT_BUILT_IN)\n-    return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    {\n+      if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+\tif (tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (fndecl)))\n+\t  fndecl = decl;\n+      return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    }\n   return false;\n }\n \n@@ -2854,7 +2859,12 @@ gimple_call_builtin_p (const gimple *stmt, enum built_in_class klass)\n   if (is_gimple_call (stmt)\n       && (fndecl = gimple_call_fndecl (stmt)) != NULL_TREE\n       && DECL_BUILT_IN_CLASS (fndecl) == klass)\n-    return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    {\n+      if (klass == BUILT_IN_NORMAL)\n+\tif (tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (fndecl)))\n+\t  fndecl = decl;\n+      return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    }\n   return false;\n }\n \n@@ -2867,7 +2877,11 @@ gimple_call_builtin_p (const gimple *stmt, enum built_in_function code)\n   if (is_gimple_call (stmt)\n       && (fndecl = gimple_call_fndecl (stmt)) != NULL_TREE\n       && fndecl_built_in_p (fndecl, code))\n-    return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    {\n+      if (tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (fndecl)))\n+\tfndecl = decl;\n+      return gimple_builtin_call_types_compatible_p (stmt, fndecl);\n+    }\n   return false;\n }\n \n@@ -2884,10 +2898,14 @@ gimple_call_combined_fn (const gimple *stmt)\n \treturn as_combined_fn (gimple_call_internal_fn (call));\n \n       tree fndecl = gimple_call_fndecl (stmt);\n-      if (fndecl\n-\t  && fndecl_built_in_p (fndecl, BUILT_IN_NORMAL)\n-\t  && gimple_builtin_call_types_compatible_p (stmt, fndecl))\n-\treturn as_combined_fn (DECL_FUNCTION_CODE (fndecl));\n+      if (fndecl && fndecl_built_in_p (fndecl, BUILT_IN_NORMAL))\n+\t{\n+\t  tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (fndecl));\n+\t  if (!decl)\n+\t    decl = fndecl;\n+\t  if (gimple_builtin_call_types_compatible_p (stmt, decl))\n+\t    return as_combined_fn (DECL_FUNCTION_CODE (fndecl));\n+\t}\n     }\n   return CFN_LAST;\n }"}, {"sha": "9ae25d1dde25be08462e829e84b94383cb2648cd", "filename": "gcc/tree-ssa-strlen.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71770a0ea920641c53912f725f5abd4413b38fd5/gcc%2Ftree-ssa-strlen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71770a0ea920641c53912f725f5abd4413b38fd5/gcc%2Ftree-ssa-strlen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.cc?ref=71770a0ea920641c53912f725f5abd4413b38fd5", "patch": "@@ -1736,12 +1736,6 @@ valid_builtin_call (gimple *stmt)\n     return false;\n \n   tree callee = gimple_call_fndecl (stmt);\n-  tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (callee));\n-  if (decl\n-      && decl != callee\n-      && !gimple_builtin_call_types_compatible_p (stmt, decl))\n-    return false;\n-\n   switch (DECL_FUNCTION_CODE (callee))\n     {\n     case BUILT_IN_MEMCMP:"}]}