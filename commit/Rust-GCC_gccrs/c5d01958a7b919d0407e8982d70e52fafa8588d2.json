{"sha": "c5d01958a7b919d0407e8982d70e52fafa8588d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVkMDE5NThhN2I5MTlkMDQwN2U4OTgyZDcwZTUyZmFmYTg1ODhkMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-31T11:43:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-31T11:43:31Z"}, "message": "cgraphunit.c (cgraph_decide_is_function_needed): Really return false for nested functions in non-optimized compilation.\n\n\t* cgraphunit.c (cgraph_decide_is_function_needed): Really return false\n\tfor nested functions in non-optimized compilation.\n\nFrom-SVN: r160068", "tree": {"sha": "8cfca062d11d0ba0c64fbcf7479cc62376f5cff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cfca062d11d0ba0c64fbcf7479cc62376f5cff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5d01958a7b919d0407e8982d70e52fafa8588d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d01958a7b919d0407e8982d70e52fafa8588d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d01958a7b919d0407e8982d70e52fafa8588d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d01958a7b919d0407e8982d70e52fafa8588d2/comments", "author": null, "committer": null, "parents": [{"sha": "a4c9bc1594bef333dc17be8d37625356e8b8c476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c9bc1594bef333dc17be8d37625356e8b8c476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c9bc1594bef333dc17be8d37625356e8b8c476"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "c1b62ce5fde5b6308e1672f867407a421e845014", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5d01958a7b919d0407e8982d70e52fafa8588d2", "patch": "@@ -1,3 +1,8 @@\n+2010-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cgraphunit.c (cgraph_decide_is_function_needed): Really return false\n+\tfor nested functions in non-optimized compilation.\n+\n 2010-05-31  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (find_func_aliases): Handle\n@@ -35,7 +40,7 @@\n 2010-05-30  Jan Hubicka  <jh@suse.cz>\n \n \t* toplev.c (wrapup_global_declaration_2): Avoid creation of new varpool\n-\tnodes \n+\tnodes.\n \n 2010-05-30  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "1d5ed0d5ed877b94edec7242932cde1ccb1b0f26", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=c5d01958a7b919d0407e8982d70e52fafa8588d2", "patch": "@@ -352,13 +352,15 @@ cgraph_decide_is_function_needed (struct cgraph_node *node, tree decl)\n \n      When not optimizing, also output the static functions. (see\n      PR24561), but don't do so for always_inline functions, functions\n-     declared inline and nested functions.  These was optimized out\n+     declared inline and nested functions.  These were optimized out\n      in the original implementation and it is unclear whether we want\n      to change the behavior here.  */\n   if (((TREE_PUBLIC (decl)\n-\t|| (!optimize && !node->local.disregard_inline_limits\n+\t|| (!optimize\n+\t    && !node->local.disregard_inline_limits\n \t    && !DECL_DECLARED_INLINE_P (decl)\n-\t    && !node->origin))\n+\t    && !(DECL_CONTEXT (decl)\n+\t\t && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)))\n        && !flag_whole_program\n        && !flag_lto\n        && !flag_whopr)"}, {"sha": "69808cd39dddf9e9b4c40f6c430f25da5b9c2077", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5d01958a7b919d0407e8982d70e52fafa8588d2", "patch": "@@ -1,3 +1,8 @@\n+2010-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/nested-func-7.c: New test.\n+\t* gnat.dg/frame_overflow.adb: Adjust directives.\n+\n 2010-05-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/prot2.ad[sb]: New test."}, {"sha": "764beb453735fcfee09bba54e5f93ea7cc39aa40", "filename": "gcc/testsuite/gcc.dg/nested-func-7.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-7.c?ref=c5d01958a7b919d0407e8982d70e52fafa8588d2", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-optimized\" } */\n+\n+void foo (void)\n+{\n+  int a;\n+\n+  void bar (void)\n+  {\n+    a = 1;\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"bar\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e1ff4d3653351503de4cf7054af96034c41240cf", "filename": "gcc/testsuite/gnat.dg/frame_overflow.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d01958a7b919d0407e8982d70e52fafa8588d2/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb?ref=c5d01958a7b919d0407e8982d70e52fafa8588d2", "patch": "@@ -1,5 +1,4 @@\n -- { dg-do compile }\n--- { dg-xfail-if \"missing late warning\" { *-*-* } { \"-flto\" } { \"\" } }\n \n with System;\n \n@@ -11,8 +10,8 @@ procedure frame_overflow is\n    type Bitmap_T is record\n       Bits : Bitmap_Array_T := (others => False);\n    end record;\n-   \n-   function -- { dg-error \"too large\" }\n+\n+   function\n      Set_In (Bitmap : Bitmap_T; Bitpos : Bitpos_Range_T)  return Bitmap_T\n    is\n       Result: Bitmap_T := Bitmap; -- { dg-error \"Storage_Error\" }"}]}