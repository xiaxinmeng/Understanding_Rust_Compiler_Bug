{"sha": "19fb051ccb54f06f292307830cb5bce6bf6268bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlmYjA1MWNjYjU0ZjA2ZjI5MjMwNzgzMGNiNWJjZTZiZjYyNjhiZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:41:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:41:50Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* mlib-prj.adb, restrict.ads, sem_aggr.adb, sem_ch12.adb: Minor\n\treformatting.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.adb: New aspects Default_Value and Default_Component_Value\n\tNew format of Aspect_Names table checks for omitted entries\n\t* aspects.ads: Remove mention of Aspect_Cancel and add documentation on\n\thandling of boolean aspects for derived types.\n\tNew aspects Default_Value and Default_Component_Value\n\tNew format of Aspect_Names table checks for omitted entries\n\t* einfo.ads, einfo.adb (Has_Default_Component_Value): New flag\n\t(Has_Default_Value): New flag\n\t(Has_Default_Component_Value): New flag\n\t(Has_Default_Value): New flag\n\t* par-ch13.adb (P_Aspect_Specifications): New format of Aspect_Names\n\ttable.\n\t* par-prag.adb: New pragmas Default_Value and Default_Component_Value\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): New aspects\n\tDefault_Value and Default_Component_Value\n\t* sem_prag.adb: New pragmas Default_Value and Default_Component_Value\n\tNew aspects Default_Value and Default_Component_Value\n\t* snames.ads-tmpl: New pragmas Default_Value and Default_Component_Value\n\t* sprint.adb: Print N_Aspect_Specification node when called from gdb\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb: Add guards in calls to Matching_Static_Array_Bounds.\n\tMinor reformatting.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* i-cstrin.ads: Updates to make Interfaces.C.Strings match RM\n\nFrom-SVN: r177110", "tree": {"sha": "583d07f48683ebbc4092aa606fc00a067241259c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/583d07f48683ebbc4092aa606fc00a067241259c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19fb051ccb54f06f292307830cb5bce6bf6268bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb051ccb54f06f292307830cb5bce6bf6268bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fb051ccb54f06f292307830cb5bce6bf6268bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb051ccb54f06f292307830cb5bce6bf6268bd/comments", "author": null, "committer": null, "parents": [{"sha": "e443b7f97eab2f7c8e2640ee840801ce2eb2c008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e443b7f97eab2f7c8e2640ee840801ce2eb2c008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e443b7f97eab2f7c8e2640ee840801ce2eb2c008"}], "stats": {"total": 750, "additions": 514, "deletions": 236}, "files": [{"sha": "c6a2ff86f88bc513ab974fae059297b53c438157", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -1,3 +1,44 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* mlib-prj.adb, restrict.ads, sem_aggr.adb, sem_ch12.adb: Minor\n+\treformatting.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.adb: New aspects Default_Value and Default_Component_Value\n+\tNew format of Aspect_Names table checks for omitted entries\n+\t* aspects.ads: Remove mention of Aspect_Cancel and add documentation on\n+\thandling of boolean aspects for derived types.\n+\tNew aspects Default_Value and Default_Component_Value\n+\tNew format of Aspect_Names table checks for omitted entries\n+\t* einfo.ads, einfo.adb (Has_Default_Component_Value): New flag\n+\t(Has_Default_Value): New flag\n+\t(Has_Default_Component_Value): New flag\n+\t(Has_Default_Value): New flag\n+\t* par-ch13.adb (P_Aspect_Specifications): New format of Aspect_Names\n+\ttable.\n+\t* par-prag.adb: New pragmas Default_Value and Default_Component_Value\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): New aspects\n+\tDefault_Value and Default_Component_Value\n+\t* sem_prag.adb: New pragmas Default_Value and Default_Component_Value\n+\tNew aspects Default_Value and Default_Component_Value\n+\t* snames.ads-tmpl: New pragmas Default_Value and Default_Component_Value\n+\t* sprint.adb: Print N_Aspect_Specification node when called from gdb\n+\n+2011-08-02  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Library_Attributes): For virtual library project,\n+\tinherit library kind.\n+\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb: Add guards in calls to Matching_Static_Array_Bounds.\n+\tMinor reformatting.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* i-cstrin.ads: Updates to make Interfaces.C.Strings match RM\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Aggregate): Fix thinko."}, {"sha": "aafe74b17251d235890ba5476854adbaaaa88c8e", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -179,6 +179,8 @@ package body Aspects is\n     Aspect_Atomic_Components            => Aspect_Atomic_Components,\n     Aspect_Bit_Order                    => Aspect_Bit_Order,\n     Aspect_Component_Size               => Aspect_Component_Size,\n+    Aspect_Default_Component_Value      => Aspect_Default_Component_Value,\n+    Aspect_Default_Value                => Aspect_Default_Value,\n     Aspect_Discard_Names                => Aspect_Discard_Names,\n     Aspect_Dynamic_Predicate            => Aspect_Predicate,\n     Aspect_External_Tag                 => Aspect_External_Tag,\n@@ -289,7 +291,7 @@ package body Aspects is\n --  Package initialization sets up Aspect Id hash table\n \n begin\n-   for J in Aspect_Names'Range loop\n-      Aspect_Id_Hash_Table.Set (Aspect_Names (J).Nam, Aspect_Names (J).Asp);\n+   for J in Aspect_Id loop\n+      Aspect_Id_Hash_Table.Set (Aspect_Names (J), J);\n    end loop;\n end Aspects;"}, {"sha": "64fb038a5ee8c9951670327ca73c9f526ade05a1", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 101, "deletions": 98, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -48,6 +48,8 @@ package Aspects is\n       Aspect_Alignment,\n       Aspect_Bit_Order,\n       Aspect_Component_Size,\n+      Aspect_Default_Component_Value,\n+      Aspect_Default_Value,\n       Aspect_Dynamic_Predicate,\n       Aspect_External_Tag,\n       Aspect_Input,\n@@ -157,111 +159,112 @@ package Aspects is\n    --  The following array indicates what argument type is required\n \n    Aspect_Argument : constant array (Aspect_Id) of Aspect_Expression :=\n-                       (No_Aspect                => Optional,\n-                        Aspect_Address           => Expression,\n-                        Aspect_Alignment         => Expression,\n-                        Aspect_Bit_Order         => Expression,\n-                        Aspect_Component_Size    => Expression,\n-                        Aspect_Dynamic_Predicate => Expression,\n-                        Aspect_External_Tag      => Expression,\n-                        Aspect_Input             => Name,\n-                        Aspect_Invariant         => Expression,\n-                        Aspect_Machine_Radix     => Expression,\n-                        Aspect_Object_Size       => Expression,\n-                        Aspect_Output            => Name,\n-                        Aspect_Post              => Expression,\n-                        Aspect_Postcondition     => Expression,\n-                        Aspect_Pre               => Expression,\n-                        Aspect_Precondition      => Expression,\n-                        Aspect_Predicate         => Expression,\n-                        Aspect_Read              => Name,\n-                        Aspect_Size              => Expression,\n-                        Aspect_Static_Predicate  => Expression,\n-                        Aspect_Storage_Pool      => Name,\n-                        Aspect_Storage_Size      => Expression,\n-                        Aspect_Stream_Size       => Expression,\n-                        Aspect_Suppress          => Name,\n-                        Aspect_Type_Invariant    => Expression,\n-                        Aspect_Unsuppress        => Name,\n-                        Aspect_Value_Size        => Expression,\n-                        Aspect_Warnings          => Name,\n-                        Aspect_Write             => Name,\n-\n-                        Library_Unit_Aspects     => Optional,\n-                        Boolean_Aspects          => Optional);\n+                       (No_Aspect                      => Optional,\n+                        Aspect_Address                 => Expression,\n+                        Aspect_Alignment               => Expression,\n+                        Aspect_Bit_Order               => Expression,\n+                        Aspect_Component_Size          => Expression,\n+                        Aspect_Default_Component_Value => Expression,\n+                        Aspect_Default_Value           => Expression,\n+                        Aspect_Dynamic_Predicate       => Expression,\n+                        Aspect_External_Tag            => Expression,\n+                        Aspect_Input                   => Name,\n+                        Aspect_Invariant               => Expression,\n+                        Aspect_Machine_Radix           => Expression,\n+                        Aspect_Object_Size             => Expression,\n+                        Aspect_Output                  => Name,\n+                        Aspect_Post                    => Expression,\n+                        Aspect_Postcondition           => Expression,\n+                        Aspect_Pre                     => Expression,\n+                        Aspect_Precondition            => Expression,\n+                        Aspect_Predicate               => Expression,\n+                        Aspect_Read                    => Name,\n+                        Aspect_Size                    => Expression,\n+                        Aspect_Static_Predicate        => Expression,\n+                        Aspect_Storage_Pool            => Name,\n+                        Aspect_Storage_Size            => Expression,\n+                        Aspect_Stream_Size             => Expression,\n+                        Aspect_Suppress                => Name,\n+                        Aspect_Type_Invariant          => Expression,\n+                        Aspect_Unsuppress              => Name,\n+                        Aspect_Value_Size              => Expression,\n+                        Aspect_Warnings                => Name,\n+                        Aspect_Write                   => Name,\n+\n+                        Library_Unit_Aspects           => Optional,\n+                        Boolean_Aspects                => Optional);\n \n    -----------------------------------------\n    -- Table Linking Names and Aspect_Id's --\n    -----------------------------------------\n \n-   type Aspect_Entry is record\n-      Nam : Name_Id;\n-      Asp : Aspect_Id;\n-   end record;\n-\n    --  Table linking aspect names and id's\n \n-   Aspect_Names : constant array (Integer range <>) of Aspect_Entry :=\n-    ((Name_Ada_2005,                     Aspect_Ada_2005),\n-     (Name_Ada_2012,                     Aspect_Ada_2012),\n-     (Name_Address,                      Aspect_Address),\n-     (Name_Alignment,                    Aspect_Alignment),\n-     (Name_All_Calls_Remote,             Aspect_All_Calls_Remote),\n-     (Name_Atomic,                       Aspect_Atomic),\n-     (Name_Atomic_Components,            Aspect_Atomic_Components),\n-     (Name_Bit_Order,                    Aspect_Bit_Order),\n-     (Name_Compiler_Unit,                Aspect_Compiler_Unit),\n-     (Name_Component_Size,               Aspect_Component_Size),\n-     (Name_Discard_Names,                Aspect_Discard_Names),\n-     (Name_Dynamic_Predicate,            Aspect_Dynamic_Predicate),\n-     (Name_Elaborate_Body,               Aspect_Elaborate_Body),\n-     (Name_External_Tag,                 Aspect_External_Tag),\n-     (Name_Favor_Top_Level,              Aspect_Favor_Top_Level),\n-     (Name_Inline,                       Aspect_Inline),\n-     (Name_Inline_Always,                Aspect_Inline_Always),\n-     (Name_Input,                        Aspect_Input),\n-     (Name_Invariant,                    Aspect_Invariant),\n-     (Name_Machine_Radix,                Aspect_Machine_Radix),\n-     (Name_Object_Size,                  Aspect_Object_Size),\n-     (Name_Output,                       Aspect_Output),\n-     (Name_Pack,                         Aspect_Pack),\n-     (Name_Persistent_BSS,               Aspect_Persistent_BSS),\n-     (Name_Post,                         Aspect_Post),\n-     (Name_Postcondition,                Aspect_Postcondition),\n-     (Name_Pre,                          Aspect_Pre),\n-     (Name_Precondition,                 Aspect_Precondition),\n-     (Name_Predicate,                    Aspect_Predicate),\n-     (Name_Preelaborable_Initialization, Aspect_Preelaborable_Initialization),\n-     (Name_Preelaborate,                 Aspect_Preelaborate),\n-     (Name_Preelaborate_05,              Aspect_Preelaborate_05),\n-     (Name_Pure,                         Aspect_Pure),\n-     (Name_Pure_05,                      Aspect_Pure_05),\n-     (Name_Pure_Function,                Aspect_Pure_Function),\n-     (Name_Read,                         Aspect_Read),\n-     (Name_Remote_Call_Interface,        Aspect_Remote_Call_Interface),\n-     (Name_Remote_Types,                 Aspect_Remote_Types),\n-     (Name_Shared,                       Aspect_Shared),\n-     (Name_Shared_Passive,               Aspect_Shared_Passive),\n-     (Name_Size,                         Aspect_Size),\n-     (Name_Static_Predicate,             Aspect_Static_Predicate),\n-     (Name_Storage_Pool,                 Aspect_Storage_Pool),\n-     (Name_Storage_Size,                 Aspect_Storage_Size),\n-     (Name_Stream_Size,                  Aspect_Stream_Size),\n-     (Name_Suppress,                     Aspect_Suppress),\n-     (Name_Suppress_Debug_Info,          Aspect_Suppress_Debug_Info),\n-     (Name_Type_Invariant,               Aspect_Type_Invariant),\n-     (Name_Unchecked_Union,              Aspect_Unchecked_Union),\n-     (Name_Universal_Aliasing,           Aspect_Universal_Aliasing),\n-     (Name_Universal_Data,               Aspect_Universal_Data),\n-     (Name_Unmodified,                   Aspect_Unmodified),\n-     (Name_Unreferenced,                 Aspect_Unreferenced),\n-     (Name_Unreferenced_Objects,         Aspect_Unreferenced_Objects),\n-     (Name_Unsuppress,                   Aspect_Unsuppress),\n-     (Name_Value_Size,                   Aspect_Value_Size),\n-     (Name_Volatile,                     Aspect_Volatile),\n-     (Name_Volatile_Components,          Aspect_Volatile_Components),\n-     (Name_Warnings,                     Aspect_Warnings),\n-     (Name_Write,                        Aspect_Write));\n+   Aspect_Names : constant array (Aspect_Id) of Name_Id := (\n+     No_Aspect                           => No_Name,\n+     Aspect_Ada_2005                     => Name_Ada_2005,\n+     Aspect_Ada_2012                     => Name_Ada_2012,\n+     Aspect_Address                      => Name_Address,\n+     Aspect_Alignment                    => Name_Alignment,\n+     Aspect_All_Calls_Remote             => Name_All_Calls_Remote,\n+     Aspect_Atomic                       => Name_Atomic,\n+     Aspect_Atomic_Components            => Name_Atomic_Components,\n+     Aspect_Bit_Order                    => Name_Bit_Order,\n+     Aspect_Compiler_Unit                => Name_Compiler_Unit,\n+     Aspect_Component_Size               => Name_Component_Size,\n+     Aspect_Default_Value                => Name_Default_Value,\n+     Aspect_Default_Component_Value      => Name_Default_Component_Value,\n+     Aspect_Discard_Names                => Name_Discard_Names,\n+     Aspect_Dynamic_Predicate            => Name_Dynamic_Predicate,\n+     Aspect_Elaborate_Body               => Name_Elaborate_Body,\n+     Aspect_External_Tag                 => Name_External_Tag,\n+     Aspect_Favor_Top_Level              => Name_Favor_Top_Level,\n+     Aspect_Inline                       => Name_Inline,\n+     Aspect_Inline_Always                => Name_Inline_Always,\n+     Aspect_Input                        => Name_Input,\n+     Aspect_Invariant                    => Name_Invariant,\n+     Aspect_Machine_Radix                => Name_Machine_Radix,\n+     Aspect_No_Return                    => Name_No_Return,\n+     Aspect_Object_Size                  => Name_Object_Size,\n+     Aspect_Output                       => Name_Output,\n+     Aspect_Pack                         => Name_Pack,\n+     Aspect_Persistent_BSS               => Name_Persistent_BSS,\n+     Aspect_Post                         => Name_Post,\n+     Aspect_Postcondition                => Name_Postcondition,\n+     Aspect_Pre                          => Name_Pre,\n+     Aspect_Precondition                 => Name_Precondition,\n+     Aspect_Predicate                    => Name_Predicate,\n+     Aspect_Preelaborable_Initialization => Name_Preelaborable_Initialization,\n+     Aspect_Preelaborate                 => Name_Preelaborate,\n+     Aspect_Preelaborate_05              => Name_Preelaborate_05,\n+     Aspect_Pure                         => Name_Pure,\n+     Aspect_Pure_05                      => Name_Pure_05,\n+     Aspect_Pure_Function                => Name_Pure_Function,\n+     Aspect_Read                         => Name_Read,\n+     Aspect_Remote_Call_Interface        => Name_Remote_Call_Interface,\n+     Aspect_Remote_Types                 => Name_Remote_Types,\n+     Aspect_Shared                       => Name_Shared,\n+     Aspect_Shared_Passive               => Name_Shared_Passive,\n+     Aspect_Size                         => Name_Size,\n+     Aspect_Static_Predicate             => Name_Static_Predicate,\n+     Aspect_Storage_Pool                 => Name_Storage_Pool,\n+     Aspect_Storage_Size                 => Name_Storage_Size,\n+     Aspect_Stream_Size                  => Name_Stream_Size,\n+     Aspect_Suppress                     => Name_Suppress,\n+     Aspect_Suppress_Debug_Info          => Name_Suppress_Debug_Info,\n+     Aspect_Type_Invariant               => Name_Type_Invariant,\n+     Aspect_Unchecked_Union              => Name_Unchecked_Union,\n+     Aspect_Universal_Aliasing           => Name_Universal_Aliasing,\n+     Aspect_Universal_Data               => Name_Universal_Data,\n+     Aspect_Unmodified                   => Name_Unmodified,\n+     Aspect_Unreferenced                 => Name_Unreferenced,\n+     Aspect_Unreferenced_Objects         => Name_Unreferenced_Objects,\n+     Aspect_Unsuppress                   => Name_Unsuppress,\n+     Aspect_Value_Size                   => Name_Value_Size,\n+     Aspect_Volatile                     => Name_Volatile,\n+     Aspect_Volatile_Components          => Name_Volatile_Components,\n+     Aspect_Warnings                     => Name_Warnings,\n+     Aspect_Write                        => Name_Write);\n \n    function Get_Aspect_Id (Name : Name_Id) return Aspect_Id;\n    pragma Inline (Get_Aspect_Id);"}, {"sha": "408f3c5760ac11a29eed7f9f84d996c1607e08a7", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -283,6 +283,7 @@ package body Einfo is\n    --    Referenced_As_LHS               Flag36\n    --    Is_Known_Non_Null               Flag37\n    --    Can_Never_Be_Null               Flag38\n+   --    Has_Default_Value               Flag39\n    --    Body_Needed_For_SAL             Flag40\n \n    --    Treat_As_Volatile               Flag41\n@@ -406,6 +407,7 @@ package body Einfo is\n    --    Is_Compilation_Unit             Flag149\n    --    Has_Pragma_Elaborate_Body       Flag150\n \n+   --    Has_Default_Component_Value     Flag151\n    --    Entry_Accepted                  Flag152\n    --    Is_Obsolescent                  Flag153\n    --    Has_Per_Object_Constraint       Flag154\n@@ -514,8 +516,6 @@ package body Einfo is\n    --    Has_Inheritable_Invariants      Flag248\n    --    Has_Predicates                  Flag250\n \n-   --    (unused)                        Flag39\n-   --    (unused)                        Flag151\n    --    (unused)                        Flag249\n    --    (unused)                        Flag251\n    --    (unused)                        Flag252\n@@ -1226,6 +1226,18 @@ package body Einfo is\n       return Flag119 (Id);\n    end Has_Convention_Pragma;\n \n+   function Has_Default_Component_Value (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Array_Type (Id));\n+      return Flag151 (Base_Type (Id));\n+   end Has_Default_Component_Value;\n+\n+   function Has_Default_Value (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Scalar_Type (Id));\n+      return Flag39 (Base_Type (Id));\n+   end Has_Default_Value;\n+\n    function Has_Delayed_Aspects (Id : E) return B is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -3663,6 +3675,18 @@ package body Einfo is\n       Set_Flag119 (Id, V);\n    end Set_Has_Convention_Pragma;\n \n+   procedure Set_Has_Default_Component_Value (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Array_Type (Id) and then Is_Base_Type (Id));\n+      Set_Flag151 (Id, V);\n+   end Set_Has_Default_Component_Value;\n+\n+   procedure Set_Has_Default_Value (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Scalar_Type (Id) and then Is_Base_Type (Id));\n+      Set_Flag39 (Id, V);\n+   end Set_Has_Default_Value;\n+\n    procedure Set_Has_Delayed_Aspects (Id : E; V : B := True) is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -7326,6 +7350,8 @@ package body Einfo is\n       W (\"Has_Controlled_Component\",        Flag43  (Id));\n       W (\"Has_Controlling_Result\",          Flag98  (Id));\n       W (\"Has_Convention_Pragma\",           Flag119 (Id));\n+      W (\"Has_Default_Component_Value\",     Flag151 (Id));\n+      W (\"Has_Default_Value\",               Flag39  (Id));\n       W (\"Has_Delayed_Aspects\",             Flag200 (Id));\n       W (\"Has_Delayed_Freeze\",              Flag18  (Id));\n       W (\"Has_Discriminants\",               Flag5   (Id));"}, {"sha": "6f44fd788df321296ff86c8d9cad83825c036cca", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 36, "deletions": 9, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -1428,6 +1428,18 @@ package Einfo is\n --       node must be generated for the entity at its freezing point. See\n --       separate section (\"Delayed Freezing and Elaboration\") for details.\n \n+--    Has_Default_Component_Value (Flag151) [root type only]\n+--       Present in array types. Set on a base type to indicate that the base\n+--       type and all its subtypes have a Default_Component_Value aspect. If\n+--       this flag is True, then there will be a pragma Default_Component_Value\n+--       chained to the Rep_Item list for the base type.\n+\n+--    Has_Default_Value (Flag39) [base type only]\n+--       Present in scalar types. Set on a base type to indicate that the base\n+--       type and all its subtypes have a Default_Value aspect. If this flag is\n+--       True, then there will always be a pragma Default_Value chained to the\n+--       Rep_Item list for the base type.\n+\n --    Has_Discriminants (Flag5)\n --       Present in all types and subtypes. For types that are allowed to have\n --       discriminants (record types and subtypes, task types and subtypes,\n@@ -3099,12 +3111,12 @@ package Einfo is\n --       interpreted as true. Currently this is set true for derived Boolean\n --       types which have a convention of C, C++ or Fortran.\n \n---    No_Pool_Assigned (Flag131) [root type only] Present in access types.\n---       Set if a storage size clause applies to the variable with a static\n---       expression value of zero. This flag is used to generate errors if any\n---       attempt is made to allocate or free an instance of such an access\n---       type. This is set only in the root type, since derived types must\n---       have the same pool.\n+--    No_Pool_Assigned (Flag131) [root type only]\n+--       Present in access types. Set if a storage size clause applies to the\n+--       variable with a static expression value of zero. This flag is used to\n+--       generate errors if any attempt is made to allocate or free an instance\n+--       of such an access type. This is set only in the root type, since\n+--       derived types must have the same pool.\n \n --    No_Return (Flag113)\n --       Present in all entities. Always false except in the case of procedures\n@@ -4902,6 +4914,7 @@ package Einfo is\n    --    Packed_Array_Type                   (Node23)\n    --    Component_Alignment                 (special)  (base type only)\n    --    Has_Component_Size_Clause           (Flag68)   (base type only)\n+   --    Has_Default_Component_Value         (Flag151)  (base type only)\n    --    Is_Aliased                          (Flag15)\n    --    Is_Constrained                      (Flag12)\n    --    Next_Index                          (synth)\n@@ -5001,6 +5014,7 @@ package Einfo is\n    --    Scalar_Range                        (Node20)\n    --    Delta_Value                         (Ureal18)\n    --    Small_Value                         (Ureal21)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Machine_Radix_Clause            (Flag83)\n    --    Machine_Radix_10                    (Flag84)\n    --    Aft_Value                           (synth)\n@@ -5077,6 +5091,7 @@ package Einfo is\n    --    Static_Predicate                    (List25)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Contiguous_Rep                  (Flag181)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Enumeration_Rep_Clause          (Flag66)\n    --    Has_Pragma_Ordered                  (Flag198)  (base type only)\n    --    Nonzero_Is_True                     (Flag162)  (base type only)\n@@ -5103,6 +5118,8 @@ package Einfo is\n    --  E_Floating_Point_Subtype\n    --    Digits_Value                        (Uint17)\n    --    Float_Rep                           (Uint10)   (Float_Rep_Kind)\n+   --    Scalar_Range                        (Node20)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Machine_Emax_Value                  (synth)\n    --    Machine_Emin_Value                  (synth)\n    --    Machine_Mantissa_Value              (synth)\n@@ -5114,7 +5131,6 @@ package Einfo is\n    --    Safe_Emax_Value                     (synth)\n    --    Safe_First_Value                    (synth)\n    --    Safe_Last_Value                     (synth)\n-   --    Scalar_Range                        (Node20)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n    --    Vax_Float                           (synth)\n@@ -5272,12 +5288,13 @@ package Einfo is\n \n    --  E_Modular_Integer_Type\n    --  E_Modular_Integer_Subtype\n-   --    Modulus                             (Uint17)    (base type only)\n+   --    Modulus                             (Uint17)   (base type only)\n    --    Original_Array_Type                 (Node21)\n    --    Scalar_Range                        (Node20)\n    --    Static_Predicate                    (List25)\n-   --    Non_Binary_Modulus                  (Flag58)    (base type only)\n+   --    Non_Binary_Modulus                  (Flag58)   (base type only)\n    --    Has_Biased_Representation           (Flag139)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n    --    (plus type attributes)\n@@ -5308,6 +5325,7 @@ package Einfo is\n    --    Delta_Value                         (Ureal18)\n    --    Scalar_Range                        (Node20)\n    --    Small_Value                         (Ureal21)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Small_Clause                    (Flag67)\n    --    Aft_Value                           (synth)\n    --    Type_Low_Bound                      (synth)\n@@ -5544,6 +5562,7 @@ package Einfo is\n    --    Scalar_Range                        (Node20)\n    --    Static_Predicate                    (List25)\n    --    Has_Biased_Representation           (Flag139)\n+   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n    --    (plus type attributes)\n@@ -5993,6 +6012,8 @@ package Einfo is\n    function Has_Controlled_Component            (Id : E) return B;\n    function Has_Controlling_Result              (Id : E) return B;\n    function Has_Convention_Pragma               (Id : E) return B;\n+   function Has_Default_Component_Value         (Id : E) return B;\n+   function Has_Default_Value                   (Id : E) return B;\n    function Has_Delayed_Aspects                 (Id : E) return B;\n    function Has_Delayed_Freeze                  (Id : E) return B;\n    function Has_Discriminants                   (Id : E) return B;\n@@ -6573,6 +6594,8 @@ package Einfo is\n    procedure Set_Has_Controlled_Component        (Id : E; V : B := True);\n    procedure Set_Has_Controlling_Result          (Id : E; V : B := True);\n    procedure Set_Has_Convention_Pragma           (Id : E; V : B := True);\n+   procedure Set_Has_Default_Component_Value     (Id : E; V : B := True);\n+   procedure Set_Has_Default_Value               (Id : E; V : B := True);\n    procedure Set_Has_Delayed_Aspects             (Id : E; V : B := True);\n    procedure Set_Has_Delayed_Freeze              (Id : E; V : B := True);\n    procedure Set_Has_Discriminants               (Id : E; V : B := True);\n@@ -7262,6 +7285,8 @@ package Einfo is\n    pragma Inline (Has_Controlled_Component);\n    pragma Inline (Has_Controlling_Result);\n    pragma Inline (Has_Convention_Pragma);\n+   pragma Inline (Has_Default_Component_Value);\n+   pragma Inline (Has_Default_Value);\n    pragma Inline (Has_Delayed_Aspects);\n    pragma Inline (Has_Delayed_Freeze);\n    pragma Inline (Has_Discriminants);\n@@ -7698,6 +7723,8 @@ package Einfo is\n    pragma Inline (Set_Has_Controlled_Component);\n    pragma Inline (Set_Has_Controlling_Result);\n    pragma Inline (Set_Has_Convention_Pragma);\n+   pragma Inline (Set_Has_Default_Component_Value);\n+   pragma Inline (Set_Has_Default_Value);\n    pragma Inline (Set_Has_Delayed_Aspects);\n    pragma Inline (Set_Has_Delayed_Freeze);\n    pragma Inline (Set_Has_Discriminants);"}, {"sha": "99f2afe7f63f12254d7cb8197a6a000052dd5647", "filename": "gcc/ada/i-cstrin.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fi-cstrin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fi-cstrin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.ads?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -45,8 +45,9 @@ package Interfaces.C.Strings is\n    --  strict aliasing assumptions for this type.\n \n    type chars_ptr is private;\n+   pragma Preelaborable_Initialization (chars_ptr);\n \n-   type chars_ptr_array is array (size_t range <>) of chars_ptr;\n+   type chars_ptr_array is array (size_t range <>) of aliased chars_ptr;\n \n    Null_Ptr : constant chars_ptr;\n "}, {"sha": "656b9d4e824e69ccaac49132cbeb48fbe38f433d", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 32, "deletions": 37, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -73,26 +73,29 @@ package body MLib.Prj is\n    --  Name_Id for \"g-trasym.ads\"\n \n    Arguments : String_List_Access := No_Argument;\n-   --  Used to accumulate arguments for the invocation of gnatbind and of\n-   --  the compiler. Also used to collect the interface ALI when copying\n-   --  the ALI files to the library directory.\n+   --  Used to accumulate arguments for the invocation of gnatbind and of the\n+   --  compiler. Also used to collect the interface ALI when copying the ALI\n+   --  files to the library directory.\n \n    Argument_Number : Natural := 0;\n    --  Index of the last argument in Arguments\n \n    Initial_Argument_Max : constant := 10;\n+   --  Where does the magic constant 10 come from???\n \n-   No_Main_String : aliased String := \"-n\";\n-   No_Main : constant String_Access := No_Main_String'Access;\n+   No_Main_String        : aliased String         := \"-n\";\n+   No_Main               : constant String_Access := No_Main_String'Access;\n \n-   Output_Switch_String : aliased String := \"-o\";\n-   Output_Switch : constant String_Access := Output_Switch_String'Access;\n+   Output_Switch_String  : aliased String         := \"-o\";\n+   Output_Switch         : constant String_Access :=\n+                             Output_Switch_String'Access;\n \n-   Compile_Switch_String : aliased String := \"-c\";\n-   Compile_Switch : constant String_Access := Compile_Switch_String'Access;\n+   Compile_Switch_String : aliased String         := \"-c\";\n+   Compile_Switch        : constant String_Access :=\n+                             Compile_Switch_String'Access;\n \n-   No_Warning_String : aliased String := \"-gnatws\";\n-   No_Warning : constant String_Access := No_Warning_String'Access;\n+   No_Warning_String     : aliased String         := \"-gnatws\";\n+   No_Warning            : constant String_Access := No_Warning_String'Access;\n \n    Auto_Initialize : constant String := \"-a\";\n \n@@ -296,27 +299,24 @@ package body MLib.Prj is\n    is\n       Maximum_Size : Integer;\n       pragma Import (C, Maximum_Size, \"__gnat_link_max\");\n-      --  Maximum number of bytes to put in an invocation of the\n-      --  gnatbind.\n+      --  Maximum number of bytes to put in an invocation of gnatbind\n \n       Size : Integer;\n-      --  The number of bytes for the invocation of the gnatbind\n+      --  The number of bytes for the invocation of gnatbind\n \n       Warning_For_Library : Boolean := False;\n-      --  Set to True for the first warning about a unit missing from the\n-      --  interface set.\n+      --  Set True for first warning for a unit missing from the interface set\n \n       Current_Proj : Project_Id;\n \n       Libgnarl_Needed   : Yes_No_Unknown := For_Project.Libgnarl_Needed;\n-      --  Set to True if library needs to be linked with libgnarl\n+      --  Set True if library needs to be linked with libgnarl\n \n       Libdecgnat_Needed : Boolean := False;\n-      --  On OpenVMS, set to True if library needs to be linked with libdecgnat\n+      --  On OpenVMS, set True if library needs to be linked with libdecgnat\n \n       Gtrasymobj_Needed : Boolean := False;\n-      --  On OpenVMS, set to True if library needs to be linked with\n-      --  g-trasym.obj.\n+      --  On OpenVMS, set rue if library needs to be linked with g-trasym.obj\n \n       Object_Directory_Path : constant String :=\n                                 Get_Name_String\n@@ -354,15 +354,14 @@ package body MLib.Prj is\n       --  Initial size of Rpath, when first allocated\n \n       Path_Option : String_Access := Linker_Library_Path_Option;\n-      --  If null, Path Option is not supported.\n-      --  Not a constant so that it can be deallocated.\n+      --  If null, Path Option is not supported. Not a constant so that it can\n+      --  be deallocated.\n \n       First_ALI : File_Name_Type := No_File;\n       --  Store the ALI file name of a source of the library (the first found)\n \n       procedure Add_ALI_For (Source : File_Name_Type);\n-      --  Add the name of the ALI file corresponding to Source to the\n-      --  Arguments.\n+      --  Add name of the ALI file corresponding to Source to the Arguments\n \n       procedure Add_Rpath (Path : String);\n       --  Add a path name to Rpath\n@@ -375,8 +374,8 @@ package body MLib.Prj is\n       --  to link with -lgnarl (this is the case when there is a dependency\n       --  on s-osinte.ads). On OpenVMS, set Libdecgnat_Needed if the ALI file\n       --  indicates that there is a need to link with -ldecgnat (this is the\n-      --  case when there is a dependency on dec.ads), and set\n-      --  Gtrasymobj_Needed if there is a dependency on g-trasym.ads.\n+      --  case when there is a dependency on dec.ads). Set Gtrasymobj_Needed\n+      --  if there is a dependency on g-trasym.ads.\n \n       procedure Process (The_ALI : File_Name_Type);\n       --  Check if the closure of a library unit which is or should be in the\n@@ -914,9 +913,9 @@ package body MLib.Prj is\n                                        In_Tree.Packages.Table\n                                          (Binder_Package).Decl.Arrays,\n                                      In_Tree   => In_Tree);\n-                     Switches : Variable_Value := Nil_Variable_Value;\n \n-                     Switch : String_List_Id := Nil_String;\n+                     Switches : Variable_Value := Nil_Variable_Value;\n+                     Switch   : String_List_Id := Nil_String;\n \n                   begin\n                      if Defaults /= No_Array_Element then\n@@ -1180,8 +1179,7 @@ package body MLib.Prj is\n \n             --  Invoke <gcc> -c b__<lib>.adb\n \n-            --  Allocate Arguments, if it is the first time we see a standalone\n-            --  library.\n+            --  Allocate Arguments, if first time we see a standalone library\n \n             if Arguments = No_Argument then\n                Arguments := new String_List (1 .. Initial_Argument_Max);\n@@ -1247,8 +1245,7 @@ package body MLib.Prj is\n                end;\n             end if;\n \n-            --  Now that all the arguments are set, compile the binder\n-            --  generated file.\n+            --  Now all the arguments are set, compile binder generated file\n \n             Display (Gcc);\n             Spawn\n@@ -1277,8 +1274,7 @@ package body MLib.Prj is\n             Driver_Name := Name_Id (For_Project.Config.Shared_Lib_Driver);\n          end if;\n \n-         --  If attribute Library_Options was specified, add these additional\n-         --  options.\n+         --  If attribute Library_Options was specified, add these options\n \n          Library_Options := Value_Of\n            (Name_Library_Options, For_Project.Decl.Attributes, In_Tree);\n@@ -1353,7 +1349,7 @@ package body MLib.Prj is\n          loop\n             if Current_Proj.Object_Directory /= No_Path_Information then\n \n-               --  The following code gets far too indented, I suggest some\n+               --  The following code gets far too indented ... suggest some\n                --  procedural abstraction here. How about making this declare\n                --  block a named procedure???\n \n@@ -1557,8 +1553,7 @@ package body MLib.Prj is\n          Opts.Increment_Last;\n          Opts.Table (Opts.Last) := new String'(\"-L\" & Lib_Directory);\n \n-         --  If Path Option is supported, add libgnat directory path name to\n-         --  Rpath.\n+         --  If Path Option supported, add libgnat directory path name to Rpath\n \n          if Path_Option /= null then\n             declare"}, {"sha": "099f0e44b153236aa89a34bf81a63e41af94c31b", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -427,9 +427,9 @@ package body Ch13 is\n \n             --  Check bad spelling\n \n-            for J in Aspect_Names'Range loop\n-               if Is_Bad_Spelling_Of (Token_Name, Aspect_Names (J).Nam) then\n-                  Error_Msg_Name_1 := Aspect_Names (J).Nam;\n+            for J in Aspect_Id loop\n+               if Is_Bad_Spelling_Of (Token_Name, Aspect_Names (J)) then\n+                  Error_Msg_Name_1 := Aspect_Names (J);\n                   Error_Msg_SC -- CODEFIX\n                     (\"\\possible misspelling of%\");\n                   exit;"}, {"sha": "f52857bab4fc133d6d6ecaec1024cefd8f230661", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -1142,6 +1142,8 @@ begin\n            Pragma_Controlled                    |\n            Pragma_Convention                    |\n            Pragma_Debug_Policy                  |\n+           Pragma_Default_Value                 |\n+           Pragma_Default_Component_Value       |\n            Pragma_Detect_Blocking               |\n            Pragma_Default_Storage_Pool          |\n            Pragma_Dimension                     |"}, {"sha": "c491ca94f9a4544463aec421459f1eefdbda4ae5", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -220,10 +220,10 @@ package Restrict is\n    --  message is posted on the node given as argument.\n \n    procedure Check_Formal_Restriction (Msg : String; N : Node_Id);\n-   --  Provides a wrappper on Error_Msg_F which prepends the special characters\n-   --  \"|~~\" (error not serious, language prepended) provided the current mode\n-   --  is formal verification and the node N comes originally from source.\n-   --  Otherwise, does nothing.\n+   --  Node N represents a construct not allowed in formal mode. If this is a\n+   --  source node, then an error is issued on N (using Err_Msg_F), prepending\n+   --  \"|~~\" (error not serious, language prepended). Call has no effect if\n+   --  not in formal mode, or if N does not come originally from source.\n \n    procedure Check_Implicit_Dynamic_Code_Allowed (N : Node_Id);\n    --  Tests to see if dynamic code generation (dynamically generated"}, {"sha": "6e15379b0bea5f30adcafd4fef617eebd48eb2aa", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -805,11 +805,13 @@ package body Sem_Aggr is\n    procedure Check_Qualified_Aggregate (Level : Nat; Expr : Node_Id) is\n       Comp_Expr : Node_Id;\n       Comp_Assn : Node_Id;\n+\n    begin\n       if Level = 0 then\n          if Nkind (Parent (Expr)) /= N_Qualified_Expression then\n             Check_Formal_Restriction (\"aggregate should be qualified\", Expr);\n          end if;\n+\n       else\n          Comp_Expr := First (Expressions (Expr));\n          while Present (Comp_Expr) loop"}, {"sha": "81c59d5e124fab386faf2e87ec2737cf3e2100c5", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -5064,10 +5064,10 @@ package body Sem_Ch12 is\n             --  exchange views to restore the proper visiblity in the instance.\n \n             declare\n-               Typ          : constant Entity_Id := Base_Type (Etype (E));\n+               Typ : constant Entity_Id := Base_Type (Etype (E));\n                --  The type of the actual\n \n-               Gen_Id       : Entity_Id;\n+               Gen_Id : Entity_Id;\n                --  The generic unit\n \n                Parent_Scope : Entity_Id;"}, {"sha": "70625112cfc9487da0f5d05e9ebafea21b504bd1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -982,7 +982,31 @@ package body Sem_Ch13 is\n \n                --  Aspects corresponding to pragmas with two arguments, where\n                --  the first argument is a local name referring to the entity,\n-               --  and the second argument is the aspect definition expression.\n+               --  and the second argument is the aspect definition expression\n+               --  which is an expression which must be delayed and analyzed.\n+\n+               when Aspect_Default_Component_Value |\n+                    Aspect_Default_Value           =>\n+\n+                  --  Construct the pragma\n+\n+                  Aitem :=\n+                    Make_Pragma (Loc,\n+                      Pragma_Argument_Associations => New_List (\n+                        New_Occurrence_Of (E, Eloc),\n+                        Relocate_Node (Expr)),\n+                      Pragma_Identifier            =>\n+                        Make_Identifier (Sloc (Id), Chars (Id)));\n+\n+                  --  These aspects do require delaying\n+\n+                  Delay_Required := True;\n+                  Set_Is_Delayed_Aspect (Aspect);\n+\n+               --  Aspects corresponding to pragmas with two arguments, where\n+               --  the first argument is a local name referring to the entity,\n+               --  and the second argument is the aspect definition expression\n+               --  which is an expression that does not get analyzed.\n \n                when Aspect_Suppress   |\n                     Aspect_Unsuppress =>\n@@ -5209,20 +5233,25 @@ package body Sem_Ch13 is\n          when Library_Unit_Aspects =>\n             raise Program_Error;\n \n-         --  Aspects taking an optional boolean argument. Note that we will\n-         --  never be called with an empty expression, because such aspects\n-         --  never need to be delayed anyway.\n+         --  Aspects taking an optional boolean argument. Should be impossible\n+         --  since these are never delayed.\n \n          when Boolean_Aspects =>\n-            pragma Assert (Present (Expression (ASN)));\n-            T := Standard_Boolean;\n+            raise Program_Error;\n+\n+         --  Default_Value and Default_Component_Value are resolved with\n+         --  the entity, which is the type in question.\n+\n+         when Aspect_Default_Component_Value |\n+              Aspect_Default_Value           =>\n+            T := Entity (ASN);\n \n          --  Aspects corresponding to attribute definition clauses\n \n-         when Aspect_Address      =>\n+         when Aspect_Address =>\n             T := RTE (RE_Address);\n \n-         when Aspect_Bit_Order    =>\n+         when Aspect_Bit_Order =>\n             T := RTE (RE_Bit_Order);\n \n          when Aspect_External_Tag =>"}, {"sha": "33aa6ac59c5fa7c001413da4b30526ba47423dc7", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -7266,6 +7266,139 @@ package body Sem_Prag is\n             Debug_Pragmas_Enabled :=\n               Chars (Get_Pragma_Arg (Arg1)) = Name_Check;\n \n+         -----------------------------\n+         -- Default_Component_Value --\n+         -----------------------------\n+\n+         when Pragma_Default_Component_Value => declare\n+            Arg : Node_Id;\n+            E   : Entity_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_Arg_Count (2);\n+            Check_Arg_Is_Local_Name (Arg1);\n+\n+            Arg := Get_Pragma_Arg (Arg1);\n+            Analyze (Arg);\n+\n+            if Etype (Arg) = Any_Type then\n+               return;\n+            end if;\n+\n+            if not Is_Entity_Name (Arg)\n+              or else not Is_Array_Type (Entity (Arg))\n+            then\n+               Error_Pragma_Arg (\"pragma% requires an array type\", Arg1);\n+            end if;\n+\n+            Check_First_Subtype (Arg1);\n+\n+            E := Entity (Arg);\n+            Check_Duplicate_Pragma (E);\n+\n+            --  Check for rep item too early or too late, but skip this if\n+            --  the pragma comes from the corresponding aspect, since we do\n+            --  not need the checks, and more importantly, the pragma is on\n+            --  the rep item chain alreay, and must not be put there twice!\n+\n+            if not From_Aspect_Specification (N) then\n+               if Rep_Item_Too_Early (E, N)\n+                    or else\n+                  Rep_Item_Too_Late (E, N)\n+               then\n+                  return;\n+               end if;\n+            end if;\n+\n+            --  Analyze the default value\n+\n+            Arg := Get_Pragma_Arg (Arg2);\n+            Analyze_And_Resolve (Arg, Component_Type (E));\n+\n+            if not Is_OK_Static_Expression (Arg) then\n+               Flag_Non_Static_Expr\n+                 (\"non-static expression not allowed for \" &\n+                  \"Default_Component_Value\",\n+                  Arg2);\n+               raise Pragma_Exit;\n+            end if;\n+\n+            --  Set the flag on the root type and then check for Rep_Item too\n+            --  early or too late, the latter call chains the pragma onto the\n+            --  Rep_Item chain.\n+\n+            Set_Has_Default_Component_Value (Base_Type (E));\n+         end;\n+\n+         -------------------\n+         -- Default_Value --\n+         -------------------\n+\n+         when Pragma_Default_Value => declare\n+            Arg : Node_Id;\n+            E   : Entity_Id;\n+\n+         begin\n+            --  Error checks\n+\n+            GNAT_Pragma;\n+            Check_Arg_Count (2);\n+            Check_Arg_Is_Local_Name (Arg1);\n+\n+            Arg := Get_Pragma_Arg (Arg1);\n+            Analyze (Arg);\n+\n+            if Etype (Arg) = Any_Type then\n+               return;\n+            end if;\n+\n+            if not Is_Entity_Name (Arg)\n+              or else not Is_Scalar_Type (Entity (Arg))\n+            then\n+               Error_Pragma_Arg (\"pragma% requires a scalar type\", Arg1);\n+            end if;\n+\n+            Check_First_Subtype (Arg1);\n+\n+            E := Entity (Arg);\n+            Check_Duplicate_Pragma (E);\n+\n+            --  Check for rep item too early or too late, but skip this if\n+            --  the pragma comes from the corresponding aspect, since we do\n+            --  not need the checks, and more importantly, the pragma is on\n+            --  the rep item chain alreay, and must not be put there twice!\n+\n+            if not From_Aspect_Specification (N) then\n+               if Rep_Item_Too_Early (E, N)\n+                    or else\n+                  Rep_Item_Too_Late (E, N)\n+               then\n+                  return;\n+               end if;\n+            end if;\n+\n+            --  Analyze the default value. Note that we must do that after\n+            --  checking for Rep_Item_Too_Late since this resolution will\n+            --  freeze the type involved.\n+\n+            Arg := Get_Pragma_Arg (Arg2);\n+            Analyze_And_Resolve (Arg, E);\n+\n+            if not Is_OK_Static_Expression (Arg) then\n+               Flag_Non_Static_Expr\n+                 (\"non-static expression not allowed for Default_Value\",\n+                  Arg2);\n+               raise Pragma_Exit;\n+            end if;\n+\n+            --  Set the flag on the root type and then check for Rep_Item too\n+            --  early or too late, the latter call chains the pragma onto the\n+            --  Rep_Item chain.\n+\n+            Set_Has_Default_Value (Base_Type (E));\n+         end;\n+\n          ---------------------\n          -- Detect_Blocking --\n          ---------------------\n@@ -13910,6 +14043,8 @@ package body Sem_Prag is\n       Pragma_Convention_Identifier         =>  0,\n       Pragma_Debug                         => -1,\n       Pragma_Debug_Policy                  =>  0,\n+      Pragma_Default_Value                 => -1,\n+      Pragma_Default_Component_Value       => -1,\n       Pragma_Detect_Blocking               => -1,\n       Pragma_Default_Storage_Pool          => -1,\n       Pragma_Dimension                     => -1,"}, {"sha": "b1c23c135fce9f91f6b6a51b88b0298b0be8556e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 73, "deletions": 69, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -644,8 +644,8 @@ package body Sem_Res is\n                                              N_Derived_Type_Definition)\n               and then D = Constraint (P))\n \n-         --  The constraint itself may be given by a subtype indication,\n-         --  rather than by a more common discrete range.\n+           --  The constraint itself may be given by a subtype indication,\n+           --  rather than by a more common discrete range.\n \n            or else (Nkind (P) = N_Subtype_Indication\n                       and then\n@@ -869,7 +869,7 @@ package body Sem_Res is\n                   exit when Nkind (Nod) /= N_Raise_Statement\n                     and then\n                       (Nkind (Nod) not in N_Raise_xxx_Error\n-                         or else Present (Condition (Nod)));\n+                        or else Present (Condition (Nod)));\n                end;\n             end if;\n \n@@ -1018,9 +1018,9 @@ package body Sem_Res is\n          --  functions, this is never a parameterless call (RM 4.1.4(6)).\n \n          if Nkind (Parent (N)) = N_Attribute_Reference\n-            and then (Attribute_Name (Parent (N)) = Name_Address\n-              or else Attribute_Name (Parent (N)) = Name_Code_Address\n-              or else Attribute_Name (Parent (N)) = Name_Access)\n+            and then (Attribute_Name (Parent (N)) = Name_Address      or else\n+                      Attribute_Name (Parent (N)) = Name_Code_Address or else\n+                      Attribute_Name (Parent (N)) = Name_Access)\n          then\n             return False;\n          end if;\n@@ -1900,9 +1900,9 @@ package body Sem_Res is\n       --  a non-remote access-to-subprogram type.\n \n       if Nkind (N) = N_Attribute_Reference\n-        and then (Attribute_Name (N) = Name_Access\n-                    or else Attribute_Name (N) = Name_Unrestricted_Access\n-                    or else Attribute_Name (N) = Name_Unchecked_Access)\n+        and then (Attribute_Name (N) = Name_Access              or else\n+                  Attribute_Name (N) = Name_Unrestricted_Access or else\n+                  Attribute_Name (N) = Name_Unchecked_Access)\n         and then Comes_From_Source (N)\n         and then Is_Entity_Name (Prefix (N))\n         and then Is_Subprogram (Entity (Prefix (N)))\n@@ -1922,8 +1922,7 @@ package body Sem_Res is\n \n       if Nkind (N) = N_Attribute_Reference\n         and then Comes_From_Source (N)\n-        and then (Is_Remote_Call_Interface (Typ)\n-                    or else Is_Remote_Types (Typ))\n+        and then (Is_Remote_Call_Interface (Typ) or else Is_Remote_Types (Typ))\n       then\n          declare\n             Attr      : constant Attribute_Id :=\n@@ -1970,16 +1969,16 @@ package body Sem_Res is\n                --   perform semantic checks against the corresponding\n                --   remote entities.\n \n-               if (Attr = Attribute_Access\n-                    or else Attr = Attribute_Unchecked_Access\n-                    or else Attr = Attribute_Unrestricted_Access)\n+               if (Attr = Attribute_Access           or else\n+                   Attr = Attribute_Unchecked_Access or else\n+                   Attr = Attribute_Unrestricted_Access)\n                  and then Expander_Active\n                  and then Get_PCS_Name /= Name_No_DSA\n                then\n                   Check_Subtype_Conformant\n                     (New_Id  => Entity (Prefix (N)),\n                      Old_Id  => Designated_Type\n-                       (Corresponding_Remote_Type (Typ)),\n+                                  (Corresponding_Remote_Type (Typ)),\n                      Err_Loc => N);\n \n                   if Is_Remote then\n@@ -2512,6 +2511,7 @@ package body Sem_Res is\n                         --  Protected operation: retrieve operation name\n \n                         Subp_Name := Selector_Name (Name (N));\n+\n                      else\n                         raise Program_Error;\n                      end if;\n@@ -2542,6 +2542,7 @@ package body Sem_Res is\n                   else\n                      Error_Msg_N (\"\\use -gnatf for details\", N);\n                   end if;\n+\n                else\n                   Wrong_Type (N, Typ);\n                end if;\n@@ -2565,11 +2566,11 @@ package body Sem_Res is\n          --  types, rather than a specific type, propagate the actual type\n          --  downward.\n \n-         if Typ = Any_Integer\n-           or else Typ = Any_Boolean\n-           or else Typ = Any_Modular\n-           or else Typ = Any_Real\n-           or else Typ = Any_Discrete\n+         if Typ = Any_Integer or else\n+            Typ = Any_Boolean or else\n+            Typ = Any_Modular or else\n+            Typ = Any_Real    or else\n+            Typ = Any_Discrete\n          then\n             Ctx_Type := Expr_Type;\n \n@@ -2880,13 +2881,10 @@ package body Sem_Res is\n          --  not come from source, or this warning is off.\n \n          if not Warn_On_Parameter_Order\n-           or else\n-             No (Parameter_Associations (N))\n-           or else\n-             not Nkind_In (Original_Node (N), N_Procedure_Call_Statement,\n-                                              N_Function_Call)\n-           or else\n-             not Comes_From_Source (N)\n+           or else No (Parameter_Associations (N))\n+           or else not Nkind_In (Original_Node (N), N_Procedure_Call_Statement,\n+                                                    N_Function_Call)\n+           or else not Comes_From_Source (N)\n          then\n             return;\n          end if;\n@@ -3299,6 +3297,7 @@ package body Sem_Res is\n                  and then Ekind (F) /= E_In_Parameter\n                then\n                   Generate_Reference (Orig_A, A, 'm');\n+\n                elsif not Is_Overloaded (A) then\n                   Generate_Reference (Orig_A, A);\n                end if;\n@@ -3307,8 +3306,7 @@ package body Sem_Res is\n \n          if Present (A)\n            and then (Nkind (Parent (A)) /= N_Parameter_Association\n-                       or else\n-                     Chars (Selector_Name (Parent (A))) = Chars (F))\n+                      or else Chars (Selector_Name (Parent (A))) = Chars (F))\n          then\n             --  If style checking mode on, check match of formal name\n \n@@ -3417,8 +3415,7 @@ package body Sem_Res is\n               and then Is_Limited_Record (Etype (F))\n               and then not Is_Constrained (Etype (F))\n               and then Expander_Active\n-              and then\n-                (Is_Controlled (Etype (F)) or else Has_Task (Etype (F)))\n+              and then (Is_Controlled (Etype (F)) or else Has_Task (Etype (F)))\n             then\n                Establish_Transient_Scope (A, False);\n \n@@ -3624,7 +3621,7 @@ package body Sem_Res is\n \n                if Is_Scalar_Type (A_Typ)\n                  or else (Ekind (F) = E_In_Parameter\n-                            and then not Is_Partially_Initialized_Type (A_Typ))\n+                           and then not Is_Partially_Initialized_Type (A_Typ))\n                then\n                   Check_Unset_Reference (A);\n                end if;\n@@ -3722,7 +3719,7 @@ package body Sem_Res is\n                  and then Has_Discriminants (F_Typ)\n                  and then Is_Constrained (F_Typ)\n                  and then (not Is_Derived_Type (F_Typ)\n-                             or else Comes_From_Source (Nam))\n+                            or else Comes_From_Source (Nam))\n                then\n                   Apply_Discriminant_Check (A, F_Typ);\n \n@@ -3780,12 +3777,10 @@ package body Sem_Res is\n                else\n                   if Is_Scalar_Type (F_Typ) then\n                      Apply_Scalar_Range_Check (A, A_Typ, F_Typ);\n-\n                   elsif Is_Array_Type (F_Typ)\n                     and then Ekind (F) = E_Out_Parameter\n                   then\n                      Apply_Length_Check (A, F_Typ);\n-\n                   else\n                      Apply_Range_Check (A, A_Typ, F_Typ);\n                   end if;\n@@ -4208,7 +4203,7 @@ package body Sem_Res is\n          --  class-wide matching is not allowed.\n \n          if (Is_Class_Wide_Type (Etype (Expression (E)))\n-                 or else Is_Class_Wide_Type (Etype (E)))\n+              or else Is_Class_Wide_Type (Etype (E)))\n            and then Base_Type (Etype (Expression (E))) /= Base_Type (Etype (E))\n          then\n             Wrong_Type (Expression (E), Etype (E));\n@@ -4593,15 +4588,13 @@ package body Sem_Res is\n             Get_First_Interp (N, Index, It);\n             while Present (It.Typ) loop\n                if Base_Type (It.Typ) = Base_Type (Standard_Integer) then\n-\n                   if Analyzed (N) then\n                      Error_Msg_N (\"ambiguous operand in fixed operation\", N);\n                   else\n                      Resolve (N, Standard_Integer);\n                   end if;\n \n                elsif Is_Fixed_Point_Type (It.Typ) then\n-\n                   if Analyzed (N) then\n                      Error_Msg_N (\"ambiguous operand in fixed operation\", N);\n                   else\n@@ -5206,12 +5199,13 @@ package body Sem_Res is\n       elsif (Needs_No_Actuals (Nam) or else Needs_One_Actual (Nam))\n         and then\n           ((Is_Array_Type (Etype (Nam))\n-                   and then Covers (Typ, Component_Type (Etype (Nam))))\n+             and then Covers (Typ, Component_Type (Etype (Nam))))\n              or else (Is_Access_Type (Etype (Nam))\n-                        and then Is_Array_Type (Designated_Type (Etype (Nam)))\n-                        and then\n-                          Covers (Typ,\n-                            Component_Type (Designated_Type (Etype (Nam))))))\n+                       and then Is_Array_Type (Designated_Type (Etype (Nam)))\n+                       and then\n+                         Covers\n+                          (Typ,\n+                           Component_Type (Designated_Type (Etype (Nam))))))\n       then\n          declare\n             Index_Node : Node_Id;\n@@ -5873,7 +5867,7 @@ package body Sem_Res is\n    procedure Resolve_Conditional_Expression (N : Node_Id; Typ : Entity_Id) is\n       Condition : constant Node_Id := First (Expressions (N));\n       Then_Expr : constant Node_Id := Next (Condition);\n-      Else_Expr : Node_Id := Next (Then_Expr);\n+      Else_Expr : Node_Id          := Next (Then_Expr);\n \n    begin\n       Resolve (Condition, Any_Boolean);\n@@ -6071,9 +6065,9 @@ package body Sem_Res is\n       elsif Ekind (E) = E_Out_Parameter\n         and then Ada_Version = Ada_83\n         and then (Nkind (Parent (N)) in N_Op\n-                    or else (Nkind (Parent (N)) = N_Assignment_Statement\n-                              and then N = Expression (Parent (N)))\n-                    or else Nkind (Parent (N)) = N_Explicit_Dereference)\n+                   or else (Nkind (Parent (N)) = N_Assignment_Statement\n+                             and then N = Expression (Parent (N)))\n+                   or else Nkind (Parent (N)) = N_Explicit_Dereference)\n       then\n          Error_Msg_N (\"(Ada 83) illegal reading of out parameter\", N);\n \n@@ -6188,9 +6182,7 @@ package body Sem_Res is\n \n       begin\n          if not Has_Discriminants (Tsk)\n-           or else (not Is_Entity_Name (Lo)\n-                     and then\n-                    not Is_Entity_Name (Hi))\n+           or else (not Is_Entity_Name (Lo) and then not Is_Entity_Name (Hi))\n          then\n             return Entry_Index_Type (E);\n \n@@ -6413,8 +6405,10 @@ package body Sem_Res is\n \n             or else (Is_Access_Type (Etype (Nam))\n                       and then Is_Array_Type (Designated_Type (Etype (Nam)))\n-                      and then Covers (Typ,\n-                        Component_Type (Designated_Type (Etype (Nam))))))\n+                      and then\n+                        Covers\n+                         (Typ,\n+                          Component_Type (Designated_Type (Etype (Nam))))))\n       then\n          declare\n             Index_Node : Node_Id;\n@@ -6423,8 +6417,7 @@ package body Sem_Res is\n             Index_Node :=\n               Make_Indexed_Component (Loc,\n                 Prefix =>\n-                  Make_Function_Call (Loc,\n-                    Name => Relocate_Node (Entry_Name)),\n+                  Make_Function_Call (Loc, Name => Relocate_Node (Entry_Name)),\n                 Expressions => Parameter_Associations (N));\n \n             --  Since we are correcting a node classification error made by\n@@ -6449,6 +6442,7 @@ package body Sem_Res is\n          declare\n             New_Call    : Node_Id;\n             New_Actuals : List_Id;\n+\n          begin\n             New_Actuals := New_List (Obj);\n \n@@ -6654,9 +6648,9 @@ package body Sem_Res is\n       end if;\n \n       if T /= Any_Type then\n-         if T = Any_String\n-           or else T = Any_Composite\n-           or else T = Any_Character\n+         if T = Any_String    or else\n+            T = Any_Composite or else\n+            T = Any_Character\n          then\n             if T = Any_Character then\n                Ambiguous_Character (L);\n@@ -6701,6 +6695,7 @@ package body Sem_Res is\n \n          if Is_Array_Type (T)\n            and then Base_Type (T) /= Standard_String\n+           and then Base_Type (Etype (L)) = Base_Type (Etype (R))\n            and then not Matching_Static_Array_Bounds (Etype (L), Etype (R))\n          then\n             Check_Formal_Restriction\n@@ -6739,7 +6734,7 @@ package body Sem_Res is\n            or else Comes_From_Source (Entity (N))\n            or else Ekind (Entity (N)) = E_Operator\n            or else Is_Intrinsic_Subprogram\n-             (Corresponding_Equality (Entity (N)))\n+                     (Corresponding_Equality (Entity (N)))\n          then\n             Eval_Relational_Op (N);\n \n@@ -6913,8 +6908,10 @@ package body Sem_Res is\n                      and then Covers (Typ, Component_Type (It.Typ)))\n                  or else (Is_Access_Type (It.Typ)\n                             and then Is_Array_Type (Designated_Type (It.Typ))\n-                            and then Covers\n-                              (Typ, Component_Type (Designated_Type (It.Typ))))\n+                            and then\n+                              Covers\n+                                (Typ,\n+                                 Component_Type (Designated_Type (It.Typ))))\n                then\n                   if Found then\n                      It := Disambiguate (P, I1, I, Any_Type);\n@@ -7212,6 +7209,7 @@ package body Sem_Res is\n            (\"no modular type available in this context\", N);\n          Set_Etype (N, Any_Type);\n          return;\n+\n       elsif Is_Modular_Integer_Type (Typ)\n         and then Etype (Left_Opnd (N)) = Universal_Integer\n         and then Etype (Right_Opnd (N)) = Universal_Integer\n@@ -7231,9 +7229,14 @@ package body Sem_Res is\n \n       --  In SPARK or ALFA, logical operations AND, OR and XOR for arrays are\n       --  defined only when both operands have same static lower and higher\n-      --  bounds.\n+      --  bounds. Of course the types have to match, so only check if operands\n+      --  are compatible and the node itself has no errors.\n \n       if Is_Array_Type (B_Typ)\n+        and then Nkind (N) in N_Binary_Op\n+        and then\n+          Base_Type (Etype (Left_Opnd (N)))\n+            = Base_Type (Etype (Right_Opnd (N)))\n         and then not Matching_Static_Array_Bounds (Etype (Left_Opnd (N)),\n                                                    Etype (Right_Opnd (N)))\n       then\n@@ -7301,7 +7304,8 @@ package body Sem_Res is\n \n       elsif not Is_Overloaded (R)\n         and then\n-          (Etype (R) = Universal_Integer or else\n+          (Etype (R) = Universal_Integer\n+             or else\n            Etype (R) = Universal_Real)\n         and then Is_Overloaded (L)\n       then\n@@ -7327,7 +7331,6 @@ package body Sem_Res is\n         and then not Is_Interface (Etype (R))\n       then\n          return;\n-\n       else\n          T := Intersect_Types (L, R);\n       end if;\n@@ -7560,13 +7563,14 @@ package body Sem_Res is\n                   else\n                      Error_Msg_N\n                        (\"ambiguous operand for concatenation!\", Arg);\n+\n                      Get_First_Interp (Arg, I, It);\n                      while Present (It.Nam) loop\n                         Error_Msg_Sloc := Sloc (It.Nam);\n \n                         if Base_Type (It.Typ) = Base_Type (Typ)\n                           or else Base_Type (It.Typ) =\n-                            Base_Type (Component_Type (Typ))\n+                                  Base_Type (Component_Type (Typ))\n                         then\n                            Error_Msg_N -- CODEFIX\n                              (\"\\\\possible interpretation#\", Arg);\n@@ -9851,8 +9855,7 @@ package body Sem_Res is\n             while Present (T2) loop\n                if Is_Fixed_Point_Type (T2)\n                  and then Scope (Base_Type (T2)) = Scop\n-                 and then (Is_Potentially_Use_Visible (T2)\n-                             or else In_Use (T2))\n+                 and then (Is_Potentially_Use_Visible (T2) or else In_Use (T2))\n                then\n                   if Present (T1) then\n                      Fixed_Point_Error;\n@@ -9991,9 +9994,9 @@ package body Sem_Res is\n                --  checks that must be applied to such conversions to prevent\n                --  out-of-scope references.\n \n-            elsif\n-              Ekind_In (Target_Comp_Base, E_Anonymous_Access_Type,\n-                                          E_Anonymous_Access_Subprogram_Type)\n+            elsif Ekind_In\n+                    (Target_Comp_Base, E_Anonymous_Access_Type,\n+                                       E_Anonymous_Access_Subprogram_Type)\n               and then Ekind (Opnd_Comp_Base) = Ekind (Target_Comp_Base)\n               and then\n                 Subtypes_Statically_Match (Target_Comp_Type, Opnd_Comp_Type)\n@@ -10019,6 +10022,7 @@ package body Sem_Res is\n                        \"has deeper accessibility level than target\", Operand);\n                      return False;\n                   end if;\n+\n                else\n                   null;\n                end if;"}, {"sha": "ba346c496545eb82681af43dda47a4cfe6d6e25f", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -448,6 +448,8 @@ package Snames is\n    Name_CPP_Vtable                     : constant Name_Id := N + $; -- GNAT\n    Name_CPU                            : constant Name_Id := N + $; -- Ada 12\n    Name_Debug                          : constant Name_Id := N + $; -- GNAT\n+   Name_Default_Value                  : constant Name_Id := N + $; -- GNAT\n+   Name_Default_Component_Value        : constant Name_Id := N + $; -- GNAT\n    Name_Dimension                      : constant Name_Id := N + $; -- GNAT\n    Name_Elaborate                      : constant Name_Id := N + $; -- Ada 83\n    Name_Elaborate_All                  : constant Name_Id := N + $;\n@@ -1554,6 +1556,8 @@ package Snames is\n       Pragma_CPP_Vtable,\n       Pragma_CPU,\n       Pragma_Debug,\n+      Pragma_Default_Value,\n+      Pragma_Default_Component_Value,\n       Pragma_Dimension,\n       Pragma_Elaborate,\n       Pragma_Elaborate_All,"}, {"sha": "503c6f4366ece46f7d4fe1d965cac4b60c316d8f", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb051ccb54f06f292307830cb5bce6bf6268bd/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=19fb051ccb54f06f292307830cb5bce6bf6268bd", "patch": "@@ -1062,8 +1062,15 @@ package body Sprint is\n             Write_Str_Sloc (\" and then \");\n             Sprint_Right_Opnd (Node);\n \n+         --  Note: the following code for N_Aspect_Specification is not\n+         --  normally used, since we deal with aspects as part of a\n+         --  declaration, but it is here in case we deliberately try\n+         --  to print an N_Aspect_Speficiation node (e.g. from GDB).\n+\n          when N_Aspect_Specification =>\n-            raise Program_Error;\n+            Sprint_Node (Identifier (Node));\n+            Write_Str (\" => \");\n+            Sprint_Node (Expression (Node));\n \n          when N_Assignment_Statement =>\n             Write_Indent;"}]}