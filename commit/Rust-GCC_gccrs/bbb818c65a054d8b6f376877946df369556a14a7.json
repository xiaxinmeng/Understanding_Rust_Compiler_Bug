{"sha": "bbb818c65a054d8b6f376877946df369556a14a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJiODE4YzY1YTA1NGQ4YjZmMzc2ODc3OTQ2ZGYzNjk1NTZhMTRhNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-01-09T09:18:52Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-01-09T09:18:52Z"}, "message": "re PR c/8032 (GCC >= 3.0 incorrectly initializes static structs in the presence of flexible arrays)\n\n\tPR c/8032\n\t* c-typeck.c (process_init_element) [RECORD_TYPE]: For\n\tan empty element, do not advance the pointer to unfilled\n\tfields if there are pending initializers.\n\nFrom-SVN: r61092", "tree": {"sha": "5ef97ae8c4bf6d90e10c5a2d5ddeae71991ee6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ef97ae8c4bf6d90e10c5a2d5ddeae71991ee6df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbb818c65a054d8b6f376877946df369556a14a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb818c65a054d8b6f376877946df369556a14a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb818c65a054d8b6f376877946df369556a14a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb818c65a054d8b6f376877946df369556a14a7/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb27f449b60ffc5976719633c328097d5384ae6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb27f449b60ffc5976719633c328097d5384ae6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb27f449b60ffc5976719633c328097d5384ae6c"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "cc6771beeeea76ec64ccb82062c89bf1c5ddb842", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbb818c65a054d8b6f376877946df369556a14a7", "patch": "@@ -1,3 +1,10 @@\n+2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR c/8032\n+\t* c-typeck.c (process_init_element) [RECORD_TYPE]: For\n+\tan empty element, do not advance the pointer to unfilled\n+\tfields if there are pending initializers.\n+\n 2003-01-09  Christian Cornelssen  <ccorn@cs.tu-berlin.de>\n \n \t* Makefile.in (ORDINARY_FLAGS_TO_PASS): Also pass DESTDIR."}, {"sha": "c5b4ecbf9d3e96f837f4cd617510f36647ae4764", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=bbb818c65a054d8b6f376877946df369556a14a7", "patch": "@@ -6609,13 +6609,18 @@ process_init_element (value)\n \t\t\t        bit_position (constructor_fields),\n \t\t\t        DECL_SIZE (constructor_fields));\n \n-\t      constructor_unfilled_fields = TREE_CHAIN (constructor_fields);\n-\t      /* Skip any nameless bit fields.  */\n-\t      while (constructor_unfilled_fields != 0\n-\t\t     && DECL_C_BIT_FIELD (constructor_unfilled_fields)\n-\t\t     && DECL_NAME (constructor_unfilled_fields) == 0)\n-\t\tconstructor_unfilled_fields =\n-\t\t  TREE_CHAIN (constructor_unfilled_fields);\n+\t      /* If the current field was the first one not yet written out,\n+\t\t it isn't now, so update.  */\n+\t      if (constructor_unfilled_fields == constructor_fields)\n+\t\t{\n+\t\t  constructor_unfilled_fields = TREE_CHAIN (constructor_fields);\n+\t\t  /* Skip any nameless bit fields.  */\n+\t\t  while (constructor_unfilled_fields != 0\n+\t\t\t && DECL_C_BIT_FIELD (constructor_unfilled_fields)\n+\t\t\t && DECL_NAME (constructor_unfilled_fields) == 0)\n+\t\t    constructor_unfilled_fields =\n+\t\t      TREE_CHAIN (constructor_unfilled_fields);\n+\t\t}\n \t    }\n \n \t  constructor_fields = TREE_CHAIN (constructor_fields);"}, {"sha": "2582c719266cbafa6aa7fcfaa76588e51af39cf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbb818c65a054d8b6f376877946df369556a14a7", "patch": "@@ -1,3 +1,7 @@\n+2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20030109-1.c: New test.\n+\n 2003-01-08  Larin Hennessey  <larin@science.oregonstate.edu>\n \n \t* g++.old-deja/g++.mike/dyncast1.C: Remove reference to AMD A29K"}, {"sha": "1bea931f64ca9fc8bcdb0cf016b48d2d30217a18", "filename": "gcc/testsuite/gcc.c-torture/execute/20030109-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030109-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb818c65a054d8b6f376877946df369556a14a7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030109-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030109-1.c?ref=bbb818c65a054d8b6f376877946df369556a14a7", "patch": "@@ -0,0 +1,20 @@\n+/* PR c/8032 */\n+/* Verify that an empty initializer inside a partial\n+   parent initializer doesn't confuse GCC.  */\n+\n+struct X\n+{\n+  int a;\n+  int b;\n+  int z[];\n+};\n+\n+struct X x = { .b = 40, .z = {} };\n+\n+int main ()\n+{\n+  if (x.b != 40)\n+    abort ();\n+\n+  return 0;\n+}"}]}