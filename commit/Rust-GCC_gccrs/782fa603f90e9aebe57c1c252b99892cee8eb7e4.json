{"sha": "782fa603f90e9aebe57c1c252b99892cee8eb7e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgyZmE2MDNmOTBlOWFlYmU1N2MxYzI1MmI5OTg5MmNlZThlYjdlNA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-10-26T10:56:31Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-10-26T10:56:31Z"}, "message": "expr.c (emit_group_load): Handle floats.\n\n        * expr.c (emit_group_load): Handle floats.\n        (emit_group_store): Same.\n\nFrom-SVN: r89579", "tree": {"sha": "a99ecf57445660a6ada62dd6d1c43240fb68f89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99ecf57445660a6ada62dd6d1c43240fb68f89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/782fa603f90e9aebe57c1c252b99892cee8eb7e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782fa603f90e9aebe57c1c252b99892cee8eb7e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/782fa603f90e9aebe57c1c252b99892cee8eb7e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782fa603f90e9aebe57c1c252b99892cee8eb7e4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea0ffdd2601e6a2807ac75bd9eea9c6d7a609e91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0ffdd2601e6a2807ac75bd9eea9c6d7a609e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0ffdd2601e6a2807ac75bd9eea9c6d7a609e91"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "64fe9aba3d4b8a3f42dea6e816c53701cbd17ada", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/782fa603f90e9aebe57c1c252b99892cee8eb7e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/782fa603f90e9aebe57c1c252b99892cee8eb7e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=782fa603f90e9aebe57c1c252b99892cee8eb7e4", "patch": "@@ -1,3 +1,8 @@\n+2004-10-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * expr.c (emit_group_load): Handle floats.\n+        (emit_group_store): Same.\n+\n 2004-10-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* c-lex.c (get_nonpadding_token): Remove."}, {"sha": "e71c22f8df305bea1232dafeb9aae6b30e37b680", "filename": "gcc/expr.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/782fa603f90e9aebe57c1c252b99892cee8eb7e4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/782fa603f90e9aebe57c1c252b99892cee8eb7e4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=782fa603f90e9aebe57c1c252b99892cee8eb7e4", "patch": "@@ -1570,6 +1570,23 @@ emit_group_load (rtx dst, rtx orig_src, tree type ATTRIBUTE_UNUSED, int ssize)\n \n   gcc_assert (GET_CODE (dst) == PARALLEL);\n \n+  if (!SCALAR_INT_MODE_P (GET_MODE (orig_src)))\n+    {\n+      enum machine_mode imode = int_mode_for_mode (GET_MODE (orig_src));\n+      if (imode == BLKmode)\n+\tsrc = assign_stack_temp (GET_MODE (orig_src), ssize, 0);\n+      else\n+\tsrc = gen_reg_rtx (imode);\n+      if (imode != BLKmode)\n+\tsrc = gen_lowpart (GET_MODE (orig_src), src);\n+      emit_move_insn (src, orig_src);\n+      /* ...and back again.  */\n+      if (imode != BLKmode)\n+\tsrc = gen_lowpart (imode, src);\n+      emit_group_load (dst, src, type, ssize);\n+      return;\n+    }\n+\n   /* Check for a NULL entry, used to indicate that the parameter goes\n      both on the stack and in registers.  */\n   if (XEXP (XVECEXP (dst, 0, 0), 0))\n@@ -1726,6 +1743,20 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n \n   gcc_assert (GET_CODE (src) == PARALLEL);\n \n+  if (!SCALAR_INT_MODE_P (GET_MODE (orig_dst)))\n+    {\n+      enum machine_mode imode = int_mode_for_mode (GET_MODE (orig_dst));\n+      if (imode == BLKmode)\n+        dst = assign_stack_temp (GET_MODE (orig_dst), ssize, 0);\n+      else\n+        dst = gen_reg_rtx (imode);\n+      emit_group_store (dst, src, type, ssize);\n+      if (imode != BLKmode)\n+        dst = gen_lowpart (GET_MODE (orig_dst), dst);\n+      emit_move_insn (orig_dst, dst);\n+      return;\n+    }\n+\n   /* Check for a NULL entry, used to indicate that the parameter goes\n      both on the stack and in registers.  */\n   if (XEXP (XVECEXP (src, 0, 0), 0))"}]}