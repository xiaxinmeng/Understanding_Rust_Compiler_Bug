{"sha": "88e3a2a3983942615023ee9e1c8739edc0c16e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlM2EyYTM5ODM5NDI2MTUwMjNlZTllMWM4NzM5ZWRjMGMxNmU3Yw==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2004-02-20T04:19:33Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2004-02-20T04:19:33Z"}, "message": "move-if-change: Remove.\n\n\t* move-if-change: Remove.\n\t* Makefile.in (s-mlib, c-parse.y, s-check, s-gencheck)\n\t(s-specs, s-options, s-config, s-conditions, s-flags, s-codes)\n\t(s-constants, s-emit, s-recog, s-opinit, s-extract, s-peep)\n\t(s-attr, s-attrtab, s-output, s-genrtl, s-modes, s-preds)\n\t(s-gtyp-gen, s-iov): Use the top level move-if-change.\n\t* objc/Make-lang.in (objc/objc-parse.y): Likewise.\n\n(gcc/ada/ChangeLog)\n\n\t* Make-lang.in (ada/stamp-sdefault): Use the top level\n\tmove-if-change.\n\n(gcc/f/ChangeLog)\n\n\t* Make-lang.in (f/stamp-1t, f/stamp-2t, f/stamp-fo)\n\t(f/stamp-io, f/stamp-nq, f/stamp-op, f/stamp-ot): Use the top\n\tlevel move-if-change.\n\nFrom-SVN: r78146", "tree": {"sha": "1d8139b2f0b1d640a7eb522eef58c20ce708e6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d8139b2f0b1d640a7eb522eef58c20ce708e6e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88e3a2a3983942615023ee9e1c8739edc0c16e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e3a2a3983942615023ee9e1c8739edc0c16e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e3a2a3983942615023ee9e1c8739edc0c16e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e3a2a3983942615023ee9e1c8739edc0c16e7c/comments", "author": null, "committer": null, "parents": [{"sha": "116daf21951d1b9dbce0be60f1fb5f1053356374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116daf21951d1b9dbce0be60f1fb5f1053356374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116daf21951d1b9dbce0be60f1fb5f1053356374"}], "stats": {"total": 112, "additions": 67, "deletions": 45}, "files": [{"sha": "ce6b42892a19e631c4ab6c75fe0d9fa746810bbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1,3 +1,13 @@\n+2004-02-19  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* move-if-change: Remove.\n+\t* Makefile.in (s-mlib, c-parse.y, s-check, s-gencheck)\n+\t(s-specs, s-options, s-config, s-conditions, s-flags, s-codes)\n+\t(s-constants, s-emit, s-recog, s-opinit, s-extract, s-peep)\n+\t(s-attr, s-attrtab, s-output, s-genrtl, s-modes, s-preds)\n+\t(s-gtyp-gen, s-iov): Use the top level move-if-change.\n+\t* objc/Make-lang.in (objc/objc-parse.y): Likewise.\n+\n 2004-02-19  James E Wilson  <wilson@specifixinc.com>\n \n \t* config/i386/i386.md (doloop_end_internal): Use nonimmediate_operand"}, {"sha": "0c1b23cb8b5b8a2fe1718c64cde7354d869699ff", "filename": "gcc/Makefile.in", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1210,7 +1210,7 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \t  $(SHELL) $(srcdir)/genmultilib '' '' '' '' '' '' '' no \\\n \t    > tmp-mlib.h; \\\n \tfi\n-\t$(SHELL) $(srcdir)/move-if-change tmp-mlib.h multilib.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-mlib.h multilib.h\n \t$(STAMP) s-mlib\n \n # Build multiple copies of libgcc.a, one for each target switch.\n@@ -1294,7 +1294,7 @@ c-parse.y: c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-c-parse.y\n \tsed -e \"/^@@ifobjc.*/,/^@@end_ifobjc.*/d\" \\\n \t    -e \"/^@@ifc.*/d\" -e \"/^@@end_ifc.*/d\" $< >>tmp-c-parse.y\n-\t$(SHELL) $(srcdir)/move-if-change tmp-c-parse.y $@\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-c-parse.y $@\n \n c-incpath.o: c-incpath.c c-incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n \t\tintl.h prefix.h coretypes.h $(TM_H) cppdefault.h\n@@ -1428,7 +1428,7 @@ cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n tree-check.h: s-check ; @true\n s-check : gencheck$(build_exeext)\n \t$(RUN_GEN) ./gencheck$(build_exeext) > tmp-check.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-check.h tree-check.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-check.h tree-check.h\n \t$(STAMP) s-check\n \n gencheck$(build_exeext) : gencheck.o $(BUILD_LIBDEPS)\n@@ -1443,21 +1443,21 @@ s-gencheck : Makefile\n \tltf=\"$(lang_tree_files)\"; for f in $$ltf; do \\\n \t    echo \"#include \\\"$$f\\\"\"; \\\n \tdone | sed 's|$(srcdir)/||' > tmp-gencheck.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-gencheck.h gencheck.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-gencheck.h gencheck.h\n \t$(STAMP) s-gencheck\n \n specs.h : s-specs ; @true\n s-specs : Makefile\n \tlsf=\"$(lang_specs_files)\"; for f in $$lsf; do \\\n \t    echo \"#include \\\"$$f\\\"\"; \\\n \tdone | sed 's|$(srcdir)/||' > tmp-specs.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-specs.h specs.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-specs.h specs.h\n \t$(STAMP) s-specs\n \n options.c options.h: s-options ; @true\n s-options: $(lang_opt_files) $(srcdir)/opts.sh Makefile\n \tAWK=$(AWK) $(SHELL) $(srcdir)/opts.sh \\\n-               '$(SHELL) $(srcdir)/move-if-change' \\\n+               '$(SHELL) $(srcdir)/../move-if-change' \\\n                options.c options.h $(lang_opt_files)\n \t$(STAMP) s-options\n \n@@ -1907,13 +1907,13 @@ libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n insn-config.h: s-config ; @true\n s-config : $(md_file) genconfig$(build_exeext)\n \t$(RUN_GEN) ./genconfig$(build_exeext) $(md_file) > tmp-config.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-config.h insn-config.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-config.h insn-config.h\n \t$(STAMP) s-config\n \n insn-conditions.c: s-conditions ; @true\n s-conditions : $(md_file) genconditions$(build_exeext)\n \t$(RUN_GEN) ./genconditions$(build_exeext) $(md_file) > tmp-conditions.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-conditions.c insn-conditions.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-conditions.c insn-conditions.c\n \t$(STAMP) s-conditions\n \n insn-conditions.o : insn-conditions.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -1928,19 +1928,19 @@ dummy-conditions.o : dummy-conditions.c $(BCONFIG_H) $(SYSTEM_H) \\\n insn-flags.h: s-flags ; @true\n s-flags : $(md_file) genflags$(build_exeext)\n \t$(RUN_GEN) ./genflags$(build_exeext) $(md_file) > tmp-flags.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-flags.h insn-flags.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-flags.h insn-flags.h\n \t$(STAMP) s-flags\n \n insn-codes.h: s-codes ; @true\n s-codes : $(md_file) gencodes$(build_exeext)\n \t$(RUN_GEN) ./gencodes$(build_exeext) $(md_file) > tmp-codes.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-codes.h insn-codes.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-codes.h insn-codes.h\n \t$(STAMP) s-codes\n \n insn-constants.h: s-constants ; @true\n s-constants : $(md_file) genconstants$(build_exeext)\n \t$(RUN_GEN) ./genconstants$(build_exeext) $(md_file) > tmp-constants.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-constants.h insn-constants.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-constants.h insn-constants.h\n \t$(STAMP) s-constants\n \n insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1952,7 +1952,7 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-emit.c: s-emit ; @true\n s-emit : $(md_file) genemit$(build_exeext)\n \t$(RUN_GEN) ./genemit$(build_exeext) $(md_file) > tmp-emit.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-emit.c insn-emit.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-emit.c insn-emit.c\n \t$(STAMP) s-emit\n \n insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1964,7 +1964,7 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-recog.c: s-recog ; @true\n s-recog : $(md_file) genrecog$(build_exeext)\n \t$(RUN_GEN) ./genrecog$(build_exeext) $(md_file) > tmp-recog.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-recog.c insn-recog.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-recog.c insn-recog.c\n \t$(STAMP) s-recog\n \n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1975,7 +1975,7 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-opinit.c: s-opinit ; @true\n s-opinit : $(md_file) genopinit$(build_exeext)\n \t$(RUN_GEN) ./genopinit$(build_exeext) $(md_file) > tmp-opinit.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-opinit.c insn-opinit.c\n \t$(STAMP) s-opinit\n \n insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1986,7 +1986,7 @@ insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-extract.c: s-extract ; @true\n s-extract : $(md_file) genextract$(build_exeext)\n \t$(RUN_GEN) ./genextract$(build_exeext) $(md_file) > tmp-extract.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-extract.c insn-extract.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-extract.c insn-extract.c\n \t$(STAMP) s-extract\n \n insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1998,7 +1998,7 @@ insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-peep.c: s-peep ; @true\n s-peep : $(md_file) genpeep$(build_exeext)\n \t$(RUN_GEN) ./genpeep$(build_exeext) $(md_file) > tmp-peep.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-peep.c insn-peep.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-peep.c insn-peep.c\n \t$(STAMP) s-peep\n \n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2010,13 +2010,13 @@ insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-attr.h: s-attr ; @true\n s-attr : $(md_file) genattr$(build_exeext)\n \t$(RUN_GEN) ./genattr$(build_exeext) $(md_file) > tmp-attr.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-attr.h insn-attr.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-attr.h insn-attr.h\n \t$(STAMP) s-attr\n \n insn-attrtab.c: s-attrtab ; @true\n s-attrtab : $(md_file) genattrtab$(build_exeext)\n \t$(RUN_GEN) ./genattrtab$(build_exeext) $(md_file) > tmp-attrtab.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-attrtab.c insn-attrtab.c\n \t$(STAMP) s-attrtab\n \n insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2029,7 +2029,7 @@ insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n insn-output.c: s-output ; @true\n s-output : $(md_file) genoutput$(build_exeext)\n \t$(RUN_GEN) ./genoutput$(build_exeext) $(md_file) > tmp-output.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-output.c insn-output.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-output.c insn-output.c\n \t$(STAMP) s-output\n \n genrtl.o : genrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -2039,9 +2039,9 @@ genrtl.c genrtl.h : s-genrtl\n \n s-genrtl: gengenrtl$(build_exeext)\n \t$(RUN_GEN) ./gengenrtl$(build_exeext) -h > tmp-genrtl.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.h genrtl.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-genrtl.h genrtl.h\n \t$(RUN_GEN) ./gengenrtl$(build_exeext) > tmp-genrtl.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.c genrtl.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-genrtl.c genrtl.c\n \t$(STAMP) s-genrtl\n \n insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2050,18 +2050,18 @@ min-insn-modes.c insn-modes.c insn-modes.h : s-modes ; @true\n \n s-modes: genmodes$(build_exeext)\n \t$(RUN_GEN) ./genmodes$(build_exeext) -h > tmp-modes.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-modes.h insn-modes.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-modes.h insn-modes.h\n \t$(RUN_GEN) ./genmodes$(build_exeext) -m > tmp-min-modes.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-min-modes.c min-insn-modes.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-min-modes.c min-insn-modes.c\n \t$(RUN_GEN) ./genmodes$(build_exeext) > tmp-modes.c\n-\t$(SHELL) $(srcdir)/move-if-change tmp-modes.c insn-modes.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-modes.c insn-modes.c\n \t$(STAMP) s-modes\n \n tm-preds.h: s-preds; @true\n \n s-preds: genpreds$(build_exeext)\n \t$(RUN_GEN) ./genpreds$(build_exeext) > tmp-preds.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-preds.h tm-preds.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-preds.h tm-preds.h\n \t$(STAMP) s-preds\n \n GTFILES = $(srcdir)/input.h $(srcdir)/coretypes.h $(srcdir)/cpplib.h \\\n@@ -2124,7 +2124,7 @@ s-gtyp-gen: Makefile\n \tfor l in $$gf; do \\\n \techo \"\\\"$$l\\\", \"; done >> tmp-gtyp.h\n \techo \"NULL};\" >> tmp-gtyp.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-gtyp.h gtyp-gen.h \n+\t$(SHELL) $(srcdir)/../move-if-change tmp-gtyp.h gtyp-gen.h\n \t$(STAMP) s-gtyp-gen\n \n s-gtype: gengtype$(build_exeext) $(GTFILES)\n@@ -2454,7 +2454,7 @@ gcov-iov$(build_exeext): gcov-iov.o\n gcov-iov.h: s-iov\n s-iov: gcov-iov$(build_exeext)\n \t./gcov-iov$(build_exeext) > tmp-gcov-iov.h\n-\t$(SHELL) $(srcdir)/move-if-change tmp-gcov-iov.h gcov-iov.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-gcov-iov.h gcov-iov.h\n \t$(STAMP) s-iov\n \n gcov.o: gcov.c gcov-io.h gcov-io.c gcov-iov.h intl.h $(SYSTEM_H) coretypes.h $(TM_H) $(CONFIG_H)"}, {"sha": "28a8259a0338404a576e3a0d495fede783e7a7e0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1,3 +1,8 @@\n+2004-02-19  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* Make-lang.in (ada/stamp-sdefault): Use the top level\n+\tmove-if-change.\n+\n 2004-02-19  Richard Henderson  <rth@redhat.com>\n \n \t* misc.c (record_code_position): Add third build arg for RTL_EXPR."}, {"sha": "69cc77b8bfb337553d440f4e8f78e04bca430c60", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1107,7 +1107,7 @@ ada/stamp-sdefault : $(srcdir)/version.c Makefile\n \t$(ECHO) \"      return Relocate_Path (S0, S4);\" >>tmp-sdefault.adb\n \t$(ECHO) \"   end Search_Dir_Prefix;\" >>tmp-sdefault.adb\n \t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n-\t$(srcdir)/move-if-change tmp-sdefault.adb ada/sdefault.adb\n+\t$(srcdir)/../move-if-change tmp-sdefault.adb ada/sdefault.adb\n \ttouch ada/stamp-sdefault\n \n ada/sdefault.o : ada/sdefault.ads ada/sdefault.adb ada/types.ads \\"}, {"sha": "0dd169a080ebdd7cd3c9320590774c99dd123d2a", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1,3 +1,9 @@\n+2004-02-19  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* Make-lang.in (f/stamp-1t, f/stamp-2t, f/stamp-fo)\n+\t(f/stamp-io, f/stamp-nq, f/stamp-op, f/stamp-ot): Use the top\n+\tlevel move-if-change.\n+\n 2004-02-15  Roger Sayle  <roger@eyesopen.com>\n \n \t* lex.c (ffelex_get_directive_line): Provide a more descriptive"}, {"sha": "5131a577a929f2c78fed803f0dd2b91ce330b8ce", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1,5 +1,6 @@\n # Top level -*- makefile -*- fragment for GNU Fortran.\n-#   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004\n+#   Free Software Foundation, Inc.\n \n #This file is part of GNU Fortran.\n \n@@ -106,50 +107,50 @@ f/stamp-str: f/str-1t.h f/str-1t.j f/str-2t.h f/str-2t.j \\\n f/str-1t.h f/str-1t.j: f/stamp-1t ; @true\n f/stamp-1t: f/fini$(build_exeext) f/str-1t.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-1t.fin f/tmp-str-1t.j f/tmp-str-1t.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-1t.j f/str-1t.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-1t.h f/str-1t.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-1t.j f/str-1t.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-1t.h f/str-1t.h\n \t$(STAMP) f/stamp-1t\n \n f/str-2t.h f/str-2t.j: f/stamp-2t ; @true\n f/stamp-2t: f/fini$(build_exeext) f/str-2t.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-2t.fin f/tmp-str-2t.j f/tmp-str-2t.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-2t.j f/str-2t.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-2t.h f/str-2t.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-2t.j f/str-2t.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-2t.h f/str-2t.h\n \t$(STAMP) f/stamp-2t\n \n f/str-fo.h f/str-fo.j: f/stamp-fo ; @true\n f/stamp-fo: f/fini$(build_exeext) f/str-fo.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-fo.fin f/tmp-str-fo.j f/tmp-str-fo.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-fo.j f/str-fo.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-fo.h f/str-fo.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-fo.j f/str-fo.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-fo.h f/str-fo.h\n \t$(STAMP) f/stamp-fo\n \n f/str-io.h f/str-io.j: f/stamp-io ; @true\n f/stamp-io: f/fini$(build_exeext) f/str-io.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-io.fin f/tmp-str-io.j f/tmp-str-io.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-io.j f/str-io.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-io.h f/str-io.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-io.j f/str-io.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-io.h f/str-io.h\n \t$(STAMP) f/stamp-io\n \n f/str-nq.h f/str-nq.j: f/stamp-nq ; @true\n f/stamp-nq: f/fini$(build_exeext) f/str-nq.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-nq.fin f/tmp-str-nq.j f/tmp-str-nq.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-nq.j f/str-nq.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-nq.h f/str-nq.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-nq.j f/str-nq.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-nq.h f/str-nq.h\n \t$(STAMP) f/stamp-nq\n \n f/str-op.h f/str-op.j: f/stamp-op ; @true\n f/stamp-op: f/fini$(build_exeext) f/str-op.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-op.fin f/tmp-str-op.j f/tmp-str-op.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-op.j f/str-op.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-op.h f/str-op.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-op.j f/str-op.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-op.h f/str-op.h\n \t$(STAMP) f/stamp-op\n \n f/str-ot.h f/str-ot.j: f/stamp-ot ; @true\n f/stamp-ot: f/fini$(build_exeext) f/str-ot.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-ot.fin f/tmp-str-ot.j f/tmp-str-ot.h\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-ot.j f/str-ot.j\n-\t$(SHELL) $(srcdir)/move-if-change f/tmp-str-ot.h f/str-ot.h\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-ot.j f/str-ot.j\n+\t$(SHELL) $(srcdir)/../move-if-change f/tmp-str-ot.h f/str-ot.h\n \t$(STAMP) f/stamp-ot\n \n f/fini$(build_exeext): f/fini.o $(BUILD_LIBDEPS)"}, {"sha": "12a20569c67761ec2ee5b009646b82ed2804df51", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e3a2a3983942615023ee9e1c8739edc0c16e7c/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=88e3a2a3983942615023ee9e1c8739edc0c16e7c", "patch": "@@ -1,5 +1,5 @@\n # Top level -*- makefile -*- fragment for GNU Objective-C\n-#   Copyright (C) 1997, 1998, 2000, 2001, 2002, 2003\n+#   Copyright (C) 1997, 1998, 2000, 2001, 2002, 2003, 2004\n #   Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -83,7 +83,7 @@ objc/objc-parse.y: c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-objc-prs.y\n \tsed -e \"/^@@ifc.*/,/^@@end_ifc.*/d\" \\\n \t    -e \"/^@@ifobjc.*/d\" -e \"/^@@end_ifobjc.*/d\" < $< >>tmp-objc-prs.y\n-\t$(SHELL) $(srcdir)/move-if-change tmp-objc-prs.y $@\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-objc-prs.y $@\n \n gtype-objc.h : s-gtype ; @true\n gt-objc-objc-act.h : s-gtype ; @true"}]}