{"sha": "8bda08f130cfc0d210386d484c68daa4e4140313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJkYTA4ZjEzMGNmYzBkMjEwMzg2ZDQ4NGM2OGRhYTRlNDE0MDMxMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-05-14T12:33:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:26:59Z"}, "message": "[Ada] ACATS 4.1J - B854003 - Subtype conformance check missed #2\n\ngcc/ada/\n\n\t* sem_ch6.adb (Check_Formal_Subprogram_Conformance): New\n\tsubprogram to handle checking without systematically emitting an\n\terror.\n\t(Check_Conformance): Update call to\n\tCheck_Formal_Subprogram_Conformance and fix handling of Conforms\n\tand Errmsg parameters.", "tree": {"sha": "9391c9188f638598a1fcc367ba839d95003fb0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9391c9188f638598a1fcc367ba839d95003fb0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bda08f130cfc0d210386d484c68daa4e4140313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bda08f130cfc0d210386d484c68daa4e4140313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bda08f130cfc0d210386d484c68daa4e4140313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bda08f130cfc0d210386d484c68daa4e4140313/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ead7594ff58a2f1d60982e0e706329abf5eaadd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead7594ff58a2f1d60982e0e706329abf5eaadd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead7594ff58a2f1d60982e0e706329abf5eaadd4"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "7c6175fa07cbc0ec12e458c2a2652e6f060d2d4a", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 51, "deletions": 13, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bda08f130cfc0d210386d484c68daa4e4140313/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bda08f130cfc0d210386d484c68daa4e4140313/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=8bda08f130cfc0d210386d484c68daa4e4140313", "patch": "@@ -152,6 +152,16 @@ package body Sem_Ch6 is\n    --  against a formal access-to-subprogram type so Get_Instance_Of must\n    --  be called.\n \n+   procedure Check_Formal_Subprogram_Conformance\n+     (New_Id   : Entity_Id;\n+      Old_Id   : Entity_Id;\n+      Err_Loc  : Node_Id;\n+      Errmsg   : Boolean;\n+      Conforms : out Boolean);\n+   --  Core implementation of Check_Formal_Subprogram_Conformance from spec.\n+   --  Errmsg can be set to False to not emit error messages.\n+   --  Conforms is set to True if there is conformance, False otherwise.\n+\n    procedure Check_Limited_Return\n      (N      : Node_Id;\n       Expr   : Node_Id;\n@@ -5759,14 +5769,19 @@ package body Sem_Ch6 is\n                Error_Msg_Name_2 :=\n                  Name_Ada + Convention_Id'Pos (Convention (New_Id));\n                Conformance_Error (\"\\prior declaration for% has convention %!\");\n+               return;\n \n             else\n                Conformance_Error (\"\\calling conventions do not match!\");\n+               return;\n             end if;\n-\n-            return;\n          else\n-            Check_Formal_Subprogram_Conformance (New_Id, Old_Id, Err_Loc);\n+            Check_Formal_Subprogram_Conformance\n+              (New_Id, Old_Id, Err_Loc, Errmsg, Conforms);\n+\n+            if not Conforms then\n+               return;\n+            end if;\n          end if;\n       end if;\n \n@@ -5932,7 +5947,11 @@ package body Sem_Ch6 is\n                   begin\n                      if Is_Protected_Type (Corresponding_Concurrent_Type (T))\n                      then\n-                        Error_Msg_PT (New_Id, Ultimate_Alias (Old_Id));\n+                        Conforms := False;\n+\n+                        if Errmsg then\n+                           Error_Msg_PT (New_Id, Ultimate_Alias (Old_Id));\n+                        end if;\n                      else\n                         Conformance_Error\n                           (\"\\mode of & does not match!\", New_Formal);\n@@ -6489,12 +6508,16 @@ package body Sem_Ch6 is\n    -----------------------------------------\n \n    procedure Check_Formal_Subprogram_Conformance\n-     (New_Id  : Entity_Id;\n-      Old_Id  : Entity_Id;\n-      Err_Loc : Node_Id := Empty)\n+     (New_Id   : Entity_Id;\n+      Old_Id   : Entity_Id;\n+      Err_Loc  : Node_Id;\n+      Errmsg   : Boolean;\n+      Conforms : out Boolean)\n    is\n       N : Node_Id;\n    begin\n+      Conforms := True;\n+\n       if Is_Formal_Subprogram (Old_Id)\n         or else Is_Formal_Subprogram (New_Id)\n         or else (Is_Subprogram (New_Id)\n@@ -6507,14 +6530,29 @@ package body Sem_Ch6 is\n             N := New_Id;\n          end if;\n \n-         Error_Msg_Sloc := Sloc (Old_Id);\n-         Error_Msg_N (\"not subtype conformant with declaration#!\", N);\n-         Error_Msg_NE\n-           (\"\\formal subprograms are not subtype conformant \"\n-            & \"(RM 6.3.1 (17/3))\", N, New_Id);\n+         Conforms := False;\n+\n+         if Errmsg then\n+            Error_Msg_Sloc := Sloc (Old_Id);\n+            Error_Msg_N (\"not subtype conformant with declaration#!\", N);\n+            Error_Msg_NE\n+              (\"\\formal subprograms are not subtype conformant \"\n+               & \"(RM 6.3.1 (17/3))\", N, New_Id);\n+         end if;\n       end if;\n    end Check_Formal_Subprogram_Conformance;\n \n+   procedure Check_Formal_Subprogram_Conformance\n+     (New_Id  : Entity_Id;\n+      Old_Id  : Entity_Id;\n+      Err_Loc : Node_Id := Empty)\n+   is\n+      Ignore : Boolean;\n+   begin\n+      Check_Formal_Subprogram_Conformance\n+        (New_Id, Old_Id, Err_Loc, True, Ignore);\n+   end Check_Formal_Subprogram_Conformance;\n+\n    ----------------------------\n    -- Check_Fully_Conformant --\n    ----------------------------\n@@ -8848,7 +8886,7 @@ package body Sem_Ch6 is\n \n             --  Warn unless genuine overloading. Do not emit warning on\n             --  hiding predefined operators in Standard (these are either an\n-            --  (artifact of our implicit declarations, or simple noise) but\n+            --  artifact of our implicit declarations, or simple noise) but\n             --  keep warning on a operator defined on a local subtype, because\n             --  of the real danger that different operators may be applied in\n             --  various parts of the program."}]}