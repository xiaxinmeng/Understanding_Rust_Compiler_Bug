{"sha": "a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkODI1M2Y3YWJhNjdkN2EzZTA1YzVlMGUzNjFjOTA1N2JjNWQ1NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-08-19T17:43:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-08-19T17:43:50Z"}, "message": "re PR target/45336 (pextr{b,w,d}, (worse than) redundant extensions)\n\n\tPR target/45336\n\t* simplify-rtx.c (simplify_unary_operation_1): Optimize nested\n\tSIGN_EXTENDs or ZERO_EXTENDs.\n\nFrom-SVN: r163384", "tree": {"sha": "efa8e5321c21db9e8b1edf44dcacc6bed954fab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa8e5321c21db9e8b1edf44dcacc6bed954fab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0524d2d6623eb2ab287f464e05c206ceeb3839bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0524d2d6623eb2ab287f464e05c206ceeb3839bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0524d2d6623eb2ab287f464e05c206ceeb3839bf"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "518aba1e49aa2937e3fbef447f4e8b4d0105f45c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "patch": "@@ -1,3 +1,9 @@\n+2010-08-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/45336\n+\t* simplify-rtx.c (simplify_unary_operation_1): Optimize nested\n+\tSIGN_EXTENDs or ZERO_EXTENDs.\n+\n 2010-08-19  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/42172"}, {"sha": "e3acc41a9e3cc9b8533157a59a074d3a942a1e67", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=a5d8253f7aba67d7a3e05c5e0e361c9057bc5d54", "patch": "@@ -1010,6 +1010,31 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n \t  && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (GET_MODE (XEXP (op, 0))))\n \treturn rtl_hooks.gen_lowpart_no_emit (mode, op);\n \n+      /* (sign_extend:M (sign_extend:N <X>)) is (sign_extend:M <X>).  */\n+      if (GET_CODE (op) == SIGN_EXTEND)\n+\treturn simplify_gen_unary (SIGN_EXTEND, mode, XEXP (op, 0),\n+\t\t\t\t   GET_MODE (XEXP (op, 0)));\n+\n+      /* (sign_extend:M (ashiftrt:N (ashift <X> (const_int I)) (const_int I)))\n+\t is (sign_extend:M (subreg:O <X>)) if there is mode with\n+\t GET_MODE_BITSIZE (N) - I bits.  */\n+      if (GET_CODE (op) == ASHIFTRT\n+\t  && GET_CODE (XEXP (op, 0)) == ASHIFT\n+\t  && CONST_INT_P (XEXP (op, 1))\n+\t  && XEXP (XEXP (op, 0), 1) == XEXP (op, 1)\n+\t  && GET_MODE_BITSIZE (GET_MODE (op)) > INTVAL (XEXP (op, 1)))\n+\t{\n+\t  enum machine_mode tmode\n+\t    = mode_for_size (GET_MODE_BITSIZE (GET_MODE (op))\n+\t\t\t     - INTVAL (XEXP (op, 1)), MODE_INT, 1);\n+\t  if (tmode != BLKmode)\n+\t    {\n+\t      rtx inner =\n+\t\trtl_hooks.gen_lowpart_no_emit (tmode, XEXP (XEXP (op, 0), 0));\n+\t      return simplify_gen_unary (SIGN_EXTEND, mode, inner, tmode);\n+\t    }\n+\t}\n+\n #if defined(POINTERS_EXTEND_UNSIGNED) && !defined(HAVE_ptr_extend)\n       /* As we do not know which address space the pointer is refering to,\n \t we can do this only if the target does not support different pointer\n@@ -1036,6 +1061,11 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n \t  && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (GET_MODE (XEXP (op, 0))))\n \treturn rtl_hooks.gen_lowpart_no_emit (mode, op);\n \n+      /* (zero_extend:M (zero_extend:N <X>)) is (zero_extend:M <X>).  */\n+      if (GET_CODE (op) == ZERO_EXTEND)\n+\treturn simplify_gen_unary (ZERO_EXTEND, mode, XEXP (op, 0),\n+\t\t\t\t   GET_MODE (XEXP (op, 0)));\n+\n #if defined(POINTERS_EXTEND_UNSIGNED) && !defined(HAVE_ptr_extend)\n       /* As we do not know which address space the pointer is refering to,\n \t we can do this only if the target does not support different pointer"}]}