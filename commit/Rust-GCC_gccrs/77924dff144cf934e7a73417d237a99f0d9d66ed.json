{"sha": "77924dff144cf934e7a73417d237a99f0d9d66ed", "node_id": "C_kwDOANBUbNoAKDc3OTI0ZGZmMTQ0Y2Y5MzRlN2E3MzQxN2QyMzdhOTlmMGQ5ZDY2ZWQ", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-16T20:34:32Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-16T20:34:32Z"}, "message": "PR 107630 runtime libs should be self-contained\n\nThis is a patch to improve the layering of libgm2.\nIt removes the m2cor Debug.{def,mod} (the codebase will use\nm2pim Debug instead).  It also layers SysStorage under\nboth m2pim Storage and m2iso Storage.  SysStorage is now\na dependant of m2pim Storage.mod.  Halt parameters for\nDebug.mod and M2RTS.mod now have the same order.\n\ngcc/m2/ChangeLog:\n\n\t* gm2-compiler/SymbolKey.mod (PutSymKey): Halt parameters\n\treordered.\n\t(DelSymKey): Ditto.\n\t* gm2-compiler/ppg.mod (GetEpsilon): Ditto.\n\t(GetReachEnd): Ditto.\n\t(GetFollow): Ditto.\n\t(CodeCondition): Ditto.\n\t(CodeThenDo): Ditto.\n\t(CodeEnd): Ditto.\n\t(RecoverCondition): Ditto.\n\t(ConditionIndent): Ditto.\n\t* gm2-libs-ch/m2rts.h (M2RTS_Halt): Ditto.\n\t* gm2-libs-coroutines/Executive.mod (Assert): Ditto.\n\t(Resume): Remove redundant comments.\n\t(Wait): Remove redundant comments.\n\t* gm2-libs-coroutines/SYSTEM.mod (TRANSFER): Halt parameters\n\treordered.\n\t(IOTransferHandler): Ditto.\n\t(Finished): Ditto.\n\t(localInit): Ditto.\n\t* gm2-libs-coroutines/TimerHandler.mod (WaitOn): Halt parameters\n\treordered.\n\t(Cancel): Ditto.\n\t(ReArmEvent): Ditto.\n\t(OnActiveQueue): Ditto.\n\t* gm2-libs-iso/COROUTINES.mod (NEWCOROUTINE): Ditto.\n\t(Transfer): Ditto.\n\t(IOTRANSFER): Ditto.\n\t* gm2-libs-iso/EXCEPTIONS.mod (RAISE): Correct Halt parameters.\n\t* gm2-libs-iso/M2RTS.def (Halt): Halt parameters reordered.\n\t(HaltC): Ditto.\n\t* gm2-libs-iso/M2RTS.mod: Ditto.\n\t* gm2-libs-iso/RTentity.mod (PutKey): Ditto.\n\t(DelKey): Ditto.\n\t(findChildAndParent): Ditto.\n\t(assert): Ditto.\n\t* gm2-libs-iso/Storage.mod (ALLOCATE): Add DebugTrace.\n\tAdd UseMallocFree test.\n\t(DEALLOCATE): Add DebugTrace.  Add UseMallocFree test.\n\t(assert): Halt parameters reordered.\n\t* gm2-libs-log/Termbase.mod (Read): Ditto.\n\t(KeyPressed): Ditto.\n\t(Write): Ditto.\n\t(Init): Ditto.\n\t* gm2-libs/Debug.def (Halt): Halt parameters reordered.\n\t* gm2-libs/Debug.mod (Halt): Ditto.\n\t* gm2-libs/DynamicStrings.def (PopAllocation): Improve comment.\n\t* gm2-libs/DynamicStrings.mod (PopAllocation): Improve comment.\n\tHalt parameters reordered.\n\t* gm2-libs/M2RTS.def (Halt): Ditto.\n\t(HaltC): Ditto.\n\t* gm2-libs/M2RTS.mod (Halt): Ditto.\n\t(HaltC): Ditto.\n\t* gm2-libs/PushBackInput.mod (PutStr): Ditto.\n\t(PutString): Ditto.\n\t(PutCh): Ditto.\n\t* gm2-libs/RTExceptions.mod (GetBaseExceptionBlock): Ditto.\n\t* gm2-libs/RTint.mod (ReArmTimeVector): Ditto.\n\t(GetTimeVector): Ditto.\n\t(AttachVector): Ditto.\n\t(IncludeVector): Ditto.\n\t(Listen): Ditto.\n\t* gm2-libs/SysStorage.mod (ALLOCATE): Ditto.\n\t(DEALLOCATE): Ditto.\n\t(REALLOCATE): Ditto.\n\t* gm2-libs-coroutines/Debug.def: Removed.\n\t* gm2-libs-coroutines/Debug.mod: Removed.\n\nlibgm2/ChangeLog:\n\n\t* libm2cor/Makefile.am: Remove\n\t* libm2cor/Makefile.in: Rebuild.\n\t* libm2iso/RTco.cc (newSem): Halt parameters reordered.\n\t(currentThread): Ditto.\n\t(never): Ditto.\n\t(defined): Ditto.\n\t(initThread): Ditto.\n\t* libm2iso/m2rts.h (m2iso_M2RTS_HaltC): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* gm2/complex/pass/arith3.mod: Halt parameters reordered.\n\t* gm2/complex/run/pass/arith3.mod: Ditto.\n\t* gm2/complex/run/pass/arith4.mod: Ditto.\n\t* gm2/complex/run/pass/arith5.mod: Ditto.\n\t* gm2/isolib/run/pass/real2.mod: Ditto.\n\t* gm2/isolib/run/pass/real3.mod: Ditto.\n\t* gm2/isolib/run/pass/realconv.mod: Ditto.\n\t* gm2/isolib/run/pass/realconv2.mod: Ditto.\n\t* gm2/pim/pass/testshort.mod: Ditto.\n\t* gm2/projects/pim/run/pass/tower/AdvSystem.mod: Ditto.\n\t* gm2/projects/pim/run/pass/tower/DrawL.mod: Ditto.\n\t* gm2/warnings/returntype/pass/Termbase.mod: Ditto.\n\t* gm2/warnings/returntype/pass/keypressedsimple.mod: Ditto.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "370f9c28221b8b47a07d2e744129e705373c6d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/370f9c28221b8b47a07d2e744129e705373c6d9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77924dff144cf934e7a73417d237a99f0d9d66ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77924dff144cf934e7a73417d237a99f0d9d66ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77924dff144cf934e7a73417d237a99f0d9d66ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77924dff144cf934e7a73417d237a99f0d9d66ed/comments", "author": null, "committer": null, "parents": [{"sha": "acff89c7d7b3af3553a4fb878b2fd767dd27d830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acff89c7d7b3af3553a4fb878b2fd767dd27d830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acff89c7d7b3af3553a4fb878b2fd767dd27d830"}], "stats": {"total": 705, "additions": 247, "deletions": 458}, "files": [{"sha": "b9fa87fa851896e97da191956a4c3a65d495fed2", "filename": "gcc/m2/gm2-compiler/SymbolKey.mod", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -153,7 +153,7 @@ BEGIN\n          KeyName := NameKey\n       END\n    ELSE\n-      Halt('symbol already stored', __LINE__, __FILE__)\n+      Halt('symbol already stored', __FILE__, __FUNCTION__, __LINE__)\n    END\n END PutSymKey ;\n \n@@ -220,7 +220,7 @@ BEGIN\n       END\n    ELSE\n       Halt('trying to delete a symbol that is not in the tree - the compiler never expects this to occur',\n-            __LINE__, __FILE__)\n+           __FILE__, __FUNCTION__, __LINE__)\n    END\n END DelSymKey ;\n \n@@ -237,7 +237,8 @@ BEGIN\n    parent := t ;\n    IF t=NIL\n    THEN\n-      Halt('parameter t should never be NIL', __LINE__, __FILE__)\n+      Halt('parameter t should never be NIL',\n+           __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    Assert (t^.Right = NIL) ;\n    child := t^.Left ;"}, {"sha": "a17227fa31adad173d856771876981c6dad4bcb6", "filename": "gcc/m2/gm2-compiler/ppg.mod", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -380,7 +380,8 @@ PROCEDURE GetEpsilon (f: FollowDesc) : TraverseResult ;\n BEGIN\n    IF f=NIL\n    THEN\n-      Halt('why is the follow info NIL?', __LINE__, __FILE__)\n+      Halt('why is the follow info NIL?',\n+           __FILE_, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN( f^.epsilon )\n    END\n@@ -414,7 +415,8 @@ PROCEDURE GetReachEnd (f: FollowDesc) : TraverseResult ;\n BEGIN\n    IF f=NIL\n    THEN\n-      Halt('why is the follow info NIL?', __LINE__, __FILE__)\n+      Halt('why is the follow info NIL?',\n+           __FILE_, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN( f^.reachend )\n    END\n@@ -430,7 +432,8 @@ BEGIN\n    WITH f^ DO\n       IF calcfollow\n       THEN\n-         Halt('why are we reassigning this follow set?', __LINE__, __FILE__)\n+         Halt('why are we reassigning this follow set?',\n+              __FILE_, __FUNCTION__, __LINE__)\n       END ;\n       follow     := s ;\n       calcfollow := TRUE\n@@ -446,14 +449,16 @@ PROCEDURE GetFollow (f: FollowDesc) : SetDesc ;\n BEGIN\n    IF f=NIL\n    THEN\n-      Halt('why is the follow info NIL?', __LINE__, __FILE__)\n+      Halt ('why is the follow info NIL?',\n+            __FILE_, __FUNCTION__, __LINE__)\n    ELSE\n       WITH f^ DO\n          IF calcfollow\n          THEN\n             RETURN( follow )\n          ELSE\n-            Halt('not calculated the follow set yet..', __LINE__, __FILE__)\n+            Halt('not calculated the follow set yet..',\n+                 __FILE_, __FUNCTION__, __LINE__)\n          END\n       END\n    END\n@@ -2496,7 +2501,8 @@ BEGIN\n    m2while:  IndentString('WHILE ')\n \n    ELSE\n-      Halt('unrecognised m2condition', __LINE__, __FILE__)\n+      Halt('unrecognised m2condition',\n+           __FILE_, __FUNCTION__, __LINE__)\n    END\n END CodeCondition ;\n \n@@ -2521,7 +2527,8 @@ BEGIN\n              Output.WriteLn\n \n    ELSE\n-      Halt('unrecognised m2condition', __LINE__, __FILE__)\n+      Halt('unrecognised m2condition',\n+           __FILE_, __FUNCTION__, __LINE__)\n    END ;\n    OnLineStart := TRUE\n END CodeThenDo ;\n@@ -2604,7 +2611,8 @@ BEGIN\n    m2while:  IndentString('END ;  (* while *)')\n \n    ELSE\n-      Halt('unrecognised m2condition', __LINE__, __FILE__)\n+      Halt('unrecognised m2condition',\n+           __FILE_, __FUNCTION__, __LINE__)\n    END ;\n    OnLineStart := FALSE\n END CodeEnd ;\n@@ -2861,7 +2869,8 @@ BEGIN\n    m2while:  IndentString('WHILE ')\n \n    ELSE\n-      Halt('unrecognised m2condition', __LINE__, __FILE__)\n+      Halt('unrecognised m2condition',\n+           __FILE_, __FUNCTION__, __LINE__)\n    END\n END RecoverCondition ;\n \n@@ -2880,7 +2889,8 @@ BEGIN\n    m2while:  RETURN( 6 )\n \n    ELSE\n-      Halt('unrecognised m2condition', __LINE__, __FILE__)\n+      Halt('unrecognised m2condition',\n+           __FILE_, __FUNCTION__, __LINE__)\n    END\n END ConditionIndent ;\n \n@@ -3938,7 +3948,8 @@ BEGIN\n                  WasNoError := FALSE\n \n          ELSE\n-            Halt('unknown element in enumeration type', __LINE__, __FILE__)\n+            Halt('unknown element in enumeration type',\n+                 __FILE_, __FUNCTION__, __LINE__)\n          END\n       END ;\n       from := from^.next"}, {"sha": "f8f85d1cb9414e22371fcce5ba7397ae190c1271", "filename": "gcc/m2/gm2-libs-ch/m2rts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -38,4 +38,4 @@ extern \"C\" void M2RTS_ConstructModules (const void *,\n extern \"C\" void M2RTS_Terminate (void);\n extern \"C\" void M2RTS_DeconstructModules (void);\n \n-extern \"C\" void M2RTS_Halt (const char *, int, const char *, const char *) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_Halt (const char *, const char *, const char *, int) __attribute__ ((noreturn));"}, {"sha": "a4f5b68b3241869269a56bda265bd77da0db4a09", "filename": "gcc/m2/gm2-libs-coroutines/Debug.def", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acff89c7d7b3af3553a4fb878b2fd767dd27d830/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acff89c7d7b3af3553a4fb878b2fd767dd27d830/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def?ref=acff89c7d7b3af3553a4fb878b2fd767dd27d830", "patch": "@@ -1,79 +0,0 @@\n-(* Debug.def provides some simple debugging routines.\n-\n-Copyright (C) 2002-2023 Free Software Foundation, Inc.\n-Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n-\n-This file is part of GNU Modula-2.\n-\n-GNU Modula-2 is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GNU Modula-2 is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  *)\n-\n-DEFINITION MODULE Debug ;\n-\n-(*\n-    Title      : Debug\n-    Author     : Gaius Mulley\n-    System     : UNIX (gm2)\n-    Date       : Sat Aug 13 19:41:57 1994\n-    Last edit  : Sat Aug 13 19:41:57 1994\n-    Description: provides some simple debugging routines.\n-*)\n-\n-EXPORT QUALIFIED Halt, DebugString, PushOutput ;\n-\n-TYPE\n-   WriteP = PROCEDURE (CHAR) ;\n-\n-\n-(*\n-   Halt - writes a message in the format:\n-          Module:Line:Message\n-\n-          It then terminates by calling HALT.\n-*)\n-\n-PROCEDURE Halt (File    : ARRAY OF CHAR;\n-                LineNo  : CARDINAL;\n-                Function,\n-                Message : ARRAY OF CHAR) <* noreturn *> ;\n-\n-\n-(*\n-   DebugString - writes a string to the debugging device (Scn.Write).\n-                 It interprets \\n as carriage return, linefeed.\n-*)\n-\n-PROCEDURE DebugString (a: ARRAY OF CHAR) ;\n-\n-\n-(*\n-   PushOutput - pushes the output procedure, p, which is used Debug.\n-*)\n-\n-PROCEDURE PushOutput (p: WriteP) ;\n-\n-\n-(*\n-   PopOutput - pops the current output procedure from the stack.\n-*)\n-\n-PROCEDURE PopOutput ;\n-\n-\n-END Debug."}, {"sha": "9708c418a531835a40c7753964005520f3c1b24e", "filename": "gcc/m2/gm2-libs-coroutines/Debug.mod", "status": "removed", "additions": 0, "deletions": 180, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acff89c7d7b3af3553a4fb878b2fd767dd27d830/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acff89c7d7b3af3553a4fb878b2fd767dd27d830/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod?ref=acff89c7d7b3af3553a4fb878b2fd767dd27d830", "patch": "@@ -1,180 +0,0 @@\n-(* Debug.mod provides some simple debugging routines.\n-\n-Copyright (C) 2002-2023 Free Software Foundation, Inc.\n-Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n-\n-This file is part of GNU Modula-2.\n-\n-GNU Modula-2 is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GNU Modula-2 is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  *)\n-\n-IMPLEMENTATION MODULE Debug ;\n-\n-\n-FROM ASCII IMPORT cr, nul, lf ;\n-FROM NumberIO IMPORT CardToStr ;\n-FROM libc IMPORT exit, write ;\n-FROM SYSTEM IMPORT ADR ;\n-\n-\n-CONST\n-   MaxStack = 10 ;\n-\n-VAR\n-   Stack: ARRAY [1..MaxStack] OF WriteP ;\n-   Ptr  : CARDINAL ;\n-\n-\n-PROCEDURE Write (ch: CHAR) ;\n-BEGIN\n-   IF Ptr>0\n-   THEN\n-      Stack[Ptr](ch)\n-   ELSE\n-      LocalWrite(ch)\n-   END\n-END Write ;\n-\n-\n-PROCEDURE LocalWrite (ch: CHAR) ;\n-VAR\n-   r: INTEGER ;\n-BEGIN\n-   r := write(2, ADR(ch), 1)\n-END LocalWrite ;\n-\n-\n-(*\n-   PushOutput - pushes the output procedure, p, which is used Debug.\n-*)\n-\n-PROCEDURE PushOutput (p: WriteP) ;\n-BEGIN\n-   IF Ptr=MaxStack\n-   THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'stack exceeded')\n-   ELSE\n-      INC(Ptr) ;\n-      Stack[Ptr] := p\n-   END\n-END PushOutput ;\n-\n-\n-(*\n-   PopOutput - pops the current output procedure from the stack.\n-*)\n-\n-PROCEDURE PopOutput ;\n-BEGIN\n-   IF Ptr>1\n-   THEN\n-      DEC(Ptr)\n-   END\n-END PopOutput ;\n-\n-\n-(*\n-   Halt - writes a message in the format:\n-          Module:Line:Message\n-\n-          It then terminates by calling HALT.\n-*)\n-\n-PROCEDURE Halt (File    : ARRAY OF CHAR;\n-                LineNo  : CARDINAL;\n-                Function,\n-                Message : ARRAY OF CHAR) ;\n-CONST\n-   MaxNoOfDigits = 12 ;  (* should be large enough for most source files.. *)\n-VAR\n-   No               : ARRAY [0..MaxNoOfDigits] OF CHAR ;\n-BEGIN\n-   DebugString(File) ;\n-   CardToStr(LineNo, 0, No) ;\n-   DebugString(':') ;\n-   DebugString(No) ;\n-   DebugString(':') ;\n-   DebugString(Function) ;\n-   DebugString(':') ;\n-   DebugString(Message) ;\n-   DebugString('\\n') ;\n-   HALT\n-END Halt ;\n-\n-\n-(*\n-   DebugString - writes a string to the debugging device (Scn.Write).\n-                 It interprets \\n as carriage return, linefeed.\n-*)\n-\n-PROCEDURE DebugString (a: ARRAY OF CHAR) ;\n-VAR\n-   n, high: CARDINAL ;\n-BEGIN\n-   high := HIGH( a ) ;\n-   n := 0 ;\n-   WHILE (n <= high) AND (a[n] # nul) DO\n-      IF a[n]='\\'\n-      THEN\n-         IF n+1<=high\n-         THEN\n-            IF a[n+1]='n'\n-            THEN\n-               WriteLn ;\n-               INC(n)\n-            ELSIF a[n+1]='\\'\n-            THEN\n-               Write('\\') ;\n-               INC(n)\n-            END\n-         END\n-      ELSE\n-         Write( a[n] )\n-      END ;\n-      INC( n )\n-   END\n-END DebugString ;\n-\n-\n-(*\n-   WriteLn - writes a carriage return and a newline\n-             character.\n-*)\n-\n-PROCEDURE WriteLn ;\n-BEGIN\n-   Write(cr) ;\n-   Write(lf)\n-END WriteLn ;\n-\n-\n-(*\n-   Init - initialises this module.\n-*)\n-\n-PROCEDURE Init ;\n-BEGIN\n-   Ptr := 0 ;\n-   PushOutput(LocalWrite)\n-END Init ;\n-\n-\n-BEGIN\n-   Init\n-END Debug."}, {"sha": "0e0b3eeea506f90383b430f36c7161cec43d8529", "filename": "gcc/m2/gm2-libs-coroutines/Executive.mod", "status": "modified", "additions": 30, "deletions": 33, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -105,7 +105,7 @@ BEGIN\n    IF NOT c\n    THEN\n       Ps ;\n-      Halt(file, line, function, 'assert failed')\n+      Halt ('assert failed', file, function, line)\n    END\n END Assert ;\n \n@@ -178,23 +178,21 @@ VAR\n    ToOldState: PROTECTION ;\n BEGIN\n (* ToOldState := TurnInterrupts(MAX(PROTECTION)) ;                (* disable interrupts *) *)\n-\n-   (* your code needs to go here *)\n-   WITH d^ DO                                                                  (* remove for student *)\n-      IF Status=Suspended                                                      (* remove for student *)\n-      THEN                                                                     (* remove for student *)\n-         (* legal state transition *)                                          (* remove for student *)\n-         Status := Runnable ;                         (* change status      *) (* remove for student *)\n-         AddToReady(d) ;                              (* add to run queue   *) (* remove for student *)\n-         RunQueue[RunPriority] := d ;                 (* make d at top of q *) (* remove for student *)\n-         Reschedule (* check whether this process has a higher run priority *) (* remove for student *)\n-      ELSE                                                                     (* remove for student *)\n-         (* we are trying to Resume a process which is *)                      (* remove for student *)\n-         Halt(__FILE__, __LINE__, __FUNCTION__,                                (* remove for student *)\n-              'trying to resume a process which is not suspended') ;           (* remove for student *)\n-         RETURN( NIL )        (* not held in a Suspended state - error      *) (* remove for student *)\n-      END                                                                      (* remove for student *)\n-   END ;                                                                       (* remove for student *)\n+   WITH d^ DO\n+      IF Status=Suspended\n+      THEN\n+         (* legal state transition *)\n+         Status := Runnable ;                         (* change status      *)\n+         AddToReady(d) ;                              (* add to run queue   *)\n+         RunQueue[RunPriority] := d ;                 (* make d at top of q *)\n+         Reschedule (* check whether this process has a higher run priority *)\n+      ELSE\n+         (* we are trying to Resume a process which is *)\n+         Halt ('trying to resume a process which is not suspended',\n+               __FILE__, __FUNCTION__, __LINE__) ;\n+         RETURN( NIL )        (* not held in a Suspended state - error      *)\n+      END\n+   END ;\n (* ToOldState := TurnInterrupts(ToOldState) ;         (* restore interrupts *) *)\n    RETURN( d )\n END Resume ;\n@@ -255,25 +253,24 @@ VAR\n    ToOldState: PROTECTION ;\n BEGIN\n (* ToOldState := TurnInterrupts(MAX(PROTECTION)) ;                (* disable interrupts *) *)\n-\n-   (* your code needs to go here *)\n-   WITH s^ DO                                                                  (* remove for student *)\n-      IF Value>0                                                               (* remove for student *)\n-      THEN                                                                     (* remove for student *)\n-         DEC( Value )                                                          (* remove for student *)\n-      ELSE                                                                     (* remove for student *)\n-         SubFromReady(CurrentProcess) ;               (* remove from run q  *) (* remove for student *)\n+   WITH s^ DO\n+      IF Value>0\n+      THEN\n+         DEC( Value )\n+      ELSE\n+         SubFromReady(CurrentProcess) ;               (* remove from run q  *)\n          IF Who=CurrentProcess\n          THEN\n             Ps ;\n-            Halt(__FILE__, __LINE__, __FUNCTION__, 'we are already on sem')\n+            Halt ('we are already on sem',\n+                  __FILE__, __FUNCTION__, __LINE__)\n          END ;\n-         AddToSemaphore(Who, CurrentProcess) ;        (* add to semaphore q *) (* remove for student *)\n-         CurrentProcess^.Status := WaitOnSem ;        (* set new status     *) (* remove for student *)\n-         CurrentProcess^.Which := s ;                 (* debugging aid      *) (* remove for student *)\n-         Reschedule                                   (* find next process  *) (* remove for student *)\n-      END                                                                      (* remove for student *)\n-   END ;                                                                       (* remove for student *)\n+         AddToSemaphore(Who, CurrentProcess) ;        (* add to semaphore q *)\n+         CurrentProcess^.Status := WaitOnSem ;        (* set new status     *)\n+         CurrentProcess^.Which := s ;                 (* debugging aid      *)\n+         Reschedule                                   (* find next process  *)\n+      END\n+   END ;\n (* ToOldState := TurnInterrupts(ToOldState)           (* restore interrupts *) *)\n END Wait ;\n "}, {"sha": "3652dec78f16329c1e46d37c433227935d8df541", "filename": "gcc/m2/gm2-libs-coroutines/SYSTEM.mod", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -66,8 +66,8 @@ BEGIN\n    localMain (p1) ;\n    IF p1.context=p2.context\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__,\n-           'error when attempting to context switch to the same process')\n+      Halt('error when attempting to context switch to the same process',\n+           __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    transfer (p1.context, p2.context)\n END TRANSFER ;\n@@ -130,15 +130,15 @@ VAR\n BEGIN\n    IF l=NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'no processes attached to this interrupt vector which is associated with IOTRANSFER')\n+      Halt ('no processes attached to this interrupt vector which is associated with IOTRANSFER',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       WITH l^ DO\n          old := AttachVector (InterruptNo, next) ;\n          IF old#l\n          THEN\n-            Halt (__FILE__, __LINE__, __FUNCTION__,\n-                  'inconsistancy of return result')\n+            Halt ('inconsistancy of return result',\n+                  __FILE__, __FUNCTION__, __LINE__)\n          END ;\n          IF next=NIL\n          THEN\n@@ -210,7 +210,8 @@ END TurnInterrupts ;\n \n PROCEDURE Finished (p: ADDRESS) ;\n BEGIN\n-   Halt(__FILE__, __LINE__, __FUNCTION__, 'process terminated illegally')\n+   Halt('process terminated illegally',\n+        __FILE__, __FUNCTION__, __LINE__)\n END Finished ;\n \n \n@@ -225,7 +226,8 @@ BEGIN\n       initGTh := TRUE ;\n       IF init () # 0\n       THEN\n-         Halt (__FILE__, __LINE__, __FUNCTION__, \"gthr did not initialize\")\n+         Halt (\"gthr did not initialize\",\n+               __FILE__, __FUNCTION__, __LINE__)\n       END ;\n       RTint.Init\n    END"}, {"sha": "d3dee319ca163a75400870635a0af73aafdab58e", "filename": "gcc/m2/gm2-libs-coroutines/TimerHandler.mod", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -162,8 +162,8 @@ BEGIN\n (* ToOldState := TurnInterrupts(MAX(PROTECTION)) ;                (* disable interrupts *) *)\n    IF e=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__,\n-           'event should never be NIL')\n+      Halt ('event should never be NIL',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       WITH e^ DO\n          (* we will just check to see whether someone has cancelled this    *)\n@@ -215,8 +215,8 @@ BEGIN\n          Cancelled := NOT WasCancelled ;\n          IF WasCancelled\n          THEN\n-            Halt(__FILE__, __LINE__, __FUNCTION__,\n-                 'inconsistancy event has been cancelled and it is on queue')\n+            Halt ('inconsistancy event has been cancelled and it is on queue',\n+                  __FILE__, __FUNCTION__, __LINE__)\n          END ;\n          OnSoloQueue(e) ;\n          WasCancelled := TRUE ;\n@@ -265,8 +265,8 @@ BEGIN\n          NoOfTicks := t ;                             (* give it a new time *)\n          OnActiveQueue(e)                             (* back on queue      *)\n       ELSE\n-         Halt(__FILE__, __LINE__, __FUNCTION__,\n-              'ReArm should not be asked to ReArm a dead event')\n+         Halt ('ReArm should not be asked to ReArm a dead event',\n+               __FILE__, __FUNCTION__, __LINE__)\n       END\n    END ;\n (* ToOldState := TurnInterrupts(ToOldState) ;         (* restore interrupts *) *)\n@@ -472,7 +472,8 @@ BEGIN\n    THEN\n       IF IsOnDeadQueue(e)\n       THEN\n-         Halt(__FILE__, __LINE__, __FUNCTION__, 'illegal state change')\n+         Halt ('illegal state change',\n+               __FILE__, __FUNCTION__, __LINE__)\n       ELSIF IsOnSoloQueue(e)\n       THEN\n          RelativeAddToActive(e) ;"}, {"sha": "e09646f531ba4ebf890d0779a5c21c786b4adad9", "filename": "gcc/m2/gm2-libs-iso/COROUTINES.mod", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -115,7 +115,7 @@ BEGIN\n    tp := initThread (procBody, size, initProtection) ;\n    IF tp = -1\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__, 'unable to create a new thread')\n+      Halt ('unable to create a new thread', __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    NEW (cr) ;\n    WITH cr^ DO\n@@ -170,8 +170,8 @@ BEGIN\n    from := currentCoRoutine ;\n    IF to^.context = from^.context\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'error when attempting to context switch to the same process')\n+      Halt ('error when attempting to context switch to the same process',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    from^.inexcept := SetExceptionState (to^.inexcept) ;\n    from^.source := GetExceptionSource () ;\n@@ -225,8 +225,8 @@ BEGIN\n       Init ;\n       IF init () # 0\n       THEN\n-         Halt (__FILE__, __LINE__, __FUNCTION__,\n-               'failed to initialize RTco')\n+         Halt ('failed to initialize RTco',\n+               __FILE__, __FUNCTION__, __LINE__)\n       END ;\n       RTint.Init ;\n       initCo := TRUE\n@@ -252,8 +252,8 @@ BEGIN\n    old := TurnInterrupts (MAX (PROTECTION)) ;\n    IF from = to\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            \"error IOTRANSFER cannot transfer control to the running COROUTINE\")\n+      Halt (\"error IOTRANSFER cannot transfer control to the running COROUTINE\",\n+            __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    wait (lock) ;\n    l := currentCoRoutine^.attached ;\n@@ -511,8 +511,8 @@ BEGIN\n    localInit ;\n    IF l = NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'no coroutine attached to this interrupt vector which was initiated by IOTRANSFER')\n+      Halt ('no coroutine attached to this interrupt vector which was initiated by IOTRANSFER',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       IF Debugging\n       THEN\n@@ -536,8 +536,8 @@ BEGIN\n          ourself := AttachVector (InterruptNo, chain) ;\n          IF ourself # l\n          THEN\n-            Halt (__FILE__, __LINE__, __FUNCTION__,\n-                  'inconsistancy of return result')\n+            Halt ('inconsistancy of return result',\n+                  __FILE__, __FUNCTION__, __LINE__)\n          END ;\n          IF chain = NIL\n          THEN"}, {"sha": "b06594fc96b71cb9df314d08fd4f4325ac062cdf", "filename": "gcc/m2/gm2-libs-iso/EXCEPTIONS.mod", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FEXCEPTIONS.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FEXCEPTIONS.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FEXCEPTIONS.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -64,7 +64,8 @@ BEGIN\n    RTExceptions.SetExceptionBlock(source^.eh) ;\n    RTExceptions.Raise(number, ADR(__FILE__), __LINE__, __COLUMN__, ADR(__FUNCTION__), ADR(message)) ;\n    (* we should never reach here as Raise should jump to the exception handler *)\n-   M2RTS.Halt(__FILE__, __LINE__, __FUNCTION__, 'should never return from RTException.Raise')\n+   M2RTS.Halt('should never return from RTException.Raise',\n+              __FILE__, __FUNCTION__, __LINE__)\n END RAISE ;\n \n "}, {"sha": "ee12e6f1bcd94b3038a04f6b8d397850e822bb08", "filename": "gcc/m2/gm2-libs-iso/M2RTS.def", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -116,9 +116,8 @@ PROCEDURE HALT ([exitcode: INTEGER = -1]) <* noreturn *> ;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n-                function: ARRAY OF CHAR; description: ARRAY OF CHAR)\n-                <* noreturn *> ;\n+PROCEDURE Halt (description, filename, function: ARRAY OF CHAR;\n+                line: CARDINAL) <* noreturn *> ;\n \n \n (*\n@@ -127,8 +126,9 @@ PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE HaltC (filename: ADDRESS; line: CARDINAL;\n-                 function, description: ADDRESS) <* noreturn *> ;\n+PROCEDURE HaltC (description, filename, function: ADDRESS;\n+                 line: CARDINAL) <* noreturn *> ;\n+\n \n \n (*"}, {"sha": "958744d0b823a436dcac77e83208b2a6dde6ecc9", "filename": "gcc/m2/gm2-libs-iso/M2RTS.mod", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -337,8 +337,7 @@ END ErrorMessageC ;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE HaltC (filename: ADDRESS; line: CARDINAL;\n-                 function, description: ADDRESS) ;\n+PROCEDURE HaltC (description, filename, function: ADDRESS; line: CARDINAL) ;\n BEGIN\n    ErrorMessageC (description, filename, line, function)\n END HaltC ;\n@@ -350,8 +349,7 @@ END HaltC ;\n           to stderr and calls exit (1).\n *)\n \n-PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n-                function: ARRAY OF CHAR; description: ARRAY OF CHAR) ;\n+PROCEDURE Halt (description, filename, function: ARRAY OF CHAR; line: CARDINAL) ;\n BEGIN\n    ErrorMessage (description, filename, line, function)\n END Halt ;"}, {"sha": "ee6a97ab9983d7463291f4e7a7d4905100d12b9e", "filename": "gcc/m2/gm2-libs-iso/RTentity.mod", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FRTentity.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FRTentity.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FRTentity.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -137,8 +137,8 @@ BEGIN\n          entityKey := key\n       END\n    ELSE\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'internal runtime error, entity already stored')\n+      Halt ('internal runtime error, entity already stored',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    signal (mutex)\n END PutKey ;\n@@ -221,8 +221,8 @@ BEGIN\n          free (child)\n       END\n    ELSE\n-      Halt(__FILE__, __LINE__, __FUNCTION__,\n-           'internal runtime error, trying to delete an entity which is not in the tree')\n+      Halt('internal runtime error, trying to delete an entity which is not in the tree',\n+           __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    signal (mutex)\n END DelKey ;\n@@ -241,8 +241,8 @@ BEGIN\n    parent := t ;\n    IF t = NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'internal runtime error, RTentity is either corrupt or the module storage has not been initialized yet')\n+      Halt ('internal runtime error, RTentity is either corrupt or the module storage has not been initialized yet',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    child := t^.left ;\n    IF child # NIL\n@@ -270,8 +270,8 @@ PROCEDURE assert (condition: BOOLEAN) ;\n BEGIN\n    IF NOT condition\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'internal runtime error, RTentity is either corrupt or the module storage has not been initialized yet')\n+      Halt ('internal runtime error, RTentity is either corrupt or the module storage has not been initialized yet',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END\n END assert ;\n "}, {"sha": "ed7d285c46e64f2c14c2f63f346c56209ff4f30d", "filename": "gcc/m2/gm2-libs-iso/Storage.mod", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FStorage.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-iso%2FStorage.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FStorage.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -26,7 +26,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n IMPLEMENTATION MODULE Storage ;\n \n-FROM libc IMPORT malloc, free, memcpy ;\n+FROM libc IMPORT memcpy, abort, malloc, free, printf ;\n+\n+IMPORT SysStorage ;\n+\n FROM M2RTS IMPORT Halt ;\n FROM SYSTEM IMPORT TSIZE ;\n FROM M2EXCEPTION IMPORT M2Exceptions ;\n@@ -37,11 +40,28 @@ FROM EXCEPTIONS IMPORT ExceptionNumber, RAISE,\n                        IsExceptionalExecution ;\n \n \n+CONST\n+   DebugTrace = FALSE ;\n+   UseMallocFree = FALSE ;\n+\n \n PROCEDURE ALLOCATE (VAR addr: SYSTEM.ADDRESS; amount: CARDINAL) ;\n BEGIN\n    Init ;\n-   addr := malloc (amount) ;\n+   IF DebugTrace\n+   THEN\n+      printf (\"request m2iso:Storage.ALLOCATE (..., %d bytes)\\n\", amount)\n+   END ;\n+   IF UseMallocFree\n+   THEN\n+      addr := malloc (amount)\n+   ELSE\n+      SysStorage.ALLOCATE (addr, amount)\n+   END ;\n+   IF DebugTrace\n+   THEN\n+      printf (\"return m2iso:Storage.ALLOCATE (%p, %d bytes)\\n\", addr, amount)\n+   END ;\n    IF addr#NIL\n    THEN\n       PutKey (storageTree, addr, amount)\n@@ -52,9 +72,18 @@ END ALLOCATE ;\n PROCEDURE DEALLOCATE (VAR addr: SYSTEM.ADDRESS; amount: CARDINAL) ;\n BEGIN\n    assert (initialized) ;\n+   IF DebugTrace\n+   THEN\n+      printf (\"m2iso:Storage.DEALLOCATE (%p, %d bytes)\\n\", addr, amount)\n+   END ;\n    IF VerifyDeallocate (addr, amount)\n    THEN\n-      free (addr) ;\n+      IF UseMallocFree\n+      THEN\n+         free (addr)\n+      ELSE\n+         SysStorage.DEALLOCATE (addr, amount)\n+      END ;\n       addr := NIL\n    END\n END DEALLOCATE ;\n@@ -115,7 +144,7 @@ PROCEDURE VerifyDeallocate (addr: SYSTEM.ADDRESS; amount: CARDINAL) : BOOLEAN ;\n VAR\n    a: CARDINAL ;\n BEGIN\n-\n+   Init ;\n    IF addr=NIL\n    THEN\n       RAISE (storageException, ORD(nilDeallocation), 'deallocating pointer whose value is NIL') ;\n@@ -146,8 +175,8 @@ PROCEDURE assert (condition: BOOLEAN) ;\n BEGIN\n    IF NOT condition\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'internal runtime error, module Storage has not been initialized yet')\n+      Halt ('internal runtime error, module Storage has not been initialized yet',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END\n END assert ;\n "}, {"sha": "aa29e437c2334f5d2b98e2162deda1092a647fe8", "filename": "gcc/m2/gm2-libs-log/Termbase.mod", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-log%2FTermbase.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs-log%2FTermbase.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-log%2FTermbase.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -106,7 +106,7 @@ PROCEDURE Read (VAR ch: CHAR) ;\n BEGIN\n    IF rStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active read procedure')\n+      Halt ('no active read procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       rStack^.r(ch)\n    END\n@@ -121,7 +121,7 @@ PROCEDURE KeyPressed () : BOOLEAN ;\n BEGIN\n    IF rStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active status procedure')\n+      Halt ('no active status procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN( rStack^.s() )\n    END\n@@ -185,7 +185,7 @@ PROCEDURE Write (VAR ch: CHAR) ;\n BEGIN\n    IF wStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active write procedure')\n+      Halt ('no active write procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       wStack^.w(ch)\n    END\n@@ -205,12 +205,12 @@ BEGIN\n    AssignRead(Keyboard.Read, Keyboard.KeyPressed, Done) ;\n    IF NOT Done\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign read routines from module Keyboard')\n+      Halt ('failed to assign read routines from module Keyboard', __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    AssignWrite(Display.Write, Done) ;\n    IF NOT Done\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign write routine from module Display')\n+      Halt ('failed to assign write routine from module Display', __FILE__, __FUNCTION__, __LINE__)\n    END\n END Init ;\n "}, {"sha": "1887c69dd711ceecc961843fd3f308ee9131006b", "filename": "gcc/m2/gm2-libs/Debug.def", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDebug.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDebug.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FDebug.def?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -40,14 +40,15 @@ EXPORT QUALIFIED Halt, DebugString ;\n \n (*\n    Halt - writes a message in the format:\n-          Module:Line:Message\n+          Module:Function:Line:Message\n \n           It then terminates by calling HALT.\n *)\n \n-PROCEDURE Halt (Message: ARRAY OF CHAR;\n-                LineNo: CARDINAL;\n-                Module: ARRAY OF CHAR) ;\n+PROCEDURE Halt (Message,\n+                Module,\n+                Function: ARRAY OF CHAR ;\n+                LineNo  : CARDINAL) ;\n \n \n (*"}, {"sha": "f2133780935aa999c7d5d81b95e0bc9af2bcc80b", "filename": "gcc/m2/gm2-libs/Debug.mod", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDebug.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDebug.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FDebug.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -34,20 +34,24 @@ FROM libc IMPORT exit ;\n \n (*\n    Halt - writes a message in the format:\n-          Module:Line:Message\n+          Module:Function:Line:Message\n \n           It then terminates by calling HALT.\n *)\n \n-PROCEDURE Halt (Message: ARRAY OF CHAR;\n-                LineNo: CARDINAL;\n-                Module: ARRAY OF CHAR) ;\n+PROCEDURE Halt (Message,\n+                Module,\n+                Function: ARRAY OF CHAR ;\n+                LineNo  : CARDINAL) ;\n CONST\n    MaxNoOfDigits = 12 ;  (* should be large enough for most source files.. *)\n VAR\n    No               : ARRAY [0..MaxNoOfDigits] OF CHAR ;\n BEGIN\n    DebugString(Module) ;\n+   DebugString(':') ;\n+   DebugString(Function) ;\n+   DebugString(':') ;\n    CardToStr(LineNo, 0, No) ;\n    DebugString(':') ;\n    DebugString(No) ;"}, {"sha": "90930a9f282e900ade56facc560750b8f7139d59", "filename": "gcc/m2/gm2-libs/DynamicStrings.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.def?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -361,9 +361,9 @@ PROCEDURE PopAllocation (halt: BOOLEAN) ;\n \n (*\n    PopAllocationExemption - test to see that all strings are\n-                            deallocated, except string, e, since\n+                            deallocated, except string e since\n                             the last push.\n-                            Then it pops to the previous\n+                            Post-condition: it pops to the previous\n                             allocation/deallocation lists.\n \n                             If halt is true then the application"}, {"sha": "68e9320fb5d1029fe69a85bab815a808a4e78da8", "filename": "gcc/m2/gm2-libs/DynamicStrings.mod", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FDynamicStrings.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -153,8 +153,8 @@ END stop ;\n \n (*\n    PopAllocationExemption - test to see that all strings are deallocated, except\n-                            string, e, since the last push.\n-                            Then it pops to the previous allocation/deallocation\n+                            string e since the last push.\n+                            Post-condition: it pops to the previous allocation/deallocation\n                             lists.\n \n                             If halt is true then the application terminates\n@@ -173,8 +173,8 @@ BEGIN\n       IF frameHead = NIL\n       THEN\n          stop ;\n-         Halt (__FILE__, __LINE__, __FUNCTION__,\n-               \"mismatched number of PopAllocation's compared to PushAllocation's\")\n+         Halt (\"mismatched number of PopAllocation's compared to PushAllocation's\",\n+               __FILE__, __FUNCTION__, __LINE__) ;\n          (* writeString (\"mismatched number of PopAllocation's compared to PushAllocation's\") *)\n       ELSE\n          IF frameHead^.alloc # NIL"}, {"sha": "2b84c8c6b200cb2cc95b0392c7df02393538b69d", "filename": "gcc/m2/gm2-libs/M2RTS.def", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -125,9 +125,8 @@ PROCEDURE HALT ([exitcode: INTEGER = -1]) <* noreturn *> ;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n-                function: ARRAY OF CHAR; description: ARRAY OF CHAR)\n-\t \t<* noreturn *> ;\n+PROCEDURE Halt (description, filename, function: ARRAY OF CHAR;\n+                line: CARDINAL) <* noreturn *> ;\n \n \n (*\n@@ -136,8 +135,8 @@ PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE HaltC (filename: ADDRESS; line: CARDINAL;\n-                 function, description: ADDRESS) <* noreturn *> ;\n+PROCEDURE HaltC (description, filename, function: ADDRESS;\n+                 line: CARDINAL) <* noreturn *> ;\n \n \n (*"}, {"sha": "f941a32df143c7644870124e4169c3ae82ba4a46", "filename": "gcc/m2/gm2-libs/M2RTS.mod", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -336,8 +336,7 @@ END ErrorMessageC ;\n            to stderr and calls exit (1).\n *)\n \n-PROCEDURE HaltC (filename: ADDRESS; line: CARDINAL;\n-                 function, description: ADDRESS) ;\n+PROCEDURE HaltC (description, filename, function: ADDRESS; line: CARDINAL) ;\n BEGIN\n    ErrorMessageC (description, filename, line, function)\n END HaltC ;\n@@ -349,8 +348,7 @@ END HaltC ;\n           to stderr and calls exit (1).\n *)\n \n-PROCEDURE Halt (filename: ARRAY OF CHAR; line: CARDINAL;\n-                function: ARRAY OF CHAR; description: ARRAY OF CHAR) ;\n+PROCEDURE Halt (description, filename, function: ARRAY OF CHAR; line: CARDINAL) ;\n BEGIN\n    ErrorMessage (description, filename, line, function)\n END Halt ;"}, {"sha": "90c0baeb3eed4e8353142c570723d5e7b5c2d433", "filename": "gcc/m2/gm2-libs/PushBackInput.mod", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FPushBackInput.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FPushBackInput.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FPushBackInput.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -110,7 +110,7 @@ BEGIN\n       DEC (i) ;\n       IF PutCh (char (s, i)) # char (s, i)\n       THEN\n-         Halt('assert failed', __LINE__, __FILE__)\n+         Halt('assert failed', __FILE__, __FUNCTION__, __LINE__)\n       END\n    END\n END PutStr ;\n@@ -129,7 +129,7 @@ BEGIN\n       DEC (l) ;\n       IF PutCh (a[l]) # a[l]\n       THEN\n-         Halt ('assert failed', __LINE__, __FILE__)\n+         Halt ('assert failed', __FILE__, __FUNCTION__, __LINE__)\n       END\n    END\n END PutString ;\n@@ -147,7 +147,8 @@ BEGIN\n       CharStack[StackPtr] := ch ;\n       INC(StackPtr)\n    ELSE\n-      Halt('max push back stack exceeded, increase MaxPushBackStack', __LINE__, __FILE__)\n+      Halt('max push back stack exceeded, increase MaxPushBackStack',\n+           __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    RETURN( ch )\n END PutCh ;"}, {"sha": "f28e4d879ed4248660a7060df517a7e17d66e452", "filename": "gcc/m2/gm2-libs/RTExceptions.mod", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FRTExceptions.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FRTExceptions.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FRTExceptions.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -596,7 +596,8 @@ PROCEDURE GetBaseExceptionBlock () : EHBlock ;\n BEGIN\n    IF currentEHB=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'currentEHB has not been initialized yet')\n+      Halt('currentEHB has not been initialized yet',\n+           __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN( currentEHB )\n    END"}, {"sha": "aec5a82db171d937606ba30eb2d964071871466e", "filename": "gcc/m2/gm2-libs/RTint.mod", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FRTint.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FRTint.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FRTint.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -283,8 +283,8 @@ BEGIN\n    vptr := FindVectorNo (vec) ;\n    IF vptr = NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'cannot find vector supplied')\n+      Halt ('cannot find vector supplied',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       WITH vptr^ DO\n          SetTime (rel, secs + DebugTime, micro)\n@@ -309,8 +309,8 @@ BEGIN\n    vptr := FindVectorNo (vec) ;\n    IF vptr=NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'cannot find vector supplied')\n+      Halt ('cannot find vector supplied',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       WITH vptr^ DO\n          GetTime (rel, secs, micro) ;\n@@ -336,7 +336,8 @@ BEGIN\n    vptr := FindVectorNo (vec) ;\n    IF vptr = NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__, 'cannot find vector supplied')\n+      Halt ( 'cannot find vector supplied',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       prevArg := vptr^.arg ;\n       vptr^.arg := ptr ;\n@@ -369,8 +370,8 @@ BEGIN\n       vptr := FindVectorNo (vec) ;\n       IF vptr = NIL\n       THEN\n-         Halt (__FILE__, __LINE__, __FUNCTION__,\n-               'cannot find vector supplied') ;\n+         Halt ('cannot find vector supplied',\n+               __FILE__, __FUNCTION__, __LINE__)\n       ELSE\n          (* printf('including vector %d  (fd = %d)\\n', vec, v^.File) ; *)\n          vptr^.pending := Pending[vptr^.priority] ;\n@@ -411,8 +412,8 @@ BEGIN\n    vptr := FindPendingVector (vec) ;\n    IF vptr = NIL\n    THEN\n-      Halt (__FILE__, __LINE__, __FUNCTION__,\n-            'cannot find pending vector supplied')\n+      Halt ('cannot find pending vector supplied',\n+            __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       (* printf('excluding vector %d\\n', vec) ; *)\n       IF Pending[vptr^.priority] = vptr\n@@ -727,8 +728,8 @@ BEGIN\n       END ;\n       IF untilInterrupt AND (inSet=NIL) AND (outSet=NIL) AND (NOT found)\n       THEN\n-         Halt (__FILE__, __LINE__, __FUNCTION__,\n-               'deadlock found, no more processes to run and no interrupts active')\n+         Halt ('deadlock found, no more processes to run and no interrupts active',\n+               __FILE__, __FUNCTION__, __LINE__)\n       END ;\n       (* printf('timeval = 0x%x\\n', timeval) ; *)\n       (* printf('}\\n') ; *)"}, {"sha": "2277f93a3982f47c157d29b699f27f49ceb7c89f", "filename": "gcc/m2/gm2-libs/SysStorage.mod", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FSysStorage.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Fm2%2Fgm2-libs%2FSysStorage.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FSysStorage.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -33,8 +33,8 @@ FROM SYSTEM IMPORT ADR ;\n \n CONST\n    enableDeallocation =  TRUE ;\n-   enableZero         = FALSE ;\n-   enableTrace        = FALSE ;\n+   enableZero         =  TRUE ;\n+   enableTrace        =  TRUE ;\n \n VAR\n    callno: CARDINAL ;\n@@ -47,7 +47,8 @@ BEGIN\n    a := malloc (size) ;\n    IF a = NIL\n    THEN\n-      Halt ('out of memory error', __LINE__, __FILE__)\n+      Halt ('out of memory error',\n+            __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    IF enableTrace AND trace\n    THEN\n@@ -73,7 +74,8 @@ BEGIN\n       END ;\n       IF memset (a, 0, size) # a\n       THEN\n-         Halt ('memset should have returned the first parameter', __LINE__, __FILE__)\n+         Halt ('memset should have returned the first parameter',\n+               __FILE__, __FUNCTION__, __LINE__)\n       END\n    END ;\n    IF enableDeallocation\n@@ -116,7 +118,8 @@ BEGIN\n       a := realloc (a, size) ;\n       IF a = NIL\n       THEN\n-         Halt ('out of memory error', __LINE__, __FILE__)\n+         Halt ('out of memory error',\n+               __FILE__, __FUNCTION__, __LINE__)\n       END ;\n       IF enableTrace AND trace\n       THEN"}, {"sha": "834119bf04652479a32f9603f07a525c9524c47c", "filename": "gcc/testsuite/gm2/complex/pass/arith3.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Farith3.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Farith3.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Farith3.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -28,7 +28,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, 'failed')\n+      Halt ('failed', __FILE__, __FUNCTION__, __LINE__)\n    END\n END Assert ;\n "}, {"sha": "09191cf50f6e36f1fdbe1ec89ae68579390d5983", "filename": "gcc/testsuite/gm2/complex/run/pass/arith3.mod", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith3.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith3.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith3.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -29,7 +29,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, 'failure')\n+      Halt ('failure', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n \n@@ -42,7 +42,7 @@ VAR\n    a, b, c: COMPLEX ;\n BEGIN\n    printf (\"main module starting\\n\");\n-   printf (\"a := i\\n\");   \n+   printf (\"a := i\\n\");\n    a := i ;\n    printf (\"b := a*getOne()\\n\");\n    b := a*getOne() ;"}, {"sha": "8d39f83daea90663946c7d7fac8f2185f9bb6f39", "filename": "gcc/testsuite/gm2/complex/run/pass/arith4.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith4.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith4.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith4.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -28,7 +28,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, 'failure')\n+      Halt ('failure', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "7fe39189442c52e3dbbbfaa2bff6ef7641867938", "filename": "gcc/testsuite/gm2/complex/run/pass/arith5.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith5.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith5.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Farith5.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -33,7 +33,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, 'failure')\n+      Halt ('failure', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "9db92bdd8a2f96a44f25f23944b6d90e4d71da6e", "filename": "gcc/testsuite/gm2/isolib/run/pass/real2.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal2.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal2.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal2.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -25,7 +25,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, \"assert failed\")\n+      Halt ('assert failed', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "8a25d5a1265fa0e1bdefcbbeb59241b5f03596e0", "filename": "gcc/testsuite/gm2/isolib/run/pass/real3.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal3.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal3.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Freal3.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -25,7 +25,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, \"assert failed\")\n+      Halt ('assert failed', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "03bc64146c103452fb3107a13b5454801dd6e4da", "filename": "gcc/testsuite/gm2/isolib/run/pass/realconv.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -25,7 +25,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, \"assert failed\")\n+      Halt ('assert failed', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "eedb2339227a7ceb63990007819d4cfe0a71a816", "filename": "gcc/testsuite/gm2/isolib/run/pass/realconv2.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv2.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv2.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Frealconv2.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -25,7 +25,7 @@ PROCEDURE Assert (b: BOOLEAN; l: CARDINAL) ;\n BEGIN\n    IF NOT b\n    THEN\n-      Halt(__FILE__, l, __FUNCTION__, \"assert failed\")\n+      Halt ('assert failed', __FILE__, __FUNCTION__, l)\n    END\n END Assert ;\n "}, {"sha": "bb22e24999204d222fb5d8375ff116a01a6a53fd", "filename": "gcc/testsuite/gm2/pim/pass/testshort.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Ftestshort.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Ftestshort.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Ftestshort.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -23,7 +23,7 @@ PROCEDURE promote (i: SHORTINT) ;\n BEGIN\n    IF i#-1\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'promotion failed')\n+      Halt ('promotion failed', __FILE__, __FUNCTION__, __LINE__)\n    END\n END promote ;\n "}, {"sha": "67a3e51e44f4d0aff0ed0761408fa413d67d34f1", "filename": "gcc/testsuite/gm2/projects/pim/run/pass/tower/AdvSystem.mod", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FAdvSystem.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FAdvSystem.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FAdvSystem.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -67,7 +67,7 @@ BEGIN\n       END ;\n       INC(i)\n    END ;\n-   Halt(__FILE__, __LINE__, __FUNCTION__, 'increase MaxNoOfProcesses')\n+   Halt ('increase MaxNoOfProcesses', __FILE__, __FUNCTION__, __LINE__)\n END AssignOutputTo ;\n \n \n@@ -111,8 +111,8 @@ BEGIN\n       END ;\n       INC(i)\n    END ;\n-   Halt(__FILE__, __LINE__, __FUNCTION__,\n-        'process has never has a player assigned to its output')\n+   Halt ('process has never has a player assigned to its output',\n+         __FILE__, __FUNCTION__, __LINE__)\n END ProcessToPlayer ;\n \n \n@@ -259,8 +259,8 @@ BEGIN\n          RETURN( i )\n       END\n    END ;\n-   Halt(__FILE__, __LINE__, __FUNCTION__,\n-        'process calling is not a player process')\n+   Halt ('process calling is not a player process',\n+         __FILE__, __FUNCTION__, __LINE__)\n END PlayerNo ;\n \n "}, {"sha": "c1f479a5783ccb3285554b59a81d07799fc23e57", "filename": "gcc/testsuite/gm2/projects/pim/run/pass/tower/DrawL.mod", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FDrawL.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FDrawL.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Ftower%2FDrawL.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -382,7 +382,7 @@ BEGIN\n       3:  StrPoint('Eman', x, y)\n \n       ELSE\n-         Halt(__FILE__, __LINE__, __FUNCTION__, 'unexpected direction')\n+         Halt ('unexpected direction', __FILE__, __FUNCTION__, __LINE__)\n       END\n    ELSE\n       CASE dir OF\n@@ -393,7 +393,7 @@ BEGIN\n       3:  StrPoint('eman', x, y)\n \n       ELSE\n-         Halt(__FILE__, __LINE__, __FUNCTION__, 'unexpected direction')\n+         Halt ('unexpected direction', __FILE__, __FUNCTION__, __LINE__)\n       END\n    END\n END DrawMan ;\n@@ -409,7 +409,7 @@ BEGIN\n    3:  StrPoint('ear', x, y)\n \n    ELSE\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'unexpected direction')\n+      Halt ('unexpected direction', __FILE__, __FUNCTION__, __LINE__)\n    END\n END DArrow ;\n "}, {"sha": "a45b883a3d82b95bb9335799e2357a9a5f2a580b", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/Termbase.mod", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -106,7 +106,7 @@ PROCEDURE Read (VAR ch: CHAR) ;\n BEGIN\n    IF rStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active read procedure')\n+      Halt ('no active read procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       rStack^.r(ch)\n    END\n@@ -121,7 +121,7 @@ PROCEDURE KeyPressed () : BOOLEAN ;\n BEGIN\n    IF rStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active status procedure')\n+      Halt ('no active status procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN( rStack^.s() )\n    END\n@@ -185,7 +185,7 @@ PROCEDURE Write (VAR ch: CHAR) ;\n BEGIN\n    IF wStack=NIL\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active write procedure')\n+      Halt('no active write procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       wStack^.w(ch)\n    END\n@@ -205,12 +205,12 @@ BEGIN\n    AssignRead(Keyboard.Read, Keyboard.KeyPressed, Done) ;\n    IF NOT Done\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign read routines from module Keyboard')\n+      Halt ('failed to assign read routines from module Keyboard', __FILE__, __FUNCTION__, __LINE__)\n    END ;\n    AssignWrite(Display.Write, Done) ;\n    IF NOT Done\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign write routine from module Display')\n+      Halt ('failed to assign write routine from module Display', __FILE__, __FUNCTION__, __LINE__)\n    END\n END Init ;\n "}, {"sha": "11e494b77b1a7c3f6f4b8e9a3aa2a82458abcbb4", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/keypressedsimple.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -7,7 +7,7 @@ PROCEDURE KeyPressed () : BOOLEAN ;\n BEGIN\n    IF Narg () < 0\n    THEN\n-      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active status procedure')\n+      Halt ('no active status procedure', __FILE__, __FUNCTION__, __LINE__)\n    ELSE\n       RETURN FALSE\n    END"}, {"sha": "8e68272aaecf1f9beabf9baf71a6a0864b2c0bb0", "filename": "libgm2/libm2cor/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2cor%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2cor%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2cor%2FMakefile.am?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -97,11 +97,11 @@ FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n \n \n if BUILD_CORLIB\n-M2DEFS = Debug.def  Executive.def \\\n+M2DEFS = Executive.def \\\n          KeyBoardLEDs.def  SYSTEM.def \\\n          TimerHandler.def\n \n-M2MODS = Debug.mod  Executive.mod \\\n+M2MODS = Executive.mod \\\n          SYSTEM.mod  TimerHandler.mod\n \n toolexeclib_LTLIBRARIES = libm2cor.la"}, {"sha": "f92dd941eb0fd8aef7473cd9e8aae0ed24f99b68", "filename": "libgm2/libm2cor/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2cor%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2cor%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2cor%2FMakefile.in?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -153,7 +153,7 @@ am__uninstall_files_from_dir = { \\\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libm2cor_la_LIBADD =\n-@BUILD_CORLIB_TRUE@am__objects_1 = Debug.lo Executive.lo SYSTEM.lo \\\n+@BUILD_CORLIB_TRUE@am__objects_1 = Executive.lo SYSTEM.lo \\\n @BUILD_CORLIB_TRUE@\tTimerHandler.lo\n @BUILD_CORLIB_TRUE@am_libm2cor_la_OBJECTS = $(am__objects_1) \\\n @BUILD_CORLIB_TRUE@\tKeyBoardLEDs.lo\n@@ -450,11 +450,11 @@ AM_MAKEFLAGS = \\\n \n # Subdir rules rely on $(FLAGS_TO_PASS)\n FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n-@BUILD_CORLIB_TRUE@M2DEFS = Debug.def  Executive.def \\\n+@BUILD_CORLIB_TRUE@M2DEFS = Executive.def \\\n @BUILD_CORLIB_TRUE@         KeyBoardLEDs.def  SYSTEM.def \\\n @BUILD_CORLIB_TRUE@         TimerHandler.def\n \n-@BUILD_CORLIB_TRUE@M2MODS = Debug.mod  Executive.mod \\\n+@BUILD_CORLIB_TRUE@M2MODS = Executive.mod \\\n @BUILD_CORLIB_TRUE@         SYSTEM.mod  TimerHandler.mod\n \n @BUILD_CORLIB_TRUE@toolexeclib_LTLIBRARIES = libm2cor.la"}, {"sha": "71d4f4b55aecdc3971045113a11a4d02a39122c3", "filename": "libgm2/libm2iso/RTco.cc", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2iso%2FRTco.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2iso%2FRTco.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2iso%2FRTco.cc?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -182,8 +182,8 @@ newSem (void)\n       = (threadSem *)malloc (sizeof (threadSem));\n   nSemaphores += 1;\n   if (nSemaphores == SEM_POOL)\n-    m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t       \"too many semaphores created\");\n+    m2iso_M2RTS_HaltC (\"too many semaphores created\",\n+\t\t       __FILE__, __FUNCTION__, __LINE__);\n #else\n   threadSem *sem\n       = (threadSem *)malloc (sizeof (threadSem));\n@@ -239,8 +239,8 @@ currentThread (void)\n   for (tid = 0; tid < nThreads; tid++)\n     if (pthread_self () == threadArray[tid].p)\n       return tid;\n-  m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t     \"failed to find currentThread\");\n+  m2iso_M2RTS_HaltC (\"failed to find currentThread\",\n+\t\t     __FILE__, __FUNCTION__, __LINE__);\n }\n \n extern \"C\" int\n@@ -290,8 +290,8 @@ EXPORT(turnInterrupts) (unsigned int newLevel)\n static void\n never (void)\n {\n-  m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t     \"the main thread should never call here\");\n+  m2iso_M2RTS_HaltC (\"the main thread should never call here\",\n+\t\t     __FILE__, __FUNCTION__, __LINE__);\n }\n \n static void *\n@@ -327,8 +327,8 @@ execThread (void *t)\n #if 0\n   m2iso_M2RTS_CoroutineException ( __FILE__, __LINE__, __COLUMN__, __FUNCTION__, \"coroutine finishing\");\n #endif\n-  m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t     \"execThread should never finish\");\n+  m2iso_M2RTS_HaltC (\"execThread should never finish\",\n+\t\t     __FILE__, __FUNCTION__, __LINE__);\n   return NULL;\n }\n \n@@ -338,8 +338,8 @@ newThread (void)\n #if defined(POOL)\n   nThreads += 1;\n   if (nThreads == THREAD_POOL)\n-    m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t       \"too many threads created\");\n+    m2iso_M2RTS_HaltC (\"too many threads created\",\n+\t\t       __FILE__, __FUNCTION__, __LINE__);\n   return nThreads - 1;\n #else\n   if (nThreads == 0)\n@@ -376,23 +376,24 @@ initThread (void (*proc) (void), unsigned int stackSize,\n   /* Set thread creation attributes.  */\n   result = pthread_attr_init (&attr);\n   if (result != 0)\n-    m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t       \"failed to create thread attribute\");\n+    m2iso_M2RTS_HaltC (\"failed to create thread attribute\",\n+\t\t       __FILE__, __FUNCTION__, __LINE__);\n \n   if (stackSize > 0)\n     {\n       result = pthread_attr_setstacksize (&attr, stackSize);\n       if (result != 0)\n-        m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t\t   \"failed to set stack size attribute\");\n+        m2iso_M2RTS_HaltC (\"failed to set stack size attribute\",\n+\t\t\t   __FILE__, __FUNCTION__, __LINE__);\n     }\n \n   tprintf (\"initThread [%d]  function = 0x%p  (arg = 0x%p)\\n\", tid, proc,\n            (void *)&threadArray[tid]);\n   result = pthread_create (&threadArray[tid].p, &attr, execThread,\n                            (void *)&threadArray[tid]);\n   if (result != 0)\n-    m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__, \"thread_create failed\");\n+    m2iso_M2RTS_HaltC (\"thread_create failed\",\n+\t\t       __FILE__, __FUNCTION__, __LINE__);\n   tprintf (\"  created thread [%d]  function = 0x%p  0x%p\\n\", tid, proc,\n            (void *)&threadArray[tid]);\n   return tid;\n@@ -422,13 +423,13 @@ EXPORT(transfer) (int *p1, int p2)\n   {\n     int current = currentThread ();\n     if (!initialized)\n-      m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t\t \"cannot transfer to a process before the process has been created\");\n+      m2iso_M2RTS_HaltC (\"cannot transfer to a process before the process has been created\",\n+\t\t\t __FILE__, __FUNCTION__, __LINE__);\n     if (current == p2)\n       {\n \t/* Error.  */\n-\tm2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t\t   \"attempting to transfer to ourself\");\n+\tm2iso_M2RTS_HaltC (\"attempting to transfer to ourself\",\n+\t\t\t   __FILE__, __FUNCTION__, __LINE__);\n     }\n     else\n       {\n@@ -473,8 +474,8 @@ EXPORT(transfer) (int *p1, int p2)\n \t  }\n \ttprintf (\"end, context back to %d\\n\", current);\n \tif (current != old)\n-\t  m2iso_M2RTS_HaltC (__FILE__, __LINE__, __FUNCTION__,\n-\t\t\t     \"wrong process id\");\n+\t  m2iso_M2RTS_HaltC (\"wrong process id\",\n+\t\t\t     __FILE__, __FUNCTION__, __LINE__);\n       }\n   }\n   __gthread_mutex_unlock (&lock);"}, {"sha": "481df9be685d67f0b56775f731ab1060a5189ece", "filename": "libgm2/libm2iso/m2rts.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2iso%2Fm2rts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77924dff144cf934e7a73417d237a99f0d9d66ed/libgm2%2Flibm2iso%2Fm2rts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2iso%2Fm2rts.h?ref=77924dff144cf934e7a73417d237a99f0d9d66ed", "patch": "@@ -44,6 +44,5 @@ extern \"C\" void m2iso_M2RTS_ConstructModules (const char *modulename, const char\n extern \"C\" void m2iso_M2RTS_Terminate (void);\n extern \"C\" void m2iso_M2RTS_DeconstructModules (void);\n \n-extern \"C\" void m2iso_M2RTS_HaltC (const char *filename, int line,\n-\t\t\t\t   const char *functionname, const char *desc)\n-  __attribute__ ((noreturn));\n+extern \"C\" void m2iso_M2RTS_HaltC (const char *desc, const char *filename,\n+\t\t\t\t   const char *functionname, int line) __attribute__ ((noreturn));"}]}