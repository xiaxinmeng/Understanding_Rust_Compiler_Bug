{"sha": "248c0b6908dca58adf5f45a42950ba73c3f24a5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4YzBiNjkwOGRjYTU4YWRmNWY0NWE0Mjk1MGJhNzNjM2YyNGE1ZA==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "1999-08-08T22:58:30Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-08-08T22:58:30Z"}, "message": "Makefile.in: Rebuilt.\n\n        * Makefile.in: Rebuilt.\n        * Makefile.am (AM_CFLAGS): Compile with -fexceptions.\n\n        * src/x86/sysv.S: Add exception handling metadata.\n\nalso, add missing files.\n\nFrom-SVN: r28601", "tree": {"sha": "90f1c4743c783851c600ea939bf51ffcdf8d5a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f1c4743c783851c600ea939bf51ffcdf8d5a53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/248c0b6908dca58adf5f45a42950ba73c3f24a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248c0b6908dca58adf5f45a42950ba73c3f24a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248c0b6908dca58adf5f45a42950ba73c3f24a5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248c0b6908dca58adf5f45a42950ba73c3f24a5d/comments", "author": null, "committer": null, "parents": [{"sha": "950fe84354f4e23442ea024390b8cccd6aa1fc0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950fe84354f4e23442ea024390b8cccd6aa1fc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/950fe84354f4e23442ea024390b8cccd6aa1fc0b"}], "stats": {"total": 939, "additions": 936, "deletions": 3}, "files": [{"sha": "a6a415f5d6b95e187a4c5a40f77284c04ebd2b8e", "filename": "libffi/ChangeLog.libgcj", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FChangeLog.libgcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FChangeLog.libgcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog.libgcj?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,7 @@\n+1999-08-09  Anthony Green  <green@cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (AM_CFLAGS): Compile with -fexceptions.\n+\n+\t* src/x86/sysv.S: Add exception handling metadata.\n+"}, {"sha": "91c5080f02927e7aabe595791ae852dd1e6eb1d6", "filename": "libffi/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -24,8 +24,6 @@ MULTICLEAN = true\n toolexecdir = $(exec_prefix)/$(target_alias)\n toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n \n-## We don't use `libz.la' because we don't want to conflict with a\n-## system library of that name.\n toolexeclib_LTLIBRARIES = libffi.la\n \n noinst_PROGRAMS = ffitest\n@@ -70,6 +68,8 @@ if ARM\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n endif\n \n+AM_CFLAGS = -fexceptions\n+\n libffi_la_LDFLAGS = -release $(VERSION) \n \n INCLUDES = -I$(top_srcdir)/include -Iinclude"}, {"sha": "3a421f53bdd22a553f7d088362970da071fc8066", "filename": "libffi/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -62,6 +62,7 @@ AMTAR = @AMTAR@\n AMTARFLAGS = @AMTARFLAGS@\n AS = @AS@\n CC = @CC@\n+CXX = @CXX@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n LD = @LD@\n@@ -130,6 +131,8 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c src/raw_api.c\n @POWERPC_TRUE@libffi_la_SOURCES = @POWERPC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n @ARM_TRUE@libffi_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n \n+AM_CFLAGS = -fexceptions\n+\n libffi_la_LDFLAGS = -release $(VERSION) \n \n INCLUDES = -I$(top_srcdir)/include -Iinclude"}, {"sha": "74fd5a665db9843afa1afbb99aa033d4ab4a10d2", "filename": "libffi/include/Makefile.am", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.am?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,9 @@\n+## Process this with automake to create Makefile.in\n+\n+AUTOMAKE_OPTIONS = foreign\n+\n+EXTRA_DIST = ffi.h.in ffi_common.h ffi_mips.h\n+\n+hackdir=$(includedir)\n+\n+hack_DATA=fficonfig.h ffi.h ffi_mips.h\n\\ No newline at end of file"}, {"sha": "98c8dc77766cd71b402e44d26fba7bd8e764a94c", "filename": "libffi/include/Makefile.in", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,220 @@\n+# Makefile.in generated automatically by automake 1.4a from Makefile.am\n+\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+SHELL = @SHELL@\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+DESTDIR =\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = ..\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_FLAG =\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+host_alias = @host_alias@\n+host_triplet = @host@\n+AMTAR = @AMTAR@\n+AMTARFLAGS = @AMTARFLAGS@\n+AS = @AS@\n+CC = @CC@\n+CXX = @CXX@\n+DLLTOOL = @DLLTOOL@\n+EXEEXT = @EXEEXT@\n+LD = @LD@\n+LIBTOOL = @LIBTOOL@\n+LN_S = @LN_S@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+NM = @NM@\n+PACKAGE = @PACKAGE@\n+RANLIB = @RANLIB@\n+SHELL = @SHELL@\n+TARGET = @TARGET@\n+TARGETDIR = @TARGETDIR@\n+USE_SYMBOL_UNDERSCORE = @USE_SYMBOL_UNDERSCORE@\n+VERSION = @VERSION@\n+\n+\n+AUTOMAKE_OPTIONS = foreign\n+\n+EXTRA_DIST = ffi.h.in ffi_common.h ffi_mips.h\n+\n+hackdir = $(includedir)\n+\n+hack_DATA = fficonfig.h ffi.h ffi_mips.h\n+subdir = include\n+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+CONFIG_HEADER = ../fficonfig.h\n+CONFIG_CLEAN_FILES =  ffi.h\n+DIST_SOURCES = \n+DATA =  $(hack_DATA)\n+\n+DIST_COMMON =  $(hack_DATA) Makefile.am Makefile.in ffi.h.in\n+\n+\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+\n+GZIP_ENV = --best\n+all: all-redirect\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --foreign include/Makefile\n+\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+ffi.h: $(top_builddir)/config.status ffi.h.in\n+\tcd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+install-hackDATA: $(hack_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t$(mkinstalldirs) $(DESTDIR)$(hackdir)\n+\t@list='$(hack_DATA)'; for p in $$list; do \\\n+\t  if test -f \"$$p\"; then d= ; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" $(INSTALL_DATA) $$d$$p $(DESTDIR)$(hackdir)/$$f\"; \\\n+\t  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(hackdir)/$$f; \\\n+\tdone\n+\n+uninstall-hackDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(hack_DATA)'; for p in $$list; do \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" rm -f $(DESTDIR)$(hackdir)/$$f\"; \\\n+\t  rm -f $(DESTDIR)$(hackdir)/$$f; \\\n+\tdone\n+tags: TAGS\n+TAGS:\n+\n+\n+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n+\n+distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign include/Makefile\n+\t@for file in $(DISTFILES); do \\\n+\t  d=$(srcdir); \\\n+\t  if test -d $$d/$$file; then \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file || :; \\\n+\t  fi; \\\n+\tdone\n+info-am:\n+info: info-am\n+dvi-am:\n+dvi: dvi-am\n+check-am: all-am\n+check: check-am\n+installcheck-am:\n+installcheck: installcheck-am\n+install-exec-am:\n+install-exec: install-exec-am\n+\n+install-data-am: install-hackDATA\n+install-data: install-data-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+install: install-am\n+uninstall-am: uninstall-hackDATA\n+uninstall: uninstall-am\n+all-am: Makefile $(DATA)\n+all-redirect: all-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n+installdirs:\n+\t$(mkinstalldirs)  $(DESTDIR)$(hackdir)\n+\n+\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n+\t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\n+maintainer-clean-generic:\n+mostlyclean-am:  mostlyclean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+clean-am:  clean-generic mostlyclean-am\n+\n+clean: clean-am\n+\n+distclean-am:  distclean-generic clean-am\n+\t-rm -f libtool\n+\n+distclean: distclean-am\n+\n+maintainer-clean-am:  maintainer-clean-generic distclean-am\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+maintainer-clean: maintainer-clean-am\n+\n+.PHONY: uninstall-hackDATA install-hackDATA tags distdir info-am info \\\n+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \\\n+install-exec install-data-am install-data install-am install \\\n+uninstall-am uninstall all-redirect all-am all install-strip \\\n+installdirs mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "c28ebf6e4404ad673484b7a4ed5265416ed50467", "filename": "libffi/include/ffi.h.in", "status": "added", "additions": 421, "deletions": 0, "changes": 421, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,421 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   libffi @VERSION@ - Copyright (c) 1996-1999  Cygnus Solutions\n+\n+   $Id: ffi.h.in,v 1.3 1999/08/08 13:05:12 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_H\n+#define LIBFFI_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* Specify which architecture libffi is configured for. */\n+#define @TARGET@\n+\n+/* ---- System configuration information --------------------------------- */\n+\n+#ifdef PACKAGE\n+#define OLD_PACKAGE PACKAGE\n+#undef PACKAGE\n+#endif\n+#ifdef VERSION\n+#define OLD_VERSION VERSION\n+#undef VERSION\n+#endif\n+\n+#include <fficonfig.h>\n+\n+#undef PACKAGE\n+#undef VERSION\n+\n+#ifdef OLD_PACKAGE\n+#define PACKAGE OLD_PACKAGE\n+#endif\n+#ifdef OLD_VERSION\n+#define VERSION OLD_VERSION\n+#endif\n+\n+#if !defined(LIBFFI_ASM)\n+#include <stddef.h>\n+#if defined(FFI_DEBUG) \n+#include <stdio.h>\n+#endif\n+#endif\n+\n+/* ---- Generic type definitions ----------------------------------------- */\n+\n+#define FLOAT32 float\n+#define FLOAT64 double\n+#define FLOAT80 long double\n+\n+#define UINT8   unsigned char\n+#define SINT8   signed char\n+\n+#if SIZEOF_INT == 2\n+\n+#define UINT16\tunsigned int\n+#define SINT16  int\n+#define ffi_type_uint ffi_type_uint16\n+#define ffi_type_sint ffi_type_sint16\n+\n+#else \n+#if SIZEOF_SHORT == 2\n+\n+#define UINT16  unsigned short\n+#define SINT16  short\n+#define ffi_type_ushort ffi_type_uint16\n+#define ffi_type_sshort ffi_type_sint16\n+\n+#endif\n+#endif\n+\n+#if SIZEOF_INT == 4\n+\n+#define UINT32\tunsigned int\n+#define SINT32  int\n+#define ffi_type_uint ffi_type_uint32\n+#define ffi_type_sint ffi_type_sint32\n+\n+#else \n+#if SIZEOF_SHORT == 4\n+\n+#define UINT32  unsigned short\n+#define SINT32  short\n+#define ffi_type_ushort ffi_type_uint32\n+#define ffi_type_sshort ffi_type_sint32\n+\n+#else\n+#if SIZEOF_LONG == 4\n+\n+#define UINT32  unsigned long\n+#define SINT32  long\n+#define ffi_type_ulong ffi_type_uint32\n+#define ffi_type_slong ffi_type_sint32\n+\n+#endif\n+#endif\n+#endif\n+\n+#if SIZEOF_INT == 8\n+\n+#define UINT64  unsigned int\n+#define SINT64  int\n+#define ffi_type_uint ffi_type_uint64\n+#define ffi_type_sint ffi_type_sint64\n+\n+#else\n+#if SIZEOF_LONG == 8\n+\n+#define UINT64  unsigned long\n+#define SINT64  long\n+#define ffi_type_ulong ffi_type_uint64\n+#define ffi_type_slong ffi_type_sint64\n+\n+#else\n+#if SIZEOF_LONG_LONG == 8\n+\n+#define UINT64  unsigned long long\n+#define SINT64  long long\n+#define ffi_type_ulong ffi_type_uint64\n+#define ffi_type_slong ffi_type_sint64\n+\n+#endif\n+#endif\n+#endif\n+\n+/* ---- System specific configurations ----------------------------------- */\n+\n+#ifdef MIPS\n+#include <ffi_mips.h>\n+#else\n+#define SIZEOF_ARG SIZEOF_VOID_P\n+#endif\n+\n+#ifndef LIBFFI_ASM\n+\n+/* ---- Generic type definitions ----------------------------------------- */\n+\n+#define ALIGN(v, a)  (((((unsigned) (v))-1) | ((a)-1))+1)\n+\n+typedef enum ffi_abi {\n+\n+  /* Leave this for debugging purposes */\n+  FFI_FIRST_ABI = 0,\n+\n+  /* ---- Sparc -------------------- */\n+#ifdef SPARC\n+  FFI_V8,\n+  FFI_DEFAULT_ABI = FFI_V8,\n+  FFI_V8PLUS,\n+  FFI_V9,\n+#endif\n+\n+  /* ---- Intel x86 ---------------- */\n+#ifdef X86\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n+  /* ---- Mips --------------------- */\n+#ifdef MIPS\n+  FFI_O32,\n+  FFI_N32,\n+  FFI_N64,\n+#endif\n+\n+  /* ---- Alpha -------------------- */\n+#ifdef ALPHA\n+  FFI_OSF,\n+  FFI_DEFAULT_ABI = FFI_OSF,\n+#endif\n+\n+  /* ---- Motorola m68k ------------ */\n+#ifdef M68K\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n+  /* ---- PowerPC ------------------ */\n+#ifdef POWERPC\n+  FFI_SYSV,\n+  FFI_GCC_SYSV,\n+  FFI_DEFAULT_ABI = FFI_GCC_SYSV,\n+#endif\n+\n+  /* ---- ARM  --------------------- */\n+#ifdef ARM\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n+  /* Leave this for debugging purposes */\n+  FFI_LAST_ABI\n+\n+} ffi_abi;\n+\n+typedef struct _ffi_type\n+{\n+  size_t size;\n+  unsigned short alignment;\n+  unsigned short type;\n+  /*@null@*/ struct _ffi_type **elements;\n+} ffi_type;\n+\n+/* These are defined in ffi.c */\n+extern ffi_type ffi_type_void;\n+extern ffi_type ffi_type_uint8;\n+extern ffi_type ffi_type_sint8;\n+extern ffi_type ffi_type_uint16;\n+extern ffi_type ffi_type_sint16;\n+extern ffi_type ffi_type_uint32;\n+extern ffi_type ffi_type_sint32;\n+extern ffi_type ffi_type_uint64;\n+extern ffi_type ffi_type_sint64;\n+extern ffi_type ffi_type_float;\n+extern ffi_type ffi_type_double;\n+extern ffi_type ffi_type_longdouble;\n+extern ffi_type ffi_type_pointer;\n+\n+/* Characters are 8 bit integral types */\n+#define ffi_type_schar ffi_type_sint8\n+#define ffi_type_uchar ffi_type_uint8\n+\n+typedef enum {\n+  FFI_OK = 0,\n+  FFI_BAD_TYPEDEF,\n+  FFI_BAD_ABI \n+} ffi_status;\n+\n+typedef unsigned FFI_TYPE;\n+\n+typedef struct {\n+  ffi_abi abi;\n+  unsigned nargs;\n+  /*@dependent@*/ ffi_type **arg_types;\n+  /*@dependent@*/ ffi_type *rtype;\n+  unsigned bytes;\n+  unsigned flags;\n+\n+#ifdef MIPS\n+#if _MIPS_SIM == _ABIN32\n+  unsigned rstruct_flag;\n+#endif\n+#endif\n+\n+} ffi_cif;\n+\n+/* ---- Definitions for the raw API -------------------------------------- */\n+\n+#if !FFI_NO_RAW_API\n+\n+#if SIZEOF_ARG == 4\n+\n+#define UINT_ARG UINT32\n+#define SINT_ARG SINT32\n+\n+#endif\n+\n+#if SIZEOF_ARG == 8\n+\n+#define UINT_ARG UINT64\n+#define SINT_ARG SINT64\n+\n+#endif\n+\n+typedef union {\n+  SINT_ARG sint;\n+  UINT_ARG uint;\n+  char     data[SIZEOF_ARG];\n+  void*    ptr;\n+} ffi_raw;\n+\n+void ffi_raw_call (/*@dependent@*/ ffi_cif *cif, \n+\t\t   void (*fn)(), \n+\t\t   /*@out@*/ void *rvalue, \n+\t\t   /*@dependent@*/ ffi_raw *avalue);\n+\n+void ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw);\n+void ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args);\n+size_t ffi_raw_size (ffi_cif *cif);\n+\n+\n+\n+\n+#endif /* !FFI_NO_RAW_API */\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#ifdef X86\n+\n+#define FFI_CLOSURES 1\t\t/* x86 supports closures */\n+#define FFI_TRAMPOLINE_SIZE 10\n+#define FFI_NATIVE_RAW_API 1\t/* and has native raw api support */\n+\n+#else \n+\n+#define FFI_CLOSURES 0\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+\n+\n+\n+#if FFI_CLOSURES\n+\n+typedef struct {\n+  char tramp[FFI_TRAMPOLINE_SIZE];\n+  ffi_cif   *cif;\n+  void     (*fun)(ffi_cif*,void*,void**,void*);\n+  void      *user_data;\n+} ffi_closure;\n+\n+ffi_status\n+ffi_prep_closure (ffi_closure*,\n+\t\t  ffi_cif *,\n+\t\t  void (*fun)(ffi_cif*,void*,void**,void*),\n+\t\t  void *user_data);\n+\n+#if !FFI_NO_RAW_API\n+\n+typedef struct {\n+  char tramp[FFI_TRAMPOLINE_SIZE];\n+\n+  ffi_cif   *cif;\n+\n+#if !FFI_NATIVE_RAW_API\n+\n+  /* if this is enabled, then a raw closure has the same layout \n+     as a regular closure.  We use this to install an intermediate \n+     handler to do the transaltion, void** -> ffi_raw*. */\n+\n+  void     (*translate_args)(ffi_cif*,void*,void**,void*);\n+  void      *this_closure;\n+\n+#endif\n+\n+  void     (*fun)(ffi_cif*,void*,ffi_raw*,void*);\n+  void      *user_data;\n+\n+} ffi_raw_closure;\n+\n+ffi_status\n+ffi_prep_raw_closure (ffi_raw_closure*,\n+\t\t      ffi_cif *cif,\n+\t\t      void (*fun)(ffi_cif*,void*,ffi_raw*,void*),\n+\t\t      void *user_data);\n+\n+#endif /* !FFI_NO_RAW_API */\n+#endif /* FFI_CLOSURES */\n+\n+/* ---- Public interface definition -------------------------------------- */\n+\n+ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif, \n+\t\t\tffi_abi abi,\n+\t\t\tunsigned int nargs, \n+\t\t\t/*@dependent@*/ /*@out@*/ /*@partial@*/ ffi_type *rtype, \n+\t\t\t/*@dependent@*/ ffi_type **atypes);\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue);\n+\n+/* Useful for eliminating compiler warnings */\n+#define FFI_FN(f) ((void (*)(...))f)\n+\n+/* ---- Definitions shared with assembly code ---------------------------- */\n+\n+#endif\n+\n+#define FFI_TYPE_VOID       0    \n+#define FFI_TYPE_INT        1\n+#define FFI_TYPE_FLOAT      2    \n+#define FFI_TYPE_DOUBLE     3\n+#if SIZEOF_LONG_DOUBLE == SIZEOF_DOUBLE\n+#define FFI_TYPE_LONGDOUBLE FFI_TYPE_DOUBLE\n+#else\n+#define FFI_TYPE_LONGDOUBLE 4\n+#endif\n+\n+#define FFI_TYPE_UINT8      5   /* If this changes, update ffi_mips.h. */\n+#define FFI_TYPE_SINT8      6   /* If this changes, update ffi_mips.h. */\n+#define FFI_TYPE_UINT16     7 \n+#define FFI_TYPE_SINT16     8\n+#define FFI_TYPE_UINT32     9\n+#define FFI_TYPE_SINT32     10\n+#define FFI_TYPE_UINT64     11\n+#define FFI_TYPE_SINT64     12\n+#define FFI_TYPE_STRUCT     13  /* If this changes, update ffi_mips.h. */\n+#define FFI_TYPE_POINTER    14\n+\n+/* This should always refer to the last type code (for sanity checks) */\n+#define FFI_TYPE_LAST       FFI_TYPE_POINTER\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif\n+"}, {"sha": "c9d4acf9085e157ce4d88a85c4af9384f9a61ced", "filename": "libffi/include/ffi_common.h", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi_common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi_common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi_common.h?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,91 @@\n+/* -----------------------------------------------------------------------\n+   ffi_common.h - Copyright (c) 1996  Cygnus Solutions\n+\n+   $Id: ffi_common.h,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Common internal definitions and macros. Only necessary for building\n+   libffi.\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef FFI_COMMON_H\n+#define FFI_COMMON_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* Do not move this. Some versions of AIX are very picky about where\n+   this is positioned. */\n+#ifdef __GNUC__\n+# define alloca __builtin_alloca\n+#else\n+# if HAVE_ALLOCA_H\n+#  include <alloca.h>\n+# else\n+#  ifdef _AIX\n+ #pragma alloca\n+#  else\n+#   ifndef alloca /* predefined by HP cc +Olibcalls */\n+char *alloca ();\n+#   endif\n+#  endif\n+# endif\n+#endif\n+\n+/* Check for the existence of memcpy. */\n+#if STDC_HEADERS\n+# include <string.h>\n+#else\n+# ifndef HAVE_MEMCPY\n+#  define memcpy(d, s, n) bcopy ((s), (d), (n))\n+# endif\n+#endif\n+\n+#ifndef FALSE\n+#define FALSE 0\n+#endif\n+\n+#ifndef TRUE\n+#define TRUE (!FALSE)\n+#endif\n+\n+#ifndef __cplusplus\n+/* bool is a keyword in C++ */\n+/*@-cppnames@*/\n+typedef int bool;\n+/*@=cppnames@*/\n+#endif\n+\n+#ifdef FFI_DEBUG\n+\n+/* Debugging functions */\n+/*@exits@*/ int ffi_assert(/*@temp@*/ char *file, int line);\n+void ffi_stop_here(void);\n+bool ffi_type_test(/*@temp@*/ /*@out@*/ ffi_type *a);\n+\n+#define FFI_ASSERT(x) ((x) ? 0 : ffi_assert(__FILE__,__LINE__))\n+\n+#else\n+\n+#define FFI_ASSERT(x) \n+\n+#endif\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif);\n+\n+/* Extended cif, used in callback from assembly routine */\n+typedef struct\n+{\n+  /*@dependent@*/ ffi_cif *cif;\n+  /*@dependent@*/ void *rvalue;\n+  /*@dependent@*/ void **avalue;\n+} extended_cif;\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif\n+\n+"}, {"sha": "9d4a66cb8c3f01eebd6d8edd7bbe98dd8a170120", "filename": "libffi/include/ffi_mips.h", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi_mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Finclude%2Fffi_mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi_mips.h?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -0,0 +1,143 @@\n+/* -----------------------------------------------------------------------\n+   ffi-mips.h - Copyright (c) 1996 Cygnus Support\n+   \n+   MIPS FFI Definitions\n+\n+   $Id: ffi_mips.h,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SUPPORT BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef FFI_MIPS_H\n+\n+#include <ffi.h>\n+\n+#if !defined(_MIPS_SIM)\n+-- something is very wrong --\n+#else\n+#  if _MIPS_SIM==_ABIN32 && defined(_ABIN32)\n+#    define FFI_MIPS_N32\n+#  else\n+#    if defined(__GNUC__)\n+#      define FFI_MIPS_O32\n+#    else\n+#      if _MIPS_SIM==_ABIO32\n+#        define FFI_MIPS_O32\n+#      else\n+-- this is an unsupported platform --\n+#      endif\n+#    endif\n+#  endif\n+#endif\n+\n+#define v0 $2\n+#define v1 $3\n+#define a0 $4\n+#define a1 $5\n+#define a2 $6\n+#define a3 $7\n+#define a4 $8\t\t\n+#define a5 $9\t\t\n+#define a6 $10\t\t\n+#define a7 $11\t\t\n+#define t0 $8\n+#define t1 $9\n+#define t2 $10\n+#define t3 $11\n+#define t4 $12\t\t\n+#define t5 $13\n+#define t6 $14\t\n+#define t7 $15\n+#define t8 $24\n+#define t9 $25\n+#define ra $31\t\t\n+\n+#if defined(FFI_MIPS_O32)\n+\n+#define FFI_DEFAULT_ABI FFI_O32\n+\n+/* O32 stack frames have 32bit integer args */\n+#define SLOT_TYPE_UNSIGNED UINT32\n+#define SLOT_TYPE_SIGNED   SINT32\n+#define SIZEOF_ARG         4\n+\n+#define REG_L\tlw\n+#define REG_S\tsw\n+#define SUBU\tsubu\n+#define ADDU\taddu\n+#define SRL\tsrl\n+#define LI\tli\n+\n+#else\n+\n+#define FFI_DEFAULT_ABI FFI_N32\n+\n+/* N32 and N64 frames have 64bit integer args */\n+#define SLOT_TYPE_UNSIGNED UINT64\n+#define SLOT_TYPE_SIGNED   SINT64\n+#define SIZEOF_ARG         8\n+\n+#define REG_L\tld\n+#define REG_S\tsd\n+#define SUBU\tdsubu\n+#define ADDU\tdaddu\n+#define SRL\tdsrl\n+#define LI \tdli\n+\n+#endif\n+\n+#define FFI_FLAG_BITS 2\n+\n+/* SGI's strange assembler requires that we multiply by 4 rather \n+   than shift left by FFI_FLAG_BITS */\n+\n+#define FFI_ARGS_D   FFI_TYPE_DOUBLE\n+#define FFI_ARGS_F   FFI_TYPE_FLOAT\n+#define FFI_ARGS_DD  FFI_TYPE_DOUBLE * 4 + FFI_TYPE_DOUBLE\n+#define FFI_ARGS_FF  FFI_TYPE_FLOAT * 4 +  FFI_TYPE_FLOAT\n+#define FFI_ARGS_FD  FFI_TYPE_DOUBLE * 4 + FFI_TYPE_FLOAT\n+#define FFI_ARGS_DF  FFI_TYPE_FLOAT * 4 + FFI_TYPE_DOUBLE\n+\n+/* Needed for N32 structure returns */\n+#define FFI_TYPE_SMALLSTRUCT  FFI_TYPE_UINT8\n+#define FFI_TYPE_SMALLSTRUCT2 FFI_TYPE_SINT8\n+\n+#if 0\n+\n+/* The SGI assembler can't handle this.. */\n+\n+#define FFI_TYPE_STRUCT_DD (( FFI_ARGS_DD ) << 4) + FFI_TYPE_STRUCT\n+\n+#else\n+\n+/* ...so we calculate these by hand! */\n+\n+#define FFI_TYPE_STRUCT_D      61\n+#define FFI_TYPE_STRUCT_F      45\n+#define FFI_TYPE_STRUCT_DD     253\n+#define FFI_TYPE_STRUCT_FF     173\n+#define FFI_TYPE_STRUCT_FD     237\n+#define FFI_TYPE_STRUCT_DF     189\n+#define FFI_TYPE_STRUCT_SMALL  93\n+#define FFI_TYPE_STRUCT_SMALL2 109\n+\n+#endif\n+\n+#endif"}, {"sha": "4c8473ae901706f6d37c398e8bbff0921b153809", "filename": "libffi/src/x86/sysv.S", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Fsrc%2Fx86%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248c0b6908dca58adf5f45a42950ba73c3f24a5d/libffi%2Fsrc%2Fx86%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fsysv.S?ref=248c0b6908dca58adf5f45a42950ba73c3f24a5d", "patch": "@@ -38,9 +38,11 @@\n         .type    ffi_call_SYSV,@function\n \n ffi_call_SYSV:\n+.LFB1:\n         pushl %ebp\n+.LCFI0:\n         movl  %esp,%ebp\n-\n+.LCFI1:\n \t# Make room for all of the new args.\n \tmovl  16(%ebp),%ecx\n \tsubl  %ecx,%esp\n@@ -124,6 +126,43 @@ epilogue:\n         movl %ebp,%esp\n         popl %ebp\n         ret\n+.LFE1:\n .ffi_call_SYSV_end:\n         .size    ffi_call_SYSV,.ffi_call_SYSV_end-ffi_call_SYSV\n \n+.section\t.eh_frame,\"aw\",@progbits\n+__FRAME_BEGIN__:\n+\t.4byte\t.LLCIE1\n+.LSCIE1:\n+\t.4byte\t0x0\n+\t.byte\t0x1\n+\t.byte\t0x0\n+\t.byte\t0x1\n+\t.byte\t0x7c\n+\t.byte\t0x8\n+\t.byte\t0xc\n+\t.byte\t0x4\n+\t.byte\t0x4\n+\t.byte\t0x88\n+\t.byte\t0x1\n+\t.align 4\n+.LECIE1:\n+\t.set\t.LLCIE1,.LECIE1-.LSCIE1\n+\t.4byte\t.LLFDE1\n+.LSFDE1:\n+\t.4byte\t.LSFDE1-__FRAME_BEGIN__\n+\t.4byte\t.LFB1\n+\t.4byte\t.LFE1-.LFB1\n+\t.byte\t0x4\n+\t.4byte\t.LCFI0-.LFB1\n+\t.byte\t0xe\n+\t.byte\t0x8\n+\t.byte\t0x85\n+\t.byte\t0x2\n+\t.byte\t0x4\n+\t.4byte\t.LCFI1-.LCFI0\n+\t.byte\t0xd\n+\t.byte\t0x5\n+\t.align 4\n+.LEFDE1:\n+\t.set\t.LLFDE1,.LEFDE1-.LSFDE1"}]}