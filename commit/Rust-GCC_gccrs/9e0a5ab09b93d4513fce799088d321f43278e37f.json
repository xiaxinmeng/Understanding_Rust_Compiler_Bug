{"sha": "9e0a5ab09b93d4513fce799088d321f43278e37f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwYTVhYjA5YjkzZDQ1MTNmY2U3OTkwODhkMzIxZjQzMjc4ZTM3Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-14T21:30:38Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-14T21:30:38Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r489", "tree": {"sha": "e943d3ccdb69d9efeaf2fb367a6978a3ba315d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e943d3ccdb69d9efeaf2fb367a6978a3ba315d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e0a5ab09b93d4513fce799088d321f43278e37f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0a5ab09b93d4513fce799088d321f43278e37f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e0a5ab09b93d4513fce799088d321f43278e37f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0a5ab09b93d4513fce799088d321f43278e37f/comments", "author": null, "committer": null, "parents": [{"sha": "c831afd5af83c3d70579ba89f521da8621eaff0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c831afd5af83c3d70579ba89f521da8621eaff0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c831afd5af83c3d70579ba89f521da8621eaff0c"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "d326ac14ee7700b6bcefef7acbda697758c8bf62", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0a5ab09b93d4513fce799088d321f43278e37f/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0a5ab09b93d4513fce799088d321f43278e37f/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=9e0a5ab09b93d4513fce799088d321f43278e37f", "patch": "@@ -260,11 +260,18 @@ initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)\n       rtx p = DECL_RTL (parms);\n \n       if (GET_CODE (p) == MEM && copy)\n-\t/* Copy the rtl so that modifications of the address\n-\t   later in compilation won't affect this arg_vector.\n-\t   Virtual register instantiation can screw the address\n-\t   of the rtl.  */\n-\tDECL_RTL (parms) = copy_rtx (p);\n+\t{\n+\t  /* Copy the rtl so that modifications of the addresses\n+\t     later in compilation won't affect this arg_vector.\n+\t     Virtual register instantiation can screw the address\n+\t     of the rtl.  */\n+\t  rtx new = copy_rtx (p);\n+\n+\t  /* Don't leave the old copy anywhere in this decl.  */\n+\t  if (DECL_RTL (parms) == DECL_INCOMING_RTL (parms))\n+\t    DECL_INCOMING_RTL (parms) = new;\n+\t  DECL_RTL (parms) = new;\n+\t}\n \n       RTVEC_ELT (arg_vector, i) = p;\n "}]}