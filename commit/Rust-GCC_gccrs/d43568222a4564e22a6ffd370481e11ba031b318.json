{"sha": "d43568222a4564e22a6ffd370481e11ba031b318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQzNTY4MjIyYTQ1NjRlMjJhNmZmZDM3MDQ4MWUxMWJhMDMxYjMxOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-12-16T22:37:22Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-12-16T22:37:22Z"}, "message": "PR tree-optimization/83239 - False positive from -Wstringop-overflow\n\nPR tree-optimization/83239 - False positive from -Wstringop-overflow\non simple std::vector code\n\nlibstdc++/CHangeLog:\n\t* include/bits/vector.tcc (vector::_M_default_append): Assert\n        invariant to generate better code.\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/pr83239.C: New test case.\n\nFrom-SVN: r255753", "tree": {"sha": "49759439d19f1c2f45fbb5f75e0ad9ff5e3712a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49759439d19f1c2f45fbb5f75e0ad9ff5e3712a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d43568222a4564e22a6ffd370481e11ba031b318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43568222a4564e22a6ffd370481e11ba031b318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43568222a4564e22a6ffd370481e11ba031b318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43568222a4564e22a6ffd370481e11ba031b318/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eaa31d84014c78a16409ef3c08e164dee78b56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eaa31d84014c78a16409ef3c08e164dee78b56f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eaa31d84014c78a16409ef3c08e164dee78b56f"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "f16a1872230ec819c769475b2bd006ef0785ac33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43568222a4564e22a6ffd370481e11ba031b318/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43568222a4564e22a6ffd370481e11ba031b318/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d43568222a4564e22a6ffd370481e11ba031b318", "patch": "@@ -1,3 +1,8 @@\n+2017-12-16  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83239\n+\t* g++.dg/pr83239.C: New test case.\n+\n 2017-12-16  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \tPR testsuite/82767"}, {"sha": "b0f31be33f1f0413cdd503f14836e3cf6a988fe8", "filename": "gcc/testsuite/g++.dg/pr83239.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43568222a4564e22a6ffd370481e11ba031b318/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr83239.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43568222a4564e22a6ffd370481e11ba031b318/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr83239.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr83239.C?ref=d43568222a4564e22a6ffd370481e11ba031b318", "patch": "@@ -0,0 +1,56 @@\n+// PR tree-optimization/83239 - False positive from -Wstringop-overflow\n+// on simple std::vector code\n+// { dg-do compile }\n+// { dg-options \"-O3 -Wall -fdump-tree-optimized\"  }\n+\n+#include <vector>\n+\n+// Verify no warnings are issued.\n+\n+template <class T>\n+void test_loop ()\n+{\n+  std::vector<T> a;\n+\n+  int num = 2;\n+\n+  while (num > 0)\n+    {\n+      const typename std::vector<T>::size_type sz = a.size ();\n+\n+      if (sz < 3)\n+\ta.assign (1, 0);\n+      else\n+\ta.resize (sz - 2);\n+\n+      --num;\n+    }\n+}\n+\n+// Verify no warnings are issued here either.\n+\n+template <class T>\n+void test_if (std::vector<T> &a, int num)\n+{\n+  if (num > 0)\n+    {\n+      const typename std::vector<T>::size_type sz = a.size ();\n+\n+      if (sz < 3)\n+\ta.assign (1, 0);\n+      else\n+\ta.resize (sz - 2);\n+    }\n+}\n+\n+// Instantiate each function on a different type to force both\n+// to be fully inlined.  Instantiating both on the same type\n+// causes the inlining heuristics to outline _M_default_append\n+// which, in turn, masks the warning.\n+template void test_loop<int>();\n+template void test_if<long>(std::vector<long>&, int);\n+\n+// Verify that std::vector<T>::_M_default_append() has been inlined\n+// (the absence of warnings depends on it).\n+// { dg-final { scan-tree-dump-not \"_ZNSt6vectorIiSaIiEE17_M_default_appendEm\"  optimized } }\n+// { dg-final { scan-tree-dump-not \"_ZNSt6vectorIPvSaIS0_EE17_M_default_appendEm\" optimized } }"}, {"sha": "1275ea5e85f7e33e7266472eecd51000dd10a300", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43568222a4564e22a6ffd370481e11ba031b318/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43568222a4564e22a6ffd370481e11ba031b318/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d43568222a4564e22a6ffd370481e11ba031b318", "patch": "@@ -1,3 +1,9 @@\n+2017-12-16  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83239\n+\t* include/bits/vector.tcc (vector::_M_default_append): Assert\n+        invariant to generate better code.\n+\n 2017-12-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/83279"}, {"sha": "595a7f3273507b3288e70e4a104e0b8daf7884e3", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43568222a4564e22a6ffd370481e11ba031b318/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43568222a4564e22a6ffd370481e11ba031b318/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=d43568222a4564e22a6ffd370481e11ba031b318", "patch": "@@ -582,8 +582,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       if (__n != 0)\n \t{\n-\t  if (size_type(this->_M_impl._M_end_of_storage\n-\t\t\t- this->_M_impl._M_finish) >= __n)\n+\t  size_type __size = size();\n+\t  size_type __navail = size_type(this->_M_impl._M_end_of_storage\n+\t\t\t\t\t - this->_M_impl._M_finish);\n+\n+\t  if (__size > max_size() || __navail > max_size() - __size)\n+\t    __builtin_unreachable();\n+\n+\t  if (__navail >= __n)\n \t    {\n \t      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);\n \t      this->_M_impl._M_finish =\n@@ -595,7 +601,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t    {\n \t      const size_type __len =\n \t\t_M_check_len(__n, \"vector::_M_default_append\");\n-\t      const size_type __old_size = this->size();\n+\t      const size_type __old_size = __size;\n \t      pointer __new_start(this->_M_allocate(__len));\n \t      pointer __new_finish(__new_start);\n \t      __try"}]}