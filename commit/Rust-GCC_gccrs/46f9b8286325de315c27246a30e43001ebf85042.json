{"sha": "46f9b8286325de315c27246a30e43001ebf85042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmOWI4Mjg2MzI1ZGUzMTVjMjcyNDZhMzBlNDMwMDFlYmY4NTA0Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-29T09:51:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-29T09:51:43Z"}, "message": "(output_cbranch): When checking for a jump to the given insn's delay slot...\n\n(output_cbranch): When checking for a jump to the given insn's delay\nslot, handle the case where JUMP_LABEL for the given insn does not\npoint to the first label in a series of labels.\n(output_bb, output_dbra, output_movb): Likewise.\n\nFrom-SVN: r10090", "tree": {"sha": "d8f79db65be0a24ab701ea3959479c7055a53396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f79db65be0a24ab701ea3959479c7055a53396"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f9b8286325de315c27246a30e43001ebf85042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f9b8286325de315c27246a30e43001ebf85042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f9b8286325de315c27246a30e43001ebf85042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f9b8286325de315c27246a30e43001ebf85042/comments", "author": null, "committer": null, "parents": [{"sha": "107869976351331823ea195a44c0faf6239c89b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107869976351331823ea195a44c0faf6239c89b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/107869976351331823ea195a44c0faf6239c89b7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "53580d49a1e11894e116cb2e488da7d5fa20a8f3", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f9b8286325de315c27246a30e43001ebf85042/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f9b8286325de315c27246a30e43001ebf85042/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=46f9b8286325de315c27246a30e43001ebf85042", "patch": "@@ -3615,7 +3615,7 @@ output_cbranch (operands, nullify, length, negated, insn)\n \n      In such cases it is safe to emit nothing.  */\n \n-  if (JUMP_LABEL (insn) == next_nonnote_insn (insn))\n+  if (next_active_insn (JUMP_LABEL (insn)) == next_active_insn (insn))\n     return \"\";\n \n   /* If this is a long branch with its delay slot unfilled, set `nullify'\n@@ -3731,7 +3731,7 @@ output_bb (operands, nullify, length, negated, insn, which)\n      is only used when optimizing; jump optimization should eliminate the\n      jump.  But be prepared just in case.  */\n \n-  if (JUMP_LABEL (insn) == next_nonnote_insn (insn))\n+  if (next_active_insn (JUMP_LABEL (insn)) == next_active_insn (insn))\n     return \"\";\n \n   /* If this is a long branch with its delay slot unfilled, set `nullify'\n@@ -3862,7 +3862,7 @@ output_dbra (operands, insn, which_alternative)\n   /* A conditional branch to the following instruction (eg the delay slot) is\n      asking for a disaster.  Be prepared!  */\n \n-  if (JUMP_LABEL (insn) == next_nonnote_insn (insn))\n+  if (next_active_insn (JUMP_LABEL (insn)) == next_active_insn (insn))\n     {\n       if (which_alternative == 0)\n \treturn \"ldo %1(%0),%0\";\n@@ -3968,7 +3968,7 @@ output_movb (operands, insn, which_alternative, reverse_comparison)\n   /* A conditional branch to the following instruction (eg the delay slot) is\n      asking for a disaster.  Be prepared!  */\n \n-  if (JUMP_LABEL (insn) == next_nonnote_insn (insn))\n+  if (next_active_insn (JUMP_LABEL (insn)) == next_active_insn (insn))\n     {\n       if (which_alternative == 0)\n \treturn \"copy %1,%0\";"}]}