{"sha": "593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "node_id": "C_kwDOANBUbNoAKDU5M2M4YjczZmIxNTY4M2ZkZDFhOWQ4NWZlN2U3ZTk5NTQwZGUzYzg", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2023-02-17T12:48:45Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2023-02-17T12:48:45Z"}, "message": "fixincludes: Bypass solaris_math_12 on newer Solaris 11.4\n\nSolaris 11 <math.h> long had this snippet\n\nwhich badly broke libstdc++.  This has long been undone using\nfixincludes in\n\n\t[fixincludes, v3] Don't define libstdc++-internal macros in Solaris 10+ <math.h>\n\thttps://gcc.gnu.org/ml/gcc-patches/2016-11/msg00330.html\n\nHowever, the issue came up again recently when that code broke the LLVM\nbuild, too, which unfortunately doesn't know about GCC's include-fixed\ndirectory.  The issue was reinvestigated and it turned out that the\nworkaround/hack is only needed for specific old versions of the Sun/Oracle\nStudio compilers.  So <math.h> now looks like\n\n/* Accommodate historical C++11 -std=c++03 behavior of Studio 12.4 and 12.5 */\n    ((__SUNPRO_CC == 0x5130) || (__SUNPRO_CC == 0x5140) ||  \\\n     defined(__MATH_PREEMPTS_GLIBCXX_C99_MATH))\n\nIf this change is in place, there's no longer a need for the fixincludes\nfix, so this patch bypasses it as appropriate.\n\nTested on Solaris 11.3 (without the fixed header) and recent 11.4 (with\nthe fixed header).\n\n2022-11-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tfixincludes:\n\t* inclhack.def (solaris_math_12): Add bypass.\n\t* fixincl.x: Regenerate.", "tree": {"sha": "6cefce0a858e525001822e3a8fcc26e4ab03b3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cefce0a858e525001822e3a8fcc26e4ab03b3e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae2c1d0a9dc33f4c309a589d9f68fcd31206500e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2c1d0a9dc33f4c309a589d9f68fcd31206500e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2c1d0a9dc33f4c309a589d9f68fcd31206500e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "416d2c2e3a4ba5f84e9ec04d8e4fd4b13240cb2d", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  January 18, 2023 at 09:06:47 PM by AutoGen 5.18.7\n+ * It has been AutoGen-ed  January 22, 2023 at 09:03:29 PM by AutoGen 5.18.12\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Jan 18 21:06:47 GMT 2023\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Jan 22 21:03:29 CET 2023\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -8549,8 +8549,15 @@ tSCC* apzSolaris_Math_12Machs[] = {\n tSCC zSolaris_Math_12Select0[] =\n        \"#undef.*_GLIBCXX_USE_C99_MATH\";\n \n-#define    SOLARIS_MATH_12_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSolaris_Math_12Bypass0[] =\n+       \"__MATH_PREEMPTS_GLIBCXX_C99_MATH\";\n+\n+#define    SOLARIS_MATH_12_TEST_CT  2\n static tTestDesc aSolaris_Math_12Tests[] = {\n+  { TT_NEGREP,   zSolaris_Math_12Bypass0, (regex_t*)NULL },\n   { TT_EGREP,    zSolaris_Math_12Select0, (regex_t*)NULL }, };\n \n /*\n@@ -11162,7 +11169,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          312\n+#define REGEX_COUNT          313\n #define MACH_LIST_SIZE_LIMIT 187\n #define FIX_COUNT            274\n "}, {"sha": "45e0cbc0c10b9666ce1e1a901ee4463ea0528d7e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593c8b73fb15683fdd1a9d85fe7e7e99540de3c8/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=593c8b73fb15683fdd1a9d85fe7e7e99540de3c8", "patch": "@@ -4306,6 +4306,7 @@ fix = {\n     files     = math.h;\n     mach      = '*-*-solaris2*';\n     select    = '#undef.*_GLIBCXX_USE_C99_MATH';\n+    bypass    = '__MATH_PREEMPTS_GLIBCXX_C99_MATH';\n     sed       = \"/#undef[ \\t]*_GLIBCXX_USE_C99_MATH/d\";\n     test_text = << _EOText_\n #if __cplusplus >= 201103L"}]}