{"sha": "45ba5426c129993704a73e6ace4016eaa950d7ee", "node_id": "C_kwDOANBUbNoAKDQ1YmE1NDI2YzEyOTk5MzcwNGE3M2U2YWNlNDAxNmVhYTk1MGQ3ZWU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-11T12:28:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-11T19:34:17Z"}, "message": "libstdc++: Fix std::numeric_limits::lowest() test for strict modes\n\nThis test uses std::is_integral to decide whether we are testing an\nintegral or floating-point type. But that fails for __int128 because\nis_integral<__int128> is false in strict modes. By using\nnumeric_limits::is_integer instead we get the right answer for all types\nthat have a numeric_limits specialization.\n\nWe can also simplify the test by removing the unnecessary tag\ndispatching.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/18_support/numeric_limits/lowest.cc: Use\n\tnumeric_limits<T>::is_integer instead of is_integral<T>::value.", "tree": {"sha": "dc32fb822cb6e44d385eac47ab7583671bb03571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc32fb822cb6e44d385eac47ab7583671bb03571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45ba5426c129993704a73e6ace4016eaa950d7ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ba5426c129993704a73e6ace4016eaa950d7ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ba5426c129993704a73e6ace4016eaa950d7ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ba5426c129993704a73e6ace4016eaa950d7ee/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b6788f8c2748060d922cc22173ff7f8500917e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6788f8c2748060d922cc22173ff7f8500917e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6788f8c2748060d922cc22173ff7f8500917e9"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "abc967c60f82417d88f8f018c5ce947b29493c6b", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/lowest.cc", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba5426c129993704a73e6ace4016eaa950d7ee/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba5426c129993704a73e6ace4016eaa950d7ee/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc?ref=45ba5426c129993704a73e6ace4016eaa950d7ee", "patch": "@@ -23,30 +23,20 @@\n // 18.2.1.1 template class numeric_limits\n \n #include <limits>\n-#include <type_traits>\n #include <testsuite_hooks.h>\n \n template<typename T>\n   void\n-  do_test(std::true_type)\n+  do_test()\n   {\n     T limits_min = std::numeric_limits<T>::min();\n-    VERIFY( std::numeric_limits<T>::lowest() == limits_min );\n-  }\n-\n-template<typename T>\n-  void\n-  do_test(std::false_type)\n-  {\n     T limits_max = std::numeric_limits<T>::max();\n-    VERIFY( std::numeric_limits<T>::lowest() == -limits_max );\n+    if (std::numeric_limits<T>::is_integer)\n+      VERIFY( std::numeric_limits<T>::lowest() == limits_min );\n+    else\n+      VERIFY( std::numeric_limits<T>::lowest() == -limits_max );\n   }\n \n-template<typename Tp>\n-  void\n-  do_test()\n-  { do_test<Tp>(typename std::is_integral<Tp>::type()); }\n-\n void test01()\n {\n   do_test<char>();"}]}