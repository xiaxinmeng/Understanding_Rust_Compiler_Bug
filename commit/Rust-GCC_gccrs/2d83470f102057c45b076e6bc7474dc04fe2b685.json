{"sha": "2d83470f102057c45b076e6bc7474dc04fe2b685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4MzQ3MGYxMDIwNTdjNDViMDc2ZTZiYzc0NzRkYzA0ZmUyYjY4NQ==", "commit": {"author": {"name": "Alexander Fomin", "email": "alexander.fomin@intel.com", "date": "2015-10-06T13:49:30Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2015-10-06T13:49:30Z"}, "message": "AVX-512. Avoid upper-bank registers when splitting vec_extract_lo instruction.\n\ngcc/\n\tPR target/67849\n\t* config/i386/sse.md (define_split vec_select/V8FI): Restrict\n\tsplit for upper-bank registers when target does not support\n\tAVX512VL.\n\t(define_insn \"vec_extract_lo_<mode><mask_name>\"): Restrict\n\tsplit when target does not support AVX512VL.\n\nFrom-SVN: r228525", "tree": {"sha": "945fad2c44a68ba416b5bd952c21bbc5c62aca3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/945fad2c44a68ba416b5bd952c21bbc5c62aca3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d83470f102057c45b076e6bc7474dc04fe2b685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d83470f102057c45b076e6bc7474dc04fe2b685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d83470f102057c45b076e6bc7474dc04fe2b685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d83470f102057c45b076e6bc7474dc04fe2b685/comments", "author": null, "committer": null, "parents": [{"sha": "2d546fb73bb1ddeec67162ff7b2bf74f3caf7c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d546fb73bb1ddeec67162ff7b2bf74f3caf7c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d546fb73bb1ddeec67162ff7b2bf74f3caf7c18"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "75de0c94c28c953f15ac8266b49791808e40ddcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d83470f102057c45b076e6bc7474dc04fe2b685/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d83470f102057c45b076e6bc7474dc04fe2b685/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d83470f102057c45b076e6bc7474dc04fe2b685", "patch": "@@ -1,9 +1,18 @@\n+2015-10-06  Alexander Fomin  <alexander.fomin@intel.com>\n+\n+\tPR target/67849\n+\t* config/i386/sse.md (define_split vec_select/V8FI): Restrict\n+\tsplit for upper-bank registers when target does not support\n+\tAVX512VL.\n+\t(define_insn \"vec_extract_lo_<mode><mask_name>\"): Restrict\n+\tsplit when target does not support AVX512VL.\n+\n 2015-10-06  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR c/65345\n \t* config/rs6000/rs6000.c (rs6000_atomic_assign_expand_fenv):\n \tAdjust to use create_tmp_var_raw instead of create_tmp_var.\n-\t\n+\n 2015-10-06  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_rtx_costs): Improve cost estimates for\n@@ -596,6 +605,7 @@\n \treadability.\n \n 2015-10-02  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n \t* config/i386/i386.c (processor_features): Add F_AVX512VBMI,\n \tF_AVX512IFMA.\n \t(isa_names_table): Handle F_AVX512VBMI and F_AVX512IFMA."}, {"sha": "e5680f1939c8b4a9e78a49c8817ed636c48e975f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d83470f102057c45b076e6bc7474dc04fe2b685/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d83470f102057c45b076e6bc7474dc04fe2b685/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2d83470f102057c45b076e6bc7474dc04fe2b685", "patch": "@@ -6926,7 +6926,8 @@\n \t  (parallel [(const_int 0) (const_int 1)\n             (const_int 2) (const_int 3)])))]\n   \"TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))\n-  && reload_completed\"\n+  && reload_completed\n+  && (TARGET_AVX512VL || (REG_P (operands[0]) && !EXT_REX_SSE_REG_P (operands[1])))\"\n   [(const_int 0)]\n {\n   rtx op1 = operands[1];\n@@ -6964,7 +6965,7 @@\n             (const_int 2) (const_int 3)])))]\n   \"TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n-  if (<mask_applied>)\n+  if (<mask_applied> || !TARGET_AVX512VL)\n     return \"vextract<shuffletype>64x4\\t{$0x0, %1, %0<mask_operand2>|%0<mask_operand2>, %1, 0x0}\";\n   else\n     return \"#\";"}]}