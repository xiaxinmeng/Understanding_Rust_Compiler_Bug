{"sha": "46f4f794839998430e405d13d0f1b449f48a13c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmNGY3OTQ4Mzk5OTg0MzBlNDA1ZDEzZDBmMWI0NDlmNDhhMTNjNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-08-28T14:49:15Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-08-28T14:49:15Z"}, "message": "re PR fortran/54384 (gfortran memory leaks)\n\n2012-08-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54384\n        * decl.c (match_data_constant): Add missing gfc_free_expr.\n        (top_val_list): Remove always-true condition.\n        * data.c (get_array_index, create_character_initializer):\n        Free temporary expressions.\n        (gfc_assign_data_value): Free expression when aborting.\n\nFrom-SVN: r190751", "tree": {"sha": "1235ae5b42a3961dbe50871871e9c6c717ed22f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1235ae5b42a3961dbe50871871e9c6c717ed22f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f4f794839998430e405d13d0f1b449f48a13c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f4f794839998430e405d13d0f1b449f48a13c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f4f794839998430e405d13d0f1b449f48a13c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f4f794839998430e405d13d0f1b449f48a13c4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94c15c51f92331fa0084b5eb467e5581f00aebf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c15c51f92331fa0084b5eb467e5581f00aebf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c15c51f92331fa0084b5eb467e5581f00aebf6"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "f9bbf8a167e7b495411692b0fd7969fbd69754fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=46f4f794839998430e405d13d0f1b449f48a13c4", "patch": "@@ -1,3 +1,12 @@\n+2012-08-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* decl.c (match_data_constant): Add missing gfc_free_expr.\n+\t(top_val_list): Remove always-true condition.\n+\t* data.c (get_array_index, create_character_initializer):\n+\tFree temporary expressions.\n+\t(gfc_assign_data_value): Free expression when aborting.\n+\n 2012-08-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54384"}, {"sha": "de8c0ca8f5c9e1612e370282182579431d08dd84", "filename": "gcc/fortran/data.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdata.c?ref=46f4f794839998430e405d13d0f1b449f48a13c4", "patch": "@@ -66,6 +66,7 @@ get_array_index (gfc_array_ref *ar, mpz_t *offset)\n \tgfc_error (\"non-constant array in DATA statement %L\", &ar->where);\n \n       mpz_set (tmp, e->value.integer);\n+      gfc_free_expr (e);\n       mpz_sub (tmp, tmp, ar->as->lower[i]->value.integer);\n       mpz_mul (tmp, tmp, delta);\n       mpz_add (*offset, tmp, *offset);\n@@ -138,8 +139,10 @@ create_character_initializer (gfc_expr *init, gfc_typespec *ts,\n \t}\n \n       gfc_extract_int (start_expr, &start);\n+      gfc_free_expr (start_expr);\n       start--;\n       gfc_extract_int (end_expr, &end);\n+      gfc_free_expr (end_expr);\n     }\n   else\n     {\n@@ -200,7 +203,7 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index,\n {\n   gfc_ref *ref;\n   gfc_expr *init;\n-  gfc_expr *expr;\n+  gfc_expr *expr = NULL;\n   gfc_constructor *con;\n   gfc_constructor *last_con;\n   gfc_symbol *symbol;\n@@ -500,6 +503,8 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index,\n   return SUCCESS;\n \n abort:\n+  if (!init)\n+    gfc_free_expr (expr);\n   mpz_clear (offset);\n   return FAILURE;\n }"}, {"sha": "6f609e9a5a79fe2e67a50de60820ab634f2a880b", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f4f794839998430e405d13d0f1b449f48a13c4/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=46f4f794839998430e405d13d0f1b449f48a13c4", "patch": "@@ -361,6 +361,8 @@ match_data_constant (gfc_expr **result)\n \tm = MATCH_ERROR;\n       return m;\n     }\n+  else if (m == MATCH_YES)\n+    gfc_free_expr (*result);\n \n   gfc_current_locus = old_loc;\n \n@@ -451,8 +453,7 @@ top_val_list (gfc_data *data)\n \t}\n       else\n \t{\n-\t  if (expr->ts.type == BT_INTEGER)\n-\t    mpz_set (tail->repeat, expr->value.integer);\n+\t  mpz_set (tail->repeat, expr->value.integer);\n \t  gfc_free_expr (expr);\n \n \t  m = match_data_constant (&tail->expr);"}]}