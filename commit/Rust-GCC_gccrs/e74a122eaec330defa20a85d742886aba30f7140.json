{"sha": "e74a122eaec330defa20a85d742886aba30f7140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc0YTEyMmVhZWMzMzBkZWZhMjBhODVkNzQyODg2YWJhMzBmNzE0MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-12-10T23:15:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-12-10T23:15:17Z"}, "message": "ada-tree.h (TYPE_RETURNS_BY_TARGET_PTR_P): Move around.\n\n\t* ada-tree.h (TYPE_RETURNS_BY_TARGET_PTR_P): Move around.\n\nFrom-SVN: r130757", "tree": {"sha": "701f283931b939ab61a4523c915efe41bb8809c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701f283931b939ab61a4523c915efe41bb8809c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e74a122eaec330defa20a85d742886aba30f7140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e74a122eaec330defa20a85d742886aba30f7140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e74a122eaec330defa20a85d742886aba30f7140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e74a122eaec330defa20a85d742886aba30f7140/comments", "author": null, "committer": null, "parents": [{"sha": "4f1f33aa8255271e5504ca6a0dcdea0f4f9b0b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1f33aa8255271e5504ca6a0dcdea0f4f9b0b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f1f33aa8255271e5504ca6a0dcdea0f4f9b0b79"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "ecea4acf817d67f4d22c04b9ce04cbab5969d3b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74a122eaec330defa20a85d742886aba30f7140/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74a122eaec330defa20a85d742886aba30f7140/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e74a122eaec330defa20a85d742886aba30f7140", "patch": "@@ -1,3 +1,7 @@\n+2007-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ada-tree.h (TYPE_RETURNS_BY_TARGET_PTR_P): Move around.\n+\n 2007-12-09  Samuel Tardieu  <sam@rfc1149.net>\n \n \tPR ada/34366"}, {"sha": "27f9ef6ab422cd910a53520103ff114ba9c87827", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74a122eaec330defa20a85d742886aba30f7140/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74a122eaec330defa20a85d742886aba30f7140/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=e74a122eaec330defa20a85d742886aba30f7140", "patch": "@@ -136,11 +136,6 @@ struct lang_type GTY(()) {tree t; };\n #define TYPE_RETURNS_BY_REF_P(NODE) \\\n   TYPE_LANG_FLAG_4 (FUNCTION_TYPE_CHECK (NODE))\n \n-/* For FUNCTION_TYPEs, nonzero if function returns by being passed a pointer\n-   to a place to store its result.  */\n-#define TYPE_RETURNS_BY_TARGET_PTR_P(NODE) \\\n-  TYPE_LANG_FLAG_5 (FUNCTION_TYPE_CHECK (NODE))\n-\n /* For VOID_TYPE, ENUMERAL_TYPE, UNION_TYPE, and RECORD_TYPE, nonzero if this\n    is a dummy type, made to correspond to a private or incomplete type.  */\n #define TYPE_DUMMY_P(NODE) TYPE_LANG_FLAG_4 (NODE)\n@@ -151,6 +146,11 @@ struct lang_type GTY(()) {tree t; };\n     || TREE_CODE (NODE) == UNION_TYPE || TREE_CODE (NODE) == ENUMERAL_TYPE) \\\n    && TYPE_DUMMY_P (NODE))\n \n+/* For FUNCTION_TYPEs, nonzero if function returns by being passed a pointer\n+   to a place to store its result.  */\n+#define TYPE_RETURNS_BY_TARGET_PTR_P(NODE) \\\n+  TYPE_LANG_FLAG_5 (FUNCTION_TYPE_CHECK (NODE))\n+\n /* For an INTEGER_TYPE, nonzero if TYPE_ACTUAL_BOUNDS is present.  */\n #define TYPE_HAS_ACTUAL_BOUNDS_P(NODE) \\\n   TYPE_LANG_FLAG_5 (INTEGER_TYPE_CHECK (NODE))"}]}