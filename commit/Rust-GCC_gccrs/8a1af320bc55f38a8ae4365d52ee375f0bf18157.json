{"sha": "8a1af320bc55f38a8ae4365d52ee375f0bf18157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExYWYzMjBiYzU1ZjM4YThhZTQzNjVkNTJlZTM3NWYwYmYxODE1Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-11-23T23:37:45Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-11-23T23:37:45Z"}, "message": "Add the missing file\n\nFrom-SVN: r193771", "tree": {"sha": "513e4ebc49cfd3129251fff0255c85ab5b4fc9bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513e4ebc49cfd3129251fff0255c85ab5b4fc9bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a1af320bc55f38a8ae4365d52ee375f0bf18157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1af320bc55f38a8ae4365d52ee375f0bf18157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1af320bc55f38a8ae4365d52ee375f0bf18157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1af320bc55f38a8ae4365d52ee375f0bf18157/comments", "author": null, "committer": null, "parents": [{"sha": "05abb346d6b987349780c79e45530d88fcebccf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05abb346d6b987349780c79e45530d88fcebccf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05abb346d6b987349780c79e45530d88fcebccf4"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "9d06fa7be570c1b517fdefe37408463bc7dd2e3b", "filename": "libquadmath/quadmath-rounding-mode.h", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1af320bc55f38a8ae4365d52ee375f0bf18157/libquadmath%2Fquadmath-rounding-mode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1af320bc55f38a8ae4365d52ee375f0bf18157/libquadmath%2Fquadmath-rounding-mode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fquadmath-rounding-mode.h?ref=8a1af320bc55f38a8ae4365d52ee375f0bf18157", "patch": "@@ -0,0 +1,74 @@\n+/* GCC Quad-Precision Math Library\n+   Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+This file is part of the libquadmath library.\n+Libquadmath is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+Libquadmath is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with libquadmath; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+\n+#ifndef QUADMATH_ROUNDING_MODE_H\n+#define QUADMATH_ROUNDING_MODE_H\n+\n+#include <stdbool.h>\n+\n+\n+#if defined(HAVE_FENV_H)\n+#  include <fenv.h>\n+#endif /* HAVE_FENV_H */\n+\n+static inline int\n+get_rounding_mode (void)\n+{\n+#if defined(HAVE_FENV_H) && (defined(FE_DOWNWARD) || defined(FE_TONEAREST) \\\n+\t\t\t     || defined(FE_TOWARDZERO) || defined(FE_UPWARD))\n+  return fegetround (void);\n+#else\n+  return 0;\n+#endif\n+}\n+\n+static inline bool\n+round_away (bool negative, bool last_digit_odd, bool half_bit, bool more_bits,\n+            int mode)\n+{\n+  switch (mode)\n+    {\n+#ifdef FE_DOWNWARD\n+    case FE_DOWNWARD:\n+      return negative && (half_bit || more_bits);\n+#endif\n+\n+#ifdef FE_DOWNWARD\n+    case FE_TONEAREST:\n+      return half_bit && (last_digit_odd || more_bits);\n+#endif\n+\n+#ifdef FE_TOWARDZERO\n+    case FE_TOWARDZERO:\n+      return false;\n+#endif\n+\n+\n+#ifdef FE_UPWARD\n+    case FE_UPWARD:\n+      return !negative && (half_bit || more_bits);\n+#endif\n+\n+    default:\n+      return false;\n+    }\n+}\n+\n+#endif /* QUADMATH_ROUNDING_MODE_H  */"}]}