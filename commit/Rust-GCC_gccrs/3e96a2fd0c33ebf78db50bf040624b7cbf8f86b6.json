{"sha": "3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U5NmEyZmQwYzMzZWJmNzhkYjUwYmYwNDA2MjRiN2NiZjhmODZiNg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-10-08T19:44:53Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-10-08T19:44:53Z"}, "message": "c-decl.c (grokfield): Make sure the only unnamed fields we're allowing are either structs or unions.\n\n* c-decl.c (grokfield): Make sure the only unnamed fields\nwe're allowing are either structs or unions.\n* doc/extend.texi: Add documentation for the unnamed field\nextension.\n\nFrom-SVN: r46088", "tree": {"sha": "57957d9b9f531e9eefc55ddc7c9826a3fc7e0004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57957d9b9f531e9eefc55ddc7c9826a3fc7e0004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/comments", "author": null, "committer": null, "parents": [{"sha": "1dde5a4edc74e724f3881ad730a7db116e34ecc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dde5a4edc74e724f3881ad730a7db116e34ecc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dde5a4edc74e724f3881ad730a7db116e34ecc4"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "4387656675d8cc853d7034308b15d2effc5b9da1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "patch": "@@ -1,3 +1,10 @@\n+2001-10-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* c-decl.c (grokfield): Make sure the only unnamed fields\n+\twe're allowing are either structs or unions.\n+\t* doc/extend.texi: Add documentation for the unnamed field\n+\textension.\n+\n 2001-10-08  Zack Weinberg  <zack@codesourcery.com>\n \n \t* aclocal.m4 (gcc_AC_PROG_GNAT): New."}, {"sha": "d167ddfd4c9af1f35477a850d9e4f6185ff37c3e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "patch": "@@ -5392,6 +5392,18 @@ grokfield (filename, line, declarator, declspecs, width)\n {\n   tree value;\n \n+  if (declarator == NULL_TREE && width == NULL_TREE)\n+    {\n+      /* This is an unnamed decl.  We only support unnamed\n+\t structs/unions, so check for other things and refuse them.  */\n+      if (TREE_CODE (TREE_VALUE (declspecs)) != RECORD_TYPE\n+\t  && TREE_CODE (TREE_VALUE (declspecs)) != UNION_TYPE)\n+\t{\n+\t  error (\"unnamed fields of type other than struct or union are not allowed\");\n+\t  return NULL_TREE;\n+\t}\n+    }\n+\n   value = grokdeclarator (declarator, declspecs, width ? BITFIELD : FIELD, 0);\n \n   finish_decl (value, NULL_TREE, NULL_TREE);"}, {"sha": "be659203b152b18f90f071300250a963cc9fc217", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3e96a2fd0c33ebf78db50bf040624b7cbf8f86b6", "patch": "@@ -433,6 +433,7 @@ extensions, accepted by GCC in C89 mode and in C++.\n * Vector Extensions::   Using vector instructions through built-in functions.\n * Other Builtins::      Other built-in functions.\n * Pragmas::             Pragmas accepted by GCC.\n+* Unnamed Fields::      Unnamed struct/union fields within structs/unions.\n @end menu\n @end ifset\n @ifclear INTERNALS\n@@ -4503,6 +4504,47 @@ that of the @code{unused} attribute, except that this pragma may appear\n anywhere within the variables' scopes.\n @end table\n \n+@node Unnamed Fields\n+@section Unnamed struct/union fields within structs/unions.\n+@cindex struct\n+@cindex union\n+\n+For compatibility with other compilers, GCC allows you to define\n+a structure or union that contains, as fields, structures and unions\n+without names.  For example:\n+\n+@example\n+struct @{\n+  int a;\n+  union @{\n+    int b;\n+    float c;\n+  @};\n+  int d;\n+@} foo;\n+@end example\n+\n+In this example, the user would be able to access members of the unnamed\n+union with code like @samp{foo.b}.  Note that only unnamed structs and\n+unions are allowed, you may not have, for example, an unnamed\n+@code{int}.\n+\n+You must never create such structures that cause ambiguous field definitions.\n+For example, this structure:\n+\n+@example\n+struct @{\n+  int a;\n+  struct @{\n+    int a;\n+  @};\n+@} foo;\n+@end example\n+\n+It is ambiguous which @code{a} is being referred to with @samp{foo.a}.\n+Such constructs are not supported and must be avoided.  In the future,\n+such constructs may be detected and treated as compilation errors.\n+\n @node C++ Extensions\n @chapter Extensions to the C++ Language\n @cindex extensions, C++ language"}]}