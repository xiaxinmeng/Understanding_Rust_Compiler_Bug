{"sha": "3810ff24db44fde0629e0fc1e6449a219aef94fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgxMGZmMjRkYjQ0ZmRlMDYyOWUwZmMxZTY0NDlhMjE5YWVmOTRmYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-02T09:47:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-02T09:47:43Z"}, "message": "re PR tree-optimization/68625 (Segmentation fault in useless_type_conversion_p)\n\n2015-12-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68625\n\t* tree-cfgcleanup.c (cleanup_tree_cfg_bb): Do not call\n\tcleanup_control_flow_bb.\n\t(cleanup_tree_cfg_1): First perform cleanup_control_flow_bb\n\ton all BBs, then cleanup_tree_cfg_bb and finally iterate\n\tover the worklist doing both.\n\n\t* gcc.dg/torture/pr68625.c: New testcase.\n\nFrom-SVN: r231162", "tree": {"sha": "fa4021b1bfa7ec0b0f842b78c7121c7b80618428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4021b1bfa7ec0b0f842b78c7121c7b80618428"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3810ff24db44fde0629e0fc1e6449a219aef94fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3810ff24db44fde0629e0fc1e6449a219aef94fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3810ff24db44fde0629e0fc1e6449a219aef94fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3810ff24db44fde0629e0fc1e6449a219aef94fb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d95ab70a3cab2998b4671d842e1ad769e75f19a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95ab70a3cab2998b4671d842e1ad769e75f19a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95ab70a3cab2998b4671d842e1ad769e75f19a3"}], "stats": {"total": 90, "additions": 86, "deletions": 4}, "files": [{"sha": "8eaac80b47d78aa371bb6122689412f6c35317e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3810ff24db44fde0629e0fc1e6449a219aef94fb", "patch": "@@ -1,3 +1,12 @@\n+2015-12-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68625\n+\t* tree-cfgcleanup.c (cleanup_tree_cfg_bb): Do not call\n+\tcleanup_control_flow_bb.\n+\t(cleanup_tree_cfg_1): First perform cleanup_control_flow_bb\n+\ton all BBs, then cleanup_tree_cfg_bb and finally iterate\n+\tover the worklist doing both.\n+\n 2015-12-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/68432"}, {"sha": "81fcff16945486fdbbb0eb62cf3d7401dc82702c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3810ff24db44fde0629e0fc1e6449a219aef94fb", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68625\n+\t* gcc.dg/torture/pr68625.c: New testcase.\n+\n 2015-12-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/i386/pr68432-1.c: New test."}, {"sha": "47f837a24185906f2e4d1530dad0593f89a85be5", "filename": "gcc/testsuite/gcc.dg/torture/pr68625.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68625.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68625.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68625.c?ref=3810ff24db44fde0629e0fc1e6449a219aef94fb", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-w\" } */\n+\n+int **dp;\n+int sg;\n+\n+void\n+z9(void)\n+{\n+  int pz, oi, vz, yp, zi, hd, pw, gr, w9 = 0, j0 = -1, rb = &w9;\n+  int *lr;\n+  while (w9 < 1) {\n+      lr++;\n+      *lr = 1;\n+      if (*lr < 1)\n+\tfor (;;)\n+\t  if (pz && *lr) {\n+ee:\n+\t      **dp = 0;\n+\t  }\n+      pz = zi = vz;\n+      if (j0 ^ (vz > 0))\n+\tcontinue;\n+      **dp = 1;\n+      while (**dp)\n+\tif (++oi) {\n+\t    int mq = dp;\n+\t    j0 = 1;\n+\t    while (pw < 1) {\n+\t\tif (++rb && mq)\n+\t\t  xq:\n+\t\t      hd = sg;\n+\t\t++pw;\n+\t    }\n+\t    sg = 0;\n+\t    while (!sg) {\n+\t\tgoto ee;\n+\t\twhile (++yp && gr++) {\n+\t\t    int i9, xa;\n+\t\t    while (++i9 && ++xa)\n+\t\t      fb:\n+\t\t\t  ;\n+\t\t}\n+\t    }\n+\t}\n+  }\n+  ++vz;\n+  if (zi > hd)\n+    goto xq;\n+  goto fb;\n+}"}, {"sha": "40ad5ca33cd4d3867e646c31bc04942ef9b9b1ed", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3810ff24db44fde0629e0fc1e6449a219aef94fb/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=3810ff24db44fde0629e0fc1e6449a219aef94fb", "patch": "@@ -614,8 +614,6 @@ fixup_noreturn_call (gimple *stmt)\n static bool\n cleanup_tree_cfg_bb (basic_block bb)\n {\n-  bool retval = cleanup_control_flow_bb (bb);\n-\n   if (tree_forwarder_block_p (bb, false)\n       && remove_forwarder_block (bb))\n     return true;\n@@ -640,7 +638,7 @@ cleanup_tree_cfg_bb (basic_block bb)\n \t}\n     }\n \n-  return retval;\n+  return false;\n }\n \n /* Iterate the cfg cleanups, while anything changes.  */\n@@ -660,8 +658,26 @@ cleanup_tree_cfg_1 (void)\n      recording of edge to CASE_LABEL_EXPR.  */\n   start_recording_case_labels ();\n \n-  /* Start by iterating over all basic blocks.  We cannot use FOR_EACH_BB_FN,\n+  /* We cannot use FOR_EACH_BB_FN for the BB iterations below\n      since the basic blocks may get removed.  */\n+\n+  /* Start by iterating over all basic blocks looking for edge removal\n+     opportunities.  Do this first because incoming SSA form may be\n+     invalid and we want to avoid performing SSA related tasks such\n+     as propgating out a PHI node during BB merging in that state.  */\n+  n = last_basic_block_for_fn (cfun);\n+  for (i = NUM_FIXED_BLOCKS; i < n; i++)\n+    {\n+      bb = BASIC_BLOCK_FOR_FN (cfun, i);\n+      if (bb)\n+\tretval |= cleanup_control_flow_bb (bb);\n+    }\n+\n+  /* After doing the above SSA form should be valid (or an update SSA\n+     should be required).  */\n+\n+  /* Continue by iterating over all basic blocks looking for BB merging\n+     opportunities.  */\n   n = last_basic_block_for_fn (cfun);\n   for (i = NUM_FIXED_BLOCKS; i < n; i++)\n     {\n@@ -682,6 +698,7 @@ cleanup_tree_cfg_1 (void)\n       if (!bb)\n \tcontinue;\n \n+      retval |= cleanup_control_flow_bb (bb);\n       retval |= cleanup_tree_cfg_bb (bb);\n     }\n "}]}