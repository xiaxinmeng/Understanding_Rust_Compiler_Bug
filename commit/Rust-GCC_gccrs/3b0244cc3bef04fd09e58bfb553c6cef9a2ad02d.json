{"sha": "3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IwMjQ0Y2MzYmVmMDRmZDA5ZTU4YmZiNTUzYzZjZWY5YTJhZDAyZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-05-22T21:25:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-05-22T21:25:26Z"}, "message": "pa.md (non-canonical shift-add insns): Remove.\n\n\t* config/pa/pa.md (non-canonical shift-add insns): Remove.\n\t(peepholes with non-canonical RTL sources): Remove.\n\t(peepholes for indexed stores of FP regs in integer modes): Match and\n\tgenerate canonical RTL.\n\nFrom-SVN: r223592", "tree": {"sha": "3753e987bd0a88144bffc7ad93970b67c930b56c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3753e987bd0a88144bffc7ad93970b67c930b56c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d/comments", "author": null, "committer": null, "parents": [{"sha": "257b01ba3e72667536024aab8f2d3f506b2117e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257b01ba3e72667536024aab8f2d3f506b2117e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257b01ba3e72667536024aab8f2d3f506b2117e3"}], "stats": {"total": 173, "additions": 36, "deletions": 137}, "files": [{"sha": "9d5d04d5ddab06903eeec51b6662a214bacc7684", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "patch": "@@ -1,3 +1,10 @@\n+2015-05-22  Jeff Law  <law@redhat.com>\n+\n+\t* config/pa/pa.md (non-canonical shift-add insns): Remove.\n+\t(peepholes with non-canonical RTL sources): Remove.\n+\t(peepholes for indexed stores of FP regs in integer modes): Match and\n+\tgenerate canonical RTL.\n+\n 2015-05-22  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/63387\n@@ -26,8 +33,8 @@\n \t* combine.c (try_combine): Canonicalize (plus (mult X pow2) Y) into\n \t(plus (ashift X log2) Y) if it is a split point.\n \n-\t* pa.c (mem_shadd_or_shadd_rtx_p): New function factored out\n-\tof hppa_legitimize_address to handle both forms of a multiply\n+\t* config/pa/pa.c (mem_shadd_or_shadd_rtx_p): New function factoredx\n+\tout of hppa_legitimize_address to handle both forms of a multiply\n \tby 2, 4 or 8.\n \t(hppa_legitimize_address): Use mem_shadd_or_shadd_rtx_p. \n \tAlways generate the ASHIFT variant as the result is not directly"}, {"sha": "2686f383e9d4748ecf162f384237ac8db788b70a", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 27, "deletions": 135, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=3b0244cc3bef04fd09e58bfb553c6cef9a2ad02d", "patch": "@@ -2270,8 +2270,8 @@\n ; computes the address to be deleted if the register it sets is dead.\n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))\n+\t(plus:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 2))\n \t\t (match_operand:SI 2 \"register_operand\" \"\")))\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n@@ -2281,31 +2281,14 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 4))\n-\t\t\t       (match_dup 2)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (match_operand:SI 2 \"register_operand\" \"\")\n-\t\t (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))))\n-   (set (mem:SI (match_dup 0))\n-        (match_operand:SI 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SOFT_FLOAT\n-   && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && FP_REGNO_P (REGNO (operands[3]))\"\n-  [(set (mem:SI (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n-\t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 4))\n+   (set (match_dup 0) (plus:SI (ashift:SI (match_dup 1) (const_int 2))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n (define_peephole2\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))\n+\t(plus:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 2))\n \t\t (match_operand:DI 2 \"register_operand\" \"\")))\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n@@ -2316,25 +2299,7 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:DI (mult:DI (match_dup 1) (const_int 4)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 4))\n-\t\t\t       (match_dup 2)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (match_operand:DI 2 \"register_operand\" \"\")\n-\t\t (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))))\n-   (set (mem:SI (match_dup 0))\n-        (match_operand:SI 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SOFT_FLOAT\n-   && !TARGET_DISABLE_INDEXING\n-   && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && FP_REGNO_P (REGNO (operands[3]))\"\n-  [(set (mem:SI (plus:DI (mult:DI (match_dup 1) (const_int 4)) (match_dup 2)))\n-\t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 4))\n+   (set (match_dup 0) (plus:DI (ashift:DI (match_dup 1) (const_int 2))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n@@ -3896,8 +3861,8 @@\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))\n+\t(plus:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 3))\n \t\t (match_operand:SI 2 \"register_operand\" \"\")))\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n@@ -3907,15 +3872,15 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (mult:SI (match_dup 1) (const_int 8)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 8))\n+   (set (match_dup 0) (plus:SI (ashift:SI (match_dup 1) (const_int 3))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(plus:SI (match_operand:SI 2 \"register_operand\" \"\")\n-\t\t (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))))\n+\t\t (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 3))))\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n@@ -3924,14 +3889,14 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (mult:SI (match_dup 1) (const_int 8)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 8))\n+   (set (match_dup 0) (plus:SI (ashift:SI (match_dup 1) (const_int 3))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n (define_peephole2\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))\n+\t(plus:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 3))\n \t\t (match_operand:DI 2 \"register_operand\" \"\")))\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n@@ -3942,15 +3907,15 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:DI (mult:DI (match_dup 1) (const_int 8)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 8))\n+   (set (match_dup 0) (plus:DI (ashift:DI (match_dup 1) (const_int 3))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n (define_peephole2\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(plus:DI (match_operand:DI 2 \"register_operand\" \"\")\n-\t\t (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))))\n+\t\t (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 3))))\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n@@ -3960,7 +3925,7 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:DI (mult:DI (match_dup 1) (const_int 8)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 8))\n+   (set (match_dup 0) (plus:DI (ashift:DI (match_dup 1) (const_int 3))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n@@ -4244,8 +4209,8 @@\n \n (define_peephole2\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))\n+\t(plus:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 3))\n \t\t (match_operand:DI 2 \"register_operand\" \"\")))\n    (set (mem:DI (match_dup 0))\n         (match_operand:DI 3 \"register_operand\" \"\"))]\n@@ -4256,25 +4221,7 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DI (plus:DI (mult:DI (match_dup 1) (const_int 8)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 8))\n-\t\t\t       (match_dup 2)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (match_operand:DI 2 \"register_operand\" \"\")\n-\t\t (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 8))))\n-   (set (mem:DI (match_dup 0))\n-        (match_operand:DI 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SOFT_FLOAT\n-   && !TARGET_DISABLE_INDEXING\n-   && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && FP_REGNO_P (REGNO (operands[3]))\"\n-  [(set (mem:DI (plus:DI (mult:DI (match_dup 1) (const_int 8)) (match_dup 2)))\n-\t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 8))\n+   (set (match_dup 0) (plus:DI (ashift:DI (match_dup 1) (const_int 3))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n@@ -4466,8 +4413,8 @@\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))\n+\t(plus:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 2))\n \t\t (match_operand:SI 2 \"register_operand\" \"\")))\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n@@ -4477,31 +4424,14 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 4))\n-\t\t\t       (match_dup 2)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (match_operand:SI 2 \"register_operand\" \"\")\n-\t\t (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))))\n-   (set (mem:SF (match_dup 0))\n-        (match_operand:SF 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SOFT_FLOAT\n-   && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && FP_REGNO_P (REGNO (operands[3]))\"\n-  [(set (mem:SF (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n-\t(match_dup 3))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 1) (const_int 4))\n+   (set (match_dup 0) (plus:SI (ashift:SI (match_dup 1) (const_int 2))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n (define_peephole2\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))\n+\t(plus:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 2))\n \t\t (match_operand:DI 2 \"register_operand\" \"\")))\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n@@ -4512,25 +4442,7 @@\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:DI (mult:DI (match_dup 1) (const_int 4)) (match_dup 2)))\n \t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 4))\n-\t\t\t       (match_dup 2)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (match_operand:DI 2 \"register_operand\" \"\")\n-\t\t (mult:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (const_int 4))))\n-   (set (mem:SF (match_dup 0))\n-        (match_operand:SF 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SOFT_FLOAT\n-   && !TARGET_DISABLE_INDEXING\n-   && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && FP_REGNO_P (REGNO (operands[3]))\"\n-  [(set (mem:SF (plus:DI (mult:DI (match_dup 1) (const_int 4)) (match_dup 2)))\n-\t(match_dup 3))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 1) (const_int 4))\n+   (set (match_dup 0) (plus:DI (ashift:DI (match_dup 1) (const_int 2))\n \t\t\t       (match_dup 2)))]\n   \"\")\n \n@@ -6346,26 +6258,6 @@\n   [(set_attr \"type\" \"load\")\n    (set_attr \"length\" \"4\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:SI 3 \"mem_shadd_operand\" \"\"))\n-\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n-  \"\"\n-  \"{sh%O3addl %2,%1,%0|shladd,l %2,%O3,%1,%0} \"\n-  [(set_attr \"type\" \"binary\")\n-   (set_attr \"length\" \"4\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:DI (mult:DI (match_operand:DI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:DI 3 \"mem_shadd_operand\" \"\"))\n-\t\t (match_operand:DI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_64BIT\"\n-  \"shladd,l %2,%O3,%1,%0\"\n-  [(set_attr \"type\" \"binary\")\n-   (set_attr \"length\" \"4\")])\n-\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (ashift:SI (match_operand:SI 2 \"register_operand\" \"r\")"}]}