{"sha": "688d126b69215db29774c249b052e52d765782b3", "node_id": "C_kwDOANBUbNoAKDY4OGQxMjZiNjkyMTVkYjI5Nzc0YzI0OWIwNTJlNTJkNzY1NzgyYjM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-04-04T11:04:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-04-04T11:15:59Z"}, "message": "libstdc++: Fix outdated docs about demangling exception messages\n\nThe string returned by std::bad_exception::what() hasn't been a mangled\nname since PR libstdc++/14493 was fixed for GCC 4.2.0, so remove the\ndocs showing how to demangle it.\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/extensions.xml: Remove std::bad_exception from\n\texample program.\n\t* doc/html/manual/ext_demangling.html: Regenerate.", "tree": {"sha": "a9772a5b99587e8adb166afaf5c988dc92e7a930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9772a5b99587e8adb166afaf5c988dc92e7a930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688d126b69215db29774c249b052e52d765782b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688d126b69215db29774c249b052e52d765782b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688d126b69215db29774c249b052e52d765782b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688d126b69215db29774c249b052e52d765782b3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34574064412eca1af8494d240e3627c02ecaf823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34574064412eca1af8494d240e3627c02ecaf823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34574064412eca1af8494d240e3627c02ecaf823"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "028ec71d8c818946ebb43ddfc2c3f67deb1e4808", "filename": "libstdc++-v3/doc/html/manual/ext_demangling.html", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688d126b69215db29774c249b052e52d765782b3/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688d126b69215db29774c249b052e52d765782b3/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html?ref=688d126b69215db29774c249b052e52d765782b3", "patch": "@@ -39,14 +39,6 @@\n   int     status;\n   char   *realname;\n \n-  // exception classes not in &lt;stdexcept&gt;, thrown by the implementation\n-  // instead of the user\n-  std::bad_exception  e;\n-  realname = abi::__cxa_demangle(e.what(), 0, 0, &amp;status);\n-  std::cout &lt;&lt; e.what() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n-  free(realname);\n-\n-\n   // typeid\n   bar&lt;empty,17&gt;          u;\n   const std::type_info  &amp;ti = typeid(u);\n@@ -61,13 +53,12 @@\n      This prints\n    </p><pre class=\"screen\">\n    <code class=\"computeroutput\">\n-      St13bad_exception       =&gt; std::bad_exception   : 0\n       3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0\n    </code>\n    </pre><p>\n      The demangler interface is described in the source documentation\n      linked to above.  It is actually written in C, so you don't need to\n      be writing C++ in order to demangle C++.  (That also means we have to\n-     use crummy memory management facilities, so don't forget to free()\n-     the returned char array.)\n+     use crummy memory management facilities, so don't forget to\n+     <code class=\"code\">free()</code> the returned char array.)\n    </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a027.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a029.\u00a0Concurrency</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "196b55d83479196bd5361037482b480cdd3c5ce4", "filename": "libstdc++-v3/doc/xml/manual/extensions.xml", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688d126b69215db29774c249b052e52d765782b3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688d126b69215db29774c249b052e52d765782b3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml?ref=688d126b69215db29774c249b052e52d765782b3", "patch": "@@ -534,14 +534,6 @@ int main()\n   int     status;\n   char   *realname;\n \n-  // exception classes not in &lt;stdexcept&gt;, thrown by the implementation\n-  // instead of the user\n-  std::bad_exception  e;\n-  realname = abi::__cxa_demangle(e.what(), 0, 0, &amp;status);\n-  std::cout &lt;&lt; e.what() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n-  free(realname);\n-\n-\n   // typeid\n   bar&lt;empty,17&gt;          u;\n   const std::type_info  &amp;ti = typeid(u);\n@@ -559,7 +551,6 @@ int main()\n \n    <screen>\n    <computeroutput>\n-      St13bad_exception       =&gt; std::bad_exception   : 0\n       3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0\n    </computeroutput>\n    </screen>\n@@ -568,8 +559,8 @@ int main()\n      The demangler interface is described in the source documentation\n      linked to above.  It is actually written in C, so you don't need to\n      be writing C++ in order to demangle C++.  (That also means we have to\n-     use crummy memory management facilities, so don't forget to free()\n-     the returned char array.)\n+     use crummy memory management facilities, so don't forget to\n+     <code>free()</code> the returned char array.)\n    </para>\n </chapter>\n "}]}