{"sha": "2fe3178b6953ab8c88c75ca321645eaef1523594", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlMzE3OGI2OTUzYWI4Yzg4Yzc1Y2EzMjE2NDVlYWVmMTUyMzU5NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2008-03-25T16:56:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2008-03-25T16:56:50Z"}, "message": "x-solaris (host-solaris.o): Update.\n\ngcc\n\t* config/x-solaris (host-solaris.o): Update.\n\t* config/x-linux (host-linux.o): Update.\n\t* config/x-hpux (host-hpux.o): Update.\n\t* config/x-darwin (host-darwin.o): Update.\n\t* config/v850/t-v850e (v850-c.o): Update.\n\t* config/v850/t-v850 (v850-c.o): Update.\n\t* config/t-vxworks (vxworks.o): Update.\n\t* config/t-sol2 (sol2-c.o, sol2.o): Update.\n\t* config/t-darwin (darwin.o, darwin-c.o, darwin-driver.o):\n\tUpdate.\n\t* config/spu/t-spu-elf (spu-c.o): Update.\n\t(spu.o): Remove.\n\t* config/sh/t-symbian (sh-c.o): Update.\n\t(symbian.o): Update.\n\t* config/sh/t-sh (sh-c.o): Update.\n\t* config/score/t-score-elf (score7.o, score3.o): Update.\n\t* config/rs6000/x-rs6000 (driver-rs6000.o): Update.\n\t* config/rs6000/x-darwin64 (host-ppc64-darwin.o): Update.\n\t* config/rs6000/x-darwin (host-ppc-darwin.o): Update.\n\t* config/rs6000/t-rs6000 (rs6000-c.o): Update.\n\t(rs6000.o): Remove.\n\t* config/m68k/t-uclinux (generated_files): Add sysroot-suffix.h.\n\t* config/m32c/t-m32c (m32c-pragma.o): Update.\n\t* config/ia64/t-ia64 (ia64-c.o): Update.\n\t* config/i386/x-mingw32 (host-mingw32.o): Update.\n\t* config/i386/x-i386 (driver-i386.o): Update.\n\t* config/i386/x-darwin (host-i386-darwin.o): Update.\n\t* config/i386/x-cygwin (host-cygwin.o): Update.\n\t* config/i386/t-nwld (nwld.o): Update.\n\t* config/i386/t-netware (netware.o): Update.\n\t* config/i386/t-interix (winnt.o): Update.\n\t* config/i386/t-cygwin (cygwin1.o, cygwin2.o): Update.\n\t* config/i386/t-cygming (winnt.o, winnt-cxx.o, winnt-stubs.o,\n\tmsformat-c.o): Update.\n\t* config/bfin/t-bfin-linux (generated_files): Add\n\tlinux-sysroot-suffix.h.\n\t* config/arm/t-wince-pe (pe.o): Update.\n\t* config/arm/t-strongarm-pe (pe.o): Update.\n\t* config/arm/t-pe (pe.o): Update.\n\t* config/arm/t-arm (arm-c.o): Update.\n\t* doc/install.texi (Prerequisites): Require make 3.80.\n\t* Makefile.in: Remove .o targets.\n\t(CCDEPMODE, DEPDIR, depcomp, BUILD_DEPMODE): New variables.\n\t(OBSTACK_H, FIBHEAP_H, PARTITION_H, MD5_H, BCONFIG_H): Remove.\n\t(simple_generated_h, simple_generated_c): Move earlier.\n\t(generated_files): New variable.\n\t(TARGET_H, MACHMODE_H, HOOKS_H, HOSTHOOKS_DEF_H, LANGHOOKS_DEF_H,\n\tTARGET_DEF_H, RTL_BASE_H, RTL_H, PARAMS_H, BUILTINS_DEF, TREE_H,\n\tBASIC_BLOCK_H, GCOV_IO_H, COVERAGE_H, DEMANGLE_H, RECOG_H,\n\tALIAS_H, EMIT_RTL_H, FLAGS_H, FUNCTION_H, EXPR_H, OPTABS_H,\n\tREGS_H, RA_H, RESOURCE_H, SCHED_INT_H, INTEGRATE_H, CFGLAYOUT_H,\n\tCFGLOOP_H, IPA_UTILS_H, IPA_REFERENCE_H, IPA_TYPE_ESCAPE_H,\n\tCGRAPH_H, DF_H, RESOURCE_H, DDG_H, GCC_H, GGC_H, TIMEVAR_H,\n\tINSN_ATTR_H, C_COMMON_H, C_PRAGMA_H, C_TREE_H, SYSTEM_H,\n\tPREDICT_H, DECNUM_H, MKDEPS_H, SYMTAB_H, TREE_DUMP_H,\n\tTREE_GIMPLE_H, TREE_FLOW_H, TREE_SSA_LIVE_H, PRETTY_PRINT_H,\n\tDIAGNOSTIC_H, C_PRETTY_PRINT_H, SCEV_H, LAMBDA_H, TREE_DATA_REF_H,\n\tVARRAY_H, TREE_INLINE_H, REAL_H, DBGCNT_H, EBIMAP_H): Remove.\n\t(.c.o): Remove.\n\t(COMPILE.base, COMPILE): New variables.\n\t(%.o): New pattern rule.\n\t(ALL_HOST_OBJS): New variable.\n\t(xgcc$(exeext), cpp$(exeext)): Remove extra version.o.\n\t(dummy-checksum.o, cc1-checksum.o): Remove.\n\t(DRIVER_SHLIB): New variable.\n\t(DRIVER_DEFINES): Use it.\n\t(gencondmd.c): Move out of build/.\n\t(s-conditions): Update.\n\t(BUILDCOMPILE.base, BUILDCOMPILE): New variables.\n\t(ALL_BUILD_OBJS): Likewise.\n\t(build/%.o): Use BUILDCOMPILE.\n\t(build/ggc-none.o, build/ggc-none.o, build/min-insn-modes.o,\n\tbuild/print-rtl.o, build/read-rtl.o, build/rtl.o, build/vec.o,\n\tbuild/gencondmd.o, build/genattrtab.o, build/genautomata.o,\n\tbuild/gencheck.o, build/gencodes.o, build/genconditions.o,\n\tbuild/genconfig.o, build/genconstants.o, build/genemit.o,\n\tbuild/genextract.o, build/genflags.o, build/genmddeps.o,\n\tbuild/genopinit.o, build/genoutput.o, build/genpeep.o,\n\tbuild/genpreds.o, build/genrecog.o, build/gcov-iov.o,\n\tbuild/gen-protos.o, build/scan.o, build/fix-header.o,\n\tbuild/scan-decls.o): Simplify.\n\t(collect2.o, c-opts.o, gcc.o, gccspec.o, gcc-options.o,\n\tcppdefault.o, protoize.o, unprotoize.o, intl.o, version.o,\n\tprefix.o, toplev.o): Reduce to variable setting.\n\t(libbackend.o): Use COMPILE.  Remove most dependencies.  Move\n\tlater.\n\t($(out_object_file), gcc-options.o): New targets.\n\t($(ALL_HOST_OBJS)): New target.\n\tInclude dependency files.\n\t* configure: Rebuilt.\n\t* configure.ac: Call ZW_CREATE_DEPDIR,\n\tZW_PROG_COMPILER_DEPENDENCIES.\n\t* doc/sourcebuild.texi (Front End Directory): Document new\n\tvariable.\ngcc/java\n\t* Make-lang.in: Removed most explicit .o targets.\n\t(java/jvspec.o): Reduce to variable setting.  Moved to java/.\n\t($(GCJ)$(exeext)): Update.\n\t(JAVA_OBJS): New variable.\n\t(JCFDUMP_OBJS): Reformat.\n\t(java_OBJS): New variable.\n\t(java/jvspec.o-warn): Update.\n\t(java/parse.o-warn): Remove.\n\t(JAVA_TREE_H): Remove.\n\t(java/jcf-io.o): Reduce to variable setting.\n\t(ALL_CPPFLAGS): Likewise.\ngcc/objc\n\t* Make-lang.in (objc_OBJS): New variable.\n\t(cc1obj-checksum.o, objc/objc-lang.o, objc/objc-act.o): Remove.\ngcc/objcp\n\t* Make-lang.in (objcp_OBJS): New variable.\n\t(cc1objplus-checksum.o, objcp/objcp-lang.o, objcp/objcp-decl.o,\n\tobjcp/objcp-act.o): Remove.\ngcc/cp\n\t* Make-lang.in: Remove .o targets.\n\t(cp/g++spec.o): Moved to cp/.  Reduce to variable setting.\n\t(GXX_OBJS): Update.\n\t(c++_OBJS): New variable.\n\t(CXX_TREE_H, CXX_PRETTY_PRINT_H): Remove.\ngcc/fortran\n\t* Make-lang.in: Remove .o targets.\n\t(fortran_OBJS): New variable.\n\t(fortran/gfortranspec.o): Move to fortran/.  Reduce to variable\n\tsetting.\n\t(GFORTRAN_D_OBJS): Update.\n\t(GFORTRAN_TRANS_DEPS): Remove.\n\nFrom-SVN: r133523", "tree": {"sha": "1423107e10a4210560bcb7444e00e9428aee3d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1423107e10a4210560bcb7444e00e9428aee3d3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fe3178b6953ab8c88c75ca321645eaef1523594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe3178b6953ab8c88c75ca321645eaef1523594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe3178b6953ab8c88c75ca321645eaef1523594", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe3178b6953ab8c88c75ca321645eaef1523594/comments", "author": null, "committer": null, "parents": [{"sha": "5ade1ed2c08bf2f327ee24afc57bc263fd90e6e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ade1ed2c08bf2f327ee24afc57bc263fd90e6e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ade1ed2c08bf2f327ee24afc57bc263fd90e6e1"}], "stats": {"total": 2473, "additions": 633, "deletions": 1840}, "files": [{"sha": "8ca58b01c144e8ca7b11d84866c3a7182cc1e26e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,100 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* config/x-solaris (host-solaris.o): Update.\n+\t* config/x-linux (host-linux.o): Update.\n+\t* config/x-hpux (host-hpux.o): Update.\n+\t* config/x-darwin (host-darwin.o): Update.\n+\t* config/v850/t-v850e (v850-c.o): Update.\n+\t* config/v850/t-v850 (v850-c.o): Update.\n+\t* config/t-vxworks (vxworks.o): Update.\n+\t* config/t-sol2 (sol2-c.o, sol2.o): Update.\n+\t* config/t-darwin (darwin.o, darwin-c.o, darwin-driver.o):\n+\tUpdate.\n+\t* config/spu/t-spu-elf (spu-c.o): Update.\n+\t(spu.o): Remove.\n+\t* config/sh/t-symbian (sh-c.o): Update.\n+\t(symbian.o): Update.\n+\t* config/sh/t-sh (sh-c.o): Update.\n+\t* config/score/t-score-elf (score7.o, score3.o): Update.\n+\t* config/rs6000/x-rs6000 (driver-rs6000.o): Update.\n+\t* config/rs6000/x-darwin64 (host-ppc64-darwin.o): Update.\n+\t* config/rs6000/x-darwin (host-ppc-darwin.o): Update.\n+\t* config/rs6000/t-rs6000 (rs6000-c.o): Update.\n+\t(rs6000.o): Remove.\n+\t* config/m68k/t-uclinux (generated_files): Add sysroot-suffix.h.\n+\t* config/m32c/t-m32c (m32c-pragma.o): Update.\n+\t* config/ia64/t-ia64 (ia64-c.o): Update.\n+\t* config/i386/x-mingw32 (host-mingw32.o): Update.\n+\t* config/i386/x-i386 (driver-i386.o): Update.\n+\t* config/i386/x-darwin (host-i386-darwin.o): Update.\n+\t* config/i386/x-cygwin (host-cygwin.o): Update.\n+\t* config/i386/t-nwld (nwld.o): Update.\n+\t* config/i386/t-netware (netware.o): Update.\n+\t* config/i386/t-interix (winnt.o): Update.\n+\t* config/i386/t-cygwin (cygwin1.o, cygwin2.o): Update.\n+\t* config/i386/t-cygming (winnt.o, winnt-cxx.o, winnt-stubs.o,\n+\tmsformat-c.o): Update.\n+\t* config/bfin/t-bfin-linux (generated_files): Add\n+\tlinux-sysroot-suffix.h.\n+\t* config/arm/t-wince-pe (pe.o): Update.\n+\t* config/arm/t-strongarm-pe (pe.o): Update.\n+\t* config/arm/t-pe (pe.o): Update.\n+\t* config/arm/t-arm (arm-c.o): Update.\n+\t* doc/install.texi (Prerequisites): Require make 3.80.\n+\t* Makefile.in: Remove .o targets.\n+\t(CCDEPMODE, DEPDIR, depcomp, BUILD_DEPMODE): New variables.\n+\t(OBSTACK_H, FIBHEAP_H, PARTITION_H, MD5_H, BCONFIG_H): Remove.\n+\t(simple_generated_h, simple_generated_c): Move earlier.\n+\t(generated_files): New variable.\n+\t(TARGET_H, MACHMODE_H, HOOKS_H, HOSTHOOKS_DEF_H, LANGHOOKS_DEF_H,\n+\tTARGET_DEF_H, RTL_BASE_H, RTL_H, PARAMS_H, BUILTINS_DEF, TREE_H,\n+\tBASIC_BLOCK_H, GCOV_IO_H, COVERAGE_H, DEMANGLE_H, RECOG_H,\n+\tALIAS_H, EMIT_RTL_H, FLAGS_H, FUNCTION_H, EXPR_H, OPTABS_H,\n+\tREGS_H, RA_H, RESOURCE_H, SCHED_INT_H, INTEGRATE_H, CFGLAYOUT_H,\n+\tCFGLOOP_H, IPA_UTILS_H, IPA_REFERENCE_H, IPA_TYPE_ESCAPE_H,\n+\tCGRAPH_H, DF_H, RESOURCE_H, DDG_H, GCC_H, GGC_H, TIMEVAR_H,\n+\tINSN_ATTR_H, C_COMMON_H, C_PRAGMA_H, C_TREE_H, SYSTEM_H,\n+\tPREDICT_H, DECNUM_H, MKDEPS_H, SYMTAB_H, TREE_DUMP_H,\n+\tTREE_GIMPLE_H, TREE_FLOW_H, TREE_SSA_LIVE_H, PRETTY_PRINT_H,\n+\tDIAGNOSTIC_H, C_PRETTY_PRINT_H, SCEV_H, LAMBDA_H, TREE_DATA_REF_H,\n+\tVARRAY_H, TREE_INLINE_H, REAL_H, DBGCNT_H, EBIMAP_H): Remove.\n+\t(.c.o): Remove.\n+\t(COMPILE.base, COMPILE): New variables.\n+\t(%.o): New pattern rule.\n+\t(ALL_HOST_OBJS): New variable.\n+\t(xgcc$(exeext), cpp$(exeext)): Remove extra version.o.\n+\t(dummy-checksum.o, cc1-checksum.o): Remove.\n+\t(DRIVER_SHLIB): New variable.\n+\t(DRIVER_DEFINES): Use it.\n+\t(gencondmd.c): Move out of build/.\n+\t(s-conditions): Update.\n+\t(BUILDCOMPILE.base, BUILDCOMPILE): New variables.\n+\t(ALL_BUILD_OBJS): Likewise.\n+\t(build/%.o): Use BUILDCOMPILE.\n+\t(build/ggc-none.o, build/ggc-none.o, build/min-insn-modes.o,\n+\tbuild/print-rtl.o, build/read-rtl.o, build/rtl.o, build/vec.o,\n+\tbuild/gencondmd.o, build/genattrtab.o, build/genautomata.o,\n+\tbuild/gencheck.o, build/gencodes.o, build/genconditions.o,\n+\tbuild/genconfig.o, build/genconstants.o, build/genemit.o,\n+\tbuild/genextract.o, build/genflags.o, build/genmddeps.o,\n+\tbuild/genopinit.o, build/genoutput.o, build/genpeep.o,\n+\tbuild/genpreds.o, build/genrecog.o, build/gcov-iov.o,\n+\tbuild/gen-protos.o, build/scan.o, build/fix-header.o,\n+\tbuild/scan-decls.o): Simplify.\n+\t(collect2.o, c-opts.o, gcc.o, gccspec.o, gcc-options.o,\n+\tcppdefault.o, protoize.o, unprotoize.o, intl.o, version.o,\n+\tprefix.o, toplev.o): Reduce to variable setting.\n+\t(libbackend.o): Use COMPILE.  Remove most dependencies.  Move\n+\tlater.\n+\t($(out_object_file), gcc-options.o): New targets.\n+\t($(ALL_HOST_OBJS)): New target.\n+\tInclude dependency files.\n+\t* configure: Rebuilt.\n+\t* configure.ac: Call ZW_CREATE_DEPDIR,\n+\tZW_PROG_COMPILER_DEPENDENCIES.\n+\t* doc/sourcebuild.texi (Front End Directory): Document new\n+\tvariable.\n+\n 2008-03-25  Douglas Gregor  <doug.gregor@gmail.com>\n \n        * c-common.c (c_sizeof_or_alignof_type): If we're not allowed to"}, {"sha": "d36dff78f106d0af064663f1aba17fbde9a226f6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 190, "deletions": 1389, "changes": 1579, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -268,6 +268,12 @@ mkinstalldirs=$(SHELL) $(srcdir)/../mkinstalldirs\n # UNSORTED\n # --------\n \n+# Dependency tracking stuff.\n+CCDEPMODE = @CCDEPMODE@\n+DEPDIR = @DEPDIR@\n+depcomp = $(SHELL) $(srcdir)/../depcomp\n+BUILD_DEPMODE = @BUILD_DEPMODE@\n+\n # Some compilers can't handle cc -c blah.c -o foo/blah.o.\n # In stage2 and beyond, we force this to \"-o $@\" since we know we're using gcc.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n@@ -371,11 +377,7 @@ STRIP_FOR_TARGET := $(shell \\\n \n # Where to find some libiberty headers.\n HASHTAB_H   = $(srcdir)/../include/hashtab.h\n-OBSTACK_H   = $(srcdir)/../include/obstack.h\n SPLAY_TREE_H= $(srcdir)/../include/splay-tree.h\n-FIBHEAP_H   = $(srcdir)/../include/fibheap.h\n-PARTITION_H = $(srcdir)/../include/partition.h\n-MD5_H\t    = $(srcdir)/../include/md5.h\n \n # Default native SYSTEM_HEADER_DIR, to be overridden by targets.\n NATIVE_SYSTEM_HEADER_DIR = /usr/include\n@@ -723,13 +725,27 @@ SPECS = specs\n # GTM_H lists the config files that the generator files depend on,\n # while TM_H lists the ones ordinary gcc files depend on, which\n # includes several files generated by those generators.\n-BCONFIG_H = bconfig.h $(build_xm_file_list)\n CONFIG_H  = config.h  $(host_xm_file_list)\n TCONFIG_H = tconfig.h $(xm_file_list)\n TM_P_H    = tm_p.h    $(tm_p_file_list)\n GTM_H     = tm.h      $(tm_file_list)\n TM_H      = $(GTM_H) insn-constants.h insn-flags.h options.h\n \n+# All generated headers which might be needed while building xgcc\n+# itself.  Generated headers needed by build tools and the like should\n+# not be mentioned here.\n+simple_generated_h = insn-attr.h insn-codes.h insn-config.h insn-flags.h\n+\n+simple_generated_c = insn-attrtab.c insn-automata.c insn-emit.c \\\n+\t\t     insn-extract.c insn-opinit.c insn-output.c \\\n+\t\t     insn-peep.c insn-recog.c\n+\n+generated_files = config.h tm.h $(TM_P_H) $(TM_H) multilib.h \\\n+\t$(simple_generated_h) $(simple_generated_c) specs.h \\\n+\ttree-check.h genrtl.h insn-modes.h tm-preds.h tm-constrs.h \\\n+\t$(ALL_GTFILES_H) gtype-desc.c gtype-desc.h gcov-iov.h\n+\n+\n # Variables for version information.\n BASEVER     := $(srcdir)/BASE-VER  # 4.x.y\n DEVPHASE    := $(srcdir)/DEV-PHASE # experimental, prerelease, \"\"\n@@ -768,82 +784,9 @@ else\n REVISION_s  :=\n endif\n \n-# Shorthand variables for dependency lists.\n-TARGET_H = $(TM_H) target.h insn-modes.h\n-MACHMODE_H = machmode.h mode-classes.def insn-modes.h\n-HOOKS_H = hooks.h $(MACHMODE_H)\n-HOSTHOOKS_DEF_H = hosthooks-def.h $(HOOKS_H)\n-LANGHOOKS_DEF_H = langhooks-def.h $(HOOKS_H)\n-TARGET_DEF_H = target-def.h $(HOOKS_H)\n-RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H) reg-notes.def insn-notes.def \\\n-  input.h $(REAL_H) statistics.h vec.h fixed-value.h alias.h\n-RTL_H = $(RTL_BASE_H) genrtl.h\n-PARAMS_H = params.h params.def\n-BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def\n-TREE_H = tree.h tree.def $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n-          input.h statistics.h vec.h treestruct.def $(HASHTAB_H) \\\n-          double-int.h alias.h\n-BASIC_BLOCK_H = basic-block.h bitmap.h sbitmap.h varray.h $(PARTITION_H) \\\n-          hard-reg-set.h $(PREDICT_H) vec.h $(FUNCTION_H) \\\n-          cfghooks.h $(OBSTACK_H)\n-GCOV_IO_H = gcov-io.h gcov-iov.h auto-host.h\n-COVERAGE_H = coverage.h $(GCOV_IO_H)\n-DEMANGLE_H = $(srcdir)/../include/demangle.h\n-RECOG_H = recog.h\n-ALIAS_H = alias.h coretypes.h\n-EMIT_RTL_H = emit-rtl.h\n-FLAGS_H = flags.h options.h\n-FUNCTION_H = function.h $(TREE_H) $(HASHTAB_H)\n-EXPR_H = expr.h insn-config.h $(FUNCTION_H) $(RTL_H) $(FLAGS_H) $(TREE_H) $(MACHMODE_H) $(EMIT_RTL_H)\n-OPTABS_H = optabs.h insn-codes.h\n-REGS_H = regs.h varray.h $(MACHMODE_H) $(OBSTACK_H) $(BASIC_BLOCK_H) $(FUNCTION_H)\n-RA_H = ra.h $(REGS_H)\n-RESOURCE_H = resource.h hard-reg-set.h\n-SCHED_INT_H = sched-int.h $(INSN_ATTR_H) $(BASIC_BLOCK_H) $(RTL_H) $(DF_H)\n-INTEGRATE_H = integrate.h $(VARRAY_H)\n-CFGLAYOUT_H = cfglayout.h $(BASIC_BLOCK_H)\n-CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(RTL_H) vecprim.h double-int.h\n-IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n-IPA_REFERENCE_H = ipa-reference.h bitmap.h $(TREE_H)\n-IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)\n-CGRAPH_H = cgraph.h $(TREE_H)\n-DF_H = df.h bitmap.h $(BASIC_BLOCK_H) alloc-pool.h\n-RESOURCE_H = resource.h hard-reg-set.h $(DF_H)\n-DDG_H = ddg.h sbitmap.h $(DF_H)\n-GCC_H = gcc.h version.h\n-GGC_H = ggc.h gtype-desc.h\n-TIMEVAR_H = timevar.h timevar.def\n-INSN_ATTR_H = insn-attr.h $(srcdir)/insn-addr.h $(srcdir)/varray.h\n-C_COMMON_H = c-common.h $(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H)\n-C_PRAGMA_H = c-pragma.h $(CPPLIB_H)\n-C_TREE_H = c-tree.h $(C_COMMON_H) toplev.h $(DIAGNOSTIC_H)\n-SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h\n-PREDICT_H = predict.h predict.def\n CPPLIB_H = $(srcdir)/../libcpp/include/line-map.h \\\n \t$(srcdir)/../libcpp/include/cpplib.h\n-DECNUM_H = $(DECNUM)/decContext.h $(DECNUM)/decDPD.h $(DECNUM)/decNumber.h \\\n-\t$(DECNUMFMT)/decimal32.h $(DECNUMFMT)/decimal64.h \\\n-\t$(DECNUMFMT)/decimal128.h $(DECNUMFMT)/decimal128Local.h\n-MKDEPS_H = $(srcdir)/../libcpp/include/mkdeps.h\n-SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h\n CPP_ID_DATA_H = $(CPPLIB_H) $(srcdir)/../libcpp/include/cpp-id-data.h\n-TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H)\n-TREE_GIMPLE_H = tree-gimple.h tree-iterator.h\n-TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n-\t\tbitmap.h $(BASIC_BLOCK_H) hard-reg-set.h $(TREE_GIMPLE_H) \\\n-\t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H)\n-TREE_SSA_LIVE_H = tree-ssa-live.h $(PARTITION_H) vecprim.h\n-PRETTY_PRINT_H = pretty-print.h input.h $(OBSTACK_H)\n-DIAGNOSTIC_H = diagnostic.h diagnostic.def $(PRETTY_PRINT_H) options.h\n-C_PRETTY_PRINT_H = c-pretty-print.h $(PRETTY_PRINT_H) $(C_COMMON_H) $(TREE_H)\n-SCEV_H = tree-scalar-evolution.h $(GGC_H) tree-chrec.h $(PARAMS_H)\n-LAMBDA_H = lambda.h $(TREE_H) vec.h $(GGC_H)\n-TREE_DATA_REF_H = tree-data-ref.h $(LAMBDA_H) omega.h graphds.h tree-chrec.h\n-VARRAY_H = varray.h $(MACHMODE_H) $(SYSTEM_H) coretypes.h $(TM_H)\n-TREE_INLINE_H = tree-inline.h $(VARRAY_H) pointer-set.h\n-REAL_H = real.h $(MACHMODE_H)\n-DBGCNT_H = dbgcnt.h dbgcnt.def\n-EBIMAP_H = ebitmap.h sbitmap.h\n \n #\f\n # Now figure out from those variables how to compile and link.\n@@ -904,8 +847,16 @@ INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   -I$(srcdir)/../include @INCINTL@ \\\n \t   $(CPPINC) $(GMPINC) $(DECNUMINC)\n \n-.c.o:\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n+COMPILE.base = $(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) -o $@\n+ifeq ($(CCDEPMODE),depmode=gcc3)\n+COMPILE = $(COMPILE.base) -MT $@ -MMD -MP -MF $(*D)/$(DEPDIR)/$(*F).Po\n+else\n+COMPILE = source='$<' object='$@' libtool=no \\\n+    DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) $(COMPILE.base)\n+endif\n+\n+%.o: %.c\n+\t$(COMPILE) $<\n \n #\f\n # Support for additional languages (other than C).\n@@ -1255,6 +1206,15 @@ OBJS = $(OBJS-common) $(OBJS-md) $(OBJS-archive)\n \n OBJS-onestep = libbackend.o $(OBJS-archive)\n \n+# This lists all host object files, whether they are included in this\n+# compilation or not.  This is used for dependency tracking.\n+ALL_HOST_OBJS = $(GCC_OBJS) $(C_OBJS) $(OBJS) libbackend.o \\\n+  @TREEBROWSER@ main.o gccspec.o version.o intl.o prefix.o cppspec.o \\\n+  $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS)) \\\n+  $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) \\\n+  mips-tfile.o mips-tdump.o \\\n+  $(PROTO_OBJS) $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n+\n BACKEND = main.o @TREEBROWSER@ libbackend.a $(CPPLIB) $(LIBDECNUMBER)\n \n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n@@ -1373,7 +1333,7 @@ endif\n #\t$(RUN_GEN) build/gencheck$(build_exeext) > tree-check.h\n #\n # but tree-check.h doesn't change every time gencheck changes. It would the\n-# nice if targets that depend on tree-check.h wouldn't be rebuild\n+# nice if targets that depend on tree-check.h wouldn't be rebuilt\n # unnecessarily when tree-check.h is unchanged. To make this, tree-check.h\n # must not be overwritten with a identical copy. One solution is to use a\n # temporary file\n@@ -1532,15 +1492,15 @@ libbackend.a: $(OBJS@onestep@)\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n xgcc$(exeext): $(GCC_OBJS) gccspec.o version.o intl.o prefix.o \\\n-   version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+   $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) gccspec.o \\\n \t  intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # cpp is to cpp0 as gcc is to cc1.\n # The only difference from xgcc is that it's linked with cppspec.o\n # instead of gccspec.o.\n cpp$(exeext): $(GCC_OBJS) cppspec.o version.o intl.o prefix.o \\\n-   version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+   $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) cppspec.o \\\n \t  intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n@@ -1555,17 +1515,13 @@ $(SPECS): xgcc$(exeext)\n gcc-cross$(exeext): xgcc$(exeext)\n \tcp xgcc$(exeext) gcc-cross$(exeext)\n \n-dummy-checksum.o : dummy-checksum.c\n-\n cc1-dummy$(exeext): $(C_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) dummy-checksum.o \\\n \t  $(BACKEND) $(LIBS) $(GMPLIBS)\n \n cc1-checksum.c : cc1-dummy$(exeext) build/genchecksum$(build_exeext)\n \tbuild/genchecksum$(build_exeext) cc1-dummy$(exeext) > $@\n \n-cc1-checksum.o : cc1-checksum.c\n-\n cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) cc1-checksum.o \\\n \t  $(BACKEND) $(LIBS) $(GMPLIBS)\n@@ -1710,72 +1666,11 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n #\f\n # Compiling object files from source files.\n \n-# Note that dependencies on obstack.h are not written\n-# because that file is not part of GCC.\n-\n-# C language specific files.\n-\n-c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n-c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(GGC_H) $(TIMEVAR_H) $(C_TREE_H) input.h $(FLAGS_H) toplev.h output.h \\\n-    $(CPPLIB_H) gt-c-parser.h langhooks.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n-    vec.h $(TARGET_H)\n-\n srcextra: gcc.srcextra lang.srcextra\n \n gcc.srcextra: gengtype-lex.c\n \t-cp -p $^ $(srcdir)\n \n-c-incpath.o: c-incpath.c c-incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n-\t\tintl.h prefix.h coretypes.h $(TM_H) cppdefault.h $(TARGET_H) \\\n-\t\t$(MACHMODE_H)\n-\n-c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(RTL_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) output.h \\\n-    $(EXPR_H) debug.h toplev.h intl.h $(TM_P_H) $(TREE_INLINE_H) $(TIMEVAR_H) \\\n-    opts.h $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) $(HASHTAB_H) libfuncs.h \\\n-    except.h $(LANGHOOKS_DEF_H) $(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) \\\n-    $(DIAGNOSTIC_H) input.h langhooks.h $(TREE_GIMPLE_H) tree-mudflap.h  \\\n-    pointer-set.h\n-c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n-    $(RTL_H) toplev.h $(TM_P_H) langhooks.h $(GGC_H) $(TREE_FLOW_H) \\\n-    $(TREE_GIMPLE_H) tree-iterator.h\n-c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(DIAGNOSTIC_H) \\\n-    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n-    c-objc-common.h $(C_PRAGMA_H) c-common.def $(TREE_INLINE_H)\n-stub-objc.o : stub-objc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-    $(C_COMMON_H)\n-c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(RTL_H) debug.h $(C_TREE_H) $(C_COMMON_H) $(REAL_H) $(SPLAY_TREE_H) \\\n-    $(C_PRAGMA_H) input.h intl.h $(FLAGS_H) toplev.h output.h \\\n-    $(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H) $(TM_P_H)\n-c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(srcdir)/../libcpp/internal.h \\\n-    $(C_PRAGMA_H)\n-c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-    $(TM_H) $(TREE_H) $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n-    $(FUNCTION_H) $(FLAGS_H) toplev.h $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(VARRAY_H) \\\n-    langhooks.h $(GGC_H) $(TARGET_H) $(C_PRETTY_PRINT_H) c-objc-common.h \\\n-    tree-mudflap.h\n-c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(FLAGS_H) toplev.h\n-c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(TREE_H) $(FLAGS_H) toplev.h $(C_COMMON_H) convert.h $(C_TREE_H) \\\n-    langhooks.h $(TARGET_H)\n-c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-    $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) toplev.h output.h $(GGC_H) $(TM_P_H) \\\n-    $(C_COMMON_H) $(TARGET_H) gt-c-pragma.h $(CPPLIB_H) $(FLAGS_H)\n-graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(FLAGS_H) output.h \\\n-    $(RTL_H) $(FUNCTION_H) hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(OBSTACK_H)\n-sbitmap.o: sbitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-    $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H)\n-ebitmap.o: ebitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(EBITMAP_H)\n-sparseset.o: sparseset.c $(SYSTEM_H) sparseset.h\n-\n COLLECT2_OBJS = collect2.o tlink.o intl.o version.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n@@ -1784,71 +1679,18 @@ collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n \t\t$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)\n \tmv -f T$@ $@\n \n-collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h \\\n-\t$(OBSTACK_H) $(DEMANGLE_H) collect2.h version.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS)  \\\n-\t-DTARGET_MACHINE=\\\"$(target_noncanonical)\\\" \\\n-\t-c $(srcdir)/collect2.c $(OUTPUT_OPTION)\n-\n-tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(OBSTACK_H) collect2.h intl.h\n-\n-# A file used by all variants of C.\n-\n-c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) toplev.h output.h $(C_PRAGMA_H) \\\n-\t$(GGC_H) $(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def \\\n-\t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(VARRAY_H) $(RTL_H) \\\n-\t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n-\tintl.h opts.h $(REAL_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n-\t$(BUILTINS_DEF)\n-\n-c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n-\t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(REAL_H) \\\n-\t$(DIAGNOSTIC_H) tree-iterator.h fixed-value.h\n-\n-c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\t\\\n-        $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) toplev.h langhooks.h\t\t\\\n-        $(TREE_INLINE_H) $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n-        opts.h options.h $(MKDEPS_H) c-incpath.h cppdefault.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n-\n-c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) $(FLAGS_H) toplev.h \\\n-\toutput.h except.h $(REAL_H) $(TARGET_H) $(TM_P_H)\n-\n-# A file used by all variants of C and some other languages.\n-\n-attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(FLAGS_H) toplev.h output.h $(RTL_H) $(GGC_H) $(TM_P_H) \\\n-\t$(TARGET_H) langhooks.h $(CPPLIB_H)\n-\n-c-format.o : c-format.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n-\t$(C_COMMON_H) $(FLAGS_H) toplev.h intl.h $(DIAGNOSTIC_H) alloc-pool.h \\\n-\tc-format.h\n-\n-c-semantics.o : c-semantics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(FLAGS_H) toplev.h output.h $(RTL_H) $(GGC_H) \\\n-\t$(PREDICT_H) $(TREE_INLINE_H) $(C_COMMON_H) except.h $(FUNCTION_H) \\\n-\tlanghooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) $(TREE_GIMPLE_H) \\\n-\t$(VARRAY_H)\n-\n-c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(C_TREE_H) $(TREE_DUMP_H)\n-\n-c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n-\t$(C_COMMON_H) output.h toplev.h $(C_PRAGMA_H) $(GGC_H) debug.h \\\n-\tlanghooks.h $(FLAGS_H) hosthooks.h version.h $(TARGET_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n-\t  $< $(OUTPUT_OPTION)\n-\n-c-omp.o : c-omp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(FUNCTION_H) $(C_COMMON_H) toplev.h $(TREE_GIMPLE_H)\n-\n # Language-independent files.\n \n+ifneq ($(SHLIB_LINK),)\n+ifeq (@enable_shared@,yes)\n+DRIVER_SHLIB = -DENABLE_SHARED_LIBGCC\n+else\n+DRIVER_SHLIB =\n+endif\n+else\n+DRIVER_SHLIB =\n+endif\n+\n DRIVER_DEFINES = \\\n   -DSTANDARD_STARTFILE_PREFIX=\\\"$(unlibsubdir)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc/\\\" \\\n@@ -1859,23 +1701,7 @@ DRIVER_DEFINES = \\\n   -DTOOLDIR_BASE_PREFIX=\\\"$(libsubdir_to_prefix)$(prefix_to_exec_prefix)\\\" \\\n   @TARGET_SYSTEM_ROOT_DEFINE@ \\\n   $(VALGRIND_DRIVER_DEFINES) \\\n-  `test \"X$${SHLIB_LINK}\" = \"X\" || test \"@enable_shared@\" != \"yes\" || echo \"-DENABLE_SHARED_LIBGCC\"`\n-\n-gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n-    Makefile $(lang_specs_files) specs.h prefix.h $(GCC_H) $(FLAGS_H) \\\n-    configargs.h $(OBSTACK_H) opts.h\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-  $(DRIVER_DEFINES) \\\n-  -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n-\n-gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-  $(DRIVER_DEFINES) \\\n-  -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n-\n-cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n+  $(DRIVER_SHLIB)\n \n gencheck.h : s-gencheck ; @true\n s-gencheck : Makefile\n@@ -1910,1018 +1736,15 @@ s-options-h: optionlist $(srcdir)/opt-functions.awk $(srcdir)/opth-gen.awk\n \t$(SHELL) $(srcdir)/../move-if-change tmp-options.h options.h\n \t$(STAMP) $@\n \n-options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) opts.h intl.h\n-\n-gcc-options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) opts.h intl.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(OUTPUT_OPTION) -DGCC_DRIVER options.c\n-\n dumpvers: dumpvers.c\n \n-ifdef REVISION_s\n-version.o: version.c version.h $(REVISION) $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n-else\n-version.o: version.c version.h $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n-endif\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t-DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n-\t-DREVISION=$(REVISION_s) \\\n-\t-DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n-\t-DBUGURL=$(BUGURL_s) -c $(srcdir)/version.c $(OUTPUT_OPTION)\n-\n-gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(VARRAY_H) $(HASHTAB_H) $(SPLAY_TREE_H) bitmap.h $(TREE_H) $(RTL_H) \\\n-\t$(FUNCTION_H) insn-config.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n-\tcselib.h insn-addr.h $(OPTABS_H) libfuncs.h debug.h $(GGC_H) \\\n-\t$(CGRAPH_H) $(TREE_FLOW_H) reload.h $(CPP_ID_DATA_H)\n-\n-ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n-\t$(HASHTAB_H) toplev.h $(PARAMS_H) hosthooks.h $(HOSTHOOKS_DEF_H)\n-\n-ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-\t$(FLAGS_H) toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) $(TREE_FLOW_H)\n-\n-ggc-zone.o: ggc-zone.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-\t$(TREE_H) $(FLAGS_H) toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n-\t$(PARAMS_H) bitmap.h $(VARRAY_H)\n-\n-ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n-\t$(BCONFIG_H)\n-\n-stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(GGC_H) gt-stringpool.h $(CPPLIB_H) $(SYMTAB_H)\n-\n-prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n-\tMakefile $(BASEVER)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t-DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s) \\\n-\t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n-\n-convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(FLAGS_H) convert.h toplev.h langhooks.h $(REAL_H) fixed-value.h\n-\n-double-int.o: double-int.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H)\n-\n-langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) toplev.h $(TREE_INLINE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n-   langhooks.h $(LANGHOOKS_DEF_H) $(FLAGS_H) $(GGC_H) $(DIAGNOSTIC_H) intl.h \\\n-   $(TREE_GIMPLE_H)\n-tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(PARAMS_H) \\\n-   toplev.h $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h \\\n-   $(REAL_H) gt-tree.h tree-iterator.h $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   $(OBSTACK_H) pointer-set.h fixed-value.h\n-tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h toplev.h $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n-   tree-iterator.h tree-pass.h $(DIAGNOSTIC_H) $(REAL_H) fixed-value.h\n-tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h insn-config.h \\\n-   $(VARRAY_H) $(HASHTAB_H) $(SPLAY_TREE_H) toplev.h \\\n-   langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) intl.h $(FUNCTION_H) $(TREE_GIMPLE_H) \\\n-   debug.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n-   ipa-prop.h value-prof.h $(TARGET_H) $(INTEGRATE_H)\n-print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(GGC_H) langhooks.h $(REAL_H) tree-iterator.h fixed-value.h\n-stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(RTL_H) \\\n-   $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n-   toplev.h\n-tree-ssa-structalias.o: tree-ssa-structalias.c tree-ssa-structalias.h \\\n-   $(SYSTEM_H) $(CONFIG_H) $(GGC_H) $(TREE_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h $(CGRAPH_H) tree-pass.h $(TIMEVAR_H) \\\n-   gt-tree-ssa-structalias.h $(PARAMS_H) $(ALIAS_H) pointer-set.h $(FUNCTION_H)\n-tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   toplev.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) bitmap.h \\\n-   $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n-   $(TREE_GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H)\n-tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   langhooks.h domwalk.h tree-pass.h $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n-   bitmap.h $(CFGLOOP_H) $(FLAGS_H) hard-reg-set.h $(HASHTAB_H) \\\n-   $(TREE_GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) vecprim.h\n-tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h\n-tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h $(FLAGS_H) $(HASHTAB_H) toplev.h\n-tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) bitmap.h $(GGC_H) toplev.h\n-tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H)\n-tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   langhooks.h $(FLAGS_H)\n-tree-ssa-phiprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   langhooks.h $(FLAGS_H)\n-tree-ssa-ifcombine.o : tree-ssa-ifcombine.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H)\n-tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H)\n-tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(EXPR_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) tree-pass.h \\\n-   langhooks.h\n-tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) tree-pass.h langhooks.h tree-ssa-propagate.h $(FLAGS_H)\n-tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n-   tree-ssa-propagate.h vec.h gt-tree-ssa-propagate.h $(FLAGS_H) $(VARRAY_H)\n-tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) domwalk.h tree-pass.h $(FLAGS_H) langhooks.h \\\n-   tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) $(REAL_H)\n-tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h tree-pass.h $(FLAGS_H) \\\n-   langhooks.h tree-ssa-propagate.h $(REAL_H)\n-tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) tree-pass.h $(CFGLOOP_H)\n-tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) tree-pass.h $(CFGLOOP_H)\n-tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) $(TREE_FLOW_H)\n-tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   gt-tree-phinodes.h $(RTL_H) toplev.h\n-domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) domwalk.h $(GGC_H)\n-tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h toplev.h\n-tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) tree-pass.h \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) \\\n-   bitmap.h $(FLAGS_H) $(HASHTAB_H) langhooks.h $(TREE_GIMPLE_H) \\\n-   $(TREE_INLINE_H)\n-tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(CFGLOOP_H) \\\n-   alloc-pool.h $(BASIC_BLOCK_H) bitmap.h $(HASHTAB_H) $(TREE_GIMPLE_H) \\\n-   $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H)\n-tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(CFGLOOP_H) \\\n-   alloc-pool.h $(BASIC_BLOCK_H) bitmap.h $(HASHTAB_H) $(TREE_GIMPLE_H) \\\n-   $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n-   $(PARAMS_H)\n-tree-vn.o : tree-vn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) \\\n-   $(TREE_H) $(TREE_FLOW_H) $(HASHTAB_H) langhooks.h tree-pass.h \\\n-   $(TREE_DUMP_H) $(DIAGNOSTIC_H) tree-ssa-sccvn.h\n-tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(SCEV_H) tree-chrec.h $(TIMEVAR_H) toplev.h intl.h\n-tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) except.h langhooks.h $(CFGLOOP_H) tree-pass.h \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h toplev.h \\\n-   tree-ssa-propagate.h $(TREE_INLINE_H)\n-tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) toplev.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) except.h langhooks.h $(CFGLOOP_H) tree-pass.h \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(HASHTAB_H) toplev.h \\\n-   tree-ssa-propagate.h\n-rtl-factoring.o : rtl-factoring.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   coretypes.h $(TM_H) $(BASIC_BLOCK_H) $(GGC_H) $(REGS_H) $(PARAMS_H) $(EXPR_H) \\\n-   addresses.h $(TM_P_H) tree-pass.h $(TREE_FLOW_H) $(TIMEVAR_H) output.h \\\n-   $(DF_H)\n-tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(DIAGNOSTIC_H) except.h tree-pass.h $(FLAGS_H) langhooks.h \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h\n-tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) alloc-pool.h \\\n-   $(BASIC_BLOCK_H) bitmap.h $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n-   langhooks.h $(REAL_H) $(TREE_GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h\n-tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(TREE_DUMP_H) $(TREE_INLINE_H) \\\n-   tree-iterator.h $(TREE_GIMPLE_H) $(CGRAPH_H) $(EXPR_H) langhooks.h \\\n-   $(GGC_H) gt-tree-nested.h coretypes.h $(TREE_FLOW_H) pointer-set.h\n-tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   $(CFGLOOP_H) $(RTL_H) $(C_COMMON_H) tree-chrec.h $(TREE_DATA_REF_H) \\\n-   $(SCEV_H) tree-pass.h $(DIAGNOSTIC_H) $(TARGET_H) $(TREE_DUMP_H) \\\n-   $(VARRAY_H)\n-tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   coretypes.h $(GGC_H) tree-iterator.h $(TREE_GIMPLE_H) gt-tree-iterator.h\n-tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(TREE_GIMPLE_H)\n-tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h $(TREE_INLINE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) tree-pass.h toplev.h \\\n-   coretypes.h langhooks.h $(IPA_REFERENCE_H)\n-tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) except.h langhooks.h \\\n-   $(GGC_H) tree-pass.h coretypes.h $(TIMEVAR_H) $(TM_P_H) pointer-set.h \\\n-   $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h toplev.h\n-tree-ssa-loop.o : tree-ssa-loop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h\n-tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n-   $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n-   domwalk.h $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) tree-pass.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n-    $(TREE_INLINE_H)\n-tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h $(EXPR_H) \\\n-   gt-tree-ssa-address.h $(GGC_H) tree-affine.h\n-tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(FLAGS_H) tree-pass.h $(SCEV_H) $(TREE_DATA_REF_H) $(BASIC_BLOCK_H) \\\n-   $(GGC_H) hard-reg-set.h tree-chrec.h intl.h\n-tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(FLAGS_H) tree-pass.h $(SCEV_H) $(BASIC_BLOCK_H) $(GGC_H) hard-reg-set.h \\\n-   tree-chrec.h\n-tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) hard-reg-set.h\n-tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   tree-chrec.h toplev.h langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n-   $(OPTABS_H)\n-tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n-   $(CFGLOOP_H) $(TREE_FLOW_H) $(GGC_H) $(TREE_DATA_REF_H) $(SCEV_H) \\\n-   $(PARAMS_H) $(DIAGNOSTIC_H) tree-pass.h $(TM_H) coretypes.h tree-affine.h \\\n-   tree-inline.h\n-tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   tree-chrec.h $(VARRAY_H) tree-affine.h pointer-set.h $(TARGET_H)\n-tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(TREE_GIMPLE_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H)\n-tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(CFGLAYOUT_H) $(SCEV_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(PARAMS_H) $(TREE_INLINE_H)\n-tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n-   $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(REAL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h\n-tree-ssa-math-opts.o : tree-ssa-math-opts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TIMEVAR_H) tree-pass.h $(TM_H) $(FLAGS_H) \\\n-   alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H)\n-tree-ssa-alias-warnings.o : tree-ssa-alias-warnings.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(TREE_DUMP_H) \\\n-   $(TREE_FLOW_H) $(PARAMS_H) $(FUNCTION_H) $(EXPR_H) toplev.h \\\n-   tree-ssa-structalias.h tree-ssa-propagate.h langhooks.h alloc-pool.h \\\n-   $(DIAGNOSTIC_H)\n-tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n-   $(TREE_DUMP_H) tree-pass.h $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   hard-reg-set.h $(TREE_GIMPLE_H) vec.h tree-ssa-structalias.h \\\n-   $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h\n-tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) tree-iterator.h\\\n-   $(BASIC_BLOCK_H) $(TREE_GIMPLE_H) $(TREE_INLINE_H) vec.h \\\n-   alloc-pool.h pointer-set.h $(CFGLOOP_H)\n-tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   $(FLAGS_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) toplev.h \\\n-   $(FUNCTION_H) langhooks.h $(FLAGS_H) $(CGRAPH_H) $(TREE_INLINE_H) \\\n-   tree-mudflap.h $(GGC_H) $(CGRAPH_H) tree-pass.h $(CFGLOOP_H) \\\n-   $(BASIC_BLOCK_H) graph.h hard-reg-set.h\n-c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) $(VARRAY_H) \\\n-   $(FLAGS_H) langhooks.h toplev.h $(RTL_H) $(TREE_FLOW_H) $(LANGHOOKS_DEF_H) \\\n-   $(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n-gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h except.h $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n-   $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) toplev.h $(OPTABS_H) \\\n-   $(REAL_H) $(SPLAY_TREE_H)\n-gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   except.h $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) tree-pass.h \\\n-   $(HASHTAB_H) toplev.h\n-omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(TREE_GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) toplev.h tree-pass.h \\\n-   $(GGC_H) $(SPLAY_TREE_H) $(OPTABS_H) $(CFGLOOP_H)\n-tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n-   $(TM_H) coretypes.h\n-omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   errors.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) varray.h tree-pass.h \n-tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(REAL_H) $(SCEV_H) tree-pass.h $(PARAMS_H) \\\n-   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H)\n-tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(REAL_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) tree-pass.h $(FLAGS_H) tree-chrec.h \\\n-   gt-tree-scalar-evolution.h\n-tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) $(SCEV_H) tree-pass.h tree-chrec.h langhooks.h\n-tree-vect-analyze.o: tree-vect-analyze.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RECOG_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) tree-chrec.h\n-tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-vectorizer.h $(TREE_DATA_REF_H) $(EXPR_H) $(TARGET_H)\n-tree-vect-transform.o: tree-vect-transform.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(OPTABS_H) $(RECOG_H) $(TREE_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(TARGET_H) tree-pass.h $(EXPR_H) \\\n-   tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) langhooks.h toplev.h \\\n-   tree-chrec.h\n-tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-pass.h $(EXPR_H) tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) \\\n-   input.h $(TARGET_H) $(CFGLAYOUT_H) toplev.h tree-chrec.h\n-tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-pass.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) $(LAMBDA_H) \\\n-   $(TARGET_H) tree-chrec.h $(OBSTACK_H)\n-tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-pass.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) \\\n-   $(TARGET_H) tree-chrec.h tree-vectorizer.h\n-tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_FLOW_H) $(TREE_H) $(RTL_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(GGC_H) \\\n-   $(DIAGNOSTIC_H) tree-pass.h $(SCEV_H) langhooks.h gt-tree-parloops.h \\\n-   tree-vectorizer.h\n-tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) tree-pass.h \\\n-   tree-stdarg.h $(TARGET_H) langhooks.h\n-tree-object-size.o: tree-object-size.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) tree-pass.h \\\n-   tree-ssa-propagate.h\n-tree-gimple.o : tree-gimple.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(EXPR_H) \\\n-   $(RTL_H) $(TREE_GIMPLE_H) $(TM_H) coretypes.h bitmap.h $(GGC_H) \\\n-   output.h $(TREE_FLOW_H)\n-tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n-   $(TREE_GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(CGRAPH_H) $(GGC_H) \\\n-   gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h \\\n-   $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) toplev.h\n-tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n-   $(C_TREE_H) $(C_COMMON_H) $(TREE_GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n-   output.h $(VARRAY_H) langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n-   $(GGC_H) gt-tree-mudflap.h tree-pass.h toplev.h\n-tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h tree-iterator.h tree-chrec.h langhooks.h tree-pass.h \\\n-   value-prof.h fixed-value.h output.h\n-fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(REAL_H) toplev.h $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n-   $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h fixed-value.h\n-diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) version.h $(TM_P_H) $(FLAGS_H) input.h toplev.h intl.h \\\n-   $(DIAGNOSTIC_H) langhooks.h $(LANGHOOKS_DEF_H) diagnostic.def opts.h\n-opts.o : opts.c opts.h options.h toplev.h $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TREE_H) $(TM_H) langhooks.h $(GGC_H) $(RTL_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TM_P_H) $(INSN_ATTR_H) intl.h $(TARGET_H) \\\n-   $(FLAGS_H) $(PARAMS_H) tree-pass.h $(DBGCNT_H) debug.h\n-opts-common.o : opts-common.c opts.h $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h intl.h\n-targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-   $(EXPR_H) $(TM_H) $(RTL_H) $(TM_P_H) $(FUNCTION_H) output.h toplev.h \\\n-   $(MACHMODE_H) $(TARGET_DEF_H) $(TARGET_H) $(GGC_H) gt-targhooks.h \\\n-   $(OPTABS_H)\n-\n-toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   version.h $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h input.h \\\n-   $(INSN_ATTR_H) output.h $(DIAGNOSTIC_H) debug.h insn-config.h intl.h \\\n-   $(RECOG_H) Makefile toplev.h dwarf2out.h sdbout.h dbxout.h $(EXPR_H) \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) graph.h except.h $(REGS_H) $(TIMEVAR_H) \\\n-   value-prof.h $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n-   langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n-   $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n-   $(CPPLIB_H) opts.h params.def tree-mudflap.h $(REAL_H) tree-pass.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n-\t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n-\n-passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h input.h $(INSN_ATTR_H) output.h \\\n-   $(DIAGNOSTIC_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n-   dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n-   graph.h except.h $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n-   $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n-   langhooks.h insn-flags.h $(CFGLAYOUT_H) $(REAL_H) $(CFGLOOP_H) \\\n-   hosthooks.h $(CGRAPH_H) $(COVERAGE_H) tree-pass.h $(TREE_DUMP_H) \\\n-   $(GGC_H) $(INTEGRATE_H) $(CPPLIB_H) opts.h $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n-   gt-passes.h $(DF_H) $(PREDICT_H)\n-\n-main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h\n-\n-host-default.o : host-default.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   hosthooks.h $(HOSTHOOKS_DEF_H)\n-\n-rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(INSN_ATTR_H) insn-config.h input.h toplev.h intl.h $(DIAGNOSTIC_H) \\\n-   $(CONFIG_H)\n-\n-rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def toplev.h $(REAL_H)\n-\n-print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-    $(BCONFIG_H) $(REAL_H)\n-rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n-   $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) $(REAL_H) \\\n-   $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\\n-   $(DF_H)\n-\n-varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n-   output.h $(C_PRAGMA_H) toplev.h xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n-   $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h $(BASIC_BLOCK_H) \\\n-   $(CFGLAYOUT_H) $(CGRAPH_H) tree-mudflap.h $(REAL_H)\n-function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(CFGLAYOUT_H) $(TREE_GIMPLE_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) \\\n-   $(OPTABS_H) libfuncs.h $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n-   output.h toplev.h except.h $(HASHTAB_H) $(GGC_H) $(TM_P_H) langhooks.h \\\n-   gt-function.h $(TARGET_H) $(BASIC_BLOCK_H) $(INTEGRATE_H) $(PREDICT_H) \\\n-   tree-pass.h $(DF_H) timevar.h vecprim.h\n-stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) $(FUNCTION_H) insn-config.h hard-reg-set.h $(EXPR_H) \\\n-   libfuncs.h except.h $(RECOG_H) toplev.h output.h $(GGC_H) $(TM_P_H) \\\n-   langhooks.h $(PREDICT_H) $(OPTABS_H) $(TARGET_H) $(MACHMODE_H) \\\n-   $(REGS_H) alloc-pool.h\n-except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) except.h $(FUNCTION_H) $(EXPR_H) libfuncs.h \\\n-   langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n-   dwarf2asm.h dwarf2out.h toplev.h $(HASHTAB_H) intl.h $(GGC_H) \\\n-   gt-except.h $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) dwarf2.h \\\n-   $(TARGET_H) $(TM_P_H) tree-pass.h $(TIMEVAR_H)\n-expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n-   libfuncs.h $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n-   typeclass.h hard-reg-set.h toplev.h hard-reg-set.h except.h reload.h \\\n-   $(GGC_H) langhooks.h intl.h $(TM_P_H) $(REAL_H) $(TARGET_H) \\\n-   tree-iterator.h gt-expr.h $(MACHMODE_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n-   tree-pass.h $(DF_H) $(DIAGNOSTIC_H)\n-dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n-   langhooks.h $(GGC_H) gt-dojump.h\n-builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(TREE_GIMPLE_H) $(FLAGS_H) $(TARGET_H) $(FUNCTION_H) $(REGS_H) \\\n-   $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n-   hard-reg-set.h toplev.h hard-reg-set.h except.h $(TM_P_H) $(PREDICT_H) \\\n-   libfuncs.h $(REAL_H) langhooks.h $(BASIC_BLOCK_H) tree-mudflap.h \\\n-   $(BUILTINS_DEF) $(MACHMODE_H) $(DIAGNOSTIC_H)\n-calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) langhooks.h $(TARGET_H) \\\n-   libfuncs.h $(REGS_H) toplev.h output.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_P_H) \\\n-   $(CGRAPH_H) except.h sbitmap.h $(DBGCNT_H)\n-expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) $(REAL_H) \\\n-   toplev.h $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H)\n-explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   $(FLAGS_H) hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   toplev.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n-   $(TARGET_H) output.h\n-optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h \\\n-   $(RECOG_H) reload.h toplev.h $(GGC_H) $(REAL_H) $(TM_P_H) except.h \\\n-   gt-optabs.h $(BASIC_BLOCK_H) $(TARGET_H) $(FUNCTION_H)\n-dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(FLAGS_H) $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) $(FUNCTION_H) \\\n-   langhooks.h insn-config.h reload.h gstab.h xcoffout.h output.h dbxout.h \\\n-   toplev.h $(GGC_H) $(OBSTACK_H) $(EXPR_H) gt-dbxout.h\n-debug.o : debug.c debug.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n-sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n-   $(TREE_H) $(GGC_H) $(RTL_H) $(REGS_H) $(FLAGS_H) insn-config.h \\\n-   output.h toplev.h $(TM_P_H) gsyms.h langhooks.h $(TARGET_H) sdbout.h \\\n-   gt-sdbout.h reload.h $(VARRAY_H)\n-dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) version.h $(RTL_H) dwarf2.h debug.h $(FLAGS_H) insn-config.h \\\n-   output.h $(DIAGNOSTIC_H) $(REAL_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n-   libfuncs.h toplev.h dwarf2out.h reload.h $(GGC_H) except.h dwarf2asm.h \\\n-   $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) \\\n-   $(MD5_H) input.h $(FUNCTION_H) $(VARRAY_H)\n-dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(FLAGS_H) $(RTL_H) $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H) \\\n-   gt-dwarf2asm.h dwarf2.h $(SPLAY_TREE_H) $(TARGET_H)\n-vmsdbgout.o : vmsdbgout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) version.h \\\n-   $(RTL_H) $(FLAGS_H) output.h vmsdbg.h debug.h langhooks.h $(FUNCTION_H) $(TARGET_H)\n-xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) xcoffout.h $(FLAGS_H) toplev.h output.h dbxout.h \\\n-   $(GGC_H) $(TARGET_H) debug.h gstab.h xcoff.h\n-emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) insn-config.h $(RECOG_H) \\\n-   $(GGC_H) $(EXPR_H) hard-reg-set.h bitmap.h toplev.h $(BASIC_BLOCK_H) \\\n-   $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h tree-pass.h gt-emit-rtl.h \\\n-   $(REAL_H) $(DF_H)\n-real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   toplev.h $(TM_P_H) $(REAL_H)\n-dfp.o : dfp.c dfp.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(TREE_H) \\\n-   toplev.h $(TM_P_H) $(REAL_H) $(DECNUM_H)\n-fixed-value.o: fixed-value.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) fixed-value.h $(REAL_H) toplev.h\n-integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) $(FLAGS_H) debug.h $(INTEGRATE_H) insn-config.h \\\n-   $(EXPR_H) $(REAL_H) $(REGS_H) intl.h $(FUNCTION_H) output.h $(RECOG_H) \\\n-   except.h toplev.h $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h \\\n-   gt-integrate.h $(GGC_H) tree-pass.h $(DF_H)\n-jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n-   $(REAL_H) except.h $(FUNCTION_H) tree-pass.h $(DIAGNOSTIC_H) \\\n-   toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H) \\\n-   $(TIMEVAR_H) $(TARGET_H)\n-simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) toplev.h output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n-   $(TREE_H) $(TARGET_H)\n-cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h toplev.h $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n-   gt-cgraph.h output.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n-   $(TREE_INLINE_H) $(VARRAY_H) $(TREE_DUMP_H) $(TREE_FLOW_H)\n-cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(FLAGS_H) $(GGC_H) \\\n-   $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(TREE_GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h \\\n-   gt-cgraphunit.h \n-cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(CGRAPH_H) intl.h pointer-set.h $(TREE_GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h\n-varpool.o : varpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(FLAGS_H) $(GGC_H) \\\n-   $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(TREE_GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h \\\n-   gt-varpool.h\n-ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H)\n-ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) ipa-prop.h \\\n-   $(TREE_FLOW_H) $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H)\n-ipa-cp.o : ipa-cp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   langhooks.h $(TARGET_H) $(CGRAPH_H) ipa-prop.h tree-inline.h tree-dump.h \\\n-   $(TREE_FLOW_H) $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H) $(DIAGNOSTIC_H)\n-matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   $(TARGET_H) $(CGRAPH_H) $(TREE_FLOW_H) $(TM_H) tree-pass.h  \\\n-   $(FLAGS_H) $(TREE_H) $(DIAGNOSTIC_H)\n-ipa-inline.o : ipa-inline.c gt-ipa-inline.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n-   $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TIMEVAR_H) tree-pass.h \\\n-   $(COVERAGE_H) $(HASHTAB_H) $(RTL_H)\n-ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n-   pointer-set.h $(GGC_H) $(C_COMMON_H) $(TREE_GIMPLE_H) \\\n-   $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)\n-ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n-   pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H)\n-\n-ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n-   pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(C_COMMON_H) $(TARGET_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)\n-ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n-   pointer-set.h $(GGC_H) $(IPA_TYPE_ESCAPE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H)\n-ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) \\\n-   $(EXPR_H) $(FUNCTION_H) toplev.h $(GGC_H) $(TARGET_H) langhooks.h $(COVERAGE_H) \\\n-   libfuncs.h gt-coverage.h $(HASHTAB_H) $(IPA_TYPE_ESCAPE_H)\n-\n-coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n-   $(FUNCTION_H) toplev.h $(GGC_H) langhooks.h $(COVERAGE_H) gt-coverage.h \\\n-   $(HASHTAB_H) $(CGRAPH_H) tree-iterator.h\n-cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(RECOG_H) \\\n-   $(EMIT_RTL_H) toplev.h output.h $(FUNCTION_H) cselib.h $(GGC_H) $(TM_P_H) \\\n-   gt-cselib.h $(PARAMS_H) alloc-pool.h $(HASHTAB_H) $(TARGET_H)\n-cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n-   hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n-   output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n-   except.h $(TARGET_H) $(PARAMS_H) rtlhooks-def.h tree-pass.h $(REAL_H) \\\n-   $(DF_H) $(DBGCNT_H)\n-dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(DF_H) cselib.h \\\n-   $(DBGCNT_H) dce.h timevar.h tree-pass.h $(DBGCNT_H)\n-dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(TM_P_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) timevar.h tree-pass.h \\\n-   alloc-pool.h $(ALIAS_H) dse.h $(OPTABS_H)\n-fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   toplev.h insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n-   output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) tree-pass.h\n-web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h \\\n-   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h\n-see.o : see.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h \\\n-   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h $(EXPR_H) dce.h\n-gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(GGC_H) \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h \\\n-   $(TM_P_H) $(PARAMS_H) except.h gt-gcse.h $(TREE_H) cselib.h $(TIMEVAR_H) \\\n-   intl.h $(OBSTACK_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n-resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(REGS_H) $(FLAGS_H) output.h $(RESOURCE_H) $(DF_H) \\\n-   $(FUNCTION_H) toplev.h $(INSN_ATTR_H) except.h $(PARAMS_H) $(TM_P_H)\n-lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n-   hard-reg-set.h $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n-   $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) output.h $(REAL_H)\n-mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(INSN_ATTR_H) $(RECOG_H) $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) \\\n-   output.h tree-pass.h $(TIMEVAR_H) $(REAL_H) $(DF_H)\n-tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-    coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-    $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(TREE_GIMPLE_H) $(CFGLOOP_H) \\\n-    $(SCEV_H)\n-tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n-   tree-ssa-propagate.h $(FLAGS_H) $(TARGET_H) toplev.h\n-tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n-    $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-    $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_GIMPLE_H) \\\n-    langhooks.h tree-pass.h $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-    bitmap.h $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(PARAMS_H) $(TARGET_H)\n-tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-    $(TM_H) $(RTL_H) $(REAL_H) $(FLAGS_H) $(TREE_FLOW_H) $(TREE_GIMPLE_H) \\\n-    tree-iterator.h tree-pass.h tree-ssa-propagate.h $(DIAGNOSTIC_H)\n-tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TM_H) $(TREE_FLOW_H) $(TREE_GIMPLE_H) tree-iterator.h tree-pass.h \\\n-    $(FLAGS_H) $(OPTABS_H) $(RTL_H) $(MACHMODE_H) $(EXPR_H) \\\n-    langhooks.h $(FLAGS_H) $(DIAGNOSTIC_H) gt-tree-vect-generic.h $(GGC_H) \\\n-    coretypes.h insn-codes.h\n-df-core.o : df-core.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) bitmap.h sbitmap.h \\\n-   $(TM_P_H) $(FLAGS_H) output.h tree-pass.h\n-df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) bitmap.h sbitmap.h $(TM_P_H) \\\n-   $(FLAGS_H) output.h except.h dce.h vecprim.h\n-df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) bitmap.h sbitmap.h $(TM_P_H) \\\n-   $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) output.h tree-pass.h\n-regstat.o : regstat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TM_P_H) $(FLAGS_H) $(REGS_H) output.h except.h hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) $(TIMEVAR_H) $(DF_H)\n-var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n-   $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n-   $(REGS_H) $(EXPR_H) $(TIMEVAR_H) tree-pass.h\n-profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) $(FUNCTION_H) \\\n-   toplev.h $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n-   $(CFGLOOP_H) $(TIMEVAR_H) tree-pass.h\n-tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n-   $(FUNCTION_H) toplev.h $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(TREE_FLOW_H) $(TIMEVAR_H) $(GGC_H) gt-tree-profile.h $(CGRAPH_H)\n-value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n-   $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h $(TIMEVAR_H) tree-pass.h\n-loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n-   toplev.h $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n-alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n-auto-inc-dec.o : auto-inc-dec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) insn-config.h \\\n-   $(REGS_H) $(FLAGS_H) output.h $(FUNCTION_H) except.h toplev.h $(RECOG_H) \\\n-   $(EXPR_H) $(TIMEVAR_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n-cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n-   $(REGS_H) hard-reg-set.h output.h toplev.h $(FUNCTION_H) except.h $(GGC_H) \\\n-   $(TM_P_H) $(TIMEVAR_H) $(OBSTACK_H) $(TREE_H) alloc-pool.h \\\n-   $(HASHTAB_H) $(DF_H) $(CFGLOOP_H) $(TREE_FLOW_H)\n-cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TIMEVAR_H) toplev.h $(CFGLOOP_H)\n-cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) except.h langhooks.h tree-pass.h $(RTL_H) \\\n-   $(DIAGNOSTIC_H) toplev.h $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n-   value-prof.h\n-cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h toplev.h $(FUNCTION_H) except.h $(TM_P_H) insn-config.h $(EXPR_H) \\\n-   $(CFGLAYOUT_H) $(CFGLOOP_H) $(OBSTACK_H) $(TARGET_H) $(TREE_H) \\\n-   tree-pass.h $(DF_H)\n-cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h insn-config.h $(RECOG_H) $(TM_P_H) \\\n-   $(TIMEVAR_H) $(OBSTACK_H) toplev.h\n-cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n-   $(FUNCTION_H) except.h $(TIMEVAR_H) $(TREE_H)\n-cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TIMEVAR_H) hard-reg-set.h output.h $(FLAGS_H) $(RECOG_H) \\\n-   toplev.h insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n-   $(REGS_H) $(EMIT_RTL_H) $(CFGLAYOUT_H) tree-pass.h $(CFGLOOP_H) $(EXPR_H) \\\n-   $(DF_H) $(DBGCNT_H)\n-cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   $(OBSTACK_H) toplev.h $(TREE_FLOW_H) $(TREE_H) pointer-set.h output.h \\\n-   $(GGC_H)\n-cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) \\\n-   $(OBSTACK_H) output.h graphds.h\n-graphds.o : graphds.c graphds.h $(CONFIG_H) $(SYSTEM_H) bitmap.h $(OBSTACK_H) \\\n-   coretypes.h vec.h vecprim.h\n-loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n-   output.h intl.h $(DF_H) $(HASHTAB_H)\n-loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h \\\n-   $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) $(OBSTACK_H) output.h \\\n-   $(HASHTAB_H) except.h\n-cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) output.h \\\n-   coretypes.h $(TM_H) cfghooks.h $(OBSTACK_H)\n-loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   coretypes.h $(TM_H) $(OBSTACK_H) tree-pass.h $(TIMEVAR_H) $(FLAGS_H) $(DF_H)\n-loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) $(PARAMS_H) \\\n-   output.h $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H)\n-loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) $(PARAMS_H) \\\n-   output.h $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n-   $(OBSTACK_H)\n-dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) toplev.h \\\n-   $(TIMEVAR_H) graphds.h vecprim.h pointer-set.h\n-et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   et-forest.h alloc-pool.h $(BASIC_BLOCK_H)\n-combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n-   rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) $(REAL_H) hard-reg-set.h \\\n-   toplev.h $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n-   insn-codes.h $(TIMEVAR_H) tree-pass.h $(DF_H)\n-regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n-   $(RECOG_H) reload.h $(REAL_H) toplev.h $(FUNCTION_H) output.h $(GGC_H) \\\n-   $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-regclass.h $(HASHTAB_H) \\\n-   $(TARGET_H) tree-pass.h $(DF_H)\n-local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n-   output.h $(FUNCTION_H) $(INSN_ATTR_H) toplev.h  except.h reload.h $(TM_P_H) \\\n-   $(GGC_H) $(INTEGRATE_H) $(TIMEVAR_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n-bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(GGC_H) gt-bitmap.h bitmap.h $(OBSTACK_H)\n-global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) reload.h $(FUNCTION_H) $(RECOG_H) $(REGS_H) hard-reg-set.h \\\n-   insn-config.h output.h toplev.h $(TM_P_H) $(MACHMODE_H) tree-pass.h \\\n-   $(TIMEVAR_H) vecprim.h $(DF_H) $(DBGCNT_H) $(RA_H)\n-ra-conflict.o : ra-conflict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) reload.h $(FUNCTION_H) $(RECOG_H) $(REGS_H) hard-reg-set.h \\\n-   insn-config.h output.h toplev.h $(TM_P_H) $(MACHMODE_H) tree-pass.h \\\n-   $(TIMEVAR_H) vecprim.h $(DF_H) $(RA_H) sbitmap.h \n-varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) \\\n-   $(HASHTAB_H) $(BCONFIG_H) $(VARRAY_H) toplev.h\n-vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h vec.h $(GGC_H) \\\n-   toplev.h\n-reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n-   hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h toplev.h \\\n-   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(REAL_H) $(DF_H)\n-reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H) toplev.h $(TM_P_H) \\\n-   addresses.h except.h $(TREE_H) $(REAL_H) $(FLAGS_H) $(MACHMODE_H) \\\n-   $(OBSTACK_H) $(DF_H) $(TARGET_H) dse.h\n-rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   rtlhooks-def.h $(EXPR_H) $(RECOG_H)\n-postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(REAL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n-   hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) output.h \\\n-   $(FUNCTION_H) toplev.h cselib.h $(TM_P_H) except.h $(TREE_H) $(MACHMODE_H) \\\n-   $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h $(DF_H)\n-postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h \\\n-   $(TM_P_H) except.h $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n-   $(PARAMS_H) $(TIMEVAR_H) tree-pass.h $(REAL_H) $(DBGCNT_H)\n-caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n-   addresses.h $(RECOG_H) reload.h $(EXPR_H) toplev.h $(TM_P_H) $(DF_H) \\\n-   gt-caller-save.h\n-bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) except.h \\\n-   $(RTL_H) hard-reg-set.h $(REGS_H) $(TM_P_H) $(FIBHEAP_H) output.h $(EXPR_H) \\\n-   $(TARGET_H) $(FLAGS_H) $(INSN_ATTR_H) $(FUNCTION_H) tree-pass.h toplev.h \\\n-   $(DF_H) $(GGC_H)\n-reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   conditions.h hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n-   $(INSN_ATTR_H) except.h $(RECOG_H) $(FUNCTION_H) $(FLAGS_H) output.h \\\n-   $(EXPR_H) toplev.h $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n-   $(TIMEVAR_H) $(TARGET_H) tree-pass.h\n-alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) toplev.h output.h \\\n-   $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n-   langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n-   $(SPLAY_TREE_H) $(VARRAY_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) tree-pass.h\n-stack-ptr-mod.o : stack-ptr-mod.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) tree-pass.h \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) output.h $(DF_H)\n-init-regs.o : init-regs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) tree-pass.h \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) $(DF_H)\n-regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   insn-config.h $(TIMEVAR_H) tree-pass.h $(DF_H)\\\n-   $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h reload.h\n-combine-stack-adj.o : combine-stack-adj.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) tree-pass.h \\\n-   $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h reload.h\n-ddg.o : ddg.c $(DDG_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) \\\n-   toplev.h $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n-   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) except.h $(RECOG_H) \\\n-   $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) bitmap.h \\\n-   hard-reg-set.h sbitmap.h $(TM_H)\n-modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TARGET_H) toplev.h $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n-   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) except.h $(RECOG_H) \\\n-   $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) $(PARAMS_H) \\\n-   cfghooks.h $(GCOV_IO_H) hard-reg-set.h $(TM_H) timevar.h tree-pass.h \\\n-   $(DF_H) $(DBGCNT_H)\n-haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n-   $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) $(TARGET_H) output.h \\\n-   $(PARAMS_H) $(DBGCNT_H)\n-sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h cselib.h \\\n-   $(PARAMS_H) $(TM_P_H) \n-sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) tree-pass.h $(DBGCNT_H)\n-sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) \\\n-   $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H) output.h \n-sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n-   $(TM_P_H) $(REAL_H) toplev.h tree-pass.h\n-final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n-   insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n-   except.h debug.h xcoffout.h toplev.h reload.h dwarf2out.h tree-pass.h \\\n-   $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) $(CFGLAYOUT_H) dbxout.h \\\n-   $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H) $(DF_H) vecprim.h $(GGC_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H)\n-recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n-   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) toplev.h output.h reload.h \\\n-   addresses.h $(TM_P_H) $(TIMEVAR_H) tree-pass.h hard-reg-set.h $(REAL_H) \\\n-   $(DF_H) $(DBGCNT_H)\n-reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   insn-config.h toplev.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) output.h $(VARRAY_H) $(TIMEVAR_H) tree-pass.h \\\n-   $(TARGET_H) vecprim.h $(DF_H)\n-sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) sreal.h\n-predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n-   hard-reg-set.h output.h toplev.h $(RECOG_H) $(FUNCTION_H) except.h \\\n-   $(TM_P_H) $(PREDICT_H) sreal.h $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) \\\n-   $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def $(TIMEVAR_H) $(TREE_DUMP_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(EXPR_H) pointer-set.h\n-lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n-   $(RTL_H) $(GGC_H) gt-lists.h\n-bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n-   $(TARGET_H) $(FUNCTION_H) $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n-   $(PARAMS_H) toplev.h tree-pass.h\n-tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n-   $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n-   tree-pass.h\n-cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h output.h \\\n-   $(FUNCTION_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(TARGET_H) gt-cfglayout.h \\\n-   $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) tree-pass.h vecprim.h \\\n-   $(DF_H)\n-timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TIMEVAR_H) $(FLAGS_H) intl.h toplev.h $(RTL_H) timevar.def\n-regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h toplev.h $(TIMEVAR_H) tree-pass.h $(DF_H)\n-ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) toplev.h $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n-   $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h except.h $(TM_P_H) \\\n-   $(REAL_H) $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) tree-pass.h \\\n-   $(DF_H) $(DBGCNT_H)\n-lambda-mat.o : lambda-mat.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) coretypes.h $(TREE_H)\n-lambda-trans.o: lambda-trans.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) coretypes.h $(TARGET_H) $(TREE_H)\n-lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n-   tree-chrec.h tree-pass.h vec.h vecprim.h $(OBSTACK_H)\n-params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) toplev.h\n-pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n-hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n-pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H) \\\n-   $(TREE_H)\n-errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h $(BCONFIG_H)\n-dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DBGCNT_H)\n-lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(TIMEVAR_H) $(FLAGS_H) \\\n-   insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) $(OBSTACK_H) bitmap.h \\\n-   $(EXPR_H) $(REGS_H) tree-pass.h $(DF_H)\n-\n-$(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(REGS_H) hard-reg-set.h insn-config.h conditions.h \\\n-   output.h $(INSN_ATTR_H) $(SYSTEM_H) toplev.h $(TARGET_H) libfuncs.h \\\n-   $(TARGET_DEF_H) $(FUNCTION_H) $(SCHED_INT_H) $(TM_P_H) $(EXPR_H) \\\n-   langhooks.h $(GGC_H) $(OPTABS_H) $(REAL_H) tm-constrs.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t\t$(out_file) $(OUTPUT_OPTION)\n-\n # Build auxiliary files that support ecoff format.\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n \n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) version.h $(srcdir)/../include/getopt.h gstab.h intl.h\n-\n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n \n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) version.h $(srcdir)/../include/getopt.h stab.def\n-\n-# FIXME: writing proper dependencies for this is a *LOT* of work.\n-libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n-  insn-config.h insn-flags.h insn-codes.h insn-constants.h \\\n-  insn-attr.h  $(DATESTAMP) $(BASEVER) $(DEVPHASE) gcov-iov.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n-\t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n-\t  -c $(filter %.c,$^) -o $@  \\\n-\t  -DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n-\t  -DREVISION=$(REVISION_s) \\\n-\t  -DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n-\t  -DBUGURL=$(BUGURL_s) -combine\n-\n #\f\n # Generate header and source files from the machine description,\n # and compile them.\n@@ -2941,43 +1764,6 @@ s-mddeps: $(md_file) $(MD_INCLUDES) build/genmddeps$(build_exeext)\n \t$(SHELL) $(srcdir)/../move-if-change tmp-mddeps mddeps.mk\n \t$(STAMP) s-mddeps\n \n-# Header dependencies for generated source files.\n-genrtl.o : genrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(RTL_H)\\\n-  $(GGC_H)\n-insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(REGS_H) $(REAL_H) output.h $(INSN_ATTR_H)\t\t\\\n-  insn-config.h toplev.h $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n-insn-automata.o : insn-automata.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(REGS_H) $(REAL_H) output.h $(INSN_ATTR_H)\t\t\\\n-  insn-config.h toplev.h $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n-insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n-  $(RTL_H) $(EXPR_H) $(REAL_H) output.h insn-config.h $(OPTABS_H)\t\\\n-  reload.h $(RECOG_H) toplev.h $(FUNCTION_H) $(FLAGS_H) hard-reg-set.h\t\\\n-  $(RESOURCE_H) $(TM_P_H) $(BASIC_BLOCK_H) $(INTEGRATE_H) tm-constrs.h\n-insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) toplev.h insn-config.h $(RECOG_H)\n-insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t$(TM_H) \\\n-  $(MACHMODE_H) $(REAL_H)\n-insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) insn-config.h $(FLAGS_H) $(RECOG_H) $(EXPR_H)\t\\\n-  $(OPTABS_H) reload.h\n-insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(GGC_H) $(REGS_H) $(REAL_H) conditions.h\t\t\\\n-  hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h\t\\\n-  $(RECOG_H) $(FUNCTION_H) toplev.h $(FLAGS_H) insn-codes.h $(TM_P_H)\t\\\n-  $(TARGET_H) tm-constrs.h\n-insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n-  $(RTL_H) $(REGS_H) output.h insn-config.h $(RECOG_H) except.h\t\t\\\n-  $(FUNCTION_H) $(TM_P_H) $(REAL_H) tm-constrs.h\n-insn-preds.o : insn-preds.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n-  $(TM_H) $(RTL_H) $(TREE_H) insn-config.h $(RECOG_H) output.h\t\t\\\n-  $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H)\t\\\n-  toplev.h reload.h $(REGS_H) $(REAL_H) tm-constrs.h\n-insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n-  $(TM_H) $(RTL_H) insn-config.h $(RECOG_H) output.h $(FLAGS_H)\t\t\\\n-  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) toplev.h\t\t\\\n-  reload.h $(REAL_H) tm-constrs.h\n-\n # For each of the files generated by running a generator program over\n # the machine description, the following pair of static pattern rules\n # runs the generator program only if the machine description has changed,\n@@ -3026,10 +1812,10 @@ s-check : build/gencheck$(build_exeext)\n \t$(STAMP) s-check\n \n # gencondmd doesn't use the standard naming convention.\n-build/gencondmd.c: s-conditions; @true\n+gencondmd.c: s-conditions; @true\n s-conditions: $(MD_DEPS) build/genconditions$(build_exeext)\n \t$(RUN_GEN) build/genconditions$(build_exeext) $(md_file) > tmp-condmd.c\n-\t$(SHELL) $(srcdir)/../move-if-change tmp-condmd.c build/gencondmd.c\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-condmd.c gencondmd.c\n \t$(STAMP) s-conditions\n \n insn-conditions.md: s-condmd; @true\n@@ -3097,7 +1883,8 @@ GTFILES = $(CPP_ID_DATA_H) $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(host_xm_file_list) \\\n   $(tm_file_list) $(HASHTAB_H) $(SPLAY_TREE_H) $(srcdir)/bitmap.h \\\n   $(srcdir)/alias.h $(srcdir)/coverage.c $(srcdir)/rtl.h \\\n-  $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/function.h $(srcdir)/libfuncs.h $(SYMTAB_H) \\\n+  $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/function.h \\\n+  $(srcdir)/libfuncs.h $(srcdir)/../libcpp/include/symtab.h \\\n   $(srcdir)/real.h $(srcdir)/varray.h $(srcdir)/insn-addr.h $(srcdir)/hwint.h \\\n   $(srcdir)/fixed-value.h \\\n   $(srcdir)/ipa-reference.h $(srcdir)/output.h $(srcdir)/cfgloop.h \\\n@@ -3161,84 +1948,67 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \\\n #\f\n # How to compile object files to run on the build machine.\n \n-build/%.o :  # dependencies provided by explicit rule later\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -o $@ $<\n-\n-# Header dependencies for the programs that generate source code.\n-# These are library modules...\n-build/errors.o : errors.c $(BCONFIG_H) $(SYSTEM_H) errors.h\n-build/gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(GTM_H) $(RTL_BASE_H) $(OBSTACK_H) errors.h $(HASHTAB_H)\t\t\\\n-  gensupport.h\n-build/ggc-none.o : ggc-none.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h \t\\\n-  $(GGC_H)\n-build/min-insn-modes.o : min-insn-modes.c $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  $(MACHMODE_H)\n-build/print-rtl.o: print-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(GTM_H) $(RTL_BASE_H)\n-build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(GTM_H) $(RTL_BASE_H) $(OBSTACK_H) $(HASHTAB_H) gensupport.h\n-build/rtl.o: rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\t\\\n-  $(RTL_H) $(REAL_H) $(GGC_H) errors.h\n-build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h vec.h \\\n-   $(GGC_H) toplev.h\n-build/gencondmd.o : build/gencondmd.c $(BCONFIG_H) $(SYSTEM_H)\t\t\\\n-  coretypes.h $(GTM_H) insn-constants.h $(RTL_H) $(TM_P_H)\t\t\\\n-  $(FUNCTION_H) $(REGS_H) $(RECOG_H) $(REAL_H) output.h $(FLAGS_H)\t\\\n-  $(RESOURCE_H) toplev.h reload.h except.h tm-constrs.h\n+BUILDCOMPILE.base = $(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -o $@\n+ifeq ($(BUILD_DEPMODE),depmode=gcc3)\n+BUILDCOMPILE = $(BUILDCOMPILE.base) -MT $@ -MMD -MP -MF build/$(DEPDIR)/$(*F).Po\n+else\n+BUILDCOMPILE = source='$<' object='$@' libtool=no \\\n+    DEPDIR=$(DEPDIR) $(BUILD_DEPMODE) $(depcomp) $(BUILDCOMPILE.base)\n+endif\n+\n+ALL_BUILD_OBJS = $(BUILD_RTL) $(BUILD_ERRORS) \\\n+\tbuild/gencondmd.o build/genattr.o build/genattrtab.o \\\n+\tbuild/genautomata.o build/gencheck.o build/genconstants.o \\\n+\tbuild/genemit.o build/genextract.o build/genflags.o \\\n+\tbuild/gengenrtl.o build/gengtype-lex.o build/gengtype-parse.o \\\n+\tbuild/gengtype.o build/genmddeps.o build/genmodes.o \\\n+\tbuild/genopinit.o build/genoutput.o build/genpeep.o \\\n+\tbuild/genpreds.o build/genrecog.o \\\n+\tbuild/gcov-iov.o build/gen-protos.o build/scan.o \\\n+\tbuild/fix-header.o build/scan-decls.o\n+\n+build/%.o : %.c bconfig.h\n+\t$(BUILDCOMPILE) $<\n+\n+# Dependencies on generated headers for various build/ objects.\n+build/gensupport.o: $(GTM_H)\n+build/ggc-none.o: gtype-desc.h\n+build/min-insn-modes.o: insn-modes.h\n+build/print-rtl.o: $(GTM_H) insn-modes.h\n+build/read-rtl.o: $(GTM_H) insn-modes.h\n+build/rtl.o: $(GTM_H) insn-modes.h gtype-desc.h\n+build/vec.o: gtype-desc.h\n+build/gencondmd.o: gencondmd.c $(GTM_H) insn-constants.h $(TM_P_H) \\\n+\ttm-constrs.h options.h gtype-desc.h genrtl.h tree-check.h\n+build/genattr.o: $(GTM_H)\n+build/genattrtab.o: $(GTM_H) gtype-desc.h\n+build/genautomata.o: insn-modes.h $(GTM_H)\n+build/gencheck.o: $(GTM_H) gencheck.h\n+build/gencodes.o: $(GTM_H)\n+build/genconditions.o: insn-modes.h\n+build/genconfig.o: $(GTM_H)\n+build/genconstants.o: $(GTM_H)\n+build/genemit.o: $(GTM_H)\n+build/genextract.o: $(GTM_H)\n+build/genflags.o: $(GTM_H)\n+build/genmddeps.o: $(GTM_H) insn-modes.h\n+build/genopinit.o: insn-modes.h $(GTM_H)\n+build/genoutput.o: insn-modes.h $(GTM_H)\n+build/genpeep.o: insn-modes.h $(GTM_H)\n+build/genpreds.o: insn-modes.h $(GTM_H)\n+build/genrecog.o: insn-modes.h $(GTM_H)\n+build/gcov-iov.o: $(GTM_H) $(TM_H)\n+build/gen-protos.o: $(GTM_H)\n+build/scan.o: $(GTM_H)\n+build/fix-header.o: xsys-protos.h $(GTM_H)\n+build/scan-decls.o: $(GTM_H)\n+\n # This pulls in tm-pred.h which contains inline functions wrapping up\n # predicates from the back-end so those functions must be discarded.\n # No big deal since gencondmd.c is a dummy file for non-GCC compilers.\n build/gencondmd.o : \\\n   BUILD_CFLAGS := $(filter-out -fkeep-inline-functions, $(BUILD_CFLAGS))\n \n-# ...these are the programs themselves.\n-build/genattr.o : genattr.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genattrtab.o : genattrtab.c $(RTL_BASE_H) $(OBSTACK_H)\t\t\\\n-  $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(GGC_H)\t\\\n-  gensupport.h\n-build/genautomata.o : genautomata.c $(RTL_BASE_H) $(OBSTACK_H)\t\t\\\n-  $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h vec.h\t\t\\\n-  $(HASHTAB_H) gensupport.h\n-build/gencheck.o : gencheck.c gencheck.h tree.def $(BCONFIG_H) $(GTM_H)\t\\\n-\t$(SYSTEM_H) coretypes.h $(lang_tree_files)\n-build/genchecksum.o : genchecksum.c $(BCONFIG_H) $(SYSTEM_H) $(MD5_H)\n-build/gencodes.o : gencodes.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genconditions.o : genconditions.c $(RTL_BASE_H) $(BCONFIG_H)\t\\\n-  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h\n-build/genconfig.o : genconfig.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genconstants.o : genconstants.c $(RTL_BASE_H) $(BCONFIG_H)\t\\\n-  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h\n-build/genemit.o : genemit.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genextract.o : genextract.c $(RTL_BASE_H) $(BCONFIG_H)\t\t\\\n-  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h vecprim.h\n-build/genflags.o : genflags.c $(RTL_BASE_H) $(OBSTACK_H) $(BCONFIG_H)\t\\\n-  $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-build/gengenrtl.o : gengenrtl.c $(BCONFIG_H) $(SYSTEM_H) rtl.def\n-build/gengtype-lex.o : gengtype-lex.c gengtype.h $(BCONFIG_H) $(SYSTEM_H)\n-build/gengtype-parse.o : gengtype-parse.c gengtype.h $(BCONFIG_H)\t\\\n-  $(SYSTEM_H)\n-build/gengtype.o : gengtype.c $(BCONFIG_H) $(SYSTEM_H) gengtype.h \t\\\n-  rtl.def insn-notes.def errors.h double-int.h\n-build/genmddeps.o: genmddeps.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(GTM_H) $(RTL_BASE_H) errors.h gensupport.h\n-build/genmodes.o : genmodes.c $(BCONFIG_H) $(SYSTEM_H) errors.h\t\t\\\n-  $(HASHTAB_H) machmode.def $(extra_modes_file)\n-build/genopinit.o : genopinit.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genoutput.o : genoutput.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-build/genpeep.o : genpeep.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h toplev.h\n-build/genpreds.o : genpreds.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h $(OBSTACK_H)\n-build/genrecog.o : genrecog.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h\n-\n # Compile the programs that generate insn-* from the machine description.\n # They are compiled with $(CC_FOR_BUILD), and associated libraries,\n # since they need to run on this machine\n@@ -3267,13 +2037,6 @@ build/gengtype$(build_exeext) : build/gengtype-lex.o build/gengtype-parse.o \\\n gengtype-lex.c : gengtype-lex.l\n \t-$(FLEX) $(FLEXFLAGS) -o$@ $<\n \n-#\f\n-# Remake internationalization support.\n-intl.o: intl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n-\t  -c $(srcdir)/intl.c $(OUTPUT_OPTION)\n-\n #\f\n # Remake cpp and protoize.\n \n@@ -3290,12 +2053,6 @@ PREPROCESSOR_DEFINES = \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc/\\\" \\\n   @TARGET_SYSTEM_ROOT_DEFINE@\n \n-cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\tcppdefault.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  $(PREPROCESSOR_DEFINES) \\\n-\t  -c $(srcdir)/cppdefault.c $(OUTPUT_OPTION)\n-\n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon).\n \n@@ -3309,20 +2066,6 @@ protoize$(exeext): protoize.o $(PROTO_OBJS) $(LIBDEPS)\n unprotoize$(exeext): unprotoize.o $(PROTO_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ unprotoize.o $(PROTO_OBJS) $(LIBS)\n \n-protoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) Makefile version.h cppdefault.h intl.h\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  $(DRIVER_DEFINES) \\\n-\t  $(srcdir)/protoize.c $(OUTPUT_OPTION))\n-\n-unprotoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) \\\n-    $(SYSTEM_H) coretypes.h $(TM_H) Makefile version.h cppdefault.h intl.h\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c -DUNPROTOIZE $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  $(DRIVER_DEFINES) \\\n-\t  $(srcdir)/protoize.c $(OUTPUT_OPTION))\n-\n # This info describes the target machine, so compile with GCC just built.\n SYSCALLS.c.X: $(srcdir)/sys-types.h $(srcdir)/sys-protos.h $(GCC_PASSES) \\\n    stmp-int-hdrs\n@@ -3365,10 +2108,6 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \tdiff $(srcdir)/protoize.c tmp-proto.c | cat\n \t-rm -f tmp-proto.[cs] tmp-proto$(objext)\n \n-# gcov-iov.c is run on the build machine to generate gcov-iov.h from version.c\n-build/gcov-iov.o: gcov-iov.c $(BCONFIG_H) coretypes.h $(GTM_H) \\\n-  $(SYSTEM_H) coretypes.h $(TM_H)\n-\n build/gcov-iov$(build_exeext): build/gcov-iov.o\n \t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) build/gcov-iov.o -o $@\n \n@@ -3379,11 +2118,6 @@ s-iov: build/gcov-iov$(build_exeext) $(BASEVER) $(DEVPHASE)\n \t$(SHELL) $(srcdir)/../move-if-change tmp-gcov-iov.h gcov-iov.h\n \t$(STAMP) s-iov\n \n-gcov.o: gcov.c gcov-io.c $(GCOV_IO_H) intl.h $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(CONFIG_H) version.h\n-gcov-dump.o: gcov-dump.c gcov-io.c $(GCOV_IO_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(CONFIG_H)\n-\n GCOV_OBJS = gcov.o intl.o version.o errors.o\n gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n@@ -3549,11 +2283,6 @@ build/gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n \t${CC_FOR_BUILD} $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t  $(GEN_PROTOS_OBJS) $(BUILD_LIBS)\n \n-build/gen-protos.o: gen-protos.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(GTM_H) errors.h\n-\n-build/scan.o: scan.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h \\\n   build/gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n@@ -3574,11 +2303,6 @@ build/fix-header$(build_exeext): build/fix-header.o build/scan-decls.o \\\n \t build/fix-header.o c-incpath.o cppdefault.o build/scan-decls.o prefix.o \\\n \t build/scan.o $(BUILD_ERRORS) $(LIBS)\n \n-build/fix-header.o: fix-header.c $(OBSTACK_H) scan.h errors.h \\\n-\txsys-protos.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(CPPLIB_H)\n-\n-build/scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,\n # but not rerun fixproto after each stage\n@@ -3891,6 +2615,7 @@ distclean: clean lang.distclean\n \t-rm -f gcov.pod\n # Delete po/*.gmo only if we are not building in the source directory.\n \t-if [ ! -f po/exgettext ]; then rm -f po/*.gmo; fi\n+\t-rm -rf $(DEPDIR) */$(DEPDIR)\n \t-rmdir ada cp f java objc intl po testsuite 2>/dev/null\n \n # Get rid of every file that's generated from some other file, except for `configure'.\n@@ -4474,3 +3199,79 @@ po/gcc.pot: force\n \t$(MAKE) srcextra\n \tAWK=$(AWK) $(SHELL) $(srcdir)/po/exgettext \\\n \t\t$(XGETTEXT) gcc $(srcdir)\n+\n+#\f\n+\n+# Dependency information.\n+\n+# Add flags needed by some particular compilations.\n+collect2.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) \\\n+\t\t-DTARGET_MACHINE=\\\"$(target_noncanonical)\\\"\n+c-opts.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) @TARGET_SYSTEM_ROOT_DEFINE@\n+gcc.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n+gccspec.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n+gcc-options.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) -DGCC_DRIVER\n+cppdefault.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(PREPROCESSOR_DEFINES)\n+protoize.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n+unprotoize.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES) -DUNPROTOIZE\n+# Remake internationalization support.\n+intl.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) -DLOCALEDIR=\\\"$(localedir)\\\"\n+\n+# We need an explicit dependency here, because these are not directly\n+# included but their contents are included via command line options.\n+ifdef REVISION_s\n+version.o: version.c version.h $(REVISION) $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n+else\n+version.o: version.c version.h $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n+endif\n+\n+version.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) \\\n+\t-DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n+\t-DREVISION=$(REVISION_s) \\\n+\t-DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n+\t-DBUGURL=$(BUGURL_s)\n+prefix.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) -DPREFIX=\\\"$(prefix)\\\" \\\n+\t-DBASEVER=$(BASEVER_s)\n+toplev.o : \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) -DTARGET_NAME=\\\"$(target_noncanonical)\\\"\n+\n+# Special code and dependencies for -combine compilation.\n+libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n+  $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n+\t$(COMPILE) \\\n+\t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n+\t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n+\t  $(filter %.c,$^) \\\n+\t  -DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n+\t  -DREVISION=$(REVISION_s) \\\n+\t  -DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n+\t  -DBUGURL=$(BUGURL_s) -combine\n+\n+# A couple object files don't share a base name with their source files.\n+$(out_object_file): $(out_file)\n+\t$(COMPILE) $<\n+gcc-options.o: options.c\n+\t$(COMPILE) $<\n+\n+# Make sure generated files are built at the right time.\n+$(ALL_HOST_OBJS): | $(generated_files)\n+\n+# Include the auto-generated dependencies for all host objects.\n+DEPFILES = \\\n+  $(foreach obj,$(ALL_HOST_OBJS),\\\n+    $(dir $(obj))$(DEPDIR)$(patsubst %.o,%.Po,$(notdir $(obj))))\n+-include $(DEPFILES)\n+\n+# Include the auto-generated dependencies for all build objects.\n+-include $(patsubst %.o,build/$(DEPDIR)/%.Po,$(ALL_BUILD_OBJS))"}, {"sha": "48dc579ee8801a5672327595ac1bcf33e6436dc1", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -94,9 +94,11 @@ fi\n \n m4_include([../config/acx.m4])\n m4_include([../config/codeset.m4])\n+m4_include([../config/depstand.m4])\n m4_include([../config/gettext-sister.m4])\n m4_include([../config/iconv.m4])\n m4_include([../config/lcmessage.m4])\n+m4_include([../config/lead-dot.m4])\n m4_include([../config/lib-ld.m4])\n m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])"}, {"sha": "156ad976ce29f1c8ed4fe864afd0cee07a750a75", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -24,7 +24,5 @@ $(srcdir)/config/arm/arm-tune.md: $(srcdir)/config/arm/gentune.sh \\\n \t\t$(srcdir)/config/arm/arm-cores.def > \\\n \t\t$(srcdir)/config/arm/arm-tune.md\n \n-arm-c.o: $(srcdir)/config/arm/arm-c.c $(CONFIG_H) $(SYSTEM_H) \\\n-    coretypes.h $(TM_H) $(TREE_H) output.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/arm-c.c\n-\n+arm-c.o: $(srcdir)/config/arm/arm-c.c\n+\t$(COMPILE) $<"}, {"sha": "f2a7d68383d424e1df414537dd7c3e30881494ac", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -20,9 +20,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n-pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n+pe.o: $(srcdir)/config/arm/pe.c\n+\t$(COMPILE) $<\n \n MULTILIB_OPTIONS = mhard-float mthumb\n MULTILIB_DIRNAMES = fpu thumb"}, {"sha": "4058850635cb7cf98eb4807bbd99ac72bac55ef2", "filename": "gcc/config/arm/t-strongarm-pe", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-strongarm-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-strongarm-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-strongarm-pe?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -20,9 +20,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n-pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n+pe.o: $(srcdir)/config/arm/pe.c\n+\t$(COMPILE) $<\n \n MULTILIB_OPTIONS  = mhard-float/msoft-float\n MULTILIB_DIRNAMES = fpu soft"}, {"sha": "232685351f881eab422d16e1f63f0b1fdcaf165d", "filename": "gcc/config/arm/t-wince-pe", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -20,9 +20,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n-pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n+pe.o: $(srcdir)/config/arm/pe.c\n+\t$(COMPILE) $<\n \n MULTILIB_OPTIONS = mhard-float\n MULTILIB_DIRNAMES = fpu"}, {"sha": "849dceed483c4e0b79a0e48ffb4e73d6537aa5fb", "filename": "gcc/config/bfin/t-bfin-linux", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -33,3 +33,5 @@ linux-sysroot-suffix.h: $(srcdir)/config/bfin/print-sysroot-suffix.sh\n \t$(SHELL) $(srcdir)/config/bfin/print-sysroot-suffix.sh \\\n \t  \"$(SYSTEM_HEADER_DIR)/../..\" \"$(MULTILIB_MATCHES)\" \\\n \t  \"$(MULTILIB_OPTIONS)\" > $@\n+\n+generated_files += linux-sysroot-suffix.h"}, {"sha": "0a0315e4ea99a48d6f586e6c07e46bfd4b017011", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -10,29 +10,16 @@ LIMITS_H_TEST = true\n # first.\n LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/w32api/include\n \n-winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/winnt.c\n+winnt.o: $(srcdir)/config/i386/winnt.c\n+\t$(COMPILE) $<\n \n-winnt-cxx.o: $(srcdir)/config/i386/winnt-cxx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/winnt-cxx.c\n+winnt-cxx.o: $(srcdir)/config/i386/winnt-cxx.c\n+\t$(COMPILE) $<\n \n+winnt-stubs.o: $(srcdir)/config/i386/winnt-stubs.c\n+\t$(COMPILE) $<\n \n-winnt-stubs.o: $(srcdir)/config/i386/winnt-stubs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/winnt-stubs.c\n-\n-msformat-c.o: $(srcdir)/config/i386/msformat-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/msformat-c.c\n+msformat-c.o: $(srcdir)/config/i386/msformat-c.c\n+\t$(COMPILE) $<\n \n STMP_FIXINC=stmp-fixinc"}, {"sha": "b8a22d84fae5630efa637e77aff4acb761685a30", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -4,13 +4,8 @@\n LIBGCC2_INCLUDES += -I$(srcdir)/../winsup/include \\\n \t-I$(srcdir)/../winsup/cygwin/include\n \n-cygwin1.o: $(srcdir)/config/i386/cygwin1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/cygwin1.c\n-\n-cygwin2.o: $(srcdir)/config/i386/cygwin2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/i386/cygwin2.c\n+cygwin1.o: $(srcdir)/config/i386/cygwin1.c\n+\t$(COMPILE) $<\n \n+cygwin2.o: $(srcdir)/config/i386/cygwin2.c\n+\t$(COMPILE) $<"}, {"sha": "b62394005ae375de7cc4a09cf250542cca68e4aa", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,7 +1,5 @@\n LIB1ASMSRC = i386/cygwin.asm\n LIB1ASMFUNCS = _chkstk\n \n-winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n+winnt.o: $(srcdir)/config/i386/winnt.c\n+\t$(COMPILE) $<"}, {"sha": "6e35a431e5e0432415976908f96d65edebd903b8", "filename": "gcc/config/i386/t-netware", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-netware", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-netware", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-netware?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,7 +1,7 @@\n TARGET_LIBGCC2_CFLAGS = -mpreferred-stack-boundary=2 -fomit-frame-pointer\n \n-netware.o: $(srcdir)/config/i386/netware.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/netware.c\n+netware.o: $(srcdir)/config/i386/netware.c\n+\t$(COMPILE) $<\n \n # We don't need some of GCC's own include files.\n USER_H = $(srcdir)/ginclude/stdarg.h \\"}, {"sha": "a8894894ece906b3a333d377c26c185dc060ddbf", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -20,8 +20,8 @@ $(T)posixpre.def: $(srcdir)/config/i386/t-nwld\n \techo \"exit POSIX_Stop\" >>$@\n \techo \"check POSIX_CheckUnload\" >>$@\n \n-nwld.o: $(srcdir)/config/i386/nwld.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/nwld.c\n+nwld.o: $(srcdir)/config/i386/nwld.c\n+\t$(COMPILE) $<\n \n \n s-crt0: $(srcdir)/unwind-dw2-fde.h"}, {"sha": "0fc84de4f75ead2deb6eae5bbfdac5cbd88b26aa", "filename": "gcc/config/i386/x-cygwin", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-cygwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,3 @@\n-host-cygwin.o : $(srcdir)/config/i386/host-cygwin.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h diagnostic.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/i386/host-cygwin.c\n+host-cygwin.o : $(srcdir)/config/i386/host-cygwin.c\n+\t$(COMPILE) $<\n+"}, {"sha": "be8f8130e66d196ae6310248a2f0caf064de4260", "filename": "gcc/config/i386/x-darwin", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-darwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-i386-darwin.o : $(srcdir)/config/i386/host-i386-darwin.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) \\\n-  config/host-darwin.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+host-i386-darwin.o : $(srcdir)/config/i386/host-i386-darwin.c\n+\t$(COMPILE) $<"}, {"sha": "3fbe84f7eccca278165d15c5cd76348416a341cf", "filename": "gcc/config/i386/x-i386", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-i386?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-driver-i386.o : $(srcdir)/config/i386/driver-i386.c \\\n-  $(srcdir)/config/i386/cpuid.h \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+driver-i386.o : $(srcdir)/config/i386/driver-i386.c\n+\t$(COMPILE) $<"}, {"sha": "1d9d11f9f50a7c2368282031f51599a576a50744", "filename": "gcc/config/i386/x-mingw32", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fi386%2Fx-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -7,7 +7,5 @@ local_includedir=$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|\n # code does not handle that, so we have to disable checking here.\n WERROR_FLAGS += -Wno-format\n \n-host-mingw32.o : $(srcdir)/config/i386/host-mingw32.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h toplev.h diagnostic.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/i386/host-mingw32.c\n+host-mingw32.o : $(srcdir)/config/i386/host-mingw32.c\n+\t$(COMPILE) $<"}, {"sha": "d8bb0b443b46ebe995ec61fb0364f72eca7c0f5f", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -26,9 +26,8 @@ T = disable\n LIB2ADDEH = $(srcdir)/config/ia64/unwind-ia64.c $(srcdir)/unwind-sjlj.c \\\n   $(srcdir)/unwind-c.c\n \n-ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n-    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) c-pragma.h toplev.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/ia64/ia64-c.c\n+ia64-c.o: $(srcdir)/config/ia64/ia64-c.c\n+\t$(COMPILE) $<\n \n # genattrtab generates very long string literals.\n insn-attrtab.o-warn = -Wno-error"}, {"sha": "5d5f2c133564367de850a2160b145b052b55258b", "filename": "gcc/config/m32c/t-m32c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fm32c%2Ft-m32c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fm32c%2Ft-m32c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Ft-m32c?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -56,8 +56,8 @@ md : $(MD_FILES:%=$(srcdir)/config/m32c/%.md) $(srcdir)/config/m32c/t-m32c\n \t  echo \"(include \\\"$(srcdir)/config/m32c/$$md.md\\\")\"; \\\n \tdone > md\n \n-m32c-pragma.o: $(srcdir)/config/m32c/m32c-pragma.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+m32c-pragma.o: $(srcdir)/config/m32c/m32c-pragma.c\n+\t$(COMPILE) $<\n \n # We support four CPU series, but R8C and M16C share one multilib, and\n # M32C and M32CM share another."}, {"sha": "f8606723303642cfb34963ccc80a1fa980ffca7e", "filename": "gcc/config/m68k/t-uclinux", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-uclinux?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -14,3 +14,5 @@ sysroot-suffix.h: $(srcdir)/config/m68k/print-sysroot-suffix.sh\n \t$(SHELL) $(srcdir)/config/m68k/print-sysroot-suffix.sh \\\n \t  \"$(SYSTEM_HEADER_DIR)/../..\" \"$(MULTILIB_MATCHES)\" \\\n \t  \"$(MULTILIB_OPTIONS)\" > $@\n+\n+generated_files += sysroot-suffix.h"}, {"sha": "161f4d18dd6d626b7d8d610f8db705749acea2a2", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -2,19 +2,8 @@\n \n gt-rs6000.h: s-gtype ; @true\n \n-rs6000.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) $(REGS_H) hard-reg-set.h \\\n-  real.h insn-config.h conditions.h insn-attr.h flags.h $(RECOG_H) \\\n-  $(OBSTACK_H) $(TREE_H) $(EXPR_H) $(OPTABS_H) except.h function.h \\\n-  output.h $(BASIC_BLOCK_H) $(INTEGRATE_H) toplev.h $(GGC_H) $(HASHTAB_H) \\\n-  $(TM_P_H) $(TARGET_H) $(TARGET_DEF_H) langhooks.h reload.h gt-rs6000.h \\\n-  cfglayout.h\n-\n-rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c \\\n-    $(srcdir)/config/rs6000/rs6000-protos.h \\\n-    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n-    $(TM_P_H) c-pragma.h errors.h coretypes.h $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/rs6000/rs6000-c.c\n+rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c\n+\t$(COMPILE) $<\n \n # The rs6000 backend doesn't cause warnings in these files.\n insn-conditions.o-warn ="}, {"sha": "ac1f2fc465466e792d2817d0693050be98dcd311", "filename": "gcc/config/rs6000/x-darwin", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-darwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-ppc-darwin.o : $(srcdir)/config/rs6000/host-darwin.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h \\\n-  config/host-darwin.h $(DIAGNOSTIC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< -o $@\n+host-ppc-darwin.o : $(srcdir)/config/rs6000/host-darwin.c\n+\t$(COMPILE) $<"}, {"sha": "4b13bbbe2362492694e5e6252478c6204eb4ee7c", "filename": "gcc/config/rs6000/x-darwin64", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-darwin64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-darwin64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-darwin64?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-ppc64-darwin.o : $(srcdir)/config/rs6000/host-ppc64-darwin.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h \\\n-  config/host-darwin.h $(DIAGNOSTIC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< -o $@\n+host-ppc64-darwin.o : $(srcdir)/config/rs6000/host-ppc64-darwin.c\n+\t$(COMPILE) $<"}, {"sha": "8190b3426e6ee898934cf5fe533f256311f89d6a", "filename": "gcc/config/rs6000/x-rs6000", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-rs6000?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,2 @@\n-driver-rs6000.o : $(srcdir)/config/rs6000/driver-rs6000.c \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+driver-rs6000.o : $(srcdir)/config/rs6000/driver-rs6000.c\n+\t$(COMPILE) $<"}, {"sha": "ed18d2938c969cc312b0fd42a398103cfeb4797b", "filename": "gcc/config/score/t-score-elf", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fscore%2Ft-score-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fscore%2Ft-score-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Ft-score-elf?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,15 +1,9 @@\n # Additional Backend Files\n-score7.o: $(srcdir)/config/score/score7.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n-  expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/score/score7.c\n-\n-score3.o: $(srcdir)/config/score/score3.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n-  expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t$(srcdir)/config/score/score3.c\n+score7.o: $(srcdir)/config/score/score7.c\n+\t$(COMPILE) $<\n+\n+score3.o: $(srcdir)/config/score/score3.c\n+\t$(COMPILE) $<\n \n \n # Assemble startup files."}, {"sha": "4661ab7b53a2f8d32611870589a9ff2aaed3c7b3", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,6 +1,5 @@\n-sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/sh-c.c\n+sh-c.o: $(srcdir)/config/sh/sh-c.c\n+\t$(COMPILE) $<\n \n LIB1ASMSRC = sh/lib1funcs.asm\n LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movmem \\"}, {"sha": "f2c49d293c2a8fd688a3ba9844cb5bcc14066397", "filename": "gcc/config/sh/t-symbian", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fsh%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fsh%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-symbian?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,6 +1,5 @@\n-sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/sh-c.c\n+sh-c.o: $(srcdir)/config/sh/sh-c.c\n+\t$(COMPILE) $<\n \n LIB1ASMSRC = sh/lib1funcs.asm\n LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movstr \\\n@@ -29,9 +28,8 @@ $(T)crtn.o: $(srcdir)/config/sh/crtn.asm $(GCC_PASSES)\n $(out_object_file): gt-sh.h\n gt-sh.h : s-gtype ; @true\n \n-symbian.o: $(srcdir)/config/sh/symbian.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/symbian.c\n+symbian.o: $(srcdir)/config/sh/symbian.c\n+\t$(COMPILE) $<\n \n \n # Local Variables:"}, {"sha": "683f312e88adc6b4f577d6cccc512fe6d54dfd22", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -63,21 +63,5 @@ EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n-spu.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) $(REGS_H) hard-reg-set.h \\\n-  real.h insn-config.h conditions.h insn-attr.h flags.h $(RECOG_H) \\\n-  $(OBSTACK_H) $(TREE_H) $(EXPR_H) $(OPTABS_H) except.h function.h \\\n-  output.h $(BASIC_BLOCK_H) $(INTEGRATE_H) toplev.h $(GGC_H) $(HASHTAB_H) \\\n-  $(TM_P_H) $(TARGET_H) $(TARGET_DEF_H) langhooks.h reload.h cfglayout.h \\\n-  $(srcdir)/config/spu/spu-protos.h \\\n-  $(srcdir)/config/spu/spu-builtins.h \\\n-  $(srcdir)/config/spu/spu-builtins.def \n-\n-spu-c.o: $(srcdir)/config/spu/spu-c.c \\\n-    $(srcdir)/config/spu/spu-protos.h \\\n-    $(srcdir)/config/spu/spu-builtins.h \\\n-    $(srcdir)/config/spu/spu-builtins.def \\\n-    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n-    $(TM_P_H) c-pragma.h errors.h coretypes.h $(TM_H) insn-codes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/spu/spu-c.c\n-\n+spu-c.o: $(srcdir)/config/spu/spu-c.c\n+\t$(COMPILE) $<"}, {"sha": "0a3f80cb9352c336920a03818b029bd9b647201d", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,21 +1,13 @@\n-darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n-  $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(REAL_H) insn-config.h         \\\n-  conditions.h insn-flags.h output.h insn-attr.h flags.h $(TREE_H) expr.h   \\\n-  reload.h function.h $(GGC_H) langhooks.h $(TARGET_H) $(TM_P_H) gt-darwin.h \\\n-  config/darwin-sections.def\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin.c\n+darwin.o: $(srcdir)/config/darwin.c\n+\t$(COMPILE) $<\n \n-darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h $(C_TREE_H) toplev.h $(TM_P_H) \\\n-  c-incpath.h flags.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)\n+darwin-c.o: $(srcdir)/config/darwin-c.c\n+\t$(COMPILE) $(PREPROCESSOR_DEFINES) $<\n \n gt-darwin.h : s-gtype ; @true\n \n-darwin-driver.o: $(srcdir)/config/darwin-driver.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/config/darwin-driver.c\n+darwin-driver.o: $(srcdir)/config/darwin-driver.c\n+\t$(COMPILE) $<\n \n # How to build crt3.o\n EXTRA_MULTILIB_PARTS=crt3.o"}, {"sha": "f592c0a39a38aedba3c881a3d2400de5944a6c69", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,12 +1,7 @@\n # Solaris-specific format checking and pragmas\n-sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  tree.h c-format.h intl.h $(CPPLIB_H) c-pragma.h $(TM_H) $(TM_P_H) \\\n-  toplev.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/config/sol2-c.c\n+sol2-c.o: $(srcdir)/config/sol2-c.c\n+\t$(COMPILE) $<\n \n # Solaris-specific attributes\n-sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  tree.h $(TM_H) $(TM_P_H) toplev.h $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/config/sol2.c\n+sol2.o: $(srcdir)/config/sol2.c\n+\t$(COMPILE) $<"}, {"sha": "8c1a28e3f0af705068a66f8a2489313144d3ceac", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -32,6 +32,5 @@ LIMITS_H_TEST = true\n \n EXTRA_MULTILIB_PARTS = \n \n-vxworks.o: $(srcdir)/config/vxworks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TARGET_H) toplev.h output.h $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+vxworks.o: $(srcdir)/config/vxworks.c\n+\t$(COMPILE) $<"}, {"sha": "4d082baa6308ede4836072c5284d07e87aecaac3", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -88,9 +88,8 @@ MULTILIB_MATCHES  = mv850e=mv850e1\n \n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n-v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/v850/v850-c.c \n+v850-c.o: $(srcdir)/config/v850/v850-c.c\n+\t$(COMPILE) $<\n \n # Local Variables:\n # mode: Makefile"}, {"sha": "7f3e0b43f659b5bc6d86d920af3dcf309fdeb64c", "filename": "gcc/config/v850/t-v850e", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fv850%2Ft-v850e", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fv850%2Ft-v850e", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850e?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -87,9 +87,8 @@ INSTALL_LIBGCC    = install-multilib\n \n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n-v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/v850/v850-c.c \n+v850-c.o: $(srcdir)/config/v850/v850-c.c\n+\t$(COMPILE) $<\n \n # Local Variables:\n # mode: Makefile"}, {"sha": "0592ded7ab038751c66bcfc329b3e1efd3f2f014", "filename": "gcc/config/x-darwin", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-darwin?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,2 @@\n-host-darwin.o : $(srcdir)/config/host-darwin.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h toplev.h config/host-darwin.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+host-darwin.o : $(srcdir)/config/host-darwin.c\n+\t$(COMPILE) $<"}, {"sha": "4cf9fa70e5569f9267ef23749f266e9013ba7171", "filename": "gcc/config/x-hpux", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-hpux?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-hpux.o : $(srcdir)/config/host-hpux.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/host-hpux.c\n+host-hpux.o : $(srcdir)/config/host-hpux.c\n+\t$(COMPILE) $<"}, {"sha": "cb549284b4e68a7afd18c036744d71417cc39d7f", "filename": "gcc/config/x-linux", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-linux?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-linux.o : $(srcdir)/config/host-linux.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/host-linux.c\n+host-linux.o : $(srcdir)/config/host-linux.c\n+\t$(COMPILE) $<"}, {"sha": "b3a946f27151efbb3b1d23927ec98e9f18dafeb5", "filename": "gcc/config/x-solaris", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-solaris", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfig%2Fx-solaris", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-solaris?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,4 +1,2 @@\n-host-solaris.o : $(srcdir)/config/host-solaris.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/host-solaris.c\n+host-solaris.o : $(srcdir)/config/host-solaris.c\n+\t$(COMPILE) $<"}, {"sha": "b09d67b78a46cc84a6a83d6e543a9c706beb191a", "filename": "gcc/configure", "status": "modified", "additions": 146, "deletions": 1, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn cxx_compat_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir objdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn cxx_compat_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT am__leading_dot DEPDIR CCDEPMODE BUILD_DEPMODE gcc_tooldir dollar slibdir objdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n \n # Initialize some variables set by options.\n@@ -12800,6 +12800,9 @@ else\n \t\t--target=$target_alias --host=$build_alias --build=$build_alias\n \tCFLAGS=\"${saved_CFLAGS}\"\n \n+\t# Extract this setting from the temporary Makefile.\n+\tBUILD_DEPMODE=`grep '^BUILD_DEPMODE = ' Makefile | sed -e 's,.* = ,,'`\n+\n \t# We just finished tests for the build machine, so rename\n \t# the file auto-build.h in the gcc directory.\n \tmv auto-host.h ../auto-build.h\n@@ -17034,6 +17037,133 @@ do\n \techo \"lang.$t: $x\" >> Make-hooks\n done\n \n+# --------\n+# Dependency checking.\n+# --------\n+\n+rm -rf .tst 2>/dev/null\n+mkdir .tst 2>/dev/null\n+if test -d .tst; then\n+  am__leading_dot=.\n+else\n+  am__leading_dot=_\n+fi\n+rmdir .tst 2>/dev/null\n+\n+DEPDIR=\"${am__leading_dot}deps\"\n+\n+          ac_config_commands=\"$ac_config_commands depdir\"\n+\n+\n+          ac_config_commands=\"$ac_config_commands gccdepdir\"\n+\n+\n+depcc=\"$CC\"   am_compiler_list=\n+\n+am_depcomp=$ac_aux_dir/depcomp\n+echo \"$as_me:$LINENO: checking dependency style of $depcc\" >&5\n+echo $ECHO_N \"checking dependency style of $depcc... $ECHO_C\" >&6\n+if test \"${am_cv_CC_dependencies_compiler_type+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -f \"$am_depcomp\"; then\n+  # We make a subdir and do the tests there.  Otherwise we can end up\n+  # making bogus files that we don't know about and never remove.  For\n+  # instance it was reported that on HP-UX the gcc test will end up\n+  # making a dummy file named `D' -- because `-MD' means `put the output\n+  # in D'.\n+  mkdir conftest.dir\n+  # Copy depcomp to subdir because otherwise we won't find it if we're\n+  # using a relative directory.\n+  cp \"$am_depcomp\" conftest.dir\n+  cd conftest.dir\n+  # We will build objects and dependencies in a subdirectory because\n+  # it helps to detect inapplicable dependency modes.  For instance\n+  # both Tru64's cc and ICC support -MD to output dependencies as a\n+  # side effect of compilation, but ICC will put the dependencies in\n+  # the current directory while Tru64 will put them in the object\n+  # directory.\n+  mkdir sub\n+\n+  am_cv_CC_dependencies_compiler_type=none\n+  if test \"$am_compiler_list\" = \"\"; then\n+     am_compiler_list=`sed -n 's/^\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n+  fi\n+  for depmode in $am_compiler_list; do\n+    if test $depmode = none; then break; fi\n+\n+    echo \"$as_me:$LINENO: trying $depmode\" >&5\n+    # Setup a source with many dependencies, because some compilers\n+    # like to wrap large dependency lists on column 80 (with \\), and\n+    # we should not choose a depcomp mode which is confused by this.\n+    #\n+    # We need to recreate these files for each test, as the compiler may\n+    # overwrite some of them when testing with obscure command lines.\n+    # This happens at least with the AIX C compiler.\n+    : > sub/conftest.c\n+    for i in 1 2 3 4 5 6; do\n+      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n+      # Solaris 8's {/usr,}/bin/sh.\n+      touch sub/conftst$i.h\n+    done\n+    echo \"include sub/conftest.Po\" > confmf\n+\n+    # We check with `-c' and `-o' for the sake of the \"dashmstdout\"\n+    # mode.  It turns out that the SunPro C++ compiler does not properly\n+    # handle `-M -o', and we need to detect this.\n+    depcmd=\"depmode=$depmode \\\n+       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \\\n+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n+       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c\"\n+    echo \"| $depcmd\" | sed -e 's/  */ /g' >&5\n+    if env $depcmd > conftest.err 2>&1 &&\n+       grep sub/conftst6.h sub/conftest.Po >>conftest.err 2>&1 &&\n+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po >>conftest.err 2>&1 &&\n+       ${MAKE-make} -s -f confmf >>conftest.err 2>&1; then\n+      # icc doesn't choke on unknown options, it will just issue warnings\n+      # or remarks (even with -Werror).  So we grep stderr for any message\n+      # that says an option was ignored or not supported.\n+      # When given -MP, icc 7.0 and 7.1 complain thusly:\n+      #   icc: Command line warning: ignoring option '-M'; no argument required\n+      # The diagnosis changed in icc 8.0:\n+      #   icc: Command line remark: option '-MP' not supported\n+      if (grep 'ignoring option' conftest.err ||\n+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n+        am_cv_CC_dependencies_compiler_type=$depmode\n+\techo \"$as_me:$LINENO: success\" >&5\n+        break\n+      fi\n+    fi\n+    echo \"$as_me:$LINENO: failure, diagnostics are:\" >&5\n+    sed -e 's/^/| /' < conftest.err >&5\n+  done\n+\n+  cd ..\n+  rm -rf conftest.dir\n+else\n+  am_cv_CC_dependencies_compiler_type=none\n+fi\n+\n+fi\n+echo \"$as_me:$LINENO: result: $am_cv_CC_dependencies_compiler_type\" >&5\n+echo \"${ECHO_T}$am_cv_CC_dependencies_compiler_type\" >&6\n+if test x${am_cv_CC_dependencies_compiler_type-none} = xnone\n+then { { echo \"$as_me:$LINENO: error: no usable dependency style found\" >&5\n+echo \"$as_me: error: no usable dependency style found\" >&2;}\n+   { (exit 1); exit 1; }; }\n+else CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n+\n+fi\n+\n+# Note that if build!=host then we extracted the value from the\n+# temporary Makefile we created above, when we ran configure.\n+if test \"${build}\" = \"${host}\" ; then\n+  BUILD_DEPMODE='$(CCDEPMODE)'\n+fi\n+\n+\n+\n # --------\n # UNSORTED\n # --------\n@@ -17726,6 +17856,8 @@ cat >>$CONFIG_STATUS <<_ACEOF\n # INIT-COMMANDS section.\n #\n \n+ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR\n+subdirs=\"$subdirs\" ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR\n subdirs='$subdirs'\n \n _ACEOF\n@@ -17741,6 +17873,8 @@ do\n   \"collect-ld\" ) CONFIG_FILES=\"$CONFIG_FILES collect-ld:exec-tool.in\" ;;\n   \"nm\" ) CONFIG_FILES=\"$CONFIG_FILES nm:exec-tool.in\" ;;\n   \"$all_outputs\" ) CONFIG_FILES=\"$CONFIG_FILES $all_outputs\" ;;\n+  \"depdir\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depdir\" ;;\n+  \"gccdepdir\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gccdepdir\" ;;\n   \"default\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n   \"auto-host.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS auto-host.h:config.in\" ;;\n   *) { { echo \"$as_me:$LINENO: error: invalid argument: $ac_config_target\" >&5\n@@ -17946,6 +18080,10 @@ s,@GGC@,$GGC,;t t\n s,@zlibdir@,$zlibdir,;t t\n s,@zlibinc@,$zlibinc,;t t\n s,@MAINT@,$MAINT,;t t\n+s,@am__leading_dot@,$am__leading_dot,;t t\n+s,@DEPDIR@,$DEPDIR,;t t\n+s,@CCDEPMODE@,$CCDEPMODE,;t t\n+s,@BUILD_DEPMODE@,$BUILD_DEPMODE,;t t\n s,@gcc_tooldir@,$gcc_tooldir,;t t\n s,@dollar@,$dollar,;t t\n s,@slibdir@,$slibdir,;t t\n@@ -18585,6 +18723,13 @@ esac\n   { echo \"$as_me:$LINENO: executing $ac_dest commands\" >&5\n echo \"$as_me: executing $ac_dest commands\" >&6;}\n   case $ac_dest in\n+    depdir ) $SHELL $ac_aux_dir/mkinstalldirs $DEPDIR ;;\n+    gccdepdir )\n+  ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs build/$DEPDIR\n+  for lang in $subdirs\n+  do\n+      ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs $lang/$DEPDIR\n+  done ;;\n     default )\n case ${CONFIG_HEADERS} in\n   *auto-host.h:config.in*)"}, {"sha": "2c84a79cc4762f19e7c5d77a6d9fd6a33765d0c2", "filename": "gcc/configure.ac", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1476,6 +1476,9 @@ else\n \t\t--target=$target_alias --host=$build_alias --build=$build_alias\n \tCFLAGS=\"${saved_CFLAGS}\"\n \n+\t# Extract this setting from the temporary Makefile.\n+\tBUILD_DEPMODE=`grep '^BUILD_DEPMODE = ' Makefile | sed -e 's,.* = ,,'`\n+\n \t# We just finished tests for the build machine, so rename\n \t# the file auto-build.h in the gcc directory.\n \tmv auto-host.h ../auto-build.h\n@@ -3660,6 +3663,27 @@ do\n \techo \"lang.$t: $x\" >> Make-hooks\n done\n \n+# --------\n+# Dependency checking.\n+# --------\n+\n+ZW_CREATE_DEPDIR\n+AC_CONFIG_COMMANDS([gccdepdir],[\n+  ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs build/$DEPDIR\n+  for lang in $subdirs\n+  do\n+      ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs $lang/$DEPDIR\n+  done], [subdirs=\"$subdirs\" ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR])\n+\n+ZW_PROG_COMPILER_DEPENDENCIES([CC])\n+# Note that if build!=host then we extracted the value from the\n+# temporary Makefile we created above, when we ran configure.\n+if test \"${build}\" = \"${host}\" ; then\n+  BUILD_DEPMODE='$(CCDEPMODE)'\n+fi\n+AC_SUBST(BUILD_DEPMODE)\n+\n+\n # --------\n # UNSORTED\n # --------"}, {"sha": "5ddc8b555b7824f04a01ec0178751464039334e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,11 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in: Remove .o targets.\n+\t(cp/g++spec.o): Moved to cp/.  Reduce to variable setting.\n+\t(GXX_OBJS): Update.\n+\t(c++_OBJS): New variable.\n+\t(CXX_TREE_H, CXX_PRETTY_PRINT_H): Remove.\n+\n 2008-03-25  Douglas Gregor  <doug.gregor@gmail.com>\n \n        * typeck.c (composite_pointer_type_r): Add SFINAE support."}, {"sha": "d6c46edb4c440f6ff7a0e3b7656c1d25deeff29c", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 5, "deletions": 87, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -52,13 +52,11 @@ c++: cc1plus$(exeext)\n # Tell GNU make to ignore these if they exist.\n .PHONY: c++\n \n-g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) $(CONFIG_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/cp/g++spec.c)\n+cp/g++spec.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n \n # Create the compiler driver for g++.\n-GXX_OBJS = $(GCC_OBJS) g++spec.o intl.o prefix.o version.o\n+GXX_OBJS = $(GCC_OBJS) cp/g++spec.o intl.o prefix.o version.o\n g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n@@ -86,6 +84,8 @@ CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n # Language-specific object files for C++.\n CXX_OBJS = cp/cp-lang.o stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n \n+c++_OBJS = $(CXX_OBJS) dummy-checksum.o cc1plus-checksum.o cp/g++spec.o\n+\n # Use strict warnings for this front end.\n cp-warn = $(STRICT_WARN) $(CXX_COMPAT_WARN)\n \n@@ -96,8 +96,6 @@ cc1plus-dummy$(exeext): $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n cc1plus-checksum.c : cc1plus-dummy$(exeext) build/genchecksum$(build_exeext)\n \tbuild/genchecksum$(build_exeext) cc1plus-dummy$(exeext) > $@\n \n-cc1plus-checksum.o : cc1plus-checksum.c\n-\n cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(GMPLIBS)\n@@ -216,83 +214,3 @@ c++.stageprofile: stageprofile-start\n \t-mv cp/*$(objext) stageprofile/cp\n c++.stagefeedback: stagefeedback-start\n \t-mv cp/*$(objext) stagefeedback/cp\n-\n-#\f\n-# .o: .h dependencies.\n-CXX_TREE_H = $(TREE_H) cp/name-lookup.h cp/cp-tree.h $(C_COMMON_H) \\\n-\tcp/cp-tree.def c-common.def $(FUNCTION_H) $(VARRAY_H) \\\n-\t$(SYSTEM_H) coretypes.h $(CONFIG_H) $(TARGET_H) $(GGC_H) \\\n-\t$(srcdir)/../include/hashtab.h $(srcdir)/../include/splay-tree.h\n-\n-CXX_PRETTY_PRINT_H = cp/cxx-pretty-print.h $(C_PRETTY_PRINT_H)\n-\n-cp/lex.o: cp/lex.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n-  $(C_PRAGMA_H) toplev.h output.h input.h cp/operators.def $(TM_P_H)\n-cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h \\\n-  $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-cp.h \\\n-  $(DIAGNOSTIC_H) cp/cp-objcp-common.h\n-cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n-  output.h $(EXPR_H) except.h toplev.h $(HASHTAB_H) $(RTL_H) \\\n-  cp/operators.def $(TM_P_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(C_PRAGMA_H) \\\n-  debug.h gt-cp-decl.h $(TIMEVAR_H) $(TREE_FLOW_H) $(TARGET_H)\n-cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h $(EXPR_H) \\\n-  output.h except.h toplev.h $(RTL_H) $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n-  $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H)\n-cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) toplev.h \\\n-  langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n-  $(CXX_PRETTY_PRINT_H) cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n-cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h output.h \\\n-  $(TM_P_H) $(DIAGNOSTIC_H) gt-cp-typeck2.h\n-cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) $(EXPR_H) \\\n-  toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H)\n-cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H)\n-cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  $(EXPR_H) $(DIAGNOSTIC_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h\n-cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) toplev.h \\\n-  $(EXPR_H)\n-cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) $(EXPR_H) \\\n-  toplev.h except.h $(TARGET_H)\n-cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h $(RTL_H) $(EXPR_H) \\\n-  $(TM_P_H) $(TARGET_H) $(DIAGNOSTIC_H) gt-cp-method.h\n-cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h $(FLAGS_H) toplev.h \\\n-  convert.h $(TARGET_H)\n-cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H)\n-cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  insn-config.h $(INTEGRATE_H) $(TREE_INLINE_H) $(REAL_H) gt-cp-tree.h \\\n-  $(TARGET_H) debug.h $(TREE_FLOW_H)\n-cp/ptree.o: cp/ptree.c $(CXX_TREE_H) $(TM_H)\n-cp/rtti.o: cp/rtti.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h convert.h \\\n-  $(TARGET_H) $(C_PRAGMA_H) gt-cp-rtti.h\n-cp/except.o: cp/except.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) except.h \\\n-  toplev.h cp/cfns.h $(EXPR_H) libfuncs.h $(TREE_INLINE_H) $(TARGET_H)\n-cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(RTL_H) $(FLAGS_H) $(EXPR_H) \\\n-  toplev.h except.h $(TM_P_H)\n-cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n-  toplev.h $(RTL_H) except.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h \\\n-  vecprim.h\n-cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n-  $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H)\n-cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n-  gt-cp-repo.h\n-cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) except.h toplev.h \\\n-  $(FLAGS_H) debug.h output.h $(RTL_H) $(TIMEVAR_H) $(EXPR_H) \\\n-  $(TREE_INLINE_H) $(CGRAPH_H) $(TARGET_H) $(C_COMMON_H)\n-cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)\n-cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) rtl.h $(INTEGRATE_H) \\\n-  insn-config.h input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(TREE_GIMPLE_H) \\\n-  $(TARGET_H)\n-cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h $(REAL_H) \\\n-  gt-cp-mangle.h $(TARGET_H) $(TM_P_H)\n-cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_H) gt-cp-parser.h \\\n-  output.h $(TARGET_H)\n-cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) toplev.h $(C_COMMON_H) \\\n-\t$(TM_H) coretypes.h pointer-set.h\n-\n-cp/name-lookup.o: cp/name-lookup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(CXX_TREE_H) $(TIMEVAR_H) gt-cp-name-lookup.h toplev.h \\\n-\t$(DIAGNOSTIC_H) $(FLAGS_H) debug.h\n-\n-cp/cxx-pretty-print.o: cp/cxx-pretty-print.c $(CXX_PRETTY_PRINT_H) \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h $(CXX_TREE_H)"}, {"sha": "027b1692bd93fa2127a2c98748c135fe3473350d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -285,7 +285,7 @@ requirements.\n Necessary to uncompress GCC @command{tar} files when source code is\n obtained via FTP mirror sites.\n \n-@item GNU make version 3.79.1 (or later)\n+@item GNU make version 3.80 (or later)\n \n You must have GNU make installed to build GCC@.\n "}, {"sha": "9cf3e0daa0d14fb90fec2313a0cebb06e429eae2", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -642,6 +642,11 @@ all generated files in the source directory that are not checked into\n CVS, but should not delete anything checked into CVS@.\n @end table\n \n+@file{Make-lang.in} must also define a variable @code{@var{lang}_OBJS}\n+to a list of host object files that are used by that language.  This\n+variable is used to handle automatic dependency tracking in the master\n+@file{Makefile}.\n+\n @item lang.opt\n This file registers the set of switches that the front end accepts on\n the command line, and their @option{--help} text.  @xref{Options}."}, {"sha": "b0d293924c06687d0f7e29a274d6351266071687", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,12 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in: Remove .o targets.\n+\t(fortran_OBJS): New variable.\n+\t(fortran/gfortranspec.o): Move to fortran/.  Reduce to variable\n+\tsetting.\n+\t(GFORTRAN_D_OBJS): Update.\n+\t(GFORTRAN_TRANS_DEPS): Remove.\n+\n 2008-03-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34813"}, {"sha": "6e3d2ce96d704b2e1b824b5f5bf3c1aa36d88056", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 5, "deletions": 53, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -67,20 +67,20 @@ F95_OBJS = $(F95_PARSER_OBJS) \\\n     fortran/trans-intrinsic.o fortran/trans-io.o fortran/trans-openmp.o \\\n     fortran/trans-stmt.o fortran/trans-types.o\n \n+fortran_OBJS = $(F95_OBJS) fortran/gfortranspec.o\n+\n #\f\n # Define the names for selecting gfortran in LANGUAGES.\n fortran: f951$(exeext)\n \n # Tell GNU make to ignore files by these names if they exist.\n .PHONY: fortran\n \n-gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) $(CONFIG_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/fortran/gfortranspec.c)\n+fortran/gfortranspec.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n \n # Create the compiler driver gfortran.\n-GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o version.o prefix.o intl.o\n+GFORTRAN_D_OBJS = $(GCC_OBJS) fortran/gfortranspec.o version.o prefix.o intl.o\n gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n@@ -279,51 +279,3 @@ fortran.stageprofile: stageprofile-start\n \t-mv fortran/*$(objext) stageprofile/fortran\n fortran.stagefeedback: stageprofile-start\n \t-mv fortran/*$(objext) stagefeedback/fortran\n-\n-#\f\n-# .o: .h dependencies.\n-\n-# Everything depends on gfortran.h, but only a few files depend on\n-# the other headers.  So at some point we'll have to split out\n-# which objects depend on what.  FIXME\n-# TODO: Add dependencies on the backend/tree header files\n-\n-$(F95_PARSER_OBJS): fortran/gfortran.h fortran/libgfortran.h \\\n-\t\tfortran/intrinsic.h fortran/match.h \\\n-\t\tfortran/parse.h fortran/arith.h fortran/target-memory.h \\\n-\t\t$(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TM_P_H) coretypes.h \\\n-\t\t$(RTL_H) $(TREE_H) $(TREE_DUMP_H) $(GGC_H) $(EXPR_H) \\\n-\t\t$(FLAGS_H) output.h $(DIAGNOSTIC_H) errors.h $(FUNCTION_H) \n-fortran/openmp.o: pointer-set.h $(TARGET_H) toplev.h\n-\n-GFORTRAN_TRANS_DEPS = fortran/gfortran.h fortran/libgfortran.h \\\n-    fortran/intrinsic.h fortran/trans-array.h \\\n-    fortran/trans-const.h fortran/trans-const.h fortran/trans.h \\\n-    fortran/trans-stmt.h fortran/trans-types.h \\\n-    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_H) coretypes.h $(GGC_H)\n-\n-fortran/f95-lang.o: $(GFORTRAN_TRANS_DEPS) fortran/mathbuiltins.def \\\n-  gt-fortran-f95-lang.h gtype-fortran.h $(CGRAPH_H) $(TARGET_H) \\\n-  $(BUILTINS_DEF) fortran/types.def\n-fortran/scanner.o: toplev.h\n-fortran/convert.o: $(GFORTRAN_TRANS_DEPS)\n-fortran/trans.o: $(GFORTRAN_TRANS_DEPS)\n-fortran/trans-decl.o: $(GFORTRAN_TRANS_DEPS) gt-fortran-trans-decl.h \\\n-  $(CGRAPH_H) $(TARGET_H) $(FUNCTION_H) $(FLAGS_H) $(RTL_H) $(TREE_GIMPLE_H) \\\n-  $(TREE_DUMP_H)\n-fortran/trans-types.o: $(GFORTRAN_TRANS_DEPS) gt-fortran-trans-types.h \\\n-  $(REAL_H) toplev.h $(TARGET_H) $(FLAGS_H) dwarf2out.h\n-fortran/trans-const.o: $(GFORTRAN_TRANS_DEPS)\n-fortran/trans-expr.o: $(GFORTRAN_TRANS_DEPS) fortran/dependency.h\n-fortran/trans-stmt.o: $(GFORTRAN_TRANS_DEPS) fortran/dependency.h\n-fortran/trans-openmp.o: $(GFORTRAN_TRANS_DEPS)\n-fortran/trans-io.o: $(GFORTRAN_TRANS_DEPS) gt-fortran-trans-io.h \\\n-  fortran/ioparm.def\n-fortran/trans-array.o: $(GFORTRAN_TRANS_DEPS)\n-fortran/trans-intrinsic.o: $(GFORTRAN_TRANS_DEPS) fortran/mathbuiltins.def \\\n-  gt-fortran-trans-intrinsic.h\n-fortran/dependency.o: $(GFORTRAN_TRANS_DEPS) fortran/dependency.h\n-fortran/trans-common.o: $(GFORTRAN_TRANS_DEPS) $(TARGET_H) $(RTL_H)\n-fortran/resolve.o: fortran/dependency.h fortran/data.h fortran/target-memory.h\n-fortran/data.o: fortran/data.h\n-fortran/options.o: $(PARAMS_H) $(TARGET_H)"}, {"sha": "b96dad55d855724bc8557cc48ced1ef48bd7f130", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,17 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in: Removed most explicit .o targets.\n+\t(java/jvspec.o): Reduce to variable setting.  Moved to java/.\n+\t($(GCJ)$(exeext)): Update.\n+\t(JAVA_OBJS): New variable.\n+\t(JCFDUMP_OBJS): Reformat.\n+\t(java_OBJS): New variable.\n+\t(java/jvspec.o-warn): Update.\n+\t(java/parse.o-warn): Remove.\n+\t(JAVA_TREE_H): Remove.\n+\t(java/jcf-io.o): Reduce to variable setting.\n+\t(ALL_CPPFLAGS): Likewise.\n+\n 2008-03-12  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* mangle.c (java_mangle_decl): Remove dead check."}, {"sha": "d114d87ffe0646d3c4ce31fb86c7ab4228d57ebc", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 22, "deletions": 85, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -56,16 +56,13 @@ JAVA_TARGET_INDEPENDENT_BIN_TOOLS = jcf-dump\n # Tell GNU make to ignore these if they exist.\n .PHONY: java\n \n-jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(GCC_H) $(CONFIG_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n+java/jvspec.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(DRIVER_DEFINES)\n \n # Create the compiler driver for $(GCJ).\n-$(GCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o version.o \\\n+$(GCJ)$(exeext): $(GCC_OBJS) java/jvspec.o java/jcf-path.o version.o \\\n \t   prefix.o intl.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) jvspec.o \\\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) java/jvspec.o \\\n \t  java/jcf-path.o prefix.o intl.o \\\n \t  version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n@@ -77,27 +74,27 @@ $(GCJ)-cross$(exeext): $(GCJ)$(exeext)\n java.srcextra:\n \n # Executables built by this Makefile:\n-JAVA_OBJS = java/class.o java/decl.o java/expr.o \\\n-  java/constants.o java/lang.o java/typeck.o java/except.o \\\n-  java/verify-glue.o java/verify-impl.o \\\n-  java/zextract.o java/jcf-io.o java/win32-host.o java/jcf-parse.o java/mangle.o \\\n-  java/mangle_name.o java/builtins.o java/resource.o \\\n-  java/jcf-depend.o \\\n-  java/jcf-path.o java/boehm.o java/java-gimplify.o\n+JAVA_OBJS = java/class.o java/decl.o java/expr.o java/constants.o \\\n+    java/lang.o java/typeck.o java/except.o java/verify-glue.o \\\n+    java/verify-impl.o java/zextract.o java/jcf-io.o java/win32-host.o \\\n+    java/jcf-parse.o java/mangle.o java/mangle_name.o java/builtins.o \\\n+    java/resource.o java/jcf-depend.o java/jcf-path.o java/boehm.o \\\n+    java/java-gimplify.o\n \n-JCFDUMP_OBJS = java/jcf-dump.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n-\t\tjava/win32-host.o java/zextract.o errors.o version.o ggc-none.o intl.o\n+JCFDUMP_OBJS = java/jcf-dump.o java/jcf-io.o java/jcf-depend.o \\\n+    java/jcf-path.o java/win32-host.o java/zextract.o errors.o version.o \\\n+    ggc-none.o intl.o\n \n JVGENMAIN_OBJS = java/jvgenmain.o java/mangle_name.o errors.o intl.o\n \n+# Used by dependency tracking.  Sort makes the list unique.\n+java_OBJS = $(sort $(JAVA_OBJS) $(JCFDUMP_OBJS) $(JVGENMAIN_OBJS)) java/jvspec.o\n+\n # Use strict warnings for this front end.\n java-warn = $(STRICT_WARN)\n \n # String length warnings\n-jvspec.o-warn = -Wno-error\n-\n-# Bison-1.75 output often yields (harmless) -Wtraditional warnings\n-java/parse.o-warn = -Wno-error\n+java/jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n@@ -239,76 +236,16 @@ java.stagefeedback: stageprofile-start\n \t-mv java/*$(objext) stagefeedback/java\n \n #\f\n-# .o:.h dependencies.\n-JAVA_TREE_H = $(TREE_H) $(HASHTAB_H) java/java-tree.h java/java-tree.def\n-\n-java/jcf-dump.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(JAVA_TREE_H) \\\n-  java/jcf-dump.c java/jcf-reader.c java/jcf.h java/javaop.h java/javaop.def \\\n-  version.h $(GGC_H) intl.h java/zipfile.h\n-java/boehm.o: java/boehm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(TREE_H) $(JAVA_TREE_H) java/parse.h toplev.h\n-java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) $(GGC_H) $(FLAGS_H) $(OPTABS_H) $(EXPR_H) langhooks.h \\\n-  gt-java-builtins.h\n-java/class.o: java/class.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) $(RTL_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n-  $(TARGET_H) $(FUNCTION_H) gt-java-class.h $(CGRAPH_H)\n-java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-constants.h\n-java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) java/jcf.h \\\n-  toplev.h $(FLAGS_H) $(SYSTEM_H) coretypes.h $(TM_H) $(FUNCTION_H) $(EXPR_H) \\\n-  libfuncs.h except.h java/java-except.h $(GGC_H) $(REAL_H) gt-java-decl.h \\\n-  $(TARGET_H) $(CGRAPH_H) langhooks.h\n-java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n-  $(RTL_H) java/javaop.h java/java-opcodes.h except.h java/java-except.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(FUNCTION_H) \n-java/expr.o: java/expr.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n-  $(RTL_H) $(EXPR_H) java/javaop.h java/java-opcodes.h except.h \\\n-  java/java-except.h java/java-except.h java/parse.h toplev.h \\\n-  $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h $(TARGET_H)\n-java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) java/jcf.h\n-java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\\n-  input.h java/java-except.h $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n-  java/parse.h $(GGC_H) debug.h $(REAL_H) gt-java-jcf-parse.h $(TM_P_H) \\\n-  java/jcf-reader.c java/zipfile.h java/jcf.h\n-java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) intl.h\n-java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(EXPR_H) $(DIAGNOSTIC_H) \\\n-  langhooks.h $(LANGHOOKS_DEF_H) gt-java-lang.h opts.h options.h\n-java/mangle.o: java/mangle.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) toplev.h $(GGC_H) gt-java-mangle.h $(LANGHOOKS_DEF_H)\n-java/mangle_name.o: java/mangle_name.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) \\\n-  $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(GGC_H)\n-java/resource.o: java/resource.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) $(RTL_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n-  $(TARGET_H) $(FUNCTION_H) gt-java-resource.h $(EXPR_H)\n-java/typeck.o: java/typeck.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) $(REAL_H)\n-java/win32-host.o: java/win32-host.c $(CONFIG_H) $(SYSTEM_H) coretypes.h java/jcf.h\n-java/verify-glue.o: java/verify-glue.c $(CONFIG_H) $(SYSTEM_H) $(JAVA_TREE_H) \\\n-  coretypes.h $(TM_H) java/verify.h toplev.h\n-java/verify-impl.o: java/verify-impl.c $(CONFIG_H) java/verify.h $(SYSTEM_H) \\\n-  coretypes.h  java/jcf.h $(JAVA_TREE_H)\n-java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  java/zipfile.h\n-java/java-gimplify.o: java/java-gimplify.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(JAVA_TREE_H) $(TREE_GIMPLE_H) toplev.h\n \n # jcf-io.o needs $(ZLIBINC) added to cflags.\n-java/jcf-io.o: java/jcf-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) java/zipfile.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(ZLIBINC) \\\n-\t\t$(srcdir)/java/jcf-io.c $(OUTPUT_OPTION)\n+java/jcf-io.o: \\\n+\tALL_CPPFLAGS := $(ALL_CPPFLAGS) $(ZLIBINC)\n \n # jcf-path.o needs a -D.\n-java/jcf-path.o: java/jcf-path.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  java/jcf.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+java/jcf-path.o: \\\n+     ALL_CPPFLAGS := $(ALL_CPPFLAGS) \\\n \t  -DLIBGCJ_ZIP_FILE='\"$(datadir)/java/libgcj-$(version).jar\"' \\\n-\t  -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n-\t  $(srcdir)/java/jcf-path.c $(OUTPUT_OPTION)\n+\t  -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\"\n \n TEXI_JAVA_FILES = java/gcj.texi $(gcc_docdir)/include/fdl.texi\t\t\\\n \t $(gcc_docdir)/include/gpl.texi $(gcc_docdir)/include/gcc-common.texi   \\"}, {"sha": "b558eb6939edfee38f12ddfb729607d70be978b1", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,8 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (objc_OBJS): New variable.\n+\t(cc1obj-checksum.o, objc/objc-lang.o, objc/objc-act.o): Remove.\n+\n 2008-03-21  Andreas Tobler  <a.tobler@schweiz.org>\n \n \tPR bootstrap/35660"}, {"sha": "91c4fcefffcc38b46e62cb21468187743e9d94e3", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,5 +1,5 @@\n # Top level -*- makefile -*- fragment for GNU Objective-C\n-#   Copyright (C) 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2007\n+#   Copyright (C) 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008\n #   Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -49,6 +49,8 @@ objc-warn = $(STRICT_WARN)\n # Language-specific object files for Objective C.\n OBJC_OBJS = objc/objc-lang.o objc/objc-act.o\n \n+objc_OBJS = $(OBJC_OBJS) cc1obj-checksum.o\n+\n cc1obj-dummy$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o \\\n@@ -57,28 +59,11 @@ cc1obj-dummy$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o $(BACKEN\n cc1obj-checksum.c : cc1obj-dummy$(exeext) build/genchecksum$(build_exeext)\n \tbuild/genchecksum$(build_exeext) cc1obj-dummy$(exeext) > $@\n \n-cc1obj-checksum.o : cc1obj-checksum.c\n-\n cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(GMPLIBS)\n \n-# Objective C language specific files.\n-\n-objc/objc-lang.o : objc/objc-lang.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(C_TREE_H) $(DIAGNOSTIC_H) \\\n-   $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n-   c-objc-common.h objc/objc-act.h $(TREE_GIMPLE_H)\n-\n-objc/objc-act.o : objc/objc-act.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n-   $(EXPR_H) $(TARGET_H) $(C_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n-   objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(HASHTAB_H) $(C_PRAGMA_H) gt-objc-objc-act.h \\\n-   $(TREE_GIMPLE_H)\n-\n objc.srcextra:\n \n #\f"}, {"sha": "378d2ca5f52a7a010a6baca25d3355d9aa095422", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,3 +1,9 @@\n+2008-03-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (objcp_OBJS): New variable.\n+\t(cc1objplus-checksum.o, objcp/objcp-lang.o, objcp/objcp-decl.o,\n+\tobjcp/objcp-act.o): Remove.\n+\n 2008-03-07  Paolo Bonzini  <bonzini@gnu.org>\n \n \tRevert:"}, {"sha": "b2e64f9ed4f48df3e641604b760447aa120da00b", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe3178b6953ab8c88c75ca321645eaef1523594/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=2fe3178b6953ab8c88c75ca321645eaef1523594", "patch": "@@ -1,5 +1,5 @@\n # Top level -*- makefile -*- fragment for GNU Objective-C++\n-#   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+#   Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n #   Contributed by Ziemowit Laski  <zlaski@apple.com>\n \n #This file is part of GCC.\n@@ -51,6 +51,8 @@ objcp-warn = $(STRICT_WARN) -DOBJCPLUS -I$(srcdir)/objc -I$(srcdir)/cp\n OBJCXX_OBJS = objcp/objcp-act.o objcp/objcp-lang.o objcp/objcp-decl.o \\\n    $(CXX_AND_OBJCXX_OBJS)\n \n+objcp_OBJS = $(OBJCXX_OBJS) cc1objplus-checksum.o\n+\n cc1objplus-dummy$(exeext): $(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) \\\n \t\t$(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n@@ -59,34 +61,10 @@ cc1objplus-dummy$(exeext): $(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) \\\n cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeext)\n \tbuild/genchecksum$(build_exeext) cc1objplus-dummy$(exeext) > $@\n \n-cc1objplus-checksum.o : cc1objplus-checksum.c\n-\n cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBS) $(GMPLIBS)\n \n-# Objective C++ language specific files.\n-\n-objcp/objcp-lang.o : objcp/objcp-lang.c \\\n-  $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h objc/objc-act.h \\\n-  $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objcp.h \\\n-  $(DIAGNOSTIC_H) cp/cp-objcp-common.h $(TREE_GIMPLE_H)\n-\n-objcp/objcp-decl.o : objcp/objcp-decl.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n-   toplev.h $(GGC_H) $(C_PRAGMA_H) input.h $(FLAGS_H) output.h \\\n-   objc/objc-act.h objcp/objcp-decl.h $(TREE_GIMPLE_H) $(EXPR_H) $(TARGET_H)\n-\n-# The following must be an explicit rule; please keep in sync with the implicit\n-# one in Makefile.in.\n-objcp/objcp-act.o : objc/objc-act.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n-   $(EXPR_H) $(TARGET_H) $(CXX_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n-   objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n-   objcp/objcp-decl.h $(LANGHOOKS_DEF_H) $(HASHTAB_H) gt-objc-objc-act.h \\\n-   $(TREE_GIMPLE_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n-\n po-generated:\n \n #\f"}]}