{"sha": "6aadd15a4128d8afdca93be311449876cc2dc4d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhZGQxNWE0MTI4ZDhhZmRjYTkzYmUzMTE0NDk4NzZjYzJkYzRkNQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2015-11-02T12:43:14Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2015-11-02T12:43:14Z"}, "message": "[ARM] neon-testgen.ml typo\n\n\t* config/arm/neon-testgen.ml (emit_epilogue): Remove extraneous\n\tbrackets and semicolon.\n\nFrom-SVN: r229662", "tree": {"sha": "67102428e149d7c84993087e11a7be0a569bcd6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67102428e149d7c84993087e11a7be0a569bcd6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aadd15a4128d8afdca93be311449876cc2dc4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aadd15a4128d8afdca93be311449876cc2dc4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aadd15a4128d8afdca93be311449876cc2dc4d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aadd15a4128d8afdca93be311449876cc2dc4d5/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35e2be9fc91767188cad3448f8a1434e8461e199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2be9fc91767188cad3448f8a1434e8461e199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e2be9fc91767188cad3448f8a1434e8461e199"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "f999fd51431b5af1b7061bd0ca5562e19c6bac7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aadd15a4128d8afdca93be311449876cc2dc4d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aadd15a4128d8afdca93be311449876cc2dc4d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aadd15a4128d8afdca93be311449876cc2dc4d5", "patch": "@@ -1,3 +1,8 @@\n+2015-11-02  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/neon-testgen.ml (emit_epilogue): Remove extraneous\n+\tbrackets and semicolon.  \n+\n 2015-11-02  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tRevert:"}, {"sha": "a80c05dfe09dbecfa2e12498be979662d928e60a", "filename": "gcc/config/arm/neon-testgen.ml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aadd15a4128d8afdca93be311449876cc2dc4d5/gcc%2Fconfig%2Farm%2Fneon-testgen.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aadd15a4128d8afdca93be311449876cc2dc4d5/gcc%2Fconfig%2Farm%2Fneon-testgen.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon-testgen.ml?ref=6aadd15a4128d8afdca93be311449876cc2dc4d5", "patch": "@@ -130,14 +130,14 @@ let emit_call chan const_valuator c_types name elt_ty =\n let emit_epilogue chan features regexps =\n   let no_op = List.exists (fun feature -> feature = No_op) features in\n     Printf.fprintf chan \"}\\n\\n\";\n-    (if not no_op then\n-       List.iter (fun regexp ->\n-                   Printf.fprintf chan\n-                     \"/* { dg-final { scan-assembler \\\"%s\\\" } } */\\n\" regexp)\n+    if not no_op then\n+      List.iter (fun regexp ->\n+                  Printf.fprintf chan\n+                    \"/* { dg-final { scan-assembler \\\"%s\\\" } } */\\n\" regexp)\n                 regexps\n-     else\n-       ()\n-    );\n+    else\n+      ()\n+    \n \n (* Check a list of C types to determine which ones are pointers and which\n    ones are const.  *)"}]}