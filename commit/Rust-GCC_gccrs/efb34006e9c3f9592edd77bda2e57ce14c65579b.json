{"sha": "efb34006e9c3f9592edd77bda2e57ce14c65579b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiMzQwMDZlOWMzZjk1OTJlZGQ3N2JkYTJlNTdjZTE0YzY1NTc5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-03T10:17:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-03T10:17:16Z"}, "message": "re PR tree-optimization/90716 (gcc generates wrong debug information at -O2)\n\n2019-06-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90716\n\t* tree-loop-distribution.c (destroy_loop): Process blocks in\n\tcorrect order.\n\n\t* gcc.dg/guality/pr90716.c: New testcase.\n\nFrom-SVN: r271858", "tree": {"sha": "6660427cb8fcaf3711094d343b0a312dd07f7c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6660427cb8fcaf3711094d343b0a312dd07f7c7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efb34006e9c3f9592edd77bda2e57ce14c65579b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb34006e9c3f9592edd77bda2e57ce14c65579b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb34006e9c3f9592edd77bda2e57ce14c65579b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb34006e9c3f9592edd77bda2e57ce14c65579b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a0afad0d212b3ff213b393728e018caf2daa526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a0afad0d212b3ff213b393728e018caf2daa526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a0afad0d212b3ff213b393728e018caf2daa526"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "7aabe88b4d8d38014d0ddc7ce7b558c3db0142cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efb34006e9c3f9592edd77bda2e57ce14c65579b", "patch": "@@ -1,3 +1,9 @@\n+2019-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90716\n+\t* tree-loop-distribution.c (destroy_loop): Process blocks in\n+\tcorrect order.\n+\n 2019-06-03  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR target/88837"}, {"sha": "75e38b8cf6a13cd225b699458a4f66c4c9700aa4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efb34006e9c3f9592edd77bda2e57ce14c65579b", "patch": "@@ -1,3 +1,8 @@\n+2019-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90716\n+\t* gcc.dg/guality/pr90716.c: New testcase.\n+\n 2019-06-03  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR target/88837"}, {"sha": "b2f5c9d146e0243786bc17ee30daa2607127d1e2", "filename": "gcc/testsuite/gcc.dg/guality/pr90716.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c?ref=efb34006e9c3f9592edd77bda2e57ce14c65579b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+void __attribute__((noinline))\n+optimize_me_not ()\n+{\n+  __asm__ volatile (\"\" : : : \"memory\");\n+}\n+int a[7][8];\n+int main()\n+{\n+  int b, j;\n+  b = 0;\n+  for (; b < 7; b++) {\n+      j = 0;\n+      for (; j < 8; j++)\n+\ta[b][j] = 0;\n+  }\n+  /* j may very well be optimized out, so we cannot test for j == 8.\n+     Instead test j + 1 which will make the test UNSUPPORTED if i\n+     is optimized out.  Since the test previously had wrong debug\n+     with j == 0 this is acceptable.  */\n+  optimize_me_not(); /* { dg-final { gdb-test . \"j + 1\" \"9\" } } */\n+  return 0;\n+}"}, {"sha": "88f8e7a09d1571fed16ba841ceb91edfe21e83a5", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb34006e9c3f9592edd77bda2e57ce14c65579b/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=efb34006e9c3f9592edd77bda2e57ce14c65579b", "patch": "@@ -1104,15 +1104,13 @@ destroy_loop (struct loop *loop)\n \n   gimple_stmt_iterator dst_gsi = gsi_after_labels (exit->dest);\n   bool safe_p = single_pred_p (exit->dest);\n-  i = nbbs;\n-  do\n+  for (unsigned i = 0; i < nbbs; ++i)\n     {\n       /* We have made sure to not leave any dangling uses of SSA\n          names defined in the loop.  With the exception of virtuals.\n \t Make sure we replace all uses of virtual defs that will remain\n \t outside of the loop with the bare symbol as delete_basic_block\n \t will release them.  */\n-      --i;\n       for (gphi_iterator gsi = gsi_start_phis (bbs[i]); !gsi_end_p (gsi);\n \t   gsi_next (&gsi))\n \t{\n@@ -1147,7 +1145,6 @@ destroy_loop (struct loop *loop)\n \t    gsi_next (&gsi);\n \t}\n     }\n-  while (i != 0);\n \n   redirect_edge_pred (exit, src);\n   exit->flags &= ~(EDGE_TRUE_VALUE|EDGE_FALSE_VALUE);"}]}