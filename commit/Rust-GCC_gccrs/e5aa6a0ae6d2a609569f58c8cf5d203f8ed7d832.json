{"sha": "e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhYTZhMGFlNmQyYTYwOTU2OWY1OGM4Y2Y1ZDIwM2Y4ZWQ3ZDgzMg==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-03-01T23:25:50Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-03-01T23:25:50Z"}, "message": "Makefile.in, [...]: Regenerate.\n\n2005-03-01  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.in, include/Makefile.in: Regenerate.\n\nFrom-SVN: r95762", "tree": {"sha": "a2aa86ae604dc0a59c156a6e0c611dff1f114864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2aa86ae604dc0a59c156a6e0c611dff1f114864"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/comments", "author": null, "committer": null, "parents": [{"sha": "e73ed25c41a9ab4bf8857973daac24ebebe23a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73ed25c41a9ab4bf8857973daac24ebebe23a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73ed25c41a9ab4bf8857973daac24ebebe23a10"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "9b5852d47776ed831f75be24afe7ed94b0e2f15e", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "patch": "@@ -1,3 +1,7 @@\n+2005-03-01  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* Makefile.in, include/Makefile.in: Regenerate.\n+\n 2005-02-26  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* dyn_load.c: On NetBSD, include machine/elf_machdep.h and define"}, {"sha": "6f842205efe9bfc65ea19469a27d14ac3547745d", "filename": "boehm-gc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.in?ref=e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "patch": "@@ -77,7 +77,8 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno configure.status.lineno\n-CONFIG_HEADER = $(top_builddir)/include/gc_config.h\n+CONFIG_HEADER = $(top_builddir)/include/gc_config.h \\\n+\t$(top_builddir)/include/gc_ext_config.h\n CONFIG_CLEAN_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n@@ -100,7 +101,7 @@ am_gctest_OBJECTS = tests/test.$(OBJEXT)\n gctest_OBJECTS = $(am_gctest_OBJECTS)\n gctest_DEPENDENCIES = ./libgcjgc.la $(am__DEPENDENCIES_1) \\\n \t$(am__DEPENDENCIES_1)\n-DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include\n+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include -I$(top_builddir)/include\n depcomp =\n am__depfiles_maybe =\n COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\"}, {"sha": "4c823287b32ad4be2dff003652f2f5805755fbfc", "filename": "boehm-gc/include/Makefile.in", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832/boehm-gc%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2FMakefile.in?ref=e5aa6a0ae6d2a609569f58c8cf5d203f8ed7d832", "patch": "@@ -39,14 +39,15 @@ host_triplet = @host@\n target_triplet = @target@\n subdir = include\n DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \\\n-\t$(srcdir)/Makefile.in $(srcdir)/gc_config.h.in\n+\t$(srcdir)/Makefile.in $(srcdir)/gc_config.h.in \\\n+\t$(srcdir)/gc_ext_config.h.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n-CONFIG_HEADER = gc_config.h\n+CONFIG_HEADER = gc_config.h gc_ext_config.h\n CONFIG_CLEAN_FILES =\n SOURCES =\n DIST_SOURCES =\n@@ -179,7 +180,7 @@ AUTOMAKE_OPTIONS = foreign\n noinst_HEADERS = gc.h gc_backptr.h gc_local_alloc.h \\\n   gc_pthread_redirects.h gc_cpp.h\n \n-all: gc_config.h\n+all: gc_config.h gc_ext_config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n .SUFFIXES:\n@@ -227,8 +228,18 @@ $(srcdir)/gc_config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n \trm -f stamp-h1\n \ttouch $@\n \n+gc_ext_config.h: stamp-h2\n+\t@if test ! -f $@; then \\\n+\t  rm -f stamp-h2; \\\n+\t  $(MAKE) stamp-h2; \\\n+\telse :; fi\n+\n+stamp-h2: $(srcdir)/gc_ext_config.h.in $(top_builddir)/config.status\n+\t@rm -f stamp-h2\n+\tcd $(top_builddir) && $(SHELL) ./config.status include/gc_ext_config.h\n+\n distclean-hdr:\n-\t-rm -f gc_config.h stamp-h1\n+\t-rm -f gc_config.h stamp-h1 gc_ext_config.h stamp-h2\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -250,11 +261,11 @@ ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n \tmkid -fID $$unique\n tags: TAGS\n \n-TAGS:  $(HEADERS) $(SOURCES) gc_config.h.in $(TAGS_DEPENDENCIES) \\\n+TAGS:  $(HEADERS) $(SOURCES) gc_config.h.in gc_ext_config.h.in $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n \ttags=; \\\n \there=`pwd`; \\\n-\tlist='$(SOURCES) $(HEADERS) gc_config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tlist='$(SOURCES) $(HEADERS) gc_config.h.in gc_ext_config.h.in $(LISP) $(TAGS_FILES)'; \\\n \tunique=`for i in $$list; do \\\n \t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n \t  done | \\\n@@ -266,11 +277,11 @@ TAGS:  $(HEADERS) $(SOURCES) gc_config.h.in $(TAGS_DEPENDENCIES) \\\n \t    $$tags $$unique; \\\n \tfi\n ctags: CTAGS\n-CTAGS:  $(HEADERS) $(SOURCES) gc_config.h.in $(TAGS_DEPENDENCIES) \\\n+CTAGS:  $(HEADERS) $(SOURCES) gc_config.h.in gc_ext_config.h.in $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n \ttags=; \\\n \there=`pwd`; \\\n-\tlist='$(SOURCES) $(HEADERS) gc_config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tlist='$(SOURCES) $(HEADERS) gc_config.h.in gc_ext_config.h.in $(LISP) $(TAGS_FILES)'; \\\n \tunique=`for i in $$list; do \\\n \t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n \t  done | \\\n@@ -317,7 +328,7 @@ distdir: $(DISTFILES)\n \tdone\n check-am: all-am\n check: check-am\n-all-am: Makefile $(HEADERS) gc_config.h\n+all-am: Makefile $(HEADERS) gc_config.h gc_ext_config.h\n installdirs:\n install: install-am\n install-exec: install-exec-am"}]}