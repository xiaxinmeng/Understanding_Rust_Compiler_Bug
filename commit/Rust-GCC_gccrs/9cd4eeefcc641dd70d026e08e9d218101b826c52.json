{"sha": "9cd4eeefcc641dd70d026e08e9d218101b826c52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkNGVlZWZjYzY0MWRkNzBkMDI2ZTA4ZTlkMjE4MTAxYjgyNmM1Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-17T15:25:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-17T15:43:43Z"}, "message": "libstdc++: Reduce header dependencies for C++20 (PR 92546)\n\nIn C++20 <memory> depends on <bits/ranges_unitialized.h> which\ndepends on <bits/random.h> just for a single concept. Including\n<bits/random.h> also requires including <cmath>, which is huge due to\nthe C++17 special functions.\n\nThis change moves the concept to the <bits/uniform_int_dist.h> internal\nheader that exists so that <bits/stl_algobase.h> doesn't need to include\n<bits/random.h>.\n\n\tPR libstdc++/92546 (partial)\n\t* include/bits/random.h (uniform_random_bit_generator): Move definition\n\tto <bits/uniform_int_dist.h>.\n\t* include/bits/ranges_algo.h: Include <bits/uniform_int_dist.h> instead\n\tof <bits/random.h>.\n\t* include/bits/ranges_algobase.h: Do not include <cmath>.\n\t* include/bits/uniform_int_dist.h (uniform_random_bit_generator):\n\tMove here.\n\t* include/std/ranges: Do not include <limits>.\n\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error lineno.", "tree": {"sha": "56fbd7edf0607751c80663be94d29d83e0217fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56fbd7edf0607751c80663be94d29d83e0217fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd4eeefcc641dd70d026e08e9d218101b826c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd4eeefcc641dd70d026e08e9d218101b826c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd4eeefcc641dd70d026e08e9d218101b826c52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd4eeefcc641dd70d026e08e9d218101b826c52/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c03b53da9129ae2d5ac9629c4b874d0981a7d418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03b53da9129ae2d5ac9629c4b874d0981a7d418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03b53da9129ae2d5ac9629c4b874d0981a7d418"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "f4477aaa6f2d5478ab417a79644bf4b7dec10362", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -1,5 +1,16 @@\n 2020-02-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/92546 (partial)\n+\t* include/bits/random.h (uniform_random_bit_generator): Move definition\n+\tto <bits/uniform_int_dist.h>.\n+\t* include/bits/ranges_algo.h: Include <bits/uniform_int_dist.h> instead\n+\tof <bits/random.h>.\n+\t* include/bits/ranges_algobase.h: Do not include <cmath>.\n+\t* include/bits/uniform_int_dist.h (uniform_random_bit_generator):\n+\tMove here.\n+\t* include/std/ranges: Do not include <limits>.\n+\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error lineno.\n+\n \tPR libstdc++/92546 (partial)\n \t* include/Makefile.am: Add new header.\n \t* include/Makefile.in: Regenerate."}, {"sha": "19307fbc3ca401976ef6823e8fda893e4a263751", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -33,9 +33,6 @@\n \n #include <vector>\n #include <bits/uniform_int_dist.h>\n-#if __cplusplus > 201703L\n-# include <concepts>\n-#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -51,18 +48,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @{\n    */\n \n-#ifdef __cpp_lib_concepts\n-  /// Requirements for a uniform random bit generator.\n-  template<typename _Gen>\n-    concept uniform_random_bit_generator\n-      = invocable<_Gen&> && unsigned_integral<invoke_result_t<_Gen&>>\n-      && requires\n-      {\n-\t{ _Gen::min() } -> same_as<invoke_result_t<_Gen&>>;\n-\t{ _Gen::max() } -> same_as<invoke_result_t<_Gen&>>;\n-\trequires bool_constant<(_Gen::min() < _Gen::max())>::value;\n-      };\n-#endif\n+  // std::uniform_random_bit_generator is defined in <bits/uniform_int_dist.h>\n \n   /**\n    * @brief A function template for converting the output of a (integral)"}, {"sha": "f3a349ef8393b3154baa81377faac1300aefb7a9", "filename": "libstdc++-v3/include/bits/ranges_algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -33,7 +33,7 @@\n #if __cplusplus > 201703L\n \n #include <bits/ranges_algobase.h>\n-#include <bits/random.h> // concept uniform_random_bit_generator\n+#include <bits/uniform_int_dist.h> // concept uniform_random_bit_generator\n \n #if __cpp_lib_concepts\n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "eedd29f570a6c6ce94f8ae03e29f835b0dde250e", "filename": "libstdc++-v3/include/bits/ranges_algobase.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -32,7 +32,6 @@\n \n #if __cplusplus > 201703L\n \n-#include <cmath>\n #include <compare>\n #include <iterator>\n // #include <bits/range_concepts.h>"}, {"sha": "e3d7934e9977c632de63bd9821f0bda921c2cd8c", "filename": "libstdc++-v3/include/bits/uniform_int_dist.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -33,11 +33,27 @@\n \n #include <type_traits>\n #include <limits>\n+#if __cplusplus > 201703L\n+# include <concepts>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#ifdef __cpp_lib_concepts\n+  /// Requirements for a uniform random bit generator.\n+  template<typename _Gen>\n+    concept uniform_random_bit_generator\n+      = invocable<_Gen&> && unsigned_integral<invoke_result_t<_Gen&>>\n+      && requires\n+      {\n+\t{ _Gen::min() } -> same_as<invoke_result_t<_Gen&>>;\n+\t{ _Gen::max() } -> same_as<invoke_result_t<_Gen&>>;\n+\trequires bool_constant<(_Gen::min() < _Gen::max())>::value;\n+      };\n+#endif\n+\n   namespace __detail\n   {\n     /* Determine whether number is a power of 2.  */"}, {"sha": "b9ac528fdff5121a3469673b03a4fa47b160bb6a", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -42,7 +42,6 @@\n #include <compare>\n #include <initializer_list>\n #include <iterator>\n-#include <limits>\n #include <optional>\n #include <tuple>\n "}, {"sha": "f808132e9ea47a9276ee7950e19c6414c48c9de1", "filename": "libstdc++-v3/testsuite/26_numerics/random/pr60037-neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd4eeefcc641dd70d026e08e9d218101b826c52/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc?ref=9cd4eeefcc641dd70d026e08e9d218101b826c52", "patch": "@@ -10,6 +10,6 @@ std::__detail::_Adaptor<std::mt19937, unsigned long> aurng(urng);\n auto x = std::generate_canonical<std::size_t,\n \t\t\tstd::numeric_limits<std::size_t>::digits>(urng);\n \n-// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 172 }\n+// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 158 }\n \n // { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3281 }"}]}