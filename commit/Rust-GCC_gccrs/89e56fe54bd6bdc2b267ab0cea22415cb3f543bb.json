{"sha": "89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllNTZmZTU0YmQ2YmRjMmIyNjdhYjBjZWEyMjQxNWNiM2Y1NDNiYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-10-21T22:44:51Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-10-21T22:44:51Z"}, "message": "h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Simplify using IN_RANGE.\n\n\t* config/h8300/h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Simplify\n\tusing IN_RANGE.\n\t(TINY_CONSTANT_ADDRESS_P): Likewise.\n\nFrom-SVN: r58392", "tree": {"sha": "51e72daf6ef50fc8d3eeb2d4473c62441c2ce0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e72daf6ef50fc8d3eeb2d4473c62441c2ce0f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb/comments", "author": null, "committer": null, "parents": [{"sha": "f02e13584ef08fbe6f2f09af580ae2ef2b4eb125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02e13584ef08fbe6f2f09af580ae2ef2b4eb125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02e13584ef08fbe6f2f09af580ae2ef2b4eb125"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "b633ef37b3a5a10ef622b0cc1477ee57a9096dd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "patch": "@@ -1,3 +1,9 @@\n+2002-10-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Simplify\n+\tusing IN_RANGE.\n+\t(TINY_CONSTANT_ADDRESS_P): Likewise.\n+\n Tue Oct 22 00:04:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (builtin_description): Add punpcklqdq and movdq2q"}, {"sha": "d69c6c2c3f9492ed85ca883f1636e4470b4a6052", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e56fe54bd6bdc2b267ab0cea22415cb3f543bb/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=89e56fe54bd6bdc2b267ab0cea22415cb3f543bb", "patch": "@@ -825,27 +825,23 @@ struct cum_arg\n /* Nonzero if X is a constant address suitable as an 8-bit absolute,\n    which is a special case of the 'R' operand.  */\n \n-#define EIGHTBIT_CONSTANT_ADDRESS_P(X)\t\t\t\t\t\\\n-  ((GET_CODE (X) == CONST_INT)\t\t\t\t\t\t\\\n-   && ((TARGET_H8300H && 0xffff00 <= INTVAL (X)\t\t\t\t\\\n-\t&& INTVAL (X) <= 0xffffff)\t\t\t\t\t\\\n-       || (TARGET_H8300S && 0xffffff00 <= INTVAL (X)\t\t\t\\\n-\t   && INTVAL (X) <= 0xffffffff)\t\t\t\t\t\\\n-       || (TARGET_H8300 && 0xff00 <= (INTVAL (X) & 0x0000FFFF)\t\t\\\n-\t   && (INTVAL (X) & 0x0000FFFF) <= 0xffff)))\n+#define EIGHTBIT_CONSTANT_ADDRESS_P(X)\t\t\t\t\t\t\\\n+  ((GET_CODE (X) == CONST_INT)\t\t\t\t\t\t\t\\\n+   && ((TARGET_H8300 && IN_RANGE (INTVAL (X) & 0xffff, 0xff00, 0xffff))\t\t\\\n+       || (TARGET_H8300H && IN_RANGE (INTVAL (X), 0xffff00, 0xffffff))\t\t\\\n+       || (TARGET_H8300S && IN_RANGE (INTVAL (X), 0xffffff00, 0xffffffff))))\n \n /* Nonzero if X is a constant address suitable as an 16-bit absolute\n    on H8/300H and H8S.  */\n \n #define TINY_CONSTANT_ADDRESS_P(X)\t\t\t\t\t\\\n   ((GET_CODE (X) == CONST_INT)\t\t\t\t\t\t\\\n    && ((TARGET_H8300H\t\t\t\t\t\t\t\\\n-\t&& ((0xff8000 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\t\t\\\n-\t    || (0x000000 <= INTVAL (X) && INTVAL (X) <= 0x007fff)))\t\\\n+\t&& (IN_RANGE (INTVAL (X), 0x000000, 0x007fff)\t\t\t\\\n+\t    || IN_RANGE (INTVAL (X), 0xff8000, 0xffffff)))\t\t\\\n        || (TARGET_H8300S\t\t\t\t\t\t\\\n-\t   && ((0xffff8000 <= INTVAL (X) && INTVAL (X) <= 0xffffffff)\t\\\n-\t       || (0x00000000 <= INTVAL (X)\t\t\t\t\\\n-\t\t   && INTVAL (X) <= 0x00007fff)))))\n+\t   && (IN_RANGE (INTVAL (X), 0x00000000, 0x00007fff)\t\t\\\n+\t       || IN_RANGE (INTVAL (X), 0xffff8000, 0xffffffff)))))\n \n /* 'U' if valid for a bset destination;\n    i.e. a register, register indirect, or the eightbit memory region"}]}