{"sha": "72922229b7431aac7f5ac3d207a017473dccce4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI5MjIyMjliNzQzMWFhYzdmNWFjM2QyMDdhMDE3NDczZGNjY2U0ZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2006-03-28T15:35:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2006-03-28T15:35:47Z"}, "message": "re PR tree-optimization/26796 (ACATS ICE c34002a c52005 spurious storage_error)\n\n        PR tree-optimization/26796\n        * tree-ssa-dom.c (propagate_rhs_into_lhs): Queue blocks which\n        need EH edge cleanups rather than purging them immediately.\n        (eliminate_degenerate_phis): Handle queued EH cleanups.\n\nFrom-SVN: r112453", "tree": {"sha": "07e79d2e611e6316f4cc9475baa6b19be0b12e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07e79d2e611e6316f4cc9475baa6b19be0b12e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72922229b7431aac7f5ac3d207a017473dccce4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72922229b7431aac7f5ac3d207a017473dccce4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72922229b7431aac7f5ac3d207a017473dccce4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72922229b7431aac7f5ac3d207a017473dccce4d/comments", "author": null, "committer": null, "parents": [{"sha": "c245c134da2fdced8608d3e992c969ae22932752", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c245c134da2fdced8608d3e992c969ae22932752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c245c134da2fdced8608d3e992c969ae22932752"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "69f7f65f6fcbbb8c8e929eb3cacfc0f9219aa01a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72922229b7431aac7f5ac3d207a017473dccce4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72922229b7431aac7f5ac3d207a017473dccce4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72922229b7431aac7f5ac3d207a017473dccce4d", "patch": "@@ -1,3 +1,10 @@\n+2006-03-28  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/26796\n+\t* tree-ssa-dom.c (propagate_rhs_into_lhs): Queue blocks which\n+\tneed EH edge cleanups rather than purging them immediately.\n+\t(eliminate_degenerate_phis): Handle queued EH cleanups.\n+\n 2006-03-28  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-alias.c (create_sft): Initially inherit TREE_ADDRESSABLE"}, {"sha": "31e39d80e1cf86ba25c2d687b0c7516802a6b19d", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72922229b7431aac7f5ac3d207a017473dccce4d/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72922229b7431aac7f5ac3d207a017473dccce4d/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=72922229b7431aac7f5ac3d207a017473dccce4d", "patch": "@@ -2181,10 +2181,13 @@ propagate_rhs_into_lhs (tree stmt, tree lhs, tree rhs, bitmap interesting_names)\n \t    recompute_tree_invariant_for_addr_expr (TREE_OPERAND (use_stmt, 1));\n \n \t  /* If we cleaned up EH information from the statement,\n-             remove EH edges.  I'm not sure if this happens in \n-\t     practice with this code, but better safe than sorry.  */\n+\t     mark its containing block as needing EH cleanups.  */\n \t  if (maybe_clean_or_replace_eh_stmt (use_stmt, use_stmt))\n-\t    tree_purge_dead_eh_edges (bb_for_stmt (use_stmt));\n+\t    {\n+\t      bitmap_set_bit (need_eh_cleanup, bb_for_stmt (use_stmt)->index);\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\tfprintf (dump_file, \"  Flagged to clear EH edges.\\n\");\n+\t    }\n \n \t  /* Propagation may expose new degenerate PHIs or\n \t     trivial copy/constant propagation opportunities.  */\n@@ -2392,6 +2395,10 @@ eliminate_degenerate_phis (void)\n {\n   bitmap interesting_names;\n \n+  /* Bitmap of blocks which need EH information updated.  We can not\n+     update it on-the-fly as doing so invalidates the dominator tree.  */\n+  need_eh_cleanup = BITMAP_ALLOC (NULL);\n+\n   /* INTERESTING_NAMES is effectively our worklist, indexed by\n      SSA_NAME_VERSION.\n \n@@ -2436,6 +2443,14 @@ eliminate_degenerate_phis (void)\n \t}\n     }\n \n+  /* Propagation of const and copies may make some EH edges dead.  Purge\n+     such edges from the CFG as needed.  */\n+  if (!bitmap_empty_p (need_eh_cleanup))\n+    {\n+      cfg_altered |= tree_purge_all_dead_eh_edges (need_eh_cleanup);\n+      BITMAP_FREE (need_eh_cleanup);\n+    }\n+\n   BITMAP_FREE (interesting_names);\n   if (cfg_altered)\n     free_dominance_info (CDI_DOMINATORS);"}]}