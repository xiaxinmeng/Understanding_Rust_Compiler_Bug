{"sha": "5b1e6aca6a6a9957a08823e04393f50fa2d48150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxZTZhY2E2YTZhOTk1N2EwODgyM2UwNDM5M2Y1MGZhMmQ0ODE1MA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-02T14:35:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T14:35:51Z"}, "message": "einfo.ads, einfo.adb (Suppress_Initialization): Replaces Suppress_Init_Procs.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Suppress_Initialization): Replaces\n\tSuppress_Init_Procs.\n\t* exp_ch3.adb, exp_disp.adb, freeze.adb: Use\n\tSuppress_Initialization/Initialization_Suppressed.\n\t* gnat_rm.texi: New documentation for pragma Suppress_Initialization\n\t* sem_aux.ads, sem_aux.adb (Initialization_Suppressed): New function\n\t* sem_dist.adb: Use Suppress_Initialization/Initialization_Suppressed\n\t* sem_prag.adb: New processing for pragma Suppress_Initialization.\n\nFrom-SVN: r177161", "tree": {"sha": "b5e1f2abc5121468e223785e5208e0e3f4d7158a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5e1f2abc5121468e223785e5208e0e3f4d7158a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b1e6aca6a6a9957a08823e04393f50fa2d48150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1e6aca6a6a9957a08823e04393f50fa2d48150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1e6aca6a6a9957a08823e04393f50fa2d48150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1e6aca6a6a9957a08823e04393f50fa2d48150/comments", "author": null, "committer": null, "parents": [{"sha": "5ad4969daf921f7cd0e395d95f9ff9533b981d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad4969daf921f7cd0e395d95f9ff9533b981d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad4969daf921f7cd0e395d95f9ff9533b981d2e"}], "stats": {"total": 142, "additions": 101, "deletions": 41}, "files": [{"sha": "9f6b629264f09143baf6cf20a97de4b1679d66da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -1,3 +1,14 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Suppress_Initialization): Replaces\n+\tSuppress_Init_Procs.\n+\t* exp_ch3.adb, exp_disp.adb, freeze.adb: Use\n+\tSuppress_Initialization/Initialization_Suppressed.\n+\t* gnat_rm.texi: New documentation for pragma Suppress_Initialization\n+\t* sem_aux.ads, sem_aux.adb (Initialization_Suppressed): New function\n+\t* sem_dist.adb: Use Suppress_Initialization/Initialization_Suppressed\n+\t* sem_prag.adb: New processing for pragma Suppress_Initialization.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi, a-tags.ads, sem_prag.adb, sem_ch12.adb, exp_disp.adb:"}, {"sha": "6e1f089ab4607d8d079cce848eabd2809bd6500b", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -357,7 +357,7 @@ package body Einfo is\n    --    Is_Called                       Flag102\n    --    Is_Completely_Hidden            Flag103\n    --    Address_Taken                   Flag104\n-   --    Suppress_Init_Proc              Flag105\n+   --    Suppress_Initialization         Flag105\n    --    Is_Limited_Composite            Flag106\n    --    Is_Private_Composite            Flag107\n    --    Default_Expressions_Processed   Flag108\n@@ -2686,10 +2686,11 @@ package body Einfo is\n       return Flag148 (Id);\n    end Suppress_Elaboration_Warnings;\n \n-   function Suppress_Init_Proc (Id : E) return B is\n+   function Suppress_Initialization (Id : E) return B is\n    begin\n-      return Flag105 (Base_Type (Id));\n-   end Suppress_Init_Proc;\n+      pragma Assert (Is_Type (Id));\n+      return Flag105 (Id);\n+   end Suppress_Initialization;\n \n    function Suppress_Style_Checks (Id : E) return B is\n    begin\n@@ -5204,11 +5205,11 @@ package body Einfo is\n       Set_Flag148 (Id, V);\n    end Set_Suppress_Elaboration_Warnings;\n \n-   procedure Set_Suppress_Init_Proc (Id : E; V : B := True) is\n+   procedure Set_Suppress_Initialization (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Id = Base_Type (Id));\n+      pragma Assert (Is_Type (Id));\n       Set_Flag105 (Id, V);\n-   end Set_Suppress_Init_Proc;\n+   end Set_Suppress_Initialization;\n \n    procedure Set_Suppress_Style_Checks (Id : E; V : B := True) is\n    begin\n@@ -7567,7 +7568,7 @@ package body Einfo is\n       W (\"Static_Elaboration_Desired\",      Flag77  (Id));\n       W (\"Strict_Alignment\",                Flag145 (Id));\n       W (\"Suppress_Elaboration_Warnings\",   Flag148 (Id));\n-      W (\"Suppress_Init_Proc\",              Flag105 (Id));\n+      W (\"Suppress_Initialization\",         Flag105 (Id));\n       W (\"Suppress_Style_Checks\",           Flag165 (Id));\n       W (\"Suppress_Value_Tracking_On_Call\", Flag217 (Id));\n       W (\"Treat_As_Volatile\",               Flag41  (Id));"}, {"sha": "e070e5ea4f17c91ab13c66ca35e54c32e39cc648", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -3709,10 +3709,15 @@ package Einfo is\n --       elaboration, and it is set on variables when a warning is given to\n --       avoid multiple elaboration warnings for the same variable.\n \n---    Suppress_Init_Proc (Flag105) [base type only]\n---       Present in all type entities. Set to suppress the generation of\n---       initialization procedures where they are known to be not needed.\n---       For example, the enumeration image table entity uses this flag.\n+--    Suppress_Initialization (Flag105)\n+--       Present in all type and subtype entities. If set for the base type,\n+--       then the generation of initialization procedures is suppressed for the\n+--       type. Any other implicit initialiation (e.g. from the use of pragma\n+--       Initialize_Scalars) is also suppressed if this flag is set either for\n+--       the subtype in question, or for the base type. Set by use of pragma\n+--       Suppress_Initialization and also for internal entities where we know\n+--       that no initialization is required. For example, enumeration image\n+--       table entities set it.\n \n --    Suppress_Style_Checks (Flag165)\n --       Present in all entities. Suppresses any style checks specifically\n@@ -4849,7 +4854,7 @@ package Einfo is\n    --    Size_Depends_On_Discriminant        (Flag177)\n    --    Size_Known_At_Compile_Time          (Flag92)\n    --    Strict_Alignment                    (Flag145)  (base type only)\n-   --    Suppress_Init_Proc                  (Flag105)  (base type only)\n+   --    Suppress_Initialization             (Flag105)\n    --    Treat_As_Volatile                   (Flag41)\n    --    Universal_Aliasing                  (Flag216)  (base type only)\n \n@@ -6280,7 +6285,7 @@ package Einfo is\n    function String_Literal_Low_Bound            (Id : E) return N;\n    function Subprograms_For_Type                (Id : E) return E;\n    function Suppress_Elaboration_Warnings       (Id : E) return B;\n-   function Suppress_Init_Proc                  (Id : E) return B;\n+   function Suppress_Initialization             (Id : E) return B;\n    function Suppress_Style_Checks               (Id : E) return B;\n    function Suppress_Value_Tracking_On_Call     (Id : E) return B;\n    function Task_Body_Procedure                 (Id : E) return N;\n@@ -6869,7 +6874,7 @@ package Einfo is\n    procedure Set_String_Literal_Low_Bound        (Id : E; V : N);\n    procedure Set_Subprograms_For_Type            (Id : E; V : E);\n    procedure Set_Suppress_Elaboration_Warnings   (Id : E; V : B := True);\n-   procedure Set_Suppress_Init_Proc              (Id : E; V : B := True);\n+   procedure Set_Suppress_Initialization         (Id : E; V : B := True);\n    procedure Set_Suppress_Style_Checks           (Id : E; V : B := True);\n    procedure Set_Suppress_Value_Tracking_On_Call (Id : E; V : B := True);\n    procedure Set_Task_Body_Procedure             (Id : E; V : N);\n@@ -7603,7 +7608,7 @@ package Einfo is\n    pragma Inline (String_Literal_Low_Bound);\n    pragma Inline (Subprograms_For_Type);\n    pragma Inline (Suppress_Elaboration_Warnings);\n-   pragma Inline (Suppress_Init_Proc);\n+   pragma Inline (Suppress_Initialization);\n    pragma Inline (Suppress_Style_Checks);\n    pragma Inline (Suppress_Value_Tracking_On_Call);\n    pragma Inline (Task_Body_Procedure);\n@@ -7998,7 +8003,7 @@ package Einfo is\n    pragma Inline (Set_String_Literal_Low_Bound);\n    pragma Inline (Set_Subprograms_For_Type);\n    pragma Inline (Set_Suppress_Elaboration_Warnings);\n-   pragma Inline (Set_Suppress_Init_Proc);\n+   pragma Inline (Set_Suppress_Initialization);\n    pragma Inline (Set_Suppress_Style_Checks);\n    pragma Inline (Set_Suppress_Value_Tracking_On_Call);\n    pragma Inline (Set_Task_Body_Procedure);"}, {"sha": "eb1c6dc81486b6120b766521cd271a253e33deb6", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -674,7 +674,7 @@ package body Exp_Ch3 is\n       --    3. The type has CIL/JVM convention.\n       --    4. An initialization already exists for the base type\n \n-      if Suppress_Init_Proc (A_Type)\n+      if Initialization_Suppressed (A_Type)\n         or else Is_Value_Type (Comp_Type)\n         or else Convention (A_Type) = Convention_CIL\n         or else Convention (A_Type) = Convention_Java\n@@ -3216,7 +3216,7 @@ package body Exp_Ch3 is\n       begin\n          --  Definitely do not need one if specifically suppressed\n \n-         if Suppress_Init_Proc (Rec_Id) then\n+         if Initialization_Suppressed (Rec_Id) then\n             return False;\n          end if;\n \n@@ -4682,12 +4682,9 @@ package body Exp_Ch3 is\n \n             and then not Is_Value_Type (Typ)\n \n-            --  Suppress call if Suppress_Init_Proc set on the type. This is\n-            --  needed for the derived type case, where Suppress_Initialization\n-            --  may be set for the derived type, even if there is an init proc\n-            --  defined for the root type.\n+            --  Suppress call if initialization suppressed for the type\n \n-            and then not Suppress_Init_Proc (Typ)\n+            and then not Initialization_Suppressed (Typ)\n          then\n             --  Return without initializing when No_Default_Initialization\n             --  applies. Note that the actual restriction check occurs later,\n@@ -8536,6 +8533,12 @@ package body Exp_Ch3 is\n                            or (Initialize_Scalars and Consider_IS);\n \n    begin\n+      --  Never need initialization if it is suppressed\n+\n+      if Initialization_Suppressed (T) then\n+         return False;\n+      end if;\n+\n       --  Check for private type, in which case test applies to the underlying\n       --  type of the private type.\n "}, {"sha": "9a7b3308f9106eb6ba704d8d9ccf6d509ff2064d", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -6728,7 +6728,7 @@ package body Exp_Disp is\n             --  to simplify the expansion associated with dispatching calls.\n \n             Analyze_List (Result);\n-            Set_Suppress_Init_Proc (Base_Type (DT_Prims));\n+            Set_Suppress_Initialization (Base_Type (DT_Prims));\n \n             --  Disable backend optimizations based on assumptions about the\n             --  aliasing status of objects designated by the access to the"}, {"sha": "f1699db8a992cbc33aa5b6cad709a1462a3a2372", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -2865,7 +2865,7 @@ package body Freeze is\n                    ((Has_Non_Null_Base_Init_Proc (Etype (E))\n                       and then not No_Initialization (Declaration_Node (E))\n                       and then not Is_Value_Type (Etype (E))\n-                      and then not Suppress_Init_Proc (Etype (E)))\n+                      and then not Initialization_Suppressed (Etype (E)))\n                     or else\n                       (Needs_Simple_Initialization (Etype (E))\n                         and then not Is_Internal (E)))"}, {"sha": "94da75d25eeff6b95e3e98b7a2639346c786d28f", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -4892,7 +4892,18 @@ pragma Suppress_Initialization ([Entity =>] type_Name);\n \n @noindent\n This pragma suppresses any implicit or explicit initialization\n-associated with the given type name for all variables of this type.\n+associated with the given type name for all variables of this type,\n+including initialization resulting from the use of pragmas\n+Normalize_Scalars or Initialize_Scalars.\n+\n+This is considered a representation item, so it cannot be given after\n+the type is frozen. It applies to all subsequent object declarations,\n+and also any allocator that creates objects of the type.\n+\n+If the pragma is given for the first subtype, then it is considered\n+to apply to the base type and all its subtypes. If the pragma is given\n+for other than a first subtype, then it applies only to the given subtype.\n+The pragma may not be given after the type is frozen.\n \n @node Pragma Task_Info\n @unnumberedsec Pragma Task_Info"}, {"sha": "e46c87223f5d839e3a533924ddec397974755c17", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -403,6 +403,16 @@ package body Sem_Aux is\n       return Empty;\n    end First_Tag_Component;\n \n+   -------------------------------\n+   -- Initialization_Suppressed --\n+   -------------------------------\n+\n+   function Initialization_Suppressed (Typ : Entity_Id) return Boolean is\n+   begin\n+      return Suppress_Initialization (Typ)\n+        or else Suppress_Initialization (Base_Type (Typ));\n+   end Initialization_Suppressed;\n+\n    ----------------\n    -- Initialize --\n    ----------------"}, {"sha": "3903f583fe944f6e461f33111f3c08f460dfa67c", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -217,6 +217,12 @@ package Sem_Aux is\n    function Number_Discriminants (Typ : Entity_Id) return Pos;\n    --  Typ is a type with discriminants, yields number of discriminants in type\n \n+   function Initialization_Suppressed (Typ : Entity_Id) return Boolean;\n+   pragma Inline (Initialization_Suppressed);\n+   --  Returns True if initialization should be suppressed for the given type\n+   --  or subtype. This is true if Suppress_Initialization is set either for\n+   --  the subtype itself, or for the corresponding base type.\n+\n    function Ultimate_Alias (Prim : Entity_Id) return Entity_Id;\n    pragma Inline (Ultimate_Alias);\n    --  Return the last entity in the chain of aliased entities of Prim. If Prim"}, {"sha": "f30e55d315c0a957ea557f82f5e23d1a4034b9ae", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -610,7 +610,7 @@ package body Sem_Dist is\n       --  is active), and there are order of elaboration problems if we do try\n       --  to generate an init proc for this created record type.\n \n-      Set_Suppress_Init_Proc (Fat_Type);\n+      Set_Suppress_Initialization (Fat_Type);\n \n       if Expander_Active then\n          Add_RAST_Features (Parent (User_Type));"}, {"sha": "4f54170472c55540dd6b28b9b62fa2446638c1af", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1e6aca6a6a9957a08823e04393f50fa2d48150/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5b1e6aca6a6a9957a08823e04393f50fa2d48150", "patch": "@@ -6359,7 +6359,6 @@ package body Sem_Prag is\n                  (\"pragma% cannot be applied to function\", Arg1);\n \n             elsif Is_Remote_Access_To_Subprogram_Type (Nm) then\n-\n                   if Is_Record_Type (Nm) then\n \n                   --  A record type that is the Equivalent_Type for a remote\n@@ -12751,22 +12750,36 @@ package body Sem_Prag is\n \n             E := Entity (E_Id);\n \n-            if Is_Type (E) then\n-               if Is_Incomplete_Or_Private_Type (E) then\n-                  if No (Full_View (Base_Type (E))) then\n-                     Error_Pragma_Arg\n-                       (\"argument of pragma% cannot be an incomplete type\",\n-                         Arg1);\n-                  else\n-                     Set_Suppress_Init_Proc (Full_View (Base_Type (E)));\n-                  end if;\n+            if not Is_Type (E) then\n+               Error_Pragma_Arg (\"pragma% requires type or subtype\", Arg1);\n+            end if;\n+\n+            if Rep_Item_Too_Early (E, N)\n+                 or else\n+               Rep_Item_Too_Late (E, N, FOnly => True)\n+            then\n+               return;\n+            end if;\n+\n+            --  For incomplete/private type, set flag on full view\n+\n+            if Is_Incomplete_Or_Private_Type (E) then\n+               if No (Full_View (Base_Type (E))) then\n+                  Error_Pragma_Arg\n+                    (\"argument of pragma% cannot be an incomplete type\", Arg1);\n                else\n-                  Set_Suppress_Init_Proc (Base_Type (E));\n+                  Set_Suppress_Initialization (Full_View (Base_Type (E)));\n                end if;\n \n+            --  For first subtype, set flag on base type\n+\n+            elsif Is_First_Subtype (E) then\n+               Set_Suppress_Initialization (Base_Type (E));\n+\n+            --  For other than first subtype, set flag on subtype itself\n+\n             else\n-               Error_Pragma_Arg\n-                 (\"pragma% requires argument that is a type name\", Arg1);\n+               Set_Suppress_Initialization (E);\n             end if;\n          end Suppress_Init;\n "}]}