{"sha": "4052c05e5b30fee0fb95a51e74e12a56dce29491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1MmMwNWU1YjMwZmVlMGZiOTVhNTFlNzRlMTJhNTZkY2UyOTQ5MQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-07-15T17:34:54Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-10-26T11:15:47Z"}, "message": "x86: Inline strncmp only with -minline-all-stringops\n\nExpand strncmp to \"repz cmpsb\" only with -minline-all-stringops since\n\"repz cmpsb\" can be much slower than strncmp function implemented with\nvector instructions, see\n\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=43052\n\ngcc/\n\n\tPR target/95458\n\t* config/i386/i386-expand.c (ix86_expand_cmpstrn_or_cmpmem):\n\tReturn false for -mno-inline-all-stringops.\n\ngcc/testsuite/\n\n\tPR target/95458\n\t* gcc.target/i386/pr95458-1.c: New test.\n\t* gcc.target/i386/pr95458-2.c: Likewise.", "tree": {"sha": "b022dbf38ce2640fd94a6a90cc0afff50bf01280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b022dbf38ce2640fd94a6a90cc0afff50bf01280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4052c05e5b30fee0fb95a51e74e12a56dce29491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4052c05e5b30fee0fb95a51e74e12a56dce29491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4052c05e5b30fee0fb95a51e74e12a56dce29491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4052c05e5b30fee0fb95a51e74e12a56dce29491/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3edc21af5272194794fbf24b2c5f0981c632e866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edc21af5272194794fbf24b2c5f0981c632e866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edc21af5272194794fbf24b2c5f0981c632e866"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "19a9f2d1cbf7688d0eac3a9e6f14deb6c66fdde5", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=4052c05e5b30fee0fb95a51e74e12a56dce29491", "patch": "@@ -7679,7 +7679,13 @@ bool\n ix86_expand_cmpstrn_or_cmpmem (rtx result, rtx src1, rtx src2,\n \t\t\t       rtx length, rtx align, bool is_cmpstrn)\n {\n-  if (optimize_insn_for_size_p () && !TARGET_INLINE_ALL_STRINGOPS)\n+  /* Expand strncmp and memcmp only with -minline-all-stringops since\n+     \"repz cmpsb\" can be much slower than strncmp and memcmp functions\n+     implemented with vector instructions, see\n+\n+     https://gcc.gnu.org/bugzilla/show_bug.cgi?id=43052\n+   */\n+  if (!TARGET_INLINE_ALL_STRINGOPS)\n     return false;\n \n   /* Can't use this if the user has appropriated ecx, esi or edi.  */\n@@ -7706,17 +7712,6 @@ ix86_expand_cmpstrn_or_cmpmem (rtx result, rtx src1, rtx src2,\n \t\t    == STRING_CST))))\n \treturn false;\n     }\n-  else\n-    {\n-      /* Expand memcmp to \"repz cmpsb\" only for -minline-all-stringops\n-\t since \"repz cmpsb\" can be much slower than memcmp function\n-\t implemented with vector instructions, see\n-\n-\t https://gcc.gnu.org/bugzilla/show_bug.cgi?id=43052\n-       */\n-      if (!TARGET_INLINE_ALL_STRINGOPS)\n-\treturn false;\n-    }\n \n   rtx addr1 = copy_addr_to_reg (XEXP (src1, 0));\n   rtx addr2 = copy_addr_to_reg (XEXP (src2, 0));"}, {"sha": "231a4787dce76311d693097f74f8b03f4b9f70cc", "filename": "gcc/testsuite/gcc.target/i386/pr95458-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-1.c?ref=4052c05e5b30fee0fb95a51e74e12a56dce29491", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -minline-all-stringops\" } */\n+\n+int\n+func (char *d, unsigned int l)\n+{\n+  return __builtin_strncmp (d, \"foo\", l) ? 1 : 2;\n+}\n+\n+/* { dg-final { scan-assembler-not \"call\\[\\\\t \\]*_?strncmp\" } } */\n+/* { dg-final { scan-assembler \"cmpsb\" } } */"}, {"sha": "1a62044477090e29d35a7e063424de801cad2910", "filename": "gcc/testsuite/gcc.target/i386/pr95458-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4052c05e5b30fee0fb95a51e74e12a56dce29491/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95458-2.c?ref=4052c05e5b30fee0fb95a51e74e12a56dce29491", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-inline-all-stringops\" } */\n+\n+#include \"pr95458-1.c\"\n+\n+/* { dg-final { scan-assembler \"call\\[\\\\t \\]*_?strncmp\" } } */\n+/* { dg-final { scan-assembler-not \"cmpsb\" } } */"}]}