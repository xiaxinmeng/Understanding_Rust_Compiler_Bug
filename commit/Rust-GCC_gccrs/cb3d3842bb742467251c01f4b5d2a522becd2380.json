{"sha": "cb3d3842bb742467251c01f4b5d2a522becd2380", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzZDM4NDJiYjc0MjQ2NzI1MWMwMWY0YjVkMmE1MjJiZWNkMjM4MA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-11-13T23:08:24Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-11-13T23:08:24Z"}, "message": "sh.c (expand_cbranchdi4): Initialize skip_label.\n\n\t* config/sh/sh.c (expand_cbranchdi4): Initialize skip_label.\n\t(sh_optimize_target_register_callee_saved): #if 0 the code\n\tusing NOTE_INSN_LOOP_{BEG,END}.\n\nFrom-SVN: r118784", "tree": {"sha": "4b0740ed73c089dac82bbac2dd6e68c19379ed16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b0740ed73c089dac82bbac2dd6e68c19379ed16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3d3842bb742467251c01f4b5d2a522becd2380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3d3842bb742467251c01f4b5d2a522becd2380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3d3842bb742467251c01f4b5d2a522becd2380", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3d3842bb742467251c01f4b5d2a522becd2380/comments", "author": null, "committer": null, "parents": [{"sha": "7c06f565759c2130b55a011ea4cfff278907bda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c06f565759c2130b55a011ea4cfff278907bda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c06f565759c2130b55a011ea4cfff278907bda0"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "ecdbbf86f6f71a8c929a235f14a5dacea1ad77fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d3842bb742467251c01f4b5d2a522becd2380/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d3842bb742467251c01f4b5d2a522becd2380/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb3d3842bb742467251c01f4b5d2a522becd2380", "patch": "@@ -1,3 +1,9 @@\n+2006-11-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (expand_cbranchdi4): Initialize skip_label.\n+\t(sh_optimize_target_register_callee_saved): #if 0 the code\n+\tusing NOTE_INSN_LOOP_{BEG,END}.\n+\n 2006-11-13  Roger Sayle  <roger@eyesopen.com>\n \n \t* fold-const.c (optimize_bit_field_compare): Recursively call"}, {"sha": "bc3a7b7fbbbc46f9b6b8963fd8e0d469905cb279", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d3842bb742467251c01f4b5d2a522becd2380/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d3842bb742467251c01f4b5d2a522becd2380/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=cb3d3842bb742467251c01f4b5d2a522becd2380", "patch": "@@ -1483,7 +1483,7 @@ bool\n expand_cbranchdi4 (rtx *operands, enum rtx_code comparison)\n {\n   enum rtx_code msw_taken, msw_skip, lsw_taken;\n-  rtx skip_label;\n+  rtx skip_label = NULL_RTX;\n   rtx op1h, op1l, op2h, op2l;\n   int num_branches;\n   int prob, rev_prob;\n@@ -9398,14 +9398,17 @@ static bool\n sh_optimize_target_register_callee_saved (bool after_prologue_epilogue_gen)\n {\n   HARD_REG_SET dummy;\n+#if 0\n   rtx insn;\n+#endif\n \n   if (! shmedia_space_reserved_for_target_registers)\n     return 0;\n   if (after_prologue_epilogue_gen && ! TARGET_SAVE_ALL_TARGET_REGS)\n     return 0;\n   if (calc_live_regs (&dummy) >= 6 * 8)\n     return 1;\n+#if 0\n   /* This is a borderline case.  See if we got a nested loop, or a loop\n      with a call, or with more than 4 labels inside.  */\n   for (insn = get_insns(); insn; insn = NEXT_INSN (insn))\n@@ -9428,6 +9431,7 @@ sh_optimize_target_register_callee_saved (bool after_prologue_epilogue_gen)\n \t\t || NOTE_LINE_NUMBER (insn) != NOTE_INSN_LOOP_END);\n \t}\n     }\n+#endif\n   return 0;\n }\n "}]}