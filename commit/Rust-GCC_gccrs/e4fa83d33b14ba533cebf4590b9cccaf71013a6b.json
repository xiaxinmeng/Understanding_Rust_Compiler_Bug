{"sha": "e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmYTgzZDMzYjE0YmE1MzNjZWJmNDU5MGI5Y2NjYWY3MTAxM2E2Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-10T15:53:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-10T15:53:04Z"}, "message": "crtstuff.c (force_to_data, [...]): Attribute as used rather than unused.\n\n\n\t* crtstuff.c (force_to_data, __do_global_dtors_aux_fini_array_entry,\n\t__frame_dummy_init_array_entry, force_to_data): Attribute as used\n\trather than unused.\n\nFrom-SVN: r159228", "tree": {"sha": "691be737e6026055e28a2dffa6da93658421748f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691be737e6026055e28a2dffa6da93658421748f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4fa83d33b14ba533cebf4590b9cccaf71013a6b/comments", "author": null, "committer": null, "parents": [{"sha": "62e59133e3207b2fa34f58f27f4cc8a176790421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e59133e3207b2fa34f58f27f4cc8a176790421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e59133e3207b2fa34f58f27f4cc8a176790421"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "43bb8376d5b2f7fc448b02a180cae65886039c9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fa83d33b14ba533cebf4590b9cccaf71013a6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fa83d33b14ba533cebf4590b9cccaf71013a6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "patch": "@@ -1,3 +1,9 @@\n+2010-05-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* crtstuff.c (force_to_data, __do_global_dtors_aux_fini_array_entry,\n+\t__frame_dummy_init_array_entry, force_to_data): Attribute as used\n+\trather than unused.\n+\n 2010-05-10  Michael Matz  <matz@suse.de>\n \n \t* tree-ssa-reassoc.c (undistribute_ops_list): Use create_tmp_reg."}, {"sha": "e86f3a9535aa59ff21db830cffd74bc1c8168ebc", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fa83d33b14ba533cebf4590b9cccaf71013a6b/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fa83d33b14ba533cebf4590b9cccaf71013a6b/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=e4fa83d33b14ba533cebf4590b9cccaf71013a6b", "patch": "@@ -187,14 +187,14 @@ CTOR_LIST_BEGIN;\n #elif defined(CTORS_SECTION_ASM_OP)\n /* Hack: force cc1 to switch to .data section early, so that assembling\n    __CTOR_LIST__ does not undo our behind-the-back change to .ctors.  */\n-static func_ptr force_to_data[1] __attribute__ ((__unused__)) = { };\n+static func_ptr force_to_data[1] __attribute__ ((__used__)) = { };\n asm (CTORS_SECTION_ASM_OP);\n STATIC func_ptr __CTOR_LIST__[1]\n-  __attribute__ ((__unused__, aligned(sizeof(func_ptr))))\n+  __attribute__ ((__used__, aligned(sizeof(func_ptr))))\n   = { (func_ptr) (-1) };\n #else\n STATIC func_ptr __CTOR_LIST__[1]\n-  __attribute__ ((__unused__, section(\".ctors\"), aligned(sizeof(func_ptr))))\n+  __attribute__ ((__used__, section(\".ctors\"), aligned(sizeof(func_ptr))))\n   = { (func_ptr) (-1) };\n #endif /* __CTOR_LIST__ alternatives */\n \n@@ -336,7 +336,7 @@ __do_global_dtors_aux (void)\n CRT_CALL_STATIC_FUNCTION (FINI_SECTION_ASM_OP, __do_global_dtors_aux)\n #elif defined (FINI_ARRAY_SECTION_ASM_OP)\n static func_ptr __do_global_dtors_aux_fini_array_entry[]\n-  __attribute__ ((__unused__, section(\".fini_array\")))\n+  __attribute__ ((__used__, section(\".fini_array\")))\n   = { __do_global_dtors_aux };\n #else /* !FINI_SECTION_ASM_OP && !FINI_ARRAY_SECTION_ASM_OP */\n static void __attribute__((used))\n@@ -383,7 +383,7 @@ frame_dummy (void)\n CRT_CALL_STATIC_FUNCTION (INIT_SECTION_ASM_OP, frame_dummy)\n #else /* defined(INIT_SECTION_ASM_OP) */\n static func_ptr __frame_dummy_init_array_entry[]\n-  __attribute__ ((__unused__, section(\".init_array\")))\n+  __attribute__ ((__used__, section(\".init_array\")))\n   = { frame_dummy };\n #endif /* !defined(INIT_SECTION_ASM_OP) */\n #endif /* USE_EH_FRAME_REGISTRY || JCR_SECTION_NAME */\n@@ -491,7 +491,7 @@ CTOR_LIST_END;\n #elif defined(CTORS_SECTION_ASM_OP)\n /* Hack: force cc1 to switch to .data section early, so that assembling\n    __CTOR_LIST__ does not undo our behind-the-back change to .ctors.  */\n-static func_ptr force_to_data[1] __attribute__ ((__unused__)) = { };\n+static func_ptr force_to_data[1] __attribute__ ((__used__)) = { };\n asm (CTORS_SECTION_ASM_OP);\n STATIC func_ptr __CTOR_END__[1]\n   __attribute__((aligned(sizeof(func_ptr))))"}]}