{"sha": "3b89428c0d5710c8093055b3d92c543888759f93", "node_id": "C_kwDOANBUbNoAKDNiODk0MjhjMGQ1NzEwYzgwOTMwNTViM2Q5MmM1NDM4ODg3NTlmOTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-12-14T14:46:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-14T14:46:30Z"}, "message": "Merge #1703\n\n1703: Backport \"c++: Quash -Wdangling-reference for member operator* [PR107488]\" r=tschwinge a=tschwinge\n\nAs had also been reported in <https://gcc.gnu.org/PR107633> \"Bootstrap failure due to -Werror=unused-parameter and -Werror=dangling-reference\", GCC `--enable-bootstrap` build is currently broken:\r\n\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc: In member function \u2018tree_node* Rust::Compile::CompileExpr::resolve_method_address(Rust::TyTy::FnType*, Rust::HirId, Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment&, Rust::Analysis::NodeMapping, Location)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:2019:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n     2019 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:2019:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n     2019 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc: In member function \u2018tree_node* Rust::Compile::CompileExpr::generate_closure_fntype(Rust::HIR::ClosureExpr&, const Rust::TyTy::ClosureType&, tree, Rust::TyTy::FnType**)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:3034:35: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n     3034 |   const TyTy::TypeBoundPredicate &predicate\r\n          |                                   ^~~~~~~~~\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:3035:52: note: the temporary was destroyed at the end of the full expression \u2018(&(& closure_tyty)->Rust::TyTy::ClosureType::<anonymous>.Rust::TyTy::BaseType::<anonymous>.Rust::TyTy::TypeBoundsMappings::get_specified_bounds())->std::vector<Rust::TyTy::TypeBoundPredicate>::begin().__gnu_cxx::__normal_iterator<const Rust::TyTy::TypeBoundPredicate*, std::vector<Rust::TyTy::TypeBoundPredicate> >::operator*()\u2019\r\n     3035 |     = *closure_tyty.get_specified_bounds ().begin ();\r\n          |                                                    ^\r\n    \r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc: In member function \u2018void Rust::Resolver::TypeCheckExpr::resolve_segments(Rust::NodeId, std::vector<Rust::HIR::PathExprSegment>&, size_t, Rust::TyTy::BaseType*, const Rust::Analysis::NodeMapping&, Location)\u2019:\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc:340:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n      340 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc:340:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n      340 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n    \r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc: In member function \u2018Rust::TyTy::BaseType* Rust::Resolver::TypeCheckType::resolve_segments(Rust::NodeId, Rust::HirId, std::vector<std::unique_ptr<Rust::HIR::TypePathSegment> >&, size_t, Rust::TyTy::BaseType*, const Rust::Analysis::NodeMapping&, Location)\u2019:\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc:465:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n      465 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc:465:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n      465 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n\r\nI understand this code has been changed in the GCC/Rust upstream submission; but in order to make progress with #1700, I'd like to first individually backport \"c++: Quash -Wdangling-reference for member operator* [PR107488]\", to resolve this issue here.\r\n\n\nCo-authored-by: Marek Polacek <polacek@redhat.com>", "tree": {"sha": "beec559689144dfe4f023924ae1dd3a37b19a580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beec559689144dfe4f023924ae1dd3a37b19a580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b89428c0d5710c8093055b3d92c543888759f93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjmeHGCRBK7hj4Ov3rIwAAmYAIAEdD5UWHj1KodEfl8r0pgyHn\nqa0HGfB8SL3Eu2PsKY35NLulAIaJBY9KCTdVFDeZ6ltC67CLTXGxhxPyf7vzLhTM\n5nyM4avTngkjOqqWubvEE9fVfnPbijOKVZEkG/rl2VVUR2ujHwm/oLRuAeiBallq\nI3cKa79POAjHbbsYYOzMqKxd5K+hE+cGE7zkKFYdGCQKmkdjk2KJHjMQ+zC3ZRft\nPPv6vWVGNx4dBkgSv+4FTuo0QRGVGIs2XMVPbDSh0a/wY1cwFUlmWwIp7ELlMYFK\nhssx0RD1jPvk8NGuQRmWaJbvbqivcARdyf542dsq8GI/J92eS6orV0kdQIteT6s=\n=EU2j\n-----END PGP SIGNATURE-----\n", "payload": "tree beec559689144dfe4f023924ae1dd3a37b19a580\nparent 3d6dbb6fc5d1d14bf36a879b6f4a00ae91090a63\nparent 5c2e6c93d919b939ba7eca2100fa35cc444f4b8d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1671029190 +0000\ncommitter GitHub <noreply@github.com> 1671029190 +0000\n\nMerge #1703\n\n1703: Backport \"c++: Quash -Wdangling-reference for member operator* [PR107488]\" r=tschwinge a=tschwinge\n\nAs had also been reported in <https://gcc.gnu.org/PR107633> \"Bootstrap failure due to -Werror=unused-parameter and -Werror=dangling-reference\", GCC `--enable-bootstrap` build is currently broken:\r\n\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc: In member function \u2018tree_node* Rust::Compile::CompileExpr::resolve_method_address(Rust::TyTy::FnType*, Rust::HirId, Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment&, Rust::Analysis::NodeMapping, Location)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:2019:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n     2019 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:2019:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n     2019 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc: In member function \u2018tree_node* Rust::Compile::CompileExpr::generate_closure_fntype(Rust::HIR::ClosureExpr&, const Rust::TyTy::ClosureType&, tree, Rust::TyTy::FnType**)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:3034:35: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n     3034 |   const TyTy::TypeBoundPredicate &predicate\r\n          |                                   ^~~~~~~~~\r\n    [...]/gcc/rust/backend/rust-compile-expr.cc:3035:52: note: the temporary was destroyed at the end of the full expression \u2018(&(& closure_tyty)->Rust::TyTy::ClosureType::<anonymous>.Rust::TyTy::BaseType::<anonymous>.Rust::TyTy::TypeBoundsMappings::get_specified_bounds())->std::vector<Rust::TyTy::TypeBoundPredicate>::begin().__gnu_cxx::__normal_iterator<const Rust::TyTy::TypeBoundPredicate*, std::vector<Rust::TyTy::TypeBoundPredicate> >::operator*()\u2019\r\n     3035 |     = *closure_tyty.get_specified_bounds ().begin ();\r\n          |                                                    ^\r\n    \r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc: In member function \u2018void Rust::Resolver::TypeCheckExpr::resolve_segments(Rust::NodeId, std::vector<Rust::HIR::PathExprSegment>&, size_t, Rust::TyTy::BaseType*, const Rust::Analysis::NodeMapping&, Location)\u2019:\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc:340:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n      340 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-path.cc:340:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n      340 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n    \r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc: In member function \u2018Rust::TyTy::BaseType* Rust::Resolver::TypeCheckType::resolve_segments(Rust::NodeId, Rust::HirId, std::vector<std::unique_ptr<Rust::HIR::TypePathSegment> >&, size_t, Rust::TyTy::BaseType*, const Rust::Analysis::NodeMapping&, Location)\u2019:\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc:465:13: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n      465 |       auto &candidate = *candidates.begin ();\r\n          |             ^~~~~~~~~\r\n    [...]/gcc/rust/typecheck/rust-hir-type-check-type.cc:465:44: note: the temporary was destroyed at the end of the full expression \u2018candidates.std::set<Rust::Resolver::PathProbeCandidate>::begin().std::_Rb_tree_const_iterator<Rust::Resolver::PathProbeCandidate>::operator*()\u2019\r\n      465 |       auto &candidate = *candidates.begin ();\r\n          |                                            ^\r\n\r\nI understand this code has been changed in the GCC/Rust upstream submission; but in order to make progress with #1700, I'd like to first individually backport \"c++: Quash -Wdangling-reference for member operator* [PR107488]\", to resolve this issue here.\r\n\n\nCo-authored-by: Marek Polacek <polacek@redhat.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b89428c0d5710c8093055b3d92c543888759f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b89428c0d5710c8093055b3d92c543888759f93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b89428c0d5710c8093055b3d92c543888759f93/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d6dbb6fc5d1d14bf36a879b6f4a00ae91090a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6dbb6fc5d1d14bf36a879b6f4a00ae91090a63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d6dbb6fc5d1d14bf36a879b6f4a00ae91090a63"}, {"sha": "5c2e6c93d919b939ba7eca2100fa35cc444f4b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2e6c93d919b939ba7eca2100fa35cc444f4b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2e6c93d919b939ba7eca2100fa35cc444f4b8d"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "2c0fa37f53a969742e839b0ff1111df9722a48e7", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b89428c0d5710c8093055b3d92c543888759f93/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b89428c0d5710c8093055b3d92c543888759f93/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=3b89428c0d5710c8093055b3d92c543888759f93", "patch": "@@ -13467,7 +13467,17 @@ do_warn_dangling_reference (tree expr)\n \t       can be e.g.\n \t\t const int& z = std::min({1, 2, 3, 4, 5, 6, 7});\n \t       which doesn't dangle: std::min here returns an int.  */\n-\t    || !TYPE_REF_OBJ_P (TREE_TYPE (TREE_TYPE (fndecl))))\n+\t    || !TYPE_REF_OBJ_P (TREE_TYPE (TREE_TYPE (fndecl)))\n+\t    /* Don't emit a false positive for:\n+\t\tstd::vector<int> v = ...;\n+\t\tstd::vector<int>::const_iterator it = v.begin();\n+\t\tconst int &r = *it++;\n+\t       because R refers to one of the int elements of V, not to\n+\t       a temporary object.  Member operator* may return a reference\n+\t       but probably not to one of its arguments.  */\n+\t    || (DECL_NONSTATIC_MEMBER_FUNCTION_P (fndecl)\n+\t\t&& DECL_OVERLOADED_OPERATOR_P (fndecl)\n+\t\t&& DECL_OVERLOADED_OPERATOR_IS (fndecl, INDIRECT_REF)))\n \t  return NULL_TREE;\n \n \t/* Here we're looking to see if any of the arguments is a temporary"}, {"sha": "59b5538aee59bf7c3cff1d0d740c0e7c0b6c89a5", "filename": "gcc/testsuite/g++.dg/warn/Wdangling-reference5.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b89428c0d5710c8093055b3d92c543888759f93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdangling-reference5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b89428c0d5710c8093055b3d92c543888759f93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdangling-reference5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdangling-reference5.C?ref=3b89428c0d5710c8093055b3d92c543888759f93", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/107488\n+// { dg-do compile }\n+// { dg-options \"-Wdangling-reference\" }\n+\n+#include <vector>\n+\n+int\n+do_sum (std::vector<int>& v)\n+{\n+  int sum = 0;\n+\n+  std::vector<int>::const_iterator it = v.begin();\n+  while (it != v.end())\n+    {\n+      // R refers to one of the int elements of V, not to a temporary\n+      // object, so no dangling reference here.\n+      const int &r = *it++; // { dg-bogus \"dangling reference\" }\n+      sum += r;\n+    }\n+\n+  return sum;\n+}"}]}