{"sha": "15c8ec1ccde96eb39e9cced074149b8828ef5a49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjOGVjMWNjZGU5NmViMzllOWNjZWQwNzQxNDliODgyOGVmNWE0OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T11:10:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T11:10:37Z"}, "message": "(valid_machine_attribute): Handle attribute on pointer-to-function\ntypes.\n\nFrom-SVN: r9762", "tree": {"sha": "8eb521640092425569a92d93fc071de7299b92fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb521640092425569a92d93fc071de7299b92fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c8ec1ccde96eb39e9cced074149b8828ef5a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c8ec1ccde96eb39e9cced074149b8828ef5a49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c8ec1ccde96eb39e9cced074149b8828ef5a49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c8ec1ccde96eb39e9cced074149b8828ef5a49/comments", "author": null, "committer": null, "parents": [{"sha": "4033d0e70207cb1f4df19c65dfb0246b64173dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4033d0e70207cb1f4df19c65dfb0246b64173dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4033d0e70207cb1f4df19c65dfb0246b64173dbc"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "1d7ad92fcffb4ca4b240c8a8d63f1c4f5fcbd58a", "filename": "gcc/tree.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c8ec1ccde96eb39e9cced074149b8828ef5a49/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c8ec1ccde96eb39e9cced074149b8828ef5a49/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=15c8ec1ccde96eb39e9cced074149b8828ef5a49", "patch": "@@ -3003,6 +3003,33 @@ valid_machine_attribute (attr_name, attr_args, decl, type)\n \tTREE_TYPE (decl) = type;\n       valid = 1;\n     }\n+\n+  /* Handle putting a type attribute on pointer-to-function-type by putting\n+     the attribute on the function type.  */\n+  else if (TREE_CODE (type) == POINTER_TYPE\n+\t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE\n+\t   && VALID_MACHINE_TYPE_ATTRIBUTE (TREE_TYPE (type), type_attr_list,\n+\t\t\t\t\t    attr_name, attr_args))\n+    {\n+      tree inner_type = TREE_TYPE (type);\n+      tree inner_attr_list = TYPE_ATTRIBUTES (inner_type);\n+      tree attr = lookup_attribute (IDENTIFIER_POINTER (attr_name),\n+\t\t\t\t    type_attr_list);\n+\n+      if (attr != NULL_TREE)\n+\tTREE_VALUE (attr) = attr_args;\n+      else\n+\t{\n+\t  inner_attr_list = tree_cons (attr_name, attr_args, inner_attr_list);\n+\t  inner_type = build_type_attribute_variant (inner_type,\n+\t\t\t\t\t\t     inner_attr_list);\n+\t}\n+\n+      if (decl != 0)\n+\tTREE_TYPE (decl) = build_pointer_type (inner_type);\n+\n+      valid = 1;\n+    }\n #endif\n \n   return valid;"}]}