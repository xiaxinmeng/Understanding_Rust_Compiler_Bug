{"sha": "48f316eafeb6fa1196298313a03783901c00782b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmMzE2ZWFmZWI2ZmExMTk2Mjk4MzEzYTAzNzgzOTAxYzAwNzgyYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-14T07:41:42Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-14T07:41:42Z"}, "message": "re PR fortran/57596 (Wrong code for allocatable deferred-length strings)\n\n2013-06-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57596\n        * trans-decl.c (gfc_trans_deferred_vars): Honor OPTIONAL\n        for nullify and deferred-strings' length variable.\n\n2013-06-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57596\n        * gfortran.dg/deferred_type_param_9.f90: New.\n\nFrom-SVN: r200084", "tree": {"sha": "4304ffac3b4a75f73e74a464366705dcf939ae47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4304ffac3b4a75f73e74a464366705dcf939ae47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f316eafeb6fa1196298313a03783901c00782b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f316eafeb6fa1196298313a03783901c00782b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f316eafeb6fa1196298313a03783901c00782b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f316eafeb6fa1196298313a03783901c00782b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "366a1bc6b266446d978a097a1d6dba0020b6539b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366a1bc6b266446d978a097a1d6dba0020b6539b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366a1bc6b266446d978a097a1d6dba0020b6539b"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "07ab220941945fd7a9a4232340ee7d19195c8bc0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=48f316eafeb6fa1196298313a03783901c00782b", "patch": "@@ -1,3 +1,9 @@\n+2013-06-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57596\n+\t* trans-decl.c (gfc_trans_deferred_vars): Honor OPTIONAL\n+\tfor nullify and deferred-strings' length variable.\n+\n 2013-06-13  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/49074"}, {"sha": "f04ebdced0ad6bd5bc2c277e3ee0366f9c380053", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=48f316eafeb6fa1196298313a03783901c00782b", "patch": "@@ -3855,12 +3855,21 @@ gfc_trans_deferred_vars (gfc_symbol * proc_sym, gfc_wrapped_block * block)\n \t      if (!sym->attr.dummy || sym->attr.intent == INTENT_OUT)\n \t\t{\n \t\t  /* Nullify when entering the scope.  */\n-\t\t  gfc_add_modify (&init, se.expr,\n-\t\t\t\t  fold_convert (TREE_TYPE (se.expr),\n-\t\t\t\t\t        null_pointer_node));\n+\t\t  tmp = fold_build2_loc (input_location, MODIFY_EXPR,\n+\t\t\t\t\t TREE_TYPE (se.expr), se.expr,\n+\t\t\t\t\t fold_convert (TREE_TYPE (se.expr),\n+\t\t\t\t\t\t       null_pointer_node));\n+\t\t  if (sym->attr.optional)\n+\t\t    {\n+\t\t      tree present = gfc_conv_expr_present (sym);\n+\t\t      tmp = build3_loc (input_location, COND_EXPR,\n+\t\t\t\t\tvoid_type_node, present, tmp,\n+\t\t\t\t\tbuild_empty_stmt (input_location));\n+\t\t    }\n+\t\t  gfc_add_expr_to_block (&init, tmp);\n \t\t}\n \n-\t      if ((sym->attr.dummy ||sym->attr.result)\n+\t      if ((sym->attr.dummy || sym->attr.result)\n \t\t    && sym->ts.type == BT_CHARACTER\n \t\t    && sym->ts.deferred)\n \t\t{\n@@ -3874,15 +3883,38 @@ gfc_trans_deferred_vars (gfc_symbol * proc_sym, gfc_wrapped_block * block)\n \t\t    gfc_add_modify (&init, sym->ts.u.cl->backend_decl,\n \t\t\t\tbuild_int_cst (gfc_charlen_type_node, 0));\n \t\t  else\n-\t\t    gfc_add_modify (&init, sym->ts.u.cl->backend_decl, tmp);\n+\t\t    {\n+\t\t      tree tmp2;\n+\n+\t\t      tmp2 = fold_build2_loc (input_location, MODIFY_EXPR,\n+\t\t\t\t\t      gfc_charlen_type_node,\n+\t\t\t\t\t      sym->ts.u.cl->backend_decl, tmp);\n+\t\t      if (sym->attr.optional)\n+\t\t\t{\n+\t\t\t  tree present = gfc_conv_expr_present (sym);\n+\t\t\t  tmp2 = build3_loc (input_location, COND_EXPR,\n+\t\t\t\t\t     void_type_node, present, tmp2,\n+\t\t\t\t\t     build_empty_stmt (input_location));\n+\t\t\t}\n+\t\t      gfc_add_expr_to_block (&init, tmp2);\n+\t\t    }\n \n \t\t  gfc_restore_backend_locus (&loc);\n \n \t\t  /* Pass the final character length back.  */\n \t\t  if (sym->attr.intent != INTENT_IN)\n-\t\t    tmp = fold_build2_loc (input_location, MODIFY_EXPR,\n-\t\t\t\t\t   gfc_charlen_type_node, tmp,\n-\t\t\t\t\t   sym->ts.u.cl->backend_decl);\n+\t\t    {\n+\t\t      tmp = fold_build2_loc (input_location, MODIFY_EXPR,\n+\t\t\t\t\t     gfc_charlen_type_node, tmp,\n+\t\t\t\t\t     sym->ts.u.cl->backend_decl);\n+\t\t      if (sym->attr.optional)\n+\t\t\t{\n+\t\t\t  tree present = gfc_conv_expr_present (sym);\n+\t\t\t  tmp = build3_loc (input_location, COND_EXPR,\n+\t\t\t\t\t    void_type_node, present, tmp,\n+\t\t\t\t\t    build_empty_stmt (input_location));\n+\t\t\t}\n+\t\t    }\n \t\t  else\n \t\t    tmp = NULL_TREE;\n \t\t}"}, {"sha": "0d4c54e2dd66eb2bcbb8eb234d92e9f4ea596d91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48f316eafeb6fa1196298313a03783901c00782b", "patch": "@@ -1,3 +1,8 @@\n+2013-06-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57596\n+\t* gfortran.dg/deferred_type_param_9.f90: New.\n+\n 2013-06-13  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/fold-minus-1.c: New testcase."}, {"sha": "a6e685753f4c117b3eb4cd7ce7f0cc1614692df1", "filename": "gcc/testsuite/gfortran.dg/deferred_type_param_9.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f316eafeb6fa1196298313a03783901c00782b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_9.f90?ref=48f316eafeb6fa1196298313a03783901c00782b", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+!\n+! PR fortran/57596\n+!\n+! Contributed by Valery Weber\n+!\n+PROGRAM main\n+  IMPLICIT NONE\n+  call get ()\n+  call get2 ()\n+contains\n+  SUBROUTINE get (c_val)\n+    CHARACTER( : ), INTENT( INOUT ), ALLOCATABLE, OPTIONAL :: c_val\n+    CHARACTER( 10 ) :: c_val_tmp\n+    if(present(c_val)) call abort()\n+  END SUBROUTINE get\n+  SUBROUTINE get2 (c_val)\n+    CHARACTER( : ), INTENT( OUT ), ALLOCATABLE, OPTIONAL :: c_val\n+    CHARACTER( 10 ) :: c_val_tmp\n+    if(present(c_val)) call abort()\n+  END SUBROUTINE get2\n+END PROGRAM main"}]}