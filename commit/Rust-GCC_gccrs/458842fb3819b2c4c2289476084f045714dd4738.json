{"sha": "458842fb3819b2c4c2289476084f045714dd4738", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4ODQyZmIzODE5YjJjNGMyMjg5NDc2MDg0ZjA0NTcxNGRkNDczOA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2012-01-31T12:30:32Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2012-01-31T12:30:32Z"}, "message": "re PR fortran/52012 (Wrong-code with realloc on assignment and RESHAPE w/ ORDER=)\n\n2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/52012\n\t* trans-expr.c (fcncall_realloc_result): Correct calculation of\n\tresult offset.\n\n2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/52012\n\t* gfortran.dg/realloc_on_assign_10.f90: New test.\n\nFrom-SVN: r183757", "tree": {"sha": "dab4882108b8c0c3de2046b70b8c6c360b8aabf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab4882108b8c0c3de2046b70b8c6c360b8aabf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458842fb3819b2c4c2289476084f045714dd4738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458842fb3819b2c4c2289476084f045714dd4738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458842fb3819b2c4c2289476084f045714dd4738", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458842fb3819b2c4c2289476084f045714dd4738/comments", "author": null, "committer": null, "parents": [{"sha": "a2be33be2436af63f81a55a83ee8e06694478c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2be33be2436af63f81a55a83ee8e06694478c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2be33be2436af63f81a55a83ee8e06694478c98"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "e836c0af382bf1be146a3fb7a86c9e33ddf4728e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=458842fb3819b2c4c2289476084f045714dd4738", "patch": "@@ -1,3 +1,9 @@\n+2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52012\n+\t* trans-expr.c (fcncall_realloc_result): Correct calculation of\n+\tresult offset.\n+\n 2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* module.c (pointer_info): Make true_name and module pointers"}, {"sha": "657b4f4fd5a974a327380eafe03fbb9b56891147", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=458842fb3819b2c4c2289476084f045714dd4738", "patch": "@@ -6310,16 +6310,11 @@ fcncall_realloc_result (gfc_se *se, int rank)\n   gfc_add_modify (&se->post, desc, res_desc);\n \n   offset = gfc_index_zero_node;\n-  tmp = gfc_index_one_node;\n-  /* Now reset the bounds from zero based to unity based.  */\n+\n+  /* Now reset the bounds from zero based to unity based and set the\n+     offset accordingly.  */\n   for (n = 0 ; n < rank; n++)\n     {\n-      /* Accumulate the offset.  */\n-      offset = fold_build2_loc (input_location, MINUS_EXPR,\n-\t\t\t\tgfc_array_index_type,\n-\t\t\t\toffset, tmp);\n-      /* Now do the bounds.  */\n-      gfc_conv_descriptor_offset_set (&se->post, desc, tmp);\n       tmp = gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[n]);\n       tmp = fold_build2_loc (input_location, PLUS_EXPR,\n \t\t\t     gfc_array_index_type,\n@@ -6330,15 +6325,16 @@ fcncall_realloc_result (gfc_se *se, int rank)\n       gfc_conv_descriptor_ubound_set (&se->post, desc,\n \t\t\t\t      gfc_rank_cst[n], tmp);\n \n-      /* The extent for the next contribution to offset.  */\n-      tmp = fold_build2_loc (input_location, MINUS_EXPR,\n-\t\t\t     gfc_array_index_type,\n-\t\t\t     gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[n]),\n-\t\t\t     gfc_conv_descriptor_lbound_get (desc, gfc_rank_cst[n]));\n-      tmp = fold_build2_loc (input_location, PLUS_EXPR,\n-\t\t\t     gfc_array_index_type,\n-\t\t\t     tmp, gfc_index_one_node);\n+      /* Accumulate the offset.  Since all lbounds are unity, offset\n+\t is just minus the sum of the strides.  */\n+      tmp = gfc_conv_descriptor_stride_get (desc, gfc_rank_cst[n]);\n+      offset = fold_build2_loc (input_location, MINUS_EXPR,\n+\t\t\t\tgfc_array_index_type,\n+\t\t\t\toffset, tmp);\n+      offset = gfc_evaluate_now (offset, &se->post);\n+\n     }\n+\n   gfc_conv_descriptor_offset_set (&se->post, desc, offset);\n }\n "}, {"sha": "ae4175f3482736d83666b7b70ba258910eda8be1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=458842fb3819b2c4c2289476084f045714dd4738", "patch": "@@ -1,3 +1,8 @@\n+2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52012\n+\t* gfortran.dg/realloc_on_assign_10.f90: New test.\n+\n 2012-01-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/51528"}, {"sha": "787a56ae9e9ae30ba1be924a74893a9f80a6d019", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_10.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458842fb3819b2c4c2289476084f045714dd4738/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_10.f90?ref=458842fb3819b2c4c2289476084f045714dd4738", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! PR52012 - with realloc_lhs active(ie. default condition) the\n+! offset was wrongly calculated for a, after assignment.\n+!\n+! Reported by Reinhold Bader and Tobias Burnus  <burnus@gcc.gnu.org>\n+! \n+program gf\n+  implicit none\n+  real, allocatable :: a(:,:,:)\n+  real, parameter :: zero = 0.0, one = 1.0\n+  real :: b(3,4,5) = zero\n+  b(1,2,3) = one\n+  allocate (a(size (b, 3), size (b, 2), size (b, 1)))\n+  a = reshape (b, shape (a), order = [3, 2, 1])\n+  if (any (a(:, 2, 1) .ne. [zero, zero, one, zero, zero])) call abort\n+  if (a(3, 2, 1) /= one) call abort()\n+  if (sum (abs (a)) /= one) call abort()\n+end program"}]}