{"sha": "4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4YWE2NWM2NGQwZGFkMzU0ZmIyNjFhN2ZkYzUwOTZlOWQ4YzhkMQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T08:54:42Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T08:54:42Z"}, "message": "definitions in config/[c-h]*:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36606", "tree": {"sha": "c6dea472ff94606cd6667e27998e2ead0841da60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6dea472ff94606cd6667e27998e2ead0841da60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c13c7b384e084d6aeaa3e33d412b1bc17bf7819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c13c7b384e084d6aeaa3e33d412b1bc17bf7819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c13c7b384e084d6aeaa3e33d412b1bc17bf7819"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "3ce296cd5c2aadaa93c4a59530c43f78995032ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -67,6 +67,22 @@\n \t* config/avr/avr.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n \tASM_BYTE_OP, TYPE_ASM_OP, SIZE_ASM_OP, WEAK_ASM_OP,\n \tSTRING_ASM_OP): Here.  Update documentation copy in comments.\n+\t* config/c4x/c4x.h (ASM_STABS_OP, BSS_SECTION_ASM_OP): Here.\n+\t* config/clipper/clipper.h (TEXT_SECTION_ASM_OP,\n+\tDATA_SECTION_ASM_OP): Here.\n+\t* config/clipper/clix.h (BSS_SECTION_ASM_OP, INIT_SECTION_ASM_OP):\n+\tHere.\n+\t* config/convex/convex.h (TEXT_SECTION_ASM_OP,\n+\tDATA_SECTION_ASM_OP, BSS_SECTION_ASM_OP): Here.\n+\t* config/d30v/d30v.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tBSS_SECTION_ASM_OP): Here.\n+\t* config/fr30/fr30.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tBSS_SECTION_ASM_OP): Here.\n+\t* config/fx80/fx80.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP):\n+\tHere.\n+\t* config/gmicro/gmicro.h (TEXT_SECTION_ASM_OP,\n+\tDATA_SECTION_ASM_OP, BSS_SECTION_ASM_OP): Here.\n+\t* config/h8300/h8300.h (ASM_WORD_OP): Here.\n \n 2000-09-25  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "93c3386be02a969823ae8db8442dde515b662aa5", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -2007,7 +2007,7 @@ const_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define ASM_STABS_OP \"\\t.stabs\"\n+#define ASM_STABS_OP \"\\t.stabs\\t\"\n \n /* The ctors and dtors sections are not normally put into use \n    by EXTRA_SECTIONS and EXTRA_SECTION_FUNCTIONS as defined in svr3.h,\n@@ -2611,7 +2611,7 @@ do { fprintf (asm_out_file, \"\\t.sdef\\t\");\t\t\\\n \n #define MOVE_RATIO 2\t\t/* Default value.  */\n \n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n #define ASM_OUTPUT_REG_PUSH(FILE, REGNO)  \\\n   asm_fprintf (FILE, \"\\tpush\\t%s\\n\", reg_names[REGNO])"}, {"sha": "78ec8d060b732e19c98f6aa99ab8cfeba0c43774", "filename": "gcc/config/clipper/clipper.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fclipper%2Fclipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fclipper%2Fclipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -969,11 +969,11 @@ do\t\t\t\t\t\t\t\t\t      \\\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */"}, {"sha": "6f9ed2f452a6add0dfc1e0d8a7267d68d5ef3a97", "filename": "gcc/config/clipper/clix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fclipper%2Fclix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fclipper%2Fclix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclix.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Clipper/Clix version.\n-   Copyright (C) 1988, 1993, 1996, 1997, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1996, 1997, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -71,9 +71,9 @@ do {\t\t\t\t\t\t\t\\\n \n \n #define ASM_LONG \".long\"\n-#define BSS_SECTION_ASM_OP  \".bss\"\n+#define BSS_SECTION_ASM_OP  \"\\t.bss\"\n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP \".section .init,\\\"x\\\"\"\n+#define INIT_SECTION_ASM_OP \"\\t.section .init,\\\"x\\\"\"\n \n \f\n /* Define a few machine-specific details of the implementation of"}, {"sha": "57fc56ee534ae080ba066702a990d746d40b996c", "filename": "gcc/config/convex/convex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fconvex%2Fconvex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fconvex%2Fconvex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1225,15 +1225,15 @@ enum reg_class {\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP (current_section_is_text = 1, \".text\")\n+#define TEXT_SECTION_ASM_OP (current_section_is_text = 1, \"\\t.text\")\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP (current_section_is_text = 0, \".data\") \n+#define DATA_SECTION_ASM_OP (current_section_is_text = 0, \"\\t.data\") \n \n /* Output before uninitialized data.  */\n \n-#define BSS_SECTION_ASM_OP (current_section_is_text = 0, \".bss\") \n+#define BSS_SECTION_ASM_OP (current_section_is_text = 0, \"\\t.bss\") \n \n /* This is how to output an assembler line\n    that says to advance the location counter"}, {"sha": "ef327268a48da06ce96b4b1a0c1389293ed12225", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -3850,12 +3850,12 @@ extern const char *d30v_branch_cost_string;\n /* A C expression whose value is a string containing the assembler operation\n    that should precede instructions and read-only data.  Normally `\".text\"' is\n    right.  */\n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* A C expression whose value is a string containing the assembler operation to\n    identify the following data as writable initialized data.  Normally\n    `\".data\"' is right.  */\n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* if defined, a C expression whose value is a string containing the assembler\n    operation to identify the following data as shared data.  If not defined,\n@@ -3869,7 +3869,7 @@ extern const char *d30v_branch_cost_string;\n    uninitialized global data will be output in the data section if\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n /* If defined, a C expression whose value is a string containing the\n    assembler operation to identify the following data as"}, {"sha": "36dd29362a04951559951af136f9e80627f9354a", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1410,12 +1410,12 @@ do\t\t\t\t\t\t\t\t\t\t\\\n /* A C expression whose value is a string containing the assembler operation\n    that should precede instructions and read-only data.  Normally `\".text\"' is\n    right.  */\n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* A C expression whose value is a string containing the assembler operation to\n    identify the following data as writable initialized data.  Normally\n    `\".data\"' is right.  */\n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* If defined, a C expression whose value is a string containing the\n    assembler operation to identify the following data as\n@@ -1424,7 +1424,7 @@ do\t\t\t\t\t\t\t\t\t\t\\\n    uninitialized global data will be output in the data section if\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n /*}}}*/ \f\n /*{{{  The Overall Framework of an Assembler File.  */"}, {"sha": "003d6d4dba904233f397915c9d0c7412b7669f27", "filename": "gcc/config/fx80/fx80.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Ffx80%2Ffx80.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Ffx80%2Ffx80.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffx80%2Ffx80.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1030,11 +1030,11 @@ extern enum reg_class regno_reg_class[];\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */"}, {"sha": "59c95f8eab7ae7cfb9e4dbef7a6c7f20fa51102f", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1269,15 +1269,15 @@ extern enum reg_class regno_reg_class[];\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".section text,code,align=4\"\n+#define TEXT_SECTION_ASM_OP \"\\t.section text,code,align=4\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".section data,data,align=4\"\n+#define DATA_SECTION_ASM_OP \"\\t.section data,data,align=4\"\n \n /* Output before uninitialized data. */\n \n-#define BSS_SECTION_ASM_OP \".section bss,data,align=4\"\n+#define BSS_SECTION_ASM_OP \"\\t.section bss,data,align=4\"\n \n /* Output at beginning of assembler file.\n    It is not appropriate for this to print a list of the options used,"}, {"sha": "b1e56fd86e0e5990e49da597032350042f67d290", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "patch": "@@ -1090,7 +1090,7 @@ h8300_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n #define IDENT_ASM_OP \"\\t.ident\\n\"\n \n /* The assembler op to get a word, 2 bytes for the H8/300, 4 for H8/300H.  */\n-#define ASM_WORD_OP\t(TARGET_H8300 ? \".word\" : \".long\")\n+#define ASM_WORD_OP\t(TARGET_H8300 ? \"\\t.word\\t\" : \"\\t.long\\t\")\n \n /* We define a readonly data section solely to remove readonly data\n    from the instruction stream.  This can improve relaxing in two significant"}]}