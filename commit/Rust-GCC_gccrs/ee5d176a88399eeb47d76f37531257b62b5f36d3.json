{"sha": "ee5d176a88399eeb47d76f37531257b62b5f36d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU1ZDE3NmE4ODM5OWVlYjQ3ZDc2ZjM3NTMxMjU3YjYyYjVmMzZkMw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-15T12:35:57Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-15T12:35:57Z"}, "message": "re PR fortran/33077 (RANDOM_SEED failure for integer(kind=8))\n\n\tPR fortran/33077\n\t* intrinsics/random.c (random_seed_i8): Fix code logic.\n\t* gfortran.dg/random_7.f90: Initialize variable.\n\nFrom-SVN: r127512", "tree": {"sha": "329a6ad9ddc89df708274b59d457f1bd0a0e9cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/329a6ad9ddc89df708274b59d457f1bd0a0e9cb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee5d176a88399eeb47d76f37531257b62b5f36d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5d176a88399eeb47d76f37531257b62b5f36d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee5d176a88399eeb47d76f37531257b62b5f36d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5d176a88399eeb47d76f37531257b62b5f36d3/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49317655fe694ad6e5d21de25b68753b3d0c8b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49317655fe694ad6e5d21de25b68753b3d0c8b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49317655fe694ad6e5d21de25b68753b3d0c8b87"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "bde9f7394a33f278f89f2b76001e78388f894fae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5d176a88399eeb47d76f37531257b62b5f36d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5d176a88399eeb47d76f37531257b62b5f36d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee5d176a88399eeb47d76f37531257b62b5f36d3", "patch": "@@ -1,3 +1,8 @@\n+2007-08-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33077\n+\t* gfortran.dg/random_7.f90: Initialize variable.\n+\n 2007-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/33074"}, {"sha": "6435a34cf58944a95c3f37c1492d9dad1f8f62b4", "filename": "gcc/testsuite/gfortran.dg/random_7.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5d176a88399eeb47d76f37531257b62b5f36d3/gcc%2Ftestsuite%2Fgfortran.dg%2Frandom_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5d176a88399eeb47d76f37531257b62b5f36d3/gcc%2Ftestsuite%2Fgfortran.dg%2Frandom_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frandom_7.f90?ref=ee5d176a88399eeb47d76f37531257b62b5f36d3", "patch": "@@ -7,8 +7,11 @@ program trs\n   integer, allocatable, dimension(:) :: seed, check\n   call test_random_seed(size)\n   allocate(seed(size),check(size))\n+  seed(:) = huge(seed) / 17\n   call test_random_seed(put=seed)\n   call test_random_seed(get=check)\n+  print *, seed\n+  print *, check\n   if (any (seed /= check)) call abort\n contains\n   subroutine test_random_seed(size, put, get)"}, {"sha": "2305b3e9ed678f026ed09a1b75bd98b193206439", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5d176a88399eeb47d76f37531257b62b5f36d3/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5d176a88399eeb47d76f37531257b62b5f36d3/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ee5d176a88399eeb47d76f37531257b62b5f36d3", "patch": "@@ -1,3 +1,8 @@\n+2007-08-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33077\n+\t* intrinsics/random.c (random_seed_i8): Fix code logic.\n+\n 2007-08-13  Danny Smith  <dannysmit@users.sourceforge.net>\n \n \t* acinclude.m4 (GTHREAD_USE_WEAK) Define to 0 for mingw32."}, {"sha": "00029c5da6177027be6628689ebac7c0eea0aa13", "filename": "libgfortran/intrinsics/random.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5d176a88399eeb47d76f37531257b62b5f36d3/libgfortran%2Fintrinsics%2Frandom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5d176a88399eeb47d76f37531257b62b5f36d3/libgfortran%2Fintrinsics%2Frandom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frandom.c?ref=ee5d176a88399eeb47d76f37531257b62b5f36d3", "patch": "@@ -731,8 +731,8 @@ random_seed_i8 (GFC_INTEGER_8 *size, gfc_array_i8 *put, gfc_array_i8 *get)\n         runtime_error (\"Array size of PUT is too small.\");\n \n       /*  This code now should do correct strides.  */\n-      for (i = 0; i < kiss_size; i += 2)\n-\tmemcpy (&kiss_seed[i], &(put->data[i * put->dim[0].stride]),\n+      for (i = 0; i < kiss_size / 2; i++)\n+\tmemcpy (&kiss_seed[2*i], &(put->data[i * put->dim[0].stride]),\n \t\tsizeof (GFC_UINTEGER_8));\n     }\n \n@@ -748,8 +748,8 @@ random_seed_i8 (GFC_INTEGER_8 *size, gfc_array_i8 *put, gfc_array_i8 *get)\n \truntime_error (\"Array size of GET is too small.\");\n \n       /*  This code now should do correct strides.  */\n-      for (i = 0; i < kiss_size; i += 2)\n-\tmemcpy (&(get->data[i * get->dim[0].stride]), &kiss_seed[i],\n+      for (i = 0; i < kiss_size / 2; i++)\n+\tmemcpy (&(get->data[i * get->dim[0].stride]), &kiss_seed[2*i],\n \t\tsizeof (GFC_UINTEGER_8));\n     }\n "}]}