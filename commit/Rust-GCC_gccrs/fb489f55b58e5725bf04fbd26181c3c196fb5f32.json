{"sha": "fb489f55b58e5725bf04fbd26181c3c196fb5f32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0ODlmNTViNThlNTcyNWJmMDRmYmQyNjE4MWMzYzE5NmZiNWYzMg==", "commit": {"author": {"name": "Mingjie Xing", "email": "mingjie.xing@gmail.com", "date": "2012-08-23T09:30:24Z"}, "committer": {"name": "Mingjie Xing", "email": "xmj@gcc.gnu.org", "date": "2012-08-23T09:30:24Z"}, "message": "Fix typo in gty.texi.\n\nFrom-SVN: r190617", "tree": {"sha": "73087434baca7f18a9becf4175ab200288079b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73087434baca7f18a9becf4175ab200288079b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb489f55b58e5725bf04fbd26181c3c196fb5f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb489f55b58e5725bf04fbd26181c3c196fb5f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb489f55b58e5725bf04fbd26181c3c196fb5f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb489f55b58e5725bf04fbd26181c3c196fb5f32/comments", "author": {"login": "xingmingjie", "id": 7777963, "node_id": "MDQ6VXNlcjc3Nzc5NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7777963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xingmingjie", "html_url": "https://github.com/xingmingjie", "followers_url": "https://api.github.com/users/xingmingjie/followers", "following_url": "https://api.github.com/users/xingmingjie/following{/other_user}", "gists_url": "https://api.github.com/users/xingmingjie/gists{/gist_id}", "starred_url": "https://api.github.com/users/xingmingjie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xingmingjie/subscriptions", "organizations_url": "https://api.github.com/users/xingmingjie/orgs", "repos_url": "https://api.github.com/users/xingmingjie/repos", "events_url": "https://api.github.com/users/xingmingjie/events{/privacy}", "received_events_url": "https://api.github.com/users/xingmingjie/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f6de40f27ef93e7078b08084dd29e6916a03b9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6de40f27ef93e7078b08084dd29e6916a03b9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6de40f27ef93e7078b08084dd29e6916a03b9d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "214b40e7abffbcad67abadb3552a13355937a4b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb489f55b58e5725bf04fbd26181c3c196fb5f32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb489f55b58e5725bf04fbd26181c3c196fb5f32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb489f55b58e5725bf04fbd26181c3c196fb5f32", "patch": "@@ -1,3 +1,7 @@\n+2012-08-23  Mingjie Xing  <mingjie.xing@gmail.com>\n+\n+\t* doc/gty.texi: Fix typo.\n+\n 2012-08-23  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-loop-manip.c (add_exit_phis_var): Allow virtual operands."}, {"sha": "b2214b8053bf35a64a2072c86c1875ba3664f665", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb489f55b58e5725bf04fbd26181c3c196fb5f32/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb489f55b58e5725bf04fbd26181c3c196fb5f32/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=fb489f55b58e5725bf04fbd26181c3c196fb5f32", "patch": "@@ -666,7 +666,7 @@ The GCC build tree is needed to be present in that mode.\n The GCC garbage collector GGC is only invoked explicitly. In contrast\n with many other garbage collectors, it is not implicitly invoked by\n allocation routines when a lot of memory has been consumed. So the\n-only way to have GGC reclaim storage it to call the @code{ggc_collect}\n+only way to have GGC reclaim storage is to call the @code{ggc_collect}\n function explicitly.  This call is an expensive operation, as it may\n have to scan the entire heap.  Beware that local variables (on the GCC\n call stack) are not followed by such an invocation (as many other"}]}