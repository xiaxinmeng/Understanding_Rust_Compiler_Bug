{"sha": "dcad28fd058e5248826a4e1f66bcb734745de485", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhZDI4ZmQwNThlNTI0ODgyNmE0ZTFmNjZiY2I3MzQ3NDVkZTQ4NQ==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2009-08-16T19:23:44Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-08-16T19:23:44Z"}, "message": "Identical options to Alpha/VMS. Committed as obvious.\n\n\t* doc/invoke.texi (Target options):\n\tAdd new option list for IA-64/VMS.\n\t(menu): Add IA-64/VMS Options.\n\t(IA-64/VMS Options): Likewise.\n\nFrom-SVN: r150808", "tree": {"sha": "c72c4ffda7db9c72f9b750b4ec8eb46bdbd66a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c72c4ffda7db9c72f9b750b4ec8eb46bdbd66a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcad28fd058e5248826a4e1f66bcb734745de485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcad28fd058e5248826a4e1f66bcb734745de485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcad28fd058e5248826a4e1f66bcb734745de485", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcad28fd058e5248826a4e1f66bcb734745de485/comments", "author": null, "committer": null, "parents": [{"sha": "15305a736f7cb40174ae276912806eaf077de783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15305a736f7cb40174ae276912806eaf077de783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15305a736f7cb40174ae276912806eaf077de783"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "6dc1f55a7b8d93e215881ffdce2fbd75e0b38efb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad28fd058e5248826a4e1f66bcb734745de485/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad28fd058e5248826a4e1f66bcb734745de485/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcad28fd058e5248826a4e1f66bcb734745de485", "patch": "@@ -1,3 +1,10 @@\n+2009-08-16  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* doc/invoke.texi (Target options):\n+\tAdd new option list for IA-64/VMS.\n+\t(menu): Add IA-64/VMS Options.\n+\t(IA-64/VMS Options): Likewise.\n+\n 2009-08-16  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR target/38599"}, {"sha": "236f6fc19749430591314b9d1374944aa602c7f0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad28fd058e5248826a4e1f66bcb734745de485/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad28fd058e5248826a4e1f66bcb734745de485/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=dcad28fd058e5248826a4e1f66bcb734745de485", "patch": "@@ -624,6 +624,9 @@ Objective-C and Objective-C++ Dialects}.\n -msel-sched-dont-check-control-spec -msched-fp-mem-deps-zero-cost @gol\n -msched-max-memory-insns-hard-limit -msched-max-memory-insns=@var{max-insns}}\n \n+@emph{IA-64/VMS Options}\n+@gccoptlist{-mvms-return-codes -mdebug-main=@var{prefix} -mmalloc64}\n+\n @emph{M32R/D Options}\n @gccoptlist{-m32r2 -m32rx -m32r @gol\n -mdebug @gol\n@@ -9160,6 +9163,7 @@ platform.\n * i386 and x86-64 Options::\n * i386 and x86-64 Windows Options::\n * IA-64 Options::\n+* IA-64/VMS Options::\n * M32C Options::\n * M32R/D Options::\n * M680x0 Options::\n@@ -12175,6 +12179,27 @@ when limit is reached but may still schedule memory operations.\n \n @end table\n \n+@node IA-64/VMS Options\n+@subsection IA-64/VMS Options\n+\n+These @samp{-m} options are defined for the IA-64/VMS implementations:\n+\n+@table @gcctabopt\n+@item -mvms-return-codes\n+@opindex mvms-return-codes\n+Return VMS condition codes from main. The default is to return POSIX\n+style condition (e.g.@ error) codes.\n+\n+@item -mdebug-main=@var{prefix}\n+@opindex mdebug-main=@var{prefix}\n+Flag the first routine whose name starts with @var{prefix} as the main\n+routine for the debugger.\n+\n+@item -mmalloc64\n+@opindex mmalloc64\n+Default to 64bit memory allocation routines.\n+@end table\n+\n @node M32C Options\n @subsection M32C Options\n @cindex M32C options"}]}