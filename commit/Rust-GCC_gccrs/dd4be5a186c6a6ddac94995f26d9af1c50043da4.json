{"sha": "dd4be5a186c6a6ddac94995f26d9af1c50043da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ0YmU1YTE4NmM2YTZkZGFjOTQ5OTVmMjZkOWFmMWM1MDA0M2RhNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-08T15:28:00Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1999-12-08T15:28:00Z"}, "message": "sparc.h (SPARC_SETHI_P): Don't look at topmost 32 bits if TARGET_ARCH32.\n\n\t* config/sparc/sparc.h (SPARC_SETHI_P): Don't look at topmost 32 bits\n\tif TARGET_ARCH32.\n\nFrom-SVN: r30833", "tree": {"sha": "c32e95e8a9e94afb89fbcfaab2f4017c39f595a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c32e95e8a9e94afb89fbcfaab2f4017c39f595a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd4be5a186c6a6ddac94995f26d9af1c50043da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4be5a186c6a6ddac94995f26d9af1c50043da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4be5a186c6a6ddac94995f26d9af1c50043da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4be5a186c6a6ddac94995f26d9af1c50043da4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f0e6e286ada5c9c54bdae7545025249f7d9c259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0e6e286ada5c9c54bdae7545025249f7d9c259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0e6e286ada5c9c54bdae7545025249f7d9c259"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b66687dc452e524fe0b38250b625bcc1a0249952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd4be5a186c6a6ddac94995f26d9af1c50043da4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd4be5a186c6a6ddac94995f26d9af1c50043da4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd4be5a186c6a6ddac94995f26d9af1c50043da4", "patch": "@@ -3,6 +3,9 @@\n \t* config/sparc/sparc.c (ultra_cmove_results_ready_p,\n \tultra_fpmode_conflict_exists, ultra_flush_pipeline): Typo fix.\n \n+\t* config/sparc/sparc.h (SPARC_SETHI_P): Don't look at topmost 32 bits\n+\tif TARGET_ARCH32.\n+\n 1999-12-08  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* config/sparc/sol2-64.h: Same as sol2-sld-64.h, except that"}, {"sha": "1a44547a0489ee14da39b2b79c44bc41dece8b5e", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd4be5a186c6a6ddac94995f26d9af1c50043da4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd4be5a186c6a6ddac94995f26d9af1c50043da4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=dd4be5a186c6a6ddac94995f26d9af1c50043da4", "patch": "@@ -1440,7 +1440,8 @@ extern char leaf_reg_remap[];\n /* 13 bit immediate, considering only the low 32 bits */\n #define SMALL_INT32(X) (SPARC_SIMM13_P ((int)INTVAL (X) & 0xffffffff))\n #define SPARC_SETHI_P(X) \\\n-(((unsigned HOST_WIDE_INT) (X) & ~(unsigned HOST_WIDE_INT) 0xfffffc00) == 0)\n+(((unsigned HOST_WIDE_INT) (X) & \\\n+  (TARGET_ARCH64 ? ~(unsigned HOST_WIDE_INT) 0xfffffc00 : 0x3ff)) == 0)\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C)  \\\n   ((C) == 'I' ? SPARC_SIMM13_P (VALUE)\t\t\t\\"}]}