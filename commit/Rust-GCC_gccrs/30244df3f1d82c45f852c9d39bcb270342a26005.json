{"sha": "30244df3f1d82c45f852c9d39bcb270342a26005", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAyNDRkZjNmMWQ4MmM0NWY4NTJjOWQzOWJjYjI3MDM0MmEyNjAwNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-19T22:21:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-19T22:21:57Z"}, "message": "mips.c (build_mips16_call_stub): Tidy.\n\ngcc/\n\t* config/mips/mips.c (build_mips16_call_stub): Tidy.  Fix second\n\tGPR for DCmode on 64-bit targets.  Remove redundant fallback.\n\nFrom-SVN: r128608", "tree": {"sha": "18bbece00b2d25d53caf6eaeac8add1a599b6496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18bbece00b2d25d53caf6eaeac8add1a599b6496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30244df3f1d82c45f852c9d39bcb270342a26005", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30244df3f1d82c45f852c9d39bcb270342a26005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30244df3f1d82c45f852c9d39bcb270342a26005", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30244df3f1d82c45f852c9d39bcb270342a26005/comments", "author": null, "committer": null, "parents": [{"sha": "1c50a20a4f81b9fc6a4451b8951c290bb57cd637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c50a20a4f81b9fc6a4451b8951c290bb57cd637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c50a20a4f81b9fc6a4451b8951c290bb57cd637"}], "stats": {"total": 65, "additions": 25, "deletions": 40}, "files": [{"sha": "b550aa24cd55948ae09d19094417dc81c0e19934", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30244df3f1d82c45f852c9d39bcb270342a26005/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30244df3f1d82c45f852c9d39bcb270342a26005/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30244df3f1d82c45f852c9d39bcb270342a26005", "patch": "@@ -1,3 +1,8 @@\n+2007-09-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (build_mips16_call_stub): Tidy.  Fix second\n+\tGPR for DCmode on 64-bit targets.  Remove redundant fallback.\n+\n 2007-09-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* cfgexpand.c (dump_stack_var_partition): Use the correct"}, {"sha": "7f959f41a21859b5b52cb61e3153ab60dfbc1551", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 20, "deletions": 40, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30244df3f1d82c45f852c9d39bcb270342a26005/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30244df3f1d82c45f852c9d39bcb270342a26005/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=30244df3f1d82c45f852c9d39bcb270342a26005", "patch": "@@ -10045,50 +10045,30 @@ build_mips16_call_stub (rtx retval, rtx fn, rtx arg_size, int fp_code)\n \t  fprintf (asm_out_file, \"\\tjal\\t%s\\n\", fnname);\n \t  /* As above, we can't fill the delay slot.  */\n \t  fprintf (asm_out_file, \"\\tnop\\n\");\n-\t  if (GET_MODE (retval) == SFmode)\n-\t    fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n-\t\t     reg_names[GP_REG_FIRST + 2], reg_names[FP_REG_FIRST + 0]);\n- \t  else if (GET_MODE (retval) == SCmode)\n- \t    {\n- \t      fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n- \t\t       reg_names[GP_REG_FIRST + 2],\n-\t\t       reg_names[FP_REG_FIRST + 0]);\n+\t  switch (GET_MODE (retval))\n+\t    {\n+\t    case SCmode:\n  \t      fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n  \t\t       reg_names[GP_REG_FIRST + 3],\n \t\t       reg_names[FP_REG_FIRST + MAX_FPRS_PER_FMT]);\n- \t    }\n- \t  else if (GET_MODE (retval) == DFmode\n-\t\t   || GET_MODE (retval) == V2SFmode)\n- \t    {\n- \t      mips16_fpret_double (GP_REG_FIRST + 2, FP_REG_FIRST + 0);\n- \t    }\n- \t  else if (GET_MODE (retval) == DCmode)\n-\t    {\n- \t      mips16_fpret_double (GP_REG_FIRST + 2,\n-\t\t\t\t   FP_REG_FIRST + 0);\n- \t      mips16_fpret_double (GP_REG_FIRST + 4,\n+\t      /* Fall though.  */\n+\t    case SFmode:\n+\t      fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n+\t\t       reg_names[GP_REG_FIRST + 2],\n+\t\t       reg_names[FP_REG_FIRST + 0]);\n+\t      break;\n+\n+\t    case DCmode:\n+ \t      mips16_fpret_double (GP_REG_FIRST + 2 + (8 / UNITS_PER_WORD),\n \t\t\t\t   FP_REG_FIRST + MAX_FPRS_PER_FMT);\n- \t    }\n-\t  else\n-\t    {\n-\t      if (TARGET_BIG_ENDIAN)\n-\t\t{\n-\t\t  fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n-\t\t\t   reg_names[GP_REG_FIRST + 2],\n-\t\t\t   reg_names[FP_REG_FIRST + 1]);\n-\t\t  fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n-\t\t\t   reg_names[GP_REG_FIRST + 3],\n-\t\t\t   reg_names[FP_REG_FIRST + 0]);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n-\t\t\t   reg_names[GP_REG_FIRST + 2],\n-\t\t\t   reg_names[FP_REG_FIRST + 0]);\n-\t\t  fprintf (asm_out_file, \"\\tmfc1\\t%s,%s\\n\",\n-\t\t\t   reg_names[GP_REG_FIRST + 3],\n-\t\t\t   reg_names[FP_REG_FIRST + 1]);\n-\t\t}\n+\t      /* Fall though.  */\n+ \t    case DFmode:\n+\t    case V2SFmode:\n+ \t      mips16_fpret_double (GP_REG_FIRST + 2, FP_REG_FIRST + 0);\n+\t      break;\n+\n+\t    default:\n+\t      gcc_unreachable ();\n \t    }\n \t  fprintf (asm_out_file, \"\\tj\\t%s\\n\", reg_names[GP_REG_FIRST + 18]);\n \t  /* As above, we can't fill the delay slot.  */"}]}