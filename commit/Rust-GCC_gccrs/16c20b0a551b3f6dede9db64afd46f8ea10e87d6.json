{"sha": "16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZjMjBiMGE1NTFiM2Y2ZGVkZTlkYjY0YWZkNDZmOGVhMTBlODdkNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-12T17:33:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-12T17:33:53Z"}, "message": "cp-tree.h (DECL_DEFERRED_CONSTEXPR_CHECK): New.\n\n\t* cp-tree.h (DECL_DEFERRED_CONSTEXPR_CHECK): New.\n\t* semantics.c (validate_constexpr_fundecl): Set it.\n\t(check_deferred_constexpr_decls): Clear it.\n\t(register_constexpr_fundef): Make sure it isn't set.\n\t* decl.c (grok_special_member_properties): Check it.\n\nFrom-SVN: r173707", "tree": {"sha": "b475e170f405b3a910fa829f9f4b2a0e447a9c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b475e170f405b3a910fa829f9f4b2a0e447a9c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bf9a5ac1c5310efed24c42eab522e4e9ade1933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf9a5ac1c5310efed24c42eab522e4e9ade1933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bf9a5ac1c5310efed24c42eab522e4e9ade1933"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "6ca367103e08ffc841d30074182d095c2874dfbc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -1,3 +1,11 @@\n+2011-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (DECL_DEFERRED_CONSTEXPR_CHECK): New.\n+\t* semantics.c (validate_constexpr_fundecl): Set it.\n+\t(check_deferred_constexpr_decls): Clear it.\n+\t(register_constexpr_fundef): Make sure it isn't set.\n+\t* decl.c (grok_special_member_properties): Check it.\n+\n 2011-05-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48948"}, {"sha": "bcf78f8f14e26aacd9848272e873264dcf4dd6fa", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -93,6 +93,7 @@ c-common.h, not after.\n       TYPENAME_IS_RESOLVING_P (in TYPE_NAME_TYPE)\n       LAMBDA_EXPR_DEDUCE_RETURN_TYPE_P (in LAMBDA_EXPR)\n       TARGET_EXPR_DIRECT_INIT_P (in TARGET_EXPR)\n+      DECL_DEFERRED_CONSTEXPR_CHECK (in FUNCTION_DECL)\n    3: (TREE_REFERENCE_EXPR) (in NON_LVALUE_EXPR) (commented-out).\n       ICS_BAD_FLAG (in _CONV)\n       FN_TRY_BLOCK_P (in TRY_BLOCK)\n@@ -2338,6 +2339,11 @@ struct GTY((variable_size)) lang_decl {\n #define DECL_DECLARED_CONSTEXPR_P(DECL) \\\n   DECL_LANG_FLAG_8 (VAR_OR_FUNCTION_DECL_CHECK (STRIP_TEMPLATE (DECL)))\n \n+/* True if we can't tell yet whether the argument/return types of DECL\n+   are literal because one is still being defined.  */\n+#define DECL_DEFERRED_CONSTEXPR_CHECK(DECL) \\\n+  TREE_LANG_FLAG_2 (FUNCTION_DECL_CHECK (STRIP_TEMPLATE (DECL)))\n+\n /* Nonzero if this DECL is the __PRETTY_FUNCTION__ variable in a\n    template function.  */\n #define DECL_PRETTY_FUNCTION_P(NODE) \\"}, {"sha": "793914002fe2cbbaca942fbd46c9bd7208a9ddbb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -10681,6 +10681,9 @@ grok_special_member_properties (tree decl)\n \tTYPE_HAS_LIST_CTOR (class_type) = 1;\n \n       if (DECL_DECLARED_CONSTEXPR_P (decl)\n+\t  /* It doesn't count if we can't tell yet whether or not\n+\t     the constructor is actually constexpr.  */\n+\t  && !DECL_DEFERRED_CONSTEXPR_CHECK (decl)\n \t  && !copy_fn_p (decl) && !move_fn_p (decl))\n \tTYPE_HAS_CONSTEXPR_CTOR (class_type) = 1;\n     }"}, {"sha": "f1f31219e5f3a509df227df851bcc21b7d4d83a7", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -5483,7 +5483,10 @@ check_deferred_constexpr_decls (void)\n   deferred_constexpr_decls = NULL;\n \n   FOR_EACH_VEC_ELT (tree, vec, i, fn)\n-    validate_constexpr_fundecl (fn);\n+    {\n+      DECL_DEFERRED_CONSTEXPR_CHECK (fn) = false;\n+      validate_constexpr_fundecl (fn);\n+    }\n \n   if (deferred_constexpr_decls == NULL)\n     {\n@@ -5516,6 +5519,7 @@ validate_constexpr_fundecl (tree fun)\n \t\t\t\t /*defer_ok=*/true);\n   if (valid < 0)\n     {\n+      DECL_DEFERRED_CONSTEXPR_CHECK (fun) = true;\n       VEC_safe_push (tree, gc, deferred_constexpr_decls, fun);\n       return NULL;\n     }\n@@ -5764,6 +5768,9 @@ register_constexpr_fundef (tree fun, tree body)\n   constexpr_fundef entry;\n   constexpr_fundef **slot;\n \n+  gcc_assert (DECL_DECLARED_CONSTEXPR_P (fun)\n+\t      && !DECL_DEFERRED_CONSTEXPR_CHECK (fun));\n+\n   if (DECL_CONSTRUCTOR_P (fun))\n     body = build_constexpr_constructor_member_initializers\n       (DECL_CONTEXT (fun), body);"}, {"sha": "f609bbaf2f0ab2fa2ce961a4c58cdaad530ad8d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -1,3 +1,7 @@\n+2011-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-incomplete2.C: New.\n+\n 2011-05-12  Geert Bosch  <bosch@adacore.com>\n \n \t* gnat.dg/view_conversion1.adb: New test."}, {"sha": "7a9a24dc40a3b9d51502457bbdebbccf8e4c3394", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-incomplete2.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c20b0a551b3f6dede9db64afd46f8ea10e87d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C?ref=16c20b0a551b3f6dede9db64afd46f8ea10e87d6", "patch": "@@ -0,0 +1,31 @@\n+// A constructor that might or might not be constexpr doesn't make\n+// its class literal.\n+// { dg-options -std=c++0x }\n+\n+template <class T>\n+struct B\n+{\n+  constexpr B(T) { }\n+  constexpr B() {}\n+};\n+\n+struct A\n+{\n+  B<A> b;\n+};\n+\n+constexpr A a {};\n+\n+template <class T>\n+struct C\n+{\n+  constexpr C(T) { }\n+  C() {}\n+};\n+\n+struct D\n+{\n+  C<D> c;\n+};\n+\n+constexpr D d {};\t\t// { dg-error \"not literal\" }"}]}