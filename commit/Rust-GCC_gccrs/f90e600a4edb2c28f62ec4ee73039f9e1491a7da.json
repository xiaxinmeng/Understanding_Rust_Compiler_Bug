{"sha": "f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwZTYwMGE0ZWRiMmMyOGY2MmVjNGVlNzMwMzlmOWUxNDkxYTdkYQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-03-04T18:11:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-03-04T18:11:08Z"}, "message": "1.cc: Provide explicit instantiations for non-weak systems.\n\n\n2004-03-04  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/20_util/allocator/1.cc: Provide explicit\n\tinstantiations for non-weak systems.\n\t* testsuite/20_util/binders.cc: Same.\n\t* testsuite/20_util/allocator/8230.cc: Same.\n\t* testsuite/20_util/allocator/10378.cc: Same.\n\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Same.\n\t* testsuite/22_locale/ctype/is/char/2.cc: Same.\n\t* testsuite/thread/pthread7-rope.cc: Same.\n\t* testsuite/thread/pthread6.cc: Same.\n\t* testsuite/thread/pthread5.cc: Same.\n\t* testsuite/thread/pthread4.cc: Same.\n\t* testsuite/thread/pthread1.cc: Same.\n\t* testsuite/ext/rope.cc: Same.\n\t* testsuite/ext/hash_set.cc: Same.\n\t* testsuite/ext/hash_map.cc: Same.\n\t* testsuite/ext/concept_checks.cc: Same.\n\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Same.\n\t* testsuite/25_algorithms/unique/2.cc: Same.\n\t* testsuite/25_algorithms/unique/1.cc: Same.\n\t* testsuite/25_algorithms/rotate.cc: Same.\n\t* testsuite/25_algorithms/min_max.cc: Same.\n\t* testsuite/25_algorithms/equal.cc: Same.\n\t* testsuite/24_iterators/rel_ops.cc: Same.\n\t* testsuite/24_iterators/iterator.cc: Same.\n\t* testsuite/24_iterators/insert_iterator.cc: Same.\n\t* testsuite/24_iterators/front_insert_iterator.cc: Same.\n\t* testsuite/24_iterators/back_insert_iterator.cc: Same.\n\t* testsuite/23_containers/vector/resize/1.cc: Same.\n\t* testsuite/23_containers/vector/modifiers/2.cc: Same.\n\t* testsuite/23_containers/vector/modifiers/1.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/4.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/3.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/2.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/1.cc: Same.\n\t* testsuite/23_containers/vector/element_access/1.cc: Same.\n\t* testsuite/23_containers/vector/cons/6513.cc: Same.\n\t* testsuite/23_containers/vector/cons/3.cc: Same.\n\t* testsuite/23_containers/vector/cons/2.cc: Same.\n\t* testsuite/23_containers/vector/cons/1.cc: Same.\n\t* testsuite/23_containers/vector/capacity/8230.cc: Same.\n\t* testsuite/23_containers/vector/capacity/1.cc: Same.\n\t* testsuite/23_containers/vector/bool/6886.cc: Same.\n\t* testsuite/23_containers/stack/members/7158.cc: Same.\n\t* testsuite/23_containers/set/invalidation/2.cc: Same.\n\t* testsuite/23_containers/set/invalidation/1.cc: Same.\n\t* testsuite/23_containers/queue/members/7157.cc: Same.\n\t* testsuite/23_containers/priority_queue/members/7161.cc: Same.\n\t* testsuite/23_containers/multiset/invalidation/2.cc: Same.\n\t* testsuite/23_containers/multiset/invalidation/2.cc: Same.\n\t* testsuite/23_containers/multiset/insert/1.cc: Same.\n\t* testsuite/23_containers/multimap/invalidation/2.cc: Same.\n\t* testsuite/23_containers/multimap/invalidation/2.cc: Same.\n\t* testsuite/23_containers/map/operators/1.cc: Same.\n\t* testsuite/23_containers/map/invalidation/2.cc: Same.\n\t* testsuite/23_containers/map/invalidation/1.cc: Same.\n\t* testsuite/23_containers/map/insert/1.cc: Same.\n\t* testsuite/23_containers/list/operators/4.cc: Same.\n\t* testsuite/23_containers/list/operators/3.cc: Same.\n\t* testsuite/23_containers/list/operators/2.cc: Same.\n\t* testsuite/23_containers/list/operators/1.cc: Same.\n\t* testsuite/23_containers/list/modifiers/3.cc: Same.\n\t* testsuite/23_containers/list/modifiers/2.cc: Same.\n\t* testsuite/23_containers/list/modifiers/1.cc: Same.\n\t* testsuite/23_containers/list/invalidation/4.cc: Same.\n\t* testsuite/23_containers/list/invalidation/3.cc: Same.\n\t* testsuite/23_containers/list/invalidation/2.cc: Same.\n\t* testsuite/23_containers/list/invalidation/1.cc: Same.\n\t* testsuite/23_containers/list/cons/9.cc: Same.\n\t* testsuite/23_containers/list/cons/8.cc: Same.\n\t* testsuite/23_containers/list/cons/7.cc: Same.\n\t* testsuite/23_containers/list/cons/6.cc: Same.\n\t* testsuite/23_containers/list/cons/5.cc: Same.\n\t* testsuite/23_containers/list/cons/4.cc: Same.\n\t* testsuite/23_containers/list/cons/3.cc: Same.\n\t* testsuite/23_containers/list/cons/2.cc: Same.\n\t* testsuite/23_containers/list/cons/1.cc: Same.\n\t* testsuite/23_containers/list/capacity/1.cc: Same.\n\t* testsuite/23_containers/deque/operators/1.cc: Same.\n\t* testsuite/23_containers/deque/invalidation/4.cc: Same.\n\t* testsuite/23_containers/deque/invalidation/3.cc: Same.\n\t* testsuite/23_containers/deque/invalidation/2.cc: Same.\n\t* testsuite/23_containers/deque/invalidation/1.cc: Same.\n\t* testsuite/23_containers/deque/cons/2.cc: Same.\n\t* testsuite/23_containers/deque/cons/1.cc: Same.\n\n\t* src/allocator.cc: Add char, wchar_t instantiations\n\tto match extern template declarations in memory.h.\n\nFrom-SVN: r78922", "tree": {"sha": "13f47d2661cd53be7c59061e5cd7d26965616046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13f47d2661cd53be7c59061e5cd7d26965616046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/comments", "author": null, "committer": null, "parents": [{"sha": "d3c40837991a971dc9c72e144324dc8758d3ea38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3c40837991a971dc9c72e144324dc8758d3ea38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3c40837991a971dc9c72e144324dc8758d3ea38"}], "stats": {"total": 717, "additions": 617, "deletions": 100}, "files": [{"sha": "2aa51bf946b7c3eb84d468f92c6c02f5f21ed1b0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,3 +1,93 @@\n+2004-03-04  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/20_util/allocator/1.cc: Provide explicit\n+\tinstantiations for non-weak systems.\n+\t* testsuite/20_util/binders.cc: Same.\n+\t* testsuite/20_util/allocator/8230.cc: Same.\n+\t* testsuite/20_util/allocator/10378.cc: Same.\n+\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Same.\n+\t* testsuite/22_locale/ctype/is/char/2.cc: Same.\n+\t* testsuite/thread/pthread7-rope.cc: Same.\n+\t* testsuite/thread/pthread6.cc: Same.\t\n+\t* testsuite/thread/pthread5.cc: Same.\t\t\n+\t* testsuite/thread/pthread4.cc: Same.\t\n+\t* testsuite/thread/pthread1.cc: Same.\n+\t* testsuite/ext/rope.cc: Same.\n+\t* testsuite/ext/hash_set.cc: Same.\n+\t* testsuite/ext/hash_map.cc: Same.\t\n+\t* testsuite/ext/concept_checks.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Same.\n+\t* testsuite/25_algorithms/unique/2.cc: Same.\n+\t* testsuite/25_algorithms/unique/1.cc: Same.\n+\t* testsuite/25_algorithms/rotate.cc: Same.\n+\t* testsuite/25_algorithms/min_max.cc: Same.\n+\t* testsuite/25_algorithms/equal.cc: Same.\t\n+\t* testsuite/24_iterators/rel_ops.cc: Same.\n+\t* testsuite/24_iterators/iterator.cc: Same.\n+\t* testsuite/24_iterators/insert_iterator.cc: Same.\n+\t* testsuite/24_iterators/front_insert_iterator.cc: Same.\n+\t* testsuite/24_iterators/back_insert_iterator.cc: Same.\n+\t* testsuite/23_containers/vector/resize/1.cc: Same.\n+\t* testsuite/23_containers/vector/modifiers/2.cc: Same.\n+\t* testsuite/23_containers/vector/modifiers/1.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/4.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/3.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/2.cc: Same.\t\n+\t* testsuite/23_containers/vector/invalidation/1.cc: Same.\n+\t* testsuite/23_containers/vector/element_access/1.cc: Same.\n+\t* testsuite/23_containers/vector/cons/6513.cc: Same.\n+\t* testsuite/23_containers/vector/cons/3.cc: Same.\n+\t* testsuite/23_containers/vector/cons/2.cc: Same.\n+\t* testsuite/23_containers/vector/cons/1.cc: Same.\n+\t* testsuite/23_containers/vector/capacity/8230.cc: Same.\n+\t* testsuite/23_containers/vector/capacity/1.cc: Same.\n+\t* testsuite/23_containers/vector/bool/6886.cc: Same.\n+\t* testsuite/23_containers/stack/members/7158.cc: Same.\n+\t* testsuite/23_containers/set/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/set/invalidation/1.cc: Same.\n+\t* testsuite/23_containers/queue/members/7157.cc: Same.\n+\t* testsuite/23_containers/priority_queue/members/7161.cc: Same.\n+\t* testsuite/23_containers/multiset/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/multiset/invalidation/2.cc: Same.\t\n+\t* testsuite/23_containers/multiset/insert/1.cc: Same.\n+\t* testsuite/23_containers/multimap/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/multimap/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/map/operators/1.cc: Same.\n+\t* testsuite/23_containers/map/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/map/invalidation/1.cc: Same.\n+\t* testsuite/23_containers/map/insert/1.cc: Same.\n+\t* testsuite/23_containers/list/operators/4.cc: Same.\n+\t* testsuite/23_containers/list/operators/3.cc: Same.\n+\t* testsuite/23_containers/list/operators/2.cc: Same.\n+\t* testsuite/23_containers/list/operators/1.cc: Same.\n+\t* testsuite/23_containers/list/modifiers/3.cc: Same.\n+\t* testsuite/23_containers/list/modifiers/2.cc: Same.\n+\t* testsuite/23_containers/list/modifiers/1.cc: Same.\n+\t* testsuite/23_containers/list/invalidation/4.cc: Same.\n+\t* testsuite/23_containers/list/invalidation/3.cc: Same.\n+\t* testsuite/23_containers/list/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/list/invalidation/1.cc: Same.\t\n+\t* testsuite/23_containers/list/cons/9.cc: Same.\n+\t* testsuite/23_containers/list/cons/8.cc: Same.\n+\t* testsuite/23_containers/list/cons/7.cc: Same.\n+\t* testsuite/23_containers/list/cons/6.cc: Same.\n+\t* testsuite/23_containers/list/cons/5.cc: Same.\n+\t* testsuite/23_containers/list/cons/4.cc: Same.\n+\t* testsuite/23_containers/list/cons/3.cc: Same.\n+\t* testsuite/23_containers/list/cons/2.cc: Same.\n+\t* testsuite/23_containers/list/cons/1.cc: Same.\n+\t* testsuite/23_containers/list/capacity/1.cc: Same.\n+\t* testsuite/23_containers/deque/operators/1.cc: Same.\n+\t* testsuite/23_containers/deque/invalidation/4.cc: Same.\n+\t* testsuite/23_containers/deque/invalidation/3.cc: Same.\n+\t* testsuite/23_containers/deque/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/deque/invalidation/1.cc: Same.\n+\t* testsuite/23_containers/deque/cons/2.cc: Same.\n+\t* testsuite/23_containers/deque/cons/1.cc: Same.\n+\n+\t* src/allocator.cc: Add char, wchar_t instantiations\n+\tto match extern template declarations in memory.h.\n+\n 2004-03-03  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (money_put<>::_M_insert):"}, {"sha": "9f8d2abfa5493597cf9a8ede23872e0cdde5440e", "filename": "libstdc++-v3/src/allocator.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -41,6 +41,7 @@\n namespace __gnu_cxx\n {\n   template class __mt_alloc<char>;\n+  template class __mt_alloc<wchar_t>;\n \n   // Static members of __pool_alloc.\n   template class __pool_alloc<true, 0>;"}, {"sha": "d34c8daf9c95f08aeb385e06fadb8dd256718efa", "filename": "libstdc++-v3/testsuite/20_util/allocator/1.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -43,12 +43,17 @@ void operator delete(void *v) throw()\n   return std::free(v);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<gnu>;\n+#endif\n+\n void test01()\n {\n   bool test __attribute__((unused)) = true;\n   std::allocator<gnu> obj;\n \n-  // XXX These should work for various size allocation and\n+  // NB: These should work for various size allocation and\n   // deallocations.  Currently, they only work as expected for sizes >\n   // _MAX_BYTES as defined in stl_alloc.h, which happes to be 128. \n   gnu* pobj = obj.allocate(256);\n@@ -63,3 +68,4 @@ int main()\n   test01();\n   return 0;\n }\n+"}, {"sha": "2ac77eaaf16e0febd3b371d68350426b571fca8f", "filename": "libstdc++-v3/testsuite/20_util/allocator/10378.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,6 +39,11 @@ void test01()\n   uniset.push_back(Bob());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<Bob> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "95b6cbee55fb8b2b09ade1a49d89686546576f35", "filename": "libstdc++-v3/testsuite/20_util/allocator/8230.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -47,6 +47,11 @@ void test02()\n   VERIFY( test );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "28de474a41db5de0da83d74316647a89567179f3", "filename": "libstdc++-v3/testsuite/20_util/binders.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbinders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbinders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbinders.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,6 +43,10 @@ void test01()\n \t   std::bind2nd(std::mem_fun_ref(&Elem::modify), 42));\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<Elem>;\n+#endif\n \n int main()\n {"}, {"sha": "4192b806f4a39feff3ebfd015c1f40f8622db2b7", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/char/2.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run { xfail *-*-![linux]* } }\n-// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@ typedef char char_type;\n void test02()\n {\n   using namespace std;\n-  typedef ctype_base::mask \tmask;\n+  typedef ctype_base::mask\tmask;\n   typedef vector<mask> \t\tvector_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -97,6 +97,10 @@ void test02()\n   VERIFY( v_c != v_de );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::ctype_base::mask>;\n+#endif\n int main() \n {\n   test02();"}, {"sha": "f5a7d6d59c13ee749a48b1da881b943bccee85f5", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/wchar_t/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run { xfail *-*-![linux]* } }\n-// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -97,6 +97,11 @@ void test02()\n   VERIFY( v_c != v_de );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::ctype_base::mask>;\n+#endif\n+\n int main() \n {\n   test02();"}, {"sha": "4c051c48c4885ba028dcb96ebc5131429233ab88", "filename": "libstdc++-v3/testsuite/22_locale/ctype/widen/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fwiden%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fwiden%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fwiden%2Fchar%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-05-24 bkoz\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "5a32c78eae8b8b8022c69b7f3536a7f78b488978", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-27 pme\n //\n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,6 +42,11 @@ test01()\n   assert_count (0);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_test::counter>;\n+template class __gnu_cxx::__mt_alloc<__gnu_test::counter*>;\n+#endif\n \n int main()\n {"}, {"sha": "64365b0502cf5cbc5fe9d586d46bc26efd64bf31", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/2.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-27 pme\n //\n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -499,6 +499,13 @@ test_copy_ctor_exception_safety()\n   // teardown\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n+template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker*>;\n+#endif\n \n int main()\n {"}, {"sha": "506f0e9fad3bc56db52ac0af003dfdebf48b54fe", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/1.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,8 +46,14 @@ void test01()\n   VERIFY(i._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test01();\n-  return !test;\n+  return 0;\n }"}, {"sha": "9aa1e573e99ffcaedbb0fa984b8d025d6860868a", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/2.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,8 +46,14 @@ void test02()\n   VERIFY(before._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test02();\n-  return !test;\n+  return 0;\n }"}, {"sha": "fe374984cfb3c80b8b2e54bac22d1e2a33ff24fb", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/3.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,6 +42,7 @@ void test03()\n   // Insert multiple copies\n   before = v.begin() + 6;\n   at = before + 1;\n+\n   v.insert(at, 3, 42);\n   VERIFY(before._M_singular());\n   VERIFY(at._M_singular());\n@@ -55,8 +56,14 @@ void test03()\n   VERIFY(at._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test03();\n-  return !test;\n+  return 0;\n }"}, {"sha": "21ba372bf8da6ff1062bec334d19af04155ade7a", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/4.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -68,6 +68,12 @@ void test04()\n   VERIFY(before._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test04();"}, {"sha": "20cdfaceae89edf5efd25fadcf8889a9ec18f77d", "filename": "libstdc++-v3/testsuite/23_containers/deque/operators/1.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-05-18  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -77,6 +77,12 @@ void test02()\n   VERIFY( constend - beg > 0 );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "45aa95ead1009b53cc2e9bcc0d534ad796d1d3b1", "filename": "libstdc++-v3/testsuite/23_containers/list/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,5 @@\n-// Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "b19a7b1397863e419fc432ca53182e02c5ce462d", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -59,6 +59,11 @@ test01()\n   VERIFY(list0101.size() == 0);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int\n main()\n {"}, {"sha": "92a5992ca2bed924a96b832a4187e2d310fa9ced", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/1.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,9 +71,13 @@ test01()\n   // allocator checks?\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<A<B> > >;\n+#endif\n+\n int main()\n {\n   test01();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "b837d85a386b32ace51d943fd4e4f13286cf2c9b", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/2.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -75,9 +75,15 @@ test02()\n   VERIFY(list0203.size() == LIST_SIZE);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<A<B> > >;\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test02(); \n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "61e6aefc00a8625cff6224f35a87362dfbd88d3f", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/3.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,6 +52,11 @@ test02D()\n   VERIFY(list0204.size() == LIST_SIZE);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<C> >;\n+#endif\n+\n int main()\n {\n   test02D(); "}, {"sha": "4b84342fd9816dfc9e22752278a207b1618db65c", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/4.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,9 +58,14 @@ test03()\n   VERIFY(list0302.size() == N);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test03();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "89e5308cc885d64b7ea341fa4f34e0dd03411da1", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/5.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,9 +49,14 @@ test04()\n   VERIFY(list0401.size() == N);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test04();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "a302c59a9a52221b9dc587f84dacedd2345fa0b7", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/6.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,9 +62,14 @@ test05()\n   VERIFY(list0501.size() == M);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test05();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "16a8f90261195edb505f1e2e906963bcc047014e", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/7.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,9 +63,14 @@ test06()\n   VERIFY(list0601.size() == SMALL_LIST_SIZE);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test06();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "1d70d3c8978469c4e2d52879d3b0e01653f98d9a", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/8.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,9 +56,14 @@ test06D()\n   VERIFY(list0604.size() == LIST_SIZE);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<C> >;\n+#endif\n+\n int main()\n {\n   test06D();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "21a1e5847148fee968ffe26b6498b5871651d81c", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/9.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,6 +56,11 @@ test07()\n   VERIFY(list0702 == list0701);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test07();"}, {"sha": "21e04328a963b2ef864d8299ba37be8ce9c35568", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,6 +53,11 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "4bfa5ce7145c3b3939c81808111b5e7a562bf524", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,6 +48,11 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "31da208aeb7031efa1960fb1ecaea353b2f9c616", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/3.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,6 +71,11 @@ void test03()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test03();"}, {"sha": "c4529838fa011cfb4698e38a383f42c815c64a3d", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/4.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,6 +48,11 @@ void test04()\n   VERIFY(after2._M_attached_to(&l2));\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test04();"}, {"sha": "5d95467b9957a303b61ad2acaee760b43fba7526", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/1.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -112,9 +112,14 @@ test03()\n   VERIFY(e == list0301.end());\n }\n \n+#if !__GXX_WEAK__ && defined(_MT_ALLOCATOR_H)\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n+#endif\n+\n int main()\n {\n   test03();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "21c8b73e687621d35ac275f86473e6f331dbc01f", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/2.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -84,9 +84,14 @@ test02()\n   VERIFY(T::dtorCount() == 0);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n+#endif\n+\n int main()\n {\n   test02();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "dda9d9afee242f92b8449ca8592ec3e09ab69a3f", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/3.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -116,9 +116,14 @@ test01()\n   VERIFY(k->id() == 1);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n+#endif\n+\n int main()\n {\n   test01();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "1b837751a210c6200ecb6885ef172ea9dd778b4d", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/1.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -66,9 +66,14 @@ test01()\n   VERIFY(p == list0101.end());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main(void)\n {\n   test01();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "4cdc27e664d65399d168eee4ac36407f7f3d26f7", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/2.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,9 +52,13 @@ test02()\n   VERIFY(list0201 == list0204);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test02();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "4919cd1e80eb8b4e8a4e14a9eb5ba136f0bf65af", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/3.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -66,9 +66,13 @@ test03()\n   VERIFY(list0301 == list0304);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main(void)\n {\n   test03();\n   return 0;\n }\n-// vi:set sw=2 ts=2:"}, {"sha": "2bfe127653ddf020e68891a14861ff4c3ab7bfbb", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/4.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -90,9 +90,14 @@ test04()\n #endif\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test04();\n   return 0;\n }\n-// vi:set sw=2 ts=2:\n+"}, {"sha": "8c15aec5352cc69f5ae154ae93f68e0a7a0db792", "filename": "libstdc++-v3/testsuite/23_containers/map/insert/1.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-08-23 pme & Sylvain.Pion@sophia.inria.fr\n \n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,11 +60,15 @@ void test01()\n   VERIFY ( M.find(9) != M.end() );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::pair<int const, int> >;\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n \n int main()\n {\n   test01();\n-\n   return 0;\n }\n "}, {"sha": "667c66338afacfd28ca5dbdff8d2823fe6bdd1cb", "filename": "libstdc++-v3/testsuite/23_containers/map/invalidation/1.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Map iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,8 +45,13 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n+\n int main()\n {\n   test01();\n-  return !test;\n+  return 0;\n }"}, {"sha": "41fa0d3da67c0e7c181f5733d8b866249bf9fd58", "filename": "libstdc++-v3/testsuite/23_containers/map/invalidation/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Map iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,6 +64,11 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "4a54f38896289ddf67e6af95fc9007d6ea4e7f53", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2000-09-07 bgarcia@laurelnetworks.com\n \n-// Copyright (C) 2000, 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,6 +42,11 @@ void test02()\n     std::cerr << i->second << ' ';\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "d98566cf6ec8db33c4af586fc795d8d4c3b564a0", "filename": "libstdc++-v3/testsuite/23_containers/multimap/invalidation/1.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -46,6 +46,11 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "1025576d56462b5232eb174899a38f192681f408", "filename": "libstdc++-v3/testsuite/23_containers/multimap/invalidation/2.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -65,6 +65,11 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "21c6f450a2a7dcde18921cf436dbc43b03ae8d38", "filename": "libstdc++-v3/testsuite/23_containers/multiset/insert/1.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -36,6 +36,11 @@ bool\n operator<(std::pair<int, int> const& lhs, std::pair<int, int> const& rhs) \n { return lhs.first < rhs.first; }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int, int> > >;\n+#endif\n+\n int main () \n {\n   typedef std::multiset<std::pair<int, int> >::iterator iterator;"}, {"sha": "18c937ddea4b54105cc56f35dfcaa2dbcabc7b53", "filename": "libstdc++-v3/testsuite/23_containers/multiset/invalidation/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Multiset iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,6 +45,11 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "1185319b10ce0890b5a174d3c5885a6772317a28", "filename": "libstdc++-v3/testsuite/23_containers/multiset/invalidation/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Multiset iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,6 +64,11 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "613a924c84a29b7e0574e99ac4b651f750807920", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/members/7161.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,6 +43,11 @@ test03()\n     pq.pop();\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test03();"}, {"sha": "b0875d0620568c1294b008f99073d3082f78af85", "filename": "libstdc++-v3/testsuite/23_containers/queue/members/7157.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +34,12 @@ test01()\n   q.pop();\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<int*>;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "59190630e2868206c410b34632badb43d80212a2", "filename": "libstdc++-v3/testsuite/23_containers/set/invalidation/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Set iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,6 +45,11 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "64b5fc37895c1b6da586cf3b1ed89bd0b08a00f8", "filename": "libstdc++-v3/testsuite/23_containers/set/invalidation/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // Set iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,6 +64,11 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "bbb5bbd142af542946393e4e85b3ee95f2495833", "filename": "libstdc++-v3/testsuite/23_containers/stack/members/7158.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +34,12 @@ test02()\n   st.pop();\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int*>;\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "88cac68d665f391c89100bb478c4ea7f137922b8", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/6886.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-03-05 Stephen M. Webb  <stephen.webb@bregmasoft.com>\n \n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,6 +47,11 @@ void test02()\n   VERIFY( num == 4 );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<unsigned long>;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "8ac1f0f7c7f84bc3144e9108a12f22933a86b2ad", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,7 +1,7 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,6 +54,11 @@ void test01()\n   VERIFY( sz01 == sz02 );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<A<B> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "759fc7507d34cc8b8abfeeeb5933959d8a39a00b", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/8230.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,7 +1,7 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,6 +71,11 @@ void test02()\n   }\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "5c212db9b65744ef8fa59a916577538e07771712", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/1.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,9 +40,13 @@ void test01()\n   vec01 = vec02;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<A<B> >;\n+#endif\n+\n int main()\n {\n   test01();\n-\n   return 0;\n }"}, {"sha": "ecee79d85d50a93c5a0fd6aeb5b3e40aae1de8a5", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/2.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,9 +41,15 @@ void test02()\n   std::vector<int> v2(v1);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<double>;\n+template class __gnu_cxx::__mt_alloc<A<B> >;\n+#endif\n+\n int main()\n {\n   test02(); \n-\n   return 0;\n }"}, {"sha": "e228e7b63058e0a4d12b37cbf4dbbea7c2d32c9c", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/3.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,9 +46,13 @@ test03()\n   VERIFY(std::equal(B, B + M, v5.begin()));\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test03();\n-\n   return 0;\n }"}, {"sha": "593b377155411222f9fdf25bc07ba8c4ee41a49d", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/6513.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,9 +32,13 @@ void test04()\n   std::vector<std::string> strings(c_strings, c_strings + 5);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::string>;\n+#endif\n+\n int main()\n {\n   test04();\n-\n   return 0;\n }"}, {"sha": "fce524d9c475b95a2f8981f36ad6fd635409fee4", "filename": "libstdc++-v3/testsuite/23_containers/vector/element_access/1.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,7 +1,7 @@\n // 2000-09-06\n // bkoz \n \n-// Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,9 +55,13 @@ bool test01()\n   return test;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<A<B> >;\n+#endif\n+\n int main()\n {\n   test01();\n-\n   return 0;\n }"}, {"sha": "b93146fb6c035ebb1dcc02bbdb928a2defcc13d7", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/1.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -53,6 +53,11 @@ void test01()\n   VERIFY(i._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "75f67b02d176570b417815ffce020ffebde12ea8", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/2.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -58,6 +58,11 @@ void test02()\n   VERIFY(before._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test02();"}, {"sha": "5447cf8ac43f575ea982c52be1d3b62db88cbdee", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/3.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -83,6 +83,11 @@ void test03()\n   VERIFY(before._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test03();"}, {"sha": "347d2312a1fc0bc29a3a0ee630c40225c7c3f314", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/4.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -60,6 +60,11 @@ void test04()\n   VERIFY(before._M_singular());\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test04();"}, {"sha": "52374e70d806cb6009638f462db6fa51ca3304fc", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/1.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-11-09 bkoz\n \n-// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,6 +49,12 @@ test01()\n   vec02.insert(vec02.begin(), pnp01, pnp01 + 1);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<A<B> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "0e68bfa69890f82c9afda01748a6286604a5e9cd", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 1999-11-09 bkoz\n \n-// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,6 +55,11 @@ test03()\n   VERIFY((v4.size() == M) && (M != N));\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test03();"}, {"sha": "7bc579809f75bb586866e483e0df66a34d11a483", "filename": "libstdc++-v3/testsuite/23_containers/vector/resize/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,7 +1,7 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -50,6 +50,11 @@ void test01()\n   VERIFY( test );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "2ca14a786135d11618500a219774ad72304059d8", "filename": "libstdc++-v3/testsuite/24_iterators/back_insert_iterator.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,6 +63,11 @@ class test_dm : public std::back_insert_iterator<std::list<int> >\n   test_dm():  std::back_insert_iterator<std::list<int> >(l), p(container) { }\n };\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main() \n { \n   test01();"}, {"sha": "9ee2e9fd3fabb08bb53b445afb84c5367b19bf61", "filename": "libstdc++-v3/testsuite/24_iterators/front_insert_iterator.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,6 +62,11 @@ class test_dm : public std::front_insert_iterator<std::list<int> >\n   test_dm(): std::front_insert_iterator<std::list<int> >(l), p(container) { }\n };\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main() \n { \n   test01();"}, {"sha": "322bccf4ea3a816ec162eeb367381fccb4401314", "filename": "libstdc++-v3/testsuite/24_iterators/insert_iterator.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -70,6 +70,11 @@ class test_dm : public std::insert_iterator<std::list<int> >\n   test_dm(): std::insert_iterator<std::list<int> >(l, i), p(container) { }\n };\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main() \n { \n   test01();"}, {"sha": "b3f4c67ed899d05e2c1227eb81d7f8bd089cc516", "filename": "libstdc++-v3/testsuite/24_iterators/iterator.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -2,7 +2,7 @@\n // 24.3.1 Iterator traits\n // (basic_string and vector implementations)\n //\n-// Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2003, 2004 Free Software Foundation, Inc.\n // This program is free software; you can redistribute it and/or modify\n // it under the terms of the GNU General Public License as published by\n // the Free Software Foundation; either version 2 of the License, or \n@@ -588,6 +588,12 @@ test6642()\n    return it - cit;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<std::string>;\n+#endif\n+\n int\n main()\n {"}, {"sha": "b11af2a0302ad8ac9f94e74f30239bb5333f0ec1", "filename": "libstdc++-v3/testsuite/24_iterators/rel_ops.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frel_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frel_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frel_ops.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-04-13  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,6 +38,11 @@ void test01()\n   vi >= v.begin();\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "d9743bedc10b53de40498cf5d92281557f70c716", "filename": "libstdc++-v3/testsuite/25_algorithms/equal.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -33,9 +33,13 @@ bool operator==(X, X) { return true; }\n // Not implemented on purpose.  { dg-do link }\n bool operator!=(X, X);\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<X>;\n+#endif\n+\n int main()\n {\n   std::vector<X> v, w;\n-\n   return !std::equal(v.begin(), v.end(), w.begin());\n }"}, {"sha": "8e5afb188291f02fa62e0ee97a92530b4c819177", "filename": "libstdc++-v3/testsuite/25_algorithms/min_max.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2000-03-29 sss/bkoz\n \n-// Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "d37209d19d1ffb5c72e0e4de5c639b528e215c98", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,6 +71,11 @@ test03()\n     VERIFY(std::equal(A, A + N, D));\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int\n main()\n {"}, {"sha": "658e26b0fefda3e3101646d1a5e588b99d7ed9fc", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-07-19 Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,6 +23,11 @@\n #include <list>\n #include <algorithm>\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   using namespace std;"}, {"sha": "65b09b5a53e320b17206df90d6389086c9ad3be8", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/2.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2003-10-14  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -86,6 +86,11 @@ void test03()\n   VERIFY( equal(coll2.begin(), pos, B3) );\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "13adfb2a5a664c596b7f88e72fdfa5e67c534711", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2003-10-07  Petur Runolfsson  <peturr02@ru.is>\n //\n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -131,6 +131,11 @@ void test01()\n   fb.close();\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::pair<std::fpos<__mbstate_t>, std::size_t> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "67a771ac07edb251bce34bd09b886fa56b539f21", "filename": "libstdc++-v3/testsuite/ext/concept_checks.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-28  Phil Edwards  <pme@gcc.gnu.org>\n //\n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -76,9 +76,14 @@ test2054( )\n   binary_search(Index.begin(), Index.end(), SearchTerm, aComparison);\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<int>;\n+template class __gnu_cxx::__mt_alloc<std::string>;\n+#endif\n+\n int main()\n {\n   test2054();\n-\n   return 0;\n }"}, {"sha": "2a0bc0bce6d8dac7f6fc6d0a965de795a5a06cee", "filename": "libstdc++-v3/testsuite/ext/hash_map.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -95,6 +95,13 @@ void test01()\n   }\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<std::pair<const std::string, int> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<std::pair<const std::string, int> >* >;\n+template class __gnu_cxx::__mt_alloc<std::pair<std::string, int> >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "9db82b7ef9d7ea71036b7642fc3f2dc947e340e0", "filename": "libstdc++-v3/testsuite/ext/hash_set.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,7 +1,7 @@\n // 2002-04-28  Paolo Carlini  <pcarlini@unitus.it>\n //             Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,6 +31,12 @@ test01()\n   const int anzahl = sizeof(werte) / sizeof(int);\n   __gnu_cxx::hash_set<int> intTable(werte, werte + anzahl);\n }\n+                                       \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<int> >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<int>* >;\n+#endif\n \n int main()\n {"}, {"sha": "b79e5e91496cfcc06a018cfcda2d5fc913fed9a8", "filename": "libstdc++-v3/testsuite/ext/rope.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2001-10-03 From: Dimitris Vyzovitis <vyzo@media.mit.edu>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,6 +31,14 @@ void test01()\n   std::cout << data << std::endl;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n+#endif\n+\n int main()\n {\n   test01();"}, {"sha": "1b225f202c6020bac793bd8566949bd7db13cbcf", "filename": "libstdc++-v3/testsuite/thread/pthread1.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n //\n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -99,6 +99,11 @@ consume (void* t)\n   return 0;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n+#endif                                                                \n+\n int\n main ()\n {"}, {"sha": "be1ae680fa7ee1dfe67adf7dcc279871b2255458", "filename": "libstdc++-v3/testsuite/thread/pthread4.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -2,7 +2,7 @@\n // Adapted from http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00679.html\n // which was adapted from pthread1.cc by Mike Lu <MLu@dynamicsoft.com>\n //\n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -90,6 +90,12 @@ consume (void*)\n   return 0;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::string>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<std::string> >;\n+#endif\n+\n int\n main (void)\n {"}, {"sha": "b950542fd619c7be6d6cac5a34afb4fa9ddd3db2", "filename": "libstdc++-v3/testsuite/thread/pthread5.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -2,7 +2,7 @@\n // Adpated from libstdc++/5464 submitted by jjessel@amadeus.net\n // Jean-Francois JESSEL (Amadeus SAS Development) \n //\n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -87,6 +87,12 @@ thread_function (void* arg)\n   return arg;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<tt_t>;\n+template class __gnu_cxx::__mt_alloc<std::_List_node<std::string*> >;\n+#endif   \n+\n int\n main ()\n {"}, {"sha": "e0fee71deac673d7843b696cb4cd11213bdfe8bf", "filename": "libstdc++-v3/testsuite/thread/pthread6.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -72,6 +72,11 @@ thread_main (void*)\n   return 0;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<unsigned int const, std::string> > >;\n+#endif\n+\n int\n main (void)\n {"}, {"sha": "5b4d099fee5820d2025456b637bf78138dc18845", "filename": "libstdc++-v3/testsuite/thread/pthread7-rope.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90e600a4edb2c28f62ec4ee73039f9e1491a7da/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc?ref=f90e600a4edb2c28f62ec4ee73039f9e1491a7da", "patch": "@@ -1,6 +1,6 @@\n // 2003-05-03  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n //\n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,6 +53,14 @@ void* thread_main(void *)\n   return 0;\n }\n \n+#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n+template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n+#endif                                                                \n+\n int\n main()\n {"}]}