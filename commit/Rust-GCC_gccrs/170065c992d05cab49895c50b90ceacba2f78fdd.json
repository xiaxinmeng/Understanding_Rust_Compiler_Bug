{"sha": "170065c992d05cab49895c50b90ceacba2f78fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwMDY1Yzk5MmQwNWNhYjQ5ODk1YzUwYjkwY2VhY2JhMmY3OGZkZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-09T04:16:54Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-09T04:16:54Z"}, "message": "pass rtx_insn * more in gcse.c\n\ngcc/ChangeLog:\n\n2015-05-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* gcse.c: Change argument types to rtx_insn *.\n\nFrom-SVN: r222949", "tree": {"sha": "24ce3c42e03c4180f74233406bb473492275b7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24ce3c42e03c4180f74233406bb473492275b7a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/170065c992d05cab49895c50b90ceacba2f78fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170065c992d05cab49895c50b90ceacba2f78fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/170065c992d05cab49895c50b90ceacba2f78fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170065c992d05cab49895c50b90ceacba2f78fdd/comments", "author": null, "committer": null, "parents": [{"sha": "88bdcd3d6566246bfe7bb949b91d5f4def8ffb90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88bdcd3d6566246bfe7bb949b91d5f4def8ffb90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88bdcd3d6566246bfe7bb949b91d5f4def8ffb90"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "598510c7d30c872616825381be6b85173dca9282", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170065c992d05cab49895c50b90ceacba2f78fdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170065c992d05cab49895c50b90ceacba2f78fdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=170065c992d05cab49895c50b90ceacba2f78fdd", "patch": "@@ -1,3 +1,7 @@\n+2015-05-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* gcse.c: Change argument types to rtx_insn *.\n+\n 2015-05-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* cse.c (cse_change_cc0_mode): Change argument type to rtx_insn *."}, {"sha": "92c60140607971d1083a78f2e71b5f87ec65bc59", "filename": "gcc/gcse.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170065c992d05cab49895c50b90ceacba2f78fdd/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170065c992d05cab49895c50b90ceacba2f78fdd/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=170065c992d05cab49895c50b90ceacba2f78fdd", "patch": "@@ -493,7 +493,7 @@ static int oprs_available_p (const_rtx, const rtx_insn *);\n static void insert_expr_in_table (rtx, machine_mode, rtx_insn *, int, int,\n \t\t\t\t  int, struct gcse_hash_table_d *);\n static unsigned int hash_expr (const_rtx, machine_mode, int *, int);\n-static void record_last_reg_set_info (rtx, int);\n+static void record_last_reg_set_info (rtx_insn *, int);\n static void record_last_mem_set_info (rtx_insn *);\n static void record_last_set_info (rtx, const_rtx, void *);\n static void compute_hash_table (struct gcse_hash_table_d *);\n@@ -516,7 +516,7 @@ static void pre_insert_copies (void);\n static int pre_delete (void);\n static int pre_gcse (struct edge_list *);\n static int one_pre_gcse_pass (void);\n-static void add_label_notes (rtx, rtx);\n+static void add_label_notes (rtx, rtx_insn *);\n static void alloc_code_hoist_mem (int, int);\n static void free_code_hoist_mem (void);\n static void compute_code_hoist_vbeinout (void);\n@@ -1471,7 +1471,7 @@ dump_hash_table (FILE *file, const char *name, struct gcse_hash_table_d *table)\n    valid, as a quick test to invalidate them.  */\n \n static void\n-record_last_reg_set_info (rtx insn, int regno)\n+record_last_reg_set_info (rtx_insn *insn, int regno)\n {\n   struct reg_avail_info *info = &reg_avail_info[regno];\n   int luid = DF_INSN_LUID (insn);\n@@ -2665,7 +2665,7 @@ one_pre_gcse_pass (void)\n    necessary REG_LABEL_OPERAND and REG_LABEL_TARGET notes.  */\n \n static void\n-add_label_notes (rtx x, rtx insn)\n+add_label_notes (rtx x, rtx_insn *insn)\n {\n   enum rtx_code code = GET_CODE (x);\n   int i, j;"}]}