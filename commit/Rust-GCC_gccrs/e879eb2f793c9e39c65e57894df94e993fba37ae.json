{"sha": "e879eb2f793c9e39c65e57894df94e993fba37ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3OWViMmY3OTNjOWUzOWM2NWU1Nzg5NGRmOTRlOTkzZmJhMzdhZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-04-24T14:24:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-04-24T14:24:55Z"}, "message": "* loop.c (canonicalize_condition): Use gen_int_mode.\n\nFrom-SVN: r52715", "tree": {"sha": "67c566fedc25ca08195d7c72b8563ab29f61df30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67c566fedc25ca08195d7c72b8563ab29f61df30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e879eb2f793c9e39c65e57894df94e993fba37ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e879eb2f793c9e39c65e57894df94e993fba37ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e879eb2f793c9e39c65e57894df94e993fba37ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e879eb2f793c9e39c65e57894df94e993fba37ae/comments", "author": null, "committer": null, "parents": [{"sha": "4287a893480b74be977b5ac56a595eae3350637a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4287a893480b74be977b5ac56a595eae3350637a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4287a893480b74be977b5ac56a595eae3350637a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "2c90a625e30c0371d8470f500a866c95209ee015", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e879eb2f793c9e39c65e57894df94e993fba37ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e879eb2f793c9e39c65e57894df94e993fba37ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e879eb2f793c9e39c65e57894df94e993fba37ae", "patch": "@@ -1,3 +1,7 @@\n+Wed Apr 24 13:48:25 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* loop.c (canonicalize_condition): Use gen_int_mode.\n+\n 2002-04-24  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/rs6000/altivec.h: Cleanup file.  Add non individual"}, {"sha": "b9997dae701c77eb06b7c82b52faa69bc1e59467", "filename": "gcc/loop.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e879eb2f793c9e39c65e57894df94e993fba37ae/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e879eb2f793c9e39c65e57894df94e993fba37ae/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=e879eb2f793c9e39c65e57894df94e993fba37ae", "patch": "@@ -9264,7 +9264,7 @@ canonicalize_condition (insn, cond, reverse, earliest, want_reg)\n \t{\n \tcase LE:\n \t  if ((unsigned HOST_WIDE_INT) const_val != max_val >> 1)\n-\t    code = LT, op1 = GEN_INT (const_val + 1);\n+\t    code = LT, op1 = gen_int_mode (const_val + 1, GET_MODE (op0));\n \t  break;\n \n \t/* When cross-compiling, const_val might be sign-extended from\n@@ -9273,17 +9273,17 @@ canonicalize_condition (insn, cond, reverse, earliest, want_reg)\n \t  if ((HOST_WIDE_INT) (const_val & max_val)\n \t      != (((HOST_WIDE_INT) 1\n \t\t   << (GET_MODE_BITSIZE (GET_MODE (op0)) - 1))))\n-\t    code = GT, op1 = GEN_INT (const_val - 1);\n+\t    code = GT, op1 = gen_int_mode (const_val - 1, GET_MODE (op0));\n \t  break;\n \n \tcase LEU:\n \t  if (uconst_val < max_val)\n-\t    code = LTU, op1 = GEN_INT (uconst_val + 1);\n+\t    code = LTU, op1 = gen_int_mode (uconst_val + 1, GET_MODE (op0));\n \t  break;\n \n \tcase GEU:\n \t  if (uconst_val != 0)\n-\t    code = GTU, op1 = GEN_INT (uconst_val - 1);\n+\t    code = GTU, op1 = gen_int_mode (uconst_val - 1, GET_MODE (op0));\n \t  break;\n \n \tdefault:"}]}