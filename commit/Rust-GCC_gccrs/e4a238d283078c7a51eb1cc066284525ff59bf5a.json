{"sha": "e4a238d283078c7a51eb1cc066284525ff59bf5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhMjM4ZDI4MzA3OGM3YTUxZWIxY2MwNjYyODQ1MjVmZjU5YmY1YQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-07-09T20:16:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-19T09:53:40Z"}, "message": "[Ada] Remove excessive guards in building predicate functions\n\ngcc/ada/\n\n\t* sem_ch13.adb (Add_Call): Remove excessive condition and\n\tunnecessary call to Set_Has_Predicates.", "tree": {"sha": "2de07cef22cb48245905211a7329a6a378551bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2de07cef22cb48245905211a7329a6a378551bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4a238d283078c7a51eb1cc066284525ff59bf5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a238d283078c7a51eb1cc066284525ff59bf5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a238d283078c7a51eb1cc066284525ff59bf5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a238d283078c7a51eb1cc066284525ff59bf5a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ad0303141a1632004ef0ba7f57e6a0253db0923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad0303141a1632004ef0ba7f57e6a0253db0923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad0303141a1632004ef0ba7f57e6a0253db0923"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8f02d07acb782d15758e9d18edb75ff38769eb78", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a238d283078c7a51eb1cc066284525ff59bf5a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a238d283078c7a51eb1cc066284525ff59bf5a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e4a238d283078c7a51eb1cc066284525ff59bf5a", "patch": "@@ -9583,8 +9583,8 @@ package body Sem_Ch13 is\n       --  Predicate_Function of the parent type, using Add_Call above.\n \n       procedure Add_Call (T : Entity_Id);\n-      --  Includes a call to the predicate function for type T in Expr if T\n-      --  has predicates and Predicate_Function (T) is non-empty.\n+      --  Includes a call to the predicate function for type T in Expr if\n+      --  Predicate_Function (T) is non-empty.\n \n       function Process_RE (N : Node_Id) return Traverse_Result;\n       --  Used in Process REs, tests if node N is a raise expression, and if\n@@ -9608,8 +9608,8 @@ package body Sem_Ch13 is\n          Exp : Node_Id;\n \n       begin\n-         if Present (T) and then Present (Predicate_Function (T)) then\n-            Set_Has_Predicates (Typ);\n+         if Present (Predicate_Function (T)) then\n+            pragma Assert (Has_Predicates (Typ));\n \n             --  Build the call to the predicate function of T. The type may be\n             --  derived, so use an unchecked conversion for the actual."}]}