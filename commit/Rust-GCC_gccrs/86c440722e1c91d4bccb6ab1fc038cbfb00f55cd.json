{"sha": "86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjNDQwNzIyZTFjOTFkNGJjY2I2YWIxZmMwMzhjYmZiMDBmNTVjZA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-09-22T01:13:07Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-09-22T01:13:07Z"}, "message": "objc-act.c (objc_fold_objc_type_ref): New function.\n\n[gcc/objc/ChangeLog]\n2004-09-21  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc-act.c (objc_fold_objc_type_ref): New function.\n        * objc-act.h (objc_fold_objc_type_ref): New prototype.\n\nFrom-SVN: r87838", "tree": {"sha": "d35e40ac9524f339521769d9f0f6bfe8fb6d51a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d35e40ac9524f339521769d9f0f6bfe8fb6d51a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/comments", "author": null, "committer": null, "parents": [{"sha": "76419821c6f3f12f40049b33d63660a11f228758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76419821c6f3f12f40049b33d63660a11f228758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76419821c6f3f12f40049b33d63660a11f228758"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b391c39e8dbd723f3b08e171c48fe6d9d1f3fec0", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "patch": "@@ -1,3 +1,8 @@\n+2004-09-21  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc-act.c (objc_fold_objc_type_ref): New function.\n+\t* objc-act.h (objc_fold_objc_type_ref): New prototype.\n+\n 2004-09-09  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* objc-act.c (objc_start_function, really_start_method,"}, {"sha": "5488b78a8360f01ed24cf162e81baf979e53e981", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "patch": "@@ -7530,6 +7530,33 @@ comp_proto_with_proto (tree proto1, tree proto2)\n   return (!type1 && !type2);\n }\n \n+/* Fold an OBJ_TYPE_REF expression for ObjC method dispatches, where\n+   this occurs.  ObjC method dispatches are _not_ like C++ virtual\n+   member function dispatches, and we account for the difference here.  */\n+tree\n+#ifdef OBJCPLUS\n+objc_fold_obj_type_ref (tree ref, tree known_type)\n+#else\n+objc_fold_obj_type_ref (tree ref ATTRIBUTE_UNUSED,\n+\t\t\ttree known_type ATTRIBUTE_UNUSED)\n+#endif\n+{\n+#ifdef OBJCPLUS\n+  tree v = BINFO_VIRTUALS (TYPE_BINFO (known_type));\n+\n+  /* If the receiver does not have virtual member functions, there\n+     is nothing we can (or need to) do here.  */\n+  if (!v)\n+    return NULL_TREE;\n+\n+  /* Let C++ handle C++ virtual functions.  */\n+  return cp_fold_obj_type_ref (ref, known_type);\n+#else\n+  /* For plain ObjC, we currently do not need to do anything.  */\n+  return NULL_TREE;\n+#endif\n+}\n+\n static void\n objc_start_function (tree name, tree type, tree attrs,\n #ifdef OBJCPLUS"}, {"sha": "52eeb448cfa89559a44679da223c0600a849fc2e", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c440722e1c91d4bccb6ab1fc038cbfb00f55cd/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=86c440722e1c91d4bccb6ab1fc038cbfb00f55cd", "patch": "@@ -27,6 +27,7 @@ Boston, MA 02111-1307, USA.  */\n bool objc_init (void);\n const char *objc_printable_name (tree, int);\n void objc_finish_file (void);\n+tree objc_fold_obj_type_ref (tree, tree);\n \n /* NB: The remaining public functions are prototyped in c-common.h, for the\n    benefit of stub-objc.c and objc-act.c.  */"}]}