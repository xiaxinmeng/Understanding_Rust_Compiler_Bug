{"sha": "80a18161003e982d8a741d475dec2a40ce986320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBhMTgxNjEwMDNlOTgyZDhhNzQxZDQ3NWRlYzJhNDBjZTk4NjMyMA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2013-09-05T14:09:07Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2013-09-05T14:09:07Z"}, "message": "re PR target/58139 (PowerPC volatile VSX register live across call)\n\n\tPR target/58139\n\t* reginfo.c (choose_hard_reg_mode): Scan through all mode classes\n\tlooking for widest mode.\n\nFrom-SVN: r202286", "tree": {"sha": "928bc1d2eaf23a9ea55dbb9f5256f08330b238a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/928bc1d2eaf23a9ea55dbb9f5256f08330b238a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80a18161003e982d8a741d475dec2a40ce986320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a18161003e982d8a741d475dec2a40ce986320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a18161003e982d8a741d475dec2a40ce986320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a18161003e982d8a741d475dec2a40ce986320/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6994430ae0451113e9d69bde307ed46a4fafe6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6994430ae0451113e9d69bde307ed46a4fafe6ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6994430ae0451113e9d69bde307ed46a4fafe6ce"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "c6d9c010033f694df948f3aaf77ab21051921e9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a18161003e982d8a741d475dec2a40ce986320/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a18161003e982d8a741d475dec2a40ce986320/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80a18161003e982d8a741d475dec2a40ce986320", "patch": "@@ -1,3 +1,9 @@\n+2013-09-05  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/58139\n+\t* reginfo.c (choose_hard_reg_mode): Scan through all mode classes\n+\tlooking for widest mode.\n+\n 2013-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config.gcc (*-*-vxworks*): Do not override an existing extra_objs."}, {"sha": "49a7a5864e2335029d7affcbbcaf3a634d0d675b", "filename": "gcc/reginfo.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a18161003e982d8a741d475dec2a40ce986320/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a18161003e982d8a741d475dec2a40ce986320/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=80a18161003e982d8a741d475dec2a40ce986320", "patch": "@@ -620,40 +620,35 @@ choose_hard_reg_mode (unsigned int regno ATTRIBUTE_UNUSED,\n        mode = GET_MODE_WIDER_MODE (mode))\n     if ((unsigned) hard_regno_nregs[regno][mode] == nregs\n \t&& HARD_REGNO_MODE_OK (regno, mode)\n-\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode)))\n+\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode))\n+\t&& GET_MODE_SIZE (mode) > GET_MODE_SIZE (found_mode))\n       found_mode = mode;\n \n-  if (found_mode != VOIDmode)\n-    return found_mode;\n-\n   for (mode = GET_CLASS_NARROWEST_MODE (MODE_FLOAT);\n        mode != VOIDmode;\n        mode = GET_MODE_WIDER_MODE (mode))\n     if ((unsigned) hard_regno_nregs[regno][mode] == nregs\n \t&& HARD_REGNO_MODE_OK (regno, mode)\n-\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode)))\n+\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode))\n+\t&& GET_MODE_SIZE (mode) > GET_MODE_SIZE (found_mode))\n       found_mode = mode;\n \n-  if (found_mode != VOIDmode)\n-    return found_mode;\n-\n   for (mode = GET_CLASS_NARROWEST_MODE (MODE_VECTOR_FLOAT);\n        mode != VOIDmode;\n        mode = GET_MODE_WIDER_MODE (mode))\n     if ((unsigned) hard_regno_nregs[regno][mode] == nregs\n \t&& HARD_REGNO_MODE_OK (regno, mode)\n-\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode)))\n+\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode))\n+\t&& GET_MODE_SIZE (mode) > GET_MODE_SIZE (found_mode))\n       found_mode = mode;\n \n-  if (found_mode != VOIDmode)\n-    return found_mode;\n-\n   for (mode = GET_CLASS_NARROWEST_MODE (MODE_VECTOR_INT);\n        mode != VOIDmode;\n        mode = GET_MODE_WIDER_MODE (mode))\n     if ((unsigned) hard_regno_nregs[regno][mode] == nregs\n \t&& HARD_REGNO_MODE_OK (regno, mode)\n-\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode)))\n+\t&& (! call_saved || ! HARD_REGNO_CALL_PART_CLOBBERED (regno, mode))\n+\t&& GET_MODE_SIZE (mode) > GET_MODE_SIZE (found_mode))\n       found_mode = mode;\n \n   if (found_mode != VOIDmode)"}]}