{"sha": "93a6eb7802d2a1e71430635a220df4663c4dd2ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNhNmViNzgwMmQyYTFlNzE0MzA2MzVhMjIwZGY0NjYzYzRkZDJhZA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-04-05T19:45:57Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-04-05T19:45:57Z"}, "message": "parse.y (resolve_qualified_expression_name): Pass field's DECL_CONTEXT to `not_accessible_p.'\n\n2001-04-04  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n        * parse.y (resolve_qualified_expression_name): Pass field's\n        DECL_CONTEXT to `not_accessible_p.'\n        (not_accessible_p): Changed parameters order in `inherits_from_p'\n        invokation.\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-04/msg00326.html)\n\nFrom-SVN: r41126", "tree": {"sha": "e9446f7255204ff2ff4cf6ba1536b274c922bd86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9446f7255204ff2ff4cf6ba1536b274c922bd86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93a6eb7802d2a1e71430635a220df4663c4dd2ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a6eb7802d2a1e71430635a220df4663c4dd2ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93a6eb7802d2a1e71430635a220df4663c4dd2ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a6eb7802d2a1e71430635a220df4663c4dd2ad/comments", "author": null, "committer": null, "parents": [{"sha": "4956c16e5a3c5d199018f2a6c757ef9754120d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4956c16e5a3c5d199018f2a6c757ef9754120d2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4956c16e5a3c5d199018f2a6c757ef9754120d2f"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "834aed6269578ab2f0130f601d038d7f99337a84", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93a6eb7802d2a1e71430635a220df4663c4dd2ad/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93a6eb7802d2a1e71430635a220df4663c4dd2ad/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=93a6eb7802d2a1e71430635a220df4663c4dd2ad", "patch": "@@ -1,3 +1,10 @@\n+2001-04-04  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+ \n+\t* parse.y (resolve_qualified_expression_name): Pass field's\n+\tDECL_CONTEXT to `not_accessible_p.'\n+\t(not_accessible_p): Changed parameters order in `inherits_from_p'\n+\tinvokation.\n+\n 2001-03-27  Andrew Haley  <aph@cambridge.redhat.com>\n \n \t* lang-options.h: Add flag_check_references."}, {"sha": "4ab60e9f6a63706d706d4e059773a8c95c2ece8b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93a6eb7802d2a1e71430635a220df4663c4dd2ad/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93a6eb7802d2a1e71430635a220df4663c4dd2ad/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=93a6eb7802d2a1e71430635a220df4663c4dd2ad", "patch": "@@ -9434,7 +9434,7 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t      \n \t      /* Check on accessibility here */\n \t      if (not_accessible_p (current_class, field_decl,\n-\t\t\t\t    TREE_TYPE (decl), from_super))\n+\t\t\t\t    DECL_CONTEXT (field_decl), from_super))\n \t\t{\n \t\t  parse_error_context \n \t\t    (qual_wfl,\n@@ -9559,7 +9559,7 @@ not_accessible_p (reference, member, where, from_super)\n       /* If where is active, access was made through a\n \t qualifier. Access is granted if the type of the qualifier is\n \t or is a sublass of the type the access made from (6.6.2.1.)  */\n-      if (where && !inherits_from_p (where, reference))\n+      if (where && !inherits_from_p (reference, where))\n \treturn 1;\n \n       /* Otherwise, access is granted if occuring from the class where"}]}