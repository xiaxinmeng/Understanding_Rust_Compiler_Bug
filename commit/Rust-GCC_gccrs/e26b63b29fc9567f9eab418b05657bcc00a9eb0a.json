{"sha": "e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2YjYzYjI5ZmM5NTY3ZjllYWI0MThiMDU2NTdiY2MwMGE5ZWIwYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-23T10:32:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-23T10:32:42Z"}, "message": "alpha.md (one_cmpl<mode>2, [...]): New macroized vector operate patterns.\n\n        * config/alpha/alpha.md (one_cmpl<mode>2, and<mode>3, andnot<mode>3,\n        ior<mode>3, iornot<mode>3, xor<mode>3, xornot<mode>3): New macroized\n        vector operate patterns.\n\nFrom-SVN: r92545", "tree": {"sha": "1346086dc0a91c636109b0df10bb480426012e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1346086dc0a91c636109b0df10bb480426012e19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26b63b29fc9567f9eab418b05657bcc00a9eb0a/comments", "author": null, "committer": null, "parents": [{"sha": "3e8aba3481e8d3f7a1a06695f3e479370643b130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8aba3481e8d3f7a1a06695f3e479370643b130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8aba3481e8d3f7a1a06695f3e479370643b130"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "3ddbf232ac63a593f8c62509edd441123b32ed02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26b63b29fc9567f9eab418b05657bcc00a9eb0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26b63b29fc9567f9eab418b05657bcc00a9eb0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "patch": "@@ -1,3 +1,9 @@\n+2004-12-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (one_cmpl<mode>2, and<mode>3, andnot<mode>3,\n+\tior<mode>3, iornot<mode>3, xor<mode>3, xornot<mode>3): New macroized\n+\tvector operate patterns.\n+\n 2004-12-23  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (ix86_expand_vector_move): Tidy."}, {"sha": "2679324d10a5f63c21598f6f13c2ecec32e1c6b3", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26b63b29fc9567f9eab418b05657bcc00a9eb0a/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26b63b29fc9567f9eab418b05657bcc00a9eb0a/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=e26b63b29fc9567f9eab418b05657bcc00a9eb0a", "patch": "@@ -6207,6 +6207,61 @@\n   \"TARGET_MAX\"\n   \"maxsw4 %r1,%r2,%0\"\n   [(set_attr \"type\" \"mvi\")])\n+\n+(define_insn \"one_cmpl<mode>2\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(not:VEC (match_operand:VEC 1 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"ornot $31,%1,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"and<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(and:VEC (match_operand:VEC 1 \"register_operand\" \"r\")\n+\t\t (match_operand:VEC 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"and %1,%2,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"*andnot<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(and:VEC (not:VEC (match_operand:VEC 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:VEC 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"bic %2,%1,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"ior<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(ior:VEC (match_operand:VEC 1 \"register_operand\" \"r\")\n+\t\t (match_operand:VEC 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"bis %1,%2,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"*iornot<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(ior:VEC (not:DI (match_operand:VEC 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:VEC 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"ornot %2,%1,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"xor<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(xor:VEC (match_operand:VEC 1 \"register_operand\" \"r\")\n+\t\t (match_operand:VEC 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"xor %1,%2,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n+(define_insn \"*xornot<mode>3\"\n+  [(set (match_operand:VEC 0 \"register_operand\" \"=r\")\n+\t(not:VEC (xor:VEC (match_operand:VEC 1 \"register_operand\" \"r\")\n+\t\t\t  (match_operand:VEC 2 \"register_operand\" \"r\"))))]\n+  \"\"\n+  \"eqv %1,%2,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n \f\n ;; Bit field extract patterns which use ext[wlq][lh]\n "}]}