{"sha": "7f8ac3d7f9914527dbc0052d21326bc351f211e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y4YWMzZDdmOTkxNDUyN2RiYzAwNTJkMjEzMjZiYzM1MWYyMTFlOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-26T16:01:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-26T16:01:55Z"}, "message": "re PR tree-optimization/43784 (-Os -fkeep-inline-functions causes FAIL: gcc.c-torture/execute/builtins/pr22237.c execution)\n\n2010-07-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43784\n\t* tree-nrv.c (dest_safe_for_nrv_p): It's not safe to NRV\n\tif the destination is used by the call.\n\n\t* gcc.c-torture/execute/pr43784.c: New testcase.\n\t* g++.dg/torture/pr43784.C: Likewise.\n\nFrom-SVN: r162539", "tree": {"sha": "4dd9226e46cf61e9b8b0ed19dc32773d0e0121c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dd9226e46cf61e9b8b0ed19dc32773d0e0121c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f8ac3d7f9914527dbc0052d21326bc351f211e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8ac3d7f9914527dbc0052d21326bc351f211e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f8ac3d7f9914527dbc0052d21326bc351f211e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8ac3d7f9914527dbc0052d21326bc351f211e9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a2ba1839d6cbcde7424e9c10a200d19d34beeb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2ba1839d6cbcde7424e9c10a200d19d34beeb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2ba1839d6cbcde7424e9c10a200d19d34beeb8"}], "stats": {"total": 77, "additions": 73, "deletions": 4}, "files": [{"sha": "93d0c7ea0913a7f1ff473059034181801e1a9094", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f8ac3d7f9914527dbc0052d21326bc351f211e9", "patch": "@@ -1,3 +1,9 @@\n+2010-07-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43784\n+\t* tree-nrv.c (dest_safe_for_nrv_p): It's not safe to NRV\n+\tif the destination is used by the call.\n+\n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45073"}, {"sha": "cd7de607c77ac7fc5f809b89ba9de4649cd85bae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f8ac3d7f9914527dbc0052d21326bc351f211e9", "patch": "@@ -1,3 +1,9 @@\n+2010-07-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43784\n+\t* gcc.c-torture/execute/pr43784.c: New testcase.\n+\t* g++.dg/torture/pr43784.C: Likewise.\n+\n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45056"}, {"sha": "a83a6f374d77cbcc0a05ea8004712d76b3d320e7", "filename": "gcc/testsuite/g++.dg/torture/pr43784.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43784.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43784.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43784.C?ref=7f8ac3d7f9914527dbc0052d21326bc351f211e9", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fno-tree-sra\" } */\n+\n+struct S {int x, y, makemelarge[5];};\n+S __attribute__((noinline)) f (S &s) {\n+    S r;\n+    r.x = s.y;\n+    r.y = s.x;\n+    return r;\n+}\n+int __attribute__((noinline)) glob (int a, int b)\n+{\n+  S local = { a, b };\n+  local = f (local);\n+  return local.y;\n+}\n+extern \"C\" void abort (void);\n+int main (void)\n+{\n+  if (glob (1, 3) != 1)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "622232725a278903fde574760f08e419b71c9cc7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43784.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43784.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43784.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43784.c?ref=7f8ac3d7f9914527dbc0052d21326bc351f211e9", "patch": "@@ -0,0 +1,33 @@\n+struct s {\n+  unsigned char a[256];\n+};\n+union u {\n+  struct { struct s b; int c; } d;\n+  struct { int c; struct s b; } e;\n+};\n+\n+static union u v;\n+static struct s *p = &v.d.b;\n+static struct s *q = &v.e.b;\n+\n+static struct s __attribute__((noinline)) rp(void)\n+{\n+  return *p;\n+}\n+\n+static void qp(void)\n+{\n+  *q = rp();\n+}\n+\n+int main()\n+{\n+  int i;\n+  for (i = 0; i < 256; i++)\n+    p->a[i] = i;\n+  qp();\n+  for (i = 0; i < 256; i++)\n+    if (q->a[i] != i)\n+      __builtin_abort();\n+  return 0;\n+}"}, {"sha": "8ee3b8b0a4ba440066099ba7620afdb651bbd64b", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8ac3d7f9914527dbc0052d21326bc351f211e9/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=7f8ac3d7f9914527dbc0052d21326bc351f211e9", "patch": "@@ -296,7 +296,7 @@ struct gimple_opt_pass pass_nrv =\n    optimization, where DEST is expected to be the LHS of a modify\n    expression where the RHS is a function returning an aggregate.\n \n-   DEST is available if it is not clobbered by the call.  */\n+   DEST is available if it is not clobbered or used by the call.  */\n \n static bool\n dest_safe_for_nrv_p (gimple call)\n@@ -310,7 +310,8 @@ dest_safe_for_nrv_p (gimple call)\n   if (TREE_CODE (dest) == SSA_NAME)\n     return true;\n \n-  if (call_may_clobber_ref_p (call, dest))\n+  if (call_may_clobber_ref_p (call, dest)\n+      || ref_maybe_used_by_stmt_p (call, dest))\n     return false;\n \n   return true;\n@@ -345,8 +346,7 @@ execute_return_slot_opt (void)\n \t      && gimple_call_lhs (stmt)\n \t      && !gimple_call_return_slot_opt_p (stmt)\n \t      && aggregate_value_p (TREE_TYPE (gimple_call_lhs (stmt)),\n-\t\t\t\t    gimple_call_fndecl (stmt))\n-\t     )\n+\t\t\t\t    gimple_call_fndecl (stmt)))\n \t    {\n \t      /* Check if the location being assigned to is\n \t         clobbered by the call.  */"}]}