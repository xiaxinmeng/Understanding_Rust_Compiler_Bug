{"sha": "07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdhZDgwNGJmZGJlMGZhMzQwNmM1ZjJmZjUxZDdjNGMyOWE3ODNjOA==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2015-05-08T08:30:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-05-08T08:30:40Z"}, "message": "[PATCH 0/13] Add musl support to GCC\n\n2015-05-08  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n\n\t* config/glibc-stdint.h (OPTION_MUSL): Define.\n\t(INT_FAST16_TYPE, INT_FAST32_TYPE, UINT_FAST16_TYPE, UINT_FAST32_TYPE):\n\tChange the definition based on OPTION_MUSL for 64 bit targets.\n\t* config/linux.h (OPTION_MUSL): Redefine.\n\t* config/alpha/linux.h (OPTION_MUSL): Redefine.\n\t* config/rs6000/linux.h (OPTION_MUSL): Redefine.\n\t* config/rs6000/linux64.h (OPTION_MUSL): Redefine.\n\nFrom-SVN: r222905", "tree": {"sha": "73c9528e184baf4728ee97183e4d15220368f796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73c9528e184baf4728ee97183e4d15220368f796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "755658a56b57beca14b5fb70afdf1e588a058f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755658a56b57beca14b5fb70afdf1e588a058f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755658a56b57beca14b5fb70afdf1e588a058f7f"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "fa1623f86d5daee71c376f56a80efec5d09a495d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -1,3 +1,13 @@\n+2015-05-08  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/glibc-stdint.h (OPTION_MUSL): Define.\n+\t(INT_FAST16_TYPE, INT_FAST32_TYPE, UINT_FAST16_TYPE, UINT_FAST32_TYPE):\n+\tChange the definition based on OPTION_MUSL for 64 bit targets.\n+\t* config/linux.h (OPTION_MUSL): Redefine.\n+\t* config/alpha/linux.h (OPTION_MUSL): Redefine.\n+\t* config/rs6000/linux.h (OPTION_MUSL): Redefine.\n+\t* config/rs6000/linux64.h (OPTION_MUSL): Redefine.\n+\n 2015-05-08  Gregor Richards  <gregor.richards@uwaterloo.ca>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "}, {"sha": "475ea06a1fa5ae33338215711d0db2ef40aac6c4", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -61,10 +61,14 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n #define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n #define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (DEFAULT_LIBC == LIBC_MUSL)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n #define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n #define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (linux_libc == LIBC_MUSL)\n #endif\n \n /* Determine what functions are present at the runtime;"}, {"sha": "98f4f04e11297f06dffb1dbfd8df4419c9910c3c", "filename": "gcc/config/glibc-stdint.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Fglibc-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Fglibc-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fglibc-stdint.h?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -22,6 +22,12 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+/* Systems using musl libc should use this header and make sure\n+   OPTION_MUSL is defined correctly before using the TYPE macros. */\n+#ifndef OPTION_MUSL\n+#define OPTION_MUSL 0\n+#endif\n+\n #define SIG_ATOMIC_TYPE \"int\"\n \n #define INT8_TYPE \"signed char\"\n@@ -43,12 +49,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define UINT_LEAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"long long unsigned int\")\n \n #define INT_FAST8_TYPE \"signed char\"\n-#define INT_FAST16_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"int\")\n-#define INT_FAST32_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"int\")\n+#define INT_FAST16_TYPE (LONG_TYPE_SIZE == 64 && !OPTION_MUSL ? \"long int\" : \"int\")\n+#define INT_FAST32_TYPE (LONG_TYPE_SIZE == 64 && !OPTION_MUSL ? \"long int\" : \"int\")\n #define INT_FAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"long long int\")\n #define UINT_FAST8_TYPE \"unsigned char\"\n-#define UINT_FAST16_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"unsigned int\")\n-#define UINT_FAST32_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"unsigned int\")\n+#define UINT_FAST16_TYPE (LONG_TYPE_SIZE == 64 && !OPTION_MUSL ? \"long unsigned int\" : \"unsigned int\")\n+#define UINT_FAST32_TYPE (LONG_TYPE_SIZE == 64 && !OPTION_MUSL ? \"long unsigned int\" : \"unsigned int\")\n #define UINT_FAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"long long unsigned int\")\n \n #define INTPTR_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"int\")"}, {"sha": "7bc87ab2f8a09babd404cd544ac463a8716b01af", "filename": "gcc/config/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -32,11 +32,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n #define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n #define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n+#undef OPTION_MUSL\n #define OPTION_MUSL   (DEFAULT_LIBC == LIBC_MUSL)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n #define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n #define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n+#undef OPTION_MUSL\n #define OPTION_MUSL   (linux_libc == LIBC_MUSL)\n #endif\n "}, {"sha": "a68ff6982afa501f1083f0a5dc6e30a7db718766", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -30,10 +30,14 @@\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n #define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n #define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (DEFAULT_LIBC == LIBC_MUSL)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n #define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n #define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (linux_libc == LIBC_MUSL)\n #endif\n \n /* Determine what functions are present at the runtime;"}, {"sha": "1b7f695bc60a1f72df4e13609a256d7f0c8fe2f8", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=07ad804bfdbe0fa3406c5f2ff51d7c4c29a783c8", "patch": "@@ -299,10 +299,14 @@ extern int dot_symbols;\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n #define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n #define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (DEFAULT_LIBC == LIBC_MUSL)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n #define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n #define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n+#undef OPTION_MUSL\n+#define OPTION_MUSL   (linux_libc == LIBC_MUSL)\n #endif\n \n /* Determine what functions are present at the runtime;"}]}