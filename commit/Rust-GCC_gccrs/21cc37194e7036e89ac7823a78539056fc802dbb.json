{"sha": "21cc37194e7036e89ac7823a78539056fc802dbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjYzM3MTk0ZTcwMzZlODlhYzc4MjNhNzg1MzkwNTZmYzgwMmRiYg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-09-15T08:59:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-09-15T08:59:02Z"}, "message": "re PR ada/18817 (ACATS c380004 fails at run time)\n\n\tPR ada/18817\n\t* utils.c (max_size): Perform constant folding of (A ? B : C) - D\n\tinto A ? B - D : C - D when calculating the size of a MINUS_EXPR.\n\nFrom-SVN: r116964", "tree": {"sha": "4796e47592741b417d93c1f144383dadbfbfbf74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4796e47592741b417d93c1f144383dadbfbfbf74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21cc37194e7036e89ac7823a78539056fc802dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cc37194e7036e89ac7823a78539056fc802dbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21cc37194e7036e89ac7823a78539056fc802dbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cc37194e7036e89ac7823a78539056fc802dbb/comments", "author": null, "committer": null, "parents": [{"sha": "9bdb04a2f5df0bafb2ab16be673febd789c3a487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdb04a2f5df0bafb2ab16be673febd789c3a487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bdb04a2f5df0bafb2ab16be673febd789c3a487"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "e23e39a32bf0f8042c2b511e14ddf4dcf579c7a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=21cc37194e7036e89ac7823a78539056fc802dbb", "patch": "@@ -1,3 +1,9 @@\n+2006-09-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR ada/18817\n+\t* utils.c (max_size): Perform constant folding of (A ? B : C) - D\n+\tinto A ? B - D : C - D when calculating the size of a MINUS_EXPR.\n+\n 2006-09-13  Olivier Hainque  <hainque@adacore.com>\n \n \tPR ada/29025"}, {"sha": "4358547883e6a157d7660fa9a183e9b1a04e2c78", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=21cc37194e7036e89ac7823a78539056fc802dbb", "patch": "@@ -2072,6 +2072,22 @@ max_size (tree exp, bool max_p)\n \t  if (code == COMPOUND_EXPR)\n \t    return max_size (TREE_OPERAND (exp, 1), max_p);\n \n+\t  /* Calculate \"(A ? B : C) - D\" as \"A ? B - D : C - D\" which\n+\t     may provide a tighter bound on max_size.  */\n+\t  if (code == MINUS_EXPR\n+\t      && TREE_CODE (TREE_OPERAND (exp, 0)) == COND_EXPR)\n+\t    {\n+\t      tree lhs = fold_build2 (MINUS_EXPR, type,\n+\t\t\t\t      TREE_OPERAND (TREE_OPERAND (exp, 0), 1),\n+\t\t\t\t      TREE_OPERAND (exp, 1));\n+\t      tree rhs = fold_build2 (MINUS_EXPR, type,\n+\t\t\t\t      TREE_OPERAND (TREE_OPERAND (exp, 0), 2),\n+\t\t\t\t      TREE_OPERAND (exp, 1));\n+\t      return fold_build2 (max_p ? MAX_EXPR : MIN_EXPR, type,\n+\t\t\t\t  max_size (lhs, max_p),\n+\t\t\t\t  max_size (rhs, max_p));\n+\t    }\n+\n \t  {\n \t    tree lhs = max_size (TREE_OPERAND (exp, 0), max_p);\n \t    tree rhs = max_size (TREE_OPERAND (exp, 1),"}, {"sha": "8441024b241a6943d3f43d88ba2cf13ce7149e43", "filename": "gcc/testsuite/ada/acats/norun.lst", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cc37194e7036e89ac7823a78539056fc802dbb/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst?ref=21cc37194e7036e89ac7823a78539056fc802dbb", "patch": "@@ -1,4 +1,3 @@\n-c380004\n c52103x\n c52104x\n c52104y\n@@ -7,6 +6,5 @@ cb1010c\n cb1010d\n templat\n # Tests must be sorted in alphabetical order\n-# c380004: should be front-end compile time error, PR ada/18817\n # c52103x, c52104x, c52104y: -fstack-check doesn't work, PR middle-end/20548\n # cb1010a, cb1010c, cb1010d: likewise"}]}