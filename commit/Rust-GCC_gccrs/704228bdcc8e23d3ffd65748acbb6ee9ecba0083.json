{"sha": "704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0MjI4YmRjYzhlMjNkM2ZmZDY1NzQ4YWNiYjZlZTllY2JhMDA4Mw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2015-10-20T12:42:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:42:53Z"}, "message": "fmap.adb, [...]: Fix coding style for marking start of processing of subprograms.\n\n2015-10-20  Yannick Moy  <moy@adacore.com>\n\n\t* fmap.adb, a-cihama.adb, sem_ch5.adb, make.adb, inline.adb,\n\ta-cfhase.adb, scng.adb, sem_ch12.adb, freeze.adb, tempdir.adb,\n\tsem_util.adb, sem_res.adb, s-regexp.adb, a-clrefi.adb: Fix coding\n\tstyle for marking start of processing of subprograms.\n\n2015-10-20  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-spark_specific.adb (Add_SPARK_File): Start traversal\n\tby requesting info from stubs.\t(Traverse_All_Compilation_Units):\n\tRemove unused procedure.\n\t(Traverse_Declarations_Or_Statements): Handle protected and task units.\n\t* lib-xref.ads (Traverse_All_Compilation_Units): Remove unused\n\tprocedure.\n\t* restrict.adb (Check_Restriction): Do not ignore\n\trestrictions in GNATprove_Mode.\n\nFrom-SVN: r229078", "tree": {"sha": "735688539c34748ea9b7b595752d4f0a5f93705c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/735688539c34748ea9b7b595752d4f0a5f93705c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c83075965b324e46b3225cac95391aaaa9fe1805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83075965b324e46b3225cac95391aaaa9fe1805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83075965b324e46b3225cac95391aaaa9fe1805"}], "stats": {"total": 136, "additions": 96, "deletions": 40}, "files": [{"sha": "3407bd3b4a99b5db72f587a1a9dd7e92877d6155", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -1,3 +1,21 @@\n+2015-10-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* fmap.adb, a-cihama.adb, sem_ch5.adb, make.adb, inline.adb,\n+\ta-cfhase.adb, scng.adb, sem_ch12.adb, freeze.adb, tempdir.adb,\n+\tsem_util.adb, sem_res.adb, s-regexp.adb, a-clrefi.adb: Fix coding\n+\tstyle for marking start of processing of subprograms.\n+\n+2015-10-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Add_SPARK_File): Start traversal\n+\tby requesting info from stubs.\t(Traverse_All_Compilation_Units):\n+\tRemove unused procedure.\n+\t(Traverse_Declarations_Or_Statements): Handle protected and task units.\n+\t* lib-xref.ads (Traverse_All_Compilation_Units): Remove unused\n+\tprocedure.\n+\t* restrict.adb (Check_Restriction): Do not ignore\n+\trestrictions in GNATprove_Mode.\n+\n 2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-valllu.adb, sem_ch3.adb, layout.adb, a-crbtgo.adb, exp_ch9.adb,"}, {"sha": "d25705bfc71f31bb81198911ab08b5a883d9cfca", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -516,7 +516,7 @@ is\n          end loop;\n       end Find_Equivalent_Key;\n \n-   --  Start of processing of Equivalent_Sets\n+   --  Start of processing for Equivalent_Sets\n \n    begin\n       return Is_Equivalent (Left, Right);"}, {"sha": "11831004deac8c5cfa2f91e1de23f7c18514ed23", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -788,7 +788,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n       Busy : With_Busy (Container.HT.TC'Unrestricted_Access);\n \n-   --  Start of processing Iterate\n+   --  Start of processing for Iterate\n \n    begin\n       Local_Iterate (Container.HT);"}, {"sha": "5afde3b616cb3942c080179f2a4751f30b3af46c", "filename": "gcc/ada/a-clrefi.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-clrefi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fa-clrefi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-clrefi.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2007-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2007-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -217,7 +217,7 @@ package body Ada.Command_Line.Response_File is\n             end loop;\n          end Get_Line;\n \n-      --  Start or Recurse\n+      --  Start of processing for Recurse\n \n       begin\n          Last_Arg := 0;\n@@ -491,7 +491,7 @@ package body Ada.Command_Line.Response_File is\n             raise;\n       end Recurse;\n \n-   --  Start of Arguments_From\n+   --  Start of processing for Arguments_From\n \n    begin\n       --  The job is done by procedure Recurse"}, {"sha": "77fa6c0d78d160a629993f52c819a52388c7c173", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -478,7 +478,7 @@ package body Fmap is\n          Buffer (Buffer_Last) := ASCII.LF;\n       end Put_Line;\n \n-   --  Start of Update_Mapping_File\n+   --  Start of processing for Update_Mapping_File\n \n    begin\n       --  If the mapping file could not be read, then it will not be possible"}, {"sha": "ee8a23e5f1c948ee37f8f2d56a4d479376dad413", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -1592,7 +1592,7 @@ package body Freeze is\n             end if;\n          end Process_Flist;\n \n-      --  Start or processing for Freeze_All_Ent\n+      --  Start of processing for Freeze_All_Ent\n \n       begin\n          E := From;"}, {"sha": "0d16affb06e0c7948d56c7573a4013008dc3229c", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -1504,7 +1504,7 @@ package body Inline is\n \n       Id : Entity_Id;  --  Procedure or function entity for the subprogram\n \n-   --  Start of Can_Be_Inlined_In_GNATprove_Mode\n+   --  Start of processing for Can_Be_Inlined_In_GNATprove_Mode\n \n    begin\n       pragma Assert (Present (Spec_Id) or else Present (Body_Id));"}, {"sha": "a39671494fa2c87f40e7c12726eeac5f01a74c31", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 56, "deletions": 14, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,7 +154,7 @@ package body SPARK_Specific is\n          Traverse_Compilation_Unit\n            (CU           => Cunit (Ubody),\n             Process      => Detect_And_Add_SPARK_Scope'Access,\n-            Inside_Stubs => False);\n+            Inside_Stubs => True);\n       end if;\n \n       --  When two units are present for the same compilation unit, as it\n@@ -166,7 +166,7 @@ package body SPARK_Specific is\n             Traverse_Compilation_Unit\n               (CU           => Cunit (Uspec),\n                Process      => Detect_And_Add_SPARK_Scope'Access,\n-               Inside_Stubs => False);\n+               Inside_Stubs => True);\n          end if;\n       end if;\n \n@@ -1151,17 +1151,6 @@ package body SPARK_Specific is\n       end if;\n    end Generate_Dereference;\n \n-   ------------------------------------\n-   -- Traverse_All_Compilation_Units --\n-   ------------------------------------\n-\n-   procedure Traverse_All_Compilation_Units (Process : Node_Processing) is\n-   begin\n-      for U in Units.First .. Last_Unit loop\n-         Traverse_Compilation_Unit (Cunit (U), Process, Inside_Stubs => False);\n-      end loop;\n-   end Traverse_All_Compilation_Units;\n-\n    -------------------------------\n    -- Traverse_Compilation_Unit --\n    -------------------------------\n@@ -1300,6 +1289,59 @@ package body SPARK_Specific is\n                   end;\n                end if;\n \n+            --  Protected unit\n+\n+            when N_Protected_Definition =>\n+               Traverse_Declarations_Or_Statements\n+                 (Visible_Declarations (N), Process, Inside_Stubs);\n+               Traverse_Declarations_Or_Statements\n+                 (Private_Declarations (N), Process, Inside_Stubs);\n+\n+            when N_Protected_Body =>\n+               Traverse_Declarations_Or_Statements\n+                 (Declarations (N), Process, Inside_Stubs);\n+\n+            when N_Protected_Body_Stub =>\n+               if Present (Library_Unit (N)) then\n+                  declare\n+                     Body_N : constant Node_Id := Get_Body_From_Stub (N);\n+                  begin\n+                     if Inside_Stubs then\n+                        Traverse_Declarations_Or_Statements\n+                          (Declarations (Body_N), Process, Inside_Stubs);\n+                     end if;\n+                  end;\n+               end if;\n+\n+            --  Task unit\n+\n+            when N_Task_Definition =>\n+               Traverse_Declarations_Or_Statements\n+                 (Visible_Declarations (N), Process, Inside_Stubs);\n+               Traverse_Declarations_Or_Statements\n+                 (Private_Declarations (N), Process, Inside_Stubs);\n+\n+            when N_Task_Body =>\n+               Traverse_Declarations_Or_Statements\n+                 (Declarations (N), Process, Inside_Stubs);\n+               Traverse_Handled_Statement_Sequence\n+                 (Handled_Statement_Sequence (N), Process, Inside_Stubs);\n+\n+            when N_Task_Body_Stub =>\n+               if Present (Library_Unit (N)) then\n+                  declare\n+                     Body_N : constant Node_Id := Get_Body_From_Stub (N);\n+                  begin\n+                     if Inside_Stubs then\n+                        Traverse_Declarations_Or_Statements\n+                          (Declarations (Body_N), Process, Inside_Stubs);\n+                        Traverse_Handled_Statement_Sequence\n+                          (Handled_Statement_Sequence (Body_N), Process,\n+                           Inside_Stubs);\n+                     end if;\n+                  end;\n+               end if;\n+\n             --  Block statement\n \n             when N_Block_Statement =>"}, {"sha": "9d1037ca05326bd49a6147d0ab901caab9e945d4", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -645,10 +645,6 @@ package Lib.Xref is\n       --  Inside_Stubs is True, then the body of stubs is also traversed.\n       --  Generic declarations are ignored.\n \n-      procedure Traverse_All_Compilation_Units (Process : Node_Processing);\n-      --  Call Process on all declarations through all compilation units.\n-      --  Generic declarations are ignored.\n-\n       procedure Collect_SPARK_Xrefs\n         (Sdep_Table : Unit_Ref_Table;\n          Num_Sdep   : Nat);"}, {"sha": "90eb0ed1c9c9cfb84a8b3bc00197143043973bdf", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -4119,7 +4119,7 @@ package body Make is\n       procedure Globalize_Dirs is new\n         Prj.Env.For_All_Object_Dirs (Globalize_Dir);\n \n-   --  Start of procedure Globalize\n+   --  Start of processing for Globalize\n \n    begin\n       Success := True;"}, {"sha": "fb0e9682a41e16e4f8335cd0b335a07906adb97a", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -505,7 +505,7 @@ package body Restrict is\n \n       --  Just checking, SPARK does not allow restrictions to be set ???\n \n-      if CodePeer_Mode or GNATprove_Mode then\n+      if CodePeer_Mode then\n          return;\n       end if;\n "}, {"sha": "6a445340b14c1ef1ec9ee5e8c23586b83bfa4c44", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2013, AdaCore                     --\n+--                     Copyright (C) 1999-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1084,7 +1084,7 @@ package body System.Regexp is\n             return J;\n          end Next_Sub_Expression;\n \n-      --  Start of Create_Primary_Table\n+      --  Start of processing for Create_Primary_Table\n \n       begin\n          Table.all := (others => (others => 0));"}, {"sha": "0216ddf71a997920c78e181a930b6b3956dd59fe", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -641,7 +641,7 @@ package body Scng is\n             end loop;\n          end Scan_Integer;\n \n-      --  Start of Processing for Nlit\n+      --  Start of processing for Nlit\n \n       begin\n          Base := 10;"}, {"sha": "53f1cad6110389733ae4a066c4fd481485e4b0bb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -8126,7 +8126,7 @@ package body Sem_Ch12 is\n          return Freeze_Node (Id);\n       end Package_Freeze_Node;\n \n-   --  Start of processing of Freeze_Subprogram_Body\n+   --  Start of processing for Freeze_Subprogram_Body\n \n    begin\n       --  If the instance and the generic body appear within the same unit, and"}, {"sha": "24e641ebfea19e1ca40a4b883e37d487d0d6f393", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -1571,7 +1571,7 @@ package body Sem_Ch5 is\n          end if;\n       end Analyze_Cond_Then;\n \n-   --  Start of Analyze_If_Statement\n+   --  Start of processing for Analyze_If_Statement\n \n    begin\n       --  Initialize exit count for else statements. If there is no else part,\n@@ -1788,7 +1788,7 @@ package body Sem_Ch5 is\n          return Etype (Ent);\n       end Get_Cursor_Type;\n \n-   --   Start of processing for  Analyze_iterator_Specification\n+   --   Start of processing for Analyze_iterator_Specification\n \n    begin\n       Enter_Name (Def_Id);"}, {"sha": "4de4549f2b2bddac4f5df217cf6e7d3223a9c56e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -7319,7 +7319,7 @@ package body Sem_Res is\n          end if;\n       end Actual_Index_Type;\n \n-   --  Start of processing of Resolve_Entry\n+   --  Start of processing for Resolve_Entry\n \n    begin\n       --  Find name of entry being called, and resolve prefix of name with its"}, {"sha": "384221e32dba18975072d2daacae726ece033004", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -3021,7 +3021,7 @@ package body Sem_Util is\n          end if;\n       end Is_Later_Declarative_Item;\n \n-   --  Start of Check_Later_Vs_Basic_Declarations\n+   --  Start of processing for Check_Later_Vs_Basic_Declarations\n \n    begin\n       Decl := First (Decls);\n@@ -14385,7 +14385,7 @@ package body Sem_Util is\n \n       procedure Mark_Allocators is new Traverse_Proc (Mark_Allocator);\n \n-   --  Start of processing Mark_Coextensions\n+   --  Start of processing for Mark_Coextensions\n \n    begin\n       --  An allocator that appears on the right-hand side of an assignment is"}, {"sha": "d7838630385798deefe79b2f1e9acd5d0f86f339", "filename": "gcc/ada/tempdir.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ftempdir.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704228bdcc8e23d3ffd65748acbb6ee9ecba0083/gcc%2Fada%2Ftempdir.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftempdir.adb?ref=704228bdcc8e23d3ffd65748acbb6ee9ecba0083", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,7 +62,7 @@ package body Tempdir is\n          end if;\n       end Directory;\n \n-   --  Start of processing Tempdir\n+   --  Start of processing for Create_Temp_File\n \n    begin\n       if Temp_Dir'Length /= 0 then"}]}