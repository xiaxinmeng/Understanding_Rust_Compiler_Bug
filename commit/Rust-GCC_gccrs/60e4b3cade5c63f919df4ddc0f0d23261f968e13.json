{"sha": "60e4b3cade5c63f919df4ddc0f0d23261f968e13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlNGIzY2FkZTVjNjNmOTE5ZGY0ZGRjMGYwZDIzMjYxZjk2OGUxMw==", "commit": {"author": {"name": "Przemyslaw Wirkus", "email": "przemyslaw.wirkus@arm.com", "date": "2020-09-30T14:39:24Z"}, "committer": {"name": "Przemyslaw Wirkus", "email": "przemyslaw.wirkus@arm.com", "date": "2020-09-30T14:39:24Z"}, "message": "arm: add support for Cortex-A78 and Cortex-A78AE\n\nThis patch introduces support for Cortex-A78 [0] and Cortex-A78AE [1]\ncpus.\n\n\t[0]: https://www.arm.com/products/silicon-ip-cpu/cortex-a/cortex-a78\n\t[1]: https://www.arm.com/products/silicon-ip-cpu/cortex-a/cortex-a78ae\n\nOK for master branch ?\n\nkind regards\nPrzemyslaw Wirkus\n\ngcc/ChangeLog:\n\n\t* config/arm/arm-cpus.in: Add Cortex-A78 and Cortex-A78AE cores.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Regenerate.\n\t* doc/invoke.texi: Update docs.", "tree": {"sha": "165e69bb40586d9d35f581e26e07215ec3be43bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/165e69bb40586d9d35f581e26e07215ec3be43bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e4b3cade5c63f919df4ddc0f0d23261f968e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e4b3cade5c63f919df4ddc0f0d23261f968e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e4b3cade5c63f919df4ddc0f0d23261f968e13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e4b3cade5c63f919df4ddc0f0d23261f968e13/comments", "author": {"login": "PrzemekWirkus", "id": 6360720, "node_id": "MDQ6VXNlcjYzNjA3MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrzemekWirkus", "html_url": "https://github.com/PrzemekWirkus", "followers_url": "https://api.github.com/users/PrzemekWirkus/followers", "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}", "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions", "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs", "repos_url": "https://api.github.com/users/PrzemekWirkus/repos", "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}", "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PrzemekWirkus", "id": 6360720, "node_id": "MDQ6VXNlcjYzNjA3MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrzemekWirkus", "html_url": "https://github.com/PrzemekWirkus", "followers_url": "https://api.github.com/users/PrzemekWirkus/followers", "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}", "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions", "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs", "repos_url": "https://api.github.com/users/PrzemekWirkus/repos", "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}", "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6860cb96d038fe7519797adfb9c3c2e635234de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6860cb96d038fe7519797adfb9c3c2e635234de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6860cb96d038fe7519797adfb9c3c2e635234de"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "d47f9439ed1ddd8c72619cbc2152acfafbedd510", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=60e4b3cade5c63f919df4ddc0f0d23261f968e13", "patch": "@@ -1447,6 +1447,28 @@ begin cpu cortex-a77\n  part d0d\n end cpu cortex-a77\n \n+begin cpu cortex-a78\n+ cname cortexa78\n+ tune for cortex-a57\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16+dotprod\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a57\n+ vendor 41\n+ part d41\n+end cpu cortex-a78\n+\n+begin cpu cortex-a78ae\n+ cname cortexa78ae\n+ tune for cortex-a57\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16+dotprod\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a57\n+ vendor 41\n+ part d42\n+end cpu cortex-a78ae\n+\n begin cpu cortex-x1\n  cname cortexx1\n  tune for cortex-a57"}, {"sha": "9f6582440534c7772fa66ea99dacfd9e80ae8597", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=60e4b3cade5c63f919df4ddc0f0d23261f968e13", "patch": "@@ -240,6 +240,12 @@ Enum(processor_type) String(cortex-a76ae) Value( TARGET_CPU_cortexa76ae)\n EnumValue\n Enum(processor_type) String(cortex-a77) Value( TARGET_CPU_cortexa77)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a78) Value( TARGET_CPU_cortexa78)\n+\n+EnumValue\n+Enum(processor_type) String(cortex-a78ae) Value( TARGET_CPU_cortexa78ae)\n+\n EnumValue\n Enum(processor_type) String(cortex-x1) Value( TARGET_CPU_cortexx1)\n "}, {"sha": "269e627626a4675d561daa0a8cb8b992d79e17d1", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=60e4b3cade5c63f919df4ddc0f0d23261f968e13", "patch": "@@ -45,8 +45,9 @@\n \tcortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,\n \tcortexa73cortexa53,cortexa55,cortexa75,\n \tcortexa76,cortexa76ae,cortexa77,\n-\tcortexx1,neoversen1,neoversen2,\n-\tcortexa75cortexa55,cortexa76cortexa55,neoversev1,\n-\tcortexm23,cortexm33,cortexm35p,\n-\tcortexm55,cortexr52\"\n+\tcortexa78,cortexa78ae,cortexx1,\n+\tneoversen1,neoversen2,cortexa75cortexa55,\n+\tcortexa76cortexa55,neoversev1,cortexm23,\n+\tcortexm33,cortexm35p,cortexm55,\n+\tcortexr52\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "c0499324d5fc367f1fbd3055eab1167b137b7851", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e4b3cade5c63f919df4ddc0f0d23261f968e13/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=60e4b3cade5c63f919df4ddc0f0d23261f968e13", "patch": "@@ -19395,6 +19395,7 @@ Permissible names are: @samp{arm7tdmi}, @samp{arm7tdmi-s}, @samp{arm710t},\n @samp{cortex-a32}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a55},\n @samp{cortex-a57}, @samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-a75},\n @samp{cortex-a76}, @samp{cortex-a76ae}, @samp{cortex-a77},\n+@samp{cortex-a78}, @samp{cortex-a78ae},\n @samp{ares}, @samp{cortex-r4}, @samp{cortex-r4f},\n @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-r8}, @samp{cortex-r52},\n @samp{cortex-m0}, @samp{cortex-m0plus}, @samp{cortex-m1}, @samp{cortex-m3},"}]}