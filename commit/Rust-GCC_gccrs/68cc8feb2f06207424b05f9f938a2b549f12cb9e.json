{"sha": "68cc8feb2f06207424b05f9f938a2b549f12cb9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjYzhmZWIyZjA2MjA3NDI0YjA1ZjlmOTM4YTJiNTQ5ZjEyY2I5ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-28T09:58:38Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-28T09:58:38Z"}, "message": "Fix previous commit.\n\nFrom-SVN: r192889", "tree": {"sha": "ea87b585bda2906ecacb0583936710e012cb3553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea87b585bda2906ecacb0583936710e012cb3553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68cc8feb2f06207424b05f9f938a2b549f12cb9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68cc8feb2f06207424b05f9f938a2b549f12cb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68cc8feb2f06207424b05f9f938a2b549f12cb9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68cc8feb2f06207424b05f9f938a2b549f12cb9e/comments", "author": null, "committer": null, "parents": [{"sha": "b48ccf0df63bb9f2ab8de12397e3e72676fa2624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48ccf0df63bb9f2ab8de12397e3e72676fa2624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48ccf0df63bb9f2ab8de12397e3e72676fa2624"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "39e450dfd437a9dcfcd828676ef9a565c5dc7777", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68cc8feb2f06207424b05f9f938a2b549f12cb9e/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68cc8feb2f06207424b05f9f938a2b549f12cb9e/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=68cc8feb2f06207424b05f9f938a2b549f12cb9e", "patch": "@@ -1337,6 +1337,7 @@ inline_small_functions (void)\n   int min_size, max_size;\n   VEC (cgraph_edge_p, heap) *new_indirect_edges = NULL;\n   int initial_size = 0;\n+  struct cgraph_node **order = XCNEWVEC (struct cgraph_node *, cgraph_n_nodes);\n \n   if (flag_indirect_inlining)\n     new_indirect_edges = VEC_alloc (cgraph_edge_p, heap, 8);\n@@ -1345,6 +1346,8 @@ inline_small_functions (void)\n      metrics.  */\n \n   max_count = 0;\n+  ipa_reduced_postorder (order, true, true, NULL);\n+  free (order);\n \n   FOR_EACH_DEFINED_FUNCTION (node)\n     if (!node->global.inlined_to)"}]}