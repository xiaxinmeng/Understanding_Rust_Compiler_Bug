{"sha": "0990a778376b63b789a8ff5aa949325ba375c025", "node_id": "C_kwDOANBUbNoAKDA5OTBhNzc4Mzc2YjYzYjc4OWE4ZmY1YWE5NDkzMjViYTM3NWMwMjU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-19T00:17:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-19T00:17:27Z"}, "message": "Daily bump.", "tree": {"sha": "e04b98104a44882ba5fd7081abfc95f70eab09e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e04b98104a44882ba5fd7081abfc95f70eab09e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0990a778376b63b789a8ff5aa949325ba375c025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0990a778376b63b789a8ff5aa949325ba375c025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0990a778376b63b789a8ff5aa949325ba375c025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0990a778376b63b789a8ff5aa949325ba375c025/comments", "author": null, "committer": null, "parents": [{"sha": "313879d8768d08dea035efd7fd62b753dc91c364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313879d8768d08dea035efd7fd62b753dc91c364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313879d8768d08dea035efd7fd62b753dc91c364"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "319f91329be502d212e31d7a1e3b7cbc9c908db5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0990a778376b63b789a8ff5aa949325ba375c025", "patch": "@@ -1,3 +1,71 @@\n+2022-09-18  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gimplify.cc (omp_segregate_mapping_groups): Update comment.\n+\t(gimplify_adjust_omp_clauses): Move ATTACH and\n+\tATTACH_ZERO_LENGTH_ARRAY_SECTION nodes to the end of the clause list\n+\tfor offloaded OpenMP regions.\n+\n+2022-09-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/106831\n+\t* value-range.cc (frange::singleton_p): Avoid propagating long\n+\tdoubles that may have multiple representations.\n+\n+2022-09-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (frange_add_zeros): Replace set_signbit with\n+\tunion of zero.\n+\t* value-query.cc (range_query::get_tree_range): Remove set_signbit\n+\tuse.\n+\t* value-range-pretty-print.cc (vrange_printer::print_frange_prop):\n+\tRemove.\n+\t(vrange_printer::print_frange_nan): New.\n+\t* value-range-pretty-print.h (print_frange_prop): Remove.\n+\t(print_frange_nan): New.\n+\t* value-range-storage.cc (frange_storage_slot::set_frange): Set\n+\tkind and NAN fields.\n+\t(frange_storage_slot::get_frange): Restore kind and NAN fields.\n+\t* value-range-storage.h (class frange_storage_slot): Add kind and\n+\tNAN fields.\n+\t* value-range.cc (frange::update_nan): Remove.\n+\t(frange::set_signbit): Remove.\n+\t(frange::set): Adjust for NAN fields.\n+\t(frange::normalize_kind): Remove m_props.\n+\t(frange::combine_zeros): New.\n+\t(frange::union_nans): New.\n+\t(frange::union_): Handle new NAN fields.\n+\t(frange::intersect_nans): New.\n+\t(frange::intersect): Handle new NAN fields.\n+\t(frange::operator=): Same.\n+\t(frange::operator==): Same.\n+\t(frange::contains_p): Same.\n+\t(frange::singleton_p): Remove special case for signed zeros.\n+\t(frange::verify_range): Adjust for new NAN fields.\n+\t(frange::set_zero): Handle signed zeros.\n+\t(frange::set_nonnegative): Same.\n+\t(range_tests_nan): Adjust tests.\n+\t(range_tests_signed_zeros): Same.\n+\t(range_tests_signbit): Same.\n+\t(range_tests_floats): Same.\n+\t* value-range.h (class fp_prop): Remove.\n+\t(FP_PROP_ACCESSOR): Remove.\n+\t(class frange_props): Remove\n+\t(frange::lower_bound): NANs don't have endpoints.\n+\t(frange::upper_bound): Same.\n+\t(frange_props::operator==): Remove.\n+\t(frange_props::union_): Remove.\n+\t(frange_props::intersect): Remove.\n+\t(frange::update_nan): New.\n+\t(frange::clear_nan): New.\n+\t(frange::undefined_p): New.\n+\t(frange::set_nan): New.\n+\t(frange::known_finite): Adjust for new NAN representation.\n+\t(frange::maybe_isnan): Same.\n+\t(frange::known_isnan): Same.\n+\t(frange::signbit_p): Same.\n+\t* gimple-range-fold.cc (range_of_builtin_int_call): Rename\n+\tknown_signbit_p into signbit_p.\n+\n 2022-09-17  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n \t* config/csky/csky.h (FUNCTION_ARG_REGNO_P): Cast REGNO to (int)"}, {"sha": "98dc1b51fa63ad1b0268fad7eb5c590b29690294", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0990a778376b63b789a8ff5aa949325ba375c025", "patch": "@@ -1 +1 @@\n-20220918\n+20220919"}, {"sha": "a487dda751a33f265c84eb8427fbd92d743afd14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0990a778376b63b789a8ff5aa949325ba375c025/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0990a778376b63b789a8ff5aa949325ba375c025", "patch": "@@ -1,3 +1,11 @@\n+2022-09-18  Julian Brown  <julian@codesourcery.com>\n+\n+\t* g++.dg/gomp/target-lambda-1.C: Adjust expected scan output.\n+\n+2022-09-18  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* gcc.dg/tree-ssa/gen-vect-34.c: Skip RISC-V targets.\n+\n 2022-09-17  Patrick Palka  <ppalka@redhat.com>\n \n \t* g++.dg/modules/typename-friend_a.C: New test."}, {"sha": "7c434c9363d1fe72b99095aa3cf8f1139f8f2435", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0990a778376b63b789a8ff5aa949325ba375c025/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0990a778376b63b789a8ff5aa949325ba375c025/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0990a778376b63b789a8ff5aa949325ba375c025", "patch": "@@ -1,3 +1,9 @@\n+2022-09-18  Thomas Neumann  <tneumann@users.sourceforge.net>\n+\n+\t* unwind-dw2-fde.c: Replace uintptr_t with typedef\n+\tfor __UINTPTR_TYPE__.\n+\t* unwind-dw2-btree.h: Likewise.\n+\n 2022-09-16  Thomas Neumann  <tneumann@users.sourceforge.net>\n \n \t* unwind-dw2-fde.c (release_registered_frames): Cleanup at shutdown."}]}