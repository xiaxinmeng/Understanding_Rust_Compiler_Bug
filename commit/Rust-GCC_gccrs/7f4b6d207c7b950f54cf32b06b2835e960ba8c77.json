{"sha": "7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y0YjZkMjA3YzdiOTUwZjU0Y2YzMmIwNmIyODM1ZTk2MGJhOGM3Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-08T21:30:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-08T21:30:23Z"}, "message": "re PR middle-end/37414 (ICE with -ffast-math)\n\n\tPR middle-end/37414\n\t* predict.c (optimize_function_for_size_p): Don't segfault if\n\tFUN is NULL.\n\t* fold-const.c (LOGICAL_OP_NON_SHORT_CIRCUIT, fold_truthop,\n\ttree_swap_operands_p): Don't test cfun != NULL before calling\n\toptimize_function_for_s*_p.\n\n\t* g++.dg/opt/init2.C: New test.\n\nFrom-SVN: r140122", "tree": {"sha": "c73044cbbaa13e7957e4b102844ffd851a3c9f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c73044cbbaa13e7957e4b102844ffd851a3c9f04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99b96649c17e6a2f9b5e1427603d164ad752c15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b96649c17e6a2f9b5e1427603d164ad752c15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b96649c17e6a2f9b5e1427603d164ad752c15b"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "60ff6e93da52d6c2b3cdb05441a9a5b9060607d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "patch": "@@ -1,3 +1,12 @@\n+2008-09-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/37414\n+\t* predict.c (optimize_function_for_size_p): Don't segfault if\n+\tFUN is NULL.\n+\t* fold-const.c (LOGICAL_OP_NON_SHORT_CIRCUIT, fold_truthop,\n+\ttree_swap_operands_p): Don't test cfun != NULL before calling\n+\toptimize_function_for_s*_p.\n+\n 2008-09-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ira-color.c (ira_reuse_stack_slot): Set slot_num on success at the"}, {"sha": "aea7a653b188ceda01629c072776df2b163f006e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "patch": "@@ -5110,7 +5110,7 @@ fold_cond_expr_with_comparison (tree type, tree arg0, tree arg1, tree arg2)\n \f\n #ifndef LOGICAL_OP_NON_SHORT_CIRCUIT\n #define LOGICAL_OP_NON_SHORT_CIRCUIT \\\n-  (BRANCH_COST (!cfun || optimize_function_for_speed_p (cfun), \\\n+  (BRANCH_COST (optimize_function_for_speed_p (cfun), \\\n \t\tfalse) >= 2)\n #endif\n \n@@ -5359,7 +5359,7 @@ fold_truthop (enum tree_code code, tree truth_type, tree lhs, tree rhs)\n      that can be merged.  Avoid doing this if the RHS is a floating-point\n      comparison since those can trap.  */\n \n-  if (BRANCH_COST (!cfun || optimize_function_for_speed_p (cfun),\n+  if (BRANCH_COST (optimize_function_for_speed_p (cfun),\n \t\t   false) >= 2\n       && ! FLOAT_TYPE_P (TREE_TYPE (rl_arg))\n       && simple_operand_p (rl_arg)\n@@ -6682,7 +6682,7 @@ tree_swap_operands_p (const_tree arg0, const_tree arg1, bool reorder)\n   if (TREE_CONSTANT (arg0))\n     return 1;\n \n-  if (cfun && optimize_function_for_size_p (cfun))\n+  if (optimize_function_for_size_p (cfun))\n     return 0;\n \n   if (reorder && flag_evaluation_order"}, {"sha": "5ed6c431355e970391571fe234de9bc9698e73af", "filename": "gcc/predict.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "patch": "@@ -203,7 +203,8 @@ bool\n optimize_function_for_size_p (struct function *fun)\n {\n   return (optimize_size\n-\t  || fun->function_frequency == FUNCTION_FREQUENCY_UNLIKELY_EXECUTED);\n+\t  || (fun && (fun->function_frequency\n+\t\t      == FUNCTION_FREQUENCY_UNLIKELY_EXECUTED)));\n }\n \n /* Return true when current function should always be optimized for speed.  */"}, {"sha": "f5aec0065f93917ae3dcd2b87b0fa59d00fab001", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "patch": "@@ -1,5 +1,8 @@\n 2008-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/37414\n+\t* g++.dg/opt/init2.C: New test.\n+\n \tPR middle-end/37337\n \t* g++.dg/tree-ssa/pr37337.C: New test.\n "}, {"sha": "3c3bc939d7621ce39b0a15e709d64ed18a0d6d75", "filename": "gcc/testsuite/g++.dg/opt/init2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4b6d207c7b950f54cf32b06b2835e960ba8c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finit2.C?ref=7f4b6d207c7b950f54cf32b06b2835e960ba8c77", "patch": "@@ -0,0 +1,6 @@\n+// PR middle-end/37414\n+// { dg-do compile }\n+// { dg-options \"-O2 -ffast-math\" }\n+\n+double x = 6.0;\n+double y = x * x;"}]}