{"sha": "5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkYjExOWZkNWZiMDg5MmI2NTNlODI5YmViNGU4ZTlhZmFmOWU0Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-04-17T19:29:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-04-17T19:29:28Z"}, "message": "re PR go/64999 (s390x libgo test failure in TestMemoryProfiler)\n\n\tPR go/64999\n\tPR go/65180\nruntime: Adjust libbacktrace PC value to what runtime.Callers expects.\n\nFrom Lynn Boger.\n\nFrom-SVN: r222196", "tree": {"sha": "8b26ead6d9955e31ce7cf347d6e42a66c57a4c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b26ead6d9955e31ce7cf347d6e42a66c57a4c02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c/comments", "author": null, "committer": null, "parents": [{"sha": "f6c72af46fbbd30fd01f7bb8c678a252f7be67ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c72af46fbbd30fd01f7bb8c678a252f7be67ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c72af46fbbd30fd01f7bb8c678a252f7be67ba"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "b5ab3be6473e5f8a1b4680379af15943b69c44f6", "filename": "libgo/runtime/go-callers.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c/libgo%2Fruntime%2Fgo-callers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c/libgo%2Fruntime%2Fgo-callers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-callers.c?ref=5fdb119fd5fb0892b653e829beb4e8e9afaf9e4c", "patch": "@@ -83,7 +83,20 @@ callback (void *data, uintptr_t pc, const char *filename, int lineno,\n     }\n \n   loc = &arg->locbuf[arg->index];\n-  loc->pc = pc;\n+\n+  /* On the call to backtrace_full the pc value was most likely\n+     decremented if there was a normal call, since the pc referred to\n+     the instruction where the call returned and not the call itself.\n+     This was done so that the line number referred to the call\n+     instruction.  To make sure the actual pc from the call stack is\n+     used, it is incremented here.\n+\n+     In the case of a signal, the pc was not decremented by\n+     backtrace_full but still incremented here.  That doesn't really\n+     hurt anything since the line number is right and the pc refers to\n+     the same instruction.  */\n+\n+  loc->pc = pc + 1;\n \n   /* The libbacktrace library says that these strings might disappear,\n      but with the current implementation they won't.  We can't easily"}]}