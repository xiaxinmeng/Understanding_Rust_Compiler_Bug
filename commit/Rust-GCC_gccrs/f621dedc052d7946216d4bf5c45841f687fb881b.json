{"sha": "f621dedc052d7946216d4bf5c45841f687fb881b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyMWRlZGMwNTJkNzk0NjIxNmQ0YmY1YzQ1ODQxZjY4N2ZiODgxYg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-01-20T09:24:01Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-01-20T09:24:01Z"}, "message": "typeck.c (build_unary_op): Use cp_pedwarn, not pedwarn.\n\n2000-01-19  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n\n        * typeck.c (build_unary_op): Use cp_pedwarn, not pedwarn.\n\n        * typeck2.c (incomplete_type_error): Restore previous cp_error and\n        cp_error_at call sequence.\n\nFrom-SVN: r31537", "tree": {"sha": "edc2e63eb1acb48d05f49caabe9b7f3f1829215d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc2e63eb1acb48d05f49caabe9b7f3f1829215d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f621dedc052d7946216d4bf5c45841f687fb881b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f621dedc052d7946216d4bf5c45841f687fb881b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f621dedc052d7946216d4bf5c45841f687fb881b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f621dedc052d7946216d4bf5c45841f687fb881b/comments", "author": null, "committer": null, "parents": [{"sha": "66af917072422d8addc2dfc2d819acfcef82afaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66af917072422d8addc2dfc2d819acfcef82afaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66af917072422d8addc2dfc2d819acfcef82afaf"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "c123e53a0eab67fc0dd2abeaae567e7910a5a294", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f621dedc052d7946216d4bf5c45841f687fb881b", "patch": "@@ -1,3 +1,10 @@\n+2000-01-19  Gabriel Dos Reis  <gdr@codesourcery.coom>\n+\n+        * typeck.c (build_unary_op): Use cp_pedwarn, not pedwarn.\n+\n+        * typeck2.c (incomplete_type_error): Restore previous\n+        cp_error and cp_error_at call sequence.\n+\t\n 2000-01-20  Brad Lucier  <lucier@math.purdue.edu>\n \n \t* class.c (dump_class_hierarchy): Make format agree with argument;"}, {"sha": "fabece2fbf13f41ebdda773f7b6d970d65ea5b75", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f621dedc052d7946216d4bf5c45841f687fb881b", "patch": "@@ -4701,13 +4701,13 @@ build_unary_op (code, xarg, noconvert)\n \t      if (current_class_type\n \t\t  && TREE_OPERAND (arg, 0) == current_class_ref)\n \t\t/* An expression like &memfn.  */\n-\t\tpedwarn (\"ISO C++ forbids taking the address of a\"\n-                         \" non-static member function to form a pointer\"\n-                         \" to member function.  Say `&%T::%D'\", base, name);\n+\t\tcp_pedwarn (\"ISO C++ forbids taking the address of a\"\n+                            \" non-static member function to form a pointer\"\n+                            \" to member function.  Say `&%T::%D'\", base, name);\n \t      else\n-\t\tpedwarn (\"ISO C++ forbids taking the address of a bound\"\n-                         \" member function to form a pointer to member\"\n-                         \" function\", base, name);\n+\t\tcp_pedwarn (\"ISO C++ forbids taking the address of a bound\"\n+                            \" member function to form a pointer to member\"\n+                            \" function\", base, name);\n \t    }\n \n \t  arg = build_offset_ref (base, name);"}, {"sha": "ced32f8192fb89852cf5377febda7298cb8aaba6", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f621dedc052d7946216d4bf5c45841f687fb881b/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=f621dedc052d7946216d4bf5c45841f687fb881b", "patch": "@@ -199,8 +199,8 @@ incomplete_type_error (value, type)\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:\n-      cp_error_at\n-        (\"invalid use of a forward-declared, but not defined type `%#T'\", type);\n+      cp_error (\"invalid use of undefined type `%#T'\", type);\n+      cp_error_at (\"forward declaration of `%#T'\", type);\n       break;\n \n     case VOID_TYPE:"}]}