{"sha": "5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxZjFlNjNmOWYyOGU3YWQ4Y2ExYjY1YWI0YjU0NjRhZTIwZWU0Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-22T19:07:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-22T19:07:44Z"}, "message": "i386.md (truncdfsf2): Don't create stack temp when using sse math only.\n\n        * config/i386/i386.md (truncdfsf2): Don't create stack temp when\n        using sse math only.  Use truncdfsf2_with_temp.\n        (truncdfsf2_with_temp): New.\n        (truncdfsf_fast_i387): Rename from truncdfsf2_noop.  Add memory\n        output alternative.\n        (truncdfsf_mixed): Rename from truncdfsf2_1_sse.  Compress duplicate\n        alternatives.\n        (truncdfsf_fast_sse): Rename from truncdfsf2_2.  Remove f alternative.\n        (truncdfsf2_3, truncdfsf2_sse_only): Remove.\n        (truncdfsf_i387): Rename from truncdfsf2_1.  Compress duplicates.\n        (truncdfsf_fast_mixed): New.\n        (truncdfsf splitters): Remove all except the 387 load/store split.\n        (truncxfsf2_1, truncxfdf2_1): Unify enable constraint with\n        respect to TARGET_SSE2, TARGET_80387, TARGET_SSE_MATH and\n        TARGET_MIX_SSE_I387.\n        (*truncxf{s,d}f2_1): Rename to *truncxf{s,d}f2_mixed.\n        (truncxf{s,d}f2_noop) Rename to truncxf{d,s}f2_i387_noop.\n        (*truncxf{s,d}f2_i387): New patterns.\n        (*truncxf{s,d}f2_2): Rename to *truncxf{s,d}f2_i387_1.\n        (truncxf{s,d}f2, fmod{s,d}f3, drem{s,d}f3, log1p{s,d}f2,\n        rint{s,d}f2, floor{s,d}f2, ceil{s,d}f2, btrunc{s,d}f2,\n        nearbyint{s,d}f2): Use renamed patterns.\n\nCo-Authored-By: Uros Bizjak <uros@kss-loka.si>\n\nFrom-SVN: r92498", "tree": {"sha": "1435fbf93ed10ad785839f34c37c945a67a73012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1435fbf93ed10ad785839f34c37c945a67a73012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46/comments", "author": null, "committer": null, "parents": [{"sha": "ad50bc8d803c56fc9ec9a81b70877e74d61c7c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad50bc8d803c56fc9ec9a81b70877e74d61c7c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad50bc8d803c56fc9ec9a81b70877e74d61c7c14"}], "stats": {"total": 364, "additions": 204, "deletions": 160}, "files": [{"sha": "11c98e3b37a22029bfdba43078261d0ae1018b45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "patch": "@@ -1,3 +1,29 @@\n+2004-12-22  Richard Henderson  <rth@redhat.com>\n+\t    Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (truncdfsf2): Don't create stack temp when\n+\tusing sse math only.  Use truncdfsf2_with_temp.\n+\t(truncdfsf2_with_temp): New.\n+\t(truncdfsf_fast_i387): Rename from truncdfsf2_noop.  Add memory\n+\toutput alternative.\n+\t(truncdfsf_mixed): Rename from truncdfsf2_1_sse.  Compress duplicate\n+\talternatives.\n+\t(truncdfsf_fast_sse): Rename from truncdfsf2_2.  Remove f alternative.\n+\t(truncdfsf2_3, truncdfsf2_sse_only): Remove.\n+\t(truncdfsf_i387): Rename from truncdfsf2_1.  Compress duplicates.\n+\t(truncdfsf_fast_mixed): New.\n+\t(truncdfsf splitters): Remove all except the 387 load/store split.\n+\t(truncxfsf2_1, truncxfdf2_1): Unify enable constraint with\n+\trespect to TARGET_SSE2, TARGET_80387, TARGET_SSE_MATH and\n+\tTARGET_MIX_SSE_I387.\n+\t(*truncxf{s,d}f2_1): Rename to *truncxf{s,d}f2_mixed.\n+\t(truncxf{s,d}f2_noop) Rename to truncxf{d,s}f2_i387_noop.\n+\t(*truncxf{s,d}f2_i387): New patterns.\n+\t(*truncxf{s,d}f2_2): Rename to *truncxf{s,d}f2_i387_1.\n+\t(truncxf{s,d}f2, fmod{s,d}f3, drem{s,d}f3, log1p{s,d}f2,\n+\trint{s,d}f2, floor{s,d}f2, ceil{s,d}f2, btrunc{s,d}f2,\n+\tnearbyint{s,d}f2): Use renamed patterns.\n+\n 2004-12-22  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree.h (TYPE_SIZES_GIMPLIFIED): New."}, {"sha": "156e65ff2d26b2ea871fd3eea352e78414a021ea", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 178, "deletions": 160, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5b1f1e63f9f28e7ad8ca1b65ab4b5464ae20ee46", "patch": "@@ -3636,46 +3636,40 @@\n ;; insn.  So we pretend we can output to a reg in order to get better\n ;; register preferencing, but we really use a stack slot.\n \n-(define_expand \"truncdfsf2\"\n-  [(parallel [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n-\t\t   (float_truncate:SF\n-\t\t    (match_operand:DF 1 \"register_operand\" \"\")))\n-\t      (clobber (match_dup 2))])]\n-  \"TARGET_80387 || TARGET_SSE2\"\n-  \"\n-   if (!TARGET_80387)\n-     {\n-\temit_insn (gen_truncdfsf2_sse_only (operands[0], operands[1]));\n-\tDONE;\n-     }\n-   else if (flag_unsafe_math_optimizations)\n-     {\n-\trtx reg = REG_P (operands[0]) ? operands[0] : gen_reg_rtx (SFmode);\n-\temit_insn (gen_truncdfsf2_noop (reg, operands[1]));\n-\tif (reg != operands[0])\n-\t  emit_move_insn (operands[0], reg);\n-\tDONE;\n-     }\n-   else\n-     operands[2] = assign_386_stack_local (SFmode, 0);\n-\")\n+;; Conversion from DFmode to SFmode.\n \n-(define_insn \"truncdfsf2_noop\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_80387 && flag_unsafe_math_optimizations\"\n+(define_expand \"truncdfsf2\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n+\t(float_truncate:SF\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n {\n-  return output_387_reg_move (insn, operands);\n-}\n-  [(set_attr \"type\" \"fmov\")\n-   (set_attr \"mode\" \"SF\")])\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n+    operands[1] = force_reg (DFmode, operands[1]);\n \n-(define_insn \"*truncdfsf2_1\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#rx,?r#fx,?x#rf\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"register_operand\" \"f,f,f,f\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m\"))]\n-  \"TARGET_80387 && !TARGET_SSE2\"\n+  if (TARGET_SSE2 && TARGET_SSE_MATH && !TARGET_MIX_SSE_I387)\n+    ;\n+  else if (flag_unsafe_math_optimizations)\n+    ;\n+  else\n+    {\n+      rtx temp = assign_386_stack_local (SFmode, 0);\n+      emit_insn (gen_truncdfsf2_with_temp (operands[0], operands[1], temp));\n+      DONE;\n+    }\n+})\n+\n+(define_expand \"truncdfsf2_with_temp\"\n+  [(parallel [(set (match_operand:SF 0 \"\" \"\")\n+\t\t   (float_truncate:SF (match_operand:DF 1 \"\" \"\")))\n+\t      (clobber (match_operand:SF 2 \"\" \"\"))])]\n+  \"\")\n+\n+(define_insn \"*truncdfsf_fast_mixed\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,f,Y\")\n+        (float_truncate:SF\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f,Ym\")))]\n+  \"TARGET_SSE2 && TARGET_MIX_SSE_I387 && flag_unsafe_math_optimizations\"\n {\n   switch (which_alternative)\n     {\n@@ -3684,19 +3678,43 @@\n \treturn \"fstp%z0\\t%y0\";\n       else\n \treturn \"fst%z0\\t%y0\";\n+    case 1:\n+      return output_387_reg_move (insn, operands);\n+    case 2:\n+      return \"cvtsd2ss\\t{%1, %0|%0, %1}\";\n     default:\n       abort ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,multi,multi,multi\")\n-   (set_attr \"mode\" \"SF,SF,SF,SF\")])\n+  [(set_attr \"type\" \"fmov,fmov,ssecvt\")\n+   (set_attr \"mode\" \"SF\")])\n+\n+;; Yes, this one doesn't depend on flag_unsafe_math_optimizations,\n+;; because nothing we do here is unsafe.\n+(define_insn \"*truncdfsf_fast_sse\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=Y\")\n+        (float_truncate:SF\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"Ym\")))]\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\"\n+  \"cvtsd2ss\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"mode\" \"SF\")])\n+\n+(define_insn \"*truncdfsf_fast_i387\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=fm\")\n+        (float_truncate:SF\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"f\")))]\n+  \"TARGET_80387 && flag_unsafe_math_optimizations\"\n+  \"* return output_387_reg_move (insn, operands);\"\n+  [(set_attr \"type\" \"fmov\")\n+   (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*truncdfsf2_1_sse\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*!m#fxr,?f#xr,?r#fx,?x#fr,Y#fr\")\n+(define_insn \"*truncdfsf_mixed\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,?fx*r,Y\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"f#Y,f#Y,f#Y,f#Y,mY#f\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m,X\"))]\n-  \"TARGET_80387 && TARGET_SSE2\"\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f    ,Ym\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\"     \"=X,m    ,X\"))]\n+  \"TARGET_MIX_SSE_I387\"\n {\n   switch (which_alternative)\n     {\n@@ -3705,117 +3723,95 @@\n \treturn \"fstp%z0\\t%y0\";\n       else\n \treturn \"fst%z0\\t%y0\";\n-    case 4:\n+    case 1:\n       return \"#\";\n+    case 2:\n+      return \"cvtsd2ss\\t{%1, %0|%0, %1}\";\n     default:\n       abort ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,multi,multi,multi,ssecvt\")\n-   (set_attr \"mode\" \"SF,SF,SF,SF,DF\")])\n+  [(set_attr \"type\" \"fmov,multi,ssecvt\")\n+   (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*truncdfsf2_2\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=Y,Y,!m\")\n+(define_insn \"*truncdfsf_i387\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?fx*r\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"Y,mY,f#Y\")))]\n-  \"TARGET_80387 && TARGET_SSE2\n-   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f,f\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m\"))]\n+  \"TARGET_80387\"\n {\n   switch (which_alternative)\n     {\n     case 0:\n-    case 1:\n-      return \"cvtsd2ss\\t{%1, %0|%0, %1}\";\n-    case 2:\n       if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n \treturn \"fstp%z0\\t%y0\";\n       else\n \treturn \"fst%z0\\t%y0\";\n+    case 1:\n+      return \"#\";\n     default:\n       abort ();\n     }\n }\n-  [(set_attr \"type\" \"ssecvt,ssecvt,fmov\")\n-   (set_attr \"athlon_decode\" \"vector,double,*\")\n-   (set_attr \"mode\" \"SF,SF,SF\")])\n-\n-(define_insn \"*truncdfsf2_3\"\n-  [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_80387\"\n-{\n-  if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-    return \"fstp%z0\\t%y0\";\n-  else\n-    return \"fst%z0\\t%y0\";\n-}\n-  [(set_attr \"type\" \"fmov\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"truncdfsf2_sse_only\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=Y,Y\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"Y,mY\")))]\n-  \"!TARGET_80387 && TARGET_SSE2\"\n-  \"cvtsd2ss\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"athlon_decode\" \"vector,double\")\n+  [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_split\n-  [(set (match_operand:SF 0 \"memory_operand\" \"\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387\"\n-  [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n-  \"\")\n-\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"\")))\n+\t (match_operand:DF 1 \"fp_register_operand\" \"\")))\n    (clobber (match_operand 2 \"\" \"\"))]\n-  \"TARGET_80387 && reload_completed\n-   && SSE_REG_P (operands[0])\n-   && !STACK_REG_P (operands[1])\"\n-  [(const_int 0)]\n+  \"reload_completed\"\n+  [(set (match_dup 2) (match_dup 1))\n+   (set (match_dup 0) (match_dup 2))]\n {\n-  emit_insn (gen_truncdfsf2_sse_only (operands[0], operands[1]));\n-  DONE;\n+  operands[1] = gen_rtx_REG (SFmode, true_regnum (operands[1]));\n })\n \n-(define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"fp_register_operand\" \"\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387 && reload_completed\"\n-  [(set (match_dup 2) (float_truncate:SF (match_dup 1)))\n-   (set (match_dup 0) (match_dup 2))]\n-  \"\")\n+;; Conversion from XFmode to SFmode.\n \n (define_expand \"truncxfsf2\"\n   [(parallel [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n \t\t   (float_truncate:SF\n \t\t    (match_operand:XF 1 \"register_operand\" \"\")))\n \t      (clobber (match_dup 2))])]\n   \"TARGET_80387\"\n-  \"\n+{\n   if (flag_unsafe_math_optimizations)\n     {\n       rtx reg = REG_P (operands[0]) ? operands[0] : gen_reg_rtx (SFmode);\n-      emit_insn (gen_truncxfsf2_noop (reg, operands[1]));\n+      emit_insn (gen_truncxfsf2_i387_noop (reg, operands[1]));\n       if (reg != operands[0])\n \temit_move_insn (operands[0], reg);\n       DONE;\n     }\n   else\n     operands[2] = assign_386_stack_local (SFmode, 0);\n-  \")\n+})\n \n-(define_insn \"truncxfsf2_noop\"\n+(define_insn \"*truncxfsf2_mixed\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#rx,?r#fx,?x#rf\")\n+\t(float_truncate:SF\n+\t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m\"))]\n+  \"TARGET_MIX_SSE_I387\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \"fstp%z0\\t%y0\";\n+      else\n+\treturn \"fst%z0\\t%y0\";\n+    default:\n+      abort();\n+    }\n+}\n+  [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+   (set_attr \"mode\" \"SF\")])\n+\n+(define_insn \"truncxfsf2_i387_noop\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n@@ -3825,11 +3821,11 @@\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*truncxfsf2_1\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#rx,?r#fx,?x#rf\")\n+(define_insn \"*truncxfsf2_i387\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#r,?r#f\")\n \t(float_truncate:SF\n-\t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m\"))]\n+\t (match_operand:XF 1 \"register_operand\" \"f,f,f\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m\"))]\n   \"TARGET_80387\"\n {\n   switch (which_alternative)\n@@ -3840,13 +3836,13 @@\n       else\n \treturn \"fst%z0\\t%y0\";\n     default:\n-      abort();\n+      abort ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+  [(set_attr \"type\" \"fmov,multi,multi\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*truncxfsf2_2\"\n+(define_insn \"*truncxfsf2_i387_1\"\n   [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"register_operand\" \"f\")))]\n@@ -3861,44 +3857,68 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"memory_operand\" \"\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"register_operand\" \"\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387\"\n-  [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 2) (float_truncate:SF (match_dup 1)))\n+   (set (match_dup 0) (match_dup 2))]\n   \"\")\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+  [(set (match_operand:SF 0 \"memory_operand\" \"\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"register_operand\" \"\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387 && reload_completed\"\n-  [(set (match_dup 2) (float_truncate:SF (match_dup 1)))\n-   (set (match_dup 0) (match_dup 2))]\n+  \"TARGET_80387\"\n+  [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n   \"\")\n \n+;; Conversion from XFmode to DFmode.\n+\n (define_expand \"truncxfdf2\"\n   [(parallel [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n \t\t   (float_truncate:DF\n \t\t    (match_operand:XF 1 \"register_operand\" \"\")))\n \t      (clobber (match_dup 2))])]\n   \"TARGET_80387\"\n-  \"\n+{\n   if (flag_unsafe_math_optimizations)\n     {\n       rtx reg = REG_P (operands[0]) ? operands[0] : gen_reg_rtx (DFmode);\n-      emit_insn (gen_truncxfdf2_noop (reg, operands[1]));\n+      emit_insn (gen_truncxfdf2_i387_noop (reg, operands[1]));\n       if (reg != operands[0])\n \temit_move_insn (operands[0], reg);\n       DONE;\n     }\n   else\n     operands[2] = assign_386_stack_local (DFmode, 0);\n-  \")\n+})\n \n-(define_insn \"truncxfdf2_noop\"\n+(define_insn \"*truncxfdf2_mixed\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f#rY,?r#fY,?Y#rf\")\n+\t(float_truncate:DF\n+\t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n+   (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m,m\"))]\n+  \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \"fstp%z0\\t%y0\";\n+      else\n+\treturn \"fst%z0\\t%y0\";\n+    default:\n+      abort();\n+    }\n+  abort ();\n+}\n+  [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+(define_insn \"truncxfdf2_i387_noop\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float_truncate:DF (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n@@ -3908,11 +3928,11 @@\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"DF\")])\n \n-(define_insn \"*truncxfdf2_1\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f#rY,?r#fY,?Y#rf\")\n+(define_insn \"*truncxfdf2_i387\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f#r,?r#f\")\n \t(float_truncate:DF\n-\t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n-   (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m,m\"))]\n+\t (match_operand:XF 1 \"register_operand\" \"f,f,f\")))\n+   (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m\"))]\n   \"TARGET_80387\"\n {\n   switch (which_alternative)\n@@ -3923,14 +3943,13 @@\n       else\n \treturn \"fst%z0\\t%y0\";\n     default:\n-      abort();\n+      abort ();\n     }\n-  abort ();\n }\n-  [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+  [(set_attr \"type\" \"fmov,multi,multi\")\n    (set_attr \"mode\" \"DF\")])\n \n-(define_insn \"*truncxfdf2_2\"\n+(define_insn \"*truncxfdf2_i387_1\"\n   [(set (match_operand:DF 0 \"memory_operand\" \"=m\")\n \t(float_truncate:DF\n \t  (match_operand:XF 1 \"register_operand\" \"f\")))]\n@@ -3945,24 +3964,23 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_split\n-  [(set (match_operand:DF 0 \"memory_operand\" \"\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"register_operand\" \"\")))\n    (clobber (match_operand:DF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387\"\n-  [(set (match_dup 0) (float_truncate:DF (match_dup 1)))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 2) (float_truncate:DF (match_dup 1)))\n+   (set (match_dup 0) (match_dup 2))]\n   \"\")\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+  [(set (match_operand:DF 0 \"memory_operand\" \"\")\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"register_operand\" \"\")))\n    (clobber (match_operand:DF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387 && reload_completed\"\n-  [(set (match_dup 2) (float_truncate:DF (match_dup 1)))\n-   (set (match_dup 0) (match_dup 2))]\n+  \"TARGET_80387\"\n+  [(set (match_dup 0) (float_truncate:DF (match_dup 1)))]\n   \"\")\n-\n \f\n ;; %%% Break up all these bad boys.\n \n@@ -14746,7 +14764,7 @@\n   emit_insn (gen_fpremxf4 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op1));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op1));\n   DONE;\n })\n \n@@ -14770,7 +14788,7 @@\n   emit_insn (gen_fpremxf4 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op1));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op1));\n   DONE;\n })\n \n@@ -14829,7 +14847,7 @@\n   emit_insn (gen_fprem1xf4 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op1));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op1));\n   DONE;\n })\n \n@@ -14853,7 +14871,7 @@\n   emit_insn (gen_fprem1xf4 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op1));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op1));\n   DONE;\n })\n \n@@ -15679,7 +15697,7 @@\n \n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   ix86_emit_i387_log1p (op0, op1);\n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -15694,7 +15712,7 @@\n \n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   ix86_emit_i387_log1p (op0, op1);\n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16175,7 +16193,7 @@\n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2 (op0, op1));\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16191,7 +16209,7 @@\n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2 (op0, op1));\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16234,7 +16252,7 @@\n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_floor (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16254,7 +16272,7 @@\n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_floor (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16302,7 +16320,7 @@\n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_ceil (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16322,7 +16340,7 @@\n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_ceil (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16370,7 +16388,7 @@\n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_trunc (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16390,7 +16408,7 @@\n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_trunc (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16438,7 +16456,7 @@\n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_mask_pm (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfdf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16458,7 +16476,7 @@\n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_mask_pm (op0, op1, op2, op3));\n \n-  emit_insn (gen_truncxfsf2_noop (operands[0], op0));\n+  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n "}]}