{"sha": "8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxYmQ0ZjVkYzVkOGI0M2U3MGQ3NWY1YzRhZTBjZTcxNWM2ZWJiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-08-27T02:04:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-27T02:04:34Z"}, "message": "class.c: #if 0 complete_type_p.\n\n\t* class.c: #if 0 complete_type_p.\n\t* init.c (build_java_class_ref, build_new_1): Remove unused locals.\n\t* method.c (process_overload_item): Likewise.\n\t* typeck.c (comp_target_types): Likewise.\n\nFrom-SVN: r22018", "tree": {"sha": "2a15534411b665b382926e938ed509a4bfa62c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a15534411b665b382926e938ed509a4bfa62c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/comments", "author": null, "committer": null, "parents": [{"sha": "0ec57017569c318060c3a9b0f6fb75979291c6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec57017569c318060c3a9b0f6fb75979291c6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec57017569c318060c3a9b0f6fb75979291c6c8"}], "stats": {"total": 786, "additions": 395, "deletions": 391}, "files": [{"sha": "446199364aa790ec32edfe71a056767fb5229d3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -1,5 +1,10 @@\n 1998-08-27  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* class.c: #if 0 complete_type_p.\n+\t* init.c (build_java_class_ref, build_new_1): Remove unused locals.\n+\t* method.c (process_overload_item): Likewise.\n+\t* typeck.c (comp_target_types): Likewise.\n+\n \tStop sharing binfos for indirect virtual bases.\n \t* tree.c (propagate_binfo_offsets): Unshare vbases, too.\n \t(layout_basetypes): Likewise."}, {"sha": "e86638eeda983bf27420426fdafa7fc9c3e4ef59", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -81,15 +81,14 @@ tree current_class_ptr, current_class_ref;\n tree current_class_name;\t/* IDENTIFIER_NODE: name of current class */\n tree current_class_type;\t/* _TYPE: the type of the current class */\n tree previous_class_type;\t/* _TYPE: the previous type that was a class */\n-tree previous_class_values;\t\t/* TREE_LIST: copy of the class_shadowed list\n+tree previous_class_values;\t/* TREE_LIST: copy of the class_shadowed list\n \t\t\t\t   when leaving an outermost class scope.  */\n \n struct base_info;\n \n static tree get_vfield_name PROTO((tree));\n static void finish_struct_anon PROTO((tree));\n static tree build_vbase_pointer PROTO((tree, tree));\n-static int complete_type_p PROTO((tree));\n static tree build_vtable_entry PROTO((tree, tree));\n static tree get_vtable_name PROTO((tree));\n static tree get_derived_offset PROTO((tree, tree));\n@@ -176,6 +175,7 @@ build_vbase_pointer (exp, type)\n   return build_component_ref (exp, get_identifier (name), NULL_TREE, 0);\n }\n \n+#if 0\n /* Is the type of the EXPR, the complete type of the object?\n    If we are going to be wrong, we must be conservative, and return 0.  */\n \n@@ -221,6 +221,7 @@ complete_type_p (expr)\n     }\n   return 0;\n }\n+#endif\n \n /* Build multi-level access to EXPR using hierarchy path PATH.\n    CODE is PLUS_EXPR if we are going with the grain,"}, {"sha": "f50483d235bf910c05fe203e7064d191644e936c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -2157,7 +2157,6 @@ build_java_class_ref (type)\n {\n   tree name, class_decl;\n   static tree CL_prefix = NULL_TREE;\n-  static tree alloc_decl = NULL_TREE;\n   if (CL_prefix == NULL_TREE)\n     CL_prefix = get_identifier(\"_CL_\");\n   if (jclass_node == NULL_TREE)\n@@ -2301,7 +2300,7 @@ build_new_1 (exp)\n     }\n   else if (! placement && TYPE_FOR_JAVA (true_type))\n     {\n-      tree name, class_addr, alloc_decl;\n+      tree class_addr, alloc_decl;\n       tree class_decl = build_java_class_ref (true_type);\n       tree class_size = size_in_bytes (true_type);\n       static char alloc_name[] = \"_Jv_AllocObject\";"}, {"sha": "bf8cbaf37fc0c01027bdfd861b8c000484381415", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -1237,8 +1237,6 @@ process_overload_item (parmtype, extra_Gcode)\n     case ARRAY_TYPE:\n #if PARM_CAN_BE_ARRAY_TYPE\n       {\n-        tree length;\n-\n         OB_PUTC ('A');\n         if (TYPE_DOMAIN (parmtype) == NULL_TREE)\n \t  OB_PUTC ('_');"}, {"sha": "5ae0a84275ee0506ef614b85c3b60e231edeb7ae", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 386, "deletions": 384, "changes": 770, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -682,47 +682,47 @@ static const short yyrline[] = { 0,\n   1946,  1949,  1951,  1953,  1955,  1962,  1964,  1965,  1966,  1970,\n   1973,  1977,  1980,  1986,  1988,  1991,  1994,  1997,  2003,  2006,\n   2009,  2011,  2013,  2017,  2023,  2031,  2033,  2037,  2039,  2044,\n-  2047,  2050,  2052,  2054,  2058,  2062,  2067,  2071,  2074,  2079,\n-  2083,  2086,  2089,  2093,  2105,  2107,  2110,  2130,  2132,  2135,\n-  2137,  2142,  2144,  2146,  2148,  2150,  2152,  2156,  2161,  2164,\n-  2166,  2170,  2176,  2181,  2186,  2188,  2192,  2197,  2200,  2207,\n-  2224,  2230,  2232,  2235,  2238,  2240,  2244,  2246,  2250,  2283,\n-  2319,  2322,  2323,  2344,  2367,  2369,  2373,  2384,  2398,  2403,\n-  2410,  2413,  2421,  2432,  2441,  2445,  2460,  2463,  2468,  2470,\n-  2472,  2474,  2476,  2478,  2481,  2483,  2487,  2493,  2495,  2498,\n-  2501,  2503,  2514,  2519,  2522,  2527,  2530,  2531,  2542,  2545,\n-  2546,  2557,  2559,  2562,  2564,  2567,  2574,  2582,  2589,  2595,\n-  2601,  2609,  2613,  2618,  2622,  2625,  2634,  2636,  2640,  2643,\n-  2648,  2652,  2658,  2669,  2672,  2676,  2680,  2688,  2693,  2699,\n-  2702,  2704,  2706,  2712,  2715,  2717,  2719,  2721,  2725,  2728,\n-  2746,  2756,  2758,  2759,  2763,  2768,  2771,  2773,  2775,  2777,\n-  2781,  2787,  2790,  2792,  2794,  2796,  2800,  2803,  2806,  2808,\n-  2810,  2812,  2816,  2819,  2822,  2824,  2826,  2828,  2830,  2837,\n-  2841,  2846,  2850,  2855,  2857,  2861,  2864,  2866,  2870,  2872,\n-  2873,  2876,  2878,  2880,  2886,  2901,  2907,  2913,  2927,  2929,\n-  2933,  2947,  2949,  2951,  2955,  2961,  2974,  2976,  2980,  2993,\n-  2999,  3001,  3002,  3003,  3011,  3016,  3025,  3026,  3030,  3033,\n-  3039,  3045,  3048,  3050,  3052,  3054,  3058,  3062,  3066,  3069,\n-  3074,  3077,  3079,  3081,  3083,  3085,  3087,  3089,  3091,  3095,\n-  3099,  3103,  3107,  3108,  3110,  3112,  3114,  3116,  3118,  3120,\n-  3122,  3124,  3132,  3134,  3135,  3136,  3139,  3145,  3147,  3152,\n-  3154,  3157,  3171,  3174,  3177,  3181,  3184,  3191,  3193,  3196,\n-  3198,  3200,  3203,  3206,  3209,  3212,  3214,  3217,  3221,  3223,\n-  3229,  3231,  3232,  3234,  3239,  3241,  3243,  3245,  3247,  3250,\n-  3251,  3253,  3256,  3257,  3260,  3260,  3263,  3263,  3266,  3266,\n-  3268,  3270,  3272,  3274,  3280,  3286,  3289,  3292,  3298,  3300,\n-  3302,  3306,  3308,  3309,  3310,  3312,  3315,  3322,  3327,  3335,\n-  3339,  3341,  3344,  3346,  3349,  3353,  3355,  3358,  3360,  3363,\n-  3380,  3386,  3394,  3396,  3398,  3402,  3405,  3406,  3414,  3418,\n-  3422,  3425,  3426,  3432,  3435,  3438,  3440,  3444,  3449,  3452,\n-  3462,  3467,  3468,  3475,  3478,  3481,  3483,  3486,  3488,  3498,\n-  3512,  3516,  3519,  3521,  3525,  3529,  3532,  3535,  3537,  3541,\n-  3543,  3550,  3557,  3560,  3563,  3567,  3571,  3577,  3581,  3586,\n-  3588,  3591,  3596,  3602,  3613,  3616,  3618,  3622,  3627,  3629,\n-  3636,  3639,  3641,  3643,  3649,  3654,  3657,  3659,  3661,  3663,\n-  3665,  3667,  3669,  3671,  3673,  3675,  3677,  3679,  3681,  3683,\n-  3685,  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,\n-  3705,  3707,  3709,  3711,  3713,  3715,  3717,  3719,  3722,  3724\n+  2047,  2050,  2052,  2054,  2058,  2062,  2068,  2072,  2075,  2081,\n+  2085,  2088,  2091,  2095,  2107,  2109,  2112,  2132,  2134,  2137,\n+  2139,  2144,  2146,  2148,  2150,  2152,  2154,  2158,  2163,  2166,\n+  2168,  2172,  2178,  2183,  2188,  2190,  2194,  2199,  2202,  2209,\n+  2226,  2232,  2234,  2237,  2240,  2242,  2246,  2248,  2252,  2285,\n+  2321,  2324,  2325,  2346,  2369,  2371,  2375,  2386,  2400,  2405,\n+  2412,  2415,  2423,  2434,  2443,  2447,  2462,  2465,  2470,  2472,\n+  2474,  2476,  2478,  2480,  2483,  2485,  2489,  2495,  2497,  2500,\n+  2503,  2505,  2516,  2521,  2524,  2529,  2532,  2533,  2544,  2547,\n+  2548,  2559,  2561,  2564,  2566,  2569,  2576,  2584,  2591,  2597,\n+  2603,  2611,  2615,  2620,  2624,  2627,  2636,  2638,  2642,  2645,\n+  2650,  2654,  2660,  2671,  2674,  2678,  2682,  2690,  2695,  2701,\n+  2704,  2706,  2708,  2714,  2717,  2719,  2721,  2723,  2727,  2730,\n+  2748,  2758,  2760,  2761,  2765,  2770,  2773,  2775,  2777,  2779,\n+  2783,  2789,  2792,  2794,  2796,  2798,  2802,  2805,  2808,  2810,\n+  2812,  2814,  2818,  2821,  2824,  2826,  2828,  2830,  2832,  2839,\n+  2843,  2848,  2852,  2857,  2859,  2863,  2866,  2868,  2872,  2874,\n+  2875,  2878,  2880,  2882,  2888,  2903,  2909,  2915,  2929,  2931,\n+  2935,  2949,  2951,  2953,  2957,  2963,  2976,  2978,  2982,  2995,\n+  3001,  3003,  3004,  3005,  3013,  3018,  3027,  3028,  3032,  3035,\n+  3041,  3047,  3050,  3052,  3054,  3056,  3060,  3064,  3068,  3071,\n+  3076,  3079,  3081,  3083,  3085,  3087,  3089,  3091,  3093,  3097,\n+  3101,  3105,  3109,  3110,  3112,  3114,  3116,  3118,  3120,  3122,\n+  3124,  3126,  3134,  3136,  3137,  3138,  3141,  3147,  3149,  3154,\n+  3156,  3159,  3173,  3176,  3179,  3183,  3186,  3193,  3195,  3198,\n+  3200,  3202,  3205,  3208,  3211,  3214,  3216,  3219,  3223,  3225,\n+  3231,  3233,  3234,  3236,  3241,  3243,  3245,  3247,  3249,  3252,\n+  3253,  3255,  3258,  3259,  3262,  3262,  3265,  3265,  3268,  3268,\n+  3270,  3272,  3274,  3276,  3282,  3288,  3291,  3294,  3300,  3302,\n+  3304,  3308,  3310,  3311,  3312,  3314,  3317,  3324,  3329,  3337,\n+  3341,  3343,  3346,  3348,  3351,  3355,  3357,  3360,  3362,  3365,\n+  3382,  3388,  3396,  3398,  3400,  3404,  3407,  3408,  3416,  3420,\n+  3424,  3427,  3428,  3434,  3437,  3440,  3442,  3446,  3451,  3454,\n+  3464,  3469,  3470,  3477,  3480,  3483,  3485,  3488,  3490,  3500,\n+  3514,  3518,  3521,  3523,  3527,  3531,  3534,  3537,  3539,  3543,\n+  3545,  3552,  3559,  3562,  3565,  3569,  3573,  3579,  3583,  3588,\n+  3590,  3593,  3598,  3604,  3615,  3618,  3620,  3624,  3629,  3631,\n+  3638,  3641,  3643,  3645,  3651,  3656,  3659,  3661,  3663,  3665,\n+  3667,  3669,  3671,  3673,  3675,  3677,  3679,  3681,  3683,  3685,\n+  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,  3705,\n+  3707,  3709,  3711,  3713,  3715,  3717,  3719,  3721,  3724,  3726\n };\n #endif\n \n@@ -5970,52 +5970,54 @@ case 465:\n     break;}\n case 466:\n #line 2063 \"parse.y\"\n-{ yyval.ftype.t = finish_enum (yyvsp[-3].ttype, yyvsp[-2].ttype);\n+{ TYPE_VALUES (yyvsp[-3].ttype) = yyvsp[-2].ttype;\n+\t\t  yyval.ftype.t = finish_enum (yyvsp[-3].ttype);\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t  resume_momentary ((int) yyvsp[-4].itype);\n \t\t  check_for_missing_semicolon (yyvsp[-3].ttype); ;\n     break;}\n case 467:\n-#line 2068 \"parse.y\"\n-{ yyval.ftype.t = finish_enum (start_enum (yyvsp[-2].ttype), NULL_TREE);\n+#line 2069 \"parse.y\"\n+{ yyval.ftype.t = finish_enum (start_enum (yyvsp[-2].ttype));\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 468:\n-#line 2072 \"parse.y\"\n+#line 2073 \"parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (make_anon_name ()); ;\n     break;}\n case 469:\n-#line 2075 \"parse.y\"\n-{ yyval.ftype.t = finish_enum (yyvsp[-3].ttype, yyvsp[-2].ttype);\n+#line 2076 \"parse.y\"\n+{ TYPE_VALUES (yyvsp[-3].ttype) = yyvsp[-2].ttype;\n+\t\t  yyval.ftype.t = finish_enum (yyvsp[-3].ttype);\n \t\t  resume_momentary ((int) yyvsp[-5].itype);\n \t\t  check_for_missing_semicolon (yyvsp[-3].ttype);\n \t\t  yyval.ftype.new_type_flag = 1; ;\n     break;}\n case 470:\n-#line 2080 \"parse.y\"\n-{ yyval.ftype.t = finish_enum (start_enum (make_anon_name()), NULL_TREE);\n+#line 2082 \"parse.y\"\n+{ yyval.ftype.t = finish_enum (start_enum (make_anon_name()));\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 471:\n-#line 2084 \"parse.y\"\n+#line 2086 \"parse.y\"\n { yyval.ftype.t = xref_tag (enum_type_node, yyvsp[0].ttype, NULL_TREE, 1); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 472:\n-#line 2087 \"parse.y\"\n+#line 2089 \"parse.y\"\n { yyval.ftype.t = xref_tag (enum_type_node, yyvsp[0].ttype, NULL_TREE, 1); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 473:\n-#line 2090 \"parse.y\"\n+#line 2092 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype;\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 474:\n-#line 2095 \"parse.y\"\n+#line 2097 \"parse.y\"\n { \n \t\t  int semi;\n \n@@ -6027,17 +6029,17 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2105 \"parse.y\"\n+#line 2107 \"parse.y\"\n { finish_default_args (); ;\n     break;}\n case 476:\n-#line 2107 \"parse.y\"\n+#line 2109 \"parse.y\"\n { yyval.ftype.t = yyvsp[-3].ttype;\n \t\t  yyval.ftype.new_type_flag = 1; \n \t\t  begin_inline_definitions (); ;\n     break;}\n case 477:\n-#line 2111 \"parse.y\"\n+#line 2113 \"parse.y\"\n {\n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t  if (TYPE_BINFO (yyvsp[0].ttype) == NULL_TREE)\n@@ -6057,93 +6059,93 @@ case 477:\n \t\t;\n     break;}\n case 481:\n-#line 2138 \"parse.y\"\n+#line 2140 \"parse.y\"\n { if (pedantic && !in_system_header)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 483:\n-#line 2145 \"parse.y\"\n+#line 2147 \"parse.y\"\n { error (\"storage class specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 484:\n-#line 2147 \"parse.y\"\n+#line 2149 \"parse.y\"\n { error (\"type specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 485:\n-#line 2149 \"parse.y\"\n+#line 2151 \"parse.y\"\n { error (\"type qualifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 486:\n-#line 2151 \"parse.y\"\n+#line 2153 \"parse.y\"\n { error (\"no body nor ';' separates two class, struct or union declarations\"); ;\n     break;}\n case 487:\n-#line 2153 \"parse.y\"\n+#line 2155 \"parse.y\"\n { yyval.ttype = build_decl_list (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 488:\n-#line 2158 \"parse.y\"\n+#line 2160 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 489:\n-#line 2163 \"parse.y\"\n+#line 2165 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 490:\n-#line 2165 \"parse.y\"\n+#line 2167 \"parse.y\"\n { yyungetc ('{', 1); ;\n     break;}\n case 491:\n-#line 2167 \"parse.y\"\n+#line 2169 \"parse.y\"\n { yyungetc (':', 1); ;\n     break;}\n case 492:\n-#line 2172 \"parse.y\"\n+#line 2174 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 493:\n-#line 2177 \"parse.y\"\n+#line 2179 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-3].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2182 \"parse.y\"\n+#line 2184 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 495:\n-#line 2187 \"parse.y\"\n+#line 2189 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 496:\n-#line 2189 \"parse.y\"\n+#line 2191 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 497:\n-#line 2194 \"parse.y\"\n+#line 2196 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, NULL_TREE, 0); ;\n     break;}\n case 498:\n-#line 2199 \"parse.y\"\n+#line 2201 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, NULL_TREE, 1); ;\n     break;}\n case 499:\n-#line 2202 \"parse.y\"\n+#line 2204 \"parse.y\"\n { \n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t  if (yyvsp[0].ttype)\n                     xref_basetypes (current_aggr, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); \n \t\t;\n     break;}\n case 500:\n-#line 2208 \"parse.y\"\n+#line 2210 \"parse.y\"\n { \n \t\t  yyval.ttype = TREE_TYPE (yyvsp[-1].ttype);\n \t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n@@ -6160,28 +6162,28 @@ case 500:\n \t\t;\n     break;}\n case 501:\n-#line 2226 \"parse.y\"\n+#line 2228 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), NULL_TREE, 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 504:\n-#line 2237 \"parse.y\"\n+#line 2239 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 505:\n-#line 2239 \"parse.y\"\n+#line 2241 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 506:\n-#line 2241 \"parse.y\"\n+#line 2243 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 508:\n-#line 2247 \"parse.y\"\n+#line 2249 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 509:\n-#line 2252 \"parse.y\"\n+#line 2254 \"parse.y\"\n {\n \t\t  tree type;\n \t\t  if (yyvsp[0].ttype == NULL_TREE)\n@@ -6215,7 +6217,7 @@ case 509:\n \t\t;\n     break;}\n case 510:\n-#line 2284 \"parse.y\"\n+#line 2286 \"parse.y\"\n {\n \t\t  tree type;\n \t\t  if (yyvsp[0].ttype == NULL_TREE)\n@@ -6251,11 +6253,11 @@ case 510:\n \t\t;\n     break;}\n case 511:\n-#line 2321 \"parse.y\"\n+#line 2323 \"parse.y\"\n { yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 513:\n-#line 2324 \"parse.y\"\n+#line 2326 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6278,7 +6280,7 @@ case 513:\n \t\t;\n     break;}\n case 514:\n-#line 2345 \"parse.y\"\n+#line 2347 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6301,13 +6303,13 @@ case 514:\n \t\t;\n     break;}\n case 516:\n-#line 2370 \"parse.y\"\n+#line 2372 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 517:\n-#line 2374 \"parse.y\"\n+#line 2376 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6320,7 +6322,7 @@ case 517:\n \t\t;\n     break;}\n case 518:\n-#line 2385 \"parse.y\"\n+#line 2387 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6334,21 +6336,21 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2400 \"parse.y\"\n+#line 2402 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 520:\n-#line 2405 \"parse.y\"\n+#line 2407 \"parse.y\"\n {\n \t\t    yyval.ttype = build_self_reference ();\n \t\t;\n     break;}\n case 521:\n-#line 2412 \"parse.y\"\n+#line 2414 \"parse.y\"\n { if (yyval.ttype) yyval.ttype = build_tree_list (access_public_node, yyval.ttype); ;\n     break;}\n case 522:\n-#line 2414 \"parse.y\"\n+#line 2416 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    yyval.ttype = build_tree_list (access_public_node, yyvsp[0].ttype);\n@@ -6358,7 +6360,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2422 \"parse.y\"\n+#line 2424 \"parse.y\"\n {\n \t\t  tree visspec = yyvsp[-2].ttype;\n \n@@ -6371,19 +6373,19 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2433 \"parse.y\"\n+#line 2435 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access specifier not allowed in signature\");\n \t\t;\n     break;}\n case 525:\n-#line 2443 \"parse.y\"\n+#line 2445 \"parse.y\"\n { if (yyval.ttype == void_type_node) yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 526:\n-#line 2446 \"parse.y\"\n+#line 2448 \"parse.y\"\n { /* In pushdecl, we created a reverse list of names\n \t\t     in this binding level.  Make sure that the chain\n \t\t     of what we're trying to add isn't the item itself\n@@ -6398,95 +6400,95 @@ case 526:\n \t\t;\n     break;}\n case 527:\n-#line 2462 \"parse.y\"\n+#line 2464 \"parse.y\"\n { ;\n     break;}\n case 528:\n-#line 2464 \"parse.y\"\n+#line 2466 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 529:\n-#line 2469 \"parse.y\"\n+#line 2471 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 530:\n-#line 2471 \"parse.y\"\n+#line 2473 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 531:\n-#line 2473 \"parse.y\"\n+#line 2475 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 532:\n-#line 2475 \"parse.y\"\n+#line 2477 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 533:\n-#line 2477 \"parse.y\"\n+#line 2479 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 534:\n-#line 2479 \"parse.y\"\n+#line 2481 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 535:\n-#line 2482 \"parse.y\"\n+#line 2484 \"parse.y\"\n { yyval.ttype = finish_member_template_decl (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 536:\n-#line 2484 \"parse.y\"\n+#line 2486 \"parse.y\"\n { yyval.ttype = finish_member_class_template (yyvsp[-2].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 537:\n-#line 2492 \"parse.y\"\n+#line 2494 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 538:\n-#line 2494 \"parse.y\"\n+#line 2496 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 539:\n-#line 2496 \"parse.y\"\n+#line 2498 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 540:\n-#line 2499 \"parse.y\"\n+#line 2501 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 541:\n-#line 2502 \"parse.y\"\n+#line 2504 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 542:\n-#line 2504 \"parse.y\"\n+#line 2506 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 543:\n-#line 2515 \"parse.y\"\n+#line 2517 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 544:\n-#line 2520 \"parse.y\"\n+#line 2522 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 545:\n-#line 2523 \"parse.y\"\n+#line 2525 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 546:\n-#line 2529 \"parse.y\"\n+#line 2531 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 548:\n-#line 2532 \"parse.y\"\n+#line 2534 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6497,11 +6499,11 @@ case 548:\n \t\t;\n     break;}\n case 549:\n-#line 2544 \"parse.y\"\n+#line 2546 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 551:\n-#line 2547 \"parse.y\"\n+#line 2549 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6512,102 +6514,102 @@ case 551:\n \t\t;\n     break;}\n case 556:\n-#line 2569 \"parse.y\"\n+#line 2571 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 557:\n-#line 2575 \"parse.y\"\n+#line 2577 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 558:\n-#line 2584 \"parse.y\"\n+#line 2586 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 559:\n-#line 2590 \"parse.y\"\n+#line 2592 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 560:\n-#line 2596 \"parse.y\"\n+#line 2598 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 561:\n-#line 2602 \"parse.y\"\n+#line 2604 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 562:\n-#line 2611 \"parse.y\"\n+#line 2613 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 563:\n-#line 2614 \"parse.y\"\n+#line 2616 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 564:\n-#line 2620 \"parse.y\"\n+#line 2622 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 565:\n-#line 2623 \"parse.y\"\n+#line 2625 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 566:\n-#line 2626 \"parse.y\"\n+#line 2628 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 568:\n-#line 2637 \"parse.y\"\n+#line 2639 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 569:\n-#line 2642 \"parse.y\"\n+#line 2644 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE); ;\n     break;}\n case 570:\n-#line 2644 \"parse.y\"\n+#line 2646 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 571:\n-#line 2650 \"parse.y\"\n+#line 2652 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 572:\n-#line 2653 \"parse.y\"\n+#line 2655 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 573:\n-#line 2660 \"parse.y\"\n+#line 2662 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6617,71 +6619,71 @@ case 573:\n \t\t;\n     break;}\n case 574:\n-#line 2671 \"parse.y\"\n+#line 2673 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 575:\n-#line 2673 \"parse.y\"\n+#line 2675 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 576:\n-#line 2678 \"parse.y\"\n+#line 2680 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 577:\n-#line 2681 \"parse.y\"\n+#line 2683 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 578:\n-#line 2690 \"parse.y\"\n+#line 2692 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 579:\n-#line 2695 \"parse.y\"\n+#line 2697 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 580:\n-#line 2701 \"parse.y\"\n+#line 2703 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 581:\n-#line 2703 \"parse.y\"\n+#line 2705 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 582:\n-#line 2705 \"parse.y\"\n+#line 2707 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 583:\n-#line 2707 \"parse.y\"\n+#line 2709 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 584:\n-#line 2714 \"parse.y\"\n+#line 2716 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 585:\n-#line 2716 \"parse.y\"\n+#line 2718 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 586:\n-#line 2718 \"parse.y\"\n+#line 2720 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 587:\n-#line 2720 \"parse.y\"\n+#line 2722 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 588:\n-#line 2722 \"parse.y\"\n+#line 2724 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 590:\n-#line 2730 \"parse.y\"\n+#line 2732 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6700,7 +6702,7 @@ case 590:\n \t\t;\n     break;}\n case 591:\n-#line 2747 \"parse.y\"\n+#line 2749 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6710,152 +6712,152 @@ case 591:\n \t\t;\n     break;}\n case 594:\n-#line 2760 \"parse.y\"\n+#line 2762 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 595:\n-#line 2765 \"parse.y\"\n+#line 2767 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 596:\n-#line 2770 \"parse.y\"\n+#line 2772 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 597:\n-#line 2772 \"parse.y\"\n+#line 2774 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 598:\n-#line 2774 \"parse.y\"\n+#line 2776 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 599:\n-#line 2776 \"parse.y\"\n+#line 2778 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 600:\n-#line 2778 \"parse.y\"\n+#line 2780 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 602:\n-#line 2789 \"parse.y\"\n+#line 2791 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 603:\n-#line 2791 \"parse.y\"\n+#line 2793 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 604:\n-#line 2793 \"parse.y\"\n+#line 2795 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 605:\n-#line 2795 \"parse.y\"\n+#line 2797 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 606:\n-#line 2797 \"parse.y\"\n+#line 2799 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 608:\n-#line 2805 \"parse.y\"\n+#line 2807 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 609:\n-#line 2807 \"parse.y\"\n+#line 2809 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 610:\n-#line 2809 \"parse.y\"\n+#line 2811 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2811 \"parse.y\"\n+#line 2813 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2813 \"parse.y\"\n+#line 2815 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 614:\n-#line 2821 \"parse.y\"\n+#line 2823 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 615:\n-#line 2823 \"parse.y\"\n+#line 2825 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 616:\n-#line 2825 \"parse.y\"\n+#line 2827 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 617:\n-#line 2827 \"parse.y\"\n+#line 2829 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 618:\n-#line 2829 \"parse.y\"\n+#line 2831 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2831 \"parse.y\"\n+#line 2833 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 620:\n-#line 2839 \"parse.y\"\n+#line 2841 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 621:\n-#line 2842 \"parse.y\"\n+#line 2844 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 622:\n-#line 2848 \"parse.y\"\n+#line 2850 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 623:\n-#line 2851 \"parse.y\"\n+#line 2853 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 625:\n-#line 2858 \"parse.y\"\n+#line 2860 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 626:\n-#line 2863 \"parse.y\"\n+#line 2865 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 627:\n-#line 2865 \"parse.y\"\n+#line 2867 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 628:\n-#line 2867 \"parse.y\"\n+#line 2869 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 2879 \"parse.y\"\n+#line 2881 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 634:\n-#line 2881 \"parse.y\"\n+#line 2883 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2888 \"parse.y\"\n+#line 2890 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6871,31 +6873,31 @@ case 635:\n \t\t;\n     break;}\n case 636:\n-#line 2902 \"parse.y\"\n+#line 2904 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 637:\n-#line 2908 \"parse.y\"\n+#line 2910 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 638:\n-#line 2914 \"parse.y\"\n+#line 2916 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 640:\n-#line 2930 \"parse.y\"\n+#line 2932 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 641:\n-#line 2935 \"parse.y\"\n+#line 2937 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6910,26 +6912,26 @@ case 641:\n \t\t;\n     break;}\n case 642:\n-#line 2948 \"parse.y\"\n+#line 2950 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 643:\n-#line 2950 \"parse.y\"\n+#line 2952 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 644:\n-#line 2952 \"parse.y\"\n+#line 2954 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 645:\n-#line 2957 \"parse.y\"\n+#line 2959 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 646:\n-#line 2962 \"parse.y\"\n+#line 2964 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6944,15 +6946,15 @@ case 646:\n \t\t;\n     break;}\n case 647:\n-#line 2975 \"parse.y\"\n+#line 2977 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 648:\n-#line 2977 \"parse.y\"\n+#line 2979 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 649:\n-#line 2982 \"parse.y\"\n+#line 2984 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -6966,31 +6968,31 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 2994 \"parse.y\"\n+#line 2996 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 651:\n-#line 3000 \"parse.y\"\n+#line 3002 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 654:\n-#line 3004 \"parse.y\"\n+#line 3006 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 655:\n-#line 3013 \"parse.y\"\n+#line 3015 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 3018 \"parse.y\"\n+#line 3020 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7000,148 +7002,148 @@ case 656:\n \t\t;\n     break;}\n case 658:\n-#line 3027 \"parse.y\"\n+#line 3029 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 659:\n-#line 3032 \"parse.y\"\n+#line 3034 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 660:\n-#line 3034 \"parse.y\"\n+#line 3036 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 661:\n-#line 3041 \"parse.y\"\n+#line 3043 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 662:\n-#line 3047 \"parse.y\"\n+#line 3049 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 663:\n-#line 3049 \"parse.y\"\n+#line 3051 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 664:\n-#line 3051 \"parse.y\"\n+#line 3053 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 665:\n-#line 3053 \"parse.y\"\n+#line 3055 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 666:\n-#line 3055 \"parse.y\"\n+#line 3057 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 667:\n-#line 3059 \"parse.y\"\n+#line 3061 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 669:\n-#line 3068 \"parse.y\"\n+#line 3070 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 670:\n-#line 3070 \"parse.y\"\n+#line 3072 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 671:\n-#line 3076 \"parse.y\"\n+#line 3078 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 672:\n-#line 3078 \"parse.y\"\n+#line 3080 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3080 \"parse.y\"\n+#line 3082 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3082 \"parse.y\"\n+#line 3084 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 675:\n-#line 3084 \"parse.y\"\n+#line 3086 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 676:\n-#line 3086 \"parse.y\"\n+#line 3088 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 677:\n-#line 3088 \"parse.y\"\n+#line 3090 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 678:\n-#line 3090 \"parse.y\"\n+#line 3092 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 679:\n-#line 3092 \"parse.y\"\n+#line 3094 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 680:\n-#line 3096 \"parse.y\"\n+#line 3098 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 682:\n-#line 3105 \"parse.y\"\n+#line 3107 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 684:\n-#line 3109 \"parse.y\"\n+#line 3111 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 685:\n-#line 3111 \"parse.y\"\n+#line 3113 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 686:\n-#line 3113 \"parse.y\"\n+#line 3115 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 687:\n-#line 3115 \"parse.y\"\n+#line 3117 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 688:\n-#line 3117 \"parse.y\"\n+#line 3119 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 689:\n-#line 3119 \"parse.y\"\n+#line 3121 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 690:\n-#line 3121 \"parse.y\"\n+#line 3123 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 691:\n-#line 3123 \"parse.y\"\n+#line 3125 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 692:\n-#line 3125 \"parse.y\"\n+#line 3127 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 699:\n-#line 3148 \"parse.y\"\n+#line 3150 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 702:\n-#line 3159 \"parse.y\"\n+#line 3161 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7152,225 +7154,225 @@ case 702:\n \t\t;\n     break;}\n case 703:\n-#line 3173 \"parse.y\"\n+#line 3175 \"parse.y\"\n {;\n     break;}\n case 705:\n-#line 3179 \"parse.y\"\n+#line 3181 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 706:\n-#line 3181 \"parse.y\"\n+#line 3183 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 707:\n-#line 3186 \"parse.y\"\n+#line 3188 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 708:\n-#line 3191 \"parse.y\"\n+#line 3193 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 709:\n-#line 3193 \"parse.y\"\n+#line 3195 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 711:\n-#line 3198 \"parse.y\"\n+#line 3200 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 712:\n-#line 3200 \"parse.y\"\n+#line 3202 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 713:\n-#line 3205 \"parse.y\"\n+#line 3207 \"parse.y\"\n {;\n     break;}\n case 715:\n-#line 3211 \"parse.y\"\n+#line 3213 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 716:\n-#line 3213 \"parse.y\"\n+#line 3215 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 717:\n-#line 3215 \"parse.y\"\n+#line 3217 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 718:\n-#line 3217 \"parse.y\"\n+#line 3219 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 719:\n-#line 3222 \"parse.y\"\n+#line 3224 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 720:\n-#line 3224 \"parse.y\"\n+#line 3226 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 721:\n-#line 3229 \"parse.y\"\n+#line 3231 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 722:\n-#line 3231 \"parse.y\"\n+#line 3233 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 723:\n-#line 3233 \"parse.y\"\n+#line 3235 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 724:\n-#line 3235 \"parse.y\"\n+#line 3237 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 725:\n-#line 3240 \"parse.y\"\n+#line 3242 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 726:\n-#line 3242 \"parse.y\"\n+#line 3244 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 727:\n-#line 3244 \"parse.y\"\n+#line 3246 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 728:\n-#line 3246 \"parse.y\"\n+#line 3248 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 729:\n-#line 3248 \"parse.y\"\n+#line 3250 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 730:\n-#line 3250 \"parse.y\"\n+#line 3252 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 731:\n-#line 3252 \"parse.y\"\n+#line 3254 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 732:\n-#line 3254 \"parse.y\"\n+#line 3256 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 733:\n-#line 3256 \"parse.y\"\n+#line 3258 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 734:\n-#line 3258 \"parse.y\"\n+#line 3260 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 736:\n-#line 3261 \"parse.y\"\n+#line 3263 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 738:\n-#line 3264 \"parse.y\"\n+#line 3266 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 740:\n-#line 3267 \"parse.y\"\n+#line 3269 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 741:\n-#line 3269 \"parse.y\"\n+#line 3271 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 742:\n-#line 3271 \"parse.y\"\n+#line 3273 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 743:\n-#line 3273 \"parse.y\"\n+#line 3275 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 744:\n-#line 3275 \"parse.y\"\n+#line 3277 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 745:\n-#line 3281 \"parse.y\"\n+#line 3283 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 746:\n-#line 3287 \"parse.y\"\n+#line 3289 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 747:\n-#line 3291 \"parse.y\"\n+#line 3293 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 748:\n-#line 3293 \"parse.y\"\n+#line 3295 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 749:\n-#line 3299 \"parse.y\"\n+#line 3301 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 750:\n-#line 3301 \"parse.y\"\n+#line 3303 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 751:\n-#line 3303 \"parse.y\"\n+#line 3305 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 752:\n-#line 3307 \"parse.y\"\n+#line 3309 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 755:\n-#line 3311 \"parse.y\"\n+#line 3313 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 757:\n-#line 3317 \"parse.y\"\n+#line 3319 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 758:\n-#line 3323 \"parse.y\"\n+#line 3325 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 759:\n-#line 3327 \"parse.y\"\n+#line 3329 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7379,41 +7381,41 @@ case 759:\n \t\t;\n     break;}\n case 760:\n-#line 3337 \"parse.y\"\n+#line 3339 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 761:\n-#line 3339 \"parse.y\"\n+#line 3341 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 762:\n-#line 3341 \"parse.y\"\n+#line 3343 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 765:\n-#line 3351 \"parse.y\"\n+#line 3353 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 766:\n-#line 3353 \"parse.y\"\n+#line 3355 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 767:\n-#line 3355 \"parse.y\"\n+#line 3357 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 770:\n-#line 3365 \"parse.y\"\n+#line 3367 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 771:\n-#line 3381 \"parse.y\"\n+#line 3383 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 772:\n-#line 3388 \"parse.y\"\n+#line 3390 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7422,98 +7424,98 @@ case 772:\n \t\t;\n     break;}\n case 773:\n-#line 3395 \"parse.y\"\n+#line 3397 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 774:\n-#line 3397 \"parse.y\"\n+#line 3399 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 775:\n-#line 3399 \"parse.y\"\n+#line 3401 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 776:\n-#line 3404 \"parse.y\"\n+#line 3406 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 778:\n-#line 3407 \"parse.y\"\n+#line 3409 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 779:\n-#line 3416 \"parse.y\"\n+#line 3418 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 780:\n-#line 3419 \"parse.y\"\n+#line 3421 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 781:\n-#line 3424 \"parse.y\"\n+#line 3426 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 783:\n-#line 3427 \"parse.y\"\n+#line 3429 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 784:\n-#line 3434 \"parse.y\"\n+#line 3436 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 787:\n-#line 3441 \"parse.y\"\n+#line 3443 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 788:\n-#line 3446 \"parse.y\"\n+#line 3448 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 789:\n-#line 3451 \"parse.y\"\n+#line 3453 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 790:\n-#line 3453 \"parse.y\"\n+#line 3455 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 791:\n-#line 3464 \"parse.y\"\n+#line 3466 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 793:\n-#line 3469 \"parse.y\"\n+#line 3471 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 794:\n-#line 3477 \"parse.y\"\n+#line 3479 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 795:\n-#line 3479 \"parse.y\"\n+#line 3481 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 796:\n-#line 3482 \"parse.y\"\n+#line 3484 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 797:\n-#line 3484 \"parse.y\"\n+#line 3486 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 798:\n-#line 3487 \"parse.y\"\n+#line 3489 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 799:\n-#line 3489 \"parse.y\"\n+#line 3491 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7525,7 +7527,7 @@ case 799:\n \t\t;\n     break;}\n case 800:\n-#line 3499 \"parse.y\"\n+#line 3501 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7538,98 +7540,98 @@ case 800:\n \t\t;\n     break;}\n case 801:\n-#line 3514 \"parse.y\"\n+#line 3516 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 802:\n-#line 3516 \"parse.y\"\n+#line 3518 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 805:\n-#line 3527 \"parse.y\"\n+#line 3529 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 806:\n-#line 3530 \"parse.y\"\n+#line 3532 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 807:\n-#line 3533 \"parse.y\"\n+#line 3535 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 808:\n-#line 3536 \"parse.y\"\n+#line 3538 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 809:\n-#line 3538 \"parse.y\"\n+#line 3540 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 811:\n-#line 3544 \"parse.y\"\n+#line 3546 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 812:\n-#line 3554 \"parse.y\"\n+#line 3556 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 813:\n-#line 3558 \"parse.y\"\n+#line 3560 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 814:\n-#line 3561 \"parse.y\"\n+#line 3563 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 815:\n-#line 3564 \"parse.y\"\n+#line 3566 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 816:\n-#line 3568 \"parse.y\"\n+#line 3570 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 817:\n-#line 3572 \"parse.y\"\n+#line 3574 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 818:\n-#line 3579 \"parse.y\"\n+#line 3581 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 819:\n-#line 3582 \"parse.y\"\n+#line 3584 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 822:\n-#line 3593 \"parse.y\"\n+#line 3595 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 823:\n-#line 3598 \"parse.y\"\n+#line 3600 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 824:\n-#line 3603 \"parse.y\"\n+#line 3605 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7640,188 +7642,188 @@ case 824:\n \t\t;\n     break;}\n case 825:\n-#line 3615 \"parse.y\"\n+#line 3617 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 826:\n-#line 3617 \"parse.y\"\n+#line 3619 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 827:\n-#line 3619 \"parse.y\"\n+#line 3621 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 828:\n-#line 3624 \"parse.y\"\n+#line 3626 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 830:\n-#line 3630 \"parse.y\"\n+#line 3632 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 831:\n-#line 3638 \"parse.y\"\n+#line 3640 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 832:\n-#line 3640 \"parse.y\"\n+#line 3642 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 833:\n-#line 3642 \"parse.y\"\n+#line 3644 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 834:\n-#line 3644 \"parse.y\"\n+#line 3646 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 835:\n-#line 3651 \"parse.y\"\n+#line 3653 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 836:\n-#line 3656 \"parse.y\"\n+#line 3658 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 837:\n-#line 3658 \"parse.y\"\n+#line 3660 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 838:\n-#line 3660 \"parse.y\"\n+#line 3662 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 839:\n-#line 3662 \"parse.y\"\n+#line 3664 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 840:\n-#line 3664 \"parse.y\"\n+#line 3666 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 841:\n-#line 3666 \"parse.y\"\n+#line 3668 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 842:\n-#line 3668 \"parse.y\"\n+#line 3670 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 843:\n-#line 3670 \"parse.y\"\n+#line 3672 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 844:\n-#line 3672 \"parse.y\"\n+#line 3674 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 845:\n-#line 3674 \"parse.y\"\n+#line 3676 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 846:\n-#line 3676 \"parse.y\"\n+#line 3678 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 847:\n-#line 3678 \"parse.y\"\n+#line 3680 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 848:\n-#line 3680 \"parse.y\"\n+#line 3682 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 849:\n-#line 3682 \"parse.y\"\n+#line 3684 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 850:\n-#line 3684 \"parse.y\"\n+#line 3686 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 851:\n-#line 3686 \"parse.y\"\n+#line 3688 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 852:\n-#line 3688 \"parse.y\"\n+#line 3690 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 853:\n-#line 3690 \"parse.y\"\n+#line 3692 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 854:\n-#line 3692 \"parse.y\"\n+#line 3694 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 855:\n-#line 3694 \"parse.y\"\n+#line 3696 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 856:\n-#line 3696 \"parse.y\"\n+#line 3698 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 857:\n-#line 3698 \"parse.y\"\n+#line 3700 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 858:\n-#line 3700 \"parse.y\"\n+#line 3702 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 859:\n-#line 3702 \"parse.y\"\n+#line 3704 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 860:\n-#line 3704 \"parse.y\"\n+#line 3706 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3706 \"parse.y\"\n+#line 3708 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 862:\n-#line 3708 \"parse.y\"\n+#line 3710 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 863:\n-#line 3710 \"parse.y\"\n+#line 3712 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 864:\n-#line 3712 \"parse.y\"\n+#line 3714 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 865:\n-#line 3714 \"parse.y\"\n+#line 3716 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 866:\n-#line 3716 \"parse.y\"\n+#line 3718 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 867:\n-#line 3718 \"parse.y\"\n+#line 3720 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 868:\n-#line 3720 \"parse.y\"\n+#line 3722 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 869:\n-#line 3723 \"parse.y\"\n+#line 3725 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 870:\n-#line 3725 \"parse.y\"\n+#line 3727 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8022,7 +8024,7 @@ case 870:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3728 \"parse.y\"\n+#line 3730 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "fff5b383e9e680097340e9e814a30be33994e6c0", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=8c1bd4f5dc5d8b43e70d75f5c4ae0ce715c6ebb8", "patch": "@@ -1067,7 +1067,6 @@ comp_target_types (ttl, ttr, nptrs)\n   else if (TREE_CODE (ttr) == OFFSET_TYPE)\n     {\n       int base;\n-      tree tmp;\n \n       /* Contravariance: we can assign a pointer to base member to a pointer\n \t to derived member.  Note difference from simple pointer case, where"}]}