{"sha": "2aeaf0fb26f98ca166fb55afd952da3dc739582b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlYWYwZmIyNmY5OGNhMTY2ZmI1NWFmZDk1MmRhM2RjNzM5NTgyYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-02T21:07:52Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-02T21:07:52Z"}, "message": "libgo: Try to fix use of <ustat.h> for Solaris and older GNU/Linux.\n\nFrom-SVN: r184828", "tree": {"sha": "4022d4e8fde18e8c78b0a4a1568f900976d4341a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4022d4e8fde18e8c78b0a4a1568f900976d4341a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aeaf0fb26f98ca166fb55afd952da3dc739582b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aeaf0fb26f98ca166fb55afd952da3dc739582b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aeaf0fb26f98ca166fb55afd952da3dc739582b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aeaf0fb26f98ca166fb55afd952da3dc739582b/comments", "author": null, "committer": null, "parents": [{"sha": "b5ea803681b2f3bafc6be6f2f805c52dab7ceb2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ea803681b2f3bafc6be6f2f805c52dab7ceb2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ea803681b2f3bafc6be6f2f805c52dab7ceb2b"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "ccb79e187e417948e4a3cf1481e7aa1326abded5", "filename": "libgo/config.h.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=2aeaf0fb26f98ca166fb55afd952da3dc739582b", "patch": "@@ -196,7 +196,7 @@\n /* Define to 1 if you have the `unshare' function. */\n #undef HAVE_UNSHARE\n \n-/* Define to 1 if you have the <ustat.h> header file. */\n+/* Define to 1 if you have the <ustat.h> header file and it works. */\n #undef HAVE_USTAT_H\n \n /* Define to 1 if you have the <utime.h> header file. */"}, {"sha": "128629fdb1e15e0289e640b5fab5d842fdae8505", "filename": "libgo/configure", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=2aeaf0fb26f98ca166fb55afd952da3dc739582b", "patch": "@@ -14508,7 +14508,7 @@ no)\n   ;;\n esac\n \n-for ac_header in sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h ustat.h utime.h linux/reboot.h\n+for ac_header in sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/reboot.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -14542,6 +14542,36 @@ fi\n done\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether <ustat.h> can be used\" >&5\n+$as_echo_n \"checking whether <ustat.h> can be used... \" >&6; }\n+if test \"${libgo_cv_c_ustat_h+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <sys/types.h>\n+#ifdef HAVE_LINUX_FILTER_H\n+#include <linux/filter.h>\n+#endif\n+#include <ustat.h>\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libgo_cv_c_ustat_h=yes\n+else\n+  libgo_cv_c_ustat_h=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgo_cv_c_ustat_h\" >&5\n+$as_echo \"$libgo_cv_c_ustat_h\" >&6; }\n+if test $libgo_cv_c_ustat_h = yes; then\n+\n+$as_echo \"#define HAVE_USTAT_H 1\" >>confdefs.h\n+\n+fi\n+\n  if test \"$ac_cv_header_sys_mman_h\" = yes; then\n   HAVE_SYS_MMAN_H_TRUE=\n   HAVE_SYS_MMAN_H_FALSE='#'"}, {"sha": "8100c1c701cac4ca620f38308a8fd17201c4f0f8", "filename": "libgo/configure.ac", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=2aeaf0fb26f98ca166fb55afd952da3dc739582b", "patch": "@@ -453,14 +453,29 @@ no)\n   ;;\n esac\n \n-AC_CHECK_HEADERS(sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h ustat.h utime.h linux/reboot.h)\n+AC_CHECK_HEADERS(sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/reboot.h)\n \n AC_CHECK_HEADERS([linux/filter.h linux/netlink.h linux/rtnetlink.h], [], [],\n [#ifdef HAVE_SYS_SOCKET_H\n #include <sys/socket.h>\n #endif\n ])\n \n+AC_CACHE_CHECK([whether <ustat.h> can be used],\n+[libgo_cv_c_ustat_h],\n+AC_COMPILE_IFELSE(\n+[AC_LANG_SOURCE([\n+#include <sys/types.h>\n+#ifdef HAVE_LINUX_FILTER_H\n+#include <linux/filter.h>\n+#endif\n+#include <ustat.h>\n+])], [libgo_cv_c_ustat_h=yes], [libgo_cv_c_ustat_h=no]))\n+if test $libgo_cv_c_ustat_h = yes; then\n+  AC_DEFINE(HAVE_USTAT_H, 1,\n+    [Define to 1 if you have the <ustat.h> header file and it works.])\n+fi\n+\n AM_CONDITIONAL(HAVE_SYS_MMAN_H, test \"$ac_cv_header_sys_mman_h\" = yes)\n \n AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv)"}, {"sha": "e5f3066e26a31c795dc08c200644d09b3156d69b", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aeaf0fb26f98ca166fb55afd952da3dc739582b/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=2aeaf0fb26f98ca166fb55afd952da3dc739582b", "patch": "@@ -895,6 +895,11 @@ grep '^type _ustat ' gen-sysinfo.go | \\\n       -e 's/f_fname/Fname/' \\\n       -e 's/f_fpack/Fpack/' \\\n     >> ${OUT}\n+# Force it to be defined, as on some older GNU/Linux systems the\n+# header file fails when using with <linux/filter.h>.\n+if ! grep 'type _ustat ' gen-sysinfo.go >/dev/null 2>&1; then\n+  echo 'type Ustat_t struct { Tfree int32; Tinoe uint64; Fname [5+1]int8; Fpack [5+1]int8; }' >> ${OUT}\n+fi\n \n # The utimbuf struct.\n grep '^type _utimbuf ' gen-sysinfo.go | \\"}]}