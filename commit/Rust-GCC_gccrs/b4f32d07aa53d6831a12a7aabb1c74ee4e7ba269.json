{"sha": "b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRmMzJkMDdhYTUzZDY4MzFhMTJhN2FhYmIxYzc0ZWU0ZTdiYTI2OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-11-15T12:27:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-11-15T12:27:33Z"}, "message": "invoke.texi (large-unit-insns): Document.\n\n\n\t* invoke.texi (large-unit-insns): Document.\n\t* ipa-inline.c (cgraph_decide_inlining): Use large-unit-insns param.\n\t* params.def (large-unit-insns): New param.\n\t* gcc.dg/winline-5.c: Add large-unit-insns limit.\n\nFrom-SVN: r106948", "tree": {"sha": "5444bc2a19f6cd64c6e05a03f3b4f3348997cbdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5444bc2a19f6cd64c6e05a03f3b4f3348997cbdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/comments", "author": null, "committer": null, "parents": [{"sha": "4a60d778fa9157187c3504021935389e2f22fed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a60d778fa9157187c3504021935389e2f22fed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a60d778fa9157187c3504021935389e2f22fed8"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "6515936795c8e9a27ee7e7b8388d8608e97e4745", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -1,3 +1,9 @@\n+2005-11-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* invoke.texi (large-unit-insns): Document.\n+\t* ipa-inline.c (cgraph_decide_inlining): Use large-unit-insns param.\n+\t* params.def (large-unit-insns): New param.\n+\n 2005-11-15  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/24869"}, {"sha": "1001c0e1aa61e9a59151838655f77e7a09e1f5f6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -5822,6 +5822,17 @@ This parameter is ignored when @option{-funit-at-a-time} is not used.\n The default value is 100 which limits large function growth to 2.0 times\n the original size.\n \n+@item large-unit-insns\n+The limit specifying large translation unit.  Growth caused by inlining of\n+units larger than this limit is limited by @option{--param inline-unit-growth}.\n+For small units this might be too tight (consider unit consisting of function A\n+that is inline and B that just calls A three time.  If B is small relative to\n+A, the growth of unit is 300\\% and yet such inlining is very sane.  For very\n+large units consisting of small inlininable functions however the overall unit\n+growth limit is needed to avoid exponential explosion of code size.  Thus for\n+smaller units, the size is increased to @option{--param large-unit-insns}\n+before aplying @option{--param inline-unit-growth}.  The default is 10000\n+\n @item inline-unit-growth\n Specifies maximal overall growth of the compilation unit caused by inlining.\n This parameter is ignored when @option{-funit-at-a-time} is not used."}, {"sha": "c16e9475a02657aab843fe1dfaffc5cd2b9c5db4", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -877,7 +877,11 @@ cgraph_decide_inlining (void)\n   overall_insns = initial_insns;\n   gcc_assert (!max_count || (profile_info && flag_branch_probabilities));\n \n-  max_insns = ((HOST_WIDEST_INT) overall_insns\n+  max_insns = overall_insns;\n+  if (max_insns < PARAM_VALUE (PARAM_LARGE_UNIT_INSNS))\n+    max_insns = PARAM_VALUE (PARAM_LARGE_UNIT_INSNS);\n+\n+  max_insns = ((HOST_WIDEST_INT) max_insns\n \t       * (100 + PARAM_VALUE (PARAM_INLINE_UNIT_GROWTH)) / 100);\n \n   nnodes = cgraph_postorder (order);"}, {"sha": "f585c39dd9821d69175a1e9096e2dfa287d01d6a", "filename": "gcc/params.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -179,6 +179,10 @@ DEFPARAM(PARAM_LARGE_FUNCTION_GROWTH,\n \t \"large-function-growth\",\n \t \"Maximal growth due to inlining of large function (in percent)\",\n \t 100, 0, 0)\n+DEFPARAM(PARAM_LARGE_UNIT_INSNS,\n+\t \"large-unit-insns\",\n+\t \"The size of translation unit to be considered large\",\n+\t 10000, 0, 0)\n DEFPARAM(PARAM_INLINE_UNIT_GROWTH,\n \t \"inline-unit-growth\",\n \t \"how much can given compilation unit grow because of the inlining (in percent)\","}, {"sha": "c9ae49db6c91a8e96e74db522f6553900723247b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -1,3 +1,7 @@\n+2005-11-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/winline-5.c: Add large-unit-insns limit.\n+\n 2005-11-14  David Edelsohn  <edelsohn@gnu.org>\n \n \t* g++.dg/eh/simd-2.C: XFAIL on AIX and SPE."}, {"sha": "57fa3937e0ac8387ab26547bfeedc8dd4764450d", "filename": "gcc/testsuite/gcc.dg/winline-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c?ref=b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param inline-unit-growth=0\" } */\n+/* { dg-options \"-Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0\" } */\n \n void big (void);\n inline int q(void)\t\t "}]}