{"sha": "88f47280999b57fce68aeee692d1820f12fc8264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmNDcyODA5OTliNTdmY2U2OGFlZWU2OTJkMTgyMGYxMmZjODI2NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:05:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:05:56Z"}, "message": "[multiple changes]\n\n2011-08-04  Pascal Obry  <obry@adacore.com>\n\n\t* urealp.adb: Minor reformatting.\n\n2011-08-04  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch7.adb (build_finalizer.process_declarations.processing_actions):\n\tHandle the case when Cleanup_Protected_Object returns Empty.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* frontend.adb (Frontend): only qualify names in non-ALFA mode\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Try_Class_Wide_Operation): if the context is a procedure\n\tcall, ignore functions.\n\nFrom-SVN: r177377", "tree": {"sha": "819e74e1eae21599af6257ee886a18c2d95fca63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819e74e1eae21599af6257ee886a18c2d95fca63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f47280999b57fce68aeee692d1820f12fc8264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f47280999b57fce68aeee692d1820f12fc8264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f47280999b57fce68aeee692d1820f12fc8264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f47280999b57fce68aeee692d1820f12fc8264/comments", "author": null, "committer": null, "parents": [{"sha": "05c53a690494d5188cef77a8aef9adb54683bb9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c53a690494d5188cef77a8aef9adb54683bb9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c53a690494d5188cef77a8aef9adb54683bb9a"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "2895bd877c131aadfa9e4c544f4754f72f8ad35e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88f47280999b57fce68aeee692d1820f12fc8264", "patch": "@@ -1,3 +1,21 @@\n+2011-08-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* urealp.adb: Minor reformatting.\n+\n+2011-08-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch7.adb (build_finalizer.process_declarations.processing_actions):\n+\tHandle the case when Cleanup_Protected_Object returns Empty.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* frontend.adb (Frontend): only qualify names in non-ALFA mode\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Class_Wide_Operation): if the context is a procedure\n+\tcall, ignore functions.\n+\n 2011-08-04  Geert Bosch  <bosch@adacore.com>\n \n \t* urealp.adb (Equivalent_Decimal_Exponent): Avoid the use of floating"}, {"sha": "9a648e5fb5dca992fb1090750d6f69abcd858c79", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=88f47280999b57fce68aeee692d1820f12fc8264", "patch": "@@ -2419,8 +2419,10 @@ package body Exp_Ch7 is\n             Fin_Stmts := No_List;\n \n             if Is_Simple_Protected_Type (Obj_Typ) then\n-               Fin_Stmts :=\n-                 New_List (Cleanup_Protected_Object (Decl, Obj_Ref));\n+               Fin_Call := Cleanup_Protected_Object (Decl, Obj_Ref);\n+               if Present (Fin_Call) then\n+                  Fin_Stmts := New_List (Fin_Call);\n+               end if;\n \n             elsif Has_Simple_Protected_Object (Obj_Typ) then\n                if Is_Record_Type (Obj_Typ) then"}, {"sha": "02a272f9d8834ad7f056aa6e5d0fd7fda4d3e7fd", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=88f47280999b57fce68aeee692d1820f12fc8264", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -370,11 +370,13 @@ begin\n    end if;\n \n    --  Qualify all entity names in inner packages, package bodies, etc.,\n-   --  except when compiling for the VM back-ends, which depend on\n-   --  having unqualified names in certain cases and handles the\n-   --  generation of qualified names when needed.\n+   --  except when compiling for the VM back-ends, which depend on having\n+   --  unqualified names in certain cases and handles the generation of\n+   --  qualified names when needed, and when compiling for formal verification,\n+   --  in which the back-end calls directly Qualify_All_Entity_Names after some\n+   --  preprocessing which uses the non-qualified names.\n \n-   if VM_Target = No_VM then\n+   if VM_Target = No_VM and then not ALFA_Mode then\n       Exp_Dbug.Qualify_All_Entity_Names;\n    end if;\n "}, {"sha": "f1b53fca6705c8c178e94be2eaca9f235f9117d6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=88f47280999b57fce68aeee692d1820f12fc8264", "patch": "@@ -6866,6 +6866,16 @@ package body Sem_Ch4 is\n                               (Designated_Type (Etype (First_Formal (Hom)))) =\n                                                                    Cls_Type))\n                then\n+                  --  If the context is a procedure call, ignore functions\n+                  --  in the name of the call.\n+\n+                  if Ekind (Hom) = E_Function\n+                    and then Nkind (Parent (N)) = N_Procedure_Call_Statement\n+                    and then N = Name (Parent (N))\n+                  then\n+                     goto Next_Hom;\n+                  end if;\n+\n                   Set_Etype (Call_Node, Any_Type);\n                   Set_Is_Overloaded (Call_Node, False);\n                   Success := False;\n@@ -6907,7 +6917,8 @@ package body Sem_Ch4 is\n                   end if;\n                end if;\n \n-               Hom := Homonym (Hom);\n+               <<Next_Hom>>\n+                  Hom := Homonym (Hom);\n             end loop;\n          end Traverse_Homonyms;\n "}, {"sha": "029789938f1bafbcbb26af027edea2e284af7e74", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f47280999b57fce68aeee692d1820f12fc8264/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=88f47280999b57fce68aeee692d1820f12fc8264", "patch": "@@ -149,7 +149,7 @@ package body Urealp is\n \n    function Store_Ureal_Normalized (Val : Ureal_Entry) return Ureal;\n    pragma Inline (Store_Ureal_Normalized);\n-   --  Like Store_Ureal, but normalizes its operand first.\n+   --  Like Store_Ureal, but normalizes its operand first\n \n    -------------------------\n    -- Decimal_Exponent_Hi --\n@@ -276,6 +276,10 @@ package body Urealp is\n       function Scale (X : Int; R : Ratio) return Int;\n       --  Compute the value of X scaled by R\n \n+      -----------\n+      -- Scale --\n+      -----------\n+\n       function Scale (X : Int; R : Ratio) return Int is\n          type Wide_Int is range -2**63 .. 2**63 - 1;\n "}]}