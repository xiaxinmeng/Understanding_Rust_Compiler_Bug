{"sha": "d833415cdac558ab5da28048154d119856b62ad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgzMzQxNWNkYWM1NThhYjVkYTI4MDQ4MTU0ZDExOTg1NmI2MmFkNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-03-21T12:48:02Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-03-21T12:48:02Z"}, "message": "re PR middle-end/60419 (ICE Segmentation fault)\n\n2014-03-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/60419\n\t* ipa.c (symtab_remove_unreachable_nodes): Clear thunk flag of nodes\n\tin the border.\n\ntestsuite/\n\t* g++.dg/ipa/pr60419.C: New test.\n\nFrom-SVN: r208747", "tree": {"sha": "f528ebb34b14f3bafa2f9ee8e655de4e553c33b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f528ebb34b14f3bafa2f9ee8e655de4e553c33b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d833415cdac558ab5da28048154d119856b62ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d833415cdac558ab5da28048154d119856b62ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d833415cdac558ab5da28048154d119856b62ad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d833415cdac558ab5da28048154d119856b62ad6/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "400a4f6ca21e539aecb66f570d769f4579a6482c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400a4f6ca21e539aecb66f570d769f4579a6482c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400a4f6ca21e539aecb66f570d769f4579a6482c"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "c56a5b7df52588e5b95c78c57d16a4150b417560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d833415cdac558ab5da28048154d119856b62ad6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d833415cdac558ab5da28048154d119856b62ad6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d833415cdac558ab5da28048154d119856b62ad6", "patch": "@@ -1,3 +1,9 @@\n+2014-03-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/60419\n+\t* ipa.c (symtab_remove_unreachable_nodes): Clear thunk flag of nodes\n+\tin the border.\n+\n 2014-03-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60577"}, {"sha": "164de0dc9dfe273c45ce411bafad86f0bdb15f7d", "filename": "gcc/ipa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=d833415cdac558ab5da28048154d119856b62ad6", "patch": "@@ -488,6 +488,7 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t      node->definition = false;\n \t      node->cpp_implicit_alias = false;\n \t      node->alias = false;\n+\t      node->thunk.thunk_p = false;\n \t      node->weakref = false;\n \t      if (!node->in_other_partition)\n \t\tnode->local.local = false;"}, {"sha": "581efab5981227632823d2960ca10b8f3791f4c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d833415cdac558ab5da28048154d119856b62ad6", "patch": "@@ -1,3 +1,8 @@\n+2014-03-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/60419\n+\t* g++.dg/ipa/pr60419.C: New test.\n+\n 2014-03-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60577"}, {"sha": "84461f3acb05bfc00f2ad48657e073e749155907", "filename": "gcc/testsuite/g++.dg/ipa/pr60419.C", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60419.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d833415cdac558ab5da28048154d119856b62ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60419.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60419.C?ref=d833415cdac558ab5da28048154d119856b62ad6", "patch": "@@ -0,0 +1,80 @@\n+// PR middle-end/60419\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct C\n+{\n+};\n+\n+struct I : C\n+{\n+  I ();\n+};\n+\n+struct J\n+{\n+  void foo ();\n+  J ();\n+  virtual void foo (int &, int);\n+};\n+\n+template <class>\n+struct D\n+{\n+  virtual void foo (I &) const;\n+  void bar ()\n+  {\n+    I p;\n+    foo (p);\n+  }\n+};\n+\n+struct K : J, public D<int>\n+{\n+};\n+\n+struct F\n+{\n+  K *operator->();\n+};\n+\n+struct N : public K\n+{\n+  void foo (int &, int);\n+  I n;\n+  void foo (I &) const {}\n+};\n+\n+struct L : J\n+{\n+  F l;\n+};\n+\n+struct M : F\n+{\n+  L *operator->();\n+};\n+\n+struct G\n+{\n+  G ();\n+};\n+\n+M h;\n+\n+G::G ()\n+try\n+{\n+  N f;\n+  f.bar ();\n+  throw;\n+}\n+catch (int)\n+{\n+}\n+\n+void\n+baz ()\n+{\n+  h->l->bar ();\n+}"}]}