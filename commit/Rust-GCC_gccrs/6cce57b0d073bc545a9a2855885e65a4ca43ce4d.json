{"sha": "6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjZTU3YjBkMDczYmM1NDVhOWEyODU1ODg1ZTY1YTRjYTQzY2U0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-01-03T19:29:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-01-03T19:29:51Z"}, "message": "c-common.c (finish_fname_decls): Put the DECL_STMTs inside the outermost scope.\n\n        * c-common.c (finish_fname_decls): Put the DECL_STMTs inside the\n        outermost scope.\n        * c-decl.c (c_make_fname_decl): Push the decls there, too.\ncp/\n        * decl.c (cp_make_fname_decl): Push the decls inside the\n        outermost scope.\n\nFrom-SVN: r60848", "tree": {"sha": "ed397435e12ce43cd81067953111919e1628866f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed397435e12ce43cd81067953111919e1628866f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c91c80bb7595b799dc5c653de60f9c9d5898d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c91c80bb7595b799dc5c653de60f9c9d5898d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c91c80bb7595b799dc5c653de60f9c9d5898d14"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "37c1db7e3fcf3f215572e63d80ce10fc55634c1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "patch": "@@ -1,3 +1,9 @@\n+2003-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-common.c (finish_fname_decls): Put the DECL_STMTs inside the\n+\toutermost scope.\n+\t* c-decl.c (c_make_fname_decl): Push the decls there, too.\n+\n 2003-01-03  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300-protos.h: Add a prototype for"}, {"sha": "12cacab3d55996a932177ca206c96ab79997bcb5", "filename": "gcc/c-common.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "patch": "@@ -1050,13 +1050,18 @@ finish_fname_decls ()\n   \n   if (body)\n     {\n-      /* They were called into existence, so add to statement tree.  */\n-      body = chainon (body,\n-\t\t      TREE_CHAIN (DECL_SAVED_TREE (current_function_decl)));\n-      body = build_stmt (COMPOUND_STMT, body);\n-      \n-      COMPOUND_STMT_NO_SCOPE (body) = 1;\n-      TREE_CHAIN (DECL_SAVED_TREE (current_function_decl)) = body;\n+      /* They were called into existence, so add to statement tree.  Add\n+\t the DECL_STMTs inside the outermost scope.  */\n+      tree *p = &DECL_SAVED_TREE (current_function_decl);\n+      /* Skip the dummy EXPR_STMT and any EH_SPEC_BLOCK.  */\n+      while (TREE_CODE (*p) != COMPOUND_STMT)\n+\tp = &TREE_CHAIN (*p);\n+      p = &COMPOUND_BODY (*p);\n+      if (TREE_CODE (*p) == SCOPE_STMT)\n+\tp = &TREE_CHAIN (*p);\n+\n+      body = chainon (body, *p);\n+      *p = body;\n     }\n   \n   for (ix = 0; fname_vars[ix].decl; ix++)\n@@ -1079,7 +1084,7 @@ finish_fname_decls ()\n   saved_function_name_decls = stack;\n }\n \n-/* Return the text name of the current function, suitable prettified\n+/* Return the text name of the current function, suitably prettified\n    by PRETTY_P.  */\n \n const char *\n@@ -1163,7 +1168,7 @@ fname_decl (rid, id)\n     }\n   if (!ix && !current_function_decl)\n     pedwarn_with_decl (decl, \"`%s' is not defined outside of function scope\");\n-  \n+\n   return decl;\n }\n "}, {"sha": "fde8c482e12e6ef85a3ea8d1b779817013690bd8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "patch": "@@ -2545,6 +2545,18 @@ c_make_fname_decl (id, type_dep)\n   DECL_INITIAL (decl) = init;\n \n   TREE_USED (decl) = 1;\n+\n+  if (current_function_decl)\n+    {\n+      /* Add the decls to the outermost block.  */\n+      struct binding_level *b = current_binding_level;\n+      struct binding_level *old = b;\n+      while (b->level_chain->parm_flag == 0)\n+\tb = b->level_chain;\n+      current_binding_level = b;\n+      pushdecl (decl);\n+      current_binding_level = old;\n+    }\t\n   \n   finish_decl (decl, init, NULL_TREE);\n "}, {"sha": "dad9680fe90d05bf4bd9e553b7ba23136bb6f82e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "patch": "@@ -1,3 +1,8 @@\n+2003-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (cp_make_fname_decl): Push the decls inside the\n+\toutermost scope.\n+\n 2003-01-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/45, c++/3784"}, {"sha": "ed200092777d2f00f116b75d301a73745b8d7014", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cce57b0d073bc545a9a2855885e65a4ca43ce4d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6cce57b0d073bc545a9a2855885e65a4ca43ce4d", "patch": "@@ -6656,7 +6656,7 @@ cp_make_fname_decl (id, type_dep)\n   tree init = cp_fname_init (name);\n   tree decl = build_decl (VAR_DECL, id, TREE_TYPE (init));\n \n-  /* As we don't push the decl here, we must set the context.  */\n+  /* As we're using pushdecl_with_scope, we must set the context.  */\n   DECL_CONTEXT (decl) = current_function_decl;\n   DECL_PRETTY_FUNCTION_P (decl) = type_dep;\n       \n@@ -6667,6 +6667,14 @@ cp_make_fname_decl (id, type_dep)\n   \n   TREE_USED (decl) = 1;\n \n+  if (current_function_decl)\n+    {\n+      struct cp_binding_level *b = current_binding_level;\n+      while (b->level_chain->parm_flag == 0)\n+\tb = b->level_chain;\n+      pushdecl_with_scope (decl, b);\n+    }\t\n+\n   cp_finish_decl (decl, init, NULL_TREE, LOOKUP_ONLYCONVERTING);\n       \n   return decl;"}]}