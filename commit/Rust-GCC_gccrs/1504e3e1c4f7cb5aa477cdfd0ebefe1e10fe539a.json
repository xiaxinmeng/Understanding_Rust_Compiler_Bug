{"sha": "1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwNGUzZTFjNGY3Y2I1YWE0NzdjZGZkMGViZWZlMWUxMGZlNTM5YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-10-02T20:22:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-10-02T20:22:32Z"}, "message": "re PR other/53889 (Gthreads doesn't support destroying recursive mutexes)\n\nlibgcc:\n\n\tPR other/53889\n\t* gthr.h (__gthread_recursive_mutex_destroy): Document new required\n\tfunction.\n\t* gthr-posix.h (__gthread_recursive_mutex_destroy): Define.\n\t* gthr-single.h (__gthread_recursive_mutex_destroy): Likewise.\n\t* config/gthr-rtems.h (__gthread_recursive_mutex_destroy): Likewise.\n\t* config/gthr-vxworks.h (__gthread_recursive_mutex_destroy): Likewise.\n\t* config/i386/gthr-win32.h (__gthread_recursive_mutex_destroy):\n\tLikewise.\n\t* config/mips/gthr-mipssde.h (__gthread_recursive_mutex_destroy):\n\tLikewise.\n\t* config/pa/gthr-dce.h (__gthread_recursive_mutex_destroy): Likewise.\n\t* config/s390/gthr-tpf.h (__gthread_recursive_mutex_destroy): Likewise.\n\nlibstdc++-v3:\n\n\tPR other/53889\n\t* include/std/mutex (__recursive_mutex_base::~__recursive_mutex_base):\n\tUse __gthread_recursive_mutex_destroy.\n\t(__recursive_mutex_base::_S_destroy): Remove.\n\t(__recursive_mutex_base::_S_destroy_win32): Likewise.\n\t* include/ext/concurrence.h (__recursive_mutex::~__recursive_mutex):\n\tUse __gthread_recursive_mutex_destroy.\n\t(__recursive_mutex::_S_destroy): Remove.\n\t(__recursive_mutex::_S_destroy_win32): Likewise.\n\nFrom-SVN: r192002", "tree": {"sha": "ad20b1547007e243bfd4112b31a8b839c93d8d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad20b1547007e243bfd4112b31a8b839c93d8d75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f950ba0d521f1a3c0599eebab1f62466b9d218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f950ba0d521f1a3c0599eebab1f62466b9d218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f950ba0d521f1a3c0599eebab1f62466b9d218"}], "stats": {"total": 199, "additions": 107, "deletions": 92}, "files": [{"sha": "9a92f365b0093888946a64a65c6dfea5a9ffb9cb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,3 +1,19 @@\n+2012-10-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR other/53889\n+\t* gthr.h (__gthread_recursive_mutex_destroy): Document new required\n+\tfunction.\n+\t* gthr-posix.h (__gthread_recursive_mutex_destroy): Define.\n+\t* gthr-single.h (__gthread_recursive_mutex_destroy): Likewise.\n+\t* config/gthr-rtems.h (__gthread_recursive_mutex_destroy): Likewise.\n+\t* config/gthr-vxworks.h (__gthread_recursive_mutex_destroy): Likewise.\n+\t* config/i386/gthr-win32.h (__gthread_recursive_mutex_destroy):\n+\tLikewise.\n+\t* config/mips/gthr-mipssde.h (__gthread_recursive_mutex_destroy):\n+\tLikewise.\n+\t* config/pa/gthr-dce.h (__gthread_recursive_mutex_destroy): Likewise.\n+\t* config/s390/gthr-tpf.h (__gthread_recursive_mutex_destroy): Likewise.\n+\n 2012-09-19  Mark Kettenis  <kettenis@openbsd.org>\n \n         * config.host (hppa-*-openbsd*): New target."}, {"sha": "3bfa67bc26cd360b8be4263692db75c44d7069e6", "filename": "libgcc/config/gthr-rtems.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fgthr-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fgthr-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgthr-rtems.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,8 +1,7 @@\n /* RTEMS threads compatibility routines for libgcc2 and libobjc.\n    by: Rosimildo da Silva( rdasilva@connecttel.com ) */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1999, 2000, 2002, 2003, 2005, 2008, 2009\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1997-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -150,6 +149,14 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n     return rtems_gxx_recursive_mutex_unlock( __mutex );\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  /* This requires that recursive and non-recursive mutexes have the same\n+     representation.  */\n+    return rtems_gxx_mutex_destroy (__mutex );\n+}\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "b48c5ac4c2e1c0978fe4282b68ce4a1f291be989", "filename": "libgcc/config/gthr-vxworks.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgthr-vxworks.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,7 +1,6 @@\n /* Threads compatibility routines for libgcc2 and libobjc for VxWorks.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1999, 2000, 2008, 2009, 2011\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1997-2012 Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@wrs.com>.\n \n This file is part of GCC.\n@@ -111,6 +110,12 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)\n   return __gthread_mutex_unlock (mutex);\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  return __gthread_mutex_destroy (__mutex);\n+}\n+\n /* pthread_once is complicated enough that it's implemented\n    out-of-line.  See config/vxlib.c.  */\n "}, {"sha": "fcb15df1dd2dfd2d0bffa14d64d60edb95079e8e", "filename": "libgcc/config/i386/gthr-win32.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fi386%2Fgthr-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fi386%2Fgthr-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fgthr-win32.c?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,8 +1,7 @@\n /* Implementation of W32-specific threads compatibility routines for\n    libgcc2.  */\n \n-/* Copyright (C) 1999, 2000, 2002, 2004, 2008, 2009, 2011\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1999-2012 Free Software Foundation, Inc.\n    Contributed by Mumit Khan <khan@xraylith.wisc.edu>.\n    Modified and moved to separate file by Danny Smith\n    <dannysmith@users.sourceforge.net>.\n@@ -259,3 +258,10 @@ __gthr_win32_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)\n \n   return 0;\n }\n+\n+int\n+__gthr_win32_recursive_mutex_destroy (__gthread_recursive_mutex_t *mutex)\n+{\n+  CloseHandle ((HANDLE) mutex->sema);\n+  return 0;\n+}"}, {"sha": "965614841c5779cc8a4cf953da9fbb9f9625837d", "filename": "libgcc/config/i386/gthr-win32.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fi386%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fi386%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fgthr-win32.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,8 +1,7 @@\n /* Threads compatibility routines for libgcc2 and libobjc.  */\n /* Compile this one with gcc.  */\n \n-/* Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2008, 2009\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1999-2012 Free Software Foundation, Inc.\n    Contributed by Mumit Khan <khan@xraylith.wisc.edu>.\n \n This file is part of GCC.\n@@ -430,6 +429,8 @@ extern int\n   __gthr_win32_recursive_mutex_trylock (__gthread_recursive_mutex_t *);\n extern int __gthr_win32_recursive_mutex_unlock (__gthread_recursive_mutex_t *);\n extern void __gthr_win32_mutex_destroy (__gthread_mutex_t *);\n+extern int\n+  __gthr_win32_recursive_mutex_destroy (__gthread_recursive_mutex_t *);\n \n static inline int\n __gthread_once (__gthread_once_t *__once, void (*__func) (void))\n@@ -536,6 +537,12 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n     return 0;\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *mutex)\n+{\n+  return __gthr_win32_recursive_mutex_destroy (__mutex);\n+}\n+\n #else /* ! __GTHREAD_HIDE_WIN32API */\n \n #include <windows.h>\n@@ -761,6 +768,13 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n   return 0;\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *mutex)\n+{\n+  CloseHandle ((HANDLE) mutex->sema);\n+  return 0;\n+}\n+\n #endif /*  __GTHREAD_HIDE_WIN32API */\n \n #ifdef __cplusplus"}, {"sha": "2ce22580b90403a00d7d7f46640a37160f5da71d", "filename": "libgcc/config/mips/gthr-mipssde.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fmips%2Fgthr-mipssde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fmips%2Fgthr-mipssde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fgthr-mipssde.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,6 +1,6 @@\n /* MIPS SDE threads compatibility routines for libgcc2 and libobjc.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2006-2012 Free Software Foundation, Inc.\n    Contributed by Nigel Stephens <nigel@mips.com>\n \n This file is part of GCC.\n@@ -223,6 +223,13 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n   return 0;\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t\n+                                   * UNUSED(__mutex))\n+{\n+  return 0;\n+}\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "3ba43a187c6a6cc333bf56f8cb32d2e1ee0b87db", "filename": "libgcc/config/pa/gthr-dce.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fpa%2Fgthr-dce.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fpa%2Fgthr-dce.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fgthr-dce.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,7 +1,6 @@\n /* Threads compatibility routines for libgcc2 and libobjc.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1999, 2000, 2001, 2004, 2005, 2008, 2009\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1997-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -557,6 +556,12 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n   return __gthread_mutex_unlock (__mutex);\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  return __gthread_mutex_destroy (__mutex);\n+}\n+\n #endif /* _LIBOBJC */\n \n #endif"}, {"sha": "49bce4c20100f87518b9822ea9031a43a0de80a9", "filename": "libgcc/config/s390/gthr-tpf.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fs390%2Fgthr-tpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fconfig%2Fs390%2Fgthr-tpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fs390%2Fgthr-tpf.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,6 +1,6 @@\n /* Threads compatibility routines for libgcc2 and libobjc.\n    Compile this one with gcc.\n-   Copyright (C) 2004, 2005, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -225,5 +225,10 @@ __gthread_recursive_mutex_init_function (__gthread_recursive_mutex_t *__mutex)\n   return 0;\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  return __gthread_mutex_destroy (__mutex);\n+}\n \n #endif /* ! GCC_GTHR_TPF_H */"}, {"sha": "1e7ddfeb2f4076e3057cf45b4acbc5641cb77f54", "filename": "libgcc/gthr-posix.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgthr-posix.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -832,6 +832,12 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n   return __gthread_mutex_unlock (__mutex);\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  return __gthread_mutex_destroy (__mutex);\n+}\n+\n #ifdef _GTHREAD_USE_COND_INIT_FUNC\n static inline void\n __gthread_cond_init_function (__gthread_cond_t *__cond)"}, {"sha": "717e6cb37b368917b34a33aeeb0c926b490bf3d0", "filename": "libgcc/gthr-single.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr-single.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr-single.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgthr-single.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,7 +1,6 @@\n /* Threads compatibility routines for libgcc2 and libobjc.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1999, 2000, 2004, 2008, 2009\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1997-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -286,6 +285,12 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)\n   return __gthread_mutex_unlock (__mutex);\n }\n \n+static inline int\n+__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)\n+{\n+  return __gthread_mutex_destroy (__mutex);\n+}\n+\n #endif /* _LIBOBJC */\n \n #undef UNUSED"}, {"sha": "9f2b53d2368b0804fe29c35b337b3a4954419cbb", "filename": "libgcc/gthr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libgcc%2Fgthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgthr.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,7 +1,6 @@\n /* Threads compatibility routines for libgcc2.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1998, 2004, 2008, 2009, 2011\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 1997-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -73,6 +72,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n      int __gthread_setspecific (__gthread_key_t key, const void *ptr)\n \n      int __gthread_mutex_destroy (__gthread_mutex_t *mutex);\n+     int __gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *mutex);\n \n      int __gthread_mutex_lock (__gthread_mutex_t *mutex);\n      int __gthread_mutex_trylock (__gthread_mutex_t *mutex);"}, {"sha": "c02a660a23065548599ff4eea0bbbbf6fcd91210", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,3 +1,15 @@\n+2012-10-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR other/53889\n+\t* include/std/mutex (__recursive_mutex_base::~__recursive_mutex_base):\n+\tUse __gthread_recursive_mutex_destroy.\n+\t(__recursive_mutex_base::_S_destroy): Remove.\n+\t(__recursive_mutex_base::_S_destroy_win32): Likewise.\n+\t* include/ext/concurrence.h (__recursive_mutex::~__recursive_mutex):\n+\tUse __gthread_recursive_mutex_destroy.\n+\t(__recursive_mutex::_S_destroy): Remove.\n+\t(__recursive_mutex::_S_destroy_win32): Likewise.\n+\n 2012-10-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/abi/pre/gnu-versioned-namespace.ver: Add more"}, {"sha": "68c679c6b0652563b64dea4ee660340dbcfd474a", "filename": "libstdc++-v3/include/ext/concurrence.h", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -219,7 +219,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     ~__recursive_mutex()\n     {\n       if (__gthread_active_p())\n-\t_S_destroy(&_M_mutex);\n+\t__gthread_recursive_mutex_destroy(&_M_mutex);\n     }\n #endif\n \n@@ -247,43 +247,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     __gthread_recursive_mutex_t* gthread_recursive_mutex(void)\n     { return &_M_mutex; }\n-\n-#if __GTHREADS && ! defined __GTHREAD_RECURSIVE_MUTEX_INIT\n-    // FIXME: gthreads doesn't define __gthread_recursive_mutex_destroy\n-    // so we need to obtain a __gthread_mutex_t to destroy\n-  private:\n-    template<typename _Mx, typename _Rm>\n-      static void\n-      _S_destroy_win32(_Mx* __mx, _Rm const* __rmx)\n-      {\n-        __mx->counter = __rmx->counter;\n-        __mx->sema = __rmx->sema;\n-        __gthread_mutex_destroy(__mx);\n-      }\n-\n-    // matches a gthr-win32.h recursive mutex\n-    template<typename _Rm>\n-      static typename __enable_if<(bool)sizeof(&_Rm::sema), void>::__type\n-      _S_destroy(_Rm* __mx)\n-      {\n-        __gthread_mutex_t __tmp;\n-        _S_destroy_win32(&__tmp, __mx);\n-      }\n-\n-    // matches a recursive mutex with a member 'actual'\n-    template<typename _Rm>\n-      static typename __enable_if<(bool)sizeof(&_Rm::actual), void>::__type\n-      _S_destroy(_Rm* __mx)\n-      { __gthread_mutex_destroy(&__mx->actual); }\n-\n-    // matches when there's only one mutex type\n-    template<typename _Rm>\n-      static typename\n-      __enable_if<std::__are_same<_Rm, __gthread_mutex_t>::__value,\n-        void>::__type\n-      _S_destroy(_Rm* __mx)\n-      { __gthread_mutex_destroy(__mx); }\n-#endif\n   };\n \n   /// Scoped lock idiom."}, {"sha": "77faf739ce682c591d0aea1b2f36859a3be60c46", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=1504e3e1c4f7cb5aa477cdfd0ebefe1e10fe539a", "patch": "@@ -1,7 +1,6 @@\n // <mutex> -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-// Free Software Foundation, Inc.\n+// Copyright (C) 2003-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -101,42 +100,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n     ~__recursive_mutex_base()\n-    { _S_destroy(&_M_mutex); }\n-\n-  private:\n-    // FIXME: gthreads doesn't define __gthread_recursive_mutex_destroy\n-    // so we need to obtain a __gthread_mutex_t to destroy\n-\n-    // matches when there's only one mutex type\n-    template<typename _Rm>\n-      static\n-      typename enable_if<is_same<_Rm, __gthread_mutex_t>::value, void>::type\n-      _S_destroy(_Rm* __mx)\n-      { __gthread_mutex_destroy(__mx); }\n-\n-    // matches a recursive mutex with a member 'actual'\n-    template<typename _Rm>\n-      static typename enable_if<(bool)sizeof(&_Rm::actual), void>::type\n-      _S_destroy(_Rm* __mx)\n-      { __gthread_mutex_destroy(&__mx->actual); }\n-\n-    // matches a gthr-win32.h recursive mutex\n-    template<typename _Rm>\n-      static typename enable_if<(bool)sizeof(&_Rm::sema), void>::type\n-      _S_destroy(_Rm* __mx)\n-      {\n-        __gthread_mutex_t __tmp;\n-        _S_destroy_win32(&__tmp, __mx);\n-      }\n-\n-    template<typename _Mx, typename _Rm>\n-      static void\n-      _S_destroy_win32(_Mx* __mx, _Rm const* __rmx)\n-      {\n-        __mx->counter = __rmx->counter;\n-        __mx->sema = __rmx->sema;\n-        __gthread_mutex_destroy(__mx);\n-      }\n+    { __gthread_recursive_mutex_destroy(&_M_mutex); }\n #endif\n   };\n "}]}