{"sha": "66852893a2fbd4917d8f3efb88e48a384010cf23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4NTI4OTNhMmZiZDQ5MTdkOGYzZWZiODhlNDhhMzg0MDEwY2YyMw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-19T09:09:23Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-19T09:09:23Z"}, "message": "CollationKey.java: Merged copyright and dat from classpath.\n\n2003-05-19  Michael Koch  <konqueror@gmx.de>\n\n\t* java/text/CollationKey.java:\n\tMerged copyright and dat from classpath.\n\t* java/text/RuleBasedCollator.java:\n\tMerged class documentation from classpath.\n\nFrom-SVN: r66955", "tree": {"sha": "19bfa09e22d5dd2956c769db7661a17cf01885a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19bfa09e22d5dd2956c769db7661a17cf01885a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66852893a2fbd4917d8f3efb88e48a384010cf23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66852893a2fbd4917d8f3efb88e48a384010cf23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66852893a2fbd4917d8f3efb88e48a384010cf23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66852893a2fbd4917d8f3efb88e48a384010cf23/comments", "author": null, "committer": null, "parents": [{"sha": "6208b55d9810eb79bdfe17a746956bcd432a101c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6208b55d9810eb79bdfe17a746956bcd432a101c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6208b55d9810eb79bdfe17a746956bcd432a101c"}], "stats": {"total": 97, "additions": 95, "deletions": 2}, "files": [{"sha": "a620831f832e2821711a1810bc6a599f7cd22f69", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=66852893a2fbd4917d8f3efb88e48a384010cf23", "patch": "@@ -1,3 +1,10 @@\n+2003-05-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/text/CollationKey.java:\n+\tMerged copyright and dat from classpath.\n+\t* java/text/RuleBasedCollator.java:\n+\tMerged class documentation from classpath.\n+\n 2003-05-19  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/CharBuffer.java"}, {"sha": "9517756cd145db60c53b149a411af122fd44beda", "filename": "libjava/java/text/CollationKey.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2Fjava%2Ftext%2FCollationKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2Fjava%2Ftext%2FCollationKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollationKey.java?ref=66852893a2fbd4917d8f3efb88e48a384010cf23", "patch": "@@ -1,6 +1,6 @@\n /* CollationKey.java -- Precomputed collation value\n+   Copyright (C) 1998, 1999, 2000, 2003  Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999, 2000  Free Software Foundation\n This file is part of GNU Classpath.\n \n GNU Classpath is free software; you can redistribute it and/or modify\n@@ -61,6 +61,7 @@\n  *\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @author Tom Tromey <tromey@cygnus.com>\n+ * @date March 25, 1999\n  */\n public final class CollationKey implements Comparable\n {"}, {"sha": "2db63881ce2ff952b1a4ed63938b85530dea61f1", "filename": "libjava/java/text/RuleBasedCollator.java", "status": "modified", "additions": 86, "deletions": 1, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66852893a2fbd4917d8f3efb88e48a384010cf23/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java?ref=66852893a2fbd4917d8f3efb88e48a384010cf23", "patch": "@@ -1,6 +1,6 @@\n /* RuleBasedCollator.java -- Concrete Collator Class\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003  Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n This file is part of GNU Classpath.\n \n GNU Classpath is free software; you can redistribute it and/or modify\n@@ -48,6 +48,91 @@\n  */\n \n /**\n+ * This class is a concrete subclass of <code>Collator</code> suitable\n+ * for string collation in a wide variety of languages.  An instance of\n+ * this class is normally returned by the <code>getInstance</code> method\n+ * of <code>Collator</code> with rules predefined for the requested\n+ * locale.  However, an instance of this class can be created manually\n+ * with any desired rules.\n+ * <p>\n+ * Rules take the form of a <code>String</code> with the following syntax\n+ * <ul>\n+ * <li> Modifier: '@' \n+ * <li> Relation: '&lt;' | ';' | ',' | '=' : <text>\n+ * <li> Reset: '&amp;' : <text>\n+ * </ul>\n+ * The modifier character indicates that accents sort backward as is the\n+ * case with French.  The relational operators specify how the text \n+ * argument relates to the previous term.  The relation characters have\n+ * the following meanings:\n+ * <ul>\n+ * <li>'&lt;' - The text argument is greater than the prior term at the primary\n+ * difference level.\n+ * <li>';' - The text argument is greater than the prior term at the secondary\n+ * difference level.\n+ * <li>',' - The text argument is greater than the prior term at the tertiary\n+ * difference level.\n+ * <li>'=' - The text argument is equal to the prior term\n+ * </ul>\n+ * <p>\n+ * As for the text argument itself, this is any sequence of Unicode\n+ * characters not in the following ranges: 0x0009-0x000D, 0x0020-0x002F,\n+ * 0x003A-0x0040, 0x005B-0x0060, and 0x007B-0x007E. If these characters are \n+ * desired, they must be enclosed in single quotes.  If any whitespace is \n+ * encountered, it is ignored.  (For example, \"a b\" is equal to \"ab\").  \n+ * <p>\n+ * The reset operation inserts the following rule at the point where the\n+ * text argument to it exists in the previously declared rule string.  This\n+ * makes it easy to add new rules to an existing string by simply including\n+ * them in a reset sequence at the end.  Note that the text argument, or\n+ * at least the first character of it, must be present somewhere in the\n+ * previously declared rules in order to be inserted properly.  If this\n+ * is not satisfied, a <code>ParseException</code> will be thrown. \n+ * <p>\n+ * This system of configuring <code>RuleBasedCollator</code> is needlessly\n+ * complex and the people at Taligent who developed it (along with the folks\n+ * at Sun who accepted it into the Java standard library) deserve a slow\n+ * and agonizing death.\n+ * <p>\n+ * Here are a couple of example of rule strings:\n+ * <p>\n+ * \"&lt; a &lt; b &lt; c\" - This string says that a is greater than b which is \n+ * greater than c, with all differences being primary differences.\n+ * <p>\n+ * \"&lt; a,A &lt; b,B &lt; c,C\" - This string says that 'A' is greater than 'a' with\n+ * a tertiary strength comparison.  Both 'b' and 'B' are greater than 'a' and\n+ * 'A' during a primary strength comparison.  But 'B' is greater than 'b'\n+ * under a tertiary strength comparison.\n+ * <p>\n+ * \"&lt; a &lt; c &amp; a &lt; b \" - This sequence is identical in function to the \n+ * \"&lt; a &lt; b &lt; c\" rule string above.  The '&amp;' reset symbol indicates that\n+ * the rule \"&lt; b\" is to be inserted after the text argument \"a\" in the\n+ * previous rule string segment.\n+ * <p>\n+ * \"&lt; a &lt; b &amp; y &lt; z\" - This is an error.  The character 'y' does not appear\n+ * anywhere in the previous rule string segment so the rule following the\n+ * reset rule cannot be inserted.\n+ * <p>\n+ * For a description of the various comparison strength types, see the\n+ * documentation for the <code>Collator</code> class.\n+ * <p>\n+ * As an additional complication to this already overly complex rule scheme,\n+ * if any characters precede the first rule, these characters are considered\n+ * ignorable.  They will be treated as if they did not exist during \n+ * comparisons.  For example, \"- &lt; a &lt; b ...\" would make '-' an ignorable\n+ * character such that the strings \"high-tech\" and \"hightech\" would\n+ * be considered identical.\n+ * <p>\n+ * A <code>ParseException</code> will be thrown for any of the following\n+ * conditions:\n+ * <ul>\n+ * <li>Unquoted punctuation characters in a text argument.\n+ * <li>A relational or reset operator not followed by a text argument\n+ * <li>A reset operator where the text argument is not present in\n+ * the previous rule string section.\n+ * </ul>\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date March 25, 1999\n  */"}]}