{"sha": "c7d2d61d20c859ef2a9796c03b573204e7f2ae8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdkMmQ2MWQyMGM4NTllZjJhOTc5NmMwM2I1NzMyMDRlN2YyYWU4Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-24T06:11:02Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-24T06:11:02Z"}, "message": "(expand_end_bindings):  Generation of NOTE_INSN_BLOCK_END\nmoved down so that it occurs after call to `expand_cleanups'.\n\nFrom-SVN: r1937", "tree": {"sha": "ce73ac98ae25549b4faa5469a937c1af60271358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce73ac98ae25549b4faa5469a937c1af60271358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c/comments", "author": null, "committer": null, "parents": [{"sha": "7343f784c87806b0bae4be3d780b8d8a62e1144c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7343f784c87806b0bae4be3d780b8d8a62e1144c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7343f784c87806b0bae4be3d780b8d8a62e1144c"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "ee4e0e6a8bac1d3c1382337741983f4ef5879e26", "filename": "gcc/stmt.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d2d61d20c859ef2a9796c03b573204e7f2ae8c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=c7d2d61d20c859ef2a9796c03b573204e7f2ae8c", "patch": "@@ -2481,14 +2481,6 @@ expand_end_bindings (vars, mark_ends, dont_jump_in)\n \t  && ! DECL_IN_SYSTEM_HEADER (decl))\n \twarning_with_decl (decl, \"unused variable `%s'\");\n \n-  /* Mark the beginning and end of the scope if requested.  */\n-\n-  if (mark_ends)\n-    emit_note (NULL_PTR, NOTE_INSN_BLOCK_END);\n-  else\n-    /* Get rid of the beginning-mark if we don't make an end-mark.  */\n-    NOTE_LINE_NUMBER (thisblock->data.block.first_insn) = NOTE_INSN_DELETED;\n-\n   if (thisblock->exit_label)\n     {\n       do_pending_stack_adjust ();\n@@ -2670,6 +2662,16 @@ expand_end_bindings (vars, mark_ends, dont_jump_in)\n \t\t   dont_jump_in);\n     }\n \n+  /* Mark the beginning and end of the scope if requested.\n+     We do this now, after running cleanups on the variables\n+     just going out of scope, so they are in scope for their cleanups.  */\n+\n+  if (mark_ends)\n+    emit_note (NULL_PTR, NOTE_INSN_BLOCK_END);\n+  else\n+    /* Get rid of the beginning-mark if we don't make an end-mark.  */\n+    NOTE_LINE_NUMBER (thisblock->data.block.first_insn) = NOTE_INSN_DELETED;\n+\n   /* If doing stupid register allocation, make sure lives of all\n      register variables declared here extend thru end of scope.  */\n "}]}