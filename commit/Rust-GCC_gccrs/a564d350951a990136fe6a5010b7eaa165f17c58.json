{"sha": "a564d350951a990136fe6a5010b7eaa165f17c58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU2NGQzNTA5NTFhOTkwMTM2ZmU2YTUwMTBiN2VhYTE2NWYxN2M1OA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2016-04-28T08:22:10Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-04-28T08:22:10Z"}, "message": "decl.c (parse_version): Don't encode the minor version in the abi version.\n\n2016-04-28  Matthias Klose  <doko@ubuntu.com>\n\n        * decl.c (parse_version): Don't encode the minor version in the abi\n        version.\n\nFrom-SVN: r235546", "tree": {"sha": "112f70e85cf38af50c30bdd9f553556e963928e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/112f70e85cf38af50c30bdd9f553556e963928e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a564d350951a990136fe6a5010b7eaa165f17c58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a564d350951a990136fe6a5010b7eaa165f17c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a564d350951a990136fe6a5010b7eaa165f17c58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a564d350951a990136fe6a5010b7eaa165f17c58/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc5999c8e32f0d2ba7c73e1ec372b614064b7066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5999c8e32f0d2ba7c73e1ec372b614064b7066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5999c8e32f0d2ba7c73e1ec372b614064b7066"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5ed24e42a968e7b276d1d6b39ac4bc7a41b8f2dd", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a564d350951a990136fe6a5010b7eaa165f17c58/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a564d350951a990136fe6a5010b7eaa165f17c58/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=a564d350951a990136fe6a5010b7eaa165f17c58", "patch": "@@ -1,3 +1,8 @@\n+2016-04-28  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* decl.c (parse_version): Don't encode the minor version in the abi\n+\tversion.\n+\n 2016-04-18  Michael Matz  <matz@suse.de>\n \n \t* class.c (add_method_1): Use SET_DECL_ALIGN."}, {"sha": "4e50ce98c23f8c43c01b8257e4780926052a5716", "filename": "gcc/java/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a564d350951a990136fe6a5010b7eaa165f17c58/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a564d350951a990136fe6a5010b7eaa165f17c58/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=a564d350951a990136fe6a5010b7eaa165f17c58", "patch": "@@ -540,9 +540,9 @@ parse_version (void)\n   else /* C++ ABI */\n     {\n       /* Implicit in this computation is the idea that we won't break the\n-\t old-style binary ABI in a sub-minor release (e.g., from 4.0.0 to\n-\t 4.0.1).  */\n-      abi_version = 100000 * major + 1000 * minor;\n+\t old-style binary ABI in a sub-minor release (e.g., from 6.0 to\n+\t 6.1).  */\n+      abi_version = 100000 * major;\n     }\n   if (flag_bootstrap_classes)\n     abi_version |= FLAG_BOOTSTRAP_LOADER;"}]}