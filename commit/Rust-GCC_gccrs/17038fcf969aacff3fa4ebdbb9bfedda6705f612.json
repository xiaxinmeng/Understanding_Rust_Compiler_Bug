{"sha": "17038fcf969aacff3fa4ebdbb9bfedda6705f612", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwMzhmY2Y5NjlhYWNmZjNmYTRlYmRiYjliZmVkZGE2NzA1ZjYxMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-03T13:01:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-03T13:01:12Z"}, "message": "re PR target/48774 (gcc-4.6.0 optimization regression on x86_64-unknown-linux-gnu)\n\n\tPR target/48774\n\t* config/i386/i386.c (ix86_match_ccmode): For CC{A,C,O,S}mode\n\tonly succeed if req_mode is the same as set_mode.\n\n\t* gcc.dg/pr48774.c: New test.\n\nFrom-SVN: r173301", "tree": {"sha": "c696183f4ee70590759ab790079ae80e56489745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c696183f4ee70590759ab790079ae80e56489745"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17038fcf969aacff3fa4ebdbb9bfedda6705f612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17038fcf969aacff3fa4ebdbb9bfedda6705f612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17038fcf969aacff3fa4ebdbb9bfedda6705f612", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17038fcf969aacff3fa4ebdbb9bfedda6705f612/comments", "author": null, "committer": null, "parents": [{"sha": "3810076ba72986ec17bc02043ea7897fd5b73434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3810076ba72986ec17bc02043ea7897fd5b73434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3810076ba72986ec17bc02043ea7897fd5b73434"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "3527b6e58aa4acfb00c4c94c6d5f1474d61055a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17038fcf969aacff3fa4ebdbb9bfedda6705f612", "patch": "@@ -1,3 +1,10 @@\n+2011-05-03  Uros Bizjak  <ubizjak@gmail.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48774\n+\t* config/i386/i386.c (ix86_match_ccmode): For CC{A,C,O,S}mode\n+\tonly succeed if req_mode is the same as set_mode.\n+\n 2011-05-03  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* gengenrtl.c (special_rtx): PC, CC0 and RETURN are special."}, {"sha": "97064abb076187d5880edca9e1ee614297e8df06", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=17038fcf969aacff3fa4ebdbb9bfedda6705f612", "patch": "@@ -17299,11 +17299,15 @@ ix86_match_ccmode (rtx insn, enum machine_mode req_mode)\n       if (req_mode == CCZmode)\n \treturn false;\n       /* FALLTHRU */\n+    case CCZmode:\n+      break;\n+\n     case CCAmode:\n     case CCCmode:\n     case CCOmode:\n     case CCSmode:\n-    case CCZmode:\n+      if (set_mode != req_mode)\n+\treturn false;\n       break;\n \n     default:"}, {"sha": "8c4d5f755e671d9cf4bdec289d3f333ad724e0d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17038fcf969aacff3fa4ebdbb9bfedda6705f612", "patch": "@@ -1,3 +1,8 @@\n+2011-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48774\n+\t* gcc.dg/pr48774.c: New test.\n+\n 2011-05-03  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/large-size-array-5.c: New testcase."}, {"sha": "91ce361ccb38645ce4a249d80bc526b382d96ae6", "filename": "gcc/testsuite/gcc.dg/pr48774.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17038fcf969aacff3fa4ebdbb9bfedda6705f612/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c?ref=17038fcf969aacff3fa4ebdbb9bfedda6705f612", "patch": "@@ -0,0 +1,38 @@\n+/* PR target/48774 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -funroll-loops\" } */\n+\n+extern void abort (void);\n+unsigned long int s[24]\n+  = { 12, ~1, 12, ~2, 12, ~4, 12, ~8, 12, ~16, 12, ~32,\n+      12, ~64, 12, ~128, 12, ~256, 12, ~512, 12, ~1024, 12, ~2048 };\n+struct { int n; unsigned long *e[12]; } g\n+  = { 12, { &s[0], &s[2], &s[4], &s[6], &s[8], &s[10], &s[12], &s[14],\n+\t    &s[16], &s[18], &s[20], &s[22] } };\n+int c[12];\n+\n+__attribute__((noinline, noclone)) void\n+foo (void)\n+{\n+  int i, j;\n+  for (i = 0; i < g.n; i++)\n+    for (j = 0; j < g.n; j++)\n+      {\n+\tif (i == j && j < g.e[0][0] && (g.e[i][1] & (1UL << j)))\n+\t  abort ();\n+\tif (j < g.e[0][0] && (g.e[i][1] & (1UL << j)))\n+\t  c[i]++;\n+      }\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  asm volatile (\"\" : \"+m\" (s), \"+m\" (g), \"+m\" (c));\n+  foo ();\n+  for (i = 0; i < 12; i++)\n+    if (c[i] != 11)\n+      abort ();\n+  return 0;\n+}"}]}