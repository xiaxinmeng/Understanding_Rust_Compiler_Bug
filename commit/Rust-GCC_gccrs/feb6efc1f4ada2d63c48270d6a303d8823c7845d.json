{"sha": "feb6efc1f4ada2d63c48270d6a303d8823c7845d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViNmVmYzFmNGFkYTJkNjNjNDgyNzBkNmEzMDNkODgyM2M3ODQ1ZA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-12-08T21:37:51Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-12-08T21:37:51Z"}, "message": "re PR c++/45329 (When printing a list of candidate functions, explain why each function failed to match.)\n\ngcc/cp/\n\tPR c++/45329\n\t* call.c (struct conversion): Document bad_p field.\n\t(enum rejection_reason_code): Define.\n\t(struct conversion_info): Define.\n\t(struct rejection_reason): Define.\n\t(struct z_candidate): Add `reason' field.\n\t(add_candidate): Add `reason' parameter.  Store it in CAND.\n\t(alloc_rejection, arity_rejection, arg_conversion_rejection):\n\tNew functions.\n\t(bad_arg_conversion_rejection): New function.\n\t(convert_class_to_reference): Add comment.\n\t(remaining_arguments): New function.\n\t(add_function_candidate): Record rejection reason and pass it to\n\tadd_candidate.\n\t(add_conv_candidate, build_builtin_candidate): Likewise.\n\t(add_template_candidate_real): Likewise.\n\t(print_conversion_rejection): New function.\n\t(print_z_candidate): Print CAND->REASON if it exists.  Adjust\n\tdiagnostic strings.\n\t(print_z_candidates): Add location_t argument.  Adjust calling\n\tsequence for print_z_candidate. Print header line directly.\n\t(build_user_type_conversion_1): Add reason for rejection to\n\tCAND.  Adjust call to print_z_candidates.\n\t(print_error_for_call_failure): New function.\n\t(build_new_function_call): Call it.  Adjust call to\n\tprint_z_candidates.\n\t(build_operator_new_call): Likewise.\n\t(build_op_call): Likewise.\n\t(build_conditional_expr): Likewise.\n\t(build_new_op): Likewise.\n\t(build_new_method_call): Likewise.\n\ngcc/testsuite/\n\tPR c++/45329\n\t* testsuite/g++.dg/conversion/ambig1.C: Adjust.\n\t* testsuite/g++.dg/conversion/op1.C: Adjust.\n\t* testsuite/g++.dg/conversion/simd1.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/defaulted14.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/defaulted18.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/defaulted20.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/explicit3.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/explicit4.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/implicit4.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/nullptr15.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/nullptr19.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/pr31431-2.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/pr31431.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/pr31434.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/pr31437.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv2n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv3n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv4n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv5n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv6n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/rv7n.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/temp_default2.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/trailing4.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/variadic-ex3.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/variadic-ex4.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/variadic35.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/vt-35147.C: Adjust.\n\t* testsuite/g++.dg/cpp0x/vt-37737-2.C: Adjust.\n\t* testsuite/g++.dg/expr/cond9.C: Adjust.\n\t* testsuite/g++.dg/expr/pmf-1.C: Adjust.\n\t* testsuite/g++.dg/ext/label5.C: Adjust.\n\t* testsuite/g++.dg/ext/visibility/anon8.C: Adjust.\n\t* testsuite/g++.dg/ext/vla2.C: Adjust.\n\t* testsuite/g++.dg/gomp/pr26690-1.C: Adjust.\n\t* testsuite/g++.dg/gomp/pr26690-2.C: Adjust.\n\t* testsuite/g++.dg/init/synth2.C: Adjust.\n\t* testsuite/g++.dg/lookup/conv-1.C: Adjust.\n\t* testsuite/g++.dg/lookup/new1.C: Adjust.\n\t* testsuite/g++.dg/lookup/using9.C: Adjust.\n\t* testsuite/g++.dg/other/error13.C: Adjust.\n\t* testsuite/g++.dg/other/error20.C: Adjust.\n\t* testsuite/g++.dg/other/error31.C: Adjust.\n\t* testsuite/g++.dg/other/pr28114.C: Adjust.\n\t* testsuite/g++.dg/other/ptrmem10.C: Adjust.\n\t* testsuite/g++.dg/other/ptrmem11.C: Adjust.\n\t* testsuite/g++.dg/overload/ambig1.C: Adjust.\n\t* testsuite/g++.dg/overload/arg3.C: Adjust.\n\t* testsuite/g++.dg/overload/builtin1.C: Adjust.\n\t* testsuite/g++.dg/overload/copy1.C: Adjust.\n\t* testsuite/g++.dg/overload/new1.C: Adjust.\n\t* testsuite/g++.dg/overload/template4.C: Adjust.\n\t* testsuite/g++.dg/overload/unknown1.C: Adjust.\n\t* testsuite/g++.dg/overload/using2.C: Adjust.\n\t* testsuite/g++.dg/parse/crash5.C: Adjust.\n\t* testsuite/g++.dg/parse/error19.C: Adjust.\n\t* testsuite/g++.dg/parse/error28.C: Adjust.\n\t* testsuite/g++.dg/parse/template7.C: Adjust.\n\t* testsuite/g++.dg/parse/typename7.C: Adjust.\n\t* testsuite/g++.dg/rtti/typeid6.C: Adjust.\n\t* testsuite/g++.dg/tc1/dr152.C: Adjust.\n\t* testsuite/g++.dg/template/conv11.C: Adjust.\n\t* testsuite/g++.dg/template/copy1.C: Adjust.\n\t* testsuite/g++.dg/template/crash37.C: Adjust.\n\t* testsuite/g++.dg/template/deduce3.C: Adjust.\n\t* testsuite/g++.dg/template/dependent-expr5.C: Adjust.\n\t* testsuite/g++.dg/template/error38.C: Adjust.\n\t* testsuite/g++.dg/template/error40.C: Adjust.\n\t* testsuite/g++.dg/template/friend.C: Adjust.\n\t* testsuite/g++.dg/template/incomplete2.C: Adjust.\n\t* testsuite/g++.dg/template/instantiate5.C: Adjust.\n\t* testsuite/g++.dg/template/local4.C: Adjust.\n\t* testsuite/g++.dg/template/local6.C: Adjust.\n\t* testsuite/g++.dg/template/new3.C: Adjust.\n\t* testsuite/g++.dg/template/operator9.C: Adjust.\n\t* testsuite/g++.dg/template/overload6.C: Adjust.\n\t* testsuite/g++.dg/template/ptrmem2.C: Adjust.\n\t* testsuite/g++.dg/template/ptrmem20.C: Adjust.\n\t* testsuite/g++.dg/template/ptrmem4.C: Adjust.\n\t* testsuite/g++.dg/template/ptrmem8.C: Adjust.\n\t* testsuite/g++.dg/template/qualttp5.C: Adjust.\n\t* testsuite/g++.dg/template/sfinae2.C: Adjust.\n\t* testsuite/g++.dg/template/spec22.C: Adjust.\n\t* testsuite/g++.dg/template/spec23.C: Adjust.\n\t* testsuite/g++.dg/template/ttp25.C: Adjust.\n\t* testsuite/g++.dg/template/typedef4.C: Adjust.\n\t* testsuite/g++.dg/template/unify10.C: Adjust.\n\t* testsuite/g++.dg/template/unify11.C: Adjust.\n\t* testsuite/g++.dg/template/unify6.C: Adjust.\n\t* testsuite/g++.dg/template/unify7.C: Adjust.\n\t* testsuite/g++.dg/template/unify9.C: Adjust.\n\t* testsuite/g++.dg/template/varmod1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.benjamin/15799.C: Adjust.\n\t* testsuite/g++.old-deja/g++.benjamin/15800-1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/ambiguity1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/crash29.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/crash48.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/crash56.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/cvt3.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/overload1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/overload4.C: Adjust.\n\t* testsuite/g++.old-deja/g++.brendan/overload9.C: Adjust.\n\t* testsuite/g++.old-deja/g++.bugs/900127_01.C: Adjust.\n\t* testsuite/g++.old-deja/g++.bugs/900205_04.C: Adjust.\n\t* testsuite/g++.old-deja/g++.bugs/900330_02.C: Adjust.\n\t* testsuite/g++.old-deja/g++.bugs/900404_03.C: Adjust.\n\t* testsuite/g++.old-deja/g++.bugs/900514_03.C: Adjust.\n\t* testsuite/g++.old-deja/g++.eh/ctor1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/conversion11.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/crash3.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/overload16.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/overload28.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/scoping10.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/template30.C: Adjust.\n\t* testsuite/g++.old-deja/g++.jason/temporary2.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/arg1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/arg11.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/arm9.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/ctors11.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/ctors17.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/ctors5.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/ctors9.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/enum4.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/missed-error2.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/operators32.C: Adjust.\n\t* testsuite/g++.old-deja/g++.law/operators9.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/net2.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/net22.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p11110.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p1989.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p2431.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p438.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p807a.C: Adjust.\n\t* testsuite/g++.old-deja/g++.mike/p9068.C: Adjust.\n\t* testsuite/g++.old-deja/g++.niklas/t120.C: Adjust.\n\t* testsuite/g++.old-deja/g++.niklas/t121.C: Adjust.\n\t* testsuite/g++.old-deja/g++.niklas/t128.C: Adjust.\n\t* testsuite/g++.old-deja/g++.ns/overload2.C: Adjust.\n\t* testsuite/g++.old-deja/g++.ns/using12.C: Adjust.\n\t* testsuite/g++.old-deja/g++.other/crash24.C: Adjust.\n\t* testsuite/g++.old-deja/g++.other/expr1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.other/overload11.C: Adjust.\n\t* testsuite/g++.old-deja/g++.other/pmf3.C: Adjust.\n\t* testsuite/g++.old-deja/g++.other/volatile1.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/auto_ptr.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/crash28.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/crash60.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/explicit38.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/explicit39.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/explicit41.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/explicit67.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/explicit77.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/expr2.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/ptrmem10.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/ptrmem6.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/spec35.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/spec5.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/spec6.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/t05.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/t24.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/unify4.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/unify6.C: Adjust.\n\t* testsuite/g++.old-deja/g++.pt/unify8.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb109.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb119.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb131.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb22.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb69.C: Adjust.\n\t* testsuite/g++.old-deja/g++.robertl/eb98.C: Adjust.\n\nFrom-SVN: r167607", "tree": {"sha": "6915a0d336134d81096b40d65cd07bcc7e57b58e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6915a0d336134d81096b40d65cd07bcc7e57b58e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feb6efc1f4ada2d63c48270d6a303d8823c7845d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb6efc1f4ada2d63c48270d6a303d8823c7845d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb6efc1f4ada2d63c48270d6a303d8823c7845d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb6efc1f4ada2d63c48270d6a303d8823c7845d/comments", "author": null, "committer": null, "parents": [{"sha": "abccc9a925b684f87bb31cbd148ac58cc417801f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abccc9a925b684f87bb31cbd148ac58cc417801f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abccc9a925b684f87bb31cbd148ac58cc417801f"}], "stats": {"total": 1821, "additions": 1397, "deletions": 424}, "files": [{"sha": "f5bddffa7aac933ef43351034848757e9b906eec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,3 +1,37 @@\n+2010-12-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR c++/45329\n+\t* call.c (struct conversion): Document bad_p field.\n+\t(enum rejection_reason_code): Define.\n+\t(struct conversion_info): Define.\n+\t(struct rejection_reason): Define.\n+\t(struct z_candidate): Add `reason' field.\n+\t(add_candidate): Add `reason' parameter.  Store it in CAND.\n+\t(alloc_rejection, arity_rejection, arg_conversion_rejection):\n+\tNew functions.\n+\t(bad_arg_conversion_rejection): New function.\n+\t(convert_class_to_reference): Add comment.\n+\t(remaining_arguments): New function.\n+\t(add_function_candidate): Record rejection reason and pass it to\n+\tadd_candidate.\n+\t(add_conv_candidate, build_builtin_candidate): Likewise.\n+\t(add_template_candidate_real): Likewise.\n+\t(print_conversion_rejection): New function.\n+\t(print_z_candidate): Print CAND->REASON if it exists.  Adjust\n+\tdiagnostic strings.\n+\t(print_z_candidates): Add location_t argument.  Adjust calling\n+\tsequence for print_z_candidate. Print header line directly.\n+\t(build_user_type_conversion_1): Add reason for rejection to\n+\tCAND.  Adjust call to print_z_candidates.\n+\t(print_error_for_call_failure): New function.\n+\t(build_new_function_call): Call it.  Adjust call to\n+\tprint_z_candidates.\n+\t(build_operator_new_call): Likewise.\n+\t(build_op_call): Likewise.\n+\t(build_conditional_expr): Likewise.\n+\t(build_new_op): Likewise.\n+\t(build_new_method_call): Likewise.\n+\n 2010-12-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/45822"}, {"sha": "9c9f6484c8363272863371b1b28592c9bc7990b5", "filename": "gcc/cp/call.c", "status": "modified", "additions": 271, "deletions": 76, "changes": 347, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -85,6 +85,9 @@ struct conversion {\n   BOOL_BITFIELD user_conv_p : 1;\n   BOOL_BITFIELD ellipsis_p : 1;\n   BOOL_BITFIELD this_p : 1;\n+  /* True if this conversion would be permitted with a bending of\n+     language standards, e.g. disregarding pointer qualifiers or\n+     converting integers to pointers.  */\n   BOOL_BITFIELD bad_p : 1;\n   /* If KIND is ck_ref_bind ck_base_conv, true to indicate that a\n      temporary should be created to hold the result of the\n@@ -130,6 +133,7 @@ struct conversion {\n \n static struct obstack conversion_obstack;\n static bool conversion_obstack_initialized;\n+struct rejection_reason;\n \n static struct z_candidate * tourney (struct z_candidate *);\n static int equal_functions (tree, tree);\n@@ -152,7 +156,7 @@ static void op_error (enum tree_code, enum tree_code, tree, tree,\n static VEC(tree,gc) *resolve_args (VEC(tree,gc) *);\n static struct z_candidate *build_user_type_conversion_1 (tree, tree, int);\n static void print_z_candidate (const char *, struct z_candidate *);\n-static void print_z_candidates (struct z_candidate *);\n+static void print_z_candidates (location_t, struct z_candidate *);\n static tree build_this (tree);\n static struct z_candidate *splice_viable (struct z_candidate *, bool, bool *);\n static bool any_strictly_viable (struct z_candidate *);\n@@ -191,7 +195,7 @@ static conversion *maybe_handle_ref_bind (conversion **);\n static void maybe_handle_implicit_object (conversion **);\n static struct z_candidate *add_candidate\n \t(struct z_candidate **, tree, tree, const VEC(tree,gc) *, size_t,\n-\t conversion **, tree, tree, int);\n+\t conversion **, tree, tree, int, struct rejection_reason *);\n static tree source_type (conversion *);\n static void add_warning (struct z_candidate *, struct z_candidate *);\n static bool reference_compatible_p (tree, tree);\n@@ -417,6 +421,43 @@ struct candidate_warning {\n   candidate_warning *next;\n };\n \n+/* Information for providing diagnostics about why overloading failed.  */\n+\n+enum rejection_reason_code {\n+  rr_none,\n+  rr_arity,\n+  rr_arg_conversion,\n+  rr_bad_arg_conversion\n+};\n+\n+struct conversion_info {\n+  /* The index of the argument, 0-based.  */\n+  int n_arg;\n+  /* The type of the actual argument.  */\n+  tree from_type;\n+  /* The type of the formal argument.  */\n+  tree to_type;\n+};\n+  \n+struct rejection_reason {\n+  enum rejection_reason_code code;\n+  union {\n+    /* Information about an arity mismatch.  */\n+    struct {\n+      /* The expected number of arguments.  */\n+      int expected;\n+      /* The actual number of arguments in the call.  */\n+      int actual;\n+      /* Whether the call was a varargs call.  */\n+      bool call_varargs_p;\n+    } arity;\n+    /* Information about an argument conversion mismatch.  */\n+    struct conversion_info conversion;\n+    /* Same, but for bad argument conversions.  */\n+    struct conversion_info bad_conversion;\n+  } u;\n+};\n+\n struct z_candidate {\n   /* The FUNCTION_DECL that will be called if this candidate is\n      selected by overload resolution.  */\n@@ -438,6 +479,7 @@ struct z_candidate {\n      type.  */\n   conversion *second_conv;\n   int viable;\n+  struct rejection_reason *reason;\n   /* If FN is a member function, the binfo indicating the path used to\n      qualify the name of FN at the call site.  This path is used to\n      determine whether or not FN is accessible if it is selected by\n@@ -519,6 +561,49 @@ conversion_obstack_alloc (size_t n)\n   return p;\n }\n \n+/* Allocate rejection reasons.  */\n+\n+static struct rejection_reason *\n+alloc_rejection (enum rejection_reason_code code)\n+{\n+  struct rejection_reason *p;\n+  p = (struct rejection_reason *) conversion_obstack_alloc (sizeof *p);\n+  p->code = code;\n+  return p;\n+}\n+\n+static struct rejection_reason *\n+arity_rejection (tree first_arg, int expected, int actual)\n+{\n+  struct rejection_reason *r = alloc_rejection (rr_arity);\n+  int adjust = first_arg != NULL_TREE;\n+  r->u.arity.expected = expected - adjust;\n+  r->u.arity.actual = actual - adjust;\n+  return r;\n+}\n+\n+static struct rejection_reason *\n+arg_conversion_rejection (tree first_arg, int n_arg, tree from, tree to)\n+{\n+  struct rejection_reason *r = alloc_rejection (rr_arg_conversion);\n+  int adjust = first_arg != NULL_TREE;\n+  r->u.conversion.n_arg = n_arg - adjust;\n+  r->u.conversion.from_type = from;\n+  r->u.conversion.to_type = to;\n+  return r;\n+}\n+\n+static struct rejection_reason *\n+bad_arg_conversion_rejection (tree first_arg, int n_arg, tree from, tree to)\n+{\n+  struct rejection_reason *r = alloc_rejection (rr_bad_arg_conversion);\n+  int adjust = first_arg != NULL_TREE;\n+  r->u.bad_conversion.n_arg = n_arg - adjust;\n+  r->u.bad_conversion.from_type = from;\n+  r->u.bad_conversion.to_type = to;\n+  return r;\n+}\n+\n /* Dynamically allocate a conversion.  */\n \n static conversion *\n@@ -1148,6 +1233,10 @@ convert_class_to_reference (tree reference_type, tree s, tree expr, int flags)\n \t  if (TREE_CODE (t2) != REFERENCE_TYPE\n \t      || !reference_compatible_p (t, TREE_TYPE (t2)))\n \t    {\n+\t      /* No need to set cand->reason here; this is most likely\n+\t\t an ambiguous match.  If it's not, either this candidate\n+\t\t will win, or we will have identified a reason for it\n+\t\t losing already.  */\n \t      cand->viable = 0;\n \t    }\n \t  else\n@@ -1558,7 +1647,7 @@ add_candidate (struct z_candidate **candidates,\n \t       tree fn, tree first_arg, const VEC(tree,gc) *args,\n \t       size_t num_convs, conversion **convs,\n \t       tree access_path, tree conversion_path,\n-\t       int viable)\n+\t       int viable, struct rejection_reason *reason)\n {\n   struct z_candidate *cand = (struct z_candidate *)\n     conversion_obstack_alloc (sizeof (struct z_candidate));\n@@ -1571,12 +1660,28 @@ add_candidate (struct z_candidate **candidates,\n   cand->access_path = access_path;\n   cand->conversion_path = conversion_path;\n   cand->viable = viable;\n+  cand->reason = reason;\n   cand->next = *candidates;\n   *candidates = cand;\n \n   return cand;\n }\n \n+/* Return the number of remaining arguments in the parameter list\n+   beginning with ARG.  */\n+\n+static int\n+remaining_arguments (tree arg)\n+{\n+  int n;\n+\n+  for (n = 0; arg != NULL_TREE && arg != void_list_node;\n+       arg = TREE_CHAIN (arg))\n+    n++;\n+\n+  return n;\n+}\n+\n /* Create an overload candidate for the function or method FN called\n    with the argument list FIRST_ARG/ARGS and add it to CANDIDATES.\n    FLAGS is passed on to implicit_conversion.\n@@ -1599,6 +1704,7 @@ add_function_candidate (struct z_candidate **candidates,\n   tree orig_first_arg = first_arg;\n   int skip;\n   int viable = 1;\n+  struct rejection_reason *reason = NULL;\n \n   /* At this point we should not see any functions which haven't been\n      explicitly declared, except for friend functions which will have\n@@ -1638,13 +1744,13 @@ add_function_candidate (struct z_candidate **candidates,\n       parmnode = TREE_CHAIN (parmnode);\n     }\n \n-  if (i < len && parmnode)\n-    viable = 0;\n-\n-  /* Make sure there are default args for the rest of the parms.  */\n-  else if (!sufficient_parms_p (parmnode))\n-    viable = 0;\n-\n+  if ((i < len && parmnode)\n+      || !sufficient_parms_p (parmnode))\n+    {\n+      int remaining = remaining_arguments (parmnode);\n+      viable = 0;\n+      reason = arity_rejection (first_arg, i + remaining, len);\n+    }\n   /* When looking for a function from a subobject from an implicit\n      copy/move constructor/operator=, don't consider anything that takes (a\n      reference to) an unrelated type.  See c++/44909 and core 1092.  */\n@@ -1680,7 +1786,7 @@ add_function_candidate (struct z_candidate **candidates,\n \n   for (i = 0; i < len; ++i)\n     {\n-      tree arg, argtype;\n+      tree arg, argtype, to_type;\n       conversion *t;\n       int is_this;\n \n@@ -1747,11 +1853,13 @@ add_function_candidate (struct z_candidate **candidates,\n \n \t  t = implicit_conversion (parmtype, argtype, arg,\n \t\t\t\t   /*c_cast_p=*/false, lflags);\n+\t  to_type = parmtype;\n \t}\n       else\n \t{\n \t  t = build_identity_conv (argtype, arg);\n \t  t->ellipsis_p = true;\n+\t  to_type = argtype;\n \t}\n \n       if (t && is_this)\n@@ -1761,16 +1869,20 @@ add_function_candidate (struct z_candidate **candidates,\n       if (! t)\n \t{\n \t  viable = 0;\n+\t  reason = arg_conversion_rejection (first_arg, i, argtype, to_type);\n \t  break;\n \t}\n \n       if (t->bad_p)\n-\tviable = -1;\n+\t{\n+\t  viable = -1;\n+\t  reason = bad_arg_conversion_rejection (first_arg, i, argtype, to_type);\n+\t}\n     }\n \n  out:\n   return add_candidate (candidates, fn, orig_first_arg, args, len, convs,\n-\t\t\taccess_path, conversion_path, viable);\n+\t\t\taccess_path, conversion_path, viable, reason);\n }\n \n /* Create an overload candidate for the conversion function FN which will\n@@ -1794,6 +1906,7 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n   int i, len, viable, flags;\n   tree parmlist, parmnode;\n   conversion **convs;\n+  struct rejection_reason *reason;\n \n   for (parmlist = totype; TREE_CODE (parmlist) != FUNCTION_TYPE; )\n     parmlist = TREE_TYPE (parmlist);\n@@ -1804,14 +1917,15 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n   parmnode = parmlist;\n   viable = 1;\n   flags = LOOKUP_IMPLICIT;\n+  reason = NULL;\n \n   /* Don't bother looking up the same type twice.  */\n   if (*candidates && (*candidates)->fn == totype)\n     return NULL;\n \n   for (i = 0; i < len; ++i)\n     {\n-      tree arg, argtype;\n+      tree arg, argtype, convert_type = NULL_TREE;\n       conversion *t;\n \n       if (i == 0)\n@@ -1824,25 +1938,35 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n       argtype = lvalue_type (arg);\n \n       if (i == 0)\n-\tt = implicit_conversion (totype, argtype, arg, /*c_cast_p=*/false,\n-\t\t\t\t flags);\n+\t{\n+\t  t = implicit_conversion (totype, argtype, arg, /*c_cast_p=*/false,\n+\t\t\t\t   flags);\n+\t  convert_type = totype;\n+\t}\n       else if (parmnode == void_list_node)\n \tbreak;\n       else if (parmnode)\n-\tt = implicit_conversion (TREE_VALUE (parmnode), argtype, arg,\n-\t\t\t\t /*c_cast_p=*/false, flags);\n+\t{\n+\t  t = implicit_conversion (TREE_VALUE (parmnode), argtype, arg,\n+\t\t\t\t   /*c_cast_p=*/false, flags);\n+\t  convert_type = TREE_VALUE (parmnode);\n+\t}\n       else\n \t{\n \t  t = build_identity_conv (argtype, arg);\n \t  t->ellipsis_p = true;\n+\t  convert_type = argtype;\n \t}\n \n       convs[i] = t;\n       if (! t)\n \tbreak;\n \n       if (t->bad_p)\n-\tviable = -1;\n+\t{\n+\t  viable = -1;\n+\t  reason = bad_arg_conversion_rejection (NULL_TREE, i, argtype, convert_type);\n+\t}\n \n       if (i == 0)\n \tcontinue;\n@@ -1851,14 +1975,16 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n \tparmnode = TREE_CHAIN (parmnode);\n     }\n \n-  if (i < len)\n-    viable = 0;\n-\n-  if (!sufficient_parms_p (parmnode))\n-    viable = 0;\n+  if (i < len\n+      || ! sufficient_parms_p (parmnode))\n+    {\n+      int remaining = remaining_arguments (parmnode);\n+      viable = 0;\n+      reason = arity_rejection (NULL_TREE, i + remaining, len);\n+    }\n \n   return add_candidate (candidates, totype, first_arg, arglist, len, convs,\n-\t\t\taccess_path, conversion_path, viable);\n+\t\t\taccess_path, conversion_path, viable, reason);\n }\n \n static void\n@@ -1871,6 +1997,7 @@ build_builtin_candidate (struct z_candidate **candidates, tree fnname,\n   size_t num_convs;\n   int viable = 1, i;\n   tree types[2];\n+  struct rejection_reason *reason = NULL;\n \n   types[0] = type1;\n   types[1] = type2;\n@@ -1898,9 +2025,13 @@ build_builtin_candidate (struct z_candidate **candidates, tree fnname,\n \t  viable = 0;\n \t  /* We need something for printing the candidate.  */\n \t  t = build_identity_conv (types[i], NULL_TREE);\n+\t  reason = arg_conversion_rejection (NULL_TREE, i, argtypes[i], types[i]);\n \t}\n       else if (t->bad_p)\n-\tviable = 0;\n+\t{\n+\t  viable = 0;\n+\t  reason = bad_arg_conversion_rejection (NULL_TREE, i, argtypes[i], types[i]);\n+\t}\n       convs[i] = t;\n     }\n \n@@ -1914,14 +2045,18 @@ build_builtin_candidate (struct z_candidate **candidates, tree fnname,\n       if (t)\n \tconvs[0] = t;\n       else\n-\tviable = 0;\n+\t{\n+\t  viable = 0;\n+\t  reason = arg_conversion_rejection (NULL_TREE, 0, argtypes[2],\n+\t\t\t\t\t     boolean_type_node);\n+\t}\n     }\n \n   add_candidate (candidates, fnname, /*first_arg=*/NULL_TREE, /*args=*/NULL,\n \t\t num_convs, convs,\n \t\t /*access_path=*/NULL_TREE,\n \t\t /*conversion_path=*/NULL_TREE,\n-\t\t viable);\n+\t\t viable, reason);\n }\n \n static bool\n@@ -2573,6 +2708,7 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n   struct z_candidate *cand;\n   int i;\n   tree fn;\n+  struct rejection_reason *reason = NULL;\n \n   /* We don't do deduction on the in-charge parameter, the VTT\n      parameter or 'this'.  */\n@@ -2691,7 +2827,7 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n   return cand;\n  fail:\n   return add_candidate (candidates, tmpl, first_arg, arglist, nargs, NULL,\n-\t\t\taccess_path, conversion_path, 0);\n+\t\t\taccess_path, conversion_path, 0, reason);\n }\n \n \n@@ -2802,6 +2938,20 @@ equal_functions (tree fn1, tree fn2)\n   return fn1 == fn2;\n }\n \n+/* Print information about a candidate being rejected due to INFO.  */\n+\n+static void\n+print_conversion_rejection (location_t loc, struct conversion_info *info)\n+{\n+  if (info->n_arg == -1)\n+    /* Conversion of implicit `this' argument failed.  */\n+    inform (loc, \"no known conversion for implicit %<this%> parameter from %qT to %qT\",\n+\t    info->from_type, info->to_type);\n+  else\n+    inform (loc, \"no known conversion for argument %d from %qT to %qT\",\n+\t    info->n_arg+1, info->from_type, info->to_type);\n+}\n+\n /* Print information about one overload candidate CANDIDATE.  MSGSTR\n    is the text to print before the candidate itself.\n \n@@ -2812,38 +2962,68 @@ equal_functions (tree fn1, tree fn2)\n static void\n print_z_candidate (const char *msgstr, struct z_candidate *candidate)\n {\n+  const char *msg = (msgstr == NULL\n+\t\t     ? \"\"\n+\t\t     : ACONCAT ((msgstr, \" \", NULL)));\n+  location_t loc = location_of (candidate->fn);\n+\n   if (TREE_CODE (candidate->fn) == IDENTIFIER_NODE)\n     {\n       if (candidate->num_convs == 3)\n-\tinform (input_location, \"%s %D(%T, %T, %T) <built-in>\", msgstr, candidate->fn,\n+\tinform (input_location, \"%s%D(%T, %T, %T) <built-in>\", msg, candidate->fn,\n \t\tcandidate->convs[0]->type,\n \t\tcandidate->convs[1]->type,\n \t\tcandidate->convs[2]->type);\n       else if (candidate->num_convs == 2)\n-\tinform (input_location, \"%s %D(%T, %T) <built-in>\", msgstr, candidate->fn,\n+\tinform (input_location, \"%s%D(%T, %T) <built-in>\", msg, candidate->fn,\n \t\tcandidate->convs[0]->type,\n \t\tcandidate->convs[1]->type);\n       else\n-\tinform (input_location, \"%s %D(%T) <built-in>\", msgstr, candidate->fn,\n+\tinform (input_location, \"%s%D(%T) <built-in>\", msg, candidate->fn,\n \t\tcandidate->convs[0]->type);\n     }\n   else if (TYPE_P (candidate->fn))\n-    inform (input_location, \"%s %T <conversion>\", msgstr, candidate->fn);\n+    inform (input_location, \"%s%T <conversion>\", msg, candidate->fn);\n   else if (candidate->viable == -1)\n-    inform (input_location, \"%s %+#D <near match>\", msgstr, candidate->fn);\n+    inform (loc, \"%s%#D <near match>\", msg, candidate->fn);\n   else if (DECL_DELETED_FN (STRIP_TEMPLATE (candidate->fn)))\n-    inform (input_location, \"%s %+#D <deleted>\", msgstr, candidate->fn);\n+    inform (loc, \"%s%#D <deleted>\", msg, candidate->fn);\n   else\n-    inform (input_location, \"%s %+#D\", msgstr, candidate->fn);\n+    inform (loc, \"%s%#D\", msg, candidate->fn);\n+  /* Give the user some information about why this candidate failed.  */\n+  if (candidate->reason != NULL)\n+    {\n+      struct rejection_reason *r = candidate->reason;\n+\n+      switch (r->code)\n+\t{\n+\tcase rr_arity:\n+\t  inform_n (loc, r->u.arity.expected,\n+\t\t    \"  candidate expects %d argument, %d provided\",\n+\t\t    \"  candidate expects %d arguments, %d provided\",\n+\t\t    r->u.arity.expected, r->u.arity.actual);\n+\t  break;\n+\tcase rr_arg_conversion:\n+\t  print_conversion_rejection (loc, &r->u.conversion);\n+\t  break;\n+\tcase rr_bad_arg_conversion:\n+\t  print_conversion_rejection (loc, &r->u.bad_conversion);\n+\t  break;\n+\tcase rr_none:\n+\tdefault:\n+\t  /* This candidate didn't have any issues or we failed to\n+\t     handle a particular code.  Either way...  */\n+\t  gcc_unreachable ();\n+\t}\n+    }\n }\n \n static void\n-print_z_candidates (struct z_candidate *candidates)\n+print_z_candidates (location_t loc, struct z_candidate *candidates)\n {\n-  const char *str;\n   struct z_candidate *cand1;\n   struct z_candidate **cand2;\n-  char *spaces;\n+  int n_candidates;\n \n   if (!candidates)\n     return;\n@@ -2885,14 +3065,12 @@ print_z_candidates (struct z_candidate *candidates)\n \t}\n     }\n \n-  str = candidates->next ? _(\"candidates are:\") :  _(\"candidate is:\");\n-  spaces = NULL;\n+  for (n_candidates = 0, cand1 = candidates; cand1; cand1 = cand1->next)\n+    n_candidates++;\n+\n+  inform_n (loc, n_candidates, \"candidate is:\", \"candidates are:\");\n   for (; candidates; candidates = candidates->next)\n-    {\n-      print_z_candidate (spaces ? spaces : str, candidates);\n-      spaces = spaces ? spaces : get_spaces (str);\n-    }\n-  free (spaces);\n+    print_z_candidate (NULL, candidates);\n }\n \n /* USER_SEQ is a user-defined conversion sequence, beginning with a\n@@ -3129,9 +3307,20 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \t  cand->second_conv = ics;\n \n \t  if (!ics)\n-\t    cand->viable = 0;\n+\t    {\n+\t      tree rettype = TREE_TYPE (TREE_TYPE (cand->fn));\n+\t      cand->viable = 0;\n+\t      cand->reason = arg_conversion_rejection (NULL_TREE, -1,\n+\t\t\t\t\t\t       rettype, totype);\n+\t    }\n \t  else if (cand->viable == 1 && ics->bad_p)\n-\t    cand->viable = -1;\n+\t    {\n+\t      tree rettype = TREE_TYPE (TREE_TYPE (cand->fn));\n+\t      cand->viable = -1;\n+\t      cand->reason\n+\t\t= bad_arg_conversion_rejection (NULL_TREE, -1,\n+\t\t\t\t\t\trettype, totype);\n+\t    }\n \t}\n     }\n \n@@ -3146,7 +3335,7 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \t{\n \t  error (\"conversion from %qT to %qT is ambiguous\",\n \t\t    fromtype, totype);\n-\t  print_z_candidates (candidates);\n+\t  print_z_candidates (location_of (expr), candidates);\n \t}\n \n       cand = candidates;\t/* any one will do */\n@@ -3346,6 +3535,28 @@ perform_overload_resolution (tree fn,\n   return cand;\n }\n \n+/* Print an error message about being unable to build a call to FN with\n+   ARGS.  ANY_VIABLE_P indicates whether any candidate functions could\n+   be located; CANDIDATES is a possibly empty list of such\n+   functions.  */\n+\n+static void\n+print_error_for_call_failure (tree fn, VEC(tree,gc) *args, bool any_viable_p,\n+\t\t\t      struct z_candidate *candidates)\n+{\n+  tree name = DECL_NAME (OVL_CURRENT (fn));\n+  location_t loc = location_of (name);\n+\n+  if (!any_viable_p)\n+    error_at (loc, \"no matching function for call to %<%D(%A)%>\",\n+\t      name, build_tree_list_vec (args));\n+  else\n+    error_at (loc, \"call of overloaded %<%D(%A)%> is ambiguous\",\n+\t      name, build_tree_list_vec (args));\n+  if (candidates)\n+    print_z_candidates (loc, candidates);\n+}\n+\n /* Return an expression for a call to FN (a namespace-scope function,\n    or a static member function) with the ARGS.  This may change\n    ARGS.  */\n@@ -3377,9 +3588,7 @@ build_new_function_call (tree fn, VEC(tree,gc) **args, bool koenig_p,\n       if (!fn)\n \t{\n \t  if (complain & tf_error)\n-\t    error (\"no matching function for call to %<%D(%A)%>\",\n-\t\t   DECL_NAME (OVL_CURRENT (orig_fn)),\n-\t\t   build_tree_list_vec (*args));\n+\t    print_error_for_call_failure (orig_fn, *args, false, NULL);\n \t  return error_mark_node;\n \t}\n     }\n@@ -3398,14 +3607,7 @@ build_new_function_call (tree fn, VEC(tree,gc) **args, bool koenig_p,\n \t    return cp_build_function_call_vec (candidates->fn, args, complain);\n \t  if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n \t    fn = TREE_OPERAND (fn, 0);\n-\t  if (!any_viable_p)\n-\t    error (\"no matching function for call to %<%D(%A)%>\",\n-\t\t   DECL_NAME (OVL_CURRENT (fn)), build_tree_list_vec (*args));\n-\t  else\n-\t    error (\"call of overloaded %<%D(%A)%> is ambiguous\",\n-\t\t   DECL_NAME (OVL_CURRENT (fn)), build_tree_list_vec (*args));\n-\t  if (candidates)\n-\t    print_z_candidates (candidates);\n+\t  print_error_for_call_failure (fn, *args, any_viable_p, candidates);\n \t}\n       result = error_mark_node;\n     }\n@@ -3463,14 +3665,7 @@ build_operator_new_call (tree fnname, VEC(tree,gc) **args,\n      and give up.  */\n   if (!cand)\n     {\n-      if (!any_viable_p)\n-\terror (\"no matching function for call to %<%D(%A)%>\",\n-\t       DECL_NAME (OVL_CURRENT (fns)), build_tree_list_vec (*args));\n-      else\n-\terror (\"call of overloaded %<%D(%A)%> is ambiguous\",\n-\t       DECL_NAME (OVL_CURRENT (fns)), build_tree_list_vec (*args));\n-      if (candidates)\n-\tprint_z_candidates (candidates);\n+      print_error_for_call_failure (fns, *args, any_viable_p, candidates);\n       return error_mark_node;\n     }\n \n@@ -3620,7 +3815,7 @@ build_op_call (tree obj, VEC(tree,gc) **args, tsubst_flags_t complain)\n         {\n           error (\"no match for call to %<(%T) (%A)%>\", TREE_TYPE (obj),\n \t\t build_tree_list_vec (*args));\n-          print_z_candidates (candidates);\n+          print_z_candidates (location_of (TREE_TYPE (obj)), candidates);\n         }\n       result = error_mark_node;\n     }\n@@ -3633,7 +3828,7 @@ build_op_call (tree obj, VEC(tree,gc) **args, tsubst_flags_t complain)\n             {\n               error (\"call of %<(%T) (%A)%> is ambiguous\", \n                      TREE_TYPE (obj), build_tree_list_vec (*args));\n-              print_z_candidates (candidates);\n+              print_z_candidates (location_of (TREE_TYPE (obj)), candidates);\n             }\n \t  result = error_mark_node;\n \t}\n@@ -4052,7 +4247,7 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3,\n           if (complain & tf_error)\n             {\n               op_error (COND_EXPR, NOP_EXPR, arg1, arg2, arg3, FALSE);\n-              print_z_candidates (candidates);\n+              print_z_candidates (location_of (arg1), candidates);\n             }\n \t  return error_mark_node;\n \t}\n@@ -4062,7 +4257,7 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3,\n           if (complain & tf_error)\n             {\n               op_error (COND_EXPR, NOP_EXPR, arg1, arg2, arg3, FALSE);\n-              print_z_candidates (candidates);\n+              print_z_candidates (location_of (arg1), candidates);\n             }\n \t  return error_mark_node;\n \t}\n@@ -4581,7 +4776,7 @@ build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n \t\t    /* ... Otherwise, report the more generic\n \t\t       \"no matching operator found\" error */\n \t\t    op_error (code, code2, arg1, arg2, arg3, FALSE);\n-\t\t    print_z_candidates (candidates);\n+\t\t    print_z_candidates (input_location, candidates);\n \t\t  }\n \t    }\n \t  result = error_mark_node;\n@@ -4596,7 +4791,7 @@ build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n \t  if ((flags & LOOKUP_COMPLAIN) && (complain & tf_error))\n \t    {\n \t      op_error (code, code2, arg1, arg2, arg3, TRUE);\n-\t      print_z_candidates (candidates);\n+\t      print_z_candidates (input_location, candidates);\n \t    }\n \t  result = error_mark_node;\n \t}\n@@ -6656,7 +6851,7 @@ build_new_method_call (tree instance, tree fns, VEC(tree,gc) **args,\n \t      if (free_p)\n \t\tfree (pretty_name);\n \t    }\n-\t  print_z_candidates (candidates);\n+\t  print_z_candidates (location_of (name), candidates);\n \t}\n       call = error_mark_node;\n     }\n@@ -6677,7 +6872,7 @@ build_new_method_call (tree instance, tree fns, VEC(tree,gc) **args,\n \t\targlist = TREE_CHAIN (arglist);\n \t      error (\"call of overloaded %<%s(%A)%> is ambiguous\", pretty_name,\n \t\t     arglist);\n-\t      print_z_candidates (candidates);\n+\t      print_z_candidates (location_of (name), candidates);\n \t      if (free_p)\n \t\tfree (pretty_name);\n \t    }"}, {"sha": "b4e005e9c22180b908c29d337147a5abb6d3aa17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,3 +1,175 @@\n+2010-12-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR c++/45329\n+\t* testsuite/g++.dg/conversion/ambig1.C: Adjust.\n+\t* testsuite/g++.dg/conversion/op1.C: Adjust.\n+\t* testsuite/g++.dg/conversion/simd1.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/defaulted14.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/defaulted18.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/defaulted20.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/explicit3.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/explicit4.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/implicit4.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/nullptr15.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/nullptr19.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/pr31431-2.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/pr31431.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/pr31434.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/pr31437.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv2n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv3n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv4n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv5n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv6n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/rv7n.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/temp_default2.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/trailing4.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/variadic-ex3.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/variadic-ex4.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/variadic35.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/vt-35147.C: Adjust.\n+\t* testsuite/g++.dg/cpp0x/vt-37737-2.C: Adjust.\n+\t* testsuite/g++.dg/expr/cond9.C: Adjust.\n+\t* testsuite/g++.dg/expr/pmf-1.C: Adjust.\n+\t* testsuite/g++.dg/ext/label5.C: Adjust.\n+\t* testsuite/g++.dg/ext/visibility/anon8.C: Adjust.\n+\t* testsuite/g++.dg/ext/vla2.C: Adjust.\n+\t* testsuite/g++.dg/gomp/pr26690-1.C: Adjust.\n+\t* testsuite/g++.dg/gomp/pr26690-2.C: Adjust.\n+\t* testsuite/g++.dg/init/synth2.C: Adjust.\n+\t* testsuite/g++.dg/lookup/conv-1.C: Adjust.\n+\t* testsuite/g++.dg/lookup/new1.C: Adjust.\n+\t* testsuite/g++.dg/lookup/using9.C: Adjust.\n+\t* testsuite/g++.dg/other/error13.C: Adjust.\n+\t* testsuite/g++.dg/other/error20.C: Adjust.\n+\t* testsuite/g++.dg/other/error31.C: Adjust.\n+\t* testsuite/g++.dg/other/pr28114.C: Adjust.\n+\t* testsuite/g++.dg/other/ptrmem10.C: Adjust.\n+\t* testsuite/g++.dg/other/ptrmem11.C: Adjust.\n+\t* testsuite/g++.dg/overload/ambig1.C: Adjust.\n+\t* testsuite/g++.dg/overload/arg3.C: Adjust.\n+\t* testsuite/g++.dg/overload/builtin1.C: Adjust.\n+\t* testsuite/g++.dg/overload/copy1.C: Adjust.\n+\t* testsuite/g++.dg/overload/new1.C: Adjust.\n+\t* testsuite/g++.dg/overload/template4.C: Adjust.\n+\t* testsuite/g++.dg/overload/unknown1.C: Adjust.\n+\t* testsuite/g++.dg/overload/using2.C: Adjust.\n+\t* testsuite/g++.dg/parse/crash5.C: Adjust.\n+\t* testsuite/g++.dg/parse/error19.C: Adjust.\n+\t* testsuite/g++.dg/parse/error28.C: Adjust.\n+\t* testsuite/g++.dg/parse/template7.C: Adjust.\n+\t* testsuite/g++.dg/parse/typename7.C: Adjust.\n+\t* testsuite/g++.dg/rtti/typeid6.C: Adjust.\n+\t* testsuite/g++.dg/tc1/dr152.C: Adjust.\n+\t* testsuite/g++.dg/template/conv11.C: Adjust.\n+\t* testsuite/g++.dg/template/copy1.C: Adjust.\n+\t* testsuite/g++.dg/template/crash37.C: Adjust.\n+\t* testsuite/g++.dg/template/deduce3.C: Adjust.\n+\t* testsuite/g++.dg/template/dependent-expr5.C: Adjust.\n+\t* testsuite/g++.dg/template/error38.C: Adjust.\n+\t* testsuite/g++.dg/template/error40.C: Adjust.\n+\t* testsuite/g++.dg/template/friend.C: Adjust.\n+\t* testsuite/g++.dg/template/incomplete2.C: Adjust.\n+\t* testsuite/g++.dg/template/instantiate5.C: Adjust.\n+\t* testsuite/g++.dg/template/local4.C: Adjust.\n+\t* testsuite/g++.dg/template/local6.C: Adjust.\n+\t* testsuite/g++.dg/template/new3.C: Adjust.\n+\t* testsuite/g++.dg/template/operator9.C: Adjust.\n+\t* testsuite/g++.dg/template/overload6.C: Adjust.\n+\t* testsuite/g++.dg/template/ptrmem2.C: Adjust.\n+\t* testsuite/g++.dg/template/ptrmem20.C: Adjust.\n+\t* testsuite/g++.dg/template/ptrmem4.C: Adjust.\n+\t* testsuite/g++.dg/template/ptrmem8.C: Adjust.\n+\t* testsuite/g++.dg/template/qualttp5.C: Adjust.\n+\t* testsuite/g++.dg/template/sfinae2.C: Adjust.\n+\t* testsuite/g++.dg/template/spec22.C: Adjust.\n+\t* testsuite/g++.dg/template/spec23.C: Adjust.\n+\t* testsuite/g++.dg/template/ttp25.C: Adjust.\n+\t* testsuite/g++.dg/template/typedef4.C: Adjust.\n+\t* testsuite/g++.dg/template/unify10.C: Adjust.\n+\t* testsuite/g++.dg/template/unify11.C: Adjust.\n+\t* testsuite/g++.dg/template/unify6.C: Adjust.\n+\t* testsuite/g++.dg/template/unify7.C: Adjust.\n+\t* testsuite/g++.dg/template/unify9.C: Adjust.\n+\t* testsuite/g++.dg/template/varmod1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.benjamin/15799.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.benjamin/15800-1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/ambiguity1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/crash29.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/crash48.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/crash56.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/cvt3.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/overload1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/overload4.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.brendan/overload9.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.bugs/900127_01.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.bugs/900205_04.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.bugs/900330_02.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.bugs/900404_03.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.bugs/900514_03.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.eh/ctor1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/conversion11.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/crash3.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/overload16.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/overload28.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/scoping10.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/template30.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.jason/temporary2.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/arg1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/arg11.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/arm9.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/ctors11.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/ctors17.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/ctors5.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/ctors9.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/enum4.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/missed-error2.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/operators32.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.law/operators9.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/net2.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/net22.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p11110.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p1989.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p2431.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p438.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p807a.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.mike/p9068.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.niklas/t120.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.niklas/t121.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.niklas/t128.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.ns/overload2.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.ns/using12.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.other/crash24.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.other/expr1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.other/overload11.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.other/pmf3.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.other/volatile1.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/auto_ptr.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/crash28.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/crash60.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/explicit38.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/explicit39.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/explicit41.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/explicit67.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/explicit77.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/expr2.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/ptrmem10.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/ptrmem6.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/spec35.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/spec5.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/spec6.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/t05.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/t24.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/unify4.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/unify6.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.pt/unify8.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb109.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb119.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb131.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb22.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb69.C: Adjust.\n+\t* testsuite/g++.old-deja/g++.robertl/eb98.C: Adjust.\n+\n 2010-12-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/45822"}, {"sha": "85ea1d25f9e9ed20440e966ee203786c968eb522", "filename": "gcc/testsuite/g++.dg/conversion/ambig1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,3 +6,4 @@ struct H {\n };\n \n int const& ref = H(); // { dg-error \"ambiguous\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }"}, {"sha": "e0a3e5f46edab32e6ec6fb6000da60377d5bed72", "filename": "gcc/testsuite/g++.dg/conversion/op1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,10 +1,11 @@\n class C\n {\n   template<typename U> \n-  operator U();\t\t\t// { dg-message \"candidate\" }\n+  operator U();\t\t\t// { dg-message \"note\" }\n };\n \n int fn (C c) \n { \n   return C::operator float(c); // { dg-error \"operator float.C\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n }"}, {"sha": "fa40b0eaad289637ce9ffd6188ba728e7f772692", "filename": "gcc/testsuite/g++.dg/conversion/simd1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,8 +5,8 @@\n \n #define vector __attribute__((vector_size(16)))\n \n-vector signed int vld (int a1, const vector signed int *a2) { return *a2; } /* { dg-message \"vld\" } */\n-vector signed short vld (int a1, const vector signed short *a2) { return *a2; } /* { dg-message \"vld\" } */\n+vector signed int vld (int a1, const vector signed int *a2) { return *a2; } /* { dg-message \"vld|no known conversion\" } */\n+vector signed short vld (int a1, const vector signed short *a2) { return *a2; } /* { dg-message \"vld|no known conversion\" } */\n \n extern int i;\n extern vector signed short vss;\n@@ -17,6 +17,7 @@ extern const vector signed short *cvssp;\n void foo ()\n {\n   vss = vld(i, vscp);        /* { dg-error \"no matching function for call\" } */\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n   vss = vld(i, vssp);\n   vss = vld(i, cvssp);\n }"}, {"sha": "e476d576cfaefacfa0e9bc2ef1e720afa345ae08", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted14.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted14.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -14,5 +14,7 @@ int main()\n {\n   A a;\n   a = B();\t\t// { dg-error \"no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n   a = 1.0;\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n }"}, {"sha": "559dfde48332d94fdd8fb71eb5779cbb3ca65018", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted18.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted18.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,4 +6,5 @@ void f(int i, ...);\t\t// { dg-message \"void f\" }\n int main()\n {\n   f(1,1);\t\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "5d536a97eff510d61980fd30b71aeb49403aabc1", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted20.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,12 +2,13 @@\n // { dg-options -std=c++0x }\n \n struct A {\n-  A(A&&) = default;\t\t// { dg-message \"A::A\" }\n+  A(A&&) = default;\t\t// { dg-message \"A::A|no known conversion\" }\n };\n struct B {\n   const A a;\n   B(const B&) = default;\n   B(B&&) = default;\t\t// { dg-error \"implicitly deleted|no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n };\n \n void g(B);\t\t\t// { dg-error \"argument 1\" }"}, {"sha": "be0a14e7adf47c7c9a956fd9325480c7286529e5", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -42,6 +42,7 @@ int main()\n   // These do not.\n   switch (a); \t\t\t// { dg-error \"\" }\n   bool b = a;\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 44 }\n   f(a);\t\t\t\t// { dg-error \"\" }\n   B b2 = { a };\t\t\t// { dg-error \"\" }\n   a + true;\t\t\t// { dg-message \"\" }"}, {"sha": "0f3bc623a53e0b64e6060a803c9e80997bc1203a", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"-std=c++0x\" }\n \n struct A {\n-  A(const A&, int = 0);\t\t// { dg-message \"candidate\" }\n+  A(const A&, int = 0);\t\t// { dg-message \"note\" }\n };\n struct B\n {\n@@ -14,4 +14,5 @@ int main()\n   B b;\n   (A(b));\t\t\t// OK\n   (A(b,1));\t\t\t// { dg-error \"no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n }"}, {"sha": "f97eb7549f9704aef8d12a84871b3e020f43dcf2", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit4.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,11 +4,12 @@\n \n struct A\n {\n-  A();\t\t\t\t// { dg-message \"A::A\" }\n-  A(A&&);\t\t\t// { dg-message \"A::A\" }\n+  A();\t\t\t\t// { dg-message \"A::A|candidate expects\" }\n+  A(A&&);\t\t\t// { dg-message \"A::A|no known conversion\" }\n };\n \n struct B: A\t\t\t// { dg-error \"implicit|no match\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 11 }\n {\n };\n "}, {"sha": "e02fd5592eb9a1ab60c2c50dec8a2999e0c87771", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr15.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,15 +10,17 @@ template <typename T, typename U>\n inline typename tType_equal<T, U>::type\n type_equal(U) { }\n \n-template<typename T> T* g( T* t ); // { dg-message \"candidate\" }\n+template<typename T> T* g( T* t ); // { dg-message \"note\" }\n \n void test_g()\n {\n   // Deduction to nullptr_t, no deduction to pointer type\n   //\n   g(nullptr);               // { dg-error \"no matching function for call to \" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n   type_equal<float*>(g((float*)nullptr));\n   decltype(nullptr) mynull = 0;\n   g(mynull);                // { dg-error \"no matching function for call to \" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n   type_equal<float*>(g((float*)mynull));\n }"}, {"sha": "cf30f1c2396f76667d2abab2eb5a20f09a5d01ca", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr19.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr19.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,5 +11,7 @@ nullptr_t k( nullptr_t ); /* { dg-message \"note\" } { dg-message \"note\" } */\n void test_k()\n {\n   k(0); /* { dg-error \"is ambiguous\" } */\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n   k(__null); /* { dg-error \"is ambiguous\" } */\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n }"}, {"sha": "15efbc5d35973312082f4f2b279f910f9a25e437", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31431-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,7 +1,8 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<typename, typename..., typename> void foo(); // { dg-message \"candidate\" }\n+template<typename, typename..., typename> void foo(); // { dg-message \"note\" }\n \n void bar()\n {\n   foo<int>(); // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n }"}, {"sha": "36f341f3d02ed4121822aacc07e714eaba60f515", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31431.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,7 +1,8 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<typename..., typename> void foo(); // { dg-message \"candidate\" }\n+template<typename..., typename> void foo(); // { dg-message \"note\" }\n \n void bar()\n {\n   foo<int>(); // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n }"}, {"sha": "97ad079ab0b8b022d3429d2a0ff195a725a9c2a6", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31434.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31434.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,4 +8,5 @@ template<typename... T> int foo(const T&) // { dg-error \"not expanded with|T\" }\n void bar()\n {\n   foo(0); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n }"}, {"sha": "0b64f7273fb3c3b1c400b068c68abfa58709bf1d", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31437.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,3 +7,4 @@ template <typename... T> struct A // { dg-error \"candidates|A\" }\n };\n \n A<int> a(0); // { dg-error \"no matching\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }"}, {"sha": "2b3a9c06ae9fc72133d143787e7003f3267a6d6e", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 100, "deletions": 21, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 2 at a time\n \n-one   sink_2_12(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_12(               A&);  // { dg-message \"note|argument\" }\n two   sink_2_12(const          A&);  // { dg-message \"note|argument\" }\n \n int test2_12()\n@@ -40,13 +40,17 @@ int test2_12()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_12(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 42 }\n     sink_2_12(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 44 }\n     sink_2_12(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 46 }\n     sink_2_12(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 48 }\n     return 0;\n }\n \n-one   sink_2_13(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_13(               A&);  // { dg-message \"note|argument\" }\n three sink_2_13(volatile       A&);  // { dg-message \"note|argument\" }\n \n int test2_13()\n@@ -56,15 +60,21 @@ int test2_13()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_13(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 62 }\n     sink_2_13(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 64 }\n     sink_2_13(source());     // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 66 }\n     sink_2_13(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 68 }\n     sink_2_13(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 70 }\n     sink_2_13(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 72 }\n     return 0;\n }\n \n-one   sink_2_14(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_14(               A&);  // { dg-message \"note|argument\" }\n four  sink_2_14(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_14()\n@@ -74,13 +84,17 @@ int test2_14()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_14(source());     // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 86 }\n     sink_2_14(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 88 }\n     sink_2_14(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 90 }\n     sink_2_14(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 92 }\n     return 0;\n }\n \n-one   sink_2_15(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_15(               A&);  // { dg-message \"note|argument\" }\n five  sink_2_15(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_15()\n@@ -90,15 +104,21 @@ int test2_15()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n    sink_2_15(ca);           // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 106 }\n    sink_2_15(va);           // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 108 }\n    sink_2_15(cva);          // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 110 }\n    sink_2_15(c_source());   // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 112 }\n    sink_2_15(v_source());   // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 114 }\n    sink_2_15(cv_source());  // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 116 }\n     return 0;\n }\n \n-one   sink_2_16(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_16(               A&);  // { dg-message \"note|argument\" }\n six   sink_2_16(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_16()\n@@ -109,13 +129,17 @@ int test2_16()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_16(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_16(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 131 }\n     sink_2_16(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 133 }\n     sink_2_16(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 135 }\n     sink_2_16(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 137 }\n     return 0;\n }\n \n-one   sink_2_17(               A&);  // { dg-message \"candidates|argument\" }\n+one   sink_2_17(               A&);  // { dg-message \"note|argument\" }\n seven sink_2_17(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_17()\n@@ -125,10 +149,14 @@ int test2_17()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_17(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 151 }\n     sink_2_17(va);           // { dg-error \"lvalue\" }\n     sink_2_17(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 154 }\n     sink_2_17(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 156 }\n     sink_2_17(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 158 }\n     return 0;\n }\n \n@@ -146,7 +174,7 @@ int test2_18()\n     sink_2_18(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-two   sink_2_23(const          A&);  // { dg-message \"candidates|argument\" }\n+two   sink_2_23(const          A&);  // { dg-message \"note|argument\" }\n three sink_2_23(volatile       A&);  // { dg-message \"note|argument\" }\n \n int test2_23()\n@@ -156,13 +184,17 @@ int test2_23()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_23(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 186 }\n     sink_2_23(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 188 }\n     sink_2_23(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 190 }\n     sink_2_23(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 192 }\n     return 0;\n }\n \n-two   sink_2_24(const          A&);  // { dg-message \"candidates|argument\" }\n+two   sink_2_24(const          A&);  // { dg-message \"note|argument\" }\n four  sink_2_24(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_24()\n@@ -172,11 +204,13 @@ int test2_24()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_24(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 206 }\n     sink_2_24(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 208 }\n     return 0;\n }\n \n-three sink_2_34(volatile       A&);  // { dg-message \"candidate\" }\n+three sink_2_34(volatile       A&);  // { dg-message \"three sink_2_34|no known conversion\" }\n four  sink_2_34(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_34()\n@@ -186,13 +220,17 @@ int test2_34()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_34(source());     // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 222 }\n     sink_2_34(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 224 }\n     sink_2_34(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 226 }\n     sink_2_34(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 228 }\n     return 0;\n }\n \n-two   sink_2_25(const          A&);  // { dg-message \"candidate\" }\n+two   sink_2_25(const          A&);  // { dg-message \"two sink_2_25|no known conversion\" }\n five  sink_2_25(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_25()\n@@ -202,13 +240,17 @@ int test2_25()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n    sink_2_25(va);           // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 242 }\n    sink_2_25(cva);          // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 244 }\n    sink_2_25(v_source());   // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 246 }\n    sink_2_25(cv_source());  // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 248 }\n     return 0;\n }\n \n-two   sink_2_26(const          A&);  // { dg-message \"candidate\" }\n+two   sink_2_26(const          A&);  // { dg-message \"two sink_2_26|no known conversion\" }\n six   sink_2_26(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_26()\n@@ -218,13 +260,17 @@ int test2_26()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_26(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 262 }\n     sink_2_26(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 264 }\n     sink_2_26(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 266 }\n     sink_2_26(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 268 }\n     return 0;\n }\n \n-two   sink_2_27(const          A&);  // { dg-message \"candidate\" }\n+two   sink_2_27(const          A&);  // { dg-message \"two sink_2_27|no known conversion\" }\n seven sink_2_27(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_27()\n@@ -235,7 +281,9 @@ int test2_27()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_27(va);\t     // { dg-error \"lvalue\" }\n     sink_2_27(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 283 }\n     sink_2_27(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 285 }\n     return 0;\n }\n \n@@ -252,7 +300,7 @@ int test2_28()\n     sink_2_28(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-three sink_2_35(volatile       A&);  // { dg-message \"candidate\" }\n+three sink_2_35(volatile       A&);  // { dg-message \"three sink_2_35|no known conversion\" }\n five  sink_2_35(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_35()\n@@ -262,14 +310,19 @@ int test2_35()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_35(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 312 }\n     sink_2_35(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 314 }\n     sink_2_35(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 316 }\n     sink_2_35(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 318 }\n     sink_2_35(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 320 }\n     return 0;\n }\n \n-three sink_2_36(volatile       A&);  // { dg-message \"candidate\" }\n+three sink_2_36(volatile       A&);  // { dg-message \"three sink_2_36|no known conversion\" }\n six   sink_2_36(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_36()\n@@ -280,12 +333,15 @@ int test2_36()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_36(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_36(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 335 }\n     sink_2_36(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 337 }\n     sink_2_36(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 339 }\n     return 0;\n }\n \n-three sink_2_37(volatile       A&);  // { dg-message \"candidate\" }\n+three sink_2_37(volatile       A&);  // { dg-message \"three sink_2_37|no known conversion\" }\n seven sink_2_37(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_37()\n@@ -295,9 +351,13 @@ int test2_37()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_37(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 353 }\n     sink_2_37(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 355 }\n     sink_2_37(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 357 }\n     sink_2_37(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 359 }\n     return 0;\n }\n \n@@ -314,7 +374,7 @@ int test2_38()\n     sink_2_38(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-four  sink_2_45(const volatile A&);   // { dg-message \"candidate\" }\n+four  sink_2_45(const volatile A&);   // { dg-message \"note\" }\n five  sink_2_45(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_45()\n@@ -324,12 +384,15 @@ int test2_45()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_45(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 386 }\n     sink_2_45(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 388 }\n     sink_2_45(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 390 }\n     return 0;\n }\n \n-four  sink_2_46(const volatile A&);   // { dg-message \"candidate\" }\n+four  sink_2_46(const volatile A&);   // { dg-message \"note\" }\n six   sink_2_46(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_46()\n@@ -339,11 +402,13 @@ int test2_46()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_46(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 404 }\n     sink_2_46(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 406 }\n     return 0;\n }\n \n-four  sink_2_47(const volatile A&);   // { dg-message \"candidate\" }\n+four  sink_2_47(const volatile A&);   // { dg-message \"note\" }\n seven sink_2_47(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_47()\n@@ -353,11 +418,13 @@ int test2_47()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_47(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 420 }\n     sink_2_47(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 422 }\n     return 0;\n }\n \n-five  sink_2_56(               A&&);  // { dg-message \"candidate|argument\" }\n+five  sink_2_56(               A&&);  // { dg-message \"note|argument\" }\n six   sink_2_56(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_56()\n@@ -369,13 +436,17 @@ int test2_56()\n     sink_2_56(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_56(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_56(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 438 }\n     sink_2_56(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 440 }\n     sink_2_56(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 442 }\n     sink_2_56(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 444 }\n     return 0;\n }\n \n-five  sink_2_57(               A&&);  // { dg-message \"candidate|argument\" }\n+five  sink_2_57(               A&&);  // { dg-message \"note|argument\" }\n seven sink_2_57(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_57()\n@@ -387,9 +458,13 @@ int test2_57()\n     sink_2_57(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_57(va);\t\t// { dg-error \"lvalue\" }\n     sink_2_57(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 460 }\n     sink_2_57(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 462 }\n     sink_2_57(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 464 }\n     sink_2_57(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 466 }\n     return 0;\n }\n \n@@ -408,7 +483,7 @@ int test2_58()\n     sink_2_58(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-six   sink_2_67(const          A&&);  // { dg-message \"candidate|argument\" }\n+six   sink_2_67(const          A&&);  // { dg-message \"note|argument\" }\n seven sink_2_67(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_67()\n@@ -418,11 +493,15 @@ int test2_67()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_67(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 495 }\n     sink_2_67(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_67(va);\t     // { dg-error \"lvalue\" }\n     sink_2_67(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 499 }\n     sink_2_67(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 501 }\n     sink_2_67(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 503 }\n     return 0;\n }\n "}, {"sha": "637716f9b44c050086f5147e9a170bc8db06025f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3n.C", "status": "modified", "additions": 186, "deletions": 81, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,9 +30,9 @@ const volatile A cv_source();\n \n // 3 at a time\n \n-one   sink_3_123(               A&);  // { dg-message \"candidates\" }\n-two   sink_3_123(const          A&);  // { dg-message \"note\" }\n-three sink_3_123(volatile       A&);  // { dg-message \"note\" }\n+one   sink_3_123(               A&);  // { dg-message \"one sink_3_123|no known conversion\" }\n+two   sink_3_123(const          A&);  // { dg-message \"two sink_3_123|no known conversion\" }\n+three sink_3_123(volatile       A&);  // { dg-message \"three sink_3_123|no known conversion\" }\n \n int test3_123()\n {\n@@ -41,18 +41,21 @@ int test3_123()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_123(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 43 }\n     sink_3_123(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 45 }\n     sink_3_123(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 47 }\n     return 0;\n }\n \n-one   sink_3_125(               A&);  // { dg-message \"candidates\" }\n-two   sink_3_125(const          A&);  // { dg-message \"note\" }\n-five  sink_3_125(               A&&);  // { dg-message \"note\" }\n+one   sink_3_125(               A&);  // { dg-message \"one sink_3_125|no known conversion\" }\n+two   sink_3_125(const          A&);  // { dg-message \"two sink_3_125|no known conversion\" }\n+five  sink_3_125(               A&&);  // { dg-message \"five sink_3_125|no known conversion\" }\n \n-one   sink_3_124(               A&);  // { dg-message \"candidates\" }\n-two   sink_3_124(const          A&);  // { dg-message \"note\" }\n-four  sink_3_124(const volatile A&);  // { dg-message \"note\" }\n+one   sink_3_124(               A&);  // { dg-message \"one sink_3_124|no known conversion\" }\n+two   sink_3_124(const          A&);  // { dg-message \"two sink_3_124|no known conversion\" }\n+four  sink_3_124(const volatile A&);  // { dg-message \"four sink_3_124|no known conversion\" }\n \n int test3_124()\n {\n@@ -61,7 +64,9 @@ int test3_124()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_124(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 66 }\n     sink_3_124(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 68 }\n     return 0;\n }\n \n@@ -72,15 +77,19 @@ int test3_125()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_125(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 79 }\n     sink_3_125(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 81 }\n     sink_3_125(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 83 }\n     sink_3_125(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 85 }\n     return 0;\n }\n \n-one   sink_3_126(               A&);  // { dg-message \"candidates\" }\n-two   sink_3_126(const          A&);  // { dg-message \"note\" }\n-six   sink_3_126(const          A&&);  // { dg-message \"note\" }\n+one   sink_3_126(               A&);  // { dg-message \"one sink_3_126|no known conversion\" }\n+two   sink_3_126(const          A&);  // { dg-message \"two sink_3_126|no known conversion\" }\n+six   sink_3_126(const          A&&);  // { dg-message \"six sink_3_126|no known conversion\" }\n \n int test3_126()\n {\n@@ -89,15 +98,19 @@ int test3_126()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_126(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 100 }\n     sink_3_126(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 102 }\n     sink_3_126(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 104 }\n     sink_3_126(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 106 }\n     return 0;\n }\n \n-one   sink_3_127(               A&);  // { dg-message \"candidates\" }\n-two   sink_3_127(const          A&);  // { dg-message \"note\" }\n-seven sink_3_127(volatile       A&&);  // { dg-message \"\" }\n+one   sink_3_127(               A&);  // { dg-message \"one sink_3_127|no known conversion\" }\n+two   sink_3_127(const          A&);  // { dg-message \"two sink_3_127|no known conversion\" }\n+seven sink_3_127(volatile       A&&);  // { dg-message \"seven sink_3_127|no known conversion\" }\n \n int test3_127()\n {\n@@ -107,7 +120,9 @@ int test3_127()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_127(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_127(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 122 }\n     sink_3_127(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 124 }\n     return 0;\n }\n \n@@ -126,9 +141,9 @@ int test3_128()\n     sink_3_128(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-one   sink_3_134(               A&);  // { dg-message \"candidates\" }\n-three sink_3_134(volatile       A&);  // { dg-message \"note\" }\n-four  sink_3_134(const volatile A&);  // { dg-message \"note\" }\n+one   sink_3_134(               A&);  // { dg-message \"one sink_3_134|no known conversion\" }\n+three sink_3_134(volatile       A&);  // { dg-message \"three sink_3_134|no known conversion\" }\n+four  sink_3_134(const volatile A&);  // { dg-message \"four sink_3_134|no known conversion\" }\n \n int test3_134()\n {\n@@ -137,15 +152,19 @@ int test3_134()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_134(source());     // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 154 }\n     sink_3_134(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 156 }\n     sink_3_134(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 158 }\n     sink_3_134(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 160 }\n     return 0;\n }\n \n-one   sink_3_135(               A&);  // { dg-message \"candidates\" }\n-three sink_3_135(volatile       A&);  // { dg-message \"note\" }\n-five  sink_3_135(               A&&);  // { dg-message \"note\" }\n+one   sink_3_135(               A&);  // { dg-message \"one sink_3_135|no known conversion\" }\n+three sink_3_135(volatile       A&);  // { dg-message \"three sink_3_135|no known conversion\" }\n+five  sink_3_135(               A&&);  // { dg-message \"five sink_3_135|no known conversion\" }\n \n int test3_135()\n {\n@@ -154,14 +173,19 @@ int test3_135()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_135(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 175 }\n     sink_3_135(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 177 }\n     sink_3_135(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 179 }\n     sink_3_135(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 181 }\n     sink_3_135(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 183 }\n     return 0;\n }\n \n-one   sink_3_136(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_136(               A&);  // { dg-message \"one sink_3_136|no known conversion\" }\n three sink_3_136(volatile       A&);  // { dg-message \"note\" }\n six   sink_3_136(const          A&&);  // { dg-message \"\" }\n \n@@ -173,12 +197,15 @@ int test3_136()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_136(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_136(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 199 }\n     sink_3_136(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 201 }\n     sink_3_136(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 203 }\n     return 0;\n }\n \n-one   sink_3_137(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_137(               A&);  // { dg-message \"one sink_3_137|no known conversion\" }\n three sink_3_137(volatile       A&);  // { dg-message \"note\" }\n seven sink_3_137(volatile       A&&);  // { dg-message \"note\" }\n \n@@ -189,9 +216,13 @@ int test3_137()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_137(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 218 }\n     sink_3_137(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 220 }\n     sink_3_137(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 222 }\n     sink_3_137(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 224 }\n     return 0;\n }\n \n@@ -210,7 +241,7 @@ int test3_138()\n     return 0;\n }\n \n-one   sink_3_145(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_145(               A&);  // { dg-message \"one sink_3_145|no known conversion\" }\n four  sink_3_145(const volatile A&);  // { dg-message \"note\" }\n five  sink_3_145(               A&&);  // { dg-message \"note\" }\n \n@@ -221,12 +252,15 @@ int test3_145()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_145(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 254 }\n     sink_3_145(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 256 }\n     sink_3_145(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 258 }\n     return 0;\n }\n \n-one   sink_3_146(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_146(               A&);  // { dg-message \"one sink_3_146|no known conversion\" }\n four  sink_3_146(const volatile A&);  // { dg-message \"note\" }\n six   sink_3_146(const          A&&);  // { dg-message \"note\" }\n \n@@ -237,11 +271,13 @@ int test3_146()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_146(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 273 }\n     sink_3_146(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 275 }\n     return 0;\n }\n \n-one   sink_3_147(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_147(               A&);  // { dg-message \"one sink_3_147|no known conversion\" }\n four  sink_3_147(const volatile A&);  // { dg-message \"note\" }\n seven sink_3_147(volatile       A&&);  // { dg-message \"note\" }\n \n@@ -252,11 +288,13 @@ int test3_147()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_147(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 290 }\n     sink_3_147(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 292 }\n     return 0;\n }\n \n-one   sink_3_156(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_156(               A&);  // { dg-message \"one sink_3_156|no known conversion\" }\n five  sink_3_156(               A&&);  // { dg-message \"note\" }\n six   sink_3_156(const          A&&);  // { dg-message \"\" }\n \n@@ -268,13 +306,17 @@ int test3_156()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_156(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_156(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 308 }\n     sink_3_156(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 310 }\n     sink_3_156(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 312 }\n     sink_3_156(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 314 }\n     return 0;\n }\n \n-one   sink_3_157(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_157(               A&);  // { dg-message \"one sink_3_157|no known conversion\" }\n five  sink_3_157(               A&&);  // { dg-message \"note\" }\n seven sink_3_157(volatile       A&&);  // { dg-message \"\" }\n \n@@ -285,10 +327,14 @@ int test3_157()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_157(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 329 }\n     sink_3_157(va);\t      // { dg-error \"lvalue\" }\n     sink_3_157(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 332 }\n     sink_3_157(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 334 }\n     sink_3_157(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 336 }\n     return 0;\n }\n \n@@ -308,7 +354,7 @@ int test3_158()\n     return 0;\n }\n \n-one   sink_3_167(               A&);  // { dg-message \"candidates\" }\n+one   sink_3_167(               A&);  // { dg-message \"one sink_3_167|no known conversion\" }\n six   sink_3_167(const          A&&);  // { dg-message \"\" }\n seven sink_3_167(volatile       A&&);  // { dg-message \"\" }\n \n@@ -321,8 +367,11 @@ int test3_167()\n     sink_3_167(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_167(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_167(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 369 }\n     sink_3_167(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 371 }\n     sink_3_167(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 373 }\n     return 0;\n }\n \n@@ -358,7 +407,7 @@ int test3_178()\n     return 0;\n }\n \n-two   sink_3_234(const          A&);  // { dg-message \"candidates\" }\n+two   sink_3_234(const          A&);  // { dg-message \"two sink_3_234|no known conversion\" }\n three sink_3_234(volatile       A&);  // { dg-message \"note\" }\n four  sink_3_234(const volatile A&);  // { dg-message \"note\" }\n \n@@ -369,12 +418,15 @@ int test3_234()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_234(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 420 }\n     sink_3_234(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 422 }\n     sink_3_234(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 424 }\n     return 0;\n }\n \n-two   sink_3_235(const          A&);  // { dg-message \"candidates\" }\n+two   sink_3_235(const          A&);  // { dg-message \"two sink_3_235|no known conversion\" }\n three sink_3_235(volatile       A&);  // { dg-message \"note\" }\n five  sink_3_235(               A&&);  // { dg-message \"note\" }\n \n@@ -385,13 +437,17 @@ int test3_235()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_235(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 439 }\n     sink_3_235(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 441 }\n     sink_3_235(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 443 }\n     sink_3_235(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 445 }\n     return 0;\n }\n \n-two   sink_3_236(const          A&);  // { dg-message \"candidates\" }\n+two   sink_3_236(const          A&);  // { dg-message \"two sink_3_236|no known conversion\" }\n three sink_3_236(volatile       A&);  // { dg-message \"note\" }\n six   sink_3_236(const          A&&);  // { dg-message \"note\" }\n \n@@ -402,13 +458,17 @@ int test3_236()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_236(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 460 }\n     sink_3_236(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 462 }\n     sink_3_236(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 464 }\n     sink_3_236(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 466 }\n     return 0;\n }\n \n-two   sink_3_237(const          A&);  // { dg-message \"candidates\" }\n+two   sink_3_237(const          A&);  // { dg-message \"two sink_3_237|no known conversion\" }\n three sink_3_237(volatile       A&);  // { dg-message \"note\" }\n seven sink_3_237(volatile       A&&);  // { dg-message \"note\" }\n \n@@ -419,14 +479,17 @@ int test3_237()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_237(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 481 }\n     sink_3_237(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 483 }\n     sink_3_237(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 485 }\n     return 0;\n }\n \n-two   sink_3_238(const          A&);  // { dg-message \"candidates\" }\n-three sink_3_238(volatile       A&);  // { dg-message \"note\" }\n-eight sink_3_238(const volatile A&&);  // { dg-message \"\" }\n+two   sink_3_238(const          A&);  // { dg-message \"two sink_3_238|no known conversion\" }\n+three sink_3_238(volatile       A&);  // { dg-message \"three sink_3_238|no known conversion\" }\n+eight sink_3_238(const volatile A&&);  // { dg-message \"eight sink_3_238|no known conversion\" }\n \n int test3_238()\n {\n@@ -435,13 +498,14 @@ int test3_238()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_238(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 500 }\n     sink_3_238(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n-two   sink_3_245(const          A&);  // { dg-message \"candidates\" }\n-four  sink_3_245(const volatile A&);  // { dg-message \"note\" }\n-five  sink_3_245(               A&&);  // { dg-message \"note\" }\n+two   sink_3_245(const          A&);  // { dg-message \"two sink_3_245|no known conversion\" }\n+four  sink_3_245(const volatile A&);  // { dg-message \"four sink_3_245|no known conversion\" }\n+five  sink_3_245(               A&&);  // { dg-message \"five sink_3_245|no known conversion\" }\n \n int test3_245()\n {\n@@ -450,13 +514,15 @@ int test3_245()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_245(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 516 }\n     sink_3_245(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 518 }\n     return 0;\n }\n \n-two   sink_3_246(const          A&);  // { dg-message \"candidates\" }\n-four  sink_3_246(const volatile A&);  // { dg-message \"note\" }\n-six   sink_3_246(const          A&&);  // { dg-message \"note\" }\n+two   sink_3_246(const          A&);  // { dg-message \"two sink_3_246|no known conversion\" }\n+four  sink_3_246(const volatile A&);  // { dg-message \"four sink_3_246|no known conversion\" }\n+six   sink_3_246(const          A&&);  // { dg-message \"six sink_3_246|no known conversion\" }\n \n int test3_246()\n {\n@@ -465,13 +531,15 @@ int test3_246()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_246(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 533 }\n     sink_3_246(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 535 }\n     return 0;\n }\n \n-two   sink_3_247(const          A&);  // { dg-message \"candidates\" }\n-four  sink_3_247(const volatile A&);  // { dg-message \"note\" }\n-seven sink_3_247(volatile       A&&);  // { dg-message \"note\" }\n+two   sink_3_247(const          A&);  // { dg-message \"two sink_3_247|no known conversion\" }\n+four  sink_3_247(const volatile A&);  // { dg-message \"four sink_3_247|no known conversion\" }\n+seven sink_3_247(volatile       A&&);  // { dg-message \"seven sink_3_247|no known conversion\" }\n \n int test3_247()\n {\n@@ -480,12 +548,13 @@ int test3_247()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_247(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 550 }\n     return 0;\n }\n \n-two   sink_3_256(const          A&);  // { dg-message \"candidates\" }\n-five  sink_3_256(               A&&);  // { dg-message \"note\" }\n-six   sink_3_256(const          A&&);  // { dg-message \"note\" }\n+two   sink_3_256(const          A&);  // { dg-message \"two sink_3_256|no known conversion\" }\n+five  sink_3_256(               A&&);  // { dg-message \"five sink_3_256|no known conversion\" }\n+six   sink_3_256(const          A&&);  // { dg-message \"six sink_3_256|no known conversion\" }\n \n int test3_256()\n {\n@@ -494,15 +563,19 @@ int test3_256()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_256(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 565 }\n     sink_3_256(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 567 }\n     sink_3_256(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 569 }\n     sink_3_256(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 571 }\n     return 0;\n }\n \n-two   sink_3_257(const          A&);  // { dg-message \"candidates\" }\n-five  sink_3_257(               A&&);  // { dg-message \"note\" }\n-seven sink_3_257(volatile       A&&);  // { dg-message \"\" }\n+two   sink_3_257(const          A&);  // { dg-message \"two sink_3_257|no known conversion\" }\n+five  sink_3_257(               A&&);  // { dg-message \"five sink_3_257|no known conversion\" }\n+seven sink_3_257(volatile       A&&);  // { dg-message \"seven sink_3_257|no known conversion\" }\n \n int test3_257()\n {\n@@ -512,7 +585,9 @@ int test3_257()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_257(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_257(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 587 }\n     sink_3_257(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 589 }\n     return 0;\n }\n \n@@ -531,9 +606,9 @@ int test3_258()\n     return 0;\n }\n \n-two   sink_3_267(const          A&);  // { dg-message \"candidates\" }\n-six   sink_3_267(const          A&&);  // { dg-message \"note\" }\n-seven sink_3_267(volatile       A&&);  // { dg-message \"\" }\n+two   sink_3_267(const          A&);  // { dg-message \"two sink_3_267|no known conversion\" }\n+six   sink_3_267(const          A&&);  // { dg-message \"six sink_3_267|no known conversion\" }\n+seven sink_3_267(volatile       A&&);  // { dg-message \"seven sink_3_267|no known conversion\" }\n \n int test3_267()\n {\n@@ -543,8 +618,11 @@ int test3_267()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_267(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_267(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 620 }\n     sink_3_267(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 622 }\n     sink_3_267(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 624 }\n     return 0;\n }\n \n@@ -578,9 +656,9 @@ int test3_278()\n     return 0;\n }\n \n-three sink_3_345(volatile       A&);  // { dg-message \"candidates\" }\n-four  sink_3_345(const volatile A&);  // { dg-message \"note\" }\n-five  sink_3_345(               A&&);  // { dg-message \"note\" }\n+three sink_3_345(volatile       A&);  // { dg-message \"three sink_3_345|no known conversion\" }\n+four  sink_3_345(const volatile A&);  // { dg-message \"four sink_3_345|no known conversion\" }\n+five  sink_3_345(               A&&);  // { dg-message \"five sink_3_345|no known conversion\" }\n \n int test3_345()\n {\n@@ -589,14 +667,17 @@ int test3_345()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_345(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 669 }\n     sink_3_345(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 671 }\n     sink_3_345(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 673 }\n     return 0;\n }\n \n-three sink_3_346(volatile       A&);  // { dg-message \"candidates\" }\n-four  sink_3_346(const volatile A&);  // { dg-message \"note\" }\n-six   sink_3_346(const          A&&);  // { dg-message \"note\" }\n+three sink_3_346(volatile       A&);  // { dg-message \"three sink_3_346|no known conversion\" }\n+four  sink_3_346(const volatile A&);  // { dg-message \"four sink_3_346|no known conversion\" }\n+six   sink_3_346(const          A&&);  // { dg-message \"six sink_3_346|no known conversion\" }\n \n int test3_346()\n {\n@@ -605,13 +686,15 @@ int test3_346()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_346(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 688 }\n     sink_3_346(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 690 }\n     return 0;\n }\n \n-three sink_3_347(volatile       A&);  // { dg-message \"candidates\" }\n-four  sink_3_347(const volatile A&);  // { dg-message \"note\" }\n-seven sink_3_347(volatile       A&&);  // { dg-message \"note\" }\n+three sink_3_347(volatile       A&);  // { dg-message \"three sink_3_347|no known conversion\" }\n+four  sink_3_347(const volatile A&);  // { dg-message \"four sink_3_347|no known conversion\" }\n+seven sink_3_347(volatile       A&&);  // { dg-message \"seven sink_3_347|no known conversion\" }\n \n int test3_347()\n {\n@@ -620,13 +703,15 @@ int test3_347()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_347(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 705 }\n     sink_3_347(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 707 }\n     return 0;\n }\n \n-three sink_3_356(volatile       A&);  // { dg-message \"candidates\" }\n-five  sink_3_356(               A&&);  // { dg-message \"note\" }\n-six   sink_3_356(const          A&&);  // { dg-message \"\" }\n+three sink_3_356(volatile       A&);  // { dg-message \"three sink_3_356|no known conversion\" }\n+five  sink_3_356(               A&&);  // { dg-message \"five sink_3_356|no known conversion\" }\n+six   sink_3_356(const          A&&);  // { dg-message \"six sink_3_356|no known conversion\" }\n \n int test3_356()\n {\n@@ -636,14 +721,17 @@ int test3_356()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_356(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 723 }\n     sink_3_356(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 725 }\n     sink_3_356(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 727 }\n     return 0;\n }\n \n-three sink_3_357(volatile       A&);  // { dg-message \"candidates\" }\n-five  sink_3_357(               A&&);  // { dg-message \"note\" }\n-seven sink_3_357(volatile       A&&);  // { dg-message \"note\" }\n+three sink_3_357(volatile       A&);  // { dg-message \"three sink_3_357|no known conversion\" }\n+five  sink_3_357(               A&&);  // { dg-message \"five sink_3_357|no known conversion\" }\n+seven sink_3_357(volatile       A&&);  // { dg-message \"seven sink_3_357|no known conversion\" }\n \n int test3_357()\n {\n@@ -652,9 +740,13 @@ int test3_357()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_357(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 742 }\n     sink_3_357(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 744 }\n     sink_3_357(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 746 }\n     sink_3_357(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 748 }\n     return 0;\n }\n \n@@ -673,9 +765,9 @@ int test3_358()\n     return 0;\n }\n \n-three sink_3_367(volatile       A&);  // { dg-message \"candidates\" }\n-six   sink_3_367(const          A&&);  // { dg-message \"\" }\n-seven sink_3_367(volatile       A&&);  // { dg-message \"note\" }\n+three sink_3_367(volatile       A&);  // { dg-message \"three sink_3_367|no known conversion\" }\n+six   sink_3_367(const          A&&);  // { dg-message \"six sink_3_367|no known conversion\" }\n+seven sink_3_367(volatile       A&&);  // { dg-message \"seven sink_3_367|no known conversion\" }\n \n int test3_367()\n {\n@@ -685,8 +777,11 @@ int test3_367()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_367(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 779 }\n     sink_3_367(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 781 }\n     sink_3_367(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 783 }\n     return 0;\n }\n \n@@ -720,7 +815,7 @@ int test3_378()\n     return 0;\n }\n \n-four  sink_3_456(const volatile A&);  // { dg-message \"candidates\" }\n+four  sink_3_456(const volatile A&);  // { dg-message \"note\" }\n five  sink_3_456(               A&&);  // { dg-message \"note\" }\n six   sink_3_456(const          A&&);  // { dg-message \"note\" }\n \n@@ -731,11 +826,13 @@ int test3_456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 828 }\n     sink_3_456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 830 }\n     return 0;\n }\n \n-four  sink_3_457(const volatile A&);  // { dg-message \"candidates\" }\n+four  sink_3_457(const volatile A&);  // { dg-message \"note\" }\n five  sink_3_457(               A&&);  // { dg-message \"note\" }\n seven sink_3_457(volatile       A&&);  // { dg-message \"note\" }\n \n@@ -746,11 +843,13 @@ int test3_457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_457(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 845 }\n     sink_3_457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 847 }\n     return 0;\n }\n \n-four  sink_3_467(const volatile A&);  // { dg-message \"candidates\" }\n+four  sink_3_467(const volatile A&);  // { dg-message \"note\" }\n six   sink_3_467(const          A&&);  // { dg-message \"note\" }\n seven sink_3_467(volatile       A&&);  // { dg-message \"note\" }\n \n@@ -761,13 +860,15 @@ int test3_467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 862 }\n     sink_3_467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 864 }\n     return 0;\n }\n \n-five  sink_3_567(               A&&);  // { dg-message \"\" }\n-six   sink_3_567(const          A&&);  // { dg-message \"\" }\n-seven sink_3_567(volatile       A&&);  // { dg-message \"\" }\n+five  sink_3_567(               A&&);  // { dg-message \"five sink_3_567|no known conversion\" }\n+six   sink_3_567(const          A&&);  // { dg-message \"six sink_3_567|no known conversion\" }\n+seven sink_3_567(volatile       A&&);  // { dg-message \"seven sink_3_567|no known conversion\" }\n \n int test3_567()\n {\n@@ -779,7 +880,9 @@ int test3_567()\n     sink_3_567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_567(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 882 }\n     sink_3_567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 884 }\n     return 0;\n }\n \n@@ -817,9 +920,9 @@ int test3_578()\n     return 0;\n }\n \n-six   sink_3_678(const          A&&);  // { dg-message \"\" }\n-seven sink_3_678(volatile       A&&);  // { dg-message \"\" }\n-eight sink_3_678(const volatile A&&);  // { dg-message \"\" }\n+six   sink_3_678(const          A&&);  // { dg-message \"six sink_3_678|no known conversion\" }\n+seven sink_3_678(volatile       A&&);  // { dg-message \"seven sink_3_678|no known conversion\" }\n+eight sink_3_678(const volatile A&&);  // { dg-message \"eight sink_3_678|no known conversion\" }\n \n int test3_678()\n {\n@@ -828,10 +931,12 @@ int test3_678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_678(a);          // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 933 }\n     sink_3_678(ca);\t    // { dg-error \"lvalue\" }\n     sink_3_678(va);\t    // { dg-error \"lvalue\" }\n     sink_3_678(cva);\t    // { dg-error \"lvalue\" }\n     sink_3_678(source());   // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 938 }\n     return 0;\n }\n "}, {"sha": "daff30798516ec4c69b0ffb6d74a257bbb83a341", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4n.C", "status": "modified", "additions": 133, "deletions": 41, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 4 at a time\n \n-one   sink_4_1234(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1234(               A&);  // { dg-message \"one sink_4_1234|no known conversion\" }\n two   sink_4_1234(const          A&);  // { dg-message \"note\" }\n three sink_4_1234(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_1234(const volatile A&);  // { dg-message \"note\" }\n@@ -42,11 +42,13 @@ int test4_1234()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1234(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 44 }\n     sink_4_1234(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 46 }\n     return 0;\n }\n \n-one   sink_4_1235(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1235(               A&);  // { dg-message \"one sink_4_1235|no known conversion\" }\n two   sink_4_1235(const          A&);  // { dg-message \"note\" }\n three sink_4_1235(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_1235(               A&&);  // { dg-message \"note\" }\n@@ -58,12 +60,15 @@ int test4_1235()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1235(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 62 }\n     sink_4_1235(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 64 }\n     sink_4_1235(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 66 }\n     return 0;\n }\n \n-one   sink_4_1236(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1236(               A&);  // { dg-message \"one sink_4_1236|no known conversion\" }\n two   sink_4_1236(const          A&);  // { dg-message \"note\" }\n three sink_4_1236(volatile       A&);  // { dg-message \"note\" }\n six   sink_4_1236(const          A&&);  // { dg-message \"note\" }\n@@ -75,12 +80,15 @@ int test4_1236()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1236(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 82 }\n     sink_4_1236(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 84 }\n     sink_4_1236(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 86 }\n     return 0;\n }\n \n-one   sink_4_1237(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1237(               A&);  // { dg-message \"one sink_4_1237|no known conversion\" }\n two   sink_4_1237(const          A&);  // { dg-message \"note\" }\n three sink_4_1237(volatile       A&);  // { dg-message \"note\" }\n seven sink_4_1237(volatile       A&&);  // { dg-message \"note\" }\n@@ -92,7 +100,9 @@ int test4_1237()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1237(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 102 }\n     sink_4_1237(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 104 }\n     return 0;\n }\n \n@@ -111,7 +121,7 @@ int test4_1238()\n     return 0;\n }\n \n-one   sink_4_1245(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1245(               A&);  // { dg-message \"one sink_4_1245|no known conversion\" }\n two   sink_4_1245(const          A&);  // { dg-message \"note\" }\n four  sink_4_1245(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_1245(               A&&);  // { dg-message \"note\" }\n@@ -123,11 +133,13 @@ int test4_1245()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1245(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 135 }\n     sink_4_1245(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 137 }\n     return 0;\n }\n \n-one   sink_4_1246(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1246(               A&);  // { dg-message \"one sink_4_1246|no known conversion\" }\n two   sink_4_1246(const          A&);  // { dg-message \"note\" }\n four  sink_4_1246(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_1246(const          A&&);  // { dg-message \"note\" }\n@@ -139,11 +151,13 @@ int test4_1246()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1246(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 153 }\n     sink_4_1246(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 155 }\n     return 0;\n }\n \n-one   sink_4_1247(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1247(               A&);  // { dg-message \"one sink_4_1247|no known conversion\" }\n two   sink_4_1247(const          A&);  // { dg-message \"note\" }\n four  sink_4_1247(const volatile A&);  // { dg-message \"note\" }\n seven sink_4_1247(volatile       A&&);  // { dg-message \"note\" }\n@@ -155,10 +169,11 @@ int test4_1247()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1247(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 171 }\n     return 0;\n }\n \n-one   sink_4_1256(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1256(               A&);  // { dg-message \"one sink_4_1256|no known conversion\" }\n two   sink_4_1256(const          A&);  // { dg-message \"note\" }\n five  sink_4_1256(               A&&);  // { dg-message \"note\" }\n six   sink_4_1256(const          A&&);  // { dg-message \"note\" }\n@@ -170,13 +185,17 @@ int test4_1256()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1256(va);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 187 }\n     sink_4_1256(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 189 }\n     sink_4_1256(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 191 }\n     sink_4_1256(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 193 }\n     return 0;\n }\n \n-one   sink_4_1257(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1257(               A&);  // { dg-message \"one sink_4_1257|no known conversion\" }\n two   sink_4_1257(const          A&);  // { dg-message \"note\" }\n five  sink_4_1257(               A&&);  // { dg-message \"note\" }\n seven sink_4_1257(volatile       A&&);  // { dg-message \"\" }\n@@ -189,7 +208,9 @@ int test4_1257()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1257(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1257(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 210 }\n     sink_4_1257(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 212 }\n     return 0;\n }\n \n@@ -209,7 +230,7 @@ int test4_1258()\n     return 0;\n }\n \n-one   sink_4_1267(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1267(               A&);  // { dg-message \"one sink_4_1267|no known conversion\" }\n two   sink_4_1267(const          A&);  // { dg-message \"note\" }\n six   sink_4_1267(const          A&&);  // { dg-message \"note\" }\n seven sink_4_1267(volatile       A&&);  // { dg-message \"\" }\n@@ -222,8 +243,11 @@ int test4_1267()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1267(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1267(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 245 }\n     sink_4_1267(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 247 }\n     sink_4_1267(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 249 }\n     return 0;\n }\n \n@@ -259,7 +283,7 @@ int test4_1278()\n     return 0;\n }\n \n-one   sink_4_1345(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1345(               A&);  // { dg-message \"one sink_4_1345|no known conversion\" }\n three sink_4_1345(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_1345(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_1345(               A&&);  // { dg-message \"note\" }\n@@ -271,12 +295,15 @@ int test4_1345()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1345(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 297 }\n     sink_4_1345(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 299 }\n     sink_4_1345(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 301 }\n     return 0;\n }\n \n-one   sink_4_1346(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1346(               A&);  // { dg-message \"one sink_4_1346|no known conversion\" }\n three sink_4_1346(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_1346(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_1346(const          A&&);  // { dg-message \"note\" }\n@@ -288,11 +315,13 @@ int test4_1346()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1346(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 317 }\n     sink_4_1346(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 319 }\n     return 0;\n }\n \n-one   sink_4_1347(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1347(               A&);  // { dg-message \"one sink_4_1347|no known conversion\" }\n three sink_4_1347(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_1347(const volatile A&);  // { dg-message \"note\" }\n seven sink_4_1347(volatile       A&&);  // { dg-message \"note\" }\n@@ -304,11 +333,13 @@ int test4_1347()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1347(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 335 }\n     sink_4_1347(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 337 }\n     return 0;\n }\n \n-one   sink_4_1356(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1356(               A&);  // { dg-message \"one sink_4_1356|no known conversion\" }\n three sink_4_1356(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_1356(               A&&);  // { dg-message \"note\" }\n six   sink_4_1356(const          A&&);  // { dg-message \"\" }\n@@ -321,12 +352,15 @@ int test4_1356()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1356(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 354 }\n     sink_4_1356(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 356 }\n     sink_4_1356(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 358 }\n     return 0;\n }\n \n-one   sink_4_1357(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1357(               A&);  // { dg-message \"one sink_4_1357|no known conversion\" }\n three sink_4_1357(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_1357(               A&&);  // { dg-message \"note\" }\n seven sink_4_1357(volatile       A&&);  // { dg-message \"note\" }\n@@ -338,9 +372,13 @@ int test4_1357()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1357(ca);           // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 374 }\n     sink_4_1357(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 376 }\n     sink_4_1357(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 378 }\n     sink_4_1357(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 380 }\n     return 0;\n }\n \n@@ -360,7 +398,7 @@ int test4_1358()\n     return 0;\n }\n \n-one   sink_4_1367(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1367(               A&);  // { dg-message \"one sink_4_1367|no known conversion\" }\n three sink_4_1367(volatile       A&);  // { dg-message \"note\" }\n six   sink_4_1367(const          A&&);  // { dg-message \"\" }\n seven sink_4_1367(volatile       A&&);  // { dg-message \"note\" }\n@@ -373,8 +411,11 @@ int test4_1367()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1367(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 413 }\n     sink_4_1367(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 415 }\n     sink_4_1367(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 417 }\n     return 0;\n }\n \n@@ -410,7 +451,7 @@ int test4_1378()\n     return 0;\n }\n \n-one   sink_4_1456(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1456(               A&);  // { dg-message \"one sink_4_1456|no known conversion\" }\n four  sink_4_1456(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_1456(               A&&);  // { dg-message \"note\" }\n six   sink_4_1456(const          A&&);  // { dg-message \"note\" }\n@@ -422,11 +463,13 @@ int test4_1456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 465 }\n     sink_4_1456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 467 }\n     return 0;\n }\n \n-one   sink_4_1457(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1457(               A&);  // { dg-message \"one sink_4_1457|no known conversion\" }\n four  sink_4_1457(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_1457(               A&&);  // { dg-message \"note\" }\n seven sink_4_1457(volatile       A&&);  // { dg-message \"note\" }\n@@ -438,11 +481,13 @@ int test4_1457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1457(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 483 }\n     sink_4_1457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 485 }\n     return 0;\n }\n \n-one   sink_4_1467(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1467(               A&);  // { dg-message \"one sink_4_1467|no known conversion\" }\n four  sink_4_1467(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_1467(const          A&&);  // { dg-message \"note\" }\n seven sink_4_1467(volatile       A&&);  // { dg-message \"note\" }\n@@ -454,11 +499,13 @@ int test4_1467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 501 }\n     sink_4_1467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 503 }\n     return 0;\n }\n \n-one   sink_4_1567(               A&);  // { dg-message \"candidates\" }\n+one   sink_4_1567(               A&);  // { dg-message \"one sink_4_1567|no known conversion\" }\n five  sink_4_1567(               A&&);  // { dg-message \"note\" }\n six   sink_4_1567(const          A&&);  // { dg-message \"\" }\n seven sink_4_1567(volatile       A&&);  // { dg-message \"\" }\n@@ -472,7 +519,9 @@ int test4_1567()\n     sink_4_1567(ca);\t       // { dg-error \"lvalue\" }\n     sink_4_1567(va);\t       // { dg-error \"lvalue\" }\n     sink_4_1567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 521 }\n     sink_4_1567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 523 }\n     return 0;\n }\n \n@@ -525,10 +574,11 @@ int test4_1678()\n     sink_4_1678(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_4_1678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 576 }\n     return 0;\n }\n \n-two   sink_4_2345(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2345(const          A&);  // { dg-message \"two sink_4_2345|no known conversion\" }\n three sink_4_2345(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_2345(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_2345(               A&&);  // { dg-message \"note\" }\n@@ -540,12 +590,15 @@ int test4_2345()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2345(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 592 }\n     sink_4_2345(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 594 }\n     sink_4_2345(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 596 }\n     return 0;\n }\n \n-two   sink_4_2346(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2346(const          A&);  // { dg-message \"two sink_4_2346|no known conversion\" }\n three sink_4_2346(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_2346(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_2346(const          A&&);  // { dg-message \"note\" }\n@@ -557,12 +610,15 @@ int test4_2346()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2346(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 612 }\n     sink_4_2346(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 614 }\n     sink_4_2346(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 616 }\n     return 0;\n }\n \n-two   sink_4_2347(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2347(const          A&);  // { dg-message \"two sink_4_2347|no known conversion\" }\n three sink_4_2347(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_2347(const volatile A&);  // { dg-message \"note\" }\n seven sink_4_2347(volatile       A&&);  // { dg-message \"note\" }\n@@ -574,11 +630,13 @@ int test4_2347()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2347(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 632 }\n     sink_4_2347(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 634 }\n     return 0;\n }\n \n-two   sink_4_2348(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2348(const          A&);  // { dg-message \"note\" }\n three sink_4_2348(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_2348(const volatile A&);  // { dg-message \"note\" }\n eight sink_4_2348(const volatile A&&);  // { dg-message \"note\" }\n@@ -590,10 +648,11 @@ int test4_2348()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2348(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 650 }\n     return 0;\n }\n \n-two   sink_4_2356(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2356(const          A&);  // { dg-message \"two sink_4_2356|no known conversion\" }\n three sink_4_2356(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_2356(               A&&);  // { dg-message \"note\" }\n six   sink_4_2356(const          A&&);  // { dg-message \"note\" }\n@@ -605,13 +664,17 @@ int test4_2356()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2356(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 666 }\n     sink_4_2356(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 668 }\n     sink_4_2356(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 670 }\n     sink_4_2356(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 672 }\n     return 0;\n }\n \n-two   sink_4_2357(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2357(const          A&);  // { dg-message \"two sink_4_2357|no known conversion\" }\n three sink_4_2357(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_2357(               A&&);  // { dg-message \"note\" }\n seven sink_4_2357(volatile       A&&);  // { dg-message \"note\" }\n@@ -623,12 +686,15 @@ int test4_2357()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2357(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 688 }\n     sink_4_2357(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 690 }\n     sink_4_2357(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 692 }\n     return 0;\n }\n \n-two   sink_4_2358(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2358(const          A&);  // { dg-message \"note\" }\n three sink_4_2358(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_2358(               A&&);  // { dg-message \"note\" }\n eight sink_4_2358(const volatile A&&);  // { dg-message \"\" }\n@@ -640,11 +706,12 @@ int test4_2358()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2358(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 708 }\n     sink_4_2358(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n-two   sink_4_2367(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2367(const          A&);  // { dg-message \"two sink_4_2367|no known conversion\" }\n three sink_4_2367(volatile       A&);  // { dg-message \"note\" }\n six   sink_4_2367(const          A&&);  // { dg-message \"note\" }\n seven sink_4_2367(volatile       A&&);  // { dg-message \"note\" }\n@@ -656,13 +723,17 @@ int test4_2367()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2367(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 725 }\n     sink_4_2367(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 727 }\n     sink_4_2367(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 729 }\n     sink_4_2367(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 731 }\n     return 0;\n }\n \n-two   sink_4_2368(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2368(const          A&);  // { dg-message \"note\" }\n three sink_4_2368(volatile       A&);  // { dg-message \"note\" }\n six   sink_4_2368(const          A&&);  // { dg-message \"note\" }\n eight sink_4_2368(const volatile A&&);  // { dg-message \"\" }\n@@ -674,11 +745,12 @@ int test4_2368()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2368(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 747 }\n     sink_4_2368(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n-two   sink_4_2378(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2378(const          A&);  // { dg-message \"note\" }\n three sink_4_2378(volatile       A&);  // { dg-message \"note\" }\n seven sink_4_2378(volatile       A&&);  // { dg-message \"note\" }\n eight sink_4_2378(const volatile A&&);  // { dg-message \"\" }\n@@ -690,11 +762,12 @@ int test4_2378()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2378(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 764 }\n     sink_4_2378(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n-two   sink_4_2456(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2456(const          A&);  // { dg-message \"two sink_4_2456|no known conversion\" }\n four  sink_4_2456(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_2456(               A&&);  // { dg-message \"note\" }\n six   sink_4_2456(const          A&&);  // { dg-message \"note\" }\n@@ -706,11 +779,13 @@ int test4_2456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 781 }\n     sink_4_2456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 783 }\n     return 0;\n }\n \n-two   sink_4_2457(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2457(const          A&);  // { dg-message \"two sink_4_2457|no known conversion\" }\n four  sink_4_2457(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_2457(               A&&);  // { dg-message \"note\" }\n seven sink_4_2457(volatile       A&&);  // { dg-message \"note\" }\n@@ -722,10 +797,11 @@ int test4_2457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 799 }\n     return 0;\n }\n \n-two   sink_4_2467(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2467(const          A&);  // { dg-message \"two sink_4_2467|no known conversion\" }\n four  sink_4_2467(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_2467(const          A&&);  // { dg-message \"note\" }\n seven sink_4_2467(volatile       A&&);  // { dg-message \"note\" }\n@@ -737,11 +813,13 @@ int test4_2467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 815 }\n     sink_4_2467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 817 }\n     return 0;\n }\n \n-two   sink_4_2567(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2567(const          A&);  // { dg-message \"two sink_4_2567|no known conversion\" }\n five  sink_4_2567(               A&&);  // { dg-message \"note\" }\n six   sink_4_2567(const          A&&);  // { dg-message \"note\" }\n seven sink_4_2567(volatile       A&&);  // { dg-message \"\" }\n@@ -754,7 +832,9 @@ int test4_2567()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2567(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_2567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 834 }\n     sink_4_2567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 836 }\n     return 0;\n }\n \n@@ -790,7 +870,7 @@ int test4_2578()\n     return 0;\n }\n \n-two   sink_4_2678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_4_2678(const          A&);  // { dg-message \"note\" }\n six   sink_4_2678(const          A&&);  // { dg-message \"note\" }\n seven sink_4_2678(volatile       A&&);  // { dg-message \"\" }\n eight sink_4_2678(const volatile A&&);  // { dg-message \"\" }\n@@ -804,10 +884,11 @@ int test4_2678()\n     sink_4_2678(va); // { dg-error \"lvalue\" }\n     sink_4_2678(cva); // { dg-error \"lvalue\" }\n     sink_4_2678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 886 }\n     return 0;\n }\n \n-three sink_4_3456(volatile       A&);  // { dg-message \"candidates\" }\n+three sink_4_3456(volatile       A&);  // { dg-message \"three sink_4_3456|no known conversion\" }\n four  sink_4_3456(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_3456(               A&&);  // { dg-message \"note\" }\n six   sink_4_3456(const          A&&);  // { dg-message \"note\" }\n@@ -819,11 +900,13 @@ int test4_3456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 902 }\n     sink_4_3456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 904 }\n     return 0;\n }\n \n-three sink_4_3457(volatile       A&);  // { dg-message \"candidates\" }\n+three sink_4_3457(volatile       A&);  // { dg-message \"three sink_4_3457|no known conversion\" }\n four  sink_4_3457(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_3457(               A&&);  // { dg-message \"note\" }\n seven sink_4_3457(volatile       A&&);  // { dg-message \"note\" }\n@@ -835,11 +918,13 @@ int test4_3457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3457(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 920 }\n     sink_4_3457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 922 }\n     return 0;\n }\n \n-three sink_4_3467(volatile       A&);  // { dg-message \"candidates\" }\n+three sink_4_3467(volatile       A&);  // { dg-message \"three sink_4_3467|no known conversion\" }\n four  sink_4_3467(const volatile A&);  // { dg-message \"note\" }\n six   sink_4_3467(const          A&&);  // { dg-message \"note\" }\n seven sink_4_3467(volatile       A&&);  // { dg-message \"note\" }\n@@ -851,11 +936,13 @@ int test4_3467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 938 }\n     sink_4_3467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 940 }\n     return 0;\n }\n \n-three sink_4_3567(volatile       A&);  // { dg-message \"candidates\" }\n+three sink_4_3567(volatile       A&);  // { dg-message \"three sink_4_3567|no known conversion\" }\n five  sink_4_3567(               A&&);  // { dg-message \"note\" }\n six   sink_4_3567(const          A&&);  // { dg-message \"\" }\n seven sink_4_3567(volatile       A&&);  // { dg-message \"note\" }\n@@ -868,7 +955,9 @@ int test4_3567()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_3567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 957 }\n     sink_4_3567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 959 }\n     return 0;\n }\n \n@@ -918,10 +1007,11 @@ int test4_3678()\n     sink_4_3678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_3678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_4_3678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 1009 }\n     return 0;\n }\n \n-four  sink_4_4567(const volatile A&);  // { dg-message \"candidates\" }\n+four  sink_4_4567(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_4567(               A&&);  // { dg-message \"note\" }\n six   sink_4_4567(const          A&&);  // { dg-message \"note\" }\n seven sink_4_4567(volatile       A&&);  // { dg-message \"note\" }\n@@ -933,11 +1023,12 @@ int test4_4567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_4567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 1025 }\n     return 0;\n }\n \n four  sink_4_4678(const volatile A&);\n-six   sink_4_4678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_4_4678(const          A&&);  // { dg-message \"note\" }\n seven sink_4_4678(volatile       A&&);  // { dg-message \"note\" }\n eight sink_4_4678(const volatile A&&);  // { dg-message \"note\" }\n \n@@ -948,6 +1039,7 @@ int test4_4678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_4678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 1041 }\n     return 0;\n }\n "}, {"sha": "660a68986a0c125226d0c8c1a7882a7a0e73b6c1", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5n.C", "status": "modified", "additions": 85, "deletions": 31, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 5 at a time\n \n-one   sink_5_12345(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12345(               A&);  // { dg-message \"one sink_5_12345|no known conversion\" }\n two   sink_5_12345(const          A&);  // { dg-message \"note\" }\n three sink_5_12345(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_12345(const volatile A&);  // { dg-message \"note\" }\n@@ -43,11 +43,13 @@ int test5_12345()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12345(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 45 }\n     sink_5_12345(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 47 }\n     return 0;\n }\n \n-one   sink_5_12346(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12346(               A&);  // { dg-message \"one sink_5_12346|no known conversion\" }\n two   sink_5_12346(const          A&);  // { dg-message \"note\" }\n three sink_5_12346(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_12346(const volatile A&);  // { dg-message \"note\" }\n@@ -60,11 +62,13 @@ int test5_12346()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12346(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 64 }\n     sink_5_12346(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 66 }\n     return 0;\n }\n \n-one   sink_5_12347(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12347(               A&);  // { dg-message \"one sink_5_12347|no known conversion\" }\n two   sink_5_12347(const          A&);  // { dg-message \"note\" }\n three sink_5_12347(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_12347(const volatile A&);  // { dg-message \"note\" }\n@@ -77,10 +81,11 @@ int test5_12347()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12347(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 83 }\n     return 0;\n }\n \n-one   sink_5_12356(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12356(               A&);  // { dg-message \"one sink_5_12356|no known conversion\" }\n two   sink_5_12356(const          A&);  // { dg-message \"note\" }\n three sink_5_12356(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_12356(               A&&);  // { dg-message \"note\" }\n@@ -93,12 +98,15 @@ int test5_12356()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12356(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 100 }\n     sink_5_12356(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 102 }\n     sink_5_12356(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 104 }\n     return 0;\n }\n \n-one   sink_5_12357(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12357(               A&);  // { dg-message \"one sink_5_12357|no known conversion\" }\n two   sink_5_12357(const          A&);  // { dg-message \"note\" }\n three sink_5_12357(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_12357(               A&&);  // { dg-message \"note\" }\n@@ -111,7 +119,9 @@ int test5_12357()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12357(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 121 }\n     sink_5_12357(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 123 }\n     return 0;\n }\n \n@@ -131,7 +141,7 @@ int test5_12358()\n     return 0;\n }\n \n-one   sink_5_12367(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12367(               A&);  // { dg-message \"one sink_5_12367|no known conversion\" }\n two   sink_5_12367(const          A&);  // { dg-message \"note\" }\n three sink_5_12367(volatile       A&);  // { dg-message \"note\" }\n six   sink_5_12367(const          A&&);  // { dg-message \"note\" }\n@@ -144,8 +154,11 @@ int test5_12367()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12367(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 156 }\n     sink_5_12367(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 158 }\n     sink_5_12367(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 160 }\n     return 0;\n }\n \n@@ -181,7 +194,7 @@ int test5_12378()\n     return 0;\n }\n \n-one   sink_5_12456(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12456(               A&);  // { dg-message \"one sink_5_12456|no known conversion\" }\n two   sink_5_12456(const          A&);  // { dg-message \"note\" }\n four  sink_5_12456(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_12456(               A&&);  // { dg-message \"note\" }\n@@ -194,11 +207,13 @@ int test5_12456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 209 }\n     sink_5_12456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 211 }\n     return 0;\n }\n \n-one   sink_5_12457(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12457(               A&);  // { dg-message \"one sink_5_12457|no known conversion\" }\n two   sink_5_12457(const          A&);  // { dg-message \"note\" }\n four  sink_5_12457(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_12457(               A&&);  // { dg-message \"note\" }\n@@ -211,10 +226,11 @@ int test5_12457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 228 }\n     return 0;\n }\n \n-one   sink_5_12467(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12467(               A&);  // { dg-message \"one sink_5_12467|no known conversion\" }\n two   sink_5_12467(const          A&);  // { dg-message \"note\" }\n four  sink_5_12467(const volatile A&);  // { dg-message \"note\" }\n six   sink_5_12467(const          A&&);  // { dg-message \"note\" }\n@@ -227,11 +243,13 @@ int test5_12467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 245 }\n     sink_5_12467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 247 }\n     return 0;\n }\n \n-one   sink_5_12567(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_12567(               A&);  // { dg-message \"one sink_5_12567|no known conversion\" }\n two   sink_5_12567(const          A&);  // { dg-message \"note\" }\n five  sink_5_12567(               A&&);  // { dg-message \"note\" }\n six   sink_5_12567(const          A&&);  // { dg-message \"note\" }\n@@ -245,7 +263,9 @@ int test5_12567()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12567(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 265 }\n     sink_5_12567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 267 }\n     return 0;\n }\n \n@@ -284,7 +304,7 @@ int test5_12578()\n }\n \n one   sink_5_12678(               A&);\n-two   sink_5_12678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_12678(const          A&);  // { dg-message \"note\" }\n six   sink_5_12678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_12678(volatile       A&&);  // { dg-message \"\" }\n eight sink_5_12678(const volatile A&&);  // { dg-message \"\" }\n@@ -298,10 +318,11 @@ int test5_12678()\n     sink_5_12678(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_12678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 320 }\n     return 0;\n }\n \n-one   sink_5_13456(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_13456(               A&);  // { dg-message \"one sink_5_13456|no known conversion\" }\n three sink_5_13456(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_13456(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_13456(               A&&);  // { dg-message \"note\" }\n@@ -314,11 +335,13 @@ int test5_13456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 337 }\n     sink_5_13456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 339 }\n     return 0;\n }\n \n-one   sink_5_13457(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_13457(               A&);  // { dg-message \"one sink_5_13457|no known conversion\" }\n three sink_5_13457(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_13457(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_13457(               A&&);  // { dg-message \"note\" }\n@@ -331,11 +354,13 @@ int test5_13457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13457(c_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 356 }\n     sink_5_13457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 358 }\n     return 0;\n }\n \n-one   sink_5_13467(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_13467(               A&);  // { dg-message \"one sink_5_13467|no known conversion\" }\n three sink_5_13467(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_13467(const volatile A&);  // { dg-message \"note\" }\n six   sink_5_13467(const          A&&);  // { dg-message \"note\" }\n@@ -348,11 +373,13 @@ int test5_13467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 375 }\n     sink_5_13467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 377 }\n     return 0;\n }\n \n-one   sink_5_13567(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_13567(               A&);  // { dg-message \"one sink_5_13567|no known conversion\" }\n three sink_5_13567(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_13567(               A&&);  // { dg-message \"note\" }\n six   sink_5_13567(const          A&&);  // { dg-message \"\" }\n@@ -366,7 +393,9 @@ int test5_13567()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 395 }\n     sink_5_13567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 397 }\n     return 0;\n }\n \n@@ -419,10 +448,11 @@ int test5_13678()\n     sink_5_13678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_13678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 450 }\n     return 0;\n }\n \n-one   sink_5_14567(               A&);  // { dg-message \"candidates\" }\n+one   sink_5_14567(               A&);  // { dg-message \"one sink_5_14567|no known conversion\" }\n four  sink_5_14567(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_14567(               A&&);  // { dg-message \"note\" }\n six   sink_5_14567(const          A&&);  // { dg-message \"note\" }\n@@ -435,12 +465,13 @@ int test5_14567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_14567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 467 }\n     return 0;\n }\n \n one   sink_5_14678(               A&);\n four  sink_5_14678(const volatile A&);\n-six   sink_5_14678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_5_14678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_14678(volatile       A&&);  // { dg-message \"note\" }\n eight sink_5_14678(const volatile A&&);  // { dg-message \"note\" }\n \n@@ -451,6 +482,7 @@ int test5_14678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_14678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 484 }\n     return 0;\n }\n \n@@ -472,7 +504,7 @@ int test5_15678()\n     return 0;\n }\n \n-two   sink_5_23456(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23456(const          A&);  // { dg-message \"two sink_5_23456|no known conversion\" }\n three sink_5_23456(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23456(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_23456(               A&&);  // { dg-message \"note\" }\n@@ -485,12 +517,15 @@ int test5_23456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23456(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 519 }\n     sink_5_23456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 521 }\n     sink_5_23456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 523 }\n     return 0;\n }\n \n-two   sink_5_23457(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23457(const          A&);  // { dg-message \"two sink_5_23457|no known conversion\" }\n three sink_5_23457(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23457(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_23457(               A&&);  // { dg-message \"note\" }\n@@ -503,11 +538,13 @@ int test5_23457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23457(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 540 }\n     sink_5_23457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 542 }\n     return 0;\n }\n \n-two   sink_5_23458(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23458(const          A&);  // { dg-message \"note\" }\n three sink_5_23458(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23458(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_23458(               A&&);  // { dg-message \"note\" }\n@@ -520,10 +557,11 @@ int test5_23458()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23458(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 559 }\n     return 0;\n }\n \n-two   sink_5_23467(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23467(const          A&);  // { dg-message \"two sink_5_23467|no known conversion\" }\n three sink_5_23467(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23467(const volatile A&);  // { dg-message \"note\" }\n six   sink_5_23467(const          A&&);  // { dg-message \"note\" }\n@@ -536,12 +574,15 @@ int test5_23467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23467(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 576 }\n     sink_5_23467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 578 }\n     sink_5_23467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 580 }\n     return 0;\n }\n \n-two   sink_5_23468(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23468(const          A&);  // { dg-message \"note\" }\n three sink_5_23468(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23468(const volatile A&);  // { dg-message \"note\" }\n six   sink_5_23468(const          A&&);  // { dg-message \"note\" }\n@@ -554,10 +595,11 @@ int test5_23468()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23468(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 597 }\n    return 0;\n }\n \n-two   sink_5_23478(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23478(const          A&);  // { dg-message \"note\" }\n three sink_5_23478(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23478(const volatile A&);  // { dg-message \"note\" }\n seven sink_5_23478(volatile       A&&);  // { dg-message \"note\" }\n@@ -570,10 +612,11 @@ int test5_23478()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23478(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 614 }\n     return 0;\n }\n \n-two   sink_5_23567(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23567(const          A&);  // { dg-message \"two sink_5_23567|no known conversion\" }\n three sink_5_23567(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_23567(               A&&);  // { dg-message \"note\" }\n six   sink_5_23567(const          A&&);  // { dg-message \"note\" }\n@@ -586,12 +629,15 @@ int test5_23567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23567(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 631 }\n     sink_5_23567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 633 }\n     sink_5_23567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 635 }\n     return 0;\n }\n \n-two   sink_5_23568(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23568(const          A&);  // { dg-message \"note\" }\n three sink_5_23568(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_23568(               A&&);  // { dg-message \"note\" }\n six   sink_5_23568(const          A&&);  // { dg-message \"note\" }\n@@ -605,10 +651,11 @@ int test5_23568()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23568(cva); // { dg-error \"lvalue\" }\n     sink_5_23568(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 653 }\n     return 0;\n }\n \n-two   sink_5_23578(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23578(const          A&);  // { dg-message \"note\" }\n three sink_5_23578(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_23578(               A&&);  // { dg-message \"note\" }\n seven sink_5_23578(volatile       A&&);  // { dg-message \"note\" }\n@@ -622,10 +669,11 @@ int test5_23578()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23578(cva); // { dg-error \"lvalue\" }\n     sink_5_23578(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 671 }\n     return 0;\n }\n \n-two   sink_5_23678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_23678(const          A&);  // { dg-message \"note\" }\n three sink_5_23678(volatile       A&);  // { dg-message \"note\" }\n six   sink_5_23678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_23678(volatile       A&&);  // { dg-message \"note\" }\n@@ -638,12 +686,14 @@ int test5_23678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23678(a);         // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 688 }\n     sink_5_23678(cva);\t     // { dg-error \"lvalue\" }\n     sink_5_23678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 691 }\n     return 0;\n }\n \n-two   sink_5_24567(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_24567(const          A&);  // { dg-message \"two sink_5_24567|no known conversion\" }\n four  sink_5_24567(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_24567(               A&&);  // { dg-message \"note\" }\n six   sink_5_24567(const          A&&);  // { dg-message \"note\" }\n@@ -656,10 +706,11 @@ int test5_24567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_24567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 708 }\n     return 0;\n }\n \n-two   sink_5_24678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_5_24678(const          A&);  // { dg-message \"note\" }\n four  sink_5_24678(const volatile A&);\n six   sink_5_24678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_24678(volatile       A&&);  // { dg-message \"note\" }\n@@ -672,6 +723,7 @@ int test5_24678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_24678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 725 }\n     return 0;\n }\n \n@@ -692,7 +744,7 @@ int test5_25678()\n     return 0;\n }\n \n-three sink_5_34567(volatile       A&);  // { dg-message \"candidates\" }\n+three sink_5_34567(volatile       A&);  // { dg-message \"three sink_5_34567|no known conversion\" }\n four  sink_5_34567(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_34567(               A&&);  // { dg-message \"note\" }\n six   sink_5_34567(const          A&&);  // { dg-message \"note\" }\n@@ -705,12 +757,13 @@ int test5_34567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_34567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 759 }\n     return 0;\n }\n \n three sink_5_34678(volatile       A&);\n four  sink_5_34678(const volatile A&);\n-six   sink_5_34678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_5_34678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_34678(volatile       A&&);  // { dg-message \"note\" }\n eight sink_5_34678(const volatile A&&);  // { dg-message \"note\" }\n \n@@ -721,6 +774,7 @@ int test5_34678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_34678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 776 }\n     return 0;\n }\n "}, {"sha": "d0fdbb7e509db11c9408fe425ea0a37a891b80e6", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6n.C", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 6 at a time\n \n-one   sink_6_123456(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_123456(               A&);  // { dg-message \"one sink_6_123456|no known conversion\" }\n two   sink_6_123456(const          A&);  // { dg-message \"note\" }\n three sink_6_123456(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_123456(const volatile A&);  // { dg-message \"note\" }\n@@ -44,11 +44,13 @@ int test6_123456()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123456(v_source());   // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 46 }\n     sink_6_123456(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 48 }\n     return 0;\n }\n \n-one   sink_6_123457(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_123457(               A&);  // { dg-message \"one sink_6_123457|no known conversion\" }\n two   sink_6_123457(const          A&);  // { dg-message \"note\" }\n three sink_6_123457(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_123457(const volatile A&);  // { dg-message \"note\" }\n@@ -62,10 +64,11 @@ int test6_123457()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123457(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 66 }\n     return 0;\n }\n \n-two   sink_6_235678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_235678(const          A&);  // { dg-message \"note\" }\n three sink_6_235678(volatile       A&);  // { dg-message \"note\" }\n five  sink_6_235678(               A&&);  // { dg-message \"note\" }\n six   sink_6_235678(const          A&&);  // { dg-message \"note\" }\n@@ -79,11 +82,12 @@ int test6_235678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_235678(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 84 }\n     sink_6_235678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n \n-two   sink_6_234678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_234678(const          A&);  // { dg-message \"note\" }\n three sink_6_234678(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_234678(const volatile A&);  // { dg-message \"note\" }\n six   sink_6_234678(const          A&&);  // { dg-message \"note\" }\n@@ -97,11 +101,13 @@ int test6_234678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234678(a);         // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 103 }\n     sink_6_234678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 105 }\n     return 0;\n }\n \n-two   sink_6_234578(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_234578(const          A&);  // { dg-message \"note\" }\n three sink_6_234578(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_234578(const volatile A&);  // { dg-message \"note\" }\n five  sink_6_234578(               A&&);  // { dg-message \"note\" }\n@@ -115,10 +121,11 @@ int test6_234578()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234578(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 123 }\n     return 0;\n }\n \n-two   sink_6_234568(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_234568(const          A&);  // { dg-message \"note\" }\n three sink_6_234568(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_234568(const volatile A&);  // { dg-message \"note\" }\n five  sink_6_234568(               A&&);  // { dg-message \"note\" }\n@@ -132,10 +139,11 @@ int test6_234568()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234568(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 141 }\n     return 0;\n }\n \n-two   sink_6_234567(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_234567(const          A&);  // { dg-message \"two sink_6_234567|no known conversion\" }\n three sink_6_234567(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_234567(const volatile A&);  // { dg-message \"note\" }\n five  sink_6_234567(               A&&);  // { dg-message \"note\" }\n@@ -149,14 +157,16 @@ int test6_234567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234567(a);            // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 159 }\n     sink_6_234567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 161 }\n     return 0;\n }\n \n one   sink_6_134678(               A&);\n three sink_6_134678(volatile       A&);\n four  sink_6_134678(const volatile A&);\n-six   sink_6_134678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_6_134678(const          A&&);  // { dg-message \"note\" }\n seven sink_6_134678(volatile       A&&);  // { dg-message \"note\" }\n eight sink_6_134678(const volatile A&&);  // { dg-message \"note\" }\n \n@@ -167,11 +177,12 @@ int test6_134678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_134678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 179 }\n     return 0;\n }\n \n one   sink_6_124678(               A&);\n-two   sink_6_124678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_124678(const          A&);  // { dg-message \"note\" }\n four  sink_6_124678(const volatile A&);\n six   sink_6_124678(const          A&&);  // { dg-message \"note\" }\n seven sink_6_124678(volatile       A&&);  // { dg-message \"note\" }\n@@ -184,11 +195,12 @@ int test6_124678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_124678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 197 }\n     return 0;\n }\n \n one   sink_6_123678(               A&);\n-two   sink_6_123678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_6_123678(const          A&);  // { dg-message \"note\" }\n three sink_6_123678(volatile       A&);\n six   sink_6_123678(const          A&&);  // { dg-message \"note\" }\n seven sink_6_123678(volatile       A&&);  // { dg-message \"note\" }\n@@ -202,10 +214,11 @@ int test6_123678()\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_6_123678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 216 }\n     return 0;\n }\n \n-one   sink_6_123567(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_123567(               A&);  // { dg-message \"one sink_6_123567|no known conversion\" }\n two   sink_6_123567(const          A&);  // { dg-message \"note\" }\n three sink_6_123567(volatile       A&);  // { dg-message \"note\" }\n five  sink_6_123567(               A&&);  // { dg-message \"note\" }\n@@ -219,7 +232,9 @@ int test6_123567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123567(cva);          // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 234 }\n     sink_6_123567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 236 }\n     return 0;\n }\n \n@@ -257,7 +272,7 @@ int test6_123578()\n     return 0;\n }\n \n-one   sink_6_123467(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_123467(               A&);  // { dg-message \"one sink_6_123467|no known conversion\" }\n two   sink_6_123467(const          A&);  // { dg-message \"note\" }\n three sink_6_123467(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_123467(const volatile A&);  // { dg-message \"note\" }\n@@ -271,11 +286,13 @@ int test6_123467()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123467(source());     // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 288 }\n     sink_6_123467(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 290 }\n     return 0;\n }\n \n-one   sink_6_124567(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_124567(               A&);  // { dg-message \"one sink_6_124567|no known conversion\" }\n two   sink_6_124567(const          A&);  // { dg-message \"note\" }\n four  sink_6_124567(const volatile A&);  // { dg-message \"note\" }\n five  sink_6_124567(               A&&);  // { dg-message \"note\" }\n@@ -289,6 +306,7 @@ int test6_124567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_124567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 308 }\n     return 0;\n }\n \n@@ -310,7 +328,7 @@ int test6_125678()\n     return 0;\n }\n \n-one   sink_6_134567(               A&);  // { dg-message \"candidates\" }\n+one   sink_6_134567(               A&);  // { dg-message \"one sink_6_134567|no known conversion\" }\n three sink_6_134567(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_134567(const volatile A&);  // { dg-message \"note\" }\n five  sink_6_134567(               A&&);  // { dg-message \"note\" }\n@@ -324,6 +342,7 @@ int test6_134567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_134567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 344 }\n     return 0;\n }\n "}, {"sha": "6071e0568133941de21d037200f1b4321a51fa6b", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7n.C", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 7 at a time\n \n-one   sink_7_1234567(               A&);  // { dg-message \"candidates\" }\n+one   sink_7_1234567(               A&);  // { dg-message \"one sink_7_1234567|no known conversion\" }\n two   sink_7_1234567(const          A&);  // { dg-message \"note\" }\n three sink_7_1234567(volatile       A&);  // { dg-message \"note\" }\n four  sink_7_1234567(const volatile A&);  // { dg-message \"note\" }\n@@ -45,6 +45,7 @@ int test7_1234567()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_1234567(cv_source());  // { dg-error \"no match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 47 }\n     return 0;\n }\n \n@@ -66,7 +67,7 @@ int test7_1235678()\n     return 0;\n }\n \n-two   sink_7_2345678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_7_2345678(const          A&);  // { dg-message \"note\" }\n three sink_7_2345678(volatile       A&);  // { dg-message \"note\" }\n four  sink_7_2345678(const volatile A&);  // { dg-message \"note\" }\n five  sink_7_2345678(               A&&);  // { dg-message \"note\" }\n@@ -81,11 +82,12 @@ int test7_2345678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_2345678(a);  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 84 }\n     return 0;\n }\n \n one   sink_7_1234678(               A&);\n-two   sink_7_1234678(const          A&);  // { dg-message \"candidates\" }\n+two   sink_7_1234678(const          A&);  // { dg-message \"note\" }\n three sink_7_1234678(volatile       A&);\n four  sink_7_1234678(const volatile A&);\n six   sink_7_1234678(const          A&&);  // { dg-message \"note\" }\n@@ -99,6 +101,7 @@ int test7_1234678()\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_1234678(source());  // { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 103 }\n     return 0;\n }\n "}, {"sha": "fa2bb6aed863b526e00d3872fb4664289abce75f", "filename": "gcc/testsuite/g++.dg/cpp0x/temp_default2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,13 +1,14 @@\n // { dg-options \"-std=c++0x\" }\n \n template <class T, class U = double> \n-void f(T t = 0, U u = 0); \t// { dg-message \"candidate\" }\n+void f(T t = 0, U u = 0); \t// { dg-message \"note\" }\n \n void g() \n { \n   f(1, 'c'); // f<int,char>(1,'c') \n   f(1); // f<int,double>(1,0) \n   f(); // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n   f<int>(); // f<int,double>(0,0) \n   f<int,char>(); // f<int,char>(0,0) \n } "}, {"sha": "d67b3b61151622f562239cbff1d3b98b08273232", "filename": "gcc/testsuite/g++.dg/cpp0x/trailing4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,7 +5,8 @@ template<class T, class U>\n auto f(T,U) -> decltype(T() + U())\n { return T() + U(); }\n \n-template<class T> void g(T){}\t// { dg-message \"candidate\" }\n+template<class T> void g(T){}\t// { dg-message \"note\" }\n \n int main() { g(f); }\t\t// { dg-error \"no matching function\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n "}, {"sha": "bd973055d062a452b4aae0fe74ea9e9980577021", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex3.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,9 +1,11 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<class X, class Y, class... Z> X f(Y); // { dg-message \"candidate\" }\n+template<class X, class Y, class... Z> X f(Y); // { dg-message \"note\" }\n void g() \n { \n   int i = f<int>(5.6);\n   int j = f(5.6);         // { dg-error \"no matching\" }\n-  f<void>(f<int, bool>); \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n+  f<void>(f<int, bool>);\n   f<void>(f<int>);        // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n } "}, {"sha": "5bf211696a3170d71bfbdc4c0e97eb3c7891a5c8", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<class X, class Y, class Z> X f(Y,Z); // { dg-message \"candidate\" }\n+template<class X, class Y, class Z> X f(Y,Z); // { dg-message \"note\" }\n template<class... Args> void f2();\n void g() \n { \n@@ -8,5 +8,6 @@ void g()\n   f<int>(\"aa\",3.0); // Y is deduced to be char*, and \n                     // Z is deduced to be double \n   f(\"aa\",3.0); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n   f2<char, short, int, long>(); // okay\n } "}, {"sha": "1f21976e864c39aa512ec0b8a42933d78898b0b1", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic35.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,9 +1,10 @@\n // { dg-options \"-std=gnu++0x\" }\n template<int I, typename... Args>\n-void get_ith(const Args&... args); // { dg-message \"candidate\" }\n+void get_ith(const Args&... args); // { dg-message \"note\" }\n \n void f()\n {\n   get_ith<1, float>(1, 2.0, 'x');\n   get_ith<1, int, double, char, int>(1, 2.0, 'x'); // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "fecb36ec8c9a123a63fa5b1fe547141b2f3f870f", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-35147.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,14 +1,15 @@\n // { dg-options \"-std=c++0x\" }\n \n template<typename _Tp>\n-  _Tp&& forward(_Tp&& __t) { return __t; } // { dg-message \"candidate\" }\n+  _Tp&& forward(_Tp&& __t) { return __t; } // { dg-message \"note\" }\n \n void f(...);\n \n template<typename... Args>\n void g(Args&&... args)\n {\n   f(forward<Args...>(args...)); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 11 }\n }\n \n void h()"}, {"sha": "2ff7e5b0b51db5c5342f21e2305c03eb3579bb4e", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-37737-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,9 +1,10 @@\n // { dg-options \"-std=c++0x\" }\n \n template<class U, class... T>\n-void f()\t\t\t// { dg-message \"candidate\" }\n+void f()\t\t\t// { dg-message \"note\" }\n {\n   f<T...>(); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n }\n \n template<>"}, {"sha": "e8e1397c06ea7195ee84446314b81f41197001c9", "filename": "gcc/testsuite/g++.dg/expr/cond9.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,5 +6,7 @@ struct A { // { dg-message \"A\" }\n \n void foo(volatile A a) { \n   1 ? a : 0; // { dg-error \"match|temporary\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n   1 ? 0 : a; // { dg-error \"match|temporary\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n } "}, {"sha": "3dd01c6b90f3d3588e2cffd7168c192448a5ee9a", "filename": "gcc/testsuite/g++.dg/expr/pmf-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,13 +7,14 @@\n struct A \n {\n   void f();\n-  void foo(void (A::*)(int));       // { dg-message \"candidate\" \"\" }\n+  void foo(void (A::*)(int));       // { dg-message \"void A::foo|no known conversion\" \"\" }\n   template<typename T>\n     void g(T);\n   void h()\n   {\n     void (A::*p)() = &A::f;\n     void (A::*q)() = &(A::f);       // { dg-error \"parenthesized\" \"\" }\n     foo(&g<int>);                   // { dg-error \"no matching\" \"\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n   }\n };"}, {"sha": "fc611cd4159474bd0e66e82a831194fa548b404b", "filename": "gcc/testsuite/g++.dg/ext/label5.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,5 +3,4 @@\n \n struct A { };\n int main() { b: A() && && b; } // { dg-error \"A\\\\(\\\\) && && *b\" }\n-\n-// { dg-message \"candidate\" \"additional\" { target *-*-* } 5 }\n+// { dg-message \"candidate|operator&&|no known conversion\" \"additional\" { target *-*-* } 5 }"}, {"sha": "8ef8d682336512e7e8d6563ee5bd8940cfa3eaaa", "filename": "gcc/testsuite/g++.dg/ext/visibility/anon8.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n \n template <void (*fn) ()>\n-void call ()\t\t\t// { dg-message \"candidate\" }\n+void call ()\t\t\t// { dg-message \"note\" }\n {\n   fn ();\n }\n@@ -27,7 +27,9 @@ int main ()\n   };\n   call<&B1::fn1> ();\n   call<&B2::fn2> ();\t// { dg-error \"not external linkage|no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 29 }\n   call<&fn3> ();\n   call<&B1::fn4> ();\n   call<&fn5> ();\t// { dg-error \"not external linkage|no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 33 }\n }"}, {"sha": "f6a9debca98731446de86efea51081bb034e1955", "filename": "gcc/testsuite/g++.dg/ext/vla2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,11 +8,12 @@\n // errors.\n \n template <unsigned int N>\n-char* begin(char (&a) [N] );\t// { dg-message \"candidate\" }\n+char* begin(char (&a) [N] );\t// { dg-message \"note\" }\n \n void bar(int i)\n {\n   char d[i] ;\n   \n   begin(d);  // { dg-error \"no matching function\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n }"}, {"sha": "17e01b3d55399501d69d24d67987dda816228831", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,15 +1,16 @@\n // PR c++/26690\n // { dg-do compile }\n \n-struct A\t\t\t// { dg-message \"A::A\" }\n+struct A\t\t\t// { dg-message \"A::A|candidate expects\" }\n {\n-  A (int);\t\t\t\t// { dg-message \"candidates\" }\n+  A (int);\t\t\t\t// { dg-message \"note\" }\n };\n \n void\n foo ()\n {\n   A a(0);\n #pragma omp parallel private (a)\t// { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n   ;\n }"}, {"sha": "ca01a3a59547d9f7139cb6c452e72c718278d005", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,13 +4,14 @@\n struct A\n {\n   A (int x = 6);\t\t\t// { dg-message \"A::A\\\\(int\\\\)\" }\n-  A (long long x = 12LL);\t\t// { dg-message \"candidates\" }\n+  A (long long x = 12LL);\t\t// { dg-message \"note\" }\n };\n \n void\n foo ()\n {\n   A a(6);\n #pragma omp parallel private (a)\t// { dg-error \"call of overloaded\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 14 }\n   ;\n }"}, {"sha": "ed5046715598baba5b72eb8c761238d7bddebd77", "filename": "gcc/testsuite/g++.dg/init/synth2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,6 +6,7 @@ struct G {\n };\n \n class A\t\t\t\t// { dg-error \"\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n {\n   const G g;\n };"}, {"sha": "0c4393e8a401e96a617f21752c70139eaf421bb9", "filename": "gcc/testsuite/g++.dg/lookup/conv-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -22,5 +22,6 @@ struct B : A1, A2\n int Foo (B const &b)\n {\n   return b; // { dg-error \"ambiguous\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 24 }\n }\n "}, {"sha": "11a6d97ddf7829816997c04cb8ad353c92628a7e", "filename": "gcc/testsuite/g++.dg/lookup/new1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,8 +6,9 @@ int main() {\n   int i;\n   void* operator new(__SIZE_TYPE__ s, int* p);\n   int* e = new(&i) int;                    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n   int* f = new int;\n   return 0;\n }\n \n-// { dg-message \"candidate\" \"\" { target *-*-* } 0 }\n+// { dg-message \"operator new|candidate expects\" \"\" { target *-*-* } 0 }"}, {"sha": "32abb5371f280c1f99373e41ffe0a2296abdb188", "filename": "gcc/testsuite/g++.dg/lookup/using9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,7 +4,7 @@\n //  an ambiguous overload set to be created.\n \n namespace B {\n-  void f(int);     // { dg-message \"candidates\" }\n+  void f(int);     // { dg-message \"note\" }\n   void f(double);  // { dg-message \"note\" }\n }\n \n@@ -20,6 +20,7 @@ void h()\n   using C::f;\n   f('h');\n   f(1);         // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n   void f(int);  // { dg-error \"previous using declaration\" }\n }\n "}, {"sha": "4ee935ad60965e491af71a219adabf78dab9205f", "filename": "gcc/testsuite/g++.dg/other/error13.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,8 +3,10 @@\n struct A\t\t\t// { dg-message \"note\" }\n {\n   A(void x); // { dg-error \"invalid use|incomplete type|candidates\" }\n+  // { dg-message \"\" \"match candidate text\" { target *-*-* } 5 }\n };\n \n struct B : A {}; // { dg-error \"no matching function for call|deleted\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n  \n B b; // { dg-message \"synthesized method|deleted\" }"}, {"sha": "f3b17aa196a36640947f7ee1ec93a4992173862a", "filename": "gcc/testsuite/g++.dg/other/error20.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,12 +1,13 @@\n // PR c++/34275\n // { dg-do compile }\n \n-struct A\t\t\t// { dg-message \"operator=\" }\n+struct A\t\t\t// { dg-message \"operator=|no known conversion\" }\n {\n   virtual A foo ();\n };\n \n void bar (A& a)\n {\n   a.foo () = 0; // { dg-error \"A::foo\\\\(\\\\) = 0\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 11 }\n }   "}, {"sha": "95c9d737413b398fbb59657761ebfd853ab4e6e7", "filename": "gcc/testsuite/g++.dg/other/error31.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,11 +3,12 @@\n // { dg-options \"\" }\n // { dg-bogus \"not supported by\" \"\" { target *-*-* } 0 }\n \n-struct A {};\t\t// { dg-message \"operator=\" }\n+struct A {};\t\t// { dg-message \"operator=|no known conversion\" }\n \n void\n foo ()\n {\n   A a;\n   a = ({ { 1; } });\t// { dg-error \"no match for\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n }"}, {"sha": "63ecbf51f4f99321679b63c54d1d43ca6c6aa581", "filename": "gcc/testsuite/g++.dg/other/pr28114.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,4 +6,5 @@ template<int> void foo(struct {}*); // { dg-message \"\" }\n void bar()\n {\n   foo<0>(0);\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "bc386ed56befa123414430bfbdac22188465b6b1", "filename": "gcc/testsuite/g++.dg/other/ptrmem10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,7 @@\n \n template <class C, void (C::*M) ()>\n static\n-void foo(void *obj)\t\t// { dg-message \"candidate\" }\n+void foo(void *obj)\t\t// { dg-message \"note\" }\n {\n   C *p = static_cast<C*>(obj);\n   (p->*M)();\n@@ -14,6 +14,7 @@ static void\n bar(C *c, void (C::*m) ())\n {\n   foo<C,m>((void *)c);// { dg-error \"(not a valid template arg|pointer-to-member|no matching fun)\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n }\n \n struct S"}, {"sha": "119cbb078a2f97f42d4ffc4f2968021a45d3158f", "filename": "gcc/testsuite/g++.dg/other/ptrmem11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,7 +5,7 @@ struct A {};\n \n template <int A::* p>\n int\n-foo(A* q)\t\t\t// { dg-message \"candidate\" }\n+foo(A* q)\t\t\t// { dg-message \"note\" }\n {\n   return q->*p;\n }\n@@ -15,6 +15,7 @@ int\n bar(int T::* p)\n {\n   return foo<p>(0);// { dg-error \"(not a valid template arg|no matching func|pointer-to-member)\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n }\n \n int i = bar<A>(0);"}, {"sha": "d11e00a187b5459e2d7a8f0959d3001406a79ca4", "filename": "gcc/testsuite/g++.dg/overload/ambig1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -20,4 +20,5 @@ void f(B);\t\t\t// { dg-message \"note\" \"candidate\" }\n int main()\n {\n   f (42);\t\t\t// { dg-error \"ambiguous\" \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }"}, {"sha": "34624cd22e43c82e61f9d3f711f46a6fe8ecf2ac", "filename": "gcc/testsuite/g++.dg/overload/arg3.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,13 +10,14 @@ struct A {};\n \n struct B : A\n {\n-  B(int); // { dg-message \"B::B\" \"\" }\n-  B(B&);  // { dg-message \"candidates\" \"\" }\n+  B(int); // { dg-message \"B::B|no known conversion\" \"\" }\n+  B(B&);  // { dg-message \"note\" \"\" }\n };\n \n void foo(B);\t\t\t// { dg-error \"initializing\" }\n \n void bar()\n {\n   foo(0); // { dg-error \"no matching function\" \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 21 }\n }"}, {"sha": "fdd208135c7ca8e476a0b75653cb976dc410b506", "filename": "gcc/testsuite/g++.dg/overload/builtin1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -13,5 +13,6 @@ int main ()\n {\n   A a;\n   a + a;\t\t\t// { dg-error \"ambiguous\" \"ambiguous\" }\n-                                // { dg-message \"candidates\" \"candidates\" { target *-*-* } 15 }\n+  // { dg-message \"operator\" \"match candidate text\" { target *-*-* } 15 }\n+  // { dg-message \"candidates\" \"candidates\" { target *-*-* } 15 }\n }"}, {"sha": "f0ec385fc9cb1d0781f9eddc918c7f270a350dd5", "filename": "gcc/testsuite/g++.dg/overload/copy1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -17,4 +17,5 @@ B\n f (B const& b)\n {\n   return b;\t\t\t// { dg-error \"matching\" \"matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n }"}, {"sha": "9adb4c07245b4a8a48c21e857f1a03701e89d14d", "filename": "gcc/testsuite/g++.dg/overload/new1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -16,6 +16,7 @@ void f(X *x = new X[4]);       // { dg-error \"\" }\n void f(X *x = new (3) X(6));   // { dg-error \"\" } \n \n void f(X *x = new (2) X[10]);  // { dg-error \"\" } \n-// { dg-message \"candidate\" \"\" { target *-*-* } 00 }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n+// { dg-message \"operator new|candidate expects\" \"match candidate text\" { target *-*-* } 00 }\n \n void f(X *x = new X[10][5]);   // { dg-error \"\" } "}, {"sha": "8f00d4171d4d994f68aa92879292498268d068e9", "filename": "gcc/testsuite/g++.dg/overload/template4.C", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,14 +8,17 @@ namespace\n   void baz (...);\t\t\t// { dg-message \"baz\" }\n }\n \n-template <int> void foo (...);\t\t// { dg-message \"candidate\" }\n-template <int> void bar (int, ...);\t// { dg-message \"candidate\" }\n-void baz (...);\t\t\t\t// { dg-message \"candidate\" }\n+template <int> void foo (...);\t\t// { dg-message \"note\" }\n+template <int> void bar (int, ...);\t// { dg-message \"note\" }\n+void baz (...);\t\t\t\t// { dg-message \"note\" }\n \n void\n test ()\n {\n   foo <0> (0);\t\t// { dg-error \"is ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n   bar <1> (0, 1);\t// { dg-error \"is ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n   baz (0);\t\t// { dg-error \"is ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }"}, {"sha": "935f8d4963da77ba67c8a844a1f77b8def2a4325", "filename": "gcc/testsuite/g++.dg/overload/unknown1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,8 +2,9 @@\n \n void foo(void);\n int foo(int);\n-template <typename T> void bar(T f); // { dg-message \"candidate\" }\n+template <typename T> void bar(T f); // { dg-message \"note\" }\n \n void baz() {\n   bar(foo); // { dg-error \"<unresolved overloaded function type>\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "514d83f34d8801a63b76961c81ea616f298717f3", "filename": "gcc/testsuite/g++.dg/overload/using2.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -73,17 +73,20 @@ int main () {\n   exit (0);\n \n   _exit (0); // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 75 }\n   abort ();\n \n   c1 ();\n   C1 (); // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 80 }\n \n   c2 ();\n   C2 (); // one might expect an ambiguous call error here as well, but\n \t // we don't add the using decl if we find it to be in error.\n \n   c3 ();\n   C3 (); // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 88 }\n   C3 (0);\n   C3 (0l);\n }"}, {"sha": "0ac70297992509c3826a23e663cecfe42b7992f0", "filename": "gcc/testsuite/g++.dg/parse/crash5.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,13 +1,15 @@\n // { dg-options \"-w\" }\n \n class QString { // { dg-error \"previous definition\" }\n-  QString (const QString & a); // { dg-message \"candidate is\" }\n+  QString (const QString & a); // { dg-message \"QString::QString|candidate expects\" }\n };\n \n class QString { }; // { dg-error \"redefinition\" }\n \n const QString q () {\n   QString z; // { dg-error \"matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n   int x;\n   return x ? QString () : QString (); // { dg-error \"matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }"}, {"sha": "010a4032e76aae137316260a16e2ba1a720cc022", "filename": "gcc/testsuite/g++.dg/parse/error19.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-fshow-column -fmessage-length=0   -ansi -pedantic-errors -Wno-long-long \" }\n // PR C++/17867\n \n-struct A\t\t\t// { dg-message \"8:operator=\" }\n+struct A\t\t\t// { dg-message \"8:operator=|no known conversion for implicit\" }\n {\n   A(int);\n };\n@@ -11,4 +11,5 @@ const A& foo();\n void bar()\n {\n   foo()=A(0); // { dg-error \"12:no match for 'operator='\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }"}, {"sha": "3ca210aa6b7cc12865bb437299879fde3bd5907b", "filename": "gcc/testsuite/g++.dg/parse/error28.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,10 +2,11 @@\n // PR c++/21908\n \n struct virt { virt () {} virt (int i) {} };\n-struct der : public virtual virt { // { dg-message \"8:der::der\" }\n-  der (int i) : virt(i) {} // { dg-message \"3:der::der\" }\n+struct der : public virtual virt { // { dg-message \"8:der::der|candidate expects\" }\n+  der (int i) : virt(i) {} // { dg-message \"3:der::der|candidate expects\" }\n };\n struct top : public der { \n   top () {} // { dg-bogus \"der\\\\(const\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n };\n // { dg-error \"10:no matching function for call to 'der\" \"\" { target *-*-* } 9 }"}, {"sha": "0d3f3fa24a1c27b70de671a4a02179b2e963512e", "filename": "gcc/testsuite/g++.dg/parse/template7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,4 +1,5 @@\n template <int I>\n-void f();\t\t\t// { dg-message \"candidate\" }\n+void f();\t\t\t// { dg-message \"note\" }\n \n void g() { f<(3, 2)>(); } // { dg-error \"\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 4 }"}, {"sha": "2d823f8078e5844e331b9b3f3c49a86c47c55a3a", "filename": "gcc/testsuite/g++.dg/parse/typename7.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,9 +7,10 @@\n \n struct A\n {\n-  template<typename>   void foo(int); // { dg-message \"candidate\" }\n-  template<typename T> void bar(T t) { // { dg-message \"candidate\" }\n+  template<typename>   void foo(int); // { dg-message \"note\" }\n+  template<typename T> void bar(T t) { // { dg-message \"note\" }\n     this->foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n   template<typename T> void bad(T t) {\n     foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n };\n@@ -19,6 +20,7 @@ struct B\n {\n   void bar(T t) {\n     A().bar<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n   void bad(T t) {\n     B<typename T>::bar(t); } // { dg-error \"invalid|not a template\" }\n };"}, {"sha": "d8879c59ced4c9bccfd4f9c0bd58a4ccb01029a7", "filename": "gcc/testsuite/g++.dg/rtti/typeid6.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,4 +8,5 @@ namespace std\n template<int> void foo()\n {\n   !typeid(void); // { dg-error \"!typeid\\\\(void\\\\)|candidate is\" }\n+  // { dg-message \"\" \"match candidate text\" { target *-*-* } 10 }\n }"}, {"sha": "f930d2e28ea34173ffd0141b8209d168a274b580", "filename": "gcc/testsuite/g++.dg/tc1/dr152.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,21 +4,22 @@\n \n namespace N1 {\n   struct X {\n-    X();\t\t\t// { dg-message \"candidate\" }\n+    X();\t\t\t// { dg-message \"note\" }\n     explicit X(const X&);\n   };\n   void f(X);\t\t\t// { dg-error \"initializing\" }\n   int foo() \n   { \n     X x; \n     f(x);     // { dg-error \"matching\" \"matching\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 14 }\n   }\n }\n \n namespace N2 {\n   template <class T>\n   struct X {\n-    X();\t\t\t// { dg-message \"candidate\" }\n+    X();\t\t\t// { dg-message \"note\" }\n     explicit X(const X&);\n   };\n \n@@ -30,6 +31,7 @@ namespace N2 {\n   { \n     X<T> x; \n     N2::f(x);   // { dg-error \"matching\" \"matching\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 33 }\n   }\n \n   template int foo<float>();  // { dg-message \"instantiated from here\" }"}, {"sha": "57d06af3ee75ed89115a1d5e567b06ed83f116e9", "filename": "gcc/testsuite/g++.dg/template/conv11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,10 +1,11 @@\n int i;\n struct A\n {\n-  template <class T> operator T&() { return i; } // { dg-message \"candidate\" }\n+  template <class T> operator T&() { return i; } // { dg-message \"note\" }\n };\n \n int main()\n {\n   A().operator int();\t\t// { dg-error \"operator int\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n }"}, {"sha": "c6b3ff8066575c68609b32110af597f32d37b9ef", "filename": "gcc/testsuite/g++.dg/template/copy1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,8 +7,9 @@\n struct A\n {\n   A(A&); // { dg-message \"note\" }\n-  template <class T> A(T); \t// { dg-message \"candidate\" }\n+  template <class T> A(T); \t// { dg-message \"note\" }\n };\n \n A a = 0; // { dg-error \"no matching function\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n "}, {"sha": "60724231eabbbaf324a1faaec3444a515ac32751", "filename": "gcc/testsuite/g++.dg/template/crash37.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,7 +11,7 @@ struct coperator_stack\n struct helper {};\n \n template<class F>\n-void bla(F f) // { dg-message \"candidate is\" }\n+void bla(F f) // { dg-message \"bla|no known conversion\" }\n {\n }\n \n@@ -21,6 +21,7 @@ struct definition\n  definition()\n  {\n    bla(coperator_stack::push3<helper>); // { dg-error \"matching\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n  }\n };\n "}, {"sha": "e8a1d4e2b51cea72d23548a453f62baf69c6f5c8", "filename": "gcc/testsuite/g++.dg/template/deduce3.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,9 +1,11 @@\n template <typename T>\n-void f(int, T (*)() = 0);\t// { dg-message \"candidate\" }\n+void f(int, T (*)() = 0);\t// { dg-message \"note\" }\n \n void g() {\n   typedef int A[2];\n   f<A>(0); // { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n   typedef void F();\n   f<F>(0); // { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n }"}, {"sha": "1e850cd54e5f0d4f97a30a3b94346a2de3927487", "filename": "gcc/testsuite/g++.dg/template/dependent-expr5.C", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -40,28 +40,36 @@ struct foo {\n       bind (&bar::baikt);\n \n       bind (&barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 42 }\n       bind (&foo::barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 44 }\n \n       bindm (&barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 47 }\n       bindm (&foo::barf);\n \n       bindn (&barf);\n       bindn (&foo::barf);\n \n       bindb (&barf);\n       bindb (&foo::barf); // { dg-error \"ambiguous\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 55 }\n \n       bind (&bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 58 }\n       bind (&bar::bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 60 }\n \n       bindm (&bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 63 }\n       bindm (&bar::bark);\n \n       bindn (&bark);\n       bindn (&bar::bark);\n \n       bindb (&bark);\n       bindb (&bar::bark); // { dg-error \"ambiguous\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 71 }\n     }\n   };\n \n@@ -84,28 +92,36 @@ struct foo {\n       bind (&barT::baikt);\n \n       bind (&barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 94 }\n       bind (&foo::barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 96 }\n \n       bindm (&barf); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 99 }\n       bindm (&foo::barf);\n \n       bindn (&barf);\n       bindn (&foo::barf);\n \n       bindb (&barf);\n       bindb (&foo::barf); // { dg-error \"ambiguous\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 107 }\n \n       bind (&bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 110 }\n       bind (&barT::bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 112 }\n \n       bindm (&bark); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 115 }\n       bindm (&barT::bark);\n \n       bindn (&bark);\n       bindn (&barT::bark);\n \n       bindb (&bark);\n       bindb (&barT::bark); // { dg-error \"ambiguous\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 123 }\n     }\n   };\n "}, {"sha": "14a21329988d122761e5979e4369128ca9cca7af", "filename": "gcc/testsuite/g++.dg/template/error38.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror38.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -32,8 +32,12 @@ int main()\n {\n   A<B> a;\n   a.f();\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 34 }\n   a.g();\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 36 }\n \n   f(i);\t\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 39 }\n   f(p);\t\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 41 }\n }"}, {"sha": "7746ed2cee3e3c16edcadc50c41ef8b1b26c4922", "filename": "gcc/testsuite/g++.dg/template/error40.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -26,5 +26,7 @@ struct B\n int main()\n {\n   f(1);\t\t\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n   B<A<int> >().f();\t\t// { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 30 }\n }"}, {"sha": "44cbce938d74d96e4f41f5226d227f608a5fe505", "filename": "gcc/testsuite/g++.dg/template/friend.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -26,4 +26,5 @@ int main()\n {\n   s<int>::t y;\n   cout << y; // { dg-error \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n }"}, {"sha": "d86ea06bcd07f4c4d40002f71f073dccf9833792", "filename": "gcc/testsuite/g++.dg/template/incomplete2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,11 +3,12 @@\n \n struct A;\n \n-template<A&> void foo();\t// { dg-message \"candidate\" }\n+template<A&> void foo();\t// { dg-message \"note\" }\n \n A a;  // { dg-error \"incomplete type\" }\n \n void bar()\n {\n   foo<a>();  // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n }"}, {"sha": "e592c65d816cbf92f0ac7438d4b948496294b1a4", "filename": "gcc/testsuite/g++.dg/template/instantiate5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -13,12 +13,13 @@ int baz() { return A<0>::i; }\n \n struct B\n {\n-  static void foo (int);\t// { dg-message \"candidate is\" }\n+  static void foo (int);\t// { dg-message \"B::foo|candidate expects\" }\n };\n \n template <typename T> struct C\n {\n   virtual void bar() const { T::foo(); } // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 21 }\n };\n \n C<B> c;\t\t\t\t// { dg-message \"instantiated\" }"}, {"sha": "7ee922ba6d3c67da341da9701155a29ae5e2ac37", "filename": "gcc/testsuite/g++.dg/template/local4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,8 +1,9 @@\n // PR c++/17413\n \n-template <typename T> void foo() {} // { dg-message \"candidate\" }\n+template <typename T> void foo() {} // { dg-message \"note\" }\n \n int main () {\n   struct S {};\n   foo<S> (); // { dg-error \"match\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n }"}, {"sha": "4a87177c9a13d778021dc67cac25eb8e2bead247", "filename": "gcc/testsuite/g++.dg/template/local6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,10 +1,11 @@\n template <class T> struct PCVector2 // { dg-message \"note\" }\n {\n-    template <class T2> PCVector2(const PCVector2<T> &cv) ; // { dg-message \"candidate\" }\n+    template <class T2> PCVector2(const PCVector2<T> &cv) ; // { dg-message \"note\" }\n \n     PCVector2<T> operator- (const PCVector2<T> &ov) const \n \t{ \n \t  return PCVector2<T>(ov.xFIELD, ov.yFIELD); // { dg-error \"matching\" }\n+\t  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n \t}\n \n     T xFIELD, yFIELD;"}, {"sha": "230330ec66cd34dd9f946e7415ecdae0f8ec98d1", "filename": "gcc/testsuite/g++.dg/template/new3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,11 +1,12 @@\n-extern void *operator new(__SIZE_TYPE__); // { dg-message \"candidate\" }\n+extern void *operator new(__SIZE_TYPE__); // { dg-message \"note\" }\n \n template <class T >\n struct C\n {\n   void f() {\n     int* node;\n     new (&node) int(0); // { dg-error \"new\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n   }\n };\n "}, {"sha": "35be778765a4eeece1497ce002c44e1aca54f2eb", "filename": "gcc/testsuite/g++.dg/template/operator9.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,5 +5,6 @@ template<operator+> void foo(); // { dg-error \"before|non-function|template\" }\n void bar()\n {\n   foo();                        // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n }\n  "}, {"sha": "5e26c448b18ab9973e4e96ab8c1ac34d59537ed4", "filename": "gcc/testsuite/g++.dg/template/overload6.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -14,4 +14,5 @@ struct A\n template<int> void foo()\n {\n   unique(A().begin); // { dg-error \"no matching function\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n }"}, {"sha": "1919047360a3ac6134ac01bcff7c7a2f541d1cb0", "filename": "gcc/testsuite/g++.dg/template/ptrmem2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,9 +7,10 @@\n \n struct A {};\n \n-template <typename T> T A::* Foo (); // { dg-message \"candidate\" }\n+template <typename T> T A::* Foo (); // { dg-message \"note\" }\n \n void Baz ()\n {\n   Foo <int &> (); // { dg-error \"no matching function\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 14 }\n }"}, {"sha": "dee3c629a70dc32cac17e5a98032c516b004fd9d", "filename": "gcc/testsuite/g++.dg/template/ptrmem20.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,9 +8,10 @@ struct B\n   void foo();\n };\n \n-template<void (A::*)()> void bar(); // { dg-message \"candidate\" }\n+template<void (A::*)()> void bar(); // { dg-message \"note\" }\n \n void baz()\n {\n   bar<&B::foo>();  // { dg-error \"not a valid template argument|no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n }"}, {"sha": "62262c4b8e9326fcc855a61f2df1ad0f8076d27b", "filename": "gcc/testsuite/g++.dg/template/ptrmem4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,7 +6,7 @@\n // Pointer to member function template argument deduction ICE.\n \n \n-template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"candidate is\" }\n+template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"queryAliases|no known conversion\" }\n \n struct SpyExample\n {\n@@ -17,4 +17,5 @@ struct SpyExample\n void SpyExample::ready()\n {\n   queryAliases(inputs); // { dg-error \"matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n }"}, {"sha": "d0473f5cc16a0a68413a8b25be179ff93db428e3", "filename": "gcc/testsuite/g++.dg/template/ptrmem8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,7 +11,7 @@ struct B\n \n struct D : B {};\n \n-template <int (D::*fun)() const> int Get(); // { dg-message \"candidate\" }\n+template <int (D::*fun)() const> int Get(); // { dg-message \"note\" }\n \n int main () \n {"}, {"sha": "8bca7f696601f674e75e019fecf49ecb42293214", "filename": "gcc/testsuite/g++.dg/template/qualttp5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,13 +4,14 @@\n \n template <class U> struct A\n {\n-\ttemplate <class T> class B {}; // { dg-message \"operator=\" }\n+\ttemplate <class T> class B {}; // { dg-message \"operator=|no known conversion\" }\n };\n \n template <template <class> class TT> void f()\n {\n \tTT<int> y;\n \ty = 0; // { dg-error \"no match\" }\n+\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }\n \n template <class T> struct C"}, {"sha": "e39ca6b76aac520c2377334e4b625ec6cbce21bc", "filename": "gcc/testsuite/g++.dg/template/sfinae2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,10 +8,11 @@ template<int T> struct cl {\n   const static int value = T;\n };\n \n-template<int I> void fn (char (*) [cl<I>::value] = 0 ); // { dg-message \"candidate\" }\n+template<int I> void fn (char (*) [cl<I>::value] = 0 ); // { dg-message \"note\" }\n \n void foo (void)\n {\n   fn<0> ();  // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n }\n "}, {"sha": "f916ea468941339927a661b21b68fbda0be842b9", "filename": "gcc/testsuite/g++.dg/template/spec22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -16,6 +16,6 @@ template <typename T> struct srp\n };\n ptr<int> parent_get()\n {\n-  srp<int> parent;\n+  srp<int> parent;\t\t// { dg-message \"candidate\" }\n   return parent; // { dg-error \"is ambiguous\" }\n }"}, {"sha": "3d401f00ef9a5b87d2c352c10f8b2ecf509ec432", "filename": "gcc/testsuite/g++.dg/template/spec23.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -20,6 +20,7 @@ struct Bar\n Foo Quux (Bar const &b)\n {\n   return b; // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }\n \n "}, {"sha": "861d187d4db7f089927afc94e67648ad580966d8", "filename": "gcc/testsuite/g++.dg/template/ttp25.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -18,9 +18,12 @@ void f4(T, C<5>);\t\t// { dg-message \"note\" }\n template<int N> struct X {};\n void g() {\n   f1(5l, X<5>()); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n   f2(X<5>(), 5);\n   f3(X<5>(), 5l); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n   f4(5, X<5>());\n   f4(5l, X<5>()); // { dg-error \"no matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n   f4((short)5, X<5>());\n }"}, {"sha": "60fad0688580ff413b2a46d8d0b6f73f9b021615", "filename": "gcc/testsuite/g++.dg/template/typedef4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,4 +6,5 @@ template<typedef> void foo();  // { dg-error \"no type|typedef declaration|templa\n void bar()\n {\n   foo<int>();                  // { dg-error \"matching\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "8dc434b7577205a2058277687968a6cdd9a6a0c7", "filename": "gcc/testsuite/g++.dg/template/unify10.C", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -12,36 +12,48 @@ struct MyClass {\n };\n \n template<class CLASS>\n-void mFunction(void (CLASS::* method)()) {} // { dg-message \"candidate\" }\n+void mFunction(void (CLASS::* method)()) {} // { dg-message \"note\" }\n \n template<class CLASS>\n-void cFunction(void (CLASS::* method)() const) {} // { dg-message \"candidate\" }\n+void cFunction(void (CLASS::* method)() const) {} // { dg-message \"note\" }\n \n template<class CLASS>\n-void vFunction(void (CLASS::* method)() volatile) {} // { dg-message \"candidate\" }\n+void vFunction(void (CLASS::* method)() volatile) {} // { dg-message \"note\" }\n \n template<class CLASS>\n-void cvFunction(void (CLASS::* method)() const volatile) {} // { dg-message \"candidate\" }\n+void cvFunction(void (CLASS::* method)() const volatile) {} // { dg-message \"note\" }\n \n int main() {\n   mFunction(&MyClass::mMethod);\n   mFunction(&MyClass::cMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n   mFunction(&MyClass::vMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 30 }\n   mFunction(&MyClass::cvMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 32 }\n \n   cFunction(&MyClass::mMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 35 }\n   cFunction(&MyClass::cMethod);\n   cFunction(&MyClass::vMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 38 }\n   cFunction(&MyClass::cvMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 40 }\n \n   vFunction(&MyClass::mMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 43 }\n   vFunction(&MyClass::cMethod);    // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 45 }\n   vFunction(&MyClass::vMethod);\n   vFunction(&MyClass::cvMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 48 }\n \n   cvFunction(&MyClass::mMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 51 }\n   cvFunction(&MyClass::cMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 53 }\n   cvFunction(&MyClass::vMethod);   // { dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 55 }\n   cvFunction(&MyClass::cvMethod);\n \n   return 0;"}, {"sha": "ed6b31c31c46ce7f6ec2a4cb6c677e69092cca43", "filename": "gcc/testsuite/g++.dg/template/unify11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,7 +8,7 @@ struct A\n \n template <typename S, typename T, typename U, typename S::v = &S::v::s>\n typename S::A\n-foo (S c, T t, U u)\t\t// { dg-message \"candidate\" }\n+foo (S c, T t, U u)\t\t// { dg-message \"note\" }\n {\n }\n \n@@ -21,6 +21,7 @@ struct B\n     {\n       A a;\n       A b = foo (this, a, t); // { dg-error \"no matching function\" }\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n     }\n   } c;\n   B () : c (A ())"}, {"sha": "b12ecb29b215b60d997072a3efb7735ce0350d30", "filename": "gcc/testsuite/g++.dg/template/unify6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,7 +8,7 @@ template <typename T> void Foo1 (T const *a) {a (1);} // #2\n \n template <typename T> T const *Foo2 (T *);\n \n-template <typename T> void Foo3 (T *, T const * = 0); // { dg-message \"candidate\" }\n+template <typename T> void Foo3 (T *, T const * = 0); // { dg-message \"note\" }\n \n void Bar ()\n {\n@@ -19,4 +19,5 @@ void Bar ()\n   Foo3 (&Baz);\n \n   Foo3 (&Baz, &Baz); // { dg-error \"no matching function\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 21 }\n }"}, {"sha": "2bfa56303da9c85701fb48fe7d666b397d405206", "filename": "gcc/testsuite/g++.dg/template/unify7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,12 +3,13 @@\n \n // PR c++/3518\n template <typename T> void Foo (const T &);\n-template <typename T> void Baz (const T (*)()); // { dg-message \"candidate\" }\n+template <typename T> void Baz (const T (*)()); // { dg-message \"note\" }\n \n int &f ();\n \n int main()\n {\n   Foo (f);\n   Baz (f); // { dg-error \"no matching function\" \"\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }"}, {"sha": "40f6b9271fc5082d132a8e734649120c7c12bfcf", "filename": "gcc/testsuite/g++.dg/template/unify9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,7 +4,7 @@\n // Origin:Wolfgang Bangerth <bangerth@dealii.org>\n // PR 21799: deduction of cvqualifiers on member functions was wrong\n \n-template <class T> void f (T &,       void (T::*)()      ); // { dg-message \"candidate\" }\n+template <class T> void f (T &,       void (T::*)()      ); // { dg-message \"note\" }\n  \n struct X { \n     void g() const {}\n@@ -14,4 +14,5 @@ const X *x;\n  \n int main () { \n   f (*x, &X::g);  // {  dg-error \"no matching function\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n } "}, {"sha": "6ae78d9003f58c98e978168545100a92a435c466", "filename": "gcc/testsuite/g++.dg/template/varmod1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,10 +1,11 @@\n // { dg-options \"-w\" }\n \n-template<typename T> void foo(T); // { dg-message \"candidate\" }\n+template<typename T> void foo(T); // { dg-message \"note\" }\n  \n void bar()\n {\n   int i;\n   int A[i][i]; \n   foo(A); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n }"}, {"sha": "24725c999b0f08f5d6df1cb154f3b04245bf76e6", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15799.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -24,6 +24,7 @@ enum { first, last};\n \n void foo(void) {\n   sanjose obj(first); // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n }\n \n "}, {"sha": "4f6d878e88548dcd302461302714daa97ed47372", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15800-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,13 +5,14 @@\n struct panama {\n   panama();\n   panama(panama &);\n-  panama& operator=(panama&); // { dg-message \"candidate is\" }\n+  panama& operator=(panama&); // { dg-message \"operator=|no known conversion\" }\n };\n \n extern panama dig();\n \n void foo() {\n    panama obj;\n    obj = dig(); // { dg-error \"no match\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n }\n "}, {"sha": "4706d7e8a715ea9ef4bfcf7d986954bfa791c252", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ambiguity1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,10 +8,11 @@ struct B {\n   B (int);\n };\n \n-void myfunc (const A& t0); // { dg-message \"candidates\" } \n+void myfunc (const A& t0); // { dg-message \"note\" } \n void myfunc (const B& t0); // { dg-message \"note\" } \n \n int main ()\n {\n    myfunc(1);   // { dg-error \"ambiguous\" }\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n }"}, {"sha": "38c9d49a19ded350b9e1ae6bea91a6022d1ba05b", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash29.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,12 +8,13 @@ union Value\n \n struct GlobalAddress\t\t// { dg-message \"note\" }\n {\n-\tGlobalAddress(Value *nvar){} // { dg-message \"candidates\" }\n+\tGlobalAddress(Value *nvar){} // { dg-message \"note\" }\n };\n \n int\n main()\n {\n \tnew GlobalAddress(Value());\t\t// internal error occured here// { dg-error \"no matching\" }\n+\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n \t//new GlobalAddress(new Value());\t// This line is correct code\n }"}, {"sha": "fe759406ee139b0eeae8bf0c4893a48c55cf6083", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash48.C", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,22 +1,24 @@\n // { dg-do compile }\n // GROUPS passed old-abort\n-class internal { // { dg-message \"internal::internal\" }\n+class internal { // { dg-message \"internal::internal|candidate expects|no known conversion\" }\n \tint field;\n \tint anotherfield;\n };\n \n-class bug { // { dg-message \"bug::bug\" }\n+class bug { // { dg-message \"bug::bug|candidate expects\" }\n \tinternal* numbers;\n \tbug(int size);\n };\n \n-bug::bug(int size) // { dg-message \"bug::bug\" }\n+bug::bug(int size) // { dg-message \"bug::bug|candidate expects\" }\n {\n   numbers = new internal(size * size);// { dg-error \"no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n }\n \n int\n main()\n {\n   bug test; // { dg-error \"no match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }"}, {"sha": "ad652cf93588e9428ebe312a80e4eb50e0191e22", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash56.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -278,6 +278,7 @@ SetLD<T>::remove(const T& item)\n     Vix x;\n     for (first(x); 0 != x && this->REMOVE_CURRENT != a; next(x, a))\n \ta = operator()(x) == item ? this->REMOVE_CURRENT: this->NORMAL; // { dg-error \"\" } .*\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 280 }\n }\n template<class T>\n bool\n@@ -286,6 +287,7 @@ SetLD<T>::contains(const T& item) const\n     Vix x;\n     for (first(x); 0 != x; next(x)) {\n \tif (operator()(x) == item)// { dg-error \"\" } .*\n+\t  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 289 }\n \t    return TRUE;\n     }\n     return FALSE;\n@@ -343,7 +345,7 @@ operator>=(const SetLD<T>& a, const SetLD<T>& b)\n class String { };\n class IcaseString: public String { };\n template <> class SetLD< IcaseString >: public SetLD<    String  > {\tpublic:\t SetLD (): SetLD<    String  >() { };\t SetLD (const ::ListD<   IcaseString  >& other): SetLD<    String  >()\t{ ::ListD<   IcaseString  >::Vix x;\tfor (other.first(x); 0 != x; other.next(x))\tadd(other(x)); };\t SetLD (const  SetLD & other): SetLD<    String  >(other) { };\tconst    IcaseString  & operator()(const Vix& x) const\t{ return (   IcaseString  &) SetLD<    String  >::operator()(x); }\t}; \ttypedef SetLD<  String > SetLD_String_IcaseString_old_tmp99;\ttypedef SetLD< IcaseString > SetLD_String_IcaseString_new_tmp99;\t\n-inline int\t operator== (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD_String_IcaseString_new_tmp99& b) // { dg-message \"operator==\" }\n+inline int\t operator== (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD_String_IcaseString_new_tmp99& b) // { dg-message \"operator==|no known conversion\" }\n {\n const SetLD_String_IcaseString_old_tmp99& oa = a;\n const SetLD_String_IcaseString_old_tmp99& ob = b;"}, {"sha": "8be5d6ed3334468173df1d8e88f9171563b3ae5f", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/cvt3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -38,11 +38,12 @@ struct bar\n class nnyacc\n {\n public:\n-      static void assign(void*& lval, void*& rval); // { dg-message \"candidate is\" }\n+      static void assign(void*& lval, void*& rval); // { dg-message \"nnyacc::assign|no known conversion\" }\n };\n \n void\n foo (bar yylval, bar *yyvsp)\n {\n   nnyacc::assign(yylval.valueList, yyvsp[0].valueList);// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 47 }\n }"}, {"sha": "1b9415b0ed07bc674885c2632c847b87a7a0942a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -9,13 +9,14 @@ public:\n class Bar : public Foo\n {\n public:\n-      int f (int); // { dg-message \"candidate is\" }\n+      int f (int); // { dg-message \"Bar::f|candidate expects\" }\n };\n \n int main ()\n {\n   Bar b;\n \n   b.f ();// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n   b.f (10);\n }"}, {"sha": "6206d0b9eb13f5a31ac7457d42b810b5bf179f7c", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,7 +5,7 @@\n   class B\n   {\n   public:\n-\tstatic void WantsNew (NewObject creator); // { dg-message \"candidate is\" }\n+\tstatic void WantsNew (NewObject creator); // { dg-message \"B::WantsNew|no known conversion\" }\n   };\n   \n   class A\n@@ -19,5 +19,6 @@\n \t  // This used to die in convert_harshness_{ansi,old} cuz it\n \t  // didn't know what to do about a void type.\n \t  B::WantsNew ( A::NewOne );// { dg-error \"no matching\" } \n+\t  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 21 }\n       }\n   };"}, {"sha": "b24a1f6479f7cc071dc472f71549e99b6040f4cc", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload9.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,13 +1,13 @@\n // { dg-do assemble  }\n // GROUPS passed overloading\n-class CLogger\n+class CLogger\t\t\t// { dg-message \"candidate\" }\n {\n public:\n-      void operator() (int,const char *) {}; // { dg-message \"candidates\" }\n+      void operator() (int,const char *) {}; // { dg-message \"note\" }\n       void operator() (int,const char *, ...) {}; // { dg-message \"note\" }\n } Log;\n \n-class CGLogger : public CLogger\n+class CGLogger : public CLogger\t// { dg-message \"candidate\" }\n {\n } GLog;\n "}, {"sha": "a066d584880aa766cb48c95e9ce455ab04e3416b", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900127_01.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -21,6 +21,7 @@ void bar (f_ptr_t2);\t\t// { dg-message \"note\" }\n void function ()\n {\n   bar (foo);\t\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n }\n \n int main () { return 0; }"}, {"sha": "3d8625e5c8d51684b4c0a826223e672cccfb8e03", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900205_04.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -24,6 +24,7 @@ struct0::struct0 (int, void *) // { dg-message \"note\" }\n }\n \n struct struct0_derived_struct_0 : public struct0 { // { dg-error \"no matching|deleted\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n };\n \n struct0_derived_struct_0  object; // { dg-message \"synthesized|deleted\" }"}, {"sha": "cad19a2c3053d566fb0af703ba03856659286141", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900330_02.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -19,12 +19,13 @@ struct B {\n };\n \n struct D : public B {\n-  int f(struct B);\t\t// { dg-message \"candidate is\" } referred to below\n+  int f(struct B);\t\t// { dg-message \"D::f|no known conversion\" } referred to below\n };\n \n void h(D* pd)\n {\n   pd->f(1);\t\t// { dg-error \"no matching\" } D::f(struct B) hides B::f(int)\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 27 }\n }\n \n int main () { return 0; }"}, {"sha": "7e2829f7b095558972cb23a43b9dd38c9ab25d38", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900404_03.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -23,6 +23,7 @@ char c;\n void test ()\n {\n   function0 (c,c);\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 25 }\n }\n \n int main () { return 0; }"}, {"sha": "30c2603a7321d407848617ee09e8c043a2e3ac0a", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900514_03.C", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -29,7 +29,7 @@ struct t_0_st_0 {\n   operator t_0_st_1 ();// { dg-message \"note\" } \n };\n \n-t_0_st_0 t_0_st_0_obj0;\n+t_0_st_0 t_0_st_0_obj0;\t\t// { dg-message \"candidate\" }\n \n void t_0_assignment ()\n {\n@@ -54,7 +54,7 @@ struct t_1_st_1 {\n \n   t_1_st_1 (t_1_st_0&);\t\t\t\t\t// { dg-message \"note\" } \n   t_1_st_1 ();\n-  void operator= (t_1_st_1&);\t\t\t\t// { dg-message \"note\" } \n+  void operator= (t_1_st_1&);\t\t\t\t// { dg-message \"operator=|no known conversion\" } \n };\n \n struct t_1_st_0 {\n@@ -63,7 +63,7 @@ struct t_1_st_0 {\n   operator t_1_st_1 ();\t\t\t\t\t// { dg-message \"note\" } \n };\n \n-t_1_st_0 t_1_st_0_obj0;\n+t_1_st_0 t_1_st_0_obj0;\t\t// { dg-message \"candidate\" }\n \n void t_1_assignment ()\n {\n@@ -72,7 +72,9 @@ void t_1_assignment ()\n   t_1_st_1 t_1_st_1_obj2;\n \n   t_1_st_1_obj0 = t_1_st_0_obj0;\t\t\t// { dg-error \"no match\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 74 }\n   t_1_st_1_obj1 = t_1_st_1 (t_1_st_0_obj0);\t\t// { dg-error \"no match\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 76 }\n }\n \n void t_1_local_init ()\n@@ -93,10 +95,10 @@ struct t_2_st_1 {\t\t// { dg-error \"initializing\" }\n struct t_2_st_0 {\n   int member;\n \n-  operator t_2_st_1 ();\t\t// { dg-message \"candidate\" }\n+  operator t_2_st_1 ();\t\t// { dg-message \"note\" }\n };\n \n-t_2_st_0 t_2_st_0_obj0;\n+t_2_st_0 t_2_st_0_obj0;\t\t// { dg-message \"candidate\" }\n \n void t_2_assignment ()\n {"}, {"sha": "0e7218f0c8f96f2eeaecd560f492a2e17c662e30", "filename": "gcc/testsuite/g++.old-deja/g++.eh/ctor1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,8 +1,8 @@\n // { dg-do assemble  }\n struct A\n {\n-  A();\t\t\t\t// { dg-message \"\" } candidate\n-  A(A&);\t\t\t// { dg-message \"candidates\" } referenced below\n+  A();\t\t\t\t// { dg-message \"A::A|candidate expects\" } candidate\n+  A(A&);\t\t\t// { dg-message \"A::A|no known conversion\" } referenced below\n };\n \n int\n@@ -11,6 +11,7 @@ main ()\n   try\n     {\n       throw A();\t\t// { dg-error \"no matching\" \"match\" } can't copy\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n // { dg-error \"thrown expression\" \"expr\" { target *-*-* } 13 }\n     }\n   catch (...) { }"}, {"sha": "607cf9cc841b0b42d3eeb40c2dc0f5728193be7a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/conversion11.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -14,7 +14,7 @@ public:\n \n class Something {\n public:\n-  void DoSomething(Ding A);\t// { dg-message \"candidate is\" } referred to\n+  void DoSomething(Ding A);\t// { dg-message \"Something::DoSomething|no known conversion\" } referred to\n };\n \n void DoSomething(Ding A);\n@@ -23,5 +23,7 @@ void foo(Something* pX)\n {\n   DoSomething(1);\t\t// { dg-error \"conversion\" } \n   pX->DoSomething(1);\t\t// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 25 }\n   (*pX).DoSomething(1);\t\t// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 27 }\n }"}, {"sha": "9dcf6368aada266aa3d81fcab59bdaf093d52655", "filename": "gcc/testsuite/g++.old-deja/g++.jason/crash3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,4 +10,5 @@ struct Node\t\t\t// { dg-message \"note\" }\n void bug(int i)\n {\n   Node* q = new Node(i);\t// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n }"}, {"sha": "fba33eda70db251e21fcd8292c5320f7f11efe87", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload16.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,7 +1,8 @@\n // { dg-do assemble  }\n-void f (int);\t\t\t// { dg-message \"candidates\" } \n+void f (int);\t\t\t// { dg-message \"note\" } \n void f (long);\t\t\t// { dg-message \"note\" } \n int main()\n {\n   f (1 & 0xffffff00UL);\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 6 }\n }"}, {"sha": "fe0dae1031f86a766279a1a65e846ed0b8ade329", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload28.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -9,4 +9,5 @@ struct Foo {\n int main()\n {\n   Foo* f1 = new Foo();\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 11 }\n }"}, {"sha": "a1b563297fc3609b6bfaf6c73b2984f130c43743", "filename": "gcc/testsuite/g++.old-deja/g++.jason/scoping10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,13 +3,14 @@\n \n void f (char *);\n struct A {\n-  void f ();\t\t\t// { dg-message \"candidate is\" } referred to \n+  void f ();\t\t\t// { dg-message \"A::f|candidate expects\" } referred to \n };\n struct B : public A {\n   void g (char *);\n   void h () {\n     extern void g ();\t\t// { dg-message \"\" } \n     f(\"foo\");\t\t\t// { dg-error \"\" } hidden\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n     g(\"foo\");\t\t\t// { dg-error \"\" } hidden\n   }\n };"}, {"sha": "9414c06cee283aeb12454fa9f0c16d6d6202ecd6", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template30.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n template <class T, class U>    \n-int func(U, T);\t\t\t// { dg-message \"candidates\" }\n+int func(U, T);\t\t\t// { dg-message \"note\" }\n \n template <class T, class U>    \n int func(T, U)\t\t\t// { dg-message \"note\" }\n@@ -11,4 +11,5 @@ int func(T, U)\t\t\t// { dg-message \"note\" }\n int main ()\n {\n   func (0, 1);\t\t\t// { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }"}, {"sha": "da216ae5cc7936e90d9c0244f910fd16a8b35989", "filename": "gcc/testsuite/g++.old-deja/g++.jason/temporary2.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -13,5 +13,7 @@ X foo() { X x; return x; }\n int main() \n {\n   X   x(foo()); // { dg-error \"no match\" } Compiler doesn't warn about temporary reference.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 15 }\n   x.bar(foo()); // { dg-error \"no match\" } The same mistake is warned about in this case.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n }"}, {"sha": "3fc42bccc1bc202fc553a7cee6e72cf6bc9f1102", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg1.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -9,13 +9,13 @@\n //  check the order of declarations\n class A {\n public:\n-      void f(double* p) { std::cout << \"A(double*)\\n\"; } // { dg-message \"candidates\" }\n+      void f(double* p) { std::cout << \"A(double*)\\n\"; } // { dg-message \"note\" }\n       void f(int* p) { std::cout << \"A(int*)\\n\"; } // { dg-message \"note\" }\n };\n \n class B {\n public:\n-      void f(int* p) { std::cout << \"B(int*)\\n\"; } // { dg-message \"candidates\" }\n+      void f(int* p) { std::cout << \"B(int*)\\n\"; } // { dg-message \"note\" }\n       void f(double* p) { std::cout << \"B(double*)\\n\"; } // { dg-message \"note\" }\n };\n \n@@ -25,6 +25,8 @@ int main()\n     B b;\n \n     a.f(0);// { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 27 }\n     b.f(0);// { dg-error \"ambiguous\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 29 }\n }\n "}, {"sha": "fc590c4387a13a3f6ded28b36b9edf9690e987dc", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -9,7 +9,7 @@ struct String { String(const char*); };\n \n struct Ack { Ack(String); };\n \n-struct S { void method(Ack); };\t// { dg-message \"candidate is\" } referenced below\n+struct S { void method(Ack); };\t// { dg-message \"S::method|no known conversion\" } referenced below\n \n void function(Ack);\n \n@@ -18,5 +18,6 @@ foo(S *o)\n { // Neither call has a usable constructor for conversions of char[5] to Ack.\n   function(\"adsf\");// { dg-error \"conversion\" } \n   o->method(\"adsf\");// { dg-error \"no matching\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n   return 0;\n }"}, {"sha": "979ef808820eaafc00d319ef273b59c02ed99131", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -19,11 +19,12 @@ class B : public A {\n public:\n     void set (f2 f);\n };\n-void B::set (f2 f) { std::cout << \"called B\\n\";} // { dg-message \"candidate is\" }\n+void B::set (f2 f) { std::cout << \"called B\\n|no known conversion\";} // { dg-message \"B::set|no known conversion\" }\n \n int main() {\n     B b;\n     b.set(F1); // ARM page 309: should call A.set(f1) and that what g++ does,// { dg-error \"match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n                // but 13.1 of ARM clearly states that it should call B::set()\n                // or generate an error because overloading works only for\n                // functions within the same scope (first page of chapter 13)"}, {"sha": "c8b59b6792664b670783cc2a57366c90d66037f2", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors11.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -18,4 +18,5 @@ public:\n int main()\n {\n   B(10);// { dg-error \"match\" } B doesn't have a constructor taking int\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n }"}, {"sha": "071a36008f81b2dc6be0814605bb209a281cdb55", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -20,4 +20,5 @@ int main()\n     X *y = new X(10, \"123\");\n     // the compiler must reject this constructor call:\n     X *x = new X(\"abc\");// { dg-error \"match\" }\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }"}, {"sha": "1776be949bb37e4a65467bb0ea9a05d2f5005872", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors5.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,7 +5,7 @@\n // Subject: bug in handling static const object of the enclosing class\n // Date: Tue, 1 Sep 92 10:38:44 EDT\n \n-class X\t      // { dg-message \"7:X::X\" } implicit constructor\n+class X\t      // { dg-message \"7:X::X|candidate expects\" } implicit constructor\n {\n   private:\n     int x;\n@@ -23,14 +23,15 @@ class Y // { dg-error \"1:new types may not be defined in a return type\" \"err\" }\n     Y();\n }\n X::X( int xi ) // { dg-error \"14:return type specification for constructor invalid\" \"err\" }\n-// { dg-message \"1:candidates are: X::X\\\\(int\\\\)\" \"note\" { target *-*-* } 25 }\n+// { dg-message \"1:X::X|candidate expects\" \"match candidate text\" { target *-*-* } 25 }\n {\n     x = xi;\n }\n \n const X X::x0( 0 );\n \n Y::Y() // { dg-error \"6:no matching function for call to 'X::X\\\\(\\\\)'\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 33 }\n {\n     xx = X::x0;\n }"}, {"sha": "d94495a253e81846fe0a59a88edd58b0550b7c5e", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors9.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -33,6 +33,7 @@ int blort(Foo& f)\n int main()\n {\n   var_Foo b(2);// { dg-error \"match\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 35 }\n   b->a = 0;\n   int x = blort(b);\n   return x;"}, {"sha": "6695061210d132fdb44ad64fb87928ef323b4c02", "filename": "gcc/testsuite/g++.old-deja/g++.law/enum4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,7 +11,7 @@ enum Enum {enumerator1, enumerator2};\n struct Struct\n {\n   int i;\n-      int getI(Enum) {return i;} // { dg-message \"candidate is\" }\n+      int getI(Enum) {return i;} // { dg-message \"Struct::getI|no known conversion\" }\n };\n \n int funct (Enum)\n@@ -25,5 +25,6 @@ int main()\n   Struct s;\n   int x = funct(e+1);// { dg-error \"invalid\" }\n   int y = s.getI(e+1);// { dg-error \"match\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 27 }\n   return x+y;\n }"}, {"sha": "7d058fd896ea83827461227a60c4e58fbfe76440", "filename": "gcc/testsuite/g++.old-deja/g++.law/missed-error2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -14,7 +14,7 @@\n #undef max\n #endif\n \n-inline int max(int a, int b) {return a > b ? a : b;}; // { dg-message \"candidate\" } \n+inline int max(int a, int b) {return a > b ? a : b;}; // { dg-message \"note\" } \n  // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } 17 }\n inline double max(double a, double b) {return a > b ? a : b;}; // { dg-message \"note\" } candidate\n  // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } 19 }\n@@ -32,5 +32,6 @@ static void foo(int i, int j, double x, double y) {\n    std::cout << \"Max(int): \" << max(i,j) << \" Max(double): \" <<\n max(x,y) << '\\n';\n    std::cout << \"Max(int, double): \" << max(i, y) << '\\n';// { dg-error \"\" } \n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 34 }\n }\n "}, {"sha": "20d148dd544988bd3bb5562ea9d734537cbbbd92", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators32.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,7 +7,7 @@\n //\n \n template <class T>\n-void ffree(long rows, T** array) // { dg-message \"candidate\" }\n+void ffree(long rows, T** array) // { dg-message \"note\" }\n {\n for( long i = 0; i < rows; i++ )\n   delete [] array[i];                   // delete row\n@@ -50,6 +50,8 @@ foo() {std::cout << \"foo created\" << std::endl; }\n \n foo **f2;\n allocate2d(d1, d2, f2);// { dg-error \"\" }  type.*// ERROR -    trying to.*\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 52 }\n ffree(d1, f2);// { dg-error \"\" }  type.*// ERROR -    trying to.*\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 54 }\n \n }"}, {"sha": "3c50cbdd0e7e2979f1e3c4b709dbebe5ab19daf0", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,11 +10,12 @@ class B\n {\n public:\n       operator=(B &); // { dg-error \"no type\" }\n-      // { dg-message \"candidate is\" \"note\" { target *-*-* } 12 }\n+      // { dg-message \"B::operator=|no known conversion\" \"note\" { target *-*-* } 12 }\n };\n \n void\n test(B &b1, const B &b2)\n {\n         b1 = b2;// { dg-error \"match\" }\n+\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 19 }\n }"}, {"sha": "dfc57e149aa32c41a3abf98b3dd67b10f39ed836", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,3 +11,4 @@ class A {\t\t\t// { dg-message \"note\" } copy ctor candidate\n };\n \n A a(0); // { dg-error \"ambiguous\" }\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }"}, {"sha": "604aef9bcc0b8362a869494faf227344f1c28881", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net22.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,5 +10,6 @@ class Child : public Parent {\t\t// { dg-message \"note\" } called\n \n int main() {\n   Child c( \"String initializer\" );\t// { dg-error \"match\" } bad\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n   return 0;\n }"}, {"sha": "7e3a1ffa33535cbd544b051773cab1bba4ef0176", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p11110.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,7 +6,7 @@ class data;\n class conatiner {\n public:\n   virtual void* first    ();\n-  virtual data* contents (void* i);     // { dg-message \"candidate is\" }\n+  virtual data* contents (void* i);     // { dg-message \"conatiner::contents|no known conversion\" }\n };\n \n class user {\n@@ -18,4 +18,5 @@ private:\n \n data* user::data1() const {\n   return (_c.contents (_c.first));\t// { dg-error \"match\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n }"}, {"sha": "487f609a1451a8f4195a8c49edca4d299892bf3d", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p1989.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -197,6 +197,7 @@ List_DLS<T>::search(const T& item) const\n {\n     for (Pix x=this->first(); 0 != x; this->next(x)) {\n \tif (item == this->operator()(x)) // { dg-error \"match\" } const subversion\n+\t  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 199 }\n \t    return x;\n     }\n     return 0;\n@@ -485,7 +486,7 @@ class STRLIdentifier {\n     char buf[10];\n };\n \n-extern int operator==(vertex<STRLIdentifier*>&, vertex<STRLIdentifier*>&); // { dg-message \"candidates\" } const subversion\n+extern int operator==(vertex<STRLIdentifier*>&, vertex<STRLIdentifier*>&); // { dg-message \"note\" } const subversion\n extern int operator==(STRLIdentifier&, STRLIdentifier&); // { dg-message \"note\" } fn ref in err msg\n \n extern int x(List_DLSp<STRLIdentifier *>);"}, {"sha": "4e74899a1d8c0af00bb1db78e20f2a6c015bce45", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p2431.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,7 @@\n class A\n {\n \tpublic:\n-      A(A &); // { dg-message \"candidate is\" }\n+      A(A &); // { dg-message \"note\" }\n };\n \n class B\n@@ -19,5 +19,6 @@ class C\n \t{\n \t\tB\tb;\n \t\tA a = b;// { dg-error \"match\" } \n+\t\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 21 }\n \t}\n };"}, {"sha": "6e78af16515fba166fd7420a0619cd3d42897a54", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p438.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -12,12 +12,13 @@ class C\n class D\n {\n    public:\n-   void a(C& b); // { dg-message \"candidate is\" }\n+   void a(C& b); // { dg-message \"D::a|no known conversion\" }\n };\n \n void C::test() const\n {\n    D d;\n \n    d.a(*this);\t// { dg-error \"match\" } *this is const, so should get error\n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n }"}, {"sha": "04c9c4867e984a3d0347f69b560b391290d9c82a", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p807a.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -15,8 +15,8 @@ public:\n \n class B {\n public:\n-\toperator A();\t\t// { dg-message \"candidates\" } fn ref in err msg\n+\toperator A();\t\t// { dg-message \"note\" } fn ref in err msg\n };\n \n-B b;\n+B b;\t     // { dg-message \"candidate\" }\n A a = b;  // { dg-error \"ambiguous\" } should fail as it is ambigious."}, {"sha": "2c62f5c79ab0d0483c6134e83fa80e454a0d33c2", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p9068.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,7 +2,7 @@\n // prms-id: 9068\n \n struct ostream {\n-  void operator<< (int);\t// { dg-message \"candidate is\" } fn ref in err msg\n+  void operator<< (int);\t// { dg-message \"operator|no known conversion\" } fn ref in err msg\n };\n \n class C {\n@@ -14,6 +14,7 @@ public:\n void foo (ostream& lhs, const C& rhs)\n {\n   lhs << rhs.i;\t\t// { dg-error \"match\" } no such i for any opr << ()\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n }\n \n int& C::i () {"}, {"sha": "7a54e051b1e59c6717b6850e775668bcc159d444", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t120.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,4 +3,4 @@\n typedef void (*T) (...);\n void f ();\n struct S { void g (T); void h() { g(f); } };// { dg-error \"match\" \"match\" } \n-// { dg-message \"candidate is\" \"note\" { target *-*-* } 5 }\n+// { dg-message \"candidate|S::g|no known conversion\" \"match candidate text\" { target *-*-* } 5 }"}, {"sha": "b0c9253da8431a5fac04c94d955dc1049b625c4c", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t121.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,4 +3,4 @@\n void f ();\n void g1 (void (*) (...)); void h1 () { g1 (f); }// { dg-error \"invalid conversion\" }\n struct S { void g2 (void (*) (...)); void h2 () { g2 (f); } };// { dg-error \"match\" \"match\" } \n-// { dg-message \"candidate is\" \"note\" { target *-*-* } 5 }\n+// { dg-message \"candidate|S::g2|no known conversion\" \"match candidate text\" { target *-*-* } 5 }"}, {"sha": "cf0a4f71b8e9af79f39e1d1981d36e77dc56fbac", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t128.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,3 +3,4 @@\n struct A { A (int); };\n struct B : A {}; // { dg-message \"note\" } without ctor // ERROR - candidates\n void f () { B (0); }// { dg-error \"match\" } .*\n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 5 }"}, {"sha": "facfa3f56984b980d88ccddd40dbf21dc2fb5d5a", "filename": "gcc/testsuite/g++.old-deja/g++.ns/overload2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,4 +10,5 @@ void f();     // { dg-message \"note\" }\n void g()\n {\n   f();        // { dg-error \"ambiguous\" } ambiguous, ::f or A::f ?\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n }"}, {"sha": "343cfefc459630d8da2143a7c0e0c255ed1cded4", "filename": "gcc/testsuite/g++.old-deja/g++.ns/using12.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,7 @@\n \n namespace foo\n {\n-  void x (bool);     // { dg-message \"candidates\" }\n+  void x (bool);     // { dg-message \"note\" }\n   void x (char);     // { dg-message \"note\" } candidates\n   void x (int);      // { dg-message \"note\" } candidates\n   void x (double);   // { dg-message \"note\" } candidates\n@@ -16,4 +16,5 @@ void fn (int i)\n   using foo::x;\n   using baz::x;\n   x(i); \t // { dg-error \"ambiguous\" }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n }"}, {"sha": "b1fa01c9b49e9b814de812057b231eb74bf99a05", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash24.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,11 +7,12 @@ class foo {\n    friend class __iterator;\n    typedef __iterator const_iterator;\n    virtual ~foo() { }\n-   __iterator begin();\t\t\t\t// { dg-message \"candidate is\" } \n+   __iterator begin();\t\t\t\t// { dg-message \"foo::begin|no known conversion for implicit\" } \n };\n static void iteratorTest(const foo &x)\n {\n    foo::const_iterator i = x.begin();\t\t// { dg-error \"incomplete type\" \"incomplete type\" } \n+   // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 14 }\n    // { dg-error \"no matching\" \"no matching\" { target *-*-* } 14 }\n    for (; i; ++i)\n       *i;"}, {"sha": "87166f0ae2de1dd28789b698ef85806c60fbc832", "filename": "gcc/testsuite/g++.old-deja/g++.other/expr1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,8 +2,8 @@\n \n // Simplified from bug report by Trevor Taylor <ttaylor@powerup.com.au>\n \n-struct T {\n-  int operator()(int) { } // { dg-message \"candidate is\" }\n+struct T {\t\t\t// { dg-message \"candidate\" }\n+  int operator()(int) { } // { dg-message \"operator|candidate expects\" }\n };\n \n int main() {"}, {"sha": "b994b80701a2250fc25e9498ad431700e31619b3", "filename": "gcc/testsuite/g++.old-deja/g++.other/overload11.C", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -21,10 +21,8 @@\n // sure that doesn't happen again.\n \n \n-void ovl (int);          // { dg-error \"\" } candidate\n-// { dg-message \"int\" \"int\" { target *-*-* } 24 }\n-void ovl (float);        // { dg-error \"\" } candidate\n-// { dg-message \"float\" \"float\" { target *-*-* } 26 }\n+void ovl (int);          // { dg-message \"ovl|candidate expects\" } candidate\n+void ovl (float);        // { dg-message \"ovl|candidate expects\" } candidate\n void fn (int);\n void fna (int);\n \n@@ -36,6 +34,7 @@ int main (int argc, char **argv)\n   (ovl) (1);                // ok\n   (&ovl) (1);               // { dg-error \"\" } not suitable for overload resolution\n   (ovl) ();                 // { dg-error \"\" } no matching candidates\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 36 }\n   (&ovl) ();                // { dg-error \"\" } not suitable for overload resolution\n   \n   // 13.3.1.1 indicates that the following are errors -- the primary expression"}, {"sha": "11e648ed86eaaf20d22e201f67cf2e158e1a1870", "filename": "gcc/testsuite/g++.old-deja/g++.other/pmf3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,7 @@\n // Bug: g++ was crashing after giving errors.\n \n template<class T>\n-  void connect_to_method( // { dg-message \"candidate is\" }\n+  void connect_to_method( // { dg-message \"connect_to_method|no known conversion\" }\n     T *receiver,\n     void (T::*method)())\n   {}\n@@ -21,5 +21,6 @@ public:\n Gtk_Base::Gtk_Base()\n {\n   connect_to_method(this,&show);   // { dg-error \"no match\" } invalid pmf expression\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 23 }\n   connect_to_method(this,&expose); // { dg-error \"pointer to member\" } invalid pmf expression\n }"}, {"sha": "ca28ec8e4435db1b1a630fb928d8fd96d5ed3b32", "filename": "gcc/testsuite/g++.old-deja/g++.other/volatile1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -16,5 +16,6 @@ int main(void)\n {\n   volatile f_class vf;\n   0 ? ret_v_f_class() : vf;\t// { dg-error \"match\" } can't copy volatile lvalue\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n   return 0;\n }"}, {"sha": "ecfa4de18f9fdfe58c1d54b506b2dc6ad3df8a12", "filename": "gcc/testsuite/g++.old-deja/g++.pt/auto_ptr.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -30,7 +30,7 @@ template<typename X> struct auto_ptr {\n    X* release() throw() { X* p=px; px=0; return p; }\n    void reset(X* p=0) throw() { if (px != p) delete px, px = p; }\n \n-   auto_ptr(auto_ptr_ref<X> r) throw() : px(r.py) {} // { dg-message \"candidate\" } \n+   auto_ptr(auto_ptr_ref<X> r) throw() : px(r.py) {} // { dg-message \"note\" } \n    template<typename Y> operator auto_ptr_ref<Y>() throw() {\n       return auto_ptr_ref<Y>(release()); \n    }\n@@ -52,4 +52,5 @@ int main() {\n     x = y;\n     g(f());\n     h(f());\t\t\t// { dg-error \"match\" \"match\" } no usable copy ctor\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 54 }\n }"}, {"sha": "2cfed93084de9e60390bb6570674f38712a0e3b4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash28.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"\" }\n \n template <class ARRY>\n-inline unsigned int asize(ARRY &a) // { dg-message \"candidate\" }\n+inline unsigned int asize(ARRY &a) // { dg-message \"note\" }\n {\n   return sizeof(a) / sizeof(a[0]);\n }\n@@ -11,4 +11,5 @@ void f(unsigned int n) {\n   int x[n];\n \n   asize(x); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 13 }\n }"}, {"sha": "1aad62132e1facef9bad158cc4160069d7066170", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash60.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,12 +7,13 @@\n template< typename SID, class SDR >\n void k( SID sid, SDR* p,\n  void (SDR::*)\n- ( typename SID::T ) );\t\t// { dg-message \"candidate\" }\n+ ( typename SID::T ) );\t\t// { dg-message \"note\" }\n \n struct E { };\n struct S { void f( int ); };\n \n void f()\n {\n   k( E(), (S*)0, &S::f );   // { dg-error \"\" } no match\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n } "}, {"sha": "1831e45a3553518565a5a4abf44afea6ccaff8ff", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit38.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,8 +1,9 @@\n // { dg-do assemble  }\n template <int I>\n-void f(int j);\t\t\t// { dg-message \"candidate\" }\n+void f(int j);\t\t\t// { dg-message \"note\" }\n \n void g()\n {\n   f<7, 12>(3); // { dg-error \"\" } no matching function.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n }"}, {"sha": "995d8c0750b97fea3df9555d66b162272ee6c2fd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit39.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,8 +1,9 @@\n // { dg-do assemble  }\n template <class T>\n-void f(int i);\t\t\t// { dg-message \"candidate\" }\n+void f(int i);\t\t\t// { dg-message \"note\" }\n \n void g()\n {\n   f<7>(3); // { dg-error \"\" } no matching function.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n }"}, {"sha": "560370a8b48797e6090b1ba5c28d2d03aadefb78", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit41.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,9 +1,10 @@\n // { dg-do assemble  }\n template <int I>\n-void f(int i);\t\t\t// { dg-message \"candidate\" }\n+void f(int i);\t\t\t// { dg-message \"note\" }\n \n void g()\n {\n   int i;\n   f<i>(7); // { dg-error \"\" } template argument 1 is invalid.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "c0863a072a110825ae678fe4d9f508ac977689e8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit67.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -16,6 +16,8 @@ void foo();\t\t\t// { dg-message \"note\" }\n void bar()\n {\n   foo<S::f>(); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n   foo<g>();    // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n   \n }"}, {"sha": "1213a1511d3df1f477d03880b4543554775abad3", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit77.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -7,12 +7,13 @@ template <int I, int J>\n struct S<I, J, 2> : public S<I, I, I>, S<J, J, J> {};\n \n template <int I, int J, int K>\n-void f(S<I, J, K>, S<I, I, I>);\t// { dg-message \"candidate\" }\n+void f(S<I, J, K>, S<I, I, I>);\t// { dg-message \"note\" }\n \n void g() {\n   S<0, 0, 0> s0;\n   S<0, 1, 2> s2;\n   \n   f<0>(s0, s2);\n   f(s0, s2); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n }"}, {"sha": "0dcc65f6fac960d6710f8a4b0dbfa15f5921654d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/expr2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -4,9 +4,10 @@ template <int I>\n struct S {};\n \n template <int J>\n-void foo(S<J + 2>);\t\t// { dg-message \"candidate\" }\n+void foo(S<J + 2>);\t\t// { dg-message \"note\" }\n \n void bar()\n {\n   foo(S<3>()); // { dg-error \"\" } no way to deduce J from this.\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 11 }\n }"}, {"sha": "6d61079b4c231d6837e64a50dea642a4df58d9c7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -15,13 +15,14 @@ struct A\n   void baz ();\n };\n \n-template <typename T> void foo (int (*)(T));      // { dg-message \"candidate\" } \n+template <typename T> void foo (int (*)(T));      // { dg-message \"note\" } \n template <typename T> void foo (int (A::*)(T));   // { dg-message \"note\" } candidate\n \n \n void A::baz ()\n {\n   foo (&A::f);  // { dg-error \"ambiguous\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 24 }\n   foo (A::f);\n   foo (&(A::f));\n   foo (f);"}, {"sha": "85d3e7378cadd06155cf9183251159586f371c99", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem6.C", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -13,22 +13,30 @@ public:\n };\n \n template <void (A::*)() >\n-void g() {}\t\t\t// { dg-message \"candidate\" }\n+void g() {}\t\t\t// { dg-message \"note\" }\n template <int A::*>\n-void h() {}\t\t\t// { dg-message \"candidate\" }\n+void h() {}\t\t\t// { dg-message \"note\" }\n \n \n int main() {\n   g<&A::f>();\n   h<&A::i>();\n   g<&B::f>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 24 }\n   h<&B::j>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n   g<(void (A::*)()) &A::f>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n   h<(int A::*) &A::i>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 30 }\n   g<(void (A::*)()) &B::f>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 32 }\n   h<(int A::*) &B::j>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 34 }\n   g<(void (A::*)()) 0>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 36 }\n   h<(int A::*) 0>(); // { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 38 }\n \n   return 0;\n }"}, {"sha": "fc5d5262b552d6e08fb5ecd4c7509e8db940d5c2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec35.C", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,24 +8,28 @@\n \n extern \"C\" int puts (char const *);\n \n-template <typename T> int Foo (T);    // { dg-message \"candidate\" } \n+template <typename T> int Foo (T);    // { dg-message \"note\" } \n template <typename T> int Foo (T &);  // { dg-message \"note\" } candidate\n \n-template <typename T> int Qux (T);    // { dg-message \"candidate\" } \n+template <typename T> int Qux (T);    // { dg-message \"note\" } \n template <typename T> int Qux (T const &);  // { dg-message \"note\" } candidate\n \n-template <typename T> int Bar (T const *const &); // { dg-message \"candidate\" } \n+template <typename T> int Bar (T const *const &); // { dg-message \"note\" } \n template <typename T> int Bar (T *const &);       // { dg-message \"note\" } candidate\n template <typename T> int Bar (T *);              // { dg-message \"note\" } candidate\n \n-template <typename T> int Baz (T *const &);       // { dg-message \"candidate\" } \n+template <typename T> int Baz (T *const &);       // { dg-message \"note\" } \n template <typename T> int Baz (T *);              // { dg-message \"note\" } candidate\n \n int Baz (int const *ptr, int *ptr2)\n {\n   Baz (ptr2);   // { dg-error \"ambiguous\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n   Bar (ptr2);   // { dg-error \"ambiguous\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n   Foo (ptr2);   // { dg-error \"ambiguous\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 30 }\n   Qux (ptr2);   // { dg-error \"ambiguous\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 32 }\n   return 0;\n }"}, {"sha": "df7112ad0d0ecf8ac937f2f28c94214a89bae635", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec5.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,20 +1,22 @@\n // { dg-do assemble  }\n \n template <class T>\n-void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n+void f(T t1, T t2);\t\t// { dg-message \"note\" }\n \n template <>\n void f(int i, int j);\n \n template <class T>\n-void g(T t1, T t2) {}\t\t// { dg-message \"candidate\" }\n+void g(T t1, T t2) {}\t\t// { dg-message \"note\" }\n \n template void g(int i, int j);\n \n void h()\n {\n   f(3, 'c'); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n   g(3, 'c'); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n }\n \n "}, {"sha": "fc19c3cf53595242ea04e52958fe789c2b3f6ec6", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec6.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,7 @@\n struct S1\n {\n   template <class T>\n-  void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n+  void f(T t1, T t2);\t\t// { dg-message \"note\" }\n };\n \n \n@@ -14,7 +14,7 @@ template <class U>\n struct S2\n {\n   template <class T>\n-  void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n+  void f(T t1, T t2);\t\t// { dg-message \"note\" }\n };\n \n template <>\n@@ -25,7 +25,9 @@ void h()\n {\n   S1 s1;\n   s1.f(3, 'c'); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 27 }\n \n   S2<char> s2;\n   s2.f(3, 'c'); // { dg-error \"\" } no matching function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 31 }\n }"}, {"sha": "bf4f1ea8d25ad9d1290d413086c1051d99235b44", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t05.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -3,7 +3,8 @@\n template <class A> class B {    // { dg-message \"note\" } \n   A a;                          \n  public:\n-  B(A&aa);\t\t\t// { dg-message \"candidates\" }\n+  B(A&aa);\t\t\t// { dg-message \"note\" }\n   ~B();\n };\n static B<int> b_int (3);\t// { dg-error \"no matching function\" } \n+// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }"}, {"sha": "77d1c990950eb8f6325ed40a71faa654b103ab3c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t24.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,8 +1,9 @@\n // { dg-do assemble  }\n // { dg-options \"\" }\n \n-template <class X> int f (X x, X y) { return 23; } // { dg-message \"candidate\" }\n+template <class X> int f (X x, X y) { return 23; } // { dg-message \"note\" }\n \n int foo () {\n   return f (7);\t// { dg-error \"\" } \n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n }"}, {"sha": "6dd9961088d17c25515f005d4f8bc9a1c031630a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-template <class T> void f (T);\t// { dg-message \"candidate\" }\n+template <class T> void f (T);\t// { dg-message \"note\" }\n \n void g ();\n void g (int);\n@@ -8,5 +8,6 @@ int\n main ()\n {\n   f (g);\t\t\t// { dg-error \"\" } ambiguous unification\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 10 }\n   return 0;\n }"}, {"sha": "0e5c0349544d426159c683c8d1903a826c543231", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify6.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -19,12 +19,14 @@ template<> void fn<int &>() {} // ok, specialize A\n template<> void fn<void ()>() {} // ok, specialize A\n \n // now make sure we moan when we really should\n-template<class T> void foo(T const *){} // { dg-message \"candidate\" }\n+template<class T> void foo(T const *){} // { dg-message \"note\" }\n \n void f()\n {\n   foo<int &>(); // { dg-error \"\" } attempt to build int & const *\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 26 }\n   foo<void ()>(); // { dg-error \"\" } attempt to build void (const *)()\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 28 }\n }\n \n typedef void (*Fptr)();"}, {"sha": "320926092f087e0c28c0f2a9059952ca58264ab7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify8.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -8,13 +8,14 @@\n // overload resolution.\n \n \n-template <typename T> void Foo (T const **); // { dg-message \"candidate\" }\n+template <typename T> void Foo (T const **); // { dg-message \"note\" }\n template <typename T> void Bar (T const * const *);\n void Foo (int);       // { dg-message \"note\" }\n void Foo (float);     // { dg-message \"note\" } candidate\n \n void baz (int **p1)\n {\n   Foo (p1);   // { dg-error \"match\" } no such function\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n   Bar (p1);   // OK\n }"}, {"sha": "f3490762621565d278c47b461bec3241ebf944fb", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -66,6 +66,7 @@ int main()\n {\n     // no edge weighting, therefore type Empty:\n     Graph<std::string, Empty> V(true);        // { dg-error \"no match\" } no bool constructor\n+    // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 68 }\n     // ReadGraph(V, \"gra1.dat\");\n \n     // display of vertices with successors"}, {"sha": "329393aeadf8b6cf732e01e5bebe7bb870f445a7", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb119.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -1,11 +1,12 @@\n // { dg-do assemble  }\n template<bool B>\n-void f()\t\t\t// { dg-message \"candidate\" }\n+void f()\t\t\t// { dg-message \"note\" }\n {\n }\n \n int main()\n {\n   f<bool>(); // { dg-error \"\" } .*\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 9 }\n }\n "}, {"sha": "67445308c1a7626c30c1d8b054d91d76df652993", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb131.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -10,11 +10,13 @@ struct a {\n \tvoid bar( double );\n \tvoid bar( float );\n \n-  void foo( void (a::*member)(float) );   // { dg-message \"candidate\" } \n+  void foo( void (a::*member)(float) );   // { dg-message \"void a::foo|no known conversion\" } \n };\n \n a::a()\n {\n \tfoo( &junk ); // { dg-error \"match\" } junk is an unqualified-id.\n+\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 18 }\n \tfoo( &bar );  // { dg-error \"match\" } bar is an unqualified-id.\n+\t// { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n }"}, {"sha": "a78ea41085a241911e5ae357fe78b7c99ba50655", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb22.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -11,18 +11,19 @@ public:\n         operator int() const {return 2;}\n };\n \n-bool operator==(const MyInt& a, const int& b)   // { dg-message \"note\" } candidate\n+bool operator==(const MyInt& a, const int& b)   // { dg-message \"operator==\" } candidate\n {\n         return (int)a == b;\n }\n \n-bool operator==(const MyInt& a, const MyInt& b) // { dg-message \"note\" } candidate\n+bool operator==(const MyInt& a, const MyInt& b) // { dg-message \"operator==\" } candidate\n {\n         return (int)a == (int)b;\n }\n \n bool f()\n {\n   return 3 == MyInt();                          // { dg-error \"ambiguous\" \"err\" } \n+  // { dg-message \"operator==\" \"match candidate text\" { target *-*-* } 26 }\n   // { dg-message \"candidates\" \"note\" { target *-*-* } 26 }\n }"}, {"sha": "1ada91234294fbf615f205c219b98e16e9362665", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb69.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -6,12 +6,13 @@\n int r = 0;\n \n struct foo {\t\t        // { dg-message \"note\" } candidate\n-  foo(int x) { r = 1; }\t\t// { dg-message \"candidate\" }\n+  foo(int x) { r = 1; }\t\t// { dg-message \"note\" }\n };\n \n struct bar : foo {\n   typedef int an_int;\n   bar() : bar::an_int(3) {}\t// { dg-error \"match\" \"match\" } not a base\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 14 }\n   // { dg-message \"expected\" \"exp\" { target *-*-* } 14 }\n };\n "}, {"sha": "c5620316e9ca860c907c0653903a03582bda1e5f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb98.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb6efc1f4ada2d63c48270d6a303d8823c7845d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C?ref=feb6efc1f4ada2d63c48270d6a303d8823c7845d", "patch": "@@ -5,7 +5,7 @@\n     template<class T, unsigned int Length>\n     inline\n     unsigned int\n-    extent(T (&x)[Length])\t// { dg-message \"candidate\" }\n+    extent(T (&x)[Length])\t// { dg-message \"note\" }\n     {\n             return Length;\n     }\n@@ -15,4 +15,5 @@\n     void f()\n     {\n       extent(b);  // { dg-error \"\" } no matching function\n+      // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 17 }\n     }"}]}