{"sha": "94dfccd136eece4162a4c78bcc14b3fa61767c0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRkZmNjZDEzNmVlY2U0MTYyYTRjNzhiY2MxNGIzZmE2MTc2N2MwZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-08-28T01:16:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-28T01:16:08Z"}, "message": "decl.c (pushdecl): Matching decls for local externs are found in the current level.\n\n        * decl.c (pushdecl): Matching decls for local externs are found in\n        the current level.  Propagate linkage information from previous\n        declarations.\n\nFrom-SVN: r36011", "tree": {"sha": "e2496e43b37d7c4c672ec630c8be922f91b318bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2496e43b37d7c4c672ec630c8be922f91b318bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94dfccd136eece4162a4c78bcc14b3fa61767c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94dfccd136eece4162a4c78bcc14b3fa61767c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94dfccd136eece4162a4c78bcc14b3fa61767c0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94dfccd136eece4162a4c78bcc14b3fa61767c0e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbfbf340fc90540e37aff95581596c7225ae926b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbfbf340fc90540e37aff95581596c7225ae926b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbfbf340fc90540e37aff95581596c7225ae926b"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "507edd876a01b2fefe41d4d461c3d090e51c60d1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=94dfccd136eece4162a4c78bcc14b3fa61767c0e", "patch": "@@ -1,3 +1,9 @@\n+2000-08-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (pushdecl): Matching decls for local externs are found in\n+\tthe current level.  Propagate linkage information from previous\n+\tdeclarations.\n+\n 2000-08-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* ir.texi (Expressions): Fix typo."}, {"sha": "552070b6e1d098995fd8d20a4827aac41084fcb9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=94dfccd136eece4162a4c78bcc14b3fa61767c0e", "patch": "@@ -3852,7 +3852,7 @@ pushdecl (x)\n              nesting.  */\n \t  && !(TREE_CODE (x) == FUNCTION_DECL && !DECL_INITIAL (x))\n \t  /* A local declaration for an `extern' variable is in the\n-\t     scoped of the current namespace, not the current\n+\t     scope of the current namespace, not the current\n \t     function.  */\n \t  && !(TREE_CODE (x) == VAR_DECL && DECL_EXTERNAL (x))\n \t  && !DECL_CONTEXT (x))\n@@ -3871,20 +3871,40 @@ pushdecl (x)\n   name = DECL_NAME (x);\n   if (name)\n     {\n-#if 0\n-      /* Not needed...see below.  */\n-      char *file;\n-      int line;\n-#endif\n+      int different_binding_level = 0;\n+\n       if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n \tname = TREE_OPERAND (name, 0);\n \n-      /* Namespace-scoped variables are not found in the current level. */\n-      if (TREE_CODE (x) == VAR_DECL && DECL_NAMESPACE_SCOPE_P (x))\n+      /* In case this decl was explicitly namespace-qualified, look it\n+\t up in its namespace context.  */\n+      if (TREE_CODE (x) == VAR_DECL && DECL_NAMESPACE_SCOPE_P (x)\n+\t  && namespace_bindings_p ())\n \tt = namespace_binding (name, DECL_CONTEXT (x));\n       else\n \tt = lookup_name_current_level (name);\n \n+      /* [basic.link] If there is a visible declaration of an entity\n+\t with linkage having the same name and type, ignoring entities\n+\t declared outside the innermost enclosing namespace scope, the\n+\t block scope declaration declares that same entity and\n+\t receives the linkage of the previous declaration.  */\n+      if (! t && current_function_decl && x != current_function_decl\n+\t  && (TREE_CODE (x) == FUNCTION_DECL || TREE_CODE (x) == VAR_DECL)\n+\t  && DECL_EXTERNAL (x))\n+\t{\n+\t  /* Look in block scope.  */\n+\t  t = IDENTIFIER_VALUE (name);\n+\t  /* Or in the innermost namespace.  */\n+\t  if (! t)\n+\t    t = namespace_binding (name, DECL_CONTEXT (x));\n+\t  /* Does it have linkage?  */\n+\t  if (t && ! (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n+\t    t = NULL_TREE;\n+\t  if (t)\n+\t    different_binding_level = 1;\n+\t}\n+\n       /* If we are declaring a function, and the result of name-lookup\n \t was an OVERLOAD, look for an overloaded instance that is\n \t actually the same as the function we are declaring.  (If\n@@ -3919,7 +3939,16 @@ pushdecl (x)\n \t}\n       else if (t != NULL_TREE)\n \t{\n-\t  if (TREE_CODE (t) == PARM_DECL)\n+\t  if (different_binding_level)\n+\t    {\n+\t      if (decls_match (x, t))\n+\t\t/* The standard only says that the local extern\n+\t\t   inherits linkage from the previous decl; in\n+\t\t   particular, default args are not shared.  It would\n+\t\t   be nice to propagate inlining info, though.  FIXME.  */\n+\t\tTREE_PUBLIC (x) = TREE_PUBLIC (t);\n+\t    }\n+\t  else if (TREE_CODE (t) == PARM_DECL)\n \t    {\n \t      if (DECL_CONTEXT (t) == NULL_TREE)\n \t\tfatal (\"parse errors have confused me too much\");"}, {"sha": "8b6354cc63f2c4512bb49b8198b4a24fbc0ac412", "filename": "gcc/testsuite/g++.old-deja/g++.other/scope1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fscope1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94dfccd136eece4162a4c78bcc14b3fa61767c0e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fscope1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fscope1.C?ref=94dfccd136eece4162a4c78bcc14b3fa61767c0e", "patch": "@@ -0,0 +1,12 @@\n+// Testcase for proper scoping of local externs.\n+\n+int x = 1;\n+\n+int main()\n+{   \n+  int x = 2;\n+  {\n+    extern int x;\n+    return (x != 1);\n+  }\n+}"}]}