{"sha": "11df3da358dd7a2b946004bee03a9bad6bd875a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkZjNkYTM1OGRkN2EyYjk0NjAwNGJlZTAzYTliYWQ2YmQ4NzVhNQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-08-27T14:18:36Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-08-27T14:18:36Z"}, "message": "re PR tree-optimization/33173 (ICE in set_uids_in_ptset, at tree-ssa-structalias.c:4704)\n\n2007-08-27  Daniel Berlin  <dberlin@dberlin.org>\n\t\n\tFix PR tree-optimization/33173\n\t* tree-ssa-alias.c (find_used_portions): Fix reversed test.\n\nFrom-SVN: r127834", "tree": {"sha": "b3f35f56863b101cfcb0e6c890ab06e52b5ca5e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f35f56863b101cfcb0e6c890ab06e52b5ca5e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11df3da358dd7a2b946004bee03a9bad6bd875a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11df3da358dd7a2b946004bee03a9bad6bd875a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11df3da358dd7a2b946004bee03a9bad6bd875a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11df3da358dd7a2b946004bee03a9bad6bd875a5/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62d75179760ebc60b025194c86ae0b5ee3695fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d75179760ebc60b025194c86ae0b5ee3695fe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d75179760ebc60b025194c86ae0b5ee3695fe0"}], "stats": {"total": 117, "additions": 115, "deletions": 2}, "files": [{"sha": "ab630ad29fa8d661c862f08793f828dc8d1d3d60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11df3da358dd7a2b946004bee03a9bad6bd875a5", "patch": "@@ -1,3 +1,8 @@\n+2007-08-27  Daniel Berlin  <dberlin@dberlin.org>\n+\t\n+\tFix PR tree-optimization/33173\n+\t* tree-ssa-alias.c (find_used_portions): Fix reversed test.\n+\n 2007-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/31385"}, {"sha": "a1530244c294156e9d44f2fee392c9707699d9e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11df3da358dd7a2b946004bee03a9bad6bd875a5", "patch": "@@ -1,3 +1,9 @@\n+2007-08-27  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tPR tree-optimization/33173\n+\t\n+\t* gcc.c-torture/compile/pr33173.c: New.\n+\n 2007-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/31385"}, {"sha": "503c7afbdac3ce8558df97ec58649183ac7319ed", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33173.c", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33173.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33173.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33173.c?ref=11df3da358dd7a2b946004bee03a9bad6bd875a5", "patch": "@@ -0,0 +1,102 @@\n+typedef long unsigned int size_t;\n+typedef struct\n+{\n+}\n+_G_fpos_t;\n+extern int printf (__const char *__restrict __format, ...);\n+extern size_t strlen (__const char *__s) __attribute__ ((__nothrow__))\n+  __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n+typedef struct rend_service_descriptor_t\n+{\n+  int patchlevel;\n+  char status_tag[32];\n+}\n+tor_version_t;\n+test_dir_format (void)\n+{\n+  tor_version_t ver1;\n+  {\n+    long v2 = (long) (ver1.patchlevel);\n+  }\n+  {\n+    const char *v1 = (\"\"), *v2 = (ver1.status_tag);\n+    if (!__extension__ (\n+\t\t\t {\n+\t\t\t size_t __s1_len, __s2_len;\n+\t\t\t (__builtin_constant_p (v1)\n+\t\t\t  && (__s1_len = strlen (v1), __s2_len =\n+\t\t\t      (!((size_t) (const void *) ((v1) + 1) -\n+\t\t\t\t (size_t) (const void *) (v1) == 1)\n+\t\t\t       || __s1_len >= 4)\n+\t\t\t      &&\n+\t\t\t      (!((size_t) (const void *) ((v2) + 1) -\n+\t\t\t\t (size_t) (const void *) (v2) == 1)\n+\t\t\t       || __s2_len >= 4)) ? __builtin_strcmp (v1,\n+\t\t\t\t\t\t\t\t      v2)\n+\t\t\t  : (__builtin_constant_p (v1)\n+\t\t\t     && ((size_t) (const void *) ((v1) + 1) -\n+\t\t\t\t __s1_len < 4) ? (__builtin_constant_p (v2)\n+\t\t\t\t\t\t  &&\n+\t\t\t\t\t\t  ((size_t) (const void *)\n+\t\t\t\t\t\t   (size_t) (const void\n+\t\t\t\t\t\t\t     *) (v2) ==\n+\t\t\t\t\t\t   1) ? __builtin_strcmp (v1,\n+\t\t\t\t\t\t\t\t\t  v2)\n+\t\t\t\t\t\t  : (__extension__ (\n+\t\t\t\t\t\t\t\t\t\t\t {\n+\t\t\t\t\t\t\t\t\t\t\t __const\n+\t\t\t\t\t\t\t\t\t\t\t char\n+\t\t\t\t\t\t\t\t\t\t\t *__s2\n+\t\t\t\t\t\t\t\t\t\t\t =\n+\t\t\t\t\t\t\t\t\t\t\t (__const\n+\t\t\t\t\t\t\t\t\t\t\t  char\n+\t\t\t\t\t\t\t\t\t\t\t  *)\n+\t\t\t\t\t\t\t\t\t\t\t (v2);\n+\t\t\t\t\t\t\t\t\t\t\t register\n+\t\t\t\t\t\t\t\t\t\t\t __result\n+\t\t\t\t\t\t\t\t\t\t\t =\n+\t\t\t\t\t\t\t\t\t\t\t (((__const unsigned char *) (__const char *) (v1))[0] - __s2[0]); if (__s1_len > 0 && __result == 0)\n+\t\t\t\t\t\t\t\t\t\t\t {\n+\t\t\t\t\t\t\t\t\t\t\t }\n+\t\t\t\t\t\t\t\t\t\t\t __result;}\n+    ))):\t\t\t\t\t     \n+\t\t\t     (__builtin_constant_p (v2)\n+\t\t\t      && ((size_t) (const void *) ((v2) + 1) -\n+\t\t\t\t  __s2_len < 4) ? (__builtin_constant_p (v1)\n+\t\t\t\t\t\t   && ((size_t) (const void *)\n+\t\t\t\t\t\t       1) ?\n+\t\t\t\t\t\t   __builtin_strcmp (v1,\n+\t\t\t\t\t\t\t\t     v2)\n+\t\t\t\t\t\t   : (__extension__ (\n+\t\t\t\t\t\t\t\t\t      {\n+\t\t\t\t\t\t\t\t\t      __const\n+\t\t\t\t\t\t\t\t\t      char\n+\t\t\t\t\t\t\t\t\t      *__s1\n+\t\t\t\t\t\t\t\t\t      =\n+\t\t\t\t\t\t\t\t\t      (__const\n+\t\t\t\t\t\t\t\t\t       char\n+\t\t\t\t\t\t\t\t\t       *)\n+\t\t\t\t\t\t\t\t\t      (__const\n+\t\t\t\t\t\t\t\t\t       *)\n+\t\t\t\t\t\t\t\t\t      (v1);\n+\t\t\t\t\t\t\t\t\t      register\n+\t\t\t\t\t\t\t\t\t      __result\n+\t\t\t\t\t\t\t\t\t      =\n+\t\t\t\t\t\t\t\t\t      ((__const unsigned char *) (__const char *) (v2))[0]; if (__s2_len > 0 && __result == 0)\n+\t\t\t\t\t\t\t\t\t      {\n+\t\t\t\t\t\t\t\t\t      if\n+\t\t\t\t\t\t\t\t\t      (__s2_len\n+\t\t\t\t\t\t\t\t\t       ==\n+\t\t\t\t\t\t\t\t\t       0)\n+\t\t\t\t\t\t\t\t\t      {\n+\t\t\t\t\t\t\t\t\t      }\n+\t\t\t\t\t\t\t\t\t      }\n+\t\t\t\t\t\t\t\t\t      __result;}\n+  ))):\t\t\t\t\t\t      __builtin_strcmp (v1,\n+\t\t\t\t\t\t\t\t\tv2))));}\n+\t))\n+      {\n+\tprintf (\".\");\n+      }\n+  }\n+}"}, {"sha": "ef5bc6a5341e56881b249b4a3b14d32ebed0e698", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr26421.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr26421.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr26421.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr26421.c?ref=11df3da358dd7a2b946004bee03a9bad6bd875a5", "patch": "@@ -16,5 +16,5 @@ int foo(void)\n   return a.i;\n }\n \n-/* { dg-final { scan-tree-dump-times \"VDEF\" 2 \"salias\" } } */\n+/* { dg-final { scan-tree-dump-times \"VDEF\" 4 \"salias\" } } */\n /* { dg-final { cleanup-tree-dump \"salias\" } } */"}, {"sha": "2dc23513af9a68e5b70d2e1c54a0bc02cad10c7a", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11df3da358dd7a2b946004bee03a9bad6bd875a5/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=11df3da358dd7a2b946004bee03a9bad6bd875a5", "patch": "@@ -3967,7 +3967,7 @@ find_used_portions (tree *tp, int *walk_subtrees, void *lhs_p)\n \tfor (i = 0; i < nargs; i++)\n \t  {\n \t    tree *arg = &CALL_EXPR_ARG (*tp, i);\n-\t    if (TREE_CODE (*arg) != ADDR_EXPR)\n+\t    if (TREE_CODE (*arg) == ADDR_EXPR)\n               find_used_portions (arg, walk_subtrees, NULL);\n \t  }\n \t*walk_subtrees = 0;"}]}