{"sha": "eca0d5e8cef314a820425453b74f7bc4bb26100a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhMGQ1ZThjZWYzMTRhODIwNDI1NDUzYjc0ZjdiYzRiYjI2MTAwYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-01-02T13:08:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-01-02T13:08:01Z"}, "message": "config.gcc (powerpc-*-eabispe*, [...]): Add rs6000/e500.h to tm_file.\n\n\t* config.gcc (powerpc-*-eabispe*, powerpc-*-eabisimaltivec*,\n\tpowerpc-*-eabisim*, powerpc-*-eabialtivec*, powerpc-*-eabi*,\n\tpowerpc-*-rtems*, powerpc-wrs-vxworks, powerpc-wrs-vxworksae,\n\tpowerpcle-*-eabisim*, powerpcle-*-eabi*): Add rs6000/e500.h to\n\ttm_file.\n\t* config/rs6000/e500.h: New.\n\t* config/rs6000/eabi.h (TARGET_SPE_ABI, TARGET_SPE, TARGET_E500,\n\tTARGET_ISEL, TARGET_FPRS, TARGET_E500_SINGLE, TARGET_E500_DOUBLE):\n\tRemove.\n\t* config/rs6000/linuxspe.h (TARGET_SPE_ABI, TARGET_SPE,\n\tTARGET_E500, TARGET_ISEL, TARGET_FPRS, TARGET_E500_SINGLE,\n\tTARGET_E500_DOUBLE): Remove.\n\t* config/rs6000/vxworks.h (TARGET_SPE_ABI, TARGET_SPE,\n\tTARGET_E500, TARGET_ISEL, TARGET_FPRS): Remove.\n\t* config/rs6000/rs6000.h (CHECK_E500_OPTIONS): Define.\n\t* config/rs6000/rs6000.c (rs6000_override_options): Use\n\tCHECK_E500_OPTIONS.\n\nFrom-SVN: r120340", "tree": {"sha": "a43dd513ab6ec2603c9b5a9ca0558bfa7bfb29b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a43dd513ab6ec2603c9b5a9ca0558bfa7bfb29b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eca0d5e8cef314a820425453b74f7bc4bb26100a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca0d5e8cef314a820425453b74f7bc4bb26100a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca0d5e8cef314a820425453b74f7bc4bb26100a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca0d5e8cef314a820425453b74f7bc4bb26100a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef65e3da89bad9551d9ee157750ca7fa783ef6f"}], "stats": {"total": 152, "additions": 88, "deletions": 64}, "files": [{"sha": "aab8e25bda1a8d6f6ddb6397256c28ae732dd386", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,3 +1,23 @@\n+2007-01-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (powerpc-*-eabispe*, powerpc-*-eabisimaltivec*,\n+\tpowerpc-*-eabisim*, powerpc-*-eabialtivec*, powerpc-*-eabi*,\n+\tpowerpc-*-rtems*, powerpc-wrs-vxworks, powerpc-wrs-vxworksae,\n+\tpowerpcle-*-eabisim*, powerpcle-*-eabi*): Add rs6000/e500.h to\n+\ttm_file.\n+\t* config/rs6000/e500.h: New.\n+\t* config/rs6000/eabi.h (TARGET_SPE_ABI, TARGET_SPE, TARGET_E500,\n+\tTARGET_ISEL, TARGET_FPRS, TARGET_E500_SINGLE, TARGET_E500_DOUBLE):\n+\tRemove.\n+\t* config/rs6000/linuxspe.h (TARGET_SPE_ABI, TARGET_SPE,\n+\tTARGET_E500, TARGET_ISEL, TARGET_FPRS, TARGET_E500_SINGLE,\n+\tTARGET_E500_DOUBLE): Remove.\n+\t* config/rs6000/vxworks.h (TARGET_SPE_ABI, TARGET_SPE,\n+\tTARGET_E500, TARGET_ISEL, TARGET_FPRS): Remove.\n+\t* config/rs6000/rs6000.h (CHECK_E500_OPTIONS): Define.\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Use\n+\tCHECK_E500_OPTIONS.\n+\n 2007-01-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (print_operand): Check (TARGET_SPE ||"}, {"sha": "e168a2e9740b3efa775fef09b0b56faee22a4d5d", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,5 +1,5 @@\n # GCC target-specific configuration file.\n-# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n # Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -1780,17 +1780,17 @@ powerpc-*-chorusos*)\n \tuse_fixproto=yes\n \t;;\n powerpc-*-eabispe*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabispe.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h rs6000/eabispe.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-spe rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabisimaltivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcendian rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h rs6000/eabisim.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n@@ -1801,17 +1801,17 @@ powerpc-*-elf*)\n \tuse_fixproto=yes\n \t;;\n powerpc-*-eabialtivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcendian rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n powerpc-*-rtems*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/rtems.h rtems.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/e500.h rs6000/rtems.h rtems.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-rtems t-rtems rs6000/t-ppccomm\"\n \t;;\n@@ -1821,7 +1821,7 @@ powerpc-*-linux*altivec*)\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-softfp soft-fp/t-softfp rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n powerpc-*-linux*spe*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxspe.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxspe.h rs6000/e500.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-softfp soft-fp/t-softfp rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n@@ -1871,11 +1871,11 @@ powerpc-wrs-vxworks|powerpc-wrs-vxworksae)\n \textra_headers=ppc-asm.h\n \tcase ${target} in\n \t  *-vxworksae*)\n-\t    tm_file=\"${tm_file} vx-common.h vxworksae.h rs6000/vxworks.h rs6000/vxworksae.h\"\n+\t    tm_file=\"${tm_file} vx-common.h vxworksae.h rs6000/vxworks.h rs6000/e500.h rs6000/vxworksae.h\"\n \t    tmake_file=\"${tmake_file} rs6000/t-vxworksae\"\n \t    ;;\n \t  *-vxworks*)\n-\t    tm_file=\"${tm_file} vx-common.h vxworks.h rs6000/vxworks.h\"\n+\t    tm_file=\"${tm_file} vx-common.h vxworks.h rs6000/vxworks.h rs6000/e500.h\"\n \t    ;;\n \tesac\n \t;;\n@@ -1910,12 +1910,12 @@ powerpcle-*-elf*)\n \tuse_fixproto=yes\n \t;;\n powerpcle-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/e500.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpcle-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/e500.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;"}, {"sha": "8296f45d1a308c93fb408610a48da20d75928324", "filename": "gcc/config/rs6000/e500.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Fe500.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Fe500.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500.h?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -0,0 +1,48 @@\n+/* Enable E500 support.\n+   Copyright (C) 2003, 2004, 2006, 2007 Free Software Foundation, Inc.\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 2, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the\n+   Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,\n+   MA 02110-1301, USA.  */\n+\n+#undef TARGET_SPE_ABI\n+#undef TARGET_SPE\n+#undef TARGET_E500\n+#undef TARGET_ISEL\n+#undef TARGET_FPRS\n+#undef TARGET_E500_SINGLE\n+#undef TARGET_E500_DOUBLE\n+#undef CHECK_E500_OPTIONS\n+\n+#define TARGET_SPE_ABI rs6000_spe_abi\n+#define TARGET_SPE rs6000_spe\n+#define TARGET_E500 (rs6000_cpu == PROCESSOR_PPC8540)\n+#define TARGET_ISEL rs6000_isel\n+#define TARGET_FPRS (rs6000_float_gprs == 0)\n+#define TARGET_E500_SINGLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 1)\n+#define TARGET_E500_DOUBLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 2)\n+#define CHECK_E500_OPTIONS\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_E500 || TARGET_SPE || TARGET_SPE_ABI || TARGET_ISEL\t\\\n+\t|| TARGET_E500_SINGLE || TARGET_E500_DOUBLE)\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tif (TARGET_ALTIVEC)\t\t\t\t\t\t\\\n+\t  error (\"AltiVec and E500 instructions cannot coexist\");\t\\\n+\tif (TARGET_64BIT)\t\t\t\t\t\t\\\n+\t  error (\"64-bit E500 not supported\");\t\t\t\t\\\n+\tif (TARGET_HARD_FLOAT && TARGET_FPRS)\t\t\t\t\\\n+\t  error (\"E500 and FPRs not supported\");\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)"}, {"sha": "d485a4e401c0d6f6e68789748bfa898a7b8d6af6", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC targeted to embedded ELF systems.\n-   Copyright (C) 1995, 1996, 2000, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000, 2003, 2004, 2007 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n    This file is part of GCC.\n@@ -43,19 +43,3 @@\n       TARGET_OS_SYSV_CPP_BUILTINS ();     \\\n     }                                     \\\n   while (0)\n-\n-#undef TARGET_SPE_ABI\n-#undef TARGET_SPE\n-#undef TARGET_E500\n-#undef TARGET_ISEL\n-#undef TARGET_FPRS\n-#undef TARGET_E500_SINGLE\n-#undef TARGET_E500_DOUBLE\n-\n-#define TARGET_SPE_ABI rs6000_spe_abi\n-#define TARGET_SPE rs6000_spe\n-#define TARGET_E500 (rs6000_cpu == PROCESSOR_PPC8540)\n-#define TARGET_ISEL rs6000_isel\n-#define TARGET_FPRS (rs6000_float_gprs == 0)\n-#define TARGET_E500_SINGLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 1)\n-#define TARGET_E500_DOUBLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 2)"}, {"sha": "9b9861646776e6bae2e56ea65a1866ce9d0725dc", "filename": "gcc/config/rs6000/linuxspe.h", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxspe.h?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for PowerPC e500 machines running GNU/Linux.\n-   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldy@quesejoda.com).\n \n    This file is part of GCC.\n@@ -27,22 +27,6 @@\n #undef\tTARGET_DEFAULT\n #define\tTARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_STRICT_ALIGN)\n \n-#undef TARGET_SPE_ABI\n-#undef TARGET_SPE\n-#undef TARGET_E500\n-#undef TARGET_ISEL\n-#undef TARGET_FPRS\n-#undef TARGET_E500_SINGLE\n-#undef TARGET_E500_DOUBLE\n-\n-#define TARGET_SPE_ABI rs6000_spe_abi\n-#define TARGET_SPE rs6000_spe\n-#define TARGET_E500 (rs6000_cpu == PROCESSOR_PPC8540)\n-#define TARGET_ISEL rs6000_isel\n-#define TARGET_FPRS (rs6000_float_gprs == 0)\n-#define TARGET_E500_SINGLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 1)\n-#define TARGET_E500_DOUBLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 2)\n-\n #undef  SUBSUBTARGET_OVERRIDE_OPTIONS\n #define SUBSUBTARGET_OVERRIDE_OPTIONS \\\n   if (rs6000_select[1].string == NULL) \\"}, {"sha": "eaf3db63840eae7de4b1e4f6df7b7db4c7109332", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1446,9 +1446,6 @@ rs6000_override_options (const char *default_cpu)\n \n   if (TARGET_E500)\n     {\n-      if (TARGET_ALTIVEC)\n-\terror (\"AltiVec and E500 instructions cannot coexist\");\n-\n       /* The e500 does not have string instructions, and we set\n \t MASK_STRING above when optimizing for size.  */\n       if ((target_flags & MASK_STRING) != 0)\n@@ -1471,6 +1468,9 @@ rs6000_override_options (const char *default_cpu)\n \trs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n     }\n \n+  /* Detect invalid option combinations with E500.  */\n+  CHECK_E500_OPTIONS;\n+\n   rs6000_always_hint = (rs6000_cpu != PROCESSOR_POWER4\n \t\t\t&& rs6000_cpu != PROCESSOR_POWER5\n                         && rs6000_cpu != PROCESSOR_POWER6"}, {"sha": "17a22983ffdca8a178c71daf497213e644b5f468", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -341,6 +341,7 @@ extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n #define TARGET_FPRS 1\n #define TARGET_E500_SINGLE 0\n #define TARGET_E500_DOUBLE 0\n+#define CHECK_E500_OPTIONS do { } while (0)\n \n /* E500 processors only support plain \"sync\", not lwsync.  */\n #define TARGET_NO_LWSYNC TARGET_E500"}, {"sha": "f15369c7ab26b5c5923c65ccebf6fcde0e61c6de", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca0d5e8cef314a820425453b74f7bc4bb26100a/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=eca0d5e8cef314a820425453b74f7bc4bb26100a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vxworks PowerPC version.\n-   Copyright (C) 1996, 2000, 2002, 2003, 2004, 2005\n+   Copyright (C) 1996, 2000, 2002, 2003, 2004, 2005, 2007\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n@@ -117,19 +117,6 @@ VXWORKS_ADDITIONAL_CPP_SPEC\n /* Override sysv4.h, reset to the default.  */\n #undef  PREFERRED_STACK_BOUNDARY\n \n-/* Enable SPE */\n-#undef TARGET_SPE_ABI\n-#undef TARGET_SPE\n-#undef TARGET_E500\n-#undef TARGET_ISEL\n-#undef TARGET_FPRS\n-\n-#define TARGET_SPE_ABI rs6000_spe_abi\n-#define TARGET_SPE rs6000_spe\n-#define TARGET_E500 (rs6000_cpu == PROCESSOR_PPC8540)\n-#define TARGET_ISEL rs6000_isel\n-#define TARGET_FPRS (!rs6000_float_gprs)\n-\n /* Make -mcpu=8540 imply SPE.  ISEL is automatically enabled, the\n    others must be done by hand.  Handle -mrtp.  Disable -fPIC\n    for -mrtp - the VxWorks PIC model is not compatible with it.  */"}]}