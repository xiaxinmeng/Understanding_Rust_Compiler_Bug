{"sha": "775fe01b38933850dcb884733c4d0edc7cde45c3", "node_id": "C_kwDOANBUbNoAKDc3NWZlMDFiMzg5MzM4NTBkY2I4ODQ3MzNjNGQwZWRjN2NkZTQ1YzM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-01T12:06:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-01T19:31:00Z"}, "message": "libstdc++: Optimize std::decay\n\nDefine partial specializations of std::decay and its __decay_selector\nhelper so that remove_reference, is_array and is_function are not\ninstantiated for every type, and remove_extent is not instantiated for\narrays.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/type_traits (__decay_selector): Add partial\n\tspecializations for array types. Only check for function types\n\twhen not dealing with an array.\n\t(decay): Add partial specializations for reference types.", "tree": {"sha": "660784718f15833fe4d53df908bda00f71862129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/660784718f15833fe4d53df908bda00f71862129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/775fe01b38933850dcb884733c4d0edc7cde45c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775fe01b38933850dcb884733c4d0edc7cde45c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775fe01b38933850dcb884733c4d0edc7cde45c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775fe01b38933850dcb884733c4d0edc7cde45c3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33005a4be49466880fe3f5a9317bccc8c1ed423b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33005a4be49466880fe3f5a9317bccc8c1ed423b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33005a4be49466880fe3f5a9317bccc8c1ed423b"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "639c351df8a75d9c6c15b5ce6dedca3e6fa775da", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775fe01b38933850dcb884733c4d0edc7cde45c3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775fe01b38933850dcb884733c4d0edc7cde45c3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=775fe01b38933850dcb884733c4d0edc7cde45c3", "patch": "@@ -2203,34 +2203,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Decay trait for arrays and functions, used for perfect forwarding\n   // in make_pair, make_tuple, etc.\n-  template<typename _Up,\n-\t   bool _IsArray = is_array<_Up>::value,\n-\t   bool _IsFunction = is_function<_Up>::value>\n-    struct __decay_selector;\n-\n-  // NB: DR 705.\n   template<typename _Up>\n-    struct __decay_selector<_Up, false, false>\n-    { typedef __remove_cv_t<_Up> __type; };\n+    struct __decay_selector\n+    : __conditional_t<is_const<const _Up>::value, // false for functions\n+\t\t      remove_cv<_Up>,\t\t  // N.B. DR 705.\n+\t\t      add_pointer<_Up>>\t\t  // function decays to pointer\n+    { };\n \n-  template<typename _Up>\n-    struct __decay_selector<_Up, true, false>\n-    { typedef typename remove_extent<_Up>::type* __type; };\n+  template<typename _Up, size_t _Nm>\n+    struct __decay_selector<_Up[_Nm]>\n+    { using type = _Up*; };\n \n   template<typename _Up>\n-    struct __decay_selector<_Up, false, true>\n-    { typedef typename add_pointer<_Up>::type __type; };\n+    struct __decay_selector<_Up[]>\n+    { using type = _Up*; };\n+\n   /// @endcond\n \n   /// decay\n   template<typename _Tp>\n-    class decay\n-    {\n-      typedef typename remove_reference<_Tp>::type __remove_type;\n+    struct decay\n+    { using type = typename __decay_selector<_Tp>::type; };\n \n-    public:\n-      typedef typename __decay_selector<__remove_type>::__type type;\n-    };\n+  template<typename _Tp>\n+    struct decay<_Tp&>\n+    { using type = typename __decay_selector<_Tp>::type; };\n+\n+  template<typename _Tp>\n+    struct decay<_Tp&&>\n+    { using type = typename __decay_selector<_Tp>::type; };\n \n   /// @cond undocumented\n "}]}