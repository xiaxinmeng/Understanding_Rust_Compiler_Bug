{"sha": "6d73371a68e805956981592bdc2a631acaab2a33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ3MzM3MWE2OGU4MDU5NTY5ODE1OTJiZGMyYTYzMWFjYWFiMmEzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-26T21:08:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-26T21:08:57Z"}, "message": "re PR debug/5770 (undefined reference to `.LC0')\n\n\tPR debug/5770\n\t* dwarf2out.c (rtl_for_decl_location): Return CONST_STRING for\n\tSTRING_CST initializer spanning the whole variable without\n\tembedded zeros.\n\tIf expand_expr returned MEM, don't use it.\n\n\t* g++.dg/debug/debug4.C: New test.\n\nFrom-SVN: r50058", "tree": {"sha": "ffe0e0f8a4d6f5960820d5d8fa900f3c93267c2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffe0e0f8a4d6f5960820d5d8fa900f3c93267c2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d73371a68e805956981592bdc2a631acaab2a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d73371a68e805956981592bdc2a631acaab2a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d73371a68e805956981592bdc2a631acaab2a33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d73371a68e805956981592bdc2a631acaab2a33/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d13abcf868ab46317b62f14702fa62c7948f212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d13abcf868ab46317b62f14702fa62c7948f212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d13abcf868ab46317b62f14702fa62c7948f212"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "b4da9bf552d79ebdcc432aa9a3448c561025ea31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d73371a68e805956981592bdc2a631acaab2a33", "patch": "@@ -1,3 +1,11 @@\n+2002-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/5770\n+\t* dwarf2out.c (rtl_for_decl_location): Return CONST_STRING for\n+\tSTRING_CST initializer spanning the whole variable without\n+\tembedded zeros.\n+\tIf expand_expr returned MEM, don't use it.\n+\n 2002-02-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* dwarf2out.c (gen_inlined_subroutine_die): If block is abstract,"}, {"sha": "6c089390b8f7d55d4404dc2e7da33bd0b7dfe5a9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6d73371a68e805956981592bdc2a631acaab2a33", "patch": "@@ -8902,8 +8902,38 @@ rtl_for_decl_location (decl)\n      and will have been substituted directly into all expressions that use it.\n      C does not have such a concept, but C++ and other languages do.  */\n   else if (TREE_CODE (decl) == VAR_DECL && DECL_INITIAL (decl))\n-    rtl = expand_expr (DECL_INITIAL (decl), NULL_RTX, VOIDmode,\n-\t\t       EXPAND_INITIALIZER);\n+    {\n+      /* If a variable is initialized with a string constant without embedded\n+\t zeros, build CONST_STRING.  */\n+      if (TREE_CODE (DECL_INITIAL (decl)) == STRING_CST\n+\t  && TREE_CODE (TREE_TYPE (decl)) == ARRAY_TYPE)\n+\t{\n+\t  tree arrtype = TREE_TYPE (decl);\n+\t  tree enttype = TREE_TYPE (arrtype);\n+\t  tree domain = TYPE_DOMAIN (arrtype);\n+\t  tree init = DECL_INITIAL (decl);\n+\t  enum machine_mode mode = TYPE_MODE (enttype);\n+\n+\t  if (GET_MODE_CLASS (mode) == MODE_INT && GET_MODE_SIZE (mode) == 1\n+\t      && domain\n+\t      && integer_zerop (TYPE_MIN_VALUE (domain))\n+\t      && compare_tree_int (TYPE_MAX_VALUE (domain),\n+\t\t\t\t   TREE_STRING_LENGTH (init) - 1) == 0\n+\t      && ((size_t) TREE_STRING_LENGTH (init)\n+\t\t  == strlen (TREE_STRING_POINTER (init)) + 1))\n+\t    rtl = gen_rtx_CONST_STRING (VOIDmode, TREE_STRING_POINTER (init));\n+\t}\n+\n+      if (rtl == NULL)\n+\t{\n+\t  rtl = expand_expr (DECL_INITIAL (decl), NULL_RTX, VOIDmode,\n+\t\t\t     EXPAND_INITIALIZER);\n+\t  /* If expand_expr returned a MEM, we cannot use it, since\n+\t     it won't be output, leading to unresolved symbol.  */\n+\t  if (rtl && GET_CODE (rtl) == MEM)\n+\t    rtl = NULL;\n+\t}\n+    }\n \n   return rtl;\n }"}, {"sha": "e45f949093a50f4b34d67414045c913e334ecdb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d73371a68e805956981592bdc2a631acaab2a33", "patch": "@@ -1,3 +1,7 @@\n+2002-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/debug/debug4.C: New test.\n+\n 2002-02-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/debug/20020224-1.c: New."}, {"sha": "8dceb0875bf81b8dd339c1d673d06251010aee39", "filename": "gcc/testsuite/g++.dg/debug/debug4.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d73371a68e805956981592bdc2a631acaab2a33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug4.C?ref=6d73371a68e805956981592bdc2a631acaab2a33", "patch": "@@ -0,0 +1,17 @@\n+/* PR debug/5770\n+   This testcase failed at -O -g because the following constants\n+   were optimized away since they were never referenced, but\n+   since they are variables with initializers, rtl_for_decl_location\n+   run expand_expr on their initializers and returned it.\n+   This lead to references to constants which were deferred and thus\n+   never emitted.  */\n+/* { dg-do link } */\n+\n+static const char foo[] = \"foo string\";\n+static const char bar[30] = \"bar string\";\n+static const wchar_t baz[] = L\"baz string\";\n+\n+int\n+main ()\n+{\n+}"}]}