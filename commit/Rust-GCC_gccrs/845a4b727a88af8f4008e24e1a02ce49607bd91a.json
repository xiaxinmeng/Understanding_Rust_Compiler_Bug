{"sha": "845a4b727a88af8f4008e24e1a02ce49607bd91a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1YTRiNzI3YTg4YWY4ZjQwMDhlMjRlMWEwMmNlNDk2MDdiZDkxYQ==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2016-07-13T21:34:35Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2016-07-13T21:34:35Z"}, "message": "Fix the use of FFI closures in the java interpreter for integer returns\n\nlibjava/\n\n\t* interpret-run.cc: Use ffi_arg for FFI integer return types.\n\t* testsuite/libjava.jar/arraysort.java: New file.\n\t* testsuite/libjava.jar/arraysort.jar: New file.\n\t* testsuite/libjava.jar/arraysort.out: New file.\n\t* testsuite/libjava.jar/arraysort.xfail: New file.\n\nFrom-SVN: r238311", "tree": {"sha": "b789f4dfd03279d4cf8d6a4e9ab01430a7bb766d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b789f4dfd03279d4cf8d6a4e9ab01430a7bb766d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/845a4b727a88af8f4008e24e1a02ce49607bd91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845a4b727a88af8f4008e24e1a02ce49607bd91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845a4b727a88af8f4008e24e1a02ce49607bd91a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845a4b727a88af8f4008e24e1a02ce49607bd91a/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e383deac8ba094f612386a166239f33752fa5808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e383deac8ba094f612386a166239f33752fa5808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e383deac8ba094f612386a166239f33752fa5808"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "06b354d7777cbdedac8d3b8f7254fb385eab9e1d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a", "patch": "@@ -1,3 +1,11 @@\n+2016-07-13  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* interpret-run.cc: Use ffi_arg for FFI integer return types.\n+\t* testsuite/libjava.jar/arraysort.java: New file.\n+\t* testsuite/libjava.jar/arraysort.jar: New file.\n+\t* testsuite/libjava.jar/arraysort.out: New file.\n+\t* testsuite/libjava.jar/arraysort.xfail: New file.\n+\n 2016-06-01  Matthias Klose  <doko@ubuntu.com>\n \n \t* libtool-version: Bump soversion."}, {"sha": "6be354eaf5ef7f33ac2e52fa590a7198b53b516e", "filename": "libjava/interpret-run.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Finterpret-run.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Finterpret-run.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret-run.cc?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a", "patch": "@@ -1838,7 +1838,7 @@ details.  */\n       return;\n \n     insn_ireturn:\n-      *(jint *) retp = POPI ();\n+      *(ffi_arg *) retp = POPI ();\n       return;\n \n     insn_return:"}, {"sha": "ee051e45a836f99563e3e15ce748795d01e87e4e", "filename": "libjava/testsuite/libjava.jar/arraysort.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.jar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.jar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.jar?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a"}, {"sha": "56c181dd088256be284dbe1ee7a2816c1d830880", "filename": "libjava/testsuite/libjava.jar/arraysort.java", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.java?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a", "patch": "@@ -0,0 +1,44 @@\n+import java.util.Arrays;\n+import java.util.Comparator;\n+\n+public class arraysort\n+{\n+  private static final Comparator<String> STRING_COMPARATOR = new Comparator<String>()\n+  {\n+    public int compare(String str1, String str2)\n+    {\n+      return str1.compareTo(str2);\n+    }\n+  };\n+\n+  static void dumpArray(String[] strings)\n+  {\n+    int i;\n+\n+    for (i = 0 ; i < strings.length ; i++)\n+    {\n+      System.out.println(\"[\" + i + \"] \" + strings[i]);\n+    }\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    String[] strings;\n+\n+    strings = new String[4];\n+\n+    strings[0] = \"a\";\n+    strings[1] = \"c\";\n+    strings[2] = \"b\";\n+    strings[3] = \"d\";\n+\n+    System.out.println(\"Array of string, before:\");\n+    dumpArray(strings);\n+\n+    Arrays.sort(strings, STRING_COMPARATOR);\n+\n+    System.out.println(\"Array of string, after:\");\n+    dumpArray(strings);\n+  }\n+}\n+"}, {"sha": "938ce9fd85531811c93e8687e5fcc26457c42854", "filename": "libjava/testsuite/libjava.jar/arraysort.out", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.out?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a", "patch": "@@ -0,0 +1,10 @@\n+Array of string, before:\n+[0] a\n+[1] c\n+[2] b\n+[3] d\n+Array of string, after:\n+[0] a\n+[1] b\n+[2] c\n+[3] d"}, {"sha": "2bbbe562517cfc80d4ed4cf7eee3aac6c62305a5", "filename": "libjava/testsuite/libjava.jar/arraysort.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845a4b727a88af8f4008e24e1a02ce49607bd91a/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2Farraysort.xfail?ref=845a4b727a88af8f4008e24e1a02ce49607bd91a", "patch": "@@ -0,0 +1 @@\n+main=arraysort"}]}