{"sha": "89483f9984c057366bca7f24920fa91637f1efdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0ODNmOTk4NGMwNTczNjZiY2E3ZjI0OTIwZmE5MTYzN2YxZWZkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-15T11:49:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-15T11:49:43Z"}, "message": "re PR tree-optimization/68961 (Test case gcc.target/powerpc/pr60203.c fails since r231674)\n\n2016-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68961\n\t* tree-vect-slp.c (vect_analyze_slp_cost_1): Consider cost\n\tof invariants in stores again.\n\n\t* gcc.dg/vect/costmodel/x86_64/costmodel-pr68961.c: New testcase.\n\nFrom-SVN: r232415", "tree": {"sha": "c43194c1663e6cd9382734668ba65f849539ab3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43194c1663e6cd9382734668ba65f849539ab3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89483f9984c057366bca7f24920fa91637f1efdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89483f9984c057366bca7f24920fa91637f1efdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89483f9984c057366bca7f24920fa91637f1efdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89483f9984c057366bca7f24920fa91637f1efdb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94619ed95ba0a31df9f9ec6532e6c8f4bcdbefaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94619ed95ba0a31df9f9ec6532e6c8f4bcdbefaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94619ed95ba0a31df9f9ec6532e6c8f4bcdbefaf"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "500ba65c7f1bac390696ba97dffdc6ecd2d5bab8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89483f9984c057366bca7f24920fa91637f1efdb", "patch": "@@ -1,3 +1,9 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68961\n+\t* tree-vect-slp.c (vect_analyze_slp_cost_1): Consider cost\n+\tof invariants in stores again.\n+\n 2016-01-15  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* config/arm/t-rtems: Add cortex-m7/fpv5-d16 multilib."}, {"sha": "f8d58ce87061243449a8b8ee9c85004b4346e5d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89483f9984c057366bca7f24920fa91637f1efdb", "patch": "@@ -1,3 +1,8 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68961\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-pr68961.c: New testcase.\n+\n 2016-01-15  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* gcc.target/i386/pr65105-5.c: New test."}, {"sha": "a88b14874b75fe2146e6fa6abe14da72ff25a88e", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-pr68961.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr68961.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr68961.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr68961.c?ref=89483f9984c057366bca7f24920fa91637f1efdb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fdump-tree-slp-details\" } */\n+\n+struct x { double d[2]; };\n+\n+struct x\n+pack (double a, double aa)\n+{\n+  struct x u;\n+  u.d[0] = a;\n+  u.d[1] = aa;\n+  return u;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorization is not profitable\" 1 \"slp2\" } } */"}, {"sha": "fe422f858fe7ce41ca373b432382bd17d2ddac26", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89483f9984c057366bca7f24920fa91637f1efdb/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=89483f9984c057366bca7f24920fa91637f1efdb", "patch": "@@ -1453,18 +1453,20 @@ vect_analyze_slp_cost_1 (slp_instance instance, slp_tree node,\n \t  /* Record the cost for the vector loads.  */\n \t  vect_model_load_cost (stmt_info, ncopies_for_cost, false,\n \t\t\t\tnode, prologue_cost_vec, body_cost_vec);\n+\t  return;\n \t}\n-      return;\n     }\n-\n-  record_stmt_cost (body_cost_vec, ncopies_for_cost, vector_stmt,\n-\t\t    stmt_info, 0, vect_body);\n-  if (SLP_TREE_TWO_OPERATORS (node))\n+  else\n     {\n       record_stmt_cost (body_cost_vec, ncopies_for_cost, vector_stmt,\n \t\t\tstmt_info, 0, vect_body);\n-      record_stmt_cost (body_cost_vec, ncopies_for_cost, vec_perm,\n-\t\t\tstmt_info, 0, vect_body);\n+      if (SLP_TREE_TWO_OPERATORS (node))\n+\t{\n+\t  record_stmt_cost (body_cost_vec, ncopies_for_cost, vector_stmt,\n+\t\t\t    stmt_info, 0, vect_body);\n+\t  record_stmt_cost (body_cost_vec, ncopies_for_cost, vec_perm,\n+\t\t\t    stmt_info, 0, vect_body);\n+\t}\n     }\n \n   /* Push SLP node def-type to stmts.  */"}]}