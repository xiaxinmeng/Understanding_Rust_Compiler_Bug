{"sha": "174bd8cad0658aec401a03bfb09edf31545105d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0YmQ4Y2FkMDY1OGFlYzQwMWEwM2JmYjA5ZWRmMzE1NDUxMDVkNQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2007-08-10T16:35:49Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2007-08-10T16:35:49Z"}, "message": "mips.c (TARGET_SCHED_INIT): Define.\n\n2007-08-10  Sandra Loosemore  <sandra@codesourcery.com>\n\t    David Ung  <davidu@mips.com>\n\n        gcc/\n\t* config/mips/mips.c (TARGET_SCHED_INIT): Define.\n\t(TARGET_SCHED_REORDER2): Define.\n\t(mips_maybe_swap_ready): New.\n\t(mips_last_74k_agen_insn): New.\n\t(mips_74k_agen_init): New.\n\t(mips_74k_agen_reorder): New function to group loads and stores\n\tin the ready queue.\n\t(mips_sched_init): New.  \n\t(mips_sched_reorder): Don't do initialization here.  Call\n\tmips_74k_agen_reorder.\n\t(mips_variable_issue): Call mips_74k_agen_init.\n\nCo-Authored-By: David Ung <davidu@mips.com>\n\nFrom-SVN: r127341", "tree": {"sha": "25d2c5129b0c750b9559bcc50603d18bf6353a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25d2c5129b0c750b9559bcc50603d18bf6353a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/174bd8cad0658aec401a03bfb09edf31545105d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174bd8cad0658aec401a03bfb09edf31545105d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174bd8cad0658aec401a03bfb09edf31545105d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174bd8cad0658aec401a03bfb09edf31545105d5/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6aab184c1de84bc279b20b8e7d4e2370fdf87a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aab184c1de84bc279b20b8e7d4e2370fdf87a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aab184c1de84bc279b20b8e7d4e2370fdf87a15"}], "stats": {"total": 149, "additions": 135, "deletions": 14}, "files": [{"sha": "958765cbfdf9669d4165063ba1031b00bad741fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174bd8cad0658aec401a03bfb09edf31545105d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174bd8cad0658aec401a03bfb09edf31545105d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=174bd8cad0658aec401a03bfb09edf31545105d5", "patch": "@@ -1,3 +1,18 @@\n+2007-08-10  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    David Ung  <davidu@mips.com>\n+\n+\t* config/mips/mips.c (TARGET_SCHED_INIT): Define.\n+\t(TARGET_SCHED_REORDER2): Define.\n+\t(mips_maybe_swap_ready): New.\n+\t(mips_last_74k_agen_insn): New.\n+\t(mips_74k_agen_init): New.\n+\t(mips_74k_agen_reorder): New function to group loads and stores\n+\tin the ready queue.\n+\t(mips_sched_init): New.  \n+\t(mips_sched_reorder): Don't do initialization here.  Call\n+\tmips_74k_agen_reorder.\n+\t(mips_variable_issue): Call mips_74k_agen_init.\n+\n 2007-08-10  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-flow-inline.h (get_filename): Remove."}, {"sha": "dda3616862700ab302d071c8fc06b39efdba556d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 120, "deletions": 14, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174bd8cad0658aec401a03bfb09edf31545105d5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174bd8cad0658aec401a03bfb09edf31545105d5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=174bd8cad0658aec401a03bfb09edf31545105d5", "patch": "@@ -390,6 +390,7 @@ static bool vr4130_true_reg_dependence_p (rtx);\n static bool vr4130_swap_insns_p (rtx, rtx);\n static void vr4130_reorder (rtx *, int);\n static void mips_promote_ready (rtx *, int, int);\n+static void mips_sched_init (FILE *, int, int);\n static int mips_sched_reorder (FILE *, int, rtx *, int *, int);\n static int mips_variable_issue (FILE *, int, rtx, int);\n static int mips_adjust_cost (rtx, rtx, rtx, int);\n@@ -1220,8 +1221,12 @@ static const unsigned char mips16e_save_restore_regs[] = {\n #undef TARGET_ASM_FUNCTION_RODATA_SECTION\n #define TARGET_ASM_FUNCTION_RODATA_SECTION mips_function_rodata_section\n \n+#undef TARGET_SCHED_INIT\n+#define TARGET_SCHED_INIT mips_sched_init\n #undef TARGET_SCHED_REORDER\n #define TARGET_SCHED_REORDER mips_sched_reorder\n+#undef TARGET_SCHED_REORDER2\n+#define TARGET_SCHED_REORDER2 mips_sched_reorder\n #undef TARGET_SCHED_VARIABLE_ISSUE\n #define TARGET_SCHED_VARIABLE_ISSUE mips_variable_issue\n #undef TARGET_SCHED_ADJUST_COST\n@@ -11000,26 +11005,125 @@ mips_promote_ready (rtx *ready, int lower, int higher)\n   ready[i] = new_head;\n }\n \n-/* Implement TARGET_SCHED_REORDER.  */\n+/* If the priority of the instruction at POS2 in the ready queue READY \n+   is within LIMIT units of that of the instruction at POS1, swap the \n+   instructions if POS2 is not already less than POS1.  */\n \n-static int\n-mips_sched_reorder (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n-\t\t    rtx *ready, int *nreadyp, int cycle)\n+static void\n+mips_maybe_swap_ready (rtx *ready, int pos1, int pos2, int limit)\n+{\n+  if (pos1 < pos2\n+      && INSN_PRIORITY (ready[pos1]) + limit >= INSN_PRIORITY (ready[pos2]))\n+    {\n+      rtx temp;\n+      temp = ready[pos1];\n+      ready[pos1] = ready[pos2];\n+      ready[pos2] = temp;\n+    }\n+}\n+\n+/* Record whether last 74k AGEN instruction was a load or store.  */\n+\n+static enum attr_type mips_last_74k_agen_insn = TYPE_UNKNOWN;\n+\n+/* Initialize mips_last_74k_agen_insn from INSN.  A null argument\n+   resets to TYPE_UNKNOWN state.  */\n+\n+static void\n+mips_74k_agen_init (rtx insn)\n+{\n+  if (!insn || !NONJUMP_INSN_P (insn))\n+    mips_last_74k_agen_insn = TYPE_UNKNOWN;\n+  else if (USEFUL_INSN_P (insn))\n+    {\n+      enum attr_type type = get_attr_type (insn);\n+      if (type == TYPE_LOAD || type == TYPE_STORE)\n+\tmips_last_74k_agen_insn = type;\n+    }\n+}\n+\n+/* A TUNE_74K helper function.  The 74K AGEN pipeline likes multiple\n+   loads to be grouped together, and multiple stores to be grouped\n+   together.  Swap things around in the ready queue to make this happen.  */\n+\n+static void\n+mips_74k_agen_reorder (rtx *ready, int nready)\n {\n-  if (!reload_completed && TUNE_MACC_CHAINS)\n+  int i;\n+  int store_pos, load_pos;\n+\n+  store_pos = -1;\n+  load_pos = -1;\n+\n+  for (i = nready - 1; i >= 0; i--)\n     {\n-      if (cycle == 0)\n-\tmips_macc_chains_last_hilo = 0;\n-      if (*nreadyp > 0)\n-\tmips_macc_chains_reorder (ready, *nreadyp);\n+      rtx insn = ready[i];\n+      if (USEFUL_INSN_P (insn))\n+\tswitch (get_attr_type (insn))\n+\t  {\n+\t  case TYPE_STORE:\n+\t    if (store_pos == -1)\n+\t      store_pos = i;\n+\t    break;\n+\t    \n+\t  case TYPE_LOAD:\n+\t    if (load_pos == -1)\n+\t      load_pos = i;\n+\t    break;\n+\t    \n+\t  default:\n+\t    break;\n+\t  }\n     }\n-  if (reload_completed && TUNE_MIPS4130 && !TARGET_VR4130_ALIGN)\n+  \n+  if (load_pos == -1 || store_pos == -1)\n+    return;\n+  \n+  switch (mips_last_74k_agen_insn)\n     {\n-      if (cycle == 0)\n-\tvr4130_last_insn = 0;\n-      if (*nreadyp > 1)\n-\tvr4130_reorder (ready, *nreadyp);\n+    case TYPE_UNKNOWN:\n+      /* Prefer to schedule loads since they have a higher latency.  */\n+    case TYPE_LOAD:\n+      /* Swap loads to the front of the queue.  */\n+      mips_maybe_swap_ready (ready, load_pos, store_pos, 4);\n+      break;\n+    case TYPE_STORE:\n+      /* Swap stores to the front of the queue.  */\n+      mips_maybe_swap_ready (ready, store_pos, load_pos, 4);\n+      break;\n+    default:\n+      break;\n     }\n+}\n+\n+/* Implement TARGET_SCHED_INIT.  */\n+\n+static void\n+mips_sched_init (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n+\t\t int max_ready ATTRIBUTE_UNUSED)\n+{\n+  mips_macc_chains_last_hilo = 0;\n+  vr4130_last_insn = 0;\n+  mips_74k_agen_init (NULL_RTX);\n+}\n+\n+/* Implement TARGET_SCHED_REORDER and TARG_SCHED_REORDER2.  */\n+\n+static int\n+mips_sched_reorder (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n+\t\t    rtx *ready, int *nreadyp, int cycle)\n+{\n+  if (!reload_completed\n+      && TUNE_MACC_CHAINS\n+      && *nreadyp > 0)\n+    mips_macc_chains_reorder (ready, *nreadyp);\n+  if (reload_completed\n+      && TUNE_MIPS4130\n+      && !TARGET_VR4130_ALIGN\n+      && *nreadyp > 1)\n+    vr4130_reorder (ready, *nreadyp);\n+  if (TUNE_74K)\n+    mips_74k_agen_reorder (ready, *nreadyp);\n   return mips_issue_rate ();\n }\n \n@@ -11029,6 +11133,8 @@ static int\n mips_variable_issue (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n \t\t     rtx insn, int more)\n {\n+  if (TUNE_74K)\n+    mips_74k_agen_init (insn);\n   switch (GET_CODE (PATTERN (insn)))\n     {\n     case USE:"}]}