{"sha": "6b05e79165f6d8c5660a874d77f87da41ca934c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwNWU3OTE2NWY2ZDhjNTY2MGE4NzRkNzdmODdkYTQxY2E5MzRjOQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-01-29T13:14:38Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-01-29T13:14:38Z"}, "message": "natClass.cc (initializeClass): Re-throw SecurityExceptions.\n\n2007-01-26  Andrew Haley  <aph@redhat.com>\n\n        * java/lang/natClass.cc (initializeClass): Re-throw\n        SecurityExceptions.\n        * java/lang/natVMClassLoader.cc (loadClass): checkPackageAccess.\n        * java/lang/ClassLoader.java: (loadClass): Likewise.\n\nFrom-SVN: r121285", "tree": {"sha": "40df469186ef32efb4fe4cfc7ff23eb2b0c7e713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40df469186ef32efb4fe4cfc7ff23eb2b0c7e713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b05e79165f6d8c5660a874d77f87da41ca934c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b05e79165f6d8c5660a874d77f87da41ca934c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b05e79165f6d8c5660a874d77f87da41ca934c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b05e79165f6d8c5660a874d77f87da41ca934c9/comments", "author": null, "committer": null, "parents": [{"sha": "2631dfddd2d1492ded5836b7385d3754c9cca33f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2631dfddd2d1492ded5836b7385d3754c9cca33f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2631dfddd2d1492ded5836b7385d3754c9cca33f"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "0810e6c686a18670ebdde45100523a0e9dd18d36", "filename": "libjava/classpath/lib/java/lang/ClassLoader.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassLoader.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassLoader.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassLoader.class?ref=6b05e79165f6d8c5660a874d77f87da41ca934c9"}, {"sha": "faec9a7ebd2abd7871c564c671b9cb5c1f3c2144", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=6b05e79165f6d8c5660a874d77f87da41ca934c9", "patch": "@@ -404,6 +404,14 @@ private native Class loadClassFromSig(String name)\n   protected synchronized Class loadClass(String name, boolean resolve)\n     throws ClassNotFoundException\n   {\n+    SecurityManager sm = SecurityManager.current;\n+    if (sm != null)\n+      {\n+\tint lastDot = name.lastIndexOf('.');\n+\tif (lastDot != -1)\n+\t  sm.checkPackageAccess(name.substring(0, lastDot));\n+      }\n+\n     // Arrays are handled specially.\n     Class c;\n     if (name.length() > 0 && name.charAt(0) == '[')"}, {"sha": "8af533b7769a93816563852b82a70f4d93b7c799", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=6b05e79165f6d8c5660a874d77f87da41ca934c9", "patch": "@@ -50,6 +50,7 @@ details.  */\n #include <java/lang/NullPointerException.h>\n #include <java/lang/RuntimePermission.h>\n #include <java/lang/System.h>\n+#include <java/lang/SecurityException.h>\n #include <java/lang/SecurityManager.h>\n #include <java/lang/StringBuffer.h>\n #include <java/lang/VMClassLoader.h>\n@@ -690,6 +691,10 @@ java::lang::Class::initializeClass (void)\n \t  {\n \t    _Jv_Linker::wait_for_state(this, JV_STATE_LINKED);\n \t  }\n+\tcatch (java::lang::SecurityException *x)\n+\t  {\n+\t    throw x;\n+\t  }\n \tcatch (java::lang::Throwable *x)\n \t  {\n \t    // Turn into a NoClassDefFoundError.\n@@ -727,6 +732,10 @@ java::lang::Class::initializeClass (void)\n \t{\n \t  _Jv_InitClass (superclass);\n \t}\n+      catch (java::lang::SecurityException *x)\n+\t{\n+\t  throw x;\n+\t}\n       catch (java::lang::Throwable *except)\n \t{\n \t  // Caught an exception.\n@@ -745,6 +754,10 @@ java::lang::Class::initializeClass (void)\n       if (meth)\n \t((void (*) (void)) meth->ncode) ();\n     }\n+  catch (java::lang::SecurityException *x)\n+    {\n+      throw x;\n+    }\n   catch (java::lang::Throwable *except)\n     {\n       if (! java::lang::Error::class$.isInstance(except))"}, {"sha": "3e5ff3ec70e66df209cba6e6b1c4329ec8469702", "filename": "libjava/java/lang/natVMClassLoader.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b05e79165f6d8c5660a874d77f87da41ca934c9/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc?ref=6b05e79165f6d8c5660a874d77f87da41ca934c9", "patch": "@@ -32,8 +32,10 @@ details.  */\n #include <java/security/ProtectionDomain.h>\n #include <java/lang/ClassFormatError.h>\n #include <java/lang/StringBuffer.h>\n+#include <java/lang/SecurityManager.h>\n #include <java/lang/Runtime.h>\n #include <java/util/HashSet.h>\n+#include <java/lang/SecurityException.h>\n #include <java/lang/VirtualMachineError.h>\n \n java::lang::Class *\n@@ -204,6 +206,16 @@ java::lang::VMClassLoader::nativeFindClass (jstring name)\n jclass\n java::lang::VMClassLoader::loadClass(jstring name, jboolean resolve)\n {\n+  using namespace ::java::lang;\n+\n+  SecurityManager *sm = (SecurityManager *)SecurityManager::current;\n+  if (sm)\n+    {\n+      jint lastDot = name->lastIndexOf('.');\n+      if (lastDot != -1)\n+\tsm->checkPackageAccess(name->substring(0, lastDot));\n+    }\n+\n   // We try the boot loader first, so that the endorsed directory\n   // overrides compiled-in classes.\n   jclass klass = NULL;"}]}