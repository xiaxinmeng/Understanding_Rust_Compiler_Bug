{"sha": "42a2c30e1b583239136fab633057bb03518c26b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhMmMzMGUxYjU4MzIzOTEzNmZhYjYzMzA1N2JiMDM1MThjMjZiMw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-02-26T23:16:59Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-02-26T23:16:59Z"}, "message": "the undefine_null bypass pattern needs to match for DOS headers\n\nFrom-SVN: r32199", "tree": {"sha": "2e55f099a3546dacbecd262f43f7bc60a1e7a92f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e55f099a3546dacbecd262f43f7bc60a1e7a92f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42a2c30e1b583239136fab633057bb03518c26b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a2c30e1b583239136fab633057bb03518c26b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a2c30e1b583239136fab633057bb03518c26b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a2c30e1b583239136fab633057bb03518c26b3/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4592bdcbb8fe793fa7dc89ed84afb6df7699c92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4592bdcbb8fe793fa7dc89ed84afb6df7699c92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4592bdcbb8fe793fa7dc89ed84afb6df7699c92e"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "7a5f66940af478409d01a6281ac78d640d28388b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42a2c30e1b583239136fab633057bb03518c26b3", "patch": "@@ -1,3 +1,9 @@\n+2000-02-26  Bruce Korb  <bkorb@gnu.org>\n+\n+\tfixinc/inclhack.def(undefine_null): the bypass pattern needs to\n+\tmatch for DOS headers, too.\n+\tfixinc/inclhack.sh,fixincl.x: regen\n+\n 2000-02-26  Geoff Keating  <geoffk@cygnus.com>\n \n \t* config/elfos.h (ASM_OUTPUT_LABELREF): Don't define.  The default"}, {"sha": "f120a2391b680f1db8860d2d73427fe3c5246611", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=42a2c30e1b583239136fab633057bb03518c26b3", "patch": "@@ -4010,13 +4010,13 @@ tSCC zUndefine_NullName[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zUndefine_NullSelect0[] =\n-       \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t]\";\n+       \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t\\r]\";\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zUndefine_NullBypass0[] =\n-       \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t])\";\n+       \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t\\r])\";\n \n #define    UNDEFINE_NULL_TEST_CT  2\n tTestDesc aUndefine_NullTests[] = {\n@@ -4027,7 +4027,7 @@ tTestDesc aUndefine_NullTests[] = {\n  *  Fix Command Arguments for Undefine_Null\n  */\n const char* apzUndefine_NullPatch[] = { \"sed\",\n-    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t]/i\\\\\\n\\\n+    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t\\r]/i\\\\\\n\\\n #undef NULL\\n\",\n     (char*)NULL };\n "}, {"sha": "e431d1fa562491f6cf23640ea7a05a4637baaa08", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=42a2c30e1b583239136fab633057bb03518c26b3", "patch": "@@ -2387,9 +2387,9 @@ fix = {\n  */\n fix = {\n     hackname = undefine_null;\n-    select = \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t]\";\n-    bypass = \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t])\";\n-    sed    = \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t]/i\\\\\\n\"\n+    select = \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t\\r]\";\n+    bypass = \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t\\r])\";\n+    sed    = \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t\\r]/i\\\\\\n\"\n                 \"#undef NULL\\n\";\n };\n "}, {"sha": "06e08159ee62124ba47989b6fb0093f3e41442d3", "filename": "gcc/fixinc/inclhack.sh", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Finclhack.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a2c30e1b583239136fab633057bb03518c26b3/gcc%2Ffixinc%2Finclhack.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.sh?ref=42a2c30e1b583239136fab633057bb03518c26b3", "patch": "@@ -3069,17 +3069,17 @@ struct utsname;\n     #\n     # Fix Undefine_Null\n     #\n-    if ( test -n \"`egrep '^#[ \t]*define[ \t]*[ \t]NULL[ \t]' ${file}`\"\n+    if ( test -n \"`egrep '^#[ \t]*define[ \t]*[ \t]NULL[ \t\r]' ${file}`\"\n        ) > /dev/null 2>&1 ; then\n-    if ( test -z \"`egrep '#[ \t]*(ifn|un)def[ \t]*[ \t]NULL($|[ \t])' ${file}`\"\n+    if ( test -z \"`egrep '#[ \t]*(ifn|un)def[ \t]*[ \t]NULL($|[ \t\r])' ${file}`\"\n        ) > /dev/null 2>&1 ; then\n     fixlist=\"${fixlist}\n       undefine_null\"\n     if [ ! -r ${DESTFILE} ]\n     then infile=${file}\n     else infile=${DESTFILE} ; fi \n \n-    sed -e '/^#[ \t]*define[ \t][ \t]*NULL[ \t]/i\\\n+    sed -e '/^#[ \t]*define[ \t][ \t]*NULL[ \t\r]/i\\\n #undef NULL\n ' \\\n           < $infile > ${DESTDIR}/fixinc.tmp"}]}