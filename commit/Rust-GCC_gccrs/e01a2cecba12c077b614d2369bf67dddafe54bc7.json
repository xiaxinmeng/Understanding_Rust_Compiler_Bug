{"sha": "e01a2cecba12c077b614d2369bf67dddafe54bc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxYTJjZWNiYTEyYzA3N2I2MTRkMjM2OWJmNjdkZGRhZmU1NGJjNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T22:40:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T22:40:22Z"}, "message": "(operand_subword): Avoid confusion if sizeof (float) is less than a\nfull word.\n\nFrom-SVN: r13194", "tree": {"sha": "4db2b21f3c9733690fe014edbe287be02a908d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4db2b21f3c9733690fe014edbe287be02a908d09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e01a2cecba12c077b614d2369bf67dddafe54bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a2cecba12c077b614d2369bf67dddafe54bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01a2cecba12c077b614d2369bf67dddafe54bc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a2cecba12c077b614d2369bf67dddafe54bc7/comments", "author": null, "committer": null, "parents": [{"sha": "60814f4054d231c3eb7ca1bb1854851b8e57cd81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60814f4054d231c3eb7ca1bb1854851b8e57cd81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60814f4054d231c3eb7ca1bb1854851b8e57cd81"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "2036ca727c95ff0aa4bfd092a304c4a38a5058dd", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a2cecba12c077b614d2369bf67dddafe54bc7/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a2cecba12c077b614d2369bf67dddafe54bc7/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=e01a2cecba12c077b614d2369bf67dddafe54bc7", "patch": "@@ -1254,6 +1254,7 @@ operand_subword (op, i, validate_address, mode)\n   if (((HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n \t&& HOST_BITS_PER_WIDE_INT == BITS_PER_WORD)\n        || flag_pretend_float)\n+      && sizeof (float) * 8 == HOST_BITS_PER_WIDE_INT\n       && GET_MODE_CLASS (mode) == MODE_FLOAT\n       && GET_MODE_SIZE (mode) == UNITS_PER_WORD\n       && GET_CODE (op) == CONST_DOUBLE)\n@@ -1266,6 +1267,22 @@ operand_subword (op, i, validate_address, mode)\n       u.f = d;\n       return GEN_INT (u.i);\n     }\n+  if (((HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n+\t&& HOST_BITS_PER_WIDE_INT == BITS_PER_WORD)\n+       || flag_pretend_float)\n+      && sizeof (double) * 8 == HOST_BITS_PER_WIDE_INT\n+      && GET_MODE_CLASS (mode) == MODE_FLOAT\n+      && GET_MODE_SIZE (mode) == UNITS_PER_WORD\n+      && GET_CODE (op) == CONST_DOUBLE)\n+    {\n+      double d;\n+      union {double d; HOST_WIDE_INT i; } u;\n+\n+      REAL_VALUE_FROM_CONST_DOUBLE (d, op);\n+\n+      u.d = d;\n+      return GEN_INT (u.i);\n+    }\n #endif /* no REAL_ARITHMETIC */\n       \n   /* The only remaining cases that we can handle are integers."}]}