{"sha": "92bd489fd642c8c11e6ceb53639eee58c4c939cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiZDQ4OWZkNjQyYzhjMTFlNmNlYjUzNjM5ZWVlNThjNGM5MzljZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-10T13:50:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-10T13:50:12Z"}, "message": "Fix previous change.\n\nFrom-SVN: r5305", "tree": {"sha": "64a733137e21eb1db16e2cc37b829cf423e06d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64a733137e21eb1db16e2cc37b829cf423e06d2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92bd489fd642c8c11e6ceb53639eee58c4c939cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bd489fd642c8c11e6ceb53639eee58c4c939cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92bd489fd642c8c11e6ceb53639eee58c4c939cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bd489fd642c8c11e6ceb53639eee58c4c939cd/comments", "author": null, "committer": null, "parents": [{"sha": "a357ac88c0d5b040ea0f2c97dc0c1128536bde50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a357ac88c0d5b040ea0f2c97dc0c1128536bde50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a357ac88c0d5b040ea0f2c97dc0c1128536bde50"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "56a384ec1177ee5d1b485830e2241126988a51dc", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92bd489fd642c8c11e6ceb53639eee58c4c939cd/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92bd489fd642c8c11e6ceb53639eee58c4c939cd/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=92bd489fd642c8c11e6ceb53639eee58c4c939cd", "patch": "@@ -207,7 +207,7 @@ rtxfun bcc_gen_fctn[NUM_RTX_CODE];\n enum insn_code setcc_gen_code[NUM_RTX_CODE];\n \n static int add_equal_note\tPROTO((rtx, rtx, enum rtx_code, rtx, rtx));\n-static rtx widen_operand\tPROTO((rtx, enum machine_mode, int, int));\n+static rtx widen_operand\tPROTO((rtx, enum machine_mode, enum machine_mode, int, int));\n static void emit_float_lib_cmp\tPROTO((rtx, rtx, enum rtx_code));\n static enum insn_code can_fix_p\tPROTO((enum machine_mode, enum machine_mode,\n \t\t\t\t       int, int *));"}]}