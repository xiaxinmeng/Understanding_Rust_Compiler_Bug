{"sha": "b6b3c13865cfb7ef674fe1364036d7547d4892df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZiM2MxMzg2NWNmYjdlZjY3NGZlMTM2NDAzNmQ3NTQ3ZDQ4OTJkZg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-10-26T14:53:53Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-10-26T14:53:53Z"}, "message": "* Makefile.in: Remove duplicated lines.\n\nFrom-SVN: r72952", "tree": {"sha": "60d21ac1471ff06be9d0ce8ad8947f0f99bbe04f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60d21ac1471ff06be9d0ce8ad8947f0f99bbe04f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6b3c13865cfb7ef674fe1364036d7547d4892df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b3c13865cfb7ef674fe1364036d7547d4892df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6b3c13865cfb7ef674fe1364036d7547d4892df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b3c13865cfb7ef674fe1364036d7547d4892df/comments", "author": null, "committer": null, "parents": [{"sha": "43a936179e9a7c1b8d9980f00d6c372c5c6670d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a936179e9a7c1b8d9980f00d6c372c5c6670d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a936179e9a7c1b8d9980f00d6c372c5c6670d9"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "af03db0b3a195dbb2807aa540b2ea6c5bb7826d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b3c13865cfb7ef674fe1364036d7547d4892df/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b3c13865cfb7ef674fe1364036d7547d4892df/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b6b3c13865cfb7ef674fe1364036d7547d4892df", "patch": "@@ -1,3 +1,7 @@\n+2003-10-26  Andreas Jaeger  <aj@suse.de>\n+\n+\t* Makefile.in: Remove duplicated lines.\n+\n 2003-10-24  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* gnatvsn.ads (Gnat_Static_Version_String): New constant, used to\n@@ -20,7 +24,7 @@\n \n 2003-10-24  Jose Ruiz  <ruiz@act-europe.fr>\n \n-\t* exp_disp.adb: \n+\t* exp_disp.adb:\n \tRemove the test against being in No_Run_Time_Mode before generating a\n \tcall to Register_Tag. It is redundant with the test against the\n \tavailability of the function Register_Tag.\n@@ -42,19 +46,19 @@\n \tinformation, check that the source exists and, if it does, that the path\n \tis the actual path of a source of a project.\n \n-\t* prj-env.adb: \n+\t* prj-env.adb:\n \t(File_Name_Of_Library_Unit_Body): New Boolean parameter Full_Path. When\n \tFull_Path is True, return the full path instead of the simple file name.\n \t(Project_Of): New function\n \n-\t* prj-env.ads: \n+\t* prj-env.ads:\n \t(File_Name_Of_Library_Unit_Body): New Boolean parameter Full_Path,\n \tdefaulted to False.\n \t(Project_Of): New function\n \n 2003-10-24  Arnaud Charlet  <charlet@act-europe.fr>\n \n-\t* Makefile.generic: \n+\t* Makefile.generic:\n \tEnsure objects of main project are always checked and rebuilt if needed.\n \tSet CC to gcc by default.\n \tPrepare new handling of link by creating a global archive (not activated\n@@ -68,10 +72,10 @@\n \n \t* sem_ch12.adb: Minor reformatting\n \n-\t* sem_ch3.adb: \n+\t* sem_ch3.adb:\n \tMinor reformatting (including new function return style throughout)\n \n-\t* sem_ch3.ads: \n+\t* sem_ch3.ads:\n \tMinor reformatting (including new function return style throughout)\n \n 2003-10-24  Arnaud Charlet  <charlet@act-europe.fr>\n@@ -149,7 +153,7 @@\n \t(__gnat_is_symbolic_link): Likewise.\n \t(__gnat_portable_spawn): Likewise.  Cast last arg of spawnvp to match\n \tdeclaration\n-\t(__gnat_file_time_name): Don't declare struct stat statbuf when \n+\t(__gnat_file_time_name): Don't declare struct stat statbuf when\n \tnot needed.\n \t(__gnat_is_absolute_path): Add parenthesis around condition of\n \t'if' statement to avoid warning.\n@@ -191,36 +195,36 @@\n \n 2003-10-21  Gary Dismukes  <dismukes@gnat.com>\n \n-\t* exp_ch3.adb: \n+\t* exp_ch3.adb:\n \t(Component_Needs_Simple_Initialization): Return False when the type is a\n \tpacked bit array. Revise spec comments to document this case.\n \n-\t* exp_prag.adb: \n+\t* exp_prag.adb:\n \t(Expand_Pragma_Import): Set any expression on the imported object to\n \tempty to avoid initializing imported objects (in particular this\n \tcovers the case of zero-initialization of bit arrays).\n \tUpdate copyright notice.\n \n 2003-10-21  Ed Schonberg  <schonberg@gnat.com>\n \n-\t* sem_ch12.adb: \n+\t* sem_ch12.adb:\n \t(Load_Parent_Of_Generic): If parent is compilation unit, stop search,\n \ta subunit is missing.\n \t(Instantiate_Subprogram_Body): If body of function is missing, set type\n \tof return expression explicitly in dummy body, to prevent cascaded\n \terrors when a subunit is missing.\n \tFixes PR 5677.\n \n-\t* sem_ch3.adb: \n+\t* sem_ch3.adb:\n \t(Access_Subprogram_Declaration): Verify that return type is valid.\n \tFixes PR 8693.\n \n-\t* sem_elab.adb: \n+\t* sem_elab.adb:\n \t(Check_Elab_Calls): Do not apply elaboration checks if the main unit is\n \tgeneric.\n \tFixes PR 12318.\n \n-\t* sem_util.adb: \n+\t* sem_util.adb:\n \t(Corresponding_Discriminant): If the scope of the discriminant is a\n \tprivate type without discriminant, use its full view.\n \tFixes PR 8247."}, {"sha": "9aa5fa5e5e1de09e6965c4f3a8c7b6d85c02fb08", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b3c13865cfb7ef674fe1364036d7547d4892df/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b3c13865cfb7ef674fe1364036d7547d4892df/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=b6b3c13865cfb7ef674fe1364036d7547d4892df", "patch": "@@ -142,13 +142,6 @@ SOME_ADAFLAGS =-gnata\n FORCE_DEBUG_ADAFLAGS = -g\n GNATLIBFLAGS = -gnatpg\n GNATLIBCFLAGS = -g -O2\n-GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) -fexceptions \\\n-\t-DIN_RTS\n-ADAFLAGS = -W -Wall -gnatpg -gnata\n-SOME_ADAFLAGS =-gnata\n-FORCE_DEBUG_ADAFLAGS = -g\n-GNATLIBFLAGS = -gnatpg\n-GNATLIBCFLAGS = -g -O2\n GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) -fexceptions \\\n \t-DIN_RTS\n ALL_ADA_CFLAGS = $(X_ADA_CFLAGS) $(T_ADA_CFLAGS) $(ADA_CFLAGS)"}]}