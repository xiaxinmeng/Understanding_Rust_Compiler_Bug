{"sha": "55d4cbcba8f1c74fa90ed53059114ccaaf549ad7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkNGNiY2JhOGYxYzc0ZmE5MGVkNTMwNTkxMTRjY2FhZjU0OWFkNw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-07T14:30:53Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-07T14:31:17Z"}, "message": "Fix ChangeLog for previous commit", "tree": {"sha": "7ceddd360b106da59f750a1a837385676bb02ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ceddd360b106da59f750a1a837385676bb02ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7/comments", "author": null, "committer": null, "parents": [{"sha": "cba9ef069e58eac00f30489d3ef21390caee6e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba9ef069e58eac00f30489d3ef21390caee6e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba9ef069e58eac00f30489d3ef21390caee6e45"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "b374eff74087ecd990f5d63208618e7a4270851c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d4cbcba8f1c74fa90ed53059114ccaaf549ad7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=55d4cbcba8f1c74fa90ed53059114ccaaf549ad7", "patch": "@@ -5,20 +5,29 @@\n \t(subrange::_S_store_size): Mark as const instead of constexpr to\n \tavoid what seems to be a bug in GCC.\n \t(__detail::__box): Give it defaulted copy and move constructors.\n-\t(views::_Single::operator()): Mark constexpr.\n-\t(views::_Iota::operator()): Mark constexpr.\n+\t(ranges::views::_Single::operator()): Mark constexpr.\n+\t(ranges::views::_Iota::operator()): Mark constexpr.\n \t(__detail::Empty): Define.\n-\t(views::_RangeAdaptor, views::_RangeAdaptorClosure, ref_view, all_view,\n-\tviews::all, filter_view, views::filter, transform_view,\n-\tviews::transform, take_view, views::take, take_while_view,\n-\tviews::take_while, drop_view, views::drop, join_view, views::join,\n+\t(ranges::views::__closure::_RangeAdaptor,\n+\tranges::views::__closure::_RangeAdaptorClosure, ref_view, all_view,\n+\tranges::views::all, ranges::__detail::find_if,\n+\tranges::__detail::find_if_not, ranges::__detail::mismatch,\n+\tranges::detail::min, filter_view, ranges::views::filter, transform_view,\n+\tranges::views::transform, take_view, ranges::views::take,\n+\ttake_while_view, ranges::views::take_while, drop_view,\n+\tranges::views::drop, join_view, ranges::views::join,\n \t__detail::require_constant, __detail::tiny_range, split_view,\n-\tviews::split, views::_Counted, views::counted, common_view,\n-\tviews::common, reverse_view, views::reverse,\n-\tviews::__detail::__is_reversible_subrange,\n-\tviews::__detail::__is_reverse_view, reverse_view, views::reverse,\n-\t__detail::__has_tuple_element, elements_view, views::elements,\n-\tviews::keys, views::values): Define.\n+\tranges::views::split, ranges::views::_Counted, ranges::views::counted,\n+\tcommon_view, ranges::views::common, reverse_view,\n+\tranges::views::reverse,\n+\tranges::views::__detail::__is_reversible_subrange,\n+\tranges::views::__detail::__is_reverse_view, reverse_view,\n+\tranges::views::reverse, __detail::__has_tuple_element, elements_view,\n+\tranges::views::elements, ranges::views::keys, ranges::views::values):\n+\tDefine.\n+\t(views): Alias for ranges::views.\n+\t(tuple_size<ranges::subrange<>>, tuple_element<0, ranges::subrange>,\n+\ttuple_element<1, ranges::subrange>): New partial specializations.\n \t* testsuite/std/ranges/adaptors/all.cc: New test.\n \t* testsuite/std/ranges/adaptors/common.cc: Likewise.\n \t* testsuite/std/ranges/adaptors/counted.cc: Likewise."}]}