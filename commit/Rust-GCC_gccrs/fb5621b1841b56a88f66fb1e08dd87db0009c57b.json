{"sha": "fb5621b1841b56a88f66fb1e08dd87db0009c57b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1NjIxYjE4NDFiNTZhODhmNjZmYjFlMDhkZDg3ZGIwMDA5YzU3Yg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2017-11-08T22:04:49Z"}, "committer": {"name": "Palmer Dabbelt", "email": "palmer@gcc.gnu.org", "date": "2017-11-08T22:04:49Z"}, "message": "RISC-V: Fix build error\n\n  - This build error was indroduced by \"RISC-V: Implement movmemsi\"\n    and \"RISC-V: Support -mpreferred-stack-boundary flag\"\n\ngcc/ChangeLog\n\n2017-11-08  Kito Cheng  <kito.cheng@gmail.com>\n\n        * config/riscv/riscv-protos.h (riscv_slow_unaligned_access_p):\n        New extern.\n        (MOVE_RATIO): Use riscv_slow_unaligned_access_p.\n        config/riscv/riscv.c (predict.h): New include.\n        (riscv_slow_unaligned_access_p): No longer static.\n        (riscv_block_move_straight): Add require.\n        config/riscv/riscv-protos.h (riscv_hard_regno_nregs): Delete.\n\nFrom-SVN: r254554", "tree": {"sha": "68f2911a3e07379f84870d41a07eefd3351c2e86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68f2911a3e07379f84870d41a07eefd3351c2e86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5621b1841b56a88f66fb1e08dd87db0009c57b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5621b1841b56a88f66fb1e08dd87db0009c57b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5621b1841b56a88f66fb1e08dd87db0009c57b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5621b1841b56a88f66fb1e08dd87db0009c57b/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd5dce5c53117501297c17a4e092a13009d2c119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5dce5c53117501297c17a4e092a13009d2c119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5dce5c53117501297c17a4e092a13009d2c119"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "b51ef192fc71ba8e27ca949e327872bff89e0631", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb5621b1841b56a88f66fb1e08dd87db0009c57b", "patch": "@@ -1,3 +1,13 @@\n+2017-11-08  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* config/riscv/riscv-protos.h (riscv_slow_unaligned_access_p):\n+\tNew extern.\n+\t(MOVE_RATIO): Use riscv_slow_unaligned_access_p.\n+\tconfig/riscv/riscv.c (predict.h): New include.\n+\t(riscv_slow_unaligned_access_p): No longer static.\n+\t(riscv_block_move_straight): Add require.\n+\tconfig/riscv/riscv-protos.h (riscv_hard_regno_nregs): Delete.\n+\n 2017-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82855"}, {"sha": "5f65b20e792ecf1d099066a71e2af0ddc59e0af4", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=fb5621b1841b56a88f66fb1e08dd87db0009c57b", "patch": "@@ -68,7 +68,6 @@ extern void riscv_expand_prologue (void);\n extern void riscv_expand_epilogue (bool);\n extern bool riscv_can_use_return_insn (void);\n extern rtx riscv_function_value (const_tree, const_tree, enum machine_mode);\n-extern unsigned int riscv_hard_regno_nregs (int, enum machine_mode);\n extern bool riscv_expand_block_move (rtx, rtx, rtx);\n \n /* Routines implemented in riscv-c.c.  */"}, {"sha": "279af909a694365924299098da50a4abef38c1d4", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=fb5621b1841b56a88f66fb1e08dd87db0009c57b", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"diagnostic.h\"\n #include \"builtins.h\"\n+#include \"predict.h\"\n \n /* True if X is an UNSPEC wrapper around a SYMBOL_REF or LABEL_REF.  */\n #define UNSPEC_ADDRESS_P(X)\t\t\t\t\t\\\n@@ -217,7 +218,7 @@ struct riscv_cpu_info {\n /* Global variables for machine-dependent things.  */\n \n /* Whether unaligned accesses execute very slowly.  */\n-static bool riscv_slow_unaligned_access_p;\n+bool riscv_slow_unaligned_access_p;\n \n /* Which tuning parameters to use.  */\n static const struct riscv_tune_info *tune_info;\n@@ -2657,7 +2658,7 @@ riscv_block_move_straight (rtx dest, rtx src, HOST_WIDE_INT length)\n   bits = MAX (BITS_PER_UNIT,\n \t      MIN (BITS_PER_WORD, MIN (MEM_ALIGN (src), MEM_ALIGN (dest))));\n \n-  mode = mode_for_size (bits, MODE_INT, 0);\n+  mode = mode_for_size (bits, MODE_INT, 0).require ();\n   delta = bits / BITS_PER_UNIT;\n \n   /* Allocate a buffer for the temporary registers.  */"}, {"sha": "91a9c33543d225dc8f002d50f8bc0b7cf170a8c2", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5621b1841b56a88f66fb1e08dd87db0009c57b/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=fb5621b1841b56a88f66fb1e08dd87db0009c57b", "patch": "@@ -824,7 +824,7 @@ while (0)\n    case, movmem or libcall is more efficient.  */\n \n #define MOVE_RATIO(speed)\t\t\t\t\t\t\\\n-  (!STRICT_ALIGNMENT && riscv_slow_unaligned_access ? 1 :\t\t\\\n+  (!STRICT_ALIGNMENT && riscv_slow_unaligned_access_p ? 1 :\t\t\\\n    (speed) ? RISCV_MAX_MOVE_BYTES_PER_LOOP_ITER / UNITS_PER_WORD :\t\\\n    CLEAR_RATIO (speed) / 2)\n \n@@ -841,6 +841,8 @@ while (0)\n \n #ifndef USED_FOR_TARGET\n extern const enum reg_class riscv_regno_to_class[];\n+extern bool riscv_slow_unaligned_access_p;\n+extern unsigned riscv_stack_boundary;\n #endif\n \n #define ASM_PREFERRED_EH_DATA_FORMAT(CODE,GLOBAL) \\"}]}