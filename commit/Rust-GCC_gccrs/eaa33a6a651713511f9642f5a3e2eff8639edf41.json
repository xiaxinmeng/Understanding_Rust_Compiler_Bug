{"sha": "eaa33a6a651713511f9642f5a3e2eff8639edf41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFhMzNhNmE2NTE3MTM1MTFmOTY0MmY1YTNlMmVmZjg2MzllZGY0MQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2014-05-23T02:47:45Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2014-05-23T02:47:45Z"}, "message": "target-supports.exp: New effective targets for architectures capable of performing byte swap.\n\n2014-05-23  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* lib/target-supports.exp: New effective targets for architectures\n\t  capable of performing byte swap.\n\t* gcc.dg/optimize-bswapdi-1.c: Convert to new bswap target.\n\t* gcc.dg/optimize-bswapdi-2.c: Likewise.\n\t* gcc.dg/optimize-bswapsi-1.c: Likewise.\n\nFrom-SVN: r210842", "tree": {"sha": "16b02c54f6e9b7361a53e7bb67a412b80c6d61e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b02c54f6e9b7361a53e7bb67a412b80c6d61e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaa33a6a651713511f9642f5a3e2eff8639edf41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa33a6a651713511f9642f5a3e2eff8639edf41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa33a6a651713511f9642f5a3e2eff8639edf41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa33a6a651713511f9642f5a3e2eff8639edf41/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebfedee6d72292d8e6770e5de05d6290a94ab098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfedee6d72292d8e6770e5de05d6290a94ab098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebfedee6d72292d8e6770e5de05d6290a94ab098"}], "stats": {"total": 103, "additions": 98, "deletions": 5}, "files": [{"sha": "139e750eccf19200fab7a3edf58443ac49d0cef2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eaa33a6a651713511f9642f5a3e2eff8639edf41", "patch": "@@ -1,3 +1,11 @@\n+2014-05-23  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* lib/target-supports.exp: New effective targets for architectures\n+\tcapable of performing byte swap.\n+\t* gcc.dg/optimize-bswapdi-1.c: Convert to new bswap target.\n+\t* gcc.dg/optimize-bswapdi-2.c: Likewise.\n+\t* gcc.dg/optimize-bswapsi-1.c: Likewise.\n+\n 2014-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61088"}, {"sha": "6142e55c51d9b8b995b8532ae248c34825365d3e", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c?ref=eaa33a6a651713511f9642f5a3e2eff8639edf41", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target bswap64 } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n \n #include <stdint.h>"}, {"sha": "b8ad2c13c40dfbf202f6081ddd81f6569bad2315", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c?ref=eaa33a6a651713511f9642f5a3e2eff8639edf41", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target bswap64 } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n \n #include <stdint.h>"}, {"sha": "33d0bb0fa77d29f3da0d50eb3f91d25393ef3f29", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c?ref=eaa33a6a651713511f9642f5a3e2eff8639edf41", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* i?86-*-* powerpc*-*-* rs6000-*-* x86_64-*-* s390*-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target bswap32 } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-options \"-O2 -fdump-tree-bswap -march=z900\" { target s390-*-* } } */"}, {"sha": "07f045aa477c8b6a38ecbfe6db631fa1258c1ca5", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa33a6a651713511f9642f5a3e2eff8639edf41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=eaa33a6a651713511f9642f5a3e2eff8639edf41", "patch": "@@ -4804,6 +4804,90 @@ proc check_effective_target_sync_long_long_runtime { } {\n     }\n }\n \n+# Return 1 if the target supports byte swap instructions.\n+\n+proc check_effective_target_bswap { } {\n+    global et_bswap_saved\n+\n+    if [info exists et_bswap_saved] {\n+        verbose \"check_effective_target_bswap: using cached result\" 2\n+    } else {\n+\tset et_bswap_saved 0\n+\tif { [istarget aarch64-*-*]\n+\t     || [istarget alpha*-*-*]\n+\t     || [istarget arm*-*-*]\n+\t     || [istarget i?86-*-*]\n+\t     || [istarget m68k-*-*]\n+\t     || [istarget powerpc*-*-*]\n+\t     || [istarget rs6000-*-*]\n+\t     || [istarget s390*-*-*]\n+\t     || [istarget x86_64-*-*] } {\n+\t    set et_bswap_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_bswap: returning $et_bswap_saved\" 2\n+    return $et_bswap_saved\n+}\n+\n+# Return 1 if the target supports 16-bit byte swap instructions.\n+\n+proc check_effective_target_bswap16 { } {\n+    global et_bswap16_saved\n+\n+    if [info exists et_bswap16_saved] {\n+\tverbose \"check_effective_target_bswap16: using cached result\" 2\n+    } else {\n+\tset et_bswap16_saved 0\n+\tif { [is-effective-target bswap]\n+\t     && ![istarget alpha*-*-*]\n+\t     && ![istarget i?86-*-*]\n+\t     && ![istarget x86_64-*-*] } {\n+\t   set et_bswap16_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_bswap16: returning $et_bswap16_saved\" 2\n+    return $et_bswap16_saved\n+}\n+\n+# Return 1 if the target supports 32-bit byte swap instructions.\n+\n+proc check_effective_target_bswap32 { } {\n+    global et_bswap32_saved\n+\n+    if [info exists et_bswap32_saved] {\n+\tverbose \"check_effective_target_bswap32: using cached result\" 2\n+    } else {\n+\tset et_bswap32_saved 0\n+\tif { [is-effective-target bswap] } {\n+\t   set et_bswap32_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_bswap32: returning $et_bswap32_saved\" 2\n+    return $et_bswap32_saved\n+}\n+\n+# Return 1 if the target supports 64-bit byte swap instructions.\n+\n+proc check_effective_target_bswap64 { } {\n+    global et_bswap64_saved\n+\n+    if [info exists et_bswap64_saved] {\n+        verbose \"check_effective_target_bswap64: using cached result\" 2\n+    } else {\n+\tset et_bswap64_saved 0\n+\tif { [is-effective-target bswap]\n+\t     && [is-effective-target lp64] } {\n+\t   set et_bswap64_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_bswap64: returning $et_bswap64_saved\" 2\n+    return $et_bswap64_saved\n+}\n+\n # Return 1 if the target supports atomic operations on \"int\" and \"long\".\n \n proc check_effective_target_sync_int_long { } {"}]}