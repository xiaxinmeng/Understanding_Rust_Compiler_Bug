{"sha": "db750ef997aa9bb8bc33d95420b13fe76240eaf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI3NTBlZjk5N2FhOWJiOGJjMzNkOTU0MjBiMTNmZTc2MjQwZWFmNw==", "commit": {"author": {"name": "Vladim\u00edr \u010cun\u00e1t", "email": "vcunat@gmail.com", "date": "2016-01-04T02:03:07Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2016-01-04T02:03:07Z"}, "message": "invoke.texi (RS/6000 and PowerPC Options): Fix -finite-math typo.\n\n2016-01-03  Vladim\u00edr \u010cun\u00e1t <vcunat@gmail.com>\n\n\tgcc/\n\t* doc/invoke.texi (RS/6000 and PowerPC Options): Fix\n\t-finite-math typo.\n\t(x86 Options): Likewise.\n\nFrom-SVN: r232046", "tree": {"sha": "3702ca360f7cb5a404d456b8a442a96639f6991c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3702ca360f7cb5a404d456b8a442a96639f6991c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db750ef997aa9bb8bc33d95420b13fe76240eaf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db750ef997aa9bb8bc33d95420b13fe76240eaf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db750ef997aa9bb8bc33d95420b13fe76240eaf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db750ef997aa9bb8bc33d95420b13fe76240eaf7/comments", "author": {"login": "vcunat", "id": 1785925, "node_id": "MDQ6VXNlcjE3ODU5MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1785925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcunat", "html_url": "https://github.com/vcunat", "followers_url": "https://api.github.com/users/vcunat/followers", "following_url": "https://api.github.com/users/vcunat/following{/other_user}", "gists_url": "https://api.github.com/users/vcunat/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcunat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcunat/subscriptions", "organizations_url": "https://api.github.com/users/vcunat/orgs", "repos_url": "https://api.github.com/users/vcunat/repos", "events_url": "https://api.github.com/users/vcunat/events{/privacy}", "received_events_url": "https://api.github.com/users/vcunat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99a385240aa5442ef0745e7b56eb1bc896fa4126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a385240aa5442ef0745e7b56eb1bc896fa4126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99a385240aa5442ef0745e7b56eb1bc896fa4126"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "360c28237ddc18fef25dc0d869ee2440c2f011a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db750ef997aa9bb8bc33d95420b13fe76240eaf7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db750ef997aa9bb8bc33d95420b13fe76240eaf7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db750ef997aa9bb8bc33d95420b13fe76240eaf7", "patch": "@@ -1,3 +1,9 @@\n+2016-01-03  Vladim\u00edr \u010cun\u00e1t <vcunat@gmail.com>\n+\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Fix\n+\t-finite-math typo.\n+\t(x86 Options): Likewise.\n+\n 2016-01-01  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR 1078"}, {"sha": "57a39bb692a74c74ada7fac776e0575a9f30cfb6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db750ef997aa9bb8bc33d95420b13fe76240eaf7/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db750ef997aa9bb8bc33d95420b13fe76240eaf7/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=db750ef997aa9bb8bc33d95420b13fe76240eaf7", "patch": "@@ -20374,7 +20374,7 @@ Newton-Raphson steps to increase precision instead of doing a divide or\n square root and divide for floating-point arguments.  You should use\n the @option{-ffast-math} option when using @option{-mrecip} (or at\n least @option{-funsafe-math-optimizations},\n-@option{-finite-math-only}, @option{-freciprocal-math} and\n+@option{-ffinite-math-only}, @option{-freciprocal-math} and\n @option{-fno-trapping-math}).  Note that while the throughput of the\n sequence is generally higher than the throughput of the non-reciprocal\n instruction, the precision of the sequence can be decreased by up to 2\n@@ -23366,7 +23366,7 @@ to increase precision instead of @code{DIVSS} and @code{SQRTSS}\n (and their vectorized\n variants) for single-precision floating-point arguments.  These instructions\n are generated only when @option{-funsafe-math-optimizations} is enabled\n-together with @option{-finite-math-only} and @option{-fno-trapping-math}.\n+together with @option{-ffinite-math-only} and @option{-fno-trapping-math}.\n Note that while the throughput of the sequence is higher than the throughput\n of the non-reciprocal instruction, the precision of the sequence can be\n decreased by up to 2 ulp (i.e. the inverse of 1.0 equals 0.99999994)."}]}