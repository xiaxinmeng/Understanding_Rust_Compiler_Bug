{"sha": "1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyMzNkYjM3NDU4OTBkOGM5YmVkMDdmNDRhOGIwNzhiYjJhMGVlOQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-05-25T09:03:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:03:34Z"}, "message": "[Ada] Fix handling of Loop_Entry for CodePeer/SPARK\n\nWhen the applicable Assertion_Policy is Ignore for a pragma containing\nan occurrence of attribute Loop_Entry, CodePeer and SPARK should still be\nable to analyze the corresponding pragma. GNAT frontend was wrongly\ntranslating X'Loop_Entry as X in the AST, as a side-effect of an\noptimization only valid for compilation and not for static analysis.\n\nThis has no effect on compilation.\n\n2018-05-25  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Check_Applicable_Policy): Deal specially with CodePeer\n\tand GNATprove modes when applicable policy is Ignore.\n\nFrom-SVN: r260722", "tree": {"sha": "53544bddf4d875bd0013449de2f154126f25f15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53544bddf4d875bd0013449de2f154126f25f15b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f233db3745890d8c9bed07f44a8b078bb2a0ee9/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d0cd28165d05981eadc966224dca77b87111b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0cd28165d05981eadc966224dca77b87111b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0cd28165d05981eadc966224dca77b87111b62"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "a6fb3257cacd48c4a6c072adc95e68eb0b785d4f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f233db3745890d8c9bed07f44a8b078bb2a0ee9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f233db3745890d8c9bed07f44a8b078bb2a0ee9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "patch": "@@ -1,3 +1,8 @@\n+2018-05-25  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Check_Applicable_Policy): Deal specially with CodePeer\n+\tand GNATprove modes when applicable policy is Ignore.\n+\n 2018-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* freeze.adb (Freeze_Enumeration_Type): Do not give integer size to a"}, {"sha": "eb6a018839b1f1c452350b2cd21968119104a152", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f233db3745890d8c9bed07f44a8b078bb2a0ee9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f233db3745890d8c9bed07f44a8b078bb2a0ee9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1f233db3745890d8c9bed07f44a8b078bb2a0ee9", "patch": "@@ -28542,8 +28542,20 @@ package body Sem_Prag is\n                   when Name_Ignore\n                      | Name_Off\n                   =>\n-                     Set_Is_Ignored (N, True);\n-                     Set_Is_Checked (N, False);\n+                     --  In CodePeer mode and GNATprove mode, we need to\n+                     --  consider all assertions, unless they are\n+                     --  disabled. Force Is_Checked on ignored assertions, in\n+                     --  particular because transformations of the AST may\n+                     --  depend on assertions being checked (e.g. the\n+                     --  translation of attribute 'Loop_Entry).\n+\n+                     if CodePeer_Mode or GNATprove_Mode then\n+                        Set_Is_Checked (N, True);\n+                        Set_Is_Ignored (N, False);\n+                     else\n+                        Set_Is_Ignored (N, True);\n+                        Set_Is_Checked (N, False);\n+                     end if;\n \n                   when Name_Check\n                      | Name_On\n@@ -28573,7 +28585,8 @@ package body Sem_Prag is\n       --  If there are no specific entries that matched, then we let the\n       --  setting of assertions govern. Note that this provides the needed\n       --  compatibility with the RM for the cases of assertion, invariant,\n-      --  precondition, predicate, and postcondition.\n+      --  precondition, predicate, and postcondition. Note also that\n+      --  Assertions_Enabled is forced in CodePeer mode and GNATprove mode.\n \n       if Assertions_Enabled then\n          Set_Is_Checked (N, True);"}]}