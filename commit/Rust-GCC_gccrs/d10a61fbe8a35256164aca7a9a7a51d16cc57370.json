{"sha": "d10a61fbe8a35256164aca7a9a7a51d16cc57370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwYTYxZmJlOGEzNTI1NjE2NGFjYTdhOWE3YTUxZDE2Y2M1NzM3MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-03-04T22:33:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-03-04T22:33:41Z"}, "message": "fold-const.c (round_up_loc): Cast divisor to signed on all paths before negating it.\n\n\t* fold-const.c (round_up_loc): Cast divisor to signed on all paths\n\tbefore negating it.\n\t* stor-layout.c (finalize_record_size): Revert latest change.\n\nFrom-SVN: r221198", "tree": {"sha": "bb433524b1c9c0c35778ec90ef3d9c1bdf9ab01f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb433524b1c9c0c35778ec90ef3d9c1bdf9ab01f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d10a61fbe8a35256164aca7a9a7a51d16cc57370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10a61fbe8a35256164aca7a9a7a51d16cc57370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10a61fbe8a35256164aca7a9a7a51d16cc57370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10a61fbe8a35256164aca7a9a7a51d16cc57370/comments", "author": null, "committer": null, "parents": [{"sha": "8ed4390c3f34ece8009bc43ae592c9f3ed66dcd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed4390c3f34ece8009bc43ae592c9f3ed66dcd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed4390c3f34ece8009bc43ae592c9f3ed66dcd7"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "72760c0672333e4e55720770f3e2d1a420ad57fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d10a61fbe8a35256164aca7a9a7a51d16cc57370", "patch": "@@ -1,3 +1,9 @@\n+2015-03-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (round_up_loc): Cast divisor to signed on all paths\n+\tbefore negating it.\n+\t* stor-layout.c (finalize_record_size): Revert latest change.\n+\n 2015-03-04  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* config/rs6000/t-freebsd64: Remove 32-bit soft-float multilibs.\n@@ -25,8 +31,8 @@\n \n 2015-03-04  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n-\t* gcc/config/s390/s390.c (s390_expand_builtin): Exlude non-htm\n-\tbuiltins from checking for -mhtm option.\n+\t* config/s390/s390.c (s390_expand_builtin): Exlude non-htm builtins\n+\tfrom checking for -mhtm option.\n \n 2015-03-03  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "0834d47fa03b4fdc52e569e20cdf2495ebf1e3cc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d10a61fbe8a35256164aca7a9a7a51d16cc57370", "patch": "@@ -16019,8 +16019,8 @@ round_up_loc (location_t loc, tree value, unsigned int divisor)\n \t    return value;\n \n \t  overflow_p = TREE_OVERFLOW (value);\n-\t  val &= ~(divisor - 1);\n-\t  val += divisor;\n+\t  val += divisor - 1;\n+\t  val &= - (int) divisor;\n \t  if (val == 0)\n \t    overflow_p = true;\n \n@@ -16032,7 +16032,7 @@ round_up_loc (location_t loc, tree value, unsigned int divisor)\n \n \t  t = build_int_cst (TREE_TYPE (value), divisor - 1);\n \t  value = size_binop_loc (loc, PLUS_EXPR, value, t);\n-\t  t = build_int_cst (TREE_TYPE (value), - (HOST_WIDE_INT) divisor);\n+\t  t = build_int_cst (TREE_TYPE (value), - (int) divisor);\n \t  value = size_binop_loc (loc, BIT_AND_EXPR, value, t);\n \t}\n     }"}, {"sha": "f18f1ac5273df551c4373593d0e576dd528ea4c1", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=d10a61fbe8a35256164aca7a9a7a51d16cc57370", "patch": "@@ -1627,11 +1627,6 @@ finalize_record_size (record_layout_info rli)\n     unpadded_size_unit\n       = size_binop (PLUS_EXPR, unpadded_size_unit, size_one_node);\n \n-  if (TREE_CODE (unpadded_size_unit) == INTEGER_CST\n-      && !TREE_OVERFLOW (unpadded_size_unit)\n-      && !valid_constant_size_p (unpadded_size_unit))\n-    error (\"type %qT is too large\", rli->t);\n-\n   /* Round the size up to be a multiple of the required alignment.  */\n   TYPE_SIZE (rli->t) = round_up (unpadded_size, TYPE_ALIGN (rli->t));\n   TYPE_SIZE_UNIT (rli->t)"}, {"sha": "a16501a222d002e2306dd1674295e6834efefd8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d10a61fbe8a35256164aca7a9a7a51d16cc57370", "patch": "@@ -1,3 +1,7 @@\n+2015-03-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/entry_queues3.adb: New test.\n+\n 2015-03-04  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp (go-gc-tests): Skip nilptr test on s390*."}, {"sha": "2108163a895e97a0ae57d0040563ca525d901462", "filename": "gcc/testsuite/gnat.dg/entry_queues3.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10a61fbe8a35256164aca7a9a7a51d16cc57370/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues3.adb?ref=d10a61fbe8a35256164aca7a9a7a51d16cc57370", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do compile }\n+\n+procedure Entry_Queues3 is\n+\n+  generic\n+    type Large_Range is range <>;\n+  package Queue is\n+  end;\n+\n+  package body Queue is\n+    task T is\n+      entry E(Large_Range);\n+    end T ;\n+ \n+    task body T is\n+      begin\n+        accept E(Large_Range'First) do\n+          null;\n+        end e ; \n+      end T ;\n+  end Queue;\n+ \n+  type Large_Range is range 0 .. Long_Integer'Last;\n+\n+  package My_Queue is new Queue(Large_Range); -- { dg-warning \"warning\" }\n+\n+begin\n+  null;\n+end;"}]}