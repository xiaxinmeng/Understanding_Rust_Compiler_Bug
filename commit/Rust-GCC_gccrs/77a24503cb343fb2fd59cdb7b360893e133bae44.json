{"sha": "77a24503cb343fb2fd59cdb7b360893e133bae44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhMjQ1MDNjYjM0M2ZiMmZkNTljZGI3YjM2MDg5M2UxMzNiYWU0NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-12T22:57:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-12T22:57:03Z"}, "message": "pt.c (deduction_tsubst_fntype): Just suppress access checking.\n\n\t* pt.c (deduction_tsubst_fntype): Just suppress access checking.\n\t(instantiate_template_1): Set DECL_TI_TEMPLATE before access checking.\n\t(push_deduction_access_scope, pop_deduction_access_scope): Remove.\n\nFrom-SVN: r189443", "tree": {"sha": "8507814180585d62e7fc2fcb4c7e8f673db25d85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8507814180585d62e7fc2fcb4c7e8f673db25d85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77a24503cb343fb2fd59cdb7b360893e133bae44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a24503cb343fb2fd59cdb7b360893e133bae44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a24503cb343fb2fd59cdb7b360893e133bae44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a24503cb343fb2fd59cdb7b360893e133bae44/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d87d3076f3e9f8a1e85bdbf8304cf708d2ce370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d87d3076f3e9f8a1e85bdbf8304cf708d2ce370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d87d3076f3e9f8a1e85bdbf8304cf708d2ce370"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "299116b81fa289171fb57ec6e76c565e5489825d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77a24503cb343fb2fd59cdb7b360893e133bae44", "patch": "@@ -1,3 +1,9 @@\n+2012-07-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (deduction_tsubst_fntype): Just suppress access checking.\n+\t(instantiate_template_1): Set DECL_TI_TEMPLATE before access checking.\n+\t(push_deduction_access_scope, pop_deduction_access_scope): Remove.\n+\n 2012-07-11  Jason Merrill  <jason@redhat.com>\n \n \tDR 1402"}, {"sha": "fec88eb4a34942b5bd1293ce477ddb59a5b5071b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 38, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=77a24503cb343fb2fd59cdb7b360893e133bae44", "patch": "@@ -116,8 +116,6 @@ enum template_base_result {\n \n static void push_access_scope (tree);\n static void pop_access_scope (tree);\n-static void push_deduction_access_scope (tree);\n-static void pop_deduction_access_scope (tree);\n static bool resolve_overloaded_unification (tree, tree, tree, tree,\n \t\t\t\t\t    unification_kind_t, int,\n \t\t\t\t\t    bool);\n@@ -14263,9 +14261,10 @@ deduction_tsubst_fntype (tree fn, tree targs, tsubst_flags_t complain)\n \n   input_location = DECL_SOURCE_LOCATION (fn);\n   ++deduction_depth;\n-  push_deduction_access_scope (fn);\n+  /* We will do access checks in instantiate_template.  */\n+  push_deferring_access_checks (dk_deferred);\n   r = tsubst (fntype, targs, complain, NULL_TREE);\n-  pop_deduction_access_scope (fn);\n+  pop_deferring_access_checks ();\n   --deduction_depth;\n \n   if (excessive_deduction_depth)\n@@ -14374,6 +14373,10 @@ instantiate_template_1 (tree tmpl, tree orig_args, tsubst_flags_t complain)\n   if (fndecl == error_mark_node)\n     return error_mark_node;\n \n+  /* The DECL_TI_TEMPLATE should always be the immediate parent\n+     template, not the most general template.  */\n+  DECL_TI_TEMPLATE (fndecl) = tmpl;\n+\n   /* Now we know the specialization, compute access previously\n      deferred.  */\n   push_access_scope (fndecl);\n@@ -14387,10 +14390,6 @@ instantiate_template_1 (tree tmpl, tree orig_args, tsubst_flags_t complain)\n   pop_access_scope (fndecl);\n   pop_deferring_access_checks ();\n \n-  /* The DECL_TI_TEMPLATE should always be the immediate parent\n-     template, not the most general template.  */\n-  DECL_TI_TEMPLATE (fndecl) = tmpl;\n-\n   /* If we've just instantiated the main entry point for a function,\n      instantiate all the alternate entry points as well.  We do this\n      by cloning the instantiation of the main entry point, not by\n@@ -14413,36 +14412,6 @@ instantiate_template (tree tmpl, tree orig_args, tsubst_flags_t complain)\n   return ret;\n }\n \n-/* We're going to do deduction substitution on the type of TMPL, a function\n-   template.  In C++11 mode, push into that access scope.  In C++03 mode,\n-   disable access checking.  */\n-\n-static void\n-push_deduction_access_scope (tree tmpl)\n-{\n-  if (cxx_dialect >= cxx0x)\n-    {\n-      int ptd = processing_template_decl;\n-      push_access_scope (DECL_TEMPLATE_RESULT (tmpl));\n-      /* Preserve processing_template_decl across push_to_top_level.  */\n-      if (ptd && !processing_template_decl)\n-\t++processing_template_decl;\n-    }\n-  else\n-    push_deferring_access_checks (dk_no_check);\n-}\n-\n-/* And pop back out.  */\n-\n-static void\n-pop_deduction_access_scope (tree tmpl)\n-{\n-  if (cxx_dialect >= cxx0x)\n-    pop_access_scope (DECL_TEMPLATE_RESULT (tmpl));\n-  else\n-    pop_deferring_access_checks ();\n-}\n-\n /* PARM is a template parameter pack for FN.  Returns true iff\n    PARM is used in a deducible way in the argument list of FN.  */\n "}, {"sha": "c794248ef27a5b64ad25cabffa7678b3dd489405", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77a24503cb343fb2fd59cdb7b360893e133bae44", "patch": "@@ -1,3 +1,7 @@\n+2012-07-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/template/sfinae6_neg.C: Adjust.\n+\n 2012-07-12  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/c_f_pointer_shape_tests_5.f90: New."}, {"sha": "c238222af75c388d4185bb21724c77cb697a9def", "filename": "gcc/testsuite/g++.dg/template/sfinae6_neg.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae6_neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a24503cb343fb2fd59cdb7b360893e133bae44/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae6_neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae6_neg.C?ref=77a24503cb343fb2fd59cdb7b360893e133bae44", "patch": "@@ -14,7 +14,7 @@ template<typename T> struct enable_if<false, T> { };\n template<typename F, typename T1, typename T2>\n   typename enable_if<sizeof(create_a<F>()(create_a<T1>(), create_a<T2>()), 1),\n \t\t     yes_type>::type\n-  check_is_callable2(type<F>, type<T1>, type<T2>); // { dg-error \"within this context\" \"\" { target c++11 } }\n+  check_is_callable2(type<F>, type<T1>, type<T2>);\n \n no_type check_is_callable2(...);\n "}]}