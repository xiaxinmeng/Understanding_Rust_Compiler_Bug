{"sha": "899eb12d04c95c768dad93b88c24f0edfd100886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5ZWIxMmQwNGM5NWM3NjhkYWQ5M2I4OGMyNGYwZWRmZDEwMDg4Ng==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-08-11T13:25:14Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-08-11T13:25:14Z"}, "message": "Eliminate externs within {}.\n\nFrom-SVN: r1795", "tree": {"sha": "a25187c60f26b64013176199a000af2cc455f0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25187c60f26b64013176199a000af2cc455f0a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/899eb12d04c95c768dad93b88c24f0edfd100886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899eb12d04c95c768dad93b88c24f0edfd100886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/899eb12d04c95c768dad93b88c24f0edfd100886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899eb12d04c95c768dad93b88c24f0edfd100886/comments", "author": null, "committer": null, "parents": [{"sha": "001af587150d86c4548f998fba9ff3f6ad96781b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001af587150d86c4548f998fba9ff3f6ad96781b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001af587150d86c4548f998fba9ff3f6ad96781b"}], "stats": {"total": 43, "additions": 2, "deletions": 41}, "files": [{"sha": "4aed597e6cc6f0aaa5d970d85ed8ca43b80caa28", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=899eb12d04c95c768dad93b88c24f0edfd100886", "patch": "@@ -75,23 +75,6 @@ extern tree   lookup_name ();\n extern void   pfatal_with_name ();\n extern void   warning ();\n \n-extern rtx    gen_addsi3 ();\n-extern rtx    gen_andsi3 ();\n-extern rtx    gen_beq ();\n-extern rtx    gen_bne ();\n-extern rtx    gen_cmpsi ();\n-extern rtx    gen_indirect_jump ();\n-extern rtx    gen_iorsi3 ();\n-extern rtx    gen_jump ();\n-extern rtx    gen_movhi ();\n-extern rtx    gen_movqi ();\n-extern rtx    gen_movsi ();\n-extern rtx    gen_movsi_ulw ();\n-extern rtx    gen_movsi_usw ();\n-extern rtx    gen_movstrsi_internal ();\n-extern rtx    gen_return_internal ();\n-extern rtx    gen_subsi3 ();\n-\n extern tree   current_function_decl;\n extern FILE  *asm_out_file;\n \n@@ -4561,8 +4544,8 @@ function_epilogue (file, size)\n   num_refs[2]\t     = 0;\n   mips_load_reg      = (rtx)0;\n   mips_load_reg2     = (rtx)0;\n-  number_functions_processed++;\n   current_frame_info = zero_frame_info;\n+  number_functions_processed++;\n \n   /* Restore the output file if optimizing the GP (optimizing the GP causes\n      the text to be diverted to a tempfile, so that data decls come before"}, {"sha": "822428de8061087fff6c05ac7c488ff5503741b9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=899eb12d04c95c768dad93b88c24f0edfd100886", "patch": "@@ -473,7 +473,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 22]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 23]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\"\n@@ -2288,7 +2288,6 @@ while (0)\n \t\t\t\t\t\t\t\t\t\\\n   case CONST:\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      extern rtx eliminate_constant_term ();\t\t\t\t\\\n       rtx offset = const0_rtx;\t\t\t\t\t\t\\\n       rtx symref = eliminate_constant_term (X, &offset);\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -3241,7 +3240,6 @@ rdata_section ()\t\t\t\t\t\t\t\\\n \n #define SELECT_SECTION_MODE(MODE,RTX)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  extern int mips_section_threshold;\t\t\t\t\t\\\n   if ((GET_MODE_SIZE(MODE) / BITS_PER_UNIT) <= mips_section_threshold\t\\\n       && mips_section_threshold > 0)\t\t\t\t\t\\\n     sdata_section ();\t\t\t\t\t\t\t\\\n@@ -3251,7 +3249,6 @@ rdata_section ()\t\t\t\t\t\t\t\\\n \n #define SELECT_SECTION(DECL,RELOC)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  extern int mips_section_threshold;\t\t\t\t\t\\\n   if (int_size_in_bytes (TREE_TYPE (DECL)) <= mips_section_threshold\t\\\n       && mips_section_threshold > 0)\t\t\t\t\t\\\n     sdata_section ();\t\t\t\t\t\t\t\\"}, {"sha": "a92c9d50c7793ddffb6b0b28b796ecab3f34dd53", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899eb12d04c95c768dad93b88c24f0edfd100886/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=899eb12d04c95c768dad93b88c24f0edfd100886", "patch": "@@ -1552,7 +1552,6 @@ move\\\\t%0,%z4\\\\n\\\\\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {\n-      extern rtx gen_cmpdf ();\n       emit_move_insn (reg1, immed_real_const_1 (offset, DFmode));\n       do_pending_stack_adjust ();\n \n@@ -1596,7 +1595,6 @@ move\\\\t%0,%z4\\\\n\\\\\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {\n-      extern rtx gen_cmpsf ();\n       emit_move_insn (reg1, immed_real_const_1 (offset, SFmode));\n       do_pending_stack_adjust ();\n \n@@ -1640,9 +1638,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx gen_movsi_ulw ();\n-  extern rtx gen_movsi ();\n-\n   /* Handle loads.  */\n   if (GET_CODE (operands[0]) == MEM)\n     {\n@@ -1675,7 +1670,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"*\n {\n-  extern rtx eliminate_constant_term ();\n   enum rtx_code code;\n   char *ret;\n   rtx offset;\n@@ -1726,7 +1720,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"*\n {\n-  extern rtx eliminate_constant_term ();\n   rtx offset = const0_rtx;\n   rtx addr = XEXP (operands[0], 0);\n   rtx mem_addr = eliminate_constant_term (addr, &offset);\n@@ -3058,8 +3051,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n \n@@ -3123,8 +3114,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n \n@@ -3187,8 +3176,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n \n@@ -3304,8 +3291,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n \n@@ -3369,8 +3354,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n \n@@ -3486,8 +3469,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n-  extern rtx force_reg ();\n-\n   if (branch_type != CMP_SI)\n     FAIL;\n "}]}