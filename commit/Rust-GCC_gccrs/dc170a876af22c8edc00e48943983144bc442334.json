{"sha": "dc170a876af22c8edc00e48943983144bc442334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMxNzBhODc2YWYyMmM4ZWRjMDBlNDg5NDM5ODMxNDRiYzQ0MjMzNA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-12-01T18:25:39Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-12-01T18:25:39Z"}, "message": "common.opt: Remove -fgnu-linker.\n\n\t* common.opt: Remove -fgnu-linker.\n\t* flags.h: Remove flag_gnu_linker.\n\t* opts.c: Don't handle OPT_fgnu_linker.\n\t* toplev.c: Don't initialize flag_gnu_linker.\n\tRemove gnu-linker entry from f_options.\n\t* config/dsp16xx/dsp16xx.h (OPTIMIZATION_OPTIONS):\n\tDon't reset flag_gnu_linker.\n\t* config/mips/mips.c (override_options): Likewise.\n\t* doc/invoke.texi: Remove all mention of -fgnu-linker.\n\nFrom-SVN: r74117", "tree": {"sha": "bd3f467d60cdf0b7a3dff1f88986d9d2837be3ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd3f467d60cdf0b7a3dff1f88986d9d2837be3ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc170a876af22c8edc00e48943983144bc442334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc170a876af22c8edc00e48943983144bc442334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc170a876af22c8edc00e48943983144bc442334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc170a876af22c8edc00e48943983144bc442334/comments", "author": null, "committer": null, "parents": [{"sha": "a68a270a1a2f37d3a48f863173dc3062ca993492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68a270a1a2f37d3a48f863173dc3062ca993492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68a270a1a2f37d3a48f863173dc3062ca993492"}], "stats": {"total": 77, "additions": 26, "deletions": 51}, "files": [{"sha": "d3d205c9d28d4fe40cca570eb4697f9ebfbbce75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -1,5 +1,17 @@\n+2003-12-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* common.opt: Remove -fgnu-linker.\n+\t* flags.h: Remove flag_gnu_linker.\n+\t* opts.c: Don't handle OPT_fgnu_linker.\n+\t* toplev.c: Don't initialize flag_gnu_linker.\n+\tRemove gnu-linker entry from f_options.\n+\t* config/dsp16xx/dsp16xx.h (OPTIMIZATION_OPTIONS):\n+\tDon't reset flag_gnu_linker.\n+\t* config/mips/mips.c (override_options): Likewise.\n+\t* doc/invoke.texi: Remove all mention of -fgnu-linker.\n+\n 2003-12-01  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* ggc-zone.c (ggc_pch_write_object): Calculate object size using\n \tggc_get_size (which accounts for large objects properly).\n \n@@ -76,14 +88,14 @@\n \n 2003-11-30  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* config/s390/s390.md (\"tmdi_reg\", \"tmsi_reg\", \"*movdi_64\", \"*movdi_31\", \n+\t* config/s390/s390.md (\"tmdi_reg\", \"tmsi_reg\", \"*movdi_64\", \"*movdi_31\",\n \t\"iordi3\"): Insns now use multiple letter constraints.\n \t(\"*movdi_lhi\", \"*movdi_lli\", \"*movdi_lay\"): Insns deleted. They are now\n \tcovered by \"*movdi_64\".\n \t(\"*movsi_lhi\", \"*movsi_lli\", \"*movsi_lay\"): Insns deleted. They are now\n \tcovered by \"*movsi_zarch\" and \"*movsi_esa\".\n \t(\"*movsi_zarch\", \"*movsi_!zarch\"): New insns.\n-\t(\"*llgt_sisi_split\", \"*llgt_didi_split\"): Insns deleted. Now covered \n+\t(\"*llgt_sisi_split\", \"*llgt_didi_split\"): Insns deleted. Now covered\n \tby \"*andsi3_zarch\" and \"anddi3\".\n \t(\"*anddi3_ni\"): Insn merged with \"anddi3\".\n \t(\"*andsi3_ni\"): Insn merged with \"*andsi3_zarch\".\n@@ -92,20 +104,20 @@\n \t(\"*iorsi3_oi\"): Insn merged with \"*iorsi3_zarch\".\n \t(\"*iorsi3_zarch\", \"*iorsi3_esa\"): New insns.\n \n-\t* config/s390/s390.c (s390_single_qi, s390_single_hi): Functions \n+\t* config/s390/s390.c (s390_single_qi, s390_single_hi): Functions\n \tmerged to s390_single_part.\n \t(s390_single_part): New function.\n \tNOTE: Semantics have changed a bit. Now the value of the part must\n \tbe different from the others to get a non-negative return value.\n-\t(s390_extract_qi, s390_extract_hi): Functions merged to \n+\t(s390_extract_qi, s390_extract_hi): Functions merged to\n \ts390_extract_part.\n \t(s390_extract_part, s390_extra_constraint_str,\n-\ts390_const_ok_for_constraint_p): New functions. The L constraint got a \n-\tnew meaning and the N constraint was added as a multiple letter \n+\ts390_const_ok_for_constraint_p): New functions. The L constraint got a\n+\tnew meaning and the N constraint was added as a multiple letter\n \tconstraint.\n \t(s390_extra_constraint): Function deleted.\n \t(print_operand): New output modifier 'i' and 'j' added.\n-\tAll uses of CONST_OK_FOR_LETTER_P were replaced by \n+\tAll uses of CONST_OK_FOR_LETTER_P were replaced by\n \tCONST_OK_FOR_CONSTRAINT_P.\n \n \t* config/s390/s390-protos.h: Function prototypes adapted.\n@@ -181,7 +193,7 @@\n \n \t* config/gnu.h (HURD_TARGET_OS_CPP_BUILTINS): New.\n \t* config/linux.h (LINUX_TARGET_OS_CPP_BUILTINS): New.\n-\t\n+\n \t* config/alpha/gnu.h, config/alpha/linux.h,\n \tconfig/arm/linux-elf.h, config/cris/cris.h, config/cris/linux.h,\n \tconfig/i370/linux.h, config/i386/gnu.h, config/i386/i386.h,\n@@ -248,7 +260,7 @@\n 2003-11-27  Randolph Chung  <tausq@debian.org>\n \t    John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.c (hppa_profile_hook): Split gen_call_profiler into separate \n+\t* pa.c (hppa_profile_hook): Split gen_call_profiler into separate\n \tinsns.  Use the regular call expander for the call to the profiler.\n \t* pa.md (call_profiler): Delete.\n \t(load_offset_label_address): New insn to load the address of the\n@@ -338,7 +350,7 @@\n \t* configure: Regenerate.\n \n 2003-11-26  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Olivier Hainque  <hainque@act-europe.fr>\n+\t    Olivier Hainque  <hainque@act-europe.fr>\n \n \tPR target/6466\n \t* config/sparc/sparc-protos.h (compute_frame_size): New prototype.\n@@ -405,7 +417,7 @@\n \t(start_function): Use.\n \t(c_push_function_context): Ditto.\n \t(c-pop_function_context): Ditto.\n-        (language_function): Move...\n+\t(language_function): Move...\n \t* c-tree.h: ... here. Add x_in_iteration_stmt, and\n \tx_in_case_stmt.\n \t* c-parse.in (do_stmt_start, select_or_iter_stmt, stmt): Use\n@@ -995,7 +1007,7 @@\n \t(umodsi3): Likewise.\n \n 2003-11-13  Mark Mitchell  <mark@codesourcery.com>\n-            Kean Johnston <jkj@sco.com>\n+\t    Kean Johnston <jkj@sco.com>\n \n \tPR c/13029\n \t* toplev.c (check_global_declarations): Do not warn about unused"}, {"sha": "a3dc84e75edf6136effe0a9c1d2abc9ccbfcca9e", "filename": "gcc/common.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -366,10 +366,6 @@ fgcse-las\n Common\n Perform redundant load after store elimination in global common subexpression elimination\n \n-fgnu-linker\n-Common\n-Output GNU ld formatted global initializers\n-\n fguess-branch-probability\n Common\n Enable guessing of branch probabilities"}, {"sha": "cea995ca1044b53be6dc058b1558b6041591c298", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -293,8 +293,6 @@ extern int target_flags;\n \n #define OPTIMIZATION_OPTIONS(LEVEL,SIZE)              \\\n {                                                     \\\n-    flag_gnu_linker             = FALSE;              \\\n-                                                      \\\n     if (LEVEL >= 2)                                   \\\n     {                                                 \\\n         /* The dsp16xx family has so few registers    \\"}, {"sha": "2b362a45d9746566c4ea1e578ef785a085df1d73", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -4622,8 +4622,6 @@ override_options (void)\n      defaults for the N32/N64 ABIs.  */\n   if (TARGET_IRIX && !TARGET_SGI_O32_AS)\n     {\n-      flag_gnu_linker = 1;\n-\n       targetm.have_ctors_dtors = true;\n       targetm.asm_out.constructor = default_named_section_asm_out_constructor;\n       targetm.asm_out.destructor = default_named_section_asm_out_destructor;"}, {"sha": "a195d08caf0b5be7ea0bf1159d237c5f245f6d3f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -675,7 +675,7 @@ in the following sections.\n -fnon-call-exceptions  -funwind-tables @gol\n -fasynchronous-unwind-tables @gol\n -finhibit-size-directive  -finstrument-functions @gol\n--fno-common  -fno-ident  -fno-gnu-linker @gol\n+-fno-common  -fno-ident @gol\n -fpcc-struct-return  -fpic  -fPIC -fpie -fPIE @gol\n -freg-struct-return  -fshared-data  -fshort-enums @gol\n -fshort-double  -fshort-wchar @gol\n@@ -11285,17 +11285,6 @@ program will work on other systems which always work this way.\n @opindex fno-ident\n Ignore the @samp{#ident} directive.\n \n-@item -fno-gnu-linker\n-@opindex fno-gnu-linker\n-Do not output global initializations (such as C++ constructors and\n-destructors) in the form used by the GNU linker (on systems where the GNU\n-linker is the standard method of handling them).  Use this option when\n-you want to use a non-GNU linker, which also requires using the\n-@command{collect2} program to make sure the system linker includes\n-constructors and destructors.  (@command{collect2} is included in the GCC\n-distribution.)  For systems which @emph{must} use @command{collect2}, the\n-compiler driver @command{gcc} is configured to do this automatically.\n-\n @item -finhibit-size-directive\n @opindex finhibit-size-directive\n Don't output a @code{.size} assembler directive, or anything else that"}, {"sha": "f172ec34a8bb12bc453eaa8b0dddd9a5a61ce65e", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -549,10 +549,6 @@ extern int flag_dump_rtl_in_asm;\n    in generated assembly code.  */\n extern int flag_leading_underscore;\n \n-/* -fgnu-linker specifies use of the GNU linker for initializations.\n-   -fno-gnu-linker says that collect will be used.  */\n-extern int flag_gnu_linker;\n-\n /* Tag all structures with __attribute__(packed) */\n extern int flag_pack_struct;\n "}, {"sha": "41cecc1cda6f71c2ac9486bde0716eded4d08dc0", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -1023,10 +1023,6 @@ common_handle_option (size_t scode, const char *arg,\n       flag_gcse_las = value;\n       break;\n \n-    case OPT_fgnu_linker:\n-      flag_gnu_linker = value;\n-      break;\n-\n     case OPT_fguess_branch_probability:\n       flag_guess_branch_prob = value;\n       break;"}, {"sha": "f31b76ee85c7e1089ce1fb7b0f5f474dee59cc35", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc170a876af22c8edc00e48943983144bc442334/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc170a876af22c8edc00e48943983144bc442334/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=dc170a876af22c8edc00e48943983144bc442334", "patch": "@@ -882,15 +882,6 @@ int flag_debug_asm = 0;\n \n int flag_dump_rtl_in_asm = 0;\n \n-/* -fgnu-linker specifies use of the GNU linker for initializations.\n-   (Or, more generally, a linker that handles initializations.)\n-   -fno-gnu-linker says that collect2 will be used.  */\n-#ifdef USE_COLLECT2\n-int flag_gnu_linker = 0;\n-#else\n-int flag_gnu_linker = 1;\n-#endif\n-\n /* Nonzero means put zero initialized data in the bss section.  */\n int flag_zero_initialized_in_bss = 1;\n \n@@ -1112,7 +1103,6 @@ static const lang_independent_options f_options[] =\n   {\"function-sections\", &flag_function_sections, 1 },\n   {\"data-sections\", &flag_data_sections, 1 },\n   {\"verbose-asm\", &flag_verbose_asm, 1 },\n-  {\"gnu-linker\", &flag_gnu_linker, 1 },\n   {\"regmove\", &flag_regmove, 1 },\n   {\"optimize-register-move\", &flag_regmove, 1 },\n   {\"pack-struct\", &flag_pack_struct, 1 },"}]}