{"sha": "35a1c212918d3b4c0f0bb75a652038152e8396d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhMWMyMTI5MThkM2I0YzBmMGJiNzVhNjUyMDM4MTUyZTgzOTZkMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T09:53:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T09:53:21Z"}, "message": "[multiple changes]\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* sinfo.adb, sinfo.ads, sem_prag.adb, sem_ch12.adb (Pragma_Enabled):\n\tThis flag of N_Pragma nodes is not used, remove it as well as all of\n\tthe associated circuitry.\n\n2011-08-04  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_DT): Switch -gnatdQ disables the generation of the\n\truntime check on duplicated externa tags\n\t* debug.adb Document switch -gnatdQ.\n\n2011-08-04  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-fihema.ads: Minor typo fix.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch10.adb: Minor comment update.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb: Update the node field usage to reflect the renaming of\n\tReturn_Flag to Return_ Flag_Or_Transient_Decl.\n\t(Return_Flag): Renamed to Return_Flag_Or_Transient_Decl.\n\t(Set_Return_Flag): Renamed to Set_Return_Flag_Or_Transient_Decl.\n\t(Write_Field15_Name): Change Return_Flag to\n\tReturn_Flag_Or_Transient_Decl.\n\t* einfo.ads: Rename node field Return_Flag to\n\tReturn_Flag_Or_Transient_Decl. Update the associated comment and all\n\toccurrences in entities.\n\t(Return_Flag): Renamed to Return_Flag_Or_Transient_Decl. Update\n\tassociated Inline pragma.\n\t(Set_Return_Flag): Renamed to Set_Return_Flag_Or_Transient_Decl. Update\n\tassociated Inline pragma.\n\t* exp_ch4.ads, exp_ch4.adb (Expand_N_Expression_With_Actions): New\n\troutine.\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Update the calls to\n\tReturn_Flag and Set_Return_Flag.\n\t* exp_ch7.adb (Process_Declarations): Add code to recognize hook\n\tobjects generated for controlled transients declared inside an\n\tException_With_Actions. Update the calls to Return_Flag.\n\t(Process_Object_Declaration): Add code to add a null guard for hook\n\tobjects generated for controlled transients declared inside an\n\tException_With_Actions. Update related comment.\n\t* exp_util.adb (Has_Controlled_Objects): Add code to recognize hook\n\tobjects generated for controlled transients declared inside an\n\tException_With_Actions. Update the calls to Return_Flag.\n\t* expander.adb (Expand): Add new case for N_Expression_With_Actions.\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb:(Wrong_Type): Improve error message on a one-element\n\tpositional aggregate.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* par_sco.adb (Process_Decisions.Output_Header): Check and record pragma\n\tSLOC only for pragmas.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* projects.texi: Minor typo fix.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb (Check_File): Minor change to traces, to help debugging\n\ton case-sensitive file systems.\n\nFrom-SVN: r177349", "tree": {"sha": "0e1fc38a262529e634b87391c29183291953f529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e1fc38a262529e634b87391c29183291953f529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35a1c212918d3b4c0f0bb75a652038152e8396d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a1c212918d3b4c0f0bb75a652038152e8396d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a1c212918d3b4c0f0bb75a652038152e8396d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a1c212918d3b4c0f0bb75a652038152e8396d1/comments", "author": null, "committer": null, "parents": [{"sha": "5a10ae5520a2421556283359518ab0fba48114cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a10ae5520a2421556283359518ab0fba48114cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a10ae5520a2421556283359518ab0fba48114cc"}], "stats": {"total": 447, "additions": 346, "deletions": 101}, "files": [{"sha": "b90a4acf39030f6ec8ca6643d1aa806f496d68ed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -1,3 +1,72 @@\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sinfo.adb, sinfo.ads, sem_prag.adb, sem_ch12.adb (Pragma_Enabled):\n+\tThis flag of N_Pragma nodes is not used, remove it as well as all of\n+\tthe associated circuitry.\n+\n+2011-08-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT): Switch -gnatdQ disables the generation of the\n+\truntime check on duplicated externa tags\n+\t* debug.adb Document switch -gnatdQ.\n+\n+2011-08-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-fihema.ads: Minor typo fix.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch10.adb: Minor comment update.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Update the node field usage to reflect the renaming of\n+\tReturn_Flag to Return_ Flag_Or_Transient_Decl.\n+\t(Return_Flag): Renamed to Return_Flag_Or_Transient_Decl.\n+\t(Set_Return_Flag): Renamed to Set_Return_Flag_Or_Transient_Decl.\n+\t(Write_Field15_Name): Change Return_Flag to\n+\tReturn_Flag_Or_Transient_Decl.\n+\t* einfo.ads: Rename node field Return_Flag to\n+\tReturn_Flag_Or_Transient_Decl. Update the associated comment and all\n+\toccurrences in entities.\n+\t(Return_Flag): Renamed to Return_Flag_Or_Transient_Decl. Update\n+\tassociated Inline pragma.\n+\t(Set_Return_Flag): Renamed to Set_Return_Flag_Or_Transient_Decl. Update\n+\tassociated Inline pragma.\n+\t* exp_ch4.ads, exp_ch4.adb (Expand_N_Expression_With_Actions): New\n+\troutine.\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Update the calls to\n+\tReturn_Flag and Set_Return_Flag.\n+\t* exp_ch7.adb (Process_Declarations): Add code to recognize hook\n+\tobjects generated for controlled transients declared inside an\n+\tException_With_Actions. Update the calls to Return_Flag.\n+\t(Process_Object_Declaration): Add code to add a null guard for hook\n+\tobjects generated for controlled transients declared inside an\n+\tException_With_Actions. Update related comment.\n+\t* exp_util.adb (Has_Controlled_Objects): Add code to recognize hook\n+\tobjects generated for controlled transients declared inside an\n+\tException_With_Actions. Update the calls to Return_Flag.\n+\t* expander.adb (Expand): Add new case for N_Expression_With_Actions.\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb:(Wrong_Type): Improve error message on a one-element\n+\tpositional aggregate.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* par_sco.adb (Process_Decisions.Output_Header): Check and record pragma\n+\tSLOC only for pragmas.\n+\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* projects.texi: Minor typo fix.\n+\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_File): Minor change to traces, to help debugging\n+\ton case-sensitive file systems.\n+\n 2011-08-04  Thomas Quinot  <quinot@adacore.com>\n \n \t* put_scos.adb (Put_SCOs): Do not emit decision SCO for an X decision"}, {"sha": "df0afa206394cdd573a5f274d3c49613f7a70b81", "filename": "gcc/ada/a-fihema.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fa-fihema.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fa-fihema.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-fihema.ads?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -133,7 +133,7 @@ private\n \n       Finalize_Address : Finalize_Address_Ptr;\n       --  A reference to a routine which finalizes an object denoted by its\n-      --  address. The collection must be homogenious since the same routine\n+      --  address. The collection must be homogeneous since the same routine\n       --  will be invoked for every allocated object when the pool is\n       --  finalized.\n "}, {"sha": "35d1cedaf3176902df7f92f8fbe2b429a5a0c44e", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -80,7 +80,7 @@ package body Debug is\n    --  dN   No file name information in exception messages\n    --  dO   Output immediate error messages\n    --  dP   Do not check for controlled objects in preelaborable packages\n-   --  dQ\n+   --  dQ   Do not generate runtime check for duplicated external tag\n    --  dR   Bypass check for correct version of s-rpc\n    --  dS   Never convert numbers to machine numbers in Sem_Eval\n    --  dT   Convert to machine numbers only for constant declarations\n@@ -428,6 +428,12 @@ package body Debug is\n    --       in preelaborable packages, but this restriction is a huge pain,\n    --       especially in the predefined library units.\n \n+   --  dQ   Eliminate check for duplicate external tags. This check was added\n+   --       for GNAT 6.4.1, and causes some backward compatibility problems.\n+   --       It is never legitimate to have duplicate external tags, so the\n+   --       check is certainly valid, but this debug switch can be useful for\n+   --       enabling previous behavior of ignoring this problem.\n+\n    --  dR   Bypass the check for a proper version of s-rpc being present\n    --       to use the -gnatz? switch. This allows debugging of the use\n    --       of stubs generation without needing to have GLADE (or some"}, {"sha": "f0f0904b5e73dd9132135bf18ec93c8378bea34d", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -123,7 +123,7 @@ package body Einfo is\n    --    Extra_Formal                    Node15\n    --    Lit_Indexes                     Node15\n    --    Related_Instance                Node15\n-   --    Return_Flag                     Node15\n+   --    Return_Flag_Or_Transient_Decl   Node15\n    --    Scale_Value                     Uint15\n    --    Storage_Size_Variable           Node15\n    --    String_Literal_Low_Bound        Node15\n@@ -2559,11 +2559,11 @@ package body Einfo is\n       return Flag213 (Id);\n    end Requires_Overriding;\n \n-   function Return_Flag (Id : E) return N is\n+   function Return_Flag_Or_Transient_Decl (Id : E) return N is\n    begin\n       pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n       return Node15 (Id);\n-   end Return_Flag;\n+   end Return_Flag_Or_Transient_Decl;\n \n    function Return_Present (Id : E) return B is\n    begin\n@@ -5101,11 +5101,11 @@ package body Einfo is\n       Set_Flag213 (Id, V);\n    end Set_Requires_Overriding;\n \n-   procedure Set_Return_Flag (Id : E; V : E) is\n+   procedure Set_Return_Flag_Or_Transient_Decl (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n       Set_Node15 (Id, V);\n-   end Set_Return_Flag;\n+   end Set_Return_Flag_Or_Transient_Decl;\n \n    procedure Set_Return_Present (Id : E; V : B := True) is\n    begin\n@@ -8130,7 +8130,7 @@ package body Einfo is\n \n          when E_Constant                                   |\n               E_Variable                                   =>\n-            Write_Str (\"Return_Flag\");\n+            Write_Str (\"Return_Flag_Or_Transient_Decl\");\n \n          when Decimal_Fixed_Point_Kind                     =>\n             Write_Str (\"Scale_Value\");"}, {"sha": "23d3c3b42a8f807ff1eaa871768bf6ca25bb6a7c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -3494,11 +3494,14 @@ package Einfo is\n --       is True only for implicitly declare subprograms; it is not set on the\n --       parent type's subprogram. See also Is_Abstract_Subprogram.\n \n---    Return_Flag (Node15)\n+--    Return_Flag_Or_Transient_Decl (Node15)\n --       Applies to variables and constants. Set for objects which act as the\n --       return value of an extended return statement. The node contains the\n --       entity of a locally declared flag which controls the finalization of\n---       the return object should the function fail.\n+--       the return object should the function fail. Also set for access-to-\n+--       controlled objects used to provide a hook to controlled transients\n+--       declared inside an Expression_With_Actions. The node contains the\n+--       object declaration of the controlled transient.\n \n --    Return_Present (Flag54)\n --       Present in function and generic function entities. Set if the\n@@ -5064,7 +5067,7 @@ package Einfo is\n    --    Full_View                           (Node11)\n    --    Esize                               (Uint12)\n    --    Alignment                           (Uint14)\n-   --    Return_Flag                         (Node15)   (constants only)\n+   --    Return_Flag_Or_Transient_Decl       (Node15)   (constants only)\n    --    Actual_Subtype                      (Node17)\n    --    Renamed_Object                      (Node18)\n    --    Size_Check_Code                     (Node19)   (constants only)\n@@ -5710,7 +5713,7 @@ package Einfo is\n    --    Esize                               (Uint12)\n    --    Extra_Accessibility                 (Node13)\n    --    Alignment                           (Uint14)\n-   --    Return_Flag                         (Node15)   (transient object only)\n+   --    Return_Flag_Or_Transient_Decl       (Node15)   (transient object only)\n    --    Unset_Reference                     (Node16)\n    --    Actual_Subtype                      (Node17)\n    --    Renamed_Object                      (Node18)\n@@ -6328,7 +6331,7 @@ package Einfo is\n    function Renamed_Object                      (Id : E) return N;\n    function Renaming_Map                        (Id : E) return U;\n    function Requires_Overriding                 (Id : E) return B;\n-   function Return_Flag                         (Id : E) return E;\n+   function Return_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Return_Present                      (Id : E) return B;\n    function Return_Applies_To                   (Id : E) return N;\n    function Returns_By_Ref                      (Id : E) return B;\n@@ -6924,7 +6927,7 @@ package Einfo is\n    procedure Set_Renamed_Object                  (Id : E; V : N);\n    procedure Set_Renaming_Map                    (Id : E; V : U);\n    procedure Set_Requires_Overriding             (Id : E; V : B := True);\n-   procedure Set_Return_Flag                     (Id : E; V : E);\n+   procedure Set_Return_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Return_Present                  (Id : E; V : B := True);\n    procedure Set_Return_Applies_To               (Id : E; V : N);\n    procedure Set_Returns_By_Ref                  (Id : E; V : B := True);\n@@ -7663,7 +7666,7 @@ package Einfo is\n    pragma Inline (Renamed_Object);\n    pragma Inline (Renaming_Map);\n    pragma Inline (Requires_Overriding);\n-   pragma Inline (Return_Flag);\n+   pragma Inline (Return_Flag_Or_Transient_Decl);\n    pragma Inline (Return_Present);\n    pragma Inline (Return_Applies_To);\n    pragma Inline (Returns_By_Ref);\n@@ -8063,7 +8066,7 @@ package Einfo is\n    pragma Inline (Set_Renamed_Object);\n    pragma Inline (Set_Renaming_Map);\n    pragma Inline (Set_Requires_Overriding);\n-   pragma Inline (Set_Return_Flag);\n+   pragma Inline (Set_Return_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Return_Present);\n    pragma Inline (Set_Return_Applies_To);\n    pragma Inline (Set_Returns_By_Ref);"}, {"sha": "afe0c06111dd4ae822adaac988f925346f36cad4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -4302,6 +4302,126 @@ package body Exp_Ch4 is\n       Insert_Dereference_Action (Prefix (N));\n    end Expand_N_Explicit_Dereference;\n \n+   --------------------------------------\n+   -- Expand_N_Expression_With_Actions --\n+   --------------------------------------\n+\n+   procedure Expand_N_Expression_With_Actions (N : Node_Id) is\n+\n+      procedure Process_Transient_Object (Decl : Node_Id);\n+      --  Given the declaration of a controlled transient declared inside the\n+      --  Actions list of an Expression_With_Actions, generate all necessary\n+      --  types and hooks in order to properly finalize the transient. This\n+      --  mechanism works in conjunction with Build_Finalizer.\n+\n+      ------------------------------\n+      -- Process_Transient_Object --\n+      ------------------------------\n+\n+      procedure Process_Transient_Object (Decl : Node_Id) is\n+         Ins_Nod   : constant Node_Id    := Parent (N);\n+         --  To avoid the insertion of generated code in the list of Actions,\n+         --  Insert_Action must look at the parent field of the EWA.\n+\n+         Loc       : constant Source_Ptr := Sloc (Decl);\n+         Obj_Id    : constant Entity_Id  := Defining_Identifier (Decl);\n+         Obj_Typ   : constant Entity_Id  := Etype (Obj_Id);\n+         Desig_Typ : Entity_Id;\n+         Expr      : Node_Id;\n+         Ptr_Decl  : Node_Id;\n+         Ptr_Id    : Entity_Id;\n+         Temp_Decl : Node_Id;\n+         Temp_Id   : Node_Id;\n+\n+      begin\n+         --  Step 1: Create the access type which provides a reference to\n+         --  the transient object.\n+\n+         if Is_Access_Type (Obj_Typ) then\n+            Desig_Typ := Directly_Designated_Type (Obj_Typ);\n+         else\n+            Desig_Typ := Obj_Typ;\n+         end if;\n+\n+         --  Generate:\n+         --    Ann : access [all] <Desig_Typ>;\n+\n+         Ptr_Id := Make_Temporary (Loc, 'A');\n+\n+         Ptr_Decl :=\n+           Make_Full_Type_Declaration (Loc,\n+             Defining_Identifier => Ptr_Id,\n+               Type_Definition =>\n+                 Make_Access_To_Object_Definition (Loc,\n+                   All_Present =>\n+                     Ekind (Obj_Typ) = E_General_Access_Type,\n+                   Subtype_Indication =>\n+                     New_Reference_To (Desig_Typ, Loc)));\n+\n+         Insert_Action (Ins_Nod, Ptr_Decl);\n+         Analyze (Ptr_Decl);\n+\n+         --  Step 2: Create a temporary which acts as a hook to the transient\n+         --  object. Generate:\n+\n+         --    Temp : Ptr_Id := null;\n+\n+         Temp_Id := Make_Temporary (Loc, 'T');\n+\n+         Temp_Decl :=\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Temp_Id,\n+             Object_Definition   => New_Reference_To (Ptr_Id, Loc));\n+\n+         Insert_Action (Ins_Nod, Temp_Decl);\n+         Analyze (Temp_Decl);\n+\n+         --  Mark this temporary as created for the purposes of \"exporting\" the\n+         --  transient declaration out of the Actions list. This signals the\n+         --  machinery in Build_Finalizer to recognize this special case.\n+\n+         Set_Return_Flag_Or_Transient_Decl (Temp_Id, Decl);\n+\n+         --  Step 3: \"Hook\" the transient object to the temporary\n+\n+         if Is_Access_Type (Obj_Typ) then\n+            Expr := Convert_To (Ptr_Id, New_Reference_To (Obj_Id, Loc));\n+         else\n+            Expr :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix =>\n+                  New_Reference_To (Obj_Id, Loc),\n+                Attribute_Name => Name_Unrestricted_Access);\n+         end if;\n+\n+         --  Generate:\n+         --    Temp := Ptr_Id (Obj_Id);\n+         --      <or>\n+         --    Temp := Obj_Id'Unrestricted_Access;\n+\n+         Insert_After_And_Analyze (Decl,\n+           Make_Assignment_Statement (Loc,\n+             Name       => New_Reference_To (Temp_Id, Loc),\n+             Expression => Expr));\n+      end Process_Transient_Object;\n+\n+      Decl : Node_Id;\n+\n+   --  Start of processing for Expand_N_Expression_With_Actions\n+\n+   begin\n+      Decl := First (Actions (N));\n+      while Present (Decl) loop\n+         if Nkind (Decl) = N_Object_Declaration\n+           and then Is_Finalizable_Transient (Decl, N)\n+         then\n+            Process_Transient_Object (Decl);\n+         end if;\n+\n+         Next (Decl);\n+      end loop;\n+   end Expand_N_Expression_With_Actions;\n+\n    -----------------\n    -- Expand_N_In --\n    -----------------"}, {"sha": "17323f249be52431519c81368efc370261c2b4a2", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,6 +34,7 @@ package Exp_Ch4 is\n    procedure Expand_N_Case_Expression             (N : Node_Id);\n    procedure Expand_N_Conditional_Expression      (N : Node_Id);\n    procedure Expand_N_Explicit_Dereference        (N : Node_Id);\n+   procedure Expand_N_Expression_With_Actions     (N : Node_Id);\n    procedure Expand_N_In                          (N : Node_Id);\n    procedure Expand_N_Indexed_Component           (N : Node_Id);\n    procedure Expand_N_Not_In                      (N : Node_Id);"}, {"sha": "9fda91c79cc5bfcf2618ed54dad82899454ad0a5", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -4649,7 +4649,7 @@ package body Exp_Ch6 is\n             --  Create a flag to track the function state\n \n             Flag_Id := Make_Temporary (Loc, 'F');\n-            Set_Return_Flag (Ret_Obj_Id, Flag_Id);\n+            Set_Return_Flag_Or_Transient_Decl (Ret_Obj_Id, Flag_Id);\n \n             --  Insert the flag at the beginning of the function declarations,\n             --  generate:\n@@ -4713,8 +4713,8 @@ package body Exp_Ch6 is\n            and then Needs_Finalization (Etype (Ret_Obj_Id))\n          then\n             declare\n-               Flag_Id : constant Entity_Id := Return_Flag (Ret_Obj_Id);\n-\n+               Flag_Id : constant Entity_Id :=\n+                           Return_Flag_Or_Transient_Decl (Ret_Obj_Id);\n             begin\n                --  Generate:\n                --    Fnn := True;"}, {"sha": "54436913fb48f2de74eaebbbae939d0d22dc6bff", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 70, "deletions": 17, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -1785,6 +1785,15 @@ package body Exp_Ch7 is\n                then\n                   Processing_Actions (Has_No_Init => True);\n \n+               elsif Is_Access_Type (Obj_Typ)\n+                 and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+                 and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+                                   N_Object_Declaration\n+                 and then Is_Finalizable_Transient\n+                            (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+               then\n+                  Processing_Actions (Has_No_Init => True);\n+\n                --  Simple protected objects which use type System.Tasking.\n                --  Protected_Objects.Protection to manage their locks should\n                --  be treated as controlled since they require manual cleanup.\n@@ -1850,7 +1859,7 @@ package body Exp_Ch7 is\n \n                elsif Needs_Finalization (Obj_Typ)\n                  and then Is_Return_Object (Obj_Id)\n-                 and then Present (Return_Flag (Obj_Id))\n+                 and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n                then\n                   Processing_Actions (Has_No_Init => True);\n                end if;\n@@ -2517,25 +2526,69 @@ package body Exp_Ch7 is\n                end;\n             end if;\n \n-            --  Return objects use a flag to aid their potential finalization\n-            --  then the enclosing function fails to return properly. Generate:\n-            --\n-            --    if not Flag then\n-            --       <object finalization statements>\n-            --    end if;\n-\n             if Ekind_In (Obj_Id, E_Constant, E_Variable)\n-              and then Is_Return_Object (Obj_Id)\n-              and then Present (Return_Flag (Obj_Id))\n+              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n             then\n-               Fin_Stmts := New_List (\n-                 Make_If_Statement (Loc,\n-                   Condition     =>\n-                     Make_Op_Not (Loc,\n-                       Right_Opnd =>\n-                         New_Reference_To (Return_Flag (Obj_Id), Loc)),\n+               --  Return objects use a flag to aid their potential\n+               --  finalization when the enclosing function fails to return\n+               --  properly. Generate:\n+               --\n+               --    if not Flag then\n+               --       <object finalization statements>\n+               --    end if;\n+\n+               if Is_Return_Object (Obj_Id) then\n+                  Fin_Stmts := New_List (\n+                    Make_If_Statement (Loc,\n+                      Condition     =>\n+                        Make_Op_Not (Loc,\n+                          Right_Opnd =>\n+                            New_Reference_To\n+                              (Return_Flag_Or_Transient_Decl (Obj_Id), Loc)),\n+\n+                    Then_Statements => Fin_Stmts));\n+\n+               --  Temporaries created for the purpose of \"exporting\" a\n+               --  controlled transient out of an Expression_With_Actions (EWA)\n+               --  need guards. The following illustrates the usage of such\n+               --  temporaries.\n+\n+               --    Access_Typ : access [all] Obj_Typ;\n+               --    Temp       : Access_Typ := null;\n+               --    <Counter>  := ...;\n+\n+               --    do\n+               --       Ctrl_Trans : [access [all]] Obj_Typ := ...;\n+               --       Temp := Access_Typ (Ctrl_Trans);  --  when a pointer\n+               --         <or>\n+               --       Temp := Ctrl_Trans'Unchecked_Access;\n+               --    in ... end;\n+\n+               --  The finalization machinery does not process EWA nodes as\n+               --  this may lead to premature finalization of expressions. Note\n+               --  that Temp is marked as being properly initialized regardless\n+               --  of whether the initialization of Ctrl_Trans succeeded. Since\n+               --  a failed initialization may leave Temp with a value of null,\n+               --  add a guard to handle this case:\n+\n+               --    if Obj /= null then\n+               --       <object finalization statements>\n+               --    end if;\n \n-                 Then_Statements => Fin_Stmts));\n+               else\n+                  pragma Assert\n+                    (Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+                       N_Object_Declaration);\n+\n+                  Fin_Stmts := New_List (\n+                    Make_If_Statement (Loc,\n+                      Condition       =>\n+                        Make_Op_Ne (Loc,\n+                          Left_Opnd  => New_Reference_To (Obj_Id, Loc),\n+                          Right_Opnd => Make_Null (Loc)),\n+\n+                      Then_Statements => Fin_Stmts));\n+               end if;\n             end if;\n          end if;\n "}, {"sha": "e3304a41d16db8ae7dede951c51fbf933ac2edf4", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -6189,6 +6189,7 @@ package body Exp_Disp is\n       if not No_Run_Time_Mode\n         and then Ada_Version >= Ada_2005\n         and then RTE_Available (RE_Check_TSD)\n+        and then not Debug_Flag_QQ\n       then\n          Append_To (Elab_Code,\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "2fd4e446244ad07337aa7e85073a15dd09c11796", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -2696,6 +2696,15 @@ package body Exp_Util is\n             then\n                return True;\n \n+            elsif Is_Access_Type (Obj_Typ)\n+              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+                         N_Object_Declaration\n+              and then Is_Finalizable_Transient\n+                         (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+            then\n+               return True;\n+\n             --  Simple protected objects which use type System.Tasking.\n             --  Protected_Objects.Protection to manage their locks should be\n             --  treated as controlled since they require manual cleanup.\n@@ -2732,7 +2741,7 @@ package body Exp_Util is\n \n             elsif Needs_Finalization (Obj_Typ)\n               and then Is_Return_Object (Obj_Id)\n-              and then Present (Return_Flag (Obj_Id))\n+              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n             then\n                return True;\n             end if;"}, {"sha": "95b5d978c67fc06916442af4fd03121277bf20f9", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -205,6 +205,9 @@ package body Expander is\n                when N_Explicit_Dereference =>\n                   Expand_N_Explicit_Dereference (N);\n \n+               when N_Expression_With_Actions =>\n+                  Expand_N_Expression_With_Actions (N);\n+\n                when N_Extended_Return_Statement =>\n                   Expand_N_Extended_Return_Statement (N);\n "}, {"sha": "98d66d3b19da31b0e986b0db500eb9f0113f8ffb", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -466,10 +466,12 @@ package body Par_SCO is\n \n                Loc := Sloc (Parent (Parent (N)));\n \n-               --  Record sloc of pragma (pragmas don't nest)\n+               if T = 'P' then\n+                  --  Record sloc of pragma (pragmas don't nest)\n \n-               pragma Assert (Pragma_Sloc = No_Location);\n-               Pragma_Sloc := Loc;\n+                  pragma Assert (Pragma_Sloc = No_Location);\n+                  Pragma_Sloc := Loc;\n+               end if;\n \n             when 'X' =>\n "}, {"sha": "2f531c946e4f46e5245a2abd80c610124414dc33", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -6699,7 +6699,7 @@ package body Prj.Nmsc is\n       if Current_Verbosity = High then\n          Debug_Increase_Indent\n            (\"Checking file (rank=\" & Source_Dir_Rank'Img & \")\",\n-            Name_Id (Path));\n+            Name_Id (Display_Path));\n       end if;\n \n       if Name_Loc = No_Name_Location then"}, {"sha": "1ca76d2d62d74d332aa6110ddf389548719e9b3d", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -1626,7 +1626,7 @@ Other library-related attributes can be used to change the defaults:\n \n @item @b{Library_Options}:\n @cindex @code{Library_Options}\n-  This attribute may be used to specified additional switches (last switches)\n+  This attribute may be used to specify additional switches (last switches)\n   when linking a shared library.\n \n @item @b{Leading_Library_Options}:"}, {"sha": "2288ac0a9f04f0691bb5bcc9efca5dbaa3a6705b", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -755,8 +755,9 @@ package body Sem_Ch10 is\n \n       --  If the unit is a subprogram body, then we similarly need to analyze\n       --  its spec. However, things are a little simpler in this case, because\n-      --  here, this analysis is done only for error checking and consistency\n-      --  purposes, so there's nothing else to be done.\n+      --  here, this analysis is done mostly for error checking and consistency\n+      --  purposes (but not only, e.g. there could be a contract on the spec),\n+      --  so there's nothing else to be done.\n \n       elsif Nkind (Unit_Node) = N_Subprogram_Body then\n          if Acts_As_Spec (N) then"}, {"sha": "b264d8bfd61c66126d8d3c833d7ac10d44dff4c0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -12446,26 +12446,6 @@ package body Sem_Ch12 is\n                --  All other cases than aggregates\n \n                else\n-                  --  For pragmas, we propagate the Enabled status for the\n-                  --  relevant pragmas to the original generic tree. This was\n-                  --  originally needed for SCO generation. It is no longer\n-                  --  needed there (since we use the Sloc value in calls to\n-                  --  Set_SCO_Pragma_Enabled), but it seems a generally good\n-                  --  idea to have this flag set properly.\n-\n-                  if Nkind (N) = N_Pragma\n-                    and then\n-                      (Pragma_Name (N) = Name_Assert       or else\n-                       Pragma_Name (N) = Name_Check        or else\n-                       Pragma_Name (N) = Name_Precondition or else\n-                       Pragma_Name (N) = Name_Postcondition)\n-                    and then Present (Associated_Node (Pragma_Identifier (N)))\n-                  then\n-                     Set_Pragma_Enabled (N,\n-                       Pragma_Enabled\n-                         (Parent (Associated_Node (Pragma_Identifier (N)))));\n-                  end if;\n-\n                   Save_Global_Descendant (Field1 (N));\n                   Save_Global_Descendant (Field2 (N));\n                   Save_Global_Descendant (Field3 (N));"}, {"sha": "53608c66c71016715474b360f07346db4c051b35", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -1719,7 +1719,6 @@ package body Sem_Prag is\n          --  Record if pragma is enabled\n \n          if Check_Enabled (Pname) then\n-            Set_Pragma_Enabled (N);\n             Set_SCO_Pragma_Enabled (Loc);\n          end if;\n \n@@ -6695,8 +6694,6 @@ package body Sem_Prag is\n             Check_On := Check_Enabled (Chars (Get_Pragma_Arg (Arg1)));\n \n             if Check_On then\n-               Set_Pragma_Enabled (N);\n-               Set_Pragma_Enabled (Original_Node (N));\n                Set_SCO_Pragma_Enabled (Loc);\n             end if;\n "}, {"sha": "5d22fb1b0954aa5db54c0c5ce2b3ecceb77f947d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -12478,8 +12478,12 @@ package body Sem_Util is\n    ----------------\n \n    procedure Wrong_Type (Expr : Node_Id; Expected_Type : Entity_Id) is\n-      Found_Type : constant Entity_Id := First_Subtype (Etype (Expr));\n-      Expec_Type : constant Entity_Id := First_Subtype (Expected_Type);\n+      Found_Type     : constant Entity_Id := First_Subtype (Etype (Expr));\n+      Expec_Type     : constant Entity_Id := First_Subtype (Expected_Type);\n+\n+      Matching_Field : Entity_Id;\n+      --  Entity to give a more precise suggestion on how to write a one-\n+      --  element positional aggregate.\n \n       function Has_One_Matching_Field return Boolean;\n       --  Determines if Expec_Type is a record type with a single component or\n@@ -12494,11 +12498,27 @@ package body Sem_Util is\n          E : Entity_Id;\n \n       begin\n+         Matching_Field := Empty;\n+\n          if Is_Array_Type (Expec_Type)\n            and then Number_Dimensions (Expec_Type) = 1\n            and then\n              Covers (Etype (Component_Type (Expec_Type)), Found_Type)\n          then\n+            --  Use type name if available. This excludes multidimensional\n+            --  arrays and anonymous arrays.\n+\n+            if Comes_From_Source (Expec_Type) then\n+               Matching_Field := Expec_Type;\n+\n+            --  For an assignment, use name of target.\n+\n+            elsif Nkind (Parent (Expr)) = N_Assignment_Statement\n+              and then Is_Entity_Name (Name (Parent (Expr)))\n+            then\n+               Matching_Field := Entity (Name (Parent (Expr)));\n+            end if;\n+\n             return True;\n \n          elsif not Is_Record_Type (Expec_Type) then\n@@ -12529,6 +12549,7 @@ package body Sem_Util is\n                return False;\n \n             else\n+               Matching_Field := E;\n                return True;\n             end if;\n          end if;\n@@ -12577,6 +12598,16 @@ package body Sem_Util is\n         and then Has_One_Matching_Field\n       then\n          Error_Msg_N (\"positional aggregate cannot have one component\", Expr);\n+         if Present (Matching_Field) then\n+            if Is_Array_Type (Expec_Type) then\n+               Error_Msg_NE\n+                 (\"\\write instead `&''First ='> ...`\", Expr, Matching_Field);\n+\n+            else\n+               Error_Msg_NE\n+                 (\"\\write instead `& ='> ...`\", Expr, Matching_Field);\n+            end if;\n+         end if;\n \n       --  Another special check, if we are looking for a pool-specific access\n       --  type and we found an E_Access_Attribute_Type, then we have the case"}, {"sha": "f2a11ba89235aaa339244c8a765cc4d40d6844a0", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -2406,14 +2406,6 @@ package body Sinfo is\n       return List2 (N);\n    end Pragma_Argument_Associations;\n \n-   function Pragma_Enabled\n-     (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      return Flag5 (N);\n-   end Pragma_Enabled;\n-\n    function Pragma_Identifier\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -5440,14 +5432,6 @@ package body Sinfo is\n       Set_List2_With_Parent (N, Val);\n    end Set_Pragma_Argument_Associations;\n \n-   procedure Set_Pragma_Enabled\n-     (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      Set_Flag5 (N, Val);\n-   end Set_Pragma_Enabled;\n-\n    procedure Set_Pragma_Identifier\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "d859b75088880469e7455e0cc5e307c000996bee", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a1c212918d3b4c0f0bb75a652038152e8396d1/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=35a1c212918d3b4c0f0bb75a652038152e8396d1", "patch": "@@ -1587,12 +1587,6 @@ package Sinfo is\n    --    package specification. This field is Empty for library bodies (the\n    --    parent spec in this case can be found from the corresponding spec).\n \n-   --  Pragma_Enabled (Flag5-Sem)\n-   --    Present in N_Pragma nodes. This flag is relevant only for pragmas\n-   --    Assert, Check, Precondition, and Postcondition. It is true if the\n-   --    check corresponding to the pragma type is enabled at the point where\n-   --    the pragma appears.\n-\n    --  Present_Expr (Uint3-Sem)\n    --    Present in an N_Variant node. This has a meaningful value only after\n    --    Gigi has back annotated the tree with representation information. At\n@@ -2062,7 +2056,6 @@ package Sinfo is\n       --  Pragma_Argument_Associations (List2) (set to No_List if none)\n       --  Pragma_Identifier (Node4)\n       --  Next_Rep_Item (Node5-Sem)\n-      --  Pragma_Enabled (Flag5-Sem)\n       --  From_Aspect_Specification (Flag13-Sem)\n       --  Is_Delayed_Aspect (Flag14-Sem)\n       --  Import_Interface_Present (Flag16-Sem)\n@@ -8734,9 +8727,6 @@ package Sinfo is\n    function Pragma_Argument_Associations\n      (N : Node_Id) return List_Id;    -- List2\n \n-   function Pragma_Enabled\n-     (N : Node_Id) return Boolean;    -- Flag5\n-\n    function Pragma_Identifier\n      (N : Node_Id) return Node_Id;    -- Node4\n \n@@ -9700,9 +9690,6 @@ package Sinfo is\n    procedure Set_Pragma_Argument_Associations\n      (N : Node_Id; Val : List_Id);            -- List2\n \n-   procedure Set_Pragma_Enabled\n-     (N : Node_Id; Val : Boolean := True);    -- Flag5\n-\n    procedure Set_Pragma_Identifier\n      (N : Node_Id; Val : Node_Id);            -- Node4\n \n@@ -11897,7 +11884,6 @@ package Sinfo is\n    pragma Inline (Parent_Spec);\n    pragma Inline (Position);\n    pragma Inline (Pragma_Argument_Associations);\n-   pragma Inline (Pragma_Enabled);\n    pragma Inline (Pragma_Identifier);\n    pragma Inline (Pragmas_After);\n    pragma Inline (Pragmas_Before);\n@@ -12216,7 +12202,6 @@ package Sinfo is\n    pragma Inline (Set_Parent_Spec);\n    pragma Inline (Set_Position);\n    pragma Inline (Set_Pragma_Argument_Associations);\n-   pragma Inline (Set_Pragma_Enabled);\n    pragma Inline (Set_Pragma_Identifier);\n    pragma Inline (Set_Pragmas_After);\n    pragma Inline (Set_Pragmas_Before);"}]}