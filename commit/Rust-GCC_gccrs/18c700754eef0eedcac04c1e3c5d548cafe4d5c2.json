{"sha": "18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjNzAwNzU0ZWVmMGVlZGNhYzA0YzFlM2M1ZDU0OGNhZmU0ZDVjMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-03T00:16:12Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-03T00:16:12Z"}, "message": "libgo: Generate dependencies automatically.\n\nFrom-SVN: r181955", "tree": {"sha": "fcf705f857548012e46180c9f778ead306f29e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf705f857548012e46180c9f778ead306f29e47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/comments", "author": null, "committer": null, "parents": [{"sha": "4bd97bee255d25e1e207e6a19317f353f5fa6104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd97bee255d25e1e207e6a19317f353f5fa6104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd97bee255d25e1e207e6a19317f353f5fa6104"}], "stats": {"total": 1906, "additions": 1308, "deletions": 598}, "files": [{"sha": "338f67767692ca7302088eb560f330d62d088873", "filename": "libgo/Makefile.am", "status": "modified", "additions": 630, "deletions": 298, "changes": 928, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -1801,6 +1801,12 @@ LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n+# Build the dependencies for a Go package.\n+BUILDDEPS = \\\n+\t$(MKDIR_P) $(@D); \\\n+\t$(SHELL) $(srcdir)/godeps.sh `echo $@ | sed -e 's/.dep$$//'` $^ > $@.tmp; \\\n+\tmv -f $@.tmp $@\n+\n # Build the .go files for a package, generating a .lo file.\n BUILDPACKAGE = \\\n \t$(MKDIR_P) $(@D); \\\n@@ -1873,170 +1879,219 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibgosync_DATA) \\\n \t$(toolexeclibgotesting_DATA)\n \n-asn1/asn1.lo: $(go_asn1_files) big.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox time.gox\n+@go_include@ asn1/asn1.lo.dep\n+asn1/asn1.lo.dep: $(go_asn1_files)\n+\t$(BUILDDEPS)\n+asn1/asn1.lo: $(go_asn1_files)\n \t$(BUILDPACKAGE)\n asn1/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: asn1/check\n \n-big/big.lo: $(go_big_files) encoding/binary.gox fmt.gox io.gox os.gox \\\n-\t\trand.gox strings.gox\n+@go_include@ big/big.lo.dep\n+big/big.lo.dep: $(go_big_files)\n+\t$(BUILDDEPS)\n+big/big.lo: $(go_big_files)\n \t$(BUILDPACKAGE)\n big/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: big/check\n \n-bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n+@go_include@ bufio/bufio.lo.dep\n+bufio/bufio.lo.dep: $(go_bufio_files)\n+\t$(BUILDDEPS)\n+bufio/bufio.lo: $(go_bufio_files)\n \t$(BUILDPACKAGE)\n bufio/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: bufio/check\n \n-bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n+@go_include@ bytes/bytes.lo.dep\n+bytes/bytes.lo.dep: $(go_bytes_files)\n+\t$(BUILDDEPS)\n+bytes/bytes.lo: $(go_bytes_files)\n \t$(BUILDPACKAGE)\n bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n \t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: bytes/check\n \n-cmath/cmath.lo: $(go_cmath_files) math.gox\n+@go_include@ cmath/cmath.lo.dep\n+cmath/cmath.lo.dep: $(go_cmath_files)\n+\t$(BUILDDEPS)\n+cmath/cmath.lo: $(go_cmath_files)\n \t$(BUILDPACKAGE)\n cmath/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: cmath/check\n \n-crypto/crypto.lo: $(go_crypto_files) hash.gox\n+@go_include@ crypto/crypto.lo.dep\n+crypto/crypto.lo.dep: $(go_crypto_files)\n+\t$(BUILDDEPS)\n+crypto/crypto.lo: $(go_crypto_files)\n \t$(BUILDPACKAGE)\n crypto/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: crypto/check\n \n-csv/csv.lo: $(go_csv_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n+@go_include@ csv/csv.lo.dep\n+csv/csv.lo.dep: $(go_csv_files)\n+\t$(BUILDDEPS)\n+csv/csv.lo: $(go_csv_files)\n \t$(BUILDPACKAGE)\n csv/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: csv/check\n \n-exec/exec.lo: $(go_exec_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox syscall.gox\n+@go_include@ exec/exec.lo.dep\n+exec/exec.lo.dep: $(go_exec_files)\n+\t$(BUILDDEPS)\n+exec/exec.lo: $(go_exec_files)\n \t$(BUILDPACKAGE)\n exec/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: exec/check\n \n-expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n-\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n+@go_include@ expvar/expvar.lo.dep\n+expvar/expvar.lo.dep: $(go_expvar_files)\n+\t$(BUILDDEPS)\n+expvar/expvar.lo: $(go_expvar_files)\n \t$(BUILDPACKAGE)\n expvar/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: expvar/check\n \n-flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n+@go_include@ flag/flag.lo.dep\n+flag/flag.lo.dep: $(go_flag_files)\n+\t$(BUILDDEPS)\n+flag/flag.lo: $(go_flag_files)\n \t$(BUILDPACKAGE)\n flag/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: flag/check\n \n-fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox math.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox sync.gox unicode.gox utf8.gox\n+@go_include@ fmt/fmt.lo.dep\n+fmt/fmt.lo.dep: $(go_fmt_files)\n+\t$(BUILDDEPS)\n+fmt/fmt.lo: $(go_fmt_files)\n \t$(BUILDPACKAGE)\n fmt/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: fmt/check\n \n-gob/gob.lo: $(go_gob_files) bufio.gox bytes.gox fmt.gox io.gox math.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ gob/gob.lo.dep\n+gob/gob.lo.dep: $(go_gob_files)\n+\t$(BUILDDEPS)\n+gob/gob.lo: $(go_gob_files)\n \t$(BUILDPACKAGE)\n gob/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: gob/check\n \n-hash/hash.lo: $(go_hash_files) io.gox\n+@go_include@ hash/hash.lo.dep\n+hash/hash.lo.dep: $(go_hash_files)\n+\t$(BUILDDEPS)\n+hash/hash.lo: $(go_hash_files)\n \t$(BUILDPACKAGE)\n hash/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: hash/check\n \n-html/html.lo: $(go_html_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\tstrconv.gox strings.gox utf8.gox\n+@go_include@ html/html.lo.dep\n+html/html.lo.dep: $(go_html_files)\n+\t$(BUILDDEPS)\n+html/html.lo: $(go_html_files)\n \t$(BUILDPACKAGE)\n html/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: html/check\n \n-http/http.lo: $(go_http_files) bufio.gox bytes.gox compress/gzip.gox \\\n-\t\tcrypto/rand.gox crypto/tls.gox encoding/base64.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n-\t\tmime.gox mime/multipart.gox net.gox net/textproto.gox os.gox \\\n-\t\tpath.gox path/filepath.gox runtime/debug.gox sort.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox url.gox utf8.gox\n+@go_include@ http/http.lo.dep\n+http/http.lo.dep: $(go_http_files)\n+\t$(BUILDDEPS)\n+http/http.lo: $(go_http_files)\n \t$(BUILDPACKAGE)\n http/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: http/check\n \n-image/image.lo: $(go_image_files) bufio.gox image/color.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+@go_include@ image/image.lo.dep\n+image/image.lo.dep: $(go_image_files)\n+\t$(BUILDDEPS)\n+image/image.lo: $(go_image_files)\n \t$(BUILDPACKAGE)\n image/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: image/check\n \n-io/io.lo: $(go_io_files) os.gox sync.gox\n+@go_include@ io/io.lo.dep\n+io/io.lo.dep: $(go_io_files)\n+\t$(BUILDDEPS)\n+io/io.lo: $(go_io_files)\n \t$(BUILDPACKAGE)\n io/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: io/check\n \n-json/json.lo: $(go_json_files) bytes.gox encoding/base64.gox fmt.gox io.gox \\\n-\t\tmath.gox os.gox reflect.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n+@go_include@ json/json.lo.dep\n+json/json.lo.dep: $(go_json_files)\n+\t$(BUILDDEPS)\n+json/json.lo: $(go_json_files)\n \t$(BUILDPACKAGE)\n json/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: json/check\n \n-log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n-\t\tsync.gox time.gox\n+@go_include@ log/log.lo.dep\n+log/log.lo.dep: $(go_log_files)\n+\t$(BUILDDEPS)\n+log/log.lo: $(go_log_files)\n \t$(BUILDPACKAGE)\n log/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: log/check\n \n+@go_include@ math/math.lo.dep\n+math/math.lo.dep: $(go_math_files)\n+\t$(BUILDDEPS)\n math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n math/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: math/check\n \n-mail/mail.lo: $(go_mail_files) bufio.gox bytes.gox encoding/base64.gox \\\n-\t\tfmt.gox io.gox io/ioutil.gox log.gox net/textproto.gox os.gox \\\n-\t\tstrconv.gox strings.gox time.gox\n+@go_include@ mail/mail.lo.dep\n+mail/mail.lo.dep: $(go_mail_files)\n+\t$(BUILDDEPS)\n+mail/mail.lo: $(go_mail_files)\n \t$(BUILDPACKAGE)\n mail/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: mail/check\n \n-mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox fmt.gox os.gox strings.gox \\\n-\t\tsync.gox unicode.gox\n+@go_include@ mime/mime.lo.dep\n+mime/mime.lo.dep: $(go_mime_files)\n+\t$(BUILDDEPS)\n+mime/mime.lo: $(go_mime_files)\n \t$(BUILDPACKAGE)\n mime/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: mime/check\n \n-net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox rand.gox \\\n-\t\treflect.gox sort.gox strconv.gox strings.gox sync.gox \\\n-\t\tsyscall.gox time.gox\n+@go_include@ net/net.lo.dep\n+net/net.lo.dep: $(go_net_files)\n+\t$(BUILDDEPS)\n+net/net.lo: $(go_net_files)\n \t$(BUILDPACKAGE)\n net/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: net/check\n \n-os/os.lo: $(go_os_files) runtime.gox sync.gox syscall.gox\n+@go_include@ os/os.lo.dep\n+os/os.lo.dep: $(go_os_files)\n+\t$(BUILDDEPS)\n+os/os.lo: $(go_os_files)\n \t$(BUILDPACKAGE)\n os/check: $(CHECK_DEPS)\n \t@$(CHECK)\n@@ -2046,706 +2101,898 @@ signal_unix.go: $(srcdir)/go/os/mkunixsignals.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/mkunixsignals.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n-\t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n-\t\tpath.gox strings.gox\n+@go_include@ patch/patch.lo.dep\n+patch/patch.lo.dep: $(go_patch_files)\n+\t$(BUILDDEPS)\n+patch/patch.lo: $(go_patch_files)\n \t$(BUILDPACKAGE)\n patch/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: patch/check\n \n-path/path.lo: $(go_path_files) os.gox strings.gox utf8.gox\n+@go_include@ path/path.lo.dep\n+path/path.lo.dep: $(go_path_files)\n+\t$(BUILDDEPS)\n+path/path.lo: $(go_path_files)\n \t$(BUILDPACKAGE)\n path/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: path/check\n \n-rand/rand.lo: $(go_rand_files) math.gox sync.gox\n+@go_include@ rand/rand.lo.dep\n+rand/rand.lo.dep: $(go_rand_files)\n+\t$(BUILDDEPS)\n+rand/rand.lo: $(go_rand_files)\n \t$(BUILDPACKAGE)\n rand/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: rand/check\n \n-reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n-\t\tsync.gox\n+@go_include@ reflect/reflect.lo.dep\n+reflect/reflect.lo.dep: $(go_reflect_files)\n+\t$(BUILDDEPS)\n+reflect/reflect.lo: $(go_reflect_files)\n \t$(BUILDPACKAGE)\n reflect/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: reflect/check\n \n-regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox \\\n-\t\tregexp/syntax.gox strconv.gox strings.gox sync.gox utf8.gox\n+@go_include@ regexp/regexp.lo.dep\n+regexp/regexp.lo.dep: $(go_regexp_files)\n+\t$(BUILDDEPS)\n+regexp/regexp.lo: $(go_regexp_files)\n \t$(BUILDPACKAGE)\n regexp/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: regexp/check\n \n-rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n-\t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n-\t\tsync.gox template.gox unicode.gox utf8.gox\n+@go_include@ rpc/rpc.lo.dep\n+rpc/rpc.lo.dep: $(go_rpc_files)\n+\t$(BUILDDEPS)\n+rpc/rpc.lo: $(go_rpc_files)\n \t$(BUILDPACKAGE)\n rpc/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: rpc/check\n \n+@go_include@ runtime/runtime.lo.dep\n+runtime/runtime.lo.dep: $(go_runtime_files)\n+\t$(BUILDDEPS)\n runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n runtime/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: runtime/check\n \n-scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ scanner/scanner.lo.dep\n+scanner/scanner.lo.dep: $(go_scanner_files)\n+\t$(BUILDDEPS)\n+scanner/scanner.lo: $(go_scanner_files)\n \t$(BUILDPACKAGE)\n scanner/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: scanner/check\n \n-smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n-\t\tnet.gox net/textproto.gox os.gox strings.gox\n+@go_include@ smtp/smtp.lo.dep\n+smtp/smtp.lo.dep: $(go_smtp_files)\n+\t$(BUILDDEPS)\n+smtp/smtp.lo: $(go_smtp_files)\n \t$(BUILDPACKAGE)\n smtp/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: smtp/check\n \n-sort/sort.lo: $(go_sort_files) math.gox\n+@go_include@ sort/sort.lo.dep\n+sort/sort.lo.dep: $(go_sort_files)\n+\t$(BUILDDEPS)\n+sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n sort/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sort/check\n \n-strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ strconv/strconv.lo.dep\n+strconv/strconv.lo.dep: $(go_strconv_files)\n+\t$(BUILDDEPS)\n+strconv/strconv.lo: $(go_strconv_files)\n \t$(BUILDPACKAGE)\n strconv/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: strconv/check\n \n-strings/strings.lo: $(go_strings_files) io.gox os.gox unicode.gox utf8.gox\n+@go_include@ strings/strings.lo.dep\n+strings/strings.lo.dep: $(go_strings_files)\n+\t$(BUILDDEPS)\n+strings/strings.lo: $(go_strings_files)\n \t$(BUILDPACKAGE)\n strings/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: strings/check\n \n-sync/sync.lo: $(go_sync_files) runtime.gox sync/atomic.gox\n+@go_include@ sync/sync.lo.dep\n+sync/sync.lo.dep: $(go_sync_files)\n+\t$(BUILDDEPS)\n+sync/sync.lo: $(go_sync_files)\n \t$(BUILDPACKAGE)\n sync/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sync/check\n \n-syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n+@go_include@ syslog/syslog.lo.dep\n+syslog/syslog.lo.dep: $(go_syslog_files)\n+\t$(BUILDDEPS)\n+syslog/syslog.lo: $(go_syslog_files)\n \t$(BUILDPACKAGE)\n syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n syslog/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n+@go_include@ tabwriter/tabwriter.lo.dep\n+tabwriter/tabwriter.lo.dep: $(go_tabwriter_files)\n+\t$(BUILDDEPS)\n+tabwriter/tabwriter.lo: $(go_tabwriter_files)\n \t$(BUILDPACKAGE)\n tabwriter/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: tabwriter/check\n \n-template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox os.gox path/filepath.gox reflect.gox \\\n-\t\truntime.gox strings.gox template/parse.gox unicode.gox \\\n-\t\turl.gox utf8.gox\n+@go_include@ template/template.lo.dep\n+template/template.lo.dep: $(go_template_files)\n+\t$(BUILDDEPS)\n+template/template.lo: $(go_template_files)\n \t$(BUILDPACKAGE)\n template/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: template/check\n \n-testing/testing.lo: $(go_testing_files) bytes.gox flag.gox fmt.gox io.gox \\\n-\t\tos.gox regexp.gox runtime.gox runtime/pprof.gox strings.gox \\\n-\t\tstrconv.gox time.gox\n+@go_include@ testing/testing.lo.dep\n+testing/testing.lo.dep: $(go_testing_files)\n+\t$(BUILDDEPS)\n+testing/testing.lo: $(go_testing_files)\n \t$(BUILDPACKAGE)\n testing/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: testing/check\n \n-time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n-\t\tos.gox strconv.gox sync.gox syscall.gox\n+@go_include@ time/time.lo.dep\n+time/time.lo.dep: $(go_time_files)\n+\t$(BUILDDEPS)\n+time/time.lo: $(go_time_files)\n \t$(BUILDPACKAGE)\n time/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: time/check\n \n+@go_include@ unicode/unicode.lo.dep\n+unicode/unicode.lo.dep: $(go_unicode_files)\n+\t$(BUILDDEPS)\n unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n unicode/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: unicode/check\n \n-url/url.lo: $(go_url_files) os.gox strconv.gox strings.gox\n+@go_include@ url/url.lo.dep\n+url/url.lo.dep: $(go_url_files)\n+\t$(BUILDDEPS)\n+url/url.lo: $(go_url_files)\n \t$(BUILDPACKAGE)\n url/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: url/check\n \n-utf16/utf16.lo: $(go_utf16_files) unicode.gox\n+@go_include@ utf16/utf16.lo.dep\n+utf16/utf16.lo.dep: $(go_utf16_files)\n+\t$(BUILDDEPS)\n+utf16/utf16.lo: $(go_utf16_files)\n \t$(BUILDPACKAGE)\n utf16/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: utf16/check\n \n-utf8/utf8.lo: $(go_utf8_files) unicode.gox\n+@go_include@ utf8/utf8.lo.dep\n+utf8/utf8.lo.dep: $(go_utf8_files)\n+\t$(BUILDDEPS)\n+utf8/utf8.lo: $(go_utf8_files)\n \t$(BUILDPACKAGE)\n utf8/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: utf8/check\n \n-websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n-\t\tcrypto/md5.gox crypto/rand.gox crypto/sha1.gox crypto/tls.gox \\\n-\t\tencoding/base64.gox encoding/binary.gox fmt.gox http.gox \\\n-\t\tio.gox io/ioutil.gox json.gox net.gox os.gox rand.gox \\\n-\t\tstrings.gox strconv.gox sync.gox url.gox\n+@go_include@ websocket/websocket.lo.dep\n+websocket/websocket.lo.dep: $(go_websocket_files)\n+\t$(BUILDDEPS)\n+websocket/websocket.lo: $(go_websocket_files)\n \t$(BUILDPACKAGE)\n websocket/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: websocket/check\n \n-xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ xml/xml.lo.dep\n+xml/xml.lo.dep: $(go_xml_files)\n+\t$(BUILDDEPS)\n+xml/xml.lo: $(go_xml_files)\n \t$(BUILDPACKAGE)\n xml/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: xml/check\n \n-archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox io/ioutil.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+@go_include@ archive/tar.lo.dep\n+archive/tar.lo.dep: $(go_archive_tar_files)\n+\t$(BUILDDEPS)\n+archive/tar.lo: $(go_archive_tar_files)\n \t$(BUILDPACKAGE)\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t@$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/zip.lo: $(go_archive_zip_files) bufio.gox compress/flate.gox \\\n-\t\tencoding/binary.gox hash.gox hash/crc32.gox \\\n-\t\tencoding/binary.gox io.gox io/ioutil.gox os.gox time.gox\n+@go_include@ archive/zip.lo.dep\n+archive/zip.lo.dep: $(go_archive_zip_files)\n+\t$(BUILDDEPS)\n+archive/zip.lo: $(go_archive_zip_files)\n \t$(BUILDPACKAGE)\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t@$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/bzip2.lo: $(go_compress_bzip2_files) bufio.gox io.gox os.gox sort.gox\n+@go_include@ compress/bzip2.lo.dep\n+compress/bzip2.lo.dep: $(go_compress_bzip2_files)\n+\t$(BUILDDEPS)\n+compress/bzip2.lo: $(go_compress_bzip2_files)\n \t$(BUILDPACKAGE)\n compress/bzip2/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/bzip2\n \t@$(CHECK)\n .PHONY: compress/bzip2/check\n \n-compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n-\t\tos.gox sort.gox strconv.gox\n+@go_include@ compress/flate.lo.dep\n+compress/flate.lo.dep: $(go_compress_flate_files)\n+\t$(BUILDDEPS)\n+compress/flate.lo: $(go_compress_flate_files)\n \t$(BUILDPACKAGE)\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t@$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/crc32.gox io.gox os.gox\n+@go_include@ compress/gzip.lo.dep\n+compress/gzip.lo.dep: $(go_compress_gzip_files)\n+\t$(BUILDDEPS)\n+compress/gzip.lo: $(go_compress_gzip_files)\n \t$(BUILDPACKAGE)\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t@$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/lzw.lo: $(go_compress_lzw_files) bufio.gox fmt.gox io.gox os.gox\n+@go_include@ compress/lzw.lo.dep\n+compress/lzw.lo.dep: $(go_compress_lzw_files)\n+\t$(BUILDDEPS)\n+compress/lzw.lo: $(go_compress_lzw_files)\n \t$(BUILDPACKAGE)\n compress/lzw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/lzw\n \t@$(CHECK)\n .PHONY: compress/lzw/check\n \n-compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/adler32.gox io.gox os.gox\n+@go_include@ compress/zlib.lo.dep\n+compress/zlib.lo.dep: $(go_compress_zlib_files)\n+\t$(BUILDDEPS)\n+compress/zlib.lo: $(go_compress_zlib_files)\n \t$(BUILDPACKAGE)\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t@$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/heap.lo: $(go_container_heap_files) sort.gox\n+@go_include@ container/heap.lo.dep\n+container/heap.lo.dep: $(go_container_heap_files)\n+\t$(BUILDDEPS)\n+container/heap.lo: $(go_container_heap_files)\n \t$(BUILDPACKAGE)\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t@$(CHECK)\n .PHONY: container/heap/check\n \n+@go_include@ container/list.lo.dep\n+container/list.lo.dep: $(go_container_list_files)\n+\t$(BUILDDEPS)\n container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t@$(CHECK)\n .PHONY: container/list/check\n \n+@go_include@ container/ring.lo.dep\n+container/ring.lo.dep: $(go_container_ring_files)\n+\t$(BUILDDEPS)\n container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t@$(CHECK)\n .PHONY: container/ring/check\n \n-crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n+@go_include@ crypto/aes.lo.dep\n+crypto/aes.lo.dep: $(go_crypto_aes_files)\n+\t$(BUILDDEPS)\n+crypto/aes.lo: $(go_crypto_aes_files)\n \t$(BUILDPACKAGE)\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t@$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/bcrypt.lo: $(go_crypto_bcrypt_files) crypto/blowfish.gox \\\n-\t\tcrypto/rand.gox crypto/subtle.gox encoding/base64.gox \\\n-\t\tfmt.gox io.gox os.gox strconv.gox\n+@go_include@ crypto/bcrypt.lo.dep\n+crypto/bcrypt.lo.dep: $(go_crypto_bcrypt_files)\n+\t$(BUILDDEPS)\n+crypto/bcrypt.lo: $(go_crypto_bcrypt_files)\n \t$(BUILDPACKAGE)\n crypto/bcrypt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/bcrypt\n \t@$(CHECK)\n .PHONY: crypto/bcrypt/check\n \n-crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n+@go_include@ crypto/blowfish.lo.dep\n+crypto/blowfish.lo.dep: $(go_crypto_blowfish_files)\n+\t$(BUILDDEPS)\n+crypto/blowfish.lo: $(go_crypto_blowfish_files)\n \t$(BUILDPACKAGE)\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t@$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n+@go_include@ crypto/cast5.lo.dep\n+crypto/cast5.lo.dep: $(go_crypto_cast5_files)\n+\t$(BUILDDEPS)\n+crypto/cast5.lo: $(go_crypto_cast5_files)\n \t$(BUILDPACKAGE)\n crypto/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t@$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n+@go_include@ crypto/cipher.lo.dep\n+crypto/cipher.lo.dep: $(go_crypto_cipher_files)\n+\t$(BUILDDEPS)\n+crypto/cipher.lo: $(go_crypto_cipher_files)\n \t$(BUILDPACKAGE)\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t@$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/des.lo: $(go_crypto_des_files) encoding/binary.gox os.gox strconv.gox\n+@go_include@ crypto/des.lo.dep\n+crypto/des.lo.dep: $(go_crypto_des_files)\n+\t$(BUILDDEPS)\n+crypto/des.lo: $(go_crypto_des_files)\n \t$(BUILDPACKAGE)\n crypto/des/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/des\n \t@$(CHECK)\n .PHONY: crypto/des/check\n \n-crypto/dsa.lo: $(go_crypto_dsa_files) big.gox io.gox os.gox\n+@go_include@ crypto/dsa.lo.dep\n+crypto/dsa.lo.dep: $(go_crypto_dsa_files)\n+\t$(BUILDDEPS)\n+crypto/dsa.lo: $(go_crypto_dsa_files)\n \t$(BUILDPACKAGE)\n crypto/dsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/dsa\n \t@$(CHECK)\n .PHONY: crypto/dsa/check\n \n-crypto/ecdsa.lo: $(go_crypto_ecdsa_files) big.gox crypto/elliptic.gox io.gox \\\n-\t\tos.gox\n+@go_include@ crypto/ecdsa.lo.dep\n+crypto/ecdsa.lo.dep: $(go_crypto_ecdsa_files)\n+\t$(BUILDDEPS)\n+crypto/ecdsa.lo: $(go_crypto_ecdsa_files)\n \t$(BUILDPACKAGE)\n crypto/ecdsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ecdsa\n \t@$(CHECK)\n .PHONY: crypto/ecdsa/check\n \n-crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n+@go_include@ crypto/elliptic.lo.dep\n+crypto/elliptic.lo.dep: $(go_crypto_elliptic_files)\n+\t$(BUILDDEPS)\n+crypto/elliptic.lo: $(go_crypto_elliptic_files)\n \t$(BUILDPACKAGE)\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t@$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n-\t\tcrypto/sha256.gox hash.gox os.gox\n+@go_include@ crypto/hmac.lo.dep\n+crypto/hmac.lo.dep: $(go_crypto_hmac_files)\n+\t$(BUILDDEPS)\n+crypto/hmac.lo: $(go_crypto_hmac_files)\n \t$(BUILDPACKAGE)\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t@$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/md4.lo: $(go_crypto_md4_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/md4.lo.dep\n+crypto/md4.lo.dep: $(go_crypto_md4_files)\n+\t$(BUILDDEPS)\n+crypto/md4.lo: $(go_crypto_md4_files)\n \t$(BUILDPACKAGE)\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t@$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/md5.lo: $(go_crypto_md5_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/md5.lo.dep\n+crypto/md5.lo.dep: $(go_crypto_md5_files)\n+\t$(BUILDDEPS)\n+crypto/md5.lo: $(go_crypto_md5_files)\n \t$(BUILDPACKAGE)\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t@$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto.gox crypto/rsa.gox \\\n-\t\tcrypto/sha1.gox crypto/x509.gox crypto/x509/pkix.gox os.gox \\\n-\t\ttime.gox\n+@go_include@ crypto/ocsp.lo.dep\n+crypto/ocsp.lo.dep: $(go_crypto_ocsp_files)\n+\t$(BUILDDEPS)\n+crypto/ocsp.lo: $(go_crypto_ocsp_files)\n \t$(BUILDPACKAGE)\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t@$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox \\\n-\t\tcrypto/openpgp/armor.gox crypto/openpgp/error.gox \\\n-\t\tcrypto/openpgp/packet.gox crypto/openpgp/s2k.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha256.gox hash.gox \\\n-\t\tio.gox os.gox strconv.gox time.gox\n+@go_include@ crypto/openpgp.lo.dep\n+crypto/openpgp.lo.dep: $(go_crypto_openpgp_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp.lo: $(go_crypto_openpgp_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp\n \t@$(CHECK)\n .PHONY: crypto/openpgp/check\n \n-crypto/rand.lo: $(go_crypto_rand_files) big.gox bufio.gox crypto/aes.gox \\\n-\t\tio.gox os.gox sync.gox time.gox\n+@go_include@ crypto/rand.lo.dep\n+crypto/rand.lo.dep: $(go_crypto_rand_files)\n+\t$(BUILDDEPS)\n+crypto/rand.lo: $(go_crypto_rand_files)\n \t$(BUILDPACKAGE)\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t@$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n+@go_include@ crypto/rc4.lo.dep\n+crypto/rc4.lo.dep: $(go_crypto_rc4_files)\n+\t$(BUILDDEPS)\n+crypto/rc4.lo: $(go_crypto_rc4_files)\n \t$(BUILDPACKAGE)\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t@$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/ripemd160.lo: $(go_crypto_ripemd160_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/ripemd160.lo.dep\n+crypto/ripemd160.lo.dep: $(go_crypto_ripemd160_files)\n+\t$(BUILDDEPS)\n+crypto/ripemd160.lo: $(go_crypto_ripemd160_files)\n \t$(BUILDPACKAGE)\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t@$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto.gox crypto/rand.gox \\\n-\t\tcrypto/sha1.gox crypto/subtle.gox encoding/hex.gox hash.gox \\\n-\t\tio.gox os.gox\n+@go_include@ crypto/rsa.lo.dep\n+crypto/rsa.lo.dep: $(go_crypto_rsa_files)\n+\t$(BUILDDEPS)\n+crypto/rsa.lo: $(go_crypto_rsa_files)\n \t$(BUILDPACKAGE)\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t@$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/sha1.lo: $(go_crypto_sha1_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha1.lo.dep\n+crypto/sha1.lo.dep: $(go_crypto_sha1_files)\n+\t$(BUILDDEPS)\n+crypto/sha1.lo: $(go_crypto_sha1_files)\n \t$(BUILDPACKAGE)\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t@$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/sha256.lo: $(go_crypto_sha256_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha256.lo.dep\n+crypto/sha256.lo.dep: $(go_crypto_sha256_files)\n+\t$(BUILDDEPS)\n+crypto/sha256.lo: $(go_crypto_sha256_files)\n \t$(BUILDPACKAGE)\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t@$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/sha512.lo: $(go_crypto_sha512_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha512.lo.dep\n+crypto/sha512.lo.dep: $(go_crypto_sha512_files)\n+\t$(BUILDDEPS)\n+crypto/sha512.lo: $(go_crypto_sha512_files)\n \t$(BUILDPACKAGE)\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t@$(CHECK)\n .PHONY: crypto/sha512/check\n \n+@go_include@ crypto/subtle.lo.dep\n+crypto/subtle.lo.dep: $(go_crypto_subtle_files)\n+\t$(BUILDDEPS)\n crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t@$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/tls.lo: $(go_crypto_tls_files) big.gox bytes.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cipher.gox crypto/des.gox \\\n-\t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n-\t\tcrypto/rand.gox crypto/rc4.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox crypto/x509.gox crypto/x509/pkix.gox \\\n-\t\tencoding/pem.gox hash.gox io.gox io/ioutil.gox net.gox os.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox\n+@go_include@ crypto/tls.lo.dep\n+crypto/tls.lo.dep: $(go_crypto_tls_files)\n+\t$(BUILDDEPS)\n+crypto/tls.lo: $(go_crypto_tls_files)\n \t$(BUILDPACKAGE)\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t@$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n+@go_include@ crypto/twofish.lo.dep\n+crypto/twofish.lo.dep: $(go_crypto_twofish_files)\n+\t$(BUILDDEPS)\n+crypto/twofish.lo: $(go_crypto_twofish_files)\n \t$(BUILDPACKAGE)\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t@$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox bytes.gox crypto.gox \\\n-\t\tcrypto/dsa.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/x509/pkix.gox encoding/pem.gox os.gox strings.gox \\\n-\t\ttime.gox\n+@go_include@ crypto/x509.lo.dep\n+crypto/x509.lo.dep: $(go_crypto_x509_files)\n+\t$(BUILDDEPS)\n+crypto/x509.lo: $(go_crypto_x509_files)\n \t$(BUILDPACKAGE)\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t@$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n+@go_include@ crypto/xtea.lo.dep\n+crypto/xtea.lo.dep: $(go_crypto_xtea_files)\n+\t$(BUILDDEPS)\n+crypto/xtea.lo: $(go_crypto_xtea_files)\n \t$(BUILDPACKAGE)\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t@$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bufio.gox bytes.gox \\\n-\t\tcrypto/openpgp/error.gox encoding/base64.gox io.gox os.gox\n+@go_include@ crypto/openpgp/armor.lo.dep\n+crypto/openpgp/armor.lo.dep: $(go_crypto_openpgp_armor_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t@$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/elgamal.lo: $(go_crypto_openpgp_elgamal_files) big.gox \\\n-\t\tcrypto/rand.gox crypto/subtle.gox io.gox os.gox\n+@go_include@ crypto/openpgp/elgamal.lo.dep\n+crypto/openpgp/elgamal.lo.dep: $(go_crypto_openpgp_elgamal_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/elgamal.lo: $(go_crypto_openpgp_elgamal_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/elgamal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/elgamal\n \t@$(CHECK)\n .PHONY: crypto/openpgp/elgamal/check\n \n-crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files) strconv.gox\n+@go_include@ crypto/openpgp/error.lo.dep\n+crypto/openpgp/error.lo.dep: $(go_crypto_openpgp_error_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t@$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n-\t\tcompress/flate.gox compress/zlib.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cast5.gox crypto/cipher.gox \\\n-\t\tcrypto/dsa.gox crypto/openpgp/elgamal.gox \\\n-\t\tcrypto/openpgp/error.gox crypto/openpgp/s2k.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox encoding/binary.gox fmt.gox \\\n-\t\thash.gox io.gox io/ioutil.gox os.gox strconv.gox strings.gox\n+@go_include@ crypto/openpgp/packet.lo.dep\n+crypto/openpgp/packet.lo.dep: $(go_crypto_openpgp_packet_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/packet/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/packet\n \t@$(CHECK)\n .PHONY: crypto/openpgp/packet/check\n \n-crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n-\t\tcrypto/md5.gox crypto/openpgp/error.gox crypto/rand.gox \\\n-\t\tcrypto/ripemd160.gox crypto/sha1.gox crypto/sha256.gox \\\n-\t\tcrypto/sha512.gox hash.gox io.gox os.gox\n+@go_include@ crypto/openpgp/s2k.lo.dep\n+crypto/openpgp/s2k.lo.dep: $(go_crypto_openpgp_s2k_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t@$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-crypto/x509/pkix.lo: $(go_crypto_x509_pkix_files) asn1.gox big.gox time.gox\n+@go_include@ crypto/x509/pkix.lo.dep\n+crypto/x509/pkix.lo.dep: $(go_crypto_x509_pkix_files)\n+\t$(BUILDDEPS)\n+crypto/x509/pkix.lo: $(go_crypto_x509_pkix_files)\n \t$(BUILDPACKAGE)\n crypto/x509/pkix/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509/pkix\n \t@$(CHECK)\n .PHONY: crypto/x509/pkix/check\n \n-debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n+@go_include@ debug/dwarf.lo.dep\n+debug/dwarf.lo.dep: $(go_debug_dwarf_files)\n+\t$(BUILDDEPS)\n+debug/dwarf.lo: $(go_debug_dwarf_files)\n \t$(BUILDPACKAGE)\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t@$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/elf.lo.dep\n+debug/elf.lo.dep: $(go_debug_elf_files)\n+\t$(BUILDDEPS)\n+debug/elf.lo: $(go_debug_elf_files)\n \t$(BUILDPACKAGE)\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t@$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+@go_include@ debug/gosym.lo.dep\n+debug/gosym.lo.dep: $(go_debug_gosym_files)\n+\t$(BUILDDEPS)\n+debug/gosym.lo: $(go_debug_gosym_files)\n \t$(BUILDPACKAGE)\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t@$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/macho.lo.dep\n+debug/macho.lo.dep: $(go_debug_macho_files)\n+\t$(BUILDDEPS)\n+debug/macho.lo: $(go_debug_macho_files)\n \t$(BUILDPACKAGE)\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t@$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/pe.lo.dep\n+debug/pe.lo.dep: $(go_debug_pe_files)\n+\t$(BUILDDEPS)\n+debug/pe.lo: $(go_debug_pe_files)\n \t$(BUILDPACKAGE)\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t@$(CHECK)\n .PHONY: debug/pe/check\n \n-encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/ascii85.lo.dep\n+encoding/ascii85.lo.dep: $(go_encoding_ascii85_files)\n+\t$(BUILDDEPS)\n+encoding/ascii85.lo: $(go_encoding_ascii85_files)\n \t$(BUILDPACKAGE)\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t@$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/base32.lo.dep\n+encoding/base32.lo.dep: $(go_encoding_base32_files)\n+\t$(BUILDDEPS)\n+encoding/base32.lo: $(go_encoding_base32_files)\n \t$(BUILDPACKAGE)\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t@$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/base64.lo.dep\n+encoding/base64.lo.dep: $(go_encoding_base64_files)\n+\t$(BUILDDEPS)\n+encoding/base64.lo: $(go_encoding_base64_files)\n \t$(BUILDPACKAGE)\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t@$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n-\t\treflect.gox\n+@go_include@ encoding/binary.lo.dep\n+encoding/binary.lo.dep: $(go_encoding_binary_files)\n+\t$(BUILDDEPS)\n+encoding/binary.lo: $(go_encoding_binary_files)\n \t$(BUILDPACKAGE)\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t@$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+@go_include@ encoding/git85.lo.dep\n+encoding/git85.lo.dep: $(go_encoding_git85_files)\n+\t$(BUILDDEPS)\n+encoding/git85.lo: $(go_encoding_git85_files)\n \t$(BUILDPACKAGE)\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t@$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/hex.lo: $(go_encoding_hex_files) bytes.gox io.gox os.gox strconv.gox\n+@go_include@ encoding/hex.lo.dep\n+encoding/hex.lo.dep: $(go_encoding_hex_files)\n+\t$(BUILDDEPS)\n+encoding/hex.lo: $(go_encoding_hex_files)\n \t$(BUILDPACKAGE)\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t@$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n+@go_include@ encoding/pem.lo.dep\n+encoding/pem.lo.dep: $(go_encoding_pem_files)\n+\t$(BUILDDEPS)\n+encoding/pem.lo: $(go_encoding_pem_files)\n \t$(BUILDPACKAGE)\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t@$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/ebnf.lo: $(go_exp_ebnf_files) scanner.gox go/token.gox os.gox \\\n-\t\tstrconv.gox unicode.gox utf8.gox\n+@go_include@ exp/ebnf.lo.dep\n+exp/ebnf.lo.dep: $(go_exp_ebnf_files)\n+\t$(BUILDDEPS)\n+exp/ebnf.lo: $(go_exp_ebnf_files)\n \t$(BUILDPACKAGE)\n exp/ebnf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/ebnf\n \t@$(CHECK)\n .PHONY: exp/ebnf/check\n \n-exp/gui.lo: $(go_exp_gui_files) image.gox image/draw.gox os.gox\n+@go_include@ exp/gui.lo.dep\n+exp/gui.lo.dep: $(go_exp_gui_files)\n+\t$(BUILDDEPS)\n+exp/gui.lo: $(go_exp_gui_files)\n \t$(BUILDPACKAGE)\n exp/gui/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/gui\n \t@$(CHECK)\n .PHONY: exp/gui/check\n \n-exp/norm.lo: $(go_exp_norm_files) io.gox os.gox utf8.gox\n+@go_include@ exp/norm.lo.dep\n+exp/norm.lo.dep: $(go_exp_norm_files)\n+\t$(BUILDDEPS)\n+exp/norm.lo: $(go_exp_norm_files)\n \t$(BUILDPACKAGE)\n exp/norm/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/norm\n \t@$(CHECK)\n .PHONY: exp/norm/check\n \n-exp/spdy.lo: $(go_exp_spdy_files) bytes.gox compress/zlib.gox \\\n-\t\tencoding/binary.gox http.gox io.gox os.gox strings.gox\n+@go_include@ exp/spdy.lo.dep\n+exp/spdy.lo.dep: $(go_exp_spdy_files)\n+\t$(BUILDDEPS)\n+exp/spdy.lo: $(go_exp_spdy_files)\n \t$(BUILDPACKAGE)\n exp/spdy/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/spdy\n \t@$(CHECK)\n .PHONY: exp/spdy/check\n \n-exp/sql.lo: $(go_exp_sql_files) exp/sql/driver.gox fmt.gox os.gox reflect.gox \\\n-\t\truntime.gox strconv.gox sync.gox\n+@go_include@ exp/sql.lo.dep\n+exp/sql.lo.dep: $(go_exp_sql_files)\n+\t$(BUILDDEPS)\n+exp/sql.lo: $(go_exp_sql_files)\n \t$(BUILDPACKAGE)\n exp/sql/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/sql\n \t@$(CHECK)\n .PHONY: exp/sql/check\n \n-exp/ssh.lo: $(go_exp_ssh_files) big.gox bufio.gox bytes.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cipher.gox crypto/hmac.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox crypto/x509.gox encoding/pem.gox hash.gox \\\n-\t\tio.gox net.gox os.gox reflect.gox strconv.gox sync.gox\n+@go_include@ exp/ssh.lo.dep\n+exp/ssh.lo.dep: $(go_exp_ssh_files)\n+\t$(BUILDDEPS)\n+exp/ssh.lo: $(go_exp_ssh_files)\n \t$(BUILDPACKAGE)\n exp/ssh/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/ssh\n \t@$(CHECK)\n .PHONY: exp/ssh/check\n \n-exp/terminal.lo: $(go_exp_terminal_files) io.gox os.gox syscall.gox\n+@go_include@ exp/terminal.lo.dep\n+exp/terminal.lo.dep: $(go_exp_terminal_files)\n+\t$(BUILDDEPS)\n+exp/terminal.lo: $(go_exp_terminal_files)\n \t$(BUILDPACKAGE)\n exp/terminal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/terminal\n \t@$(CHECK)\n .PHONY: exp/terminal/check\n \n-exp/types.lo: $(go_exp_types_files) big.gox bufio.gox fmt.gox go/ast.gox \\\n-\t\tgo/token.gox io.gox os.gox path/filepath.gox runtime.gox \\\n-\t\tscanner.gox sort.gox strconv.gox strings.gox\n+@go_include@ exp/types.lo.dep\n+exp/types.lo.dep: $(go_exp_types_files)\n+\t$(BUILDDEPS)\n+exp/types.lo: $(go_exp_types_files)\n \t$(BUILDPACKAGE)\n exp/types/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/types\n \t@$(CHECK)\n .PHONY: exp/types/check\n \n-exp/gui/x11.lo: $(go_exp_gui_x11_files) bufio.gox exp/gui.gox image.gox \\\n-\t\timage/draw.gox io.gox log.gox net.gox os.gox strconv.gox \\\n-\t\tstrings.gox time.gox\n+@go_include@ exp/gui/x11.lo.dep\n+exp/gui/x11.lo.dep: $(go_exp_gui_x11_files)\n+\t$(BUILDDEPS)\n+exp/gui/x11.lo: $(go_exp_gui_x11_files)\n \t$(BUILDPACKAGE)\n exp/gui/x11/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/gui/x11\n \t@$(CHECK)\n .PHONY: exp/gui/x11/check\n \n-exp/inotify.lo: $(go_exp_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n+@go_include@ exp/inotify.lo.dep\n+exp/inotify.lo.dep: $(go_exp_inotify_files)\n+\t$(BUILDDEPS)\n+exp/inotify.lo: $(go_exp_inotify_files)\n \t$(BUILDPACKAGE)\n exp/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/inotify\n \t@$(CHECK)\n .PHONY: exp/inotify/check\n \n-exp/sql/driver.lo: $(go_exp_sql_driver_files) fmt.gox os.gox reflect.gox \\\n-\t\tstrconv.gox\n+@go_include@ exp/sql/driver.lo.dep\n+exp/sql/driver.lo.dep: $(go_exp_sql_driver_files)\n+\t$(BUILDDEPS)\n+exp/sql/driver.lo: $(go_exp_sql_driver_files)\n \t$(BUILDPACKAGE)\n exp/sql/driver/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/sql/driver\n \t@$(CHECK)\n .PHONY: exp/sql/driver/check\n \n-exp/template/html.lo: $(go_exp_template_html_files) bytes.gox fmt.gox \\\n-\t\thtml.gox json.gox os.gox strings.gox template.gox \\\n-\t\ttemplate/parse.gox unicode.gox utf8.gox \n+@go_include@ exp/template/html.lo.dep\n+exp/template/html.lo.dep: $(go_exp_template_html_files)\n+\t$(BUILDDEPS)\n+exp/template/html.lo: $(go_exp_template_html_files)\n \t$(BUILDPACKAGE)\n exp/template/html/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/template/html\n \t@$(CHECK)\n .PHONY: exp/template/html/check\n \n-go/ast.lo: $(go_go_ast_files) bytes.gox fmt.gox go/scanner.gox go/token.gox \\\n-\t\tio.gox os.gox reflect.gox strconv.gox unicode.gox utf8.gox\n+@go_include@ go/ast.lo.dep\n+go/ast.lo.dep: $(go_go_ast_files)\n+\t$(BUILDDEPS)\n+go/ast.lo: $(go_go_ast_files)\n \t$(BUILDPACKAGE)\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t@$(CHECK)\n .PHONY: go/ast/check\n \n-go/build.lo: $(go_go_build_files) bytes.gox exec.gox fmt.gox go/ast.gox \\\n-\t\tgo/doc.gox go/parser.gox go/token.gox io/ioutil.gox log.gox \\\n-\t\tos.gox path.gox path/filepath.gox regexp.gox runtime.gox \\\n-\t\tsort.gox strconv.gox strings.gox runtime.gox unicode.gox\n+@go_include@ go/build.lo.dep\n+go/build.lo.dep: $(go_go_build_files)\n+\t$(BUILDDEPS)\n+go/build.lo: $(go_go_build_files)\n \t$(BUILDPACKAGE)\n go/build/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/build\n@@ -2761,292 +3008,365 @@ s-syslist: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change syslist.go.tmp syslist.go\n \t$(STAMP) $@\n \n-go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n-\t\tsort.gox strings.gox template.gox unicode.gox utf8.gox\n+@go_include@ go/doc.lo.dep\n+go/doc.lo.dep: $(go_go_doc_files)\n+\t$(BUILDDEPS)\n+go/doc.lo: $(go_go_doc_files)\n \t$(BUILDPACKAGE)\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t@$(CHECK)\n .PHONY: go/doc/check\n \n-go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n-\t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n-\t\tpath/filepath.gox strings.gox\n+@go_include@ go/parser.lo.dep\n+go/parser.lo.dep: $(go_go_parser_files)\n+\t$(BUILDDEPS)\n+go/parser.lo: $(go_go_parser_files)\n \t$(BUILDPACKAGE)\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t@$(CHECK)\n .PHONY: go/parser/check\n \n-go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n-\t\tgo/token.gox io.gox os.gox path/filepath.gox reflect.gox \\\n-\t\tstrings.gox tabwriter.gox\n+@go_include@ go/printer.lo.dep\n+go/printer.lo.dep: $(go_go_printer_files)\n+\t$(BUILDDEPS)\n+go/printer.lo: $(go_go_printer_files)\n \t$(BUILDPACKAGE)\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t@$(CHECK)\n .PHONY: go/printer/check\n \n-go/scanner.lo: $(go_go_scanner_files) bytes.gox fmt.gox go/token.gox io.gox \\\n-\t\tos.gox path/filepath.gox sort.gox strconv.gox unicode.gox \\\n-\t\tutf8.gox\n+@go_include@ go/scanner.lo.dep\n+go/scanner.lo.dep: $(go_go_scanner_files)\n+\t$(BUILDDEPS)\n+go/scanner.lo: $(go_go_scanner_files)\n \t$(BUILDPACKAGE)\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t@$(CHECK)\n .PHONY: go/scanner/check\n \n-go/token.lo: $(go_go_token_files) fmt.gox gob.gox io.gox os.gox sort.gox \\\n-\t\tstrconv.gox sync.gox\n+@go_include@ go/token.lo.dep\n+go/token.lo.dep: $(go_go_token_files)\n+\t$(BUILDDEPS)\n+go/token.lo: $(go_go_token_files)\n \t$(BUILDPACKAGE)\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t@$(CHECK)\n .PHONY: go/token/check\n \n-hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n+@go_include@ hash/adler32.lo.dep\n+hash/adler32.lo.dep: $(go_hash_adler32_files)\n+\t$(BUILDDEPS)\n+hash/adler32.lo: $(go_hash_adler32_files)\n \t$(BUILDPACKAGE)\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t@$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox sync.gox\n+@go_include@ hash/crc32.lo.dep\n+hash/crc32.lo.dep: $(go_hash_crc32_files)\n+\t$(BUILDDEPS)\n+hash/crc32.lo: $(go_hash_crc32_files)\n \t$(BUILDPACKAGE)\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t@$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n+@go_include@ hash/crc64.lo.dep\n+hash/crc64.lo.dep: $(go_hash_crc64_files)\n+\t$(BUILDDEPS)\n+hash/crc64.lo: $(go_hash_crc64_files)\n \t$(BUILDPACKAGE)\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t@$(CHECK)\n .PHONY: hash/crc64/check\n \n-hash/fnv.lo: $(go_hash_fnv_files) encoding/binary.gox hash.gox os.gox\n+@go_include@ hash/fnv.lo.dep\n+hash/fnv.lo.dep: $(go_hash_fnv_files)\n+\t$(BUILDDEPS)\n+hash/fnv.lo: $(go_hash_fnv_files)\n \t$(BUILDPACKAGE)\n hash/fnv/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/fnv\n \t@$(CHECK)\n .PHONY: hash/fnv/check\n \n-http/cgi.lo: $(go_http_cgi_files) bufio.gox crypto/tls.gox exec.gox fmt.gox \\\n-\t\thttp.gox net.gox io.gox io/ioutil.gox log.gox os.gox \\\n-\t\tpath/filepath.gox regexp.gox strconv.gox strings.gox url.gox\n+@go_include@ http/cgi.lo.dep\n+http/cgi.lo.dep: $(go_http_cgi_files)\n+\t$(BUILDDEPS)\n+http/cgi.lo: $(go_http_cgi_files)\n \t$(BUILDPACKAGE)\n http/cgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/cgi\n \t@$(CHECK)\n .PHONY: http/cgi/check\n \n-http/fcgi.lo: $(go_http_fcgi_files) bufio.gox bytes.gox encoding/binary.gox \\\n-\t\tfmt.gox http.gox http/cgi.gox io.gox net.gox os.gox sync.gox \\\n-\t\ttime.gox\n+@go_include@ http/fcgi.lo.dep\n+http/fcgi.lo.dep: $(go_http_fcgi_files)\n+\t$(BUILDDEPS)\n+http/fcgi.lo: $(go_http_fcgi_files)\n \t$(BUILDPACKAGE)\n http/fcgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/fcgi\n \t@$(CHECK)\n .PHONY: http/fcgi/check\n \n-http/httptest.lo: $(go_http_httptest_files) bytes.gox crypto/rand.gox \\\n-\t\tcrypto/tls.gox flag.gox fmt.gox http.gox net.gox os.gox \\\n-\t\ttime.gox\n+@go_include@ http/httptest.lo.dep\n+http/httptest.lo.dep: $(go_http_httptest_files)\n+\t$(BUILDDEPS)\n+http/httptest.lo: $(go_http_httptest_files)\n \t$(BUILDPACKAGE)\n http/httptest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/httptest\n \t@$(CHECK)\n .PHONY: http/httptest/check\n \n-http/pprof.lo: $(go_http_pprof_files) bufio.gox bytes.gox fmt.gox http.gox \\\n-\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+@go_include@ http/pprof.lo.dep\n+http/pprof.lo.dep: $(go_http_pprof_files)\n+\t$(BUILDDEPS)\n+http/pprof.lo: $(go_http_pprof_files)\n \t$(BUILDPACKAGE)\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t@$(CHECK)\n .PHONY: http/pprof/check\n \n-image/bmp.lo: $(go_image_bmp_files) image.gox image/color.gox io.gox os.gox\n+@go_include@ image/bmp.lo.dep\n+image/bmp.lo.dep: $(go_image_bmp_files)\n+\t$(BUILDDEPS)\n+image/bmp.lo: $(go_image_bmp_files)\n \t$(BUILDPACKAGE)\n image/bmp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/bmp\n \t@$(CHECK)\n .PHONY: image/bmp/check\n \n+@go_include@ image/color.lo.dep\n+image/color.lo.dep: $(go_image_color_files)\n+\t$(BUILDDEPS)\n image/color.lo: $(go_image_color_files)\n \t$(BUILDPACKAGE)\n image/color/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/color\n \t@$(CHECK)\n .PHONY: image/color/check\n \n-image/draw.lo: $(go_image_draw_files) image.gox image/color.gox image/ycbcr.gox\n+@go_include@ image/draw.lo.dep\n+image/draw.lo.dep: $(go_image_draw_files)\n+\t$(BUILDDEPS)\n+image/draw.lo: $(go_image_draw_files)\n \t$(BUILDPACKAGE)\n image/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/draw\n \t@$(CHECK)\n .PHONY: image/draw/check\n \n-image/gif.lo: $(go_image_gif_files) bufio.gox compress/lzw.gox fmt.gox \\\n-\t\timage.gox image/color.gox io.gox os.gox\n+@go_include@ image/gif.lo.dep\n+image/gif.lo.dep: $(go_image_gif_files)\n+\t$(BUILDDEPS)\n+image/gif.lo: $(go_image_gif_files)\n \t$(BUILDPACKAGE)\n image/gif/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/gif\n \t@$(CHECK)\n .PHONY: image/gif/check\n \n-image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox image/color.gox \\\n-\t\timage/ycbcr.gox io.gox os.gox\n+@go_include@ image/jpeg.lo.dep\n+image/jpeg.lo.dep: $(go_image_jpeg_files)\n+\t$(BUILDDEPS)\n+image/jpeg.lo: $(go_image_jpeg_files)\n \t$(BUILDPACKAGE)\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t@$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox \\\n-\t\tencoding/binary.gox fmt.gox hash.gox hash/crc32.gox image.gox \\\n-\t\timage/color.gox io.gox os.gox strconv.gox\n+@go_include@ image/png.lo.dep\n+image/png.lo.dep: $(go_image_png_files)\n+\t$(BUILDDEPS)\n+image/png.lo: $(go_image_png_files)\n \t$(BUILDPACKAGE)\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t@$(CHECK)\n .PHONY: image/png/check\n \n-image/tiff.lo: $(go_image_tiff_files) bufio.gox compress/lzw.gox \\\n-\t\tcompress/zlib.gox encoding/binary.gox image.gox \\\n-\t\timage/color.gox io.gox io/ioutil.gox os.gox\n+@go_include@ image/tiff.lo.dep\n+image/tiff.lo.dep: $(go_image_tiff_files)\n+\t$(BUILDDEPS)\n+image/tiff.lo: $(go_image_tiff_files)\n \t$(BUILDPACKAGE)\n image/tiff/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/tiff\n \t@$(CHECK)\n .PHONY: image/tiff/check\n \n-image/ycbcr.lo: $(go_image_ycbcr_files) image.gox image/color.gox\n+@go_include@ image/ycbcr.lo.dep\n+image/ycbcr.lo.dep: $(go_image_ycbcr_files)\n+\t$(BUILDDEPS)\n+image/ycbcr.lo: $(go_image_ycbcr_files)\n \t$(BUILDPACKAGE)\n image/ycbcr/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/ycbcr\n \t@$(CHECK)\n .PHONY: image/ycbcr/check\n \n-index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox \\\n-\t\tencoding/binary.gox io.gox os.gox regexp.gox sort.gox\n+@go_include@ index/suffixarray.lo.dep\n+index/suffixarray.lo.dep: $(go_index_suffixarray_files)\n+\t$(BUILDDEPS)\n+index/suffixarray.lo: $(go_index_suffixarray_files)\n \t$(BUILDPACKAGE)\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t@$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox path/filepath.gox \\\n-\t\tsort.gox strconv.gox\n+@go_include@ io/ioutil.lo.dep\n+io/ioutil.lo.dep: $(go_io_ioutil_files)\n+\t$(BUILDDEPS)\n+io/ioutil.lo: $(go_io_ioutil_files)\n \t$(BUILDPACKAGE)\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t@$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox \\\n-\t\tcrypto/rand.gox fmt.gox io.gox io/ioutil.gox mime.gox \\\n-\t\tnet/textproto.gox os.gox strings.gox\n+@go_include@ mime/multipart.lo.dep\n+mime/multipart.lo.dep: $(go_mime_multipart_files)\n+\t$(BUILDDEPS)\n+mime/multipart.lo: $(go_mime_multipart_files)\n \t$(BUILDPACKAGE)\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t@$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/dict.lo: $(go_net_dict_files) net/textproto.gox os.gox strconv.gox \\\n-\t\tstrings.gox\n+@go_include@ net/dict.lo.dep\n+net/dict.lo.dep: $(go_net_dict_files)\n+\t$(BUILDDEPS)\n+net/dict.lo: $(go_net_dict_files)\n \t$(BUILDPACKAGE)\n \n-net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox fmt.gox \\\n-\t\tio.gox io/ioutil.gox net.gox os.gox strings.gox strconv.gox \\\n-\t\tsync.gox\n+@go_include@ net/textproto.lo.dep\n+net/textproto.lo.dep: $(go_net_textproto_files)\n+\t$(BUILDDEPS)\n+net/textproto.lo: $(go_net_textproto_files)\n \t$(BUILDPACKAGE)\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t@$(CHECK)\n .PHONY: net/textproto/check\n \n-old/netchan.lo: $(go_old_netchan_files) gob.gox io.gox log.gox net.gox os.gox \\\n-\t\treflect.gox strconv.gox sync.gox time.gox\n+@go_include@ old/netchan.lo.dep\n+old/netchan.lo.dep: $(go_old_netchan_files)\n+\t$(BUILDDEPS)\n+old/netchan.lo: $(go_old_netchan_files)\n \t$(BUILDPACKAGE)\n old/netchan/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/netchan\n \t@$(CHECK)\n .PHONY: old/netchan/check\n \n-old/regexp.lo: $(go_old_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n-\t\tutf8.gox\n+@go_include@ old/regexp.lo.dep\n+old/regexp.lo.dep: $(go_old_regexp_files)\n+\t$(BUILDDEPS)\n+old/regexp.lo: $(go_old_regexp_files)\n \t$(BUILDPACKAGE)\n old/regexp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/regexp\n \t@$(CHECK)\n .PHONY: old/regexp/check\n \n-old/template.lo: $(go_old_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox os.gox reflect.gox strconv.gox strings.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ old/template.lo.dep\n+old/template.lo.dep: $(go_old_template_files)\n+\t$(BUILDDEPS)\n+old/template.lo: $(go_old_template_files)\n \t$(BUILDPACKAGE)\n old/template/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/template\n \t@$(CHECK)\n .PHONY: old/template/check\n \n-os/user.lo: $(go_os_user_files) fmt.gox os.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox syscall.gox\n+@go_include@ os/user.lo.dep\n+os/user.lo.dep: $(go_os_user_files)\n+\t$(BUILDDEPS)\n+os/user.lo: $(go_os_user_files)\n \t$(BUILDPACKAGE)\n os/user/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/user\n \t@$(CHECK)\n .PHONY: os/user/check\n \n-os/signal.lo: $(go_os_signal_files) os.gox runtime.gox\n+@go_include@ os/signal.lo.dep\n+os/signal.lo.dep: $(go_os_signal_files)\n+\t$(BUILDDEPS)\n+os/signal.lo: $(go_os_signal_files)\n \t$(BUILDPACKAGE)\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t@$(CHECK)\n .PHONY: os/signal/check\n \n-path/filepath.lo: $(go_path_filepath_files) bytes.gox os.gox runtime.gox \\\n-\t\tsort.gox strings.gox utf8.gox\n+@go_include@ path/filepath.lo.dep\n+path/filepath.lo.dep: $(go_path_filepath_files)\n+\t$(BUILDDEPS)\n+path/filepath.lo: $(go_path_filepath_files)\n \t$(BUILDPACKAGE)\n path/filepath/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) path/filepath\n \t@$(CHECK)\n .PHONY: path/filepath/check\n \n-regexp/syntax.lo: $(go_regexp_syntax_files) bytes.gox os.gox sort.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ regexp/syntax.lo.dep\n+regexp/syntax.lo.dep: $(go_regexp_syntax_files)\n+\t$(BUILDDEPS)\n+regexp/syntax.lo: $(go_regexp_syntax_files)\n \t$(BUILDPACKAGE)\n regexp/syntax/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) regexp/syntax\n \t@$(CHECK)\n .PHONY: regexp/syntax/check\n \n-rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n-\t\tos.gox rpc.gox sync.gox\n+@go_include@ rpc/jsonrpc.lo.dep\n+rpc/jsonrpc.lo.dep: $(go_rpc_jsonrpc_files)\n+\t$(BUILDDEPS)\n+rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files)\n \t$(BUILDPACKAGE)\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t@$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n-\t\tos.gox runtime.gox\n+@go_include@ runtime/debug.lo.dep\n+runtime/debug.lo.dep: $(go_runtime_debug_files)\n+\t$(BUILDDEPS)\n+runtime/debug.lo: $(go_runtime_debug_files)\n \t$(BUILDPACKAGE)\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t@$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n-\t\truntime.gox sync.gox\n+@go_include@ runtime/pprof.lo.dep\n+runtime/pprof.lo.dep: $(go_runtime_pprof_files)\n+\t$(BUILDDEPS)\n+runtime/pprof.lo: $(go_runtime_pprof_files)\n \t$(BUILDPACKAGE)\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t@$(CHECK)\n .PHONY: runtime/pprof/check\n \n+@go_include@ sync/atomic.lo.dep\n+sync/atomic.lo.dep: $(go_sync_atomic_files)\n+\t$(BUILDDEPS)\n sync/atomic.lo: $(go_sync_atomic_files)\n \t$(BUILDPACKAGE)\n sync/atomic_c.lo: $(go_sync_atomic_c_files) sync/atomic.lo\n@@ -3056,38 +3376,50 @@ sync/atomic/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sync/atomic/check\n \n-template/parse.lo: $(go_template_parse_files) bytes.gox fmt.gox os.gox \\\n-\t\truntime.gox strconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ template/parse.lo.dep\n+template/parse.lo.dep: $(go_template_parse_files)\n+\t$(BUILDDEPS)\n+template/parse.lo: $(go_template_parse_files)\n \t$(BUILDPACKAGE)\n template/parse/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) template/parse\n \t@$(CHECK)\n .PHONY: template/parse/check\n \n-testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n+@go_include@ testing/iotest.lo.dep\n+testing/iotest.lo.dep: $(go_testing_iotest_files)\n+\t$(BUILDDEPS)\n+testing/iotest.lo: $(go_testing_iotest_files)\n \t$(BUILDPACKAGE)\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t@$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n-\t\trand.gox reflect.gox strings.gox\n+@go_include@ testing/quick.lo.dep\n+testing/quick.lo.dep: $(go_testing_quick_files)\n+\t$(BUILDDEPS)\n+testing/quick.lo: $(go_testing_quick_files)\n \t$(BUILDPACKAGE)\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t@$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n-\t\treflect.gox strings.gox\n+@go_include@ testing/script.lo.dep\n+testing/script.lo.dep: $(go_testing_script_files)\n+\t$(BUILDDEPS)\n+testing/script.lo: $(go_testing_script_files)\n \t$(BUILDPACKAGE)\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t@$(CHECK)\n .PHONY: testing/script/check\n \n-syscall/syscall.lo: $(go_syscall_files) sync.gox\n+@go_include@ syscall/syscall.lo.dep\n+syscall/syscall.lo.dep: $(go_syscall_files)\n+\t$(BUILDDEPS)\n+syscall/syscall.lo: $(go_syscall_files)\n \t$(BUILDPACKAGE)\n syscall/errno.lo: go/syscall/errno.c\n \t$(LTCOMPILE) -c -o $@ $<"}, {"sha": "f88e69e9a445ed28f86598b26d420d15597b36b9", "filename": "libgo/Makefile.in", "status": "modified", "additions": 632, "deletions": 298, "changes": 930, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -449,6 +449,7 @@ exec_prefix = @exec_prefix@\n glibgo_prefixdir = @glibgo_prefixdir@\n glibgo_toolexecdir = @glibgo_toolexecdir@\n glibgo_toolexeclibdir = @glibgo_toolexeclibdir@\n+go_include = @go_include@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -2073,6 +2074,13 @@ GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n \n+# Build the dependencies for a Go package.\n+BUILDDEPS = \\\n+\t$(MKDIR_P) $(@D); \\\n+\t$(SHELL) $(srcdir)/godeps.sh `echo $@ | sed -e 's/.dep$$//'` $^ > $@.tmp; \\\n+\tmv -f $@.tmp $@\n+\n+\n # Build the .go files for a package, generating a .lo file.\n BUILDPACKAGE = \\\n \t$(MKDIR_P) $(@D); \\\n@@ -4361,170 +4369,219 @@ s-epoll: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change epoll.go.tmp epoll.go\n \t$(STAMP) $@\n \n-asn1/asn1.lo: $(go_asn1_files) big.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox time.gox\n+@go_include@ asn1/asn1.lo.dep\n+asn1/asn1.lo.dep: $(go_asn1_files)\n+\t$(BUILDDEPS)\n+asn1/asn1.lo: $(go_asn1_files)\n \t$(BUILDPACKAGE)\n asn1/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: asn1/check\n \n-big/big.lo: $(go_big_files) encoding/binary.gox fmt.gox io.gox os.gox \\\n-\t\trand.gox strings.gox\n+@go_include@ big/big.lo.dep\n+big/big.lo.dep: $(go_big_files)\n+\t$(BUILDDEPS)\n+big/big.lo: $(go_big_files)\n \t$(BUILDPACKAGE)\n big/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: big/check\n \n-bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n+@go_include@ bufio/bufio.lo.dep\n+bufio/bufio.lo.dep: $(go_bufio_files)\n+\t$(BUILDDEPS)\n+bufio/bufio.lo: $(go_bufio_files)\n \t$(BUILDPACKAGE)\n bufio/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: bufio/check\n \n-bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n+@go_include@ bytes/bytes.lo.dep\n+bytes/bytes.lo.dep: $(go_bytes_files)\n+\t$(BUILDDEPS)\n+bytes/bytes.lo: $(go_bytes_files)\n \t$(BUILDPACKAGE)\n bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n \t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: bytes/check\n \n-cmath/cmath.lo: $(go_cmath_files) math.gox\n+@go_include@ cmath/cmath.lo.dep\n+cmath/cmath.lo.dep: $(go_cmath_files)\n+\t$(BUILDDEPS)\n+cmath/cmath.lo: $(go_cmath_files)\n \t$(BUILDPACKAGE)\n cmath/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: cmath/check\n \n-crypto/crypto.lo: $(go_crypto_files) hash.gox\n+@go_include@ crypto/crypto.lo.dep\n+crypto/crypto.lo.dep: $(go_crypto_files)\n+\t$(BUILDDEPS)\n+crypto/crypto.lo: $(go_crypto_files)\n \t$(BUILDPACKAGE)\n crypto/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: crypto/check\n \n-csv/csv.lo: $(go_csv_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n+@go_include@ csv/csv.lo.dep\n+csv/csv.lo.dep: $(go_csv_files)\n+\t$(BUILDDEPS)\n+csv/csv.lo: $(go_csv_files)\n \t$(BUILDPACKAGE)\n csv/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: csv/check\n \n-exec/exec.lo: $(go_exec_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox syscall.gox\n+@go_include@ exec/exec.lo.dep\n+exec/exec.lo.dep: $(go_exec_files)\n+\t$(BUILDDEPS)\n+exec/exec.lo: $(go_exec_files)\n \t$(BUILDPACKAGE)\n exec/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: exec/check\n \n-expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n-\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n+@go_include@ expvar/expvar.lo.dep\n+expvar/expvar.lo.dep: $(go_expvar_files)\n+\t$(BUILDDEPS)\n+expvar/expvar.lo: $(go_expvar_files)\n \t$(BUILDPACKAGE)\n expvar/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: expvar/check\n \n-flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n+@go_include@ flag/flag.lo.dep\n+flag/flag.lo.dep: $(go_flag_files)\n+\t$(BUILDDEPS)\n+flag/flag.lo: $(go_flag_files)\n \t$(BUILDPACKAGE)\n flag/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: flag/check\n \n-fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox math.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox sync.gox unicode.gox utf8.gox\n+@go_include@ fmt/fmt.lo.dep\n+fmt/fmt.lo.dep: $(go_fmt_files)\n+\t$(BUILDDEPS)\n+fmt/fmt.lo: $(go_fmt_files)\n \t$(BUILDPACKAGE)\n fmt/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: fmt/check\n \n-gob/gob.lo: $(go_gob_files) bufio.gox bytes.gox fmt.gox io.gox math.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ gob/gob.lo.dep\n+gob/gob.lo.dep: $(go_gob_files)\n+\t$(BUILDDEPS)\n+gob/gob.lo: $(go_gob_files)\n \t$(BUILDPACKAGE)\n gob/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: gob/check\n \n-hash/hash.lo: $(go_hash_files) io.gox\n+@go_include@ hash/hash.lo.dep\n+hash/hash.lo.dep: $(go_hash_files)\n+\t$(BUILDDEPS)\n+hash/hash.lo: $(go_hash_files)\n \t$(BUILDPACKAGE)\n hash/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: hash/check\n \n-html/html.lo: $(go_html_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\tstrconv.gox strings.gox utf8.gox\n+@go_include@ html/html.lo.dep\n+html/html.lo.dep: $(go_html_files)\n+\t$(BUILDDEPS)\n+html/html.lo: $(go_html_files)\n \t$(BUILDPACKAGE)\n html/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: html/check\n \n-http/http.lo: $(go_http_files) bufio.gox bytes.gox compress/gzip.gox \\\n-\t\tcrypto/rand.gox crypto/tls.gox encoding/base64.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n-\t\tmime.gox mime/multipart.gox net.gox net/textproto.gox os.gox \\\n-\t\tpath.gox path/filepath.gox runtime/debug.gox sort.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox url.gox utf8.gox\n+@go_include@ http/http.lo.dep\n+http/http.lo.dep: $(go_http_files)\n+\t$(BUILDDEPS)\n+http/http.lo: $(go_http_files)\n \t$(BUILDPACKAGE)\n http/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: http/check\n \n-image/image.lo: $(go_image_files) bufio.gox image/color.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+@go_include@ image/image.lo.dep\n+image/image.lo.dep: $(go_image_files)\n+\t$(BUILDDEPS)\n+image/image.lo: $(go_image_files)\n \t$(BUILDPACKAGE)\n image/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: image/check\n \n-io/io.lo: $(go_io_files) os.gox sync.gox\n+@go_include@ io/io.lo.dep\n+io/io.lo.dep: $(go_io_files)\n+\t$(BUILDDEPS)\n+io/io.lo: $(go_io_files)\n \t$(BUILDPACKAGE)\n io/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: io/check\n \n-json/json.lo: $(go_json_files) bytes.gox encoding/base64.gox fmt.gox io.gox \\\n-\t\tmath.gox os.gox reflect.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n+@go_include@ json/json.lo.dep\n+json/json.lo.dep: $(go_json_files)\n+\t$(BUILDDEPS)\n+json/json.lo: $(go_json_files)\n \t$(BUILDPACKAGE)\n json/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: json/check\n \n-log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n-\t\tsync.gox time.gox\n+@go_include@ log/log.lo.dep\n+log/log.lo.dep: $(go_log_files)\n+\t$(BUILDDEPS)\n+log/log.lo: $(go_log_files)\n \t$(BUILDPACKAGE)\n log/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: log/check\n \n+@go_include@ math/math.lo.dep\n+math/math.lo.dep: $(go_math_files)\n+\t$(BUILDDEPS)\n math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n math/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: math/check\n \n-mail/mail.lo: $(go_mail_files) bufio.gox bytes.gox encoding/base64.gox \\\n-\t\tfmt.gox io.gox io/ioutil.gox log.gox net/textproto.gox os.gox \\\n-\t\tstrconv.gox strings.gox time.gox\n+@go_include@ mail/mail.lo.dep\n+mail/mail.lo.dep: $(go_mail_files)\n+\t$(BUILDDEPS)\n+mail/mail.lo: $(go_mail_files)\n \t$(BUILDPACKAGE)\n mail/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: mail/check\n \n-mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox fmt.gox os.gox strings.gox \\\n-\t\tsync.gox unicode.gox\n+@go_include@ mime/mime.lo.dep\n+mime/mime.lo.dep: $(go_mime_files)\n+\t$(BUILDDEPS)\n+mime/mime.lo: $(go_mime_files)\n \t$(BUILDPACKAGE)\n mime/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: mime/check\n \n-net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox rand.gox \\\n-\t\treflect.gox sort.gox strconv.gox strings.gox sync.gox \\\n-\t\tsyscall.gox time.gox\n+@go_include@ net/net.lo.dep\n+net/net.lo.dep: $(go_net_files)\n+\t$(BUILDDEPS)\n+net/net.lo: $(go_net_files)\n \t$(BUILDPACKAGE)\n net/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: net/check\n \n-os/os.lo: $(go_os_files) runtime.gox sync.gox syscall.gox\n+@go_include@ os/os.lo.dep\n+os/os.lo.dep: $(go_os_files)\n+\t$(BUILDDEPS)\n+os/os.lo: $(go_os_files)\n \t$(BUILDPACKAGE)\n os/check: $(CHECK_DEPS)\n \t@$(CHECK)\n@@ -4534,706 +4591,898 @@ signal_unix.go: $(srcdir)/go/os/mkunixsignals.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/mkunixsignals.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n-\t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n-\t\tpath.gox strings.gox\n+@go_include@ patch/patch.lo.dep\n+patch/patch.lo.dep: $(go_patch_files)\n+\t$(BUILDDEPS)\n+patch/patch.lo: $(go_patch_files)\n \t$(BUILDPACKAGE)\n patch/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: patch/check\n \n-path/path.lo: $(go_path_files) os.gox strings.gox utf8.gox\n+@go_include@ path/path.lo.dep\n+path/path.lo.dep: $(go_path_files)\n+\t$(BUILDDEPS)\n+path/path.lo: $(go_path_files)\n \t$(BUILDPACKAGE)\n path/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: path/check\n \n-rand/rand.lo: $(go_rand_files) math.gox sync.gox\n+@go_include@ rand/rand.lo.dep\n+rand/rand.lo.dep: $(go_rand_files)\n+\t$(BUILDDEPS)\n+rand/rand.lo: $(go_rand_files)\n \t$(BUILDPACKAGE)\n rand/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: rand/check\n \n-reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n-\t\tsync.gox\n+@go_include@ reflect/reflect.lo.dep\n+reflect/reflect.lo.dep: $(go_reflect_files)\n+\t$(BUILDDEPS)\n+reflect/reflect.lo: $(go_reflect_files)\n \t$(BUILDPACKAGE)\n reflect/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: reflect/check\n \n-regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox \\\n-\t\tregexp/syntax.gox strconv.gox strings.gox sync.gox utf8.gox\n+@go_include@ regexp/regexp.lo.dep\n+regexp/regexp.lo.dep: $(go_regexp_files)\n+\t$(BUILDDEPS)\n+regexp/regexp.lo: $(go_regexp_files)\n \t$(BUILDPACKAGE)\n regexp/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: regexp/check\n \n-rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n-\t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n-\t\tsync.gox template.gox unicode.gox utf8.gox\n+@go_include@ rpc/rpc.lo.dep\n+rpc/rpc.lo.dep: $(go_rpc_files)\n+\t$(BUILDDEPS)\n+rpc/rpc.lo: $(go_rpc_files)\n \t$(BUILDPACKAGE)\n rpc/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: rpc/check\n \n+@go_include@ runtime/runtime.lo.dep\n+runtime/runtime.lo.dep: $(go_runtime_files)\n+\t$(BUILDDEPS)\n runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n runtime/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: runtime/check\n \n-scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ scanner/scanner.lo.dep\n+scanner/scanner.lo.dep: $(go_scanner_files)\n+\t$(BUILDDEPS)\n+scanner/scanner.lo: $(go_scanner_files)\n \t$(BUILDPACKAGE)\n scanner/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: scanner/check\n \n-smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n-\t\tnet.gox net/textproto.gox os.gox strings.gox\n+@go_include@ smtp/smtp.lo.dep\n+smtp/smtp.lo.dep: $(go_smtp_files)\n+\t$(BUILDDEPS)\n+smtp/smtp.lo: $(go_smtp_files)\n \t$(BUILDPACKAGE)\n smtp/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: smtp/check\n \n-sort/sort.lo: $(go_sort_files) math.gox\n+@go_include@ sort/sort.lo.dep\n+sort/sort.lo.dep: $(go_sort_files)\n+\t$(BUILDDEPS)\n+sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n sort/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sort/check\n \n-strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ strconv/strconv.lo.dep\n+strconv/strconv.lo.dep: $(go_strconv_files)\n+\t$(BUILDDEPS)\n+strconv/strconv.lo: $(go_strconv_files)\n \t$(BUILDPACKAGE)\n strconv/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: strconv/check\n \n-strings/strings.lo: $(go_strings_files) io.gox os.gox unicode.gox utf8.gox\n+@go_include@ strings/strings.lo.dep\n+strings/strings.lo.dep: $(go_strings_files)\n+\t$(BUILDDEPS)\n+strings/strings.lo: $(go_strings_files)\n \t$(BUILDPACKAGE)\n strings/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: strings/check\n \n-sync/sync.lo: $(go_sync_files) runtime.gox sync/atomic.gox\n+@go_include@ sync/sync.lo.dep\n+sync/sync.lo.dep: $(go_sync_files)\n+\t$(BUILDDEPS)\n+sync/sync.lo: $(go_sync_files)\n \t$(BUILDPACKAGE)\n sync/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sync/check\n \n-syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n+@go_include@ syslog/syslog.lo.dep\n+syslog/syslog.lo.dep: $(go_syslog_files)\n+\t$(BUILDDEPS)\n+syslog/syslog.lo: $(go_syslog_files)\n \t$(BUILDPACKAGE)\n syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n syslog/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n+@go_include@ tabwriter/tabwriter.lo.dep\n+tabwriter/tabwriter.lo.dep: $(go_tabwriter_files)\n+\t$(BUILDDEPS)\n+tabwriter/tabwriter.lo: $(go_tabwriter_files)\n \t$(BUILDPACKAGE)\n tabwriter/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: tabwriter/check\n \n-template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox os.gox path/filepath.gox reflect.gox \\\n-\t\truntime.gox strings.gox template/parse.gox unicode.gox \\\n-\t\turl.gox utf8.gox\n+@go_include@ template/template.lo.dep\n+template/template.lo.dep: $(go_template_files)\n+\t$(BUILDDEPS)\n+template/template.lo: $(go_template_files)\n \t$(BUILDPACKAGE)\n template/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: template/check\n \n-testing/testing.lo: $(go_testing_files) bytes.gox flag.gox fmt.gox io.gox \\\n-\t\tos.gox regexp.gox runtime.gox runtime/pprof.gox strings.gox \\\n-\t\tstrconv.gox time.gox\n+@go_include@ testing/testing.lo.dep\n+testing/testing.lo.dep: $(go_testing_files)\n+\t$(BUILDDEPS)\n+testing/testing.lo: $(go_testing_files)\n \t$(BUILDPACKAGE)\n testing/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: testing/check\n \n-time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n-\t\tos.gox strconv.gox sync.gox syscall.gox\n+@go_include@ time/time.lo.dep\n+time/time.lo.dep: $(go_time_files)\n+\t$(BUILDDEPS)\n+time/time.lo: $(go_time_files)\n \t$(BUILDPACKAGE)\n time/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: time/check\n \n+@go_include@ unicode/unicode.lo.dep\n+unicode/unicode.lo.dep: $(go_unicode_files)\n+\t$(BUILDDEPS)\n unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n unicode/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: unicode/check\n \n-url/url.lo: $(go_url_files) os.gox strconv.gox strings.gox\n+@go_include@ url/url.lo.dep\n+url/url.lo.dep: $(go_url_files)\n+\t$(BUILDDEPS)\n+url/url.lo: $(go_url_files)\n \t$(BUILDPACKAGE)\n url/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: url/check\n \n-utf16/utf16.lo: $(go_utf16_files) unicode.gox\n+@go_include@ utf16/utf16.lo.dep\n+utf16/utf16.lo.dep: $(go_utf16_files)\n+\t$(BUILDDEPS)\n+utf16/utf16.lo: $(go_utf16_files)\n \t$(BUILDPACKAGE)\n utf16/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: utf16/check\n \n-utf8/utf8.lo: $(go_utf8_files) unicode.gox\n+@go_include@ utf8/utf8.lo.dep\n+utf8/utf8.lo.dep: $(go_utf8_files)\n+\t$(BUILDDEPS)\n+utf8/utf8.lo: $(go_utf8_files)\n \t$(BUILDPACKAGE)\n utf8/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: utf8/check\n \n-websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n-\t\tcrypto/md5.gox crypto/rand.gox crypto/sha1.gox crypto/tls.gox \\\n-\t\tencoding/base64.gox encoding/binary.gox fmt.gox http.gox \\\n-\t\tio.gox io/ioutil.gox json.gox net.gox os.gox rand.gox \\\n-\t\tstrings.gox strconv.gox sync.gox url.gox\n+@go_include@ websocket/websocket.lo.dep\n+websocket/websocket.lo.dep: $(go_websocket_files)\n+\t$(BUILDDEPS)\n+websocket/websocket.lo: $(go_websocket_files)\n \t$(BUILDPACKAGE)\n websocket/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: websocket/check\n \n-xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ xml/xml.lo.dep\n+xml/xml.lo.dep: $(go_xml_files)\n+\t$(BUILDDEPS)\n+xml/xml.lo: $(go_xml_files)\n \t$(BUILDPACKAGE)\n xml/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: xml/check\n \n-archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox io/ioutil.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+@go_include@ archive/tar.lo.dep\n+archive/tar.lo.dep: $(go_archive_tar_files)\n+\t$(BUILDDEPS)\n+archive/tar.lo: $(go_archive_tar_files)\n \t$(BUILDPACKAGE)\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t@$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/zip.lo: $(go_archive_zip_files) bufio.gox compress/flate.gox \\\n-\t\tencoding/binary.gox hash.gox hash/crc32.gox \\\n-\t\tencoding/binary.gox io.gox io/ioutil.gox os.gox time.gox\n+@go_include@ archive/zip.lo.dep\n+archive/zip.lo.dep: $(go_archive_zip_files)\n+\t$(BUILDDEPS)\n+archive/zip.lo: $(go_archive_zip_files)\n \t$(BUILDPACKAGE)\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t@$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/bzip2.lo: $(go_compress_bzip2_files) bufio.gox io.gox os.gox sort.gox\n+@go_include@ compress/bzip2.lo.dep\n+compress/bzip2.lo.dep: $(go_compress_bzip2_files)\n+\t$(BUILDDEPS)\n+compress/bzip2.lo: $(go_compress_bzip2_files)\n \t$(BUILDPACKAGE)\n compress/bzip2/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/bzip2\n \t@$(CHECK)\n .PHONY: compress/bzip2/check\n \n-compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n-\t\tos.gox sort.gox strconv.gox\n+@go_include@ compress/flate.lo.dep\n+compress/flate.lo.dep: $(go_compress_flate_files)\n+\t$(BUILDDEPS)\n+compress/flate.lo: $(go_compress_flate_files)\n \t$(BUILDPACKAGE)\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t@$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/crc32.gox io.gox os.gox\n+@go_include@ compress/gzip.lo.dep\n+compress/gzip.lo.dep: $(go_compress_gzip_files)\n+\t$(BUILDDEPS)\n+compress/gzip.lo: $(go_compress_gzip_files)\n \t$(BUILDPACKAGE)\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t@$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/lzw.lo: $(go_compress_lzw_files) bufio.gox fmt.gox io.gox os.gox\n+@go_include@ compress/lzw.lo.dep\n+compress/lzw.lo.dep: $(go_compress_lzw_files)\n+\t$(BUILDDEPS)\n+compress/lzw.lo: $(go_compress_lzw_files)\n \t$(BUILDPACKAGE)\n compress/lzw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/lzw\n \t@$(CHECK)\n .PHONY: compress/lzw/check\n \n-compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/adler32.gox io.gox os.gox\n+@go_include@ compress/zlib.lo.dep\n+compress/zlib.lo.dep: $(go_compress_zlib_files)\n+\t$(BUILDDEPS)\n+compress/zlib.lo: $(go_compress_zlib_files)\n \t$(BUILDPACKAGE)\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t@$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/heap.lo: $(go_container_heap_files) sort.gox\n+@go_include@ container/heap.lo.dep\n+container/heap.lo.dep: $(go_container_heap_files)\n+\t$(BUILDDEPS)\n+container/heap.lo: $(go_container_heap_files)\n \t$(BUILDPACKAGE)\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t@$(CHECK)\n .PHONY: container/heap/check\n \n+@go_include@ container/list.lo.dep\n+container/list.lo.dep: $(go_container_list_files)\n+\t$(BUILDDEPS)\n container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t@$(CHECK)\n .PHONY: container/list/check\n \n+@go_include@ container/ring.lo.dep\n+container/ring.lo.dep: $(go_container_ring_files)\n+\t$(BUILDDEPS)\n container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t@$(CHECK)\n .PHONY: container/ring/check\n \n-crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n+@go_include@ crypto/aes.lo.dep\n+crypto/aes.lo.dep: $(go_crypto_aes_files)\n+\t$(BUILDDEPS)\n+crypto/aes.lo: $(go_crypto_aes_files)\n \t$(BUILDPACKAGE)\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t@$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/bcrypt.lo: $(go_crypto_bcrypt_files) crypto/blowfish.gox \\\n-\t\tcrypto/rand.gox crypto/subtle.gox encoding/base64.gox \\\n-\t\tfmt.gox io.gox os.gox strconv.gox\n+@go_include@ crypto/bcrypt.lo.dep\n+crypto/bcrypt.lo.dep: $(go_crypto_bcrypt_files)\n+\t$(BUILDDEPS)\n+crypto/bcrypt.lo: $(go_crypto_bcrypt_files)\n \t$(BUILDPACKAGE)\n crypto/bcrypt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/bcrypt\n \t@$(CHECK)\n .PHONY: crypto/bcrypt/check\n \n-crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n+@go_include@ crypto/blowfish.lo.dep\n+crypto/blowfish.lo.dep: $(go_crypto_blowfish_files)\n+\t$(BUILDDEPS)\n+crypto/blowfish.lo: $(go_crypto_blowfish_files)\n \t$(BUILDPACKAGE)\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t@$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n+@go_include@ crypto/cast5.lo.dep\n+crypto/cast5.lo.dep: $(go_crypto_cast5_files)\n+\t$(BUILDDEPS)\n+crypto/cast5.lo: $(go_crypto_cast5_files)\n \t$(BUILDPACKAGE)\n crypto/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t@$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n+@go_include@ crypto/cipher.lo.dep\n+crypto/cipher.lo.dep: $(go_crypto_cipher_files)\n+\t$(BUILDDEPS)\n+crypto/cipher.lo: $(go_crypto_cipher_files)\n \t$(BUILDPACKAGE)\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t@$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/des.lo: $(go_crypto_des_files) encoding/binary.gox os.gox strconv.gox\n+@go_include@ crypto/des.lo.dep\n+crypto/des.lo.dep: $(go_crypto_des_files)\n+\t$(BUILDDEPS)\n+crypto/des.lo: $(go_crypto_des_files)\n \t$(BUILDPACKAGE)\n crypto/des/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/des\n \t@$(CHECK)\n .PHONY: crypto/des/check\n \n-crypto/dsa.lo: $(go_crypto_dsa_files) big.gox io.gox os.gox\n+@go_include@ crypto/dsa.lo.dep\n+crypto/dsa.lo.dep: $(go_crypto_dsa_files)\n+\t$(BUILDDEPS)\n+crypto/dsa.lo: $(go_crypto_dsa_files)\n \t$(BUILDPACKAGE)\n crypto/dsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/dsa\n \t@$(CHECK)\n .PHONY: crypto/dsa/check\n \n-crypto/ecdsa.lo: $(go_crypto_ecdsa_files) big.gox crypto/elliptic.gox io.gox \\\n-\t\tos.gox\n+@go_include@ crypto/ecdsa.lo.dep\n+crypto/ecdsa.lo.dep: $(go_crypto_ecdsa_files)\n+\t$(BUILDDEPS)\n+crypto/ecdsa.lo: $(go_crypto_ecdsa_files)\n \t$(BUILDPACKAGE)\n crypto/ecdsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ecdsa\n \t@$(CHECK)\n .PHONY: crypto/ecdsa/check\n \n-crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n+@go_include@ crypto/elliptic.lo.dep\n+crypto/elliptic.lo.dep: $(go_crypto_elliptic_files)\n+\t$(BUILDDEPS)\n+crypto/elliptic.lo: $(go_crypto_elliptic_files)\n \t$(BUILDPACKAGE)\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t@$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n-\t\tcrypto/sha256.gox hash.gox os.gox\n+@go_include@ crypto/hmac.lo.dep\n+crypto/hmac.lo.dep: $(go_crypto_hmac_files)\n+\t$(BUILDDEPS)\n+crypto/hmac.lo: $(go_crypto_hmac_files)\n \t$(BUILDPACKAGE)\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t@$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/md4.lo: $(go_crypto_md4_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/md4.lo.dep\n+crypto/md4.lo.dep: $(go_crypto_md4_files)\n+\t$(BUILDDEPS)\n+crypto/md4.lo: $(go_crypto_md4_files)\n \t$(BUILDPACKAGE)\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t@$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/md5.lo: $(go_crypto_md5_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/md5.lo.dep\n+crypto/md5.lo.dep: $(go_crypto_md5_files)\n+\t$(BUILDDEPS)\n+crypto/md5.lo: $(go_crypto_md5_files)\n \t$(BUILDPACKAGE)\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t@$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto.gox crypto/rsa.gox \\\n-\t\tcrypto/sha1.gox crypto/x509.gox crypto/x509/pkix.gox os.gox \\\n-\t\ttime.gox\n+@go_include@ crypto/ocsp.lo.dep\n+crypto/ocsp.lo.dep: $(go_crypto_ocsp_files)\n+\t$(BUILDDEPS)\n+crypto/ocsp.lo: $(go_crypto_ocsp_files)\n \t$(BUILDPACKAGE)\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t@$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox \\\n-\t\tcrypto/openpgp/armor.gox crypto/openpgp/error.gox \\\n-\t\tcrypto/openpgp/packet.gox crypto/openpgp/s2k.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha256.gox hash.gox \\\n-\t\tio.gox os.gox strconv.gox time.gox\n+@go_include@ crypto/openpgp.lo.dep\n+crypto/openpgp.lo.dep: $(go_crypto_openpgp_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp.lo: $(go_crypto_openpgp_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp\n \t@$(CHECK)\n .PHONY: crypto/openpgp/check\n \n-crypto/rand.lo: $(go_crypto_rand_files) big.gox bufio.gox crypto/aes.gox \\\n-\t\tio.gox os.gox sync.gox time.gox\n+@go_include@ crypto/rand.lo.dep\n+crypto/rand.lo.dep: $(go_crypto_rand_files)\n+\t$(BUILDDEPS)\n+crypto/rand.lo: $(go_crypto_rand_files)\n \t$(BUILDPACKAGE)\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t@$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n+@go_include@ crypto/rc4.lo.dep\n+crypto/rc4.lo.dep: $(go_crypto_rc4_files)\n+\t$(BUILDDEPS)\n+crypto/rc4.lo: $(go_crypto_rc4_files)\n \t$(BUILDPACKAGE)\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t@$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/ripemd160.lo: $(go_crypto_ripemd160_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/ripemd160.lo.dep\n+crypto/ripemd160.lo.dep: $(go_crypto_ripemd160_files)\n+\t$(BUILDDEPS)\n+crypto/ripemd160.lo: $(go_crypto_ripemd160_files)\n \t$(BUILDPACKAGE)\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t@$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto.gox crypto/rand.gox \\\n-\t\tcrypto/sha1.gox crypto/subtle.gox encoding/hex.gox hash.gox \\\n-\t\tio.gox os.gox\n+@go_include@ crypto/rsa.lo.dep\n+crypto/rsa.lo.dep: $(go_crypto_rsa_files)\n+\t$(BUILDDEPS)\n+crypto/rsa.lo: $(go_crypto_rsa_files)\n \t$(BUILDPACKAGE)\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t@$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/sha1.lo: $(go_crypto_sha1_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha1.lo.dep\n+crypto/sha1.lo.dep: $(go_crypto_sha1_files)\n+\t$(BUILDDEPS)\n+crypto/sha1.lo: $(go_crypto_sha1_files)\n \t$(BUILDPACKAGE)\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t@$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/sha256.lo: $(go_crypto_sha256_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha256.lo.dep\n+crypto/sha256.lo.dep: $(go_crypto_sha256_files)\n+\t$(BUILDDEPS)\n+crypto/sha256.lo: $(go_crypto_sha256_files)\n \t$(BUILDPACKAGE)\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t@$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/sha512.lo: $(go_crypto_sha512_files) crypto.gox hash.gox os.gox\n+@go_include@ crypto/sha512.lo.dep\n+crypto/sha512.lo.dep: $(go_crypto_sha512_files)\n+\t$(BUILDDEPS)\n+crypto/sha512.lo: $(go_crypto_sha512_files)\n \t$(BUILDPACKAGE)\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t@$(CHECK)\n .PHONY: crypto/sha512/check\n \n+@go_include@ crypto/subtle.lo.dep\n+crypto/subtle.lo.dep: $(go_crypto_subtle_files)\n+\t$(BUILDDEPS)\n crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t@$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/tls.lo: $(go_crypto_tls_files) big.gox bytes.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cipher.gox crypto/des.gox \\\n-\t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n-\t\tcrypto/rand.gox crypto/rc4.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox crypto/x509.gox crypto/x509/pkix.gox \\\n-\t\tencoding/pem.gox hash.gox io.gox io/ioutil.gox net.gox os.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox\n+@go_include@ crypto/tls.lo.dep\n+crypto/tls.lo.dep: $(go_crypto_tls_files)\n+\t$(BUILDDEPS)\n+crypto/tls.lo: $(go_crypto_tls_files)\n \t$(BUILDPACKAGE)\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t@$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n+@go_include@ crypto/twofish.lo.dep\n+crypto/twofish.lo.dep: $(go_crypto_twofish_files)\n+\t$(BUILDDEPS)\n+crypto/twofish.lo: $(go_crypto_twofish_files)\n \t$(BUILDPACKAGE)\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t@$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox bytes.gox crypto.gox \\\n-\t\tcrypto/dsa.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/x509/pkix.gox encoding/pem.gox os.gox strings.gox \\\n-\t\ttime.gox\n+@go_include@ crypto/x509.lo.dep\n+crypto/x509.lo.dep: $(go_crypto_x509_files)\n+\t$(BUILDDEPS)\n+crypto/x509.lo: $(go_crypto_x509_files)\n \t$(BUILDPACKAGE)\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t@$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n+@go_include@ crypto/xtea.lo.dep\n+crypto/xtea.lo.dep: $(go_crypto_xtea_files)\n+\t$(BUILDDEPS)\n+crypto/xtea.lo: $(go_crypto_xtea_files)\n \t$(BUILDPACKAGE)\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t@$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bufio.gox bytes.gox \\\n-\t\tcrypto/openpgp/error.gox encoding/base64.gox io.gox os.gox\n+@go_include@ crypto/openpgp/armor.lo.dep\n+crypto/openpgp/armor.lo.dep: $(go_crypto_openpgp_armor_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t@$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/elgamal.lo: $(go_crypto_openpgp_elgamal_files) big.gox \\\n-\t\tcrypto/rand.gox crypto/subtle.gox io.gox os.gox\n+@go_include@ crypto/openpgp/elgamal.lo.dep\n+crypto/openpgp/elgamal.lo.dep: $(go_crypto_openpgp_elgamal_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/elgamal.lo: $(go_crypto_openpgp_elgamal_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/elgamal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/elgamal\n \t@$(CHECK)\n .PHONY: crypto/openpgp/elgamal/check\n \n-crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files) strconv.gox\n+@go_include@ crypto/openpgp/error.lo.dep\n+crypto/openpgp/error.lo.dep: $(go_crypto_openpgp_error_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t@$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n-\t\tcompress/flate.gox compress/zlib.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cast5.gox crypto/cipher.gox \\\n-\t\tcrypto/dsa.gox crypto/openpgp/elgamal.gox \\\n-\t\tcrypto/openpgp/error.gox crypto/openpgp/s2k.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox encoding/binary.gox fmt.gox \\\n-\t\thash.gox io.gox io/ioutil.gox os.gox strconv.gox strings.gox\n+@go_include@ crypto/openpgp/packet.lo.dep\n+crypto/openpgp/packet.lo.dep: $(go_crypto_openpgp_packet_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/packet/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/packet\n \t@$(CHECK)\n .PHONY: crypto/openpgp/packet/check\n \n-crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n-\t\tcrypto/md5.gox crypto/openpgp/error.gox crypto/rand.gox \\\n-\t\tcrypto/ripemd160.gox crypto/sha1.gox crypto/sha256.gox \\\n-\t\tcrypto/sha512.gox hash.gox io.gox os.gox\n+@go_include@ crypto/openpgp/s2k.lo.dep\n+crypto/openpgp/s2k.lo.dep: $(go_crypto_openpgp_s2k_files)\n+\t$(BUILDDEPS)\n+crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files)\n \t$(BUILDPACKAGE)\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t@$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-crypto/x509/pkix.lo: $(go_crypto_x509_pkix_files) asn1.gox big.gox time.gox\n+@go_include@ crypto/x509/pkix.lo.dep\n+crypto/x509/pkix.lo.dep: $(go_crypto_x509_pkix_files)\n+\t$(BUILDDEPS)\n+crypto/x509/pkix.lo: $(go_crypto_x509_pkix_files)\n \t$(BUILDPACKAGE)\n crypto/x509/pkix/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509/pkix\n \t@$(CHECK)\n .PHONY: crypto/x509/pkix/check\n \n-debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n+@go_include@ debug/dwarf.lo.dep\n+debug/dwarf.lo.dep: $(go_debug_dwarf_files)\n+\t$(BUILDDEPS)\n+debug/dwarf.lo: $(go_debug_dwarf_files)\n \t$(BUILDPACKAGE)\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t@$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/elf.lo.dep\n+debug/elf.lo.dep: $(go_debug_elf_files)\n+\t$(BUILDDEPS)\n+debug/elf.lo: $(go_debug_elf_files)\n \t$(BUILDPACKAGE)\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t@$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+@go_include@ debug/gosym.lo.dep\n+debug/gosym.lo.dep: $(go_debug_gosym_files)\n+\t$(BUILDDEPS)\n+debug/gosym.lo: $(go_debug_gosym_files)\n \t$(BUILDPACKAGE)\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t@$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/macho.lo.dep\n+debug/macho.lo.dep: $(go_debug_macho_files)\n+\t$(BUILDDEPS)\n+debug/macho.lo: $(go_debug_macho_files)\n \t$(BUILDPACKAGE)\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t@$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n-\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+@go_include@ debug/pe.lo.dep\n+debug/pe.lo.dep: $(go_debug_pe_files)\n+\t$(BUILDDEPS)\n+debug/pe.lo: $(go_debug_pe_files)\n \t$(BUILDPACKAGE)\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t@$(CHECK)\n .PHONY: debug/pe/check\n \n-encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/ascii85.lo.dep\n+encoding/ascii85.lo.dep: $(go_encoding_ascii85_files)\n+\t$(BUILDDEPS)\n+encoding/ascii85.lo: $(go_encoding_ascii85_files)\n \t$(BUILDPACKAGE)\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t@$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/base32.lo.dep\n+encoding/base32.lo.dep: $(go_encoding_base32_files)\n+\t$(BUILDDEPS)\n+encoding/base32.lo: $(go_encoding_base32_files)\n \t$(BUILDPACKAGE)\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t@$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n+@go_include@ encoding/base64.lo.dep\n+encoding/base64.lo.dep: $(go_encoding_base64_files)\n+\t$(BUILDDEPS)\n+encoding/base64.lo: $(go_encoding_base64_files)\n \t$(BUILDPACKAGE)\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t@$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n-\t\treflect.gox\n+@go_include@ encoding/binary.lo.dep\n+encoding/binary.lo.dep: $(go_encoding_binary_files)\n+\t$(BUILDDEPS)\n+encoding/binary.lo: $(go_encoding_binary_files)\n \t$(BUILDPACKAGE)\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t@$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+@go_include@ encoding/git85.lo.dep\n+encoding/git85.lo.dep: $(go_encoding_git85_files)\n+\t$(BUILDDEPS)\n+encoding/git85.lo: $(go_encoding_git85_files)\n \t$(BUILDPACKAGE)\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t@$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/hex.lo: $(go_encoding_hex_files) bytes.gox io.gox os.gox strconv.gox\n+@go_include@ encoding/hex.lo.dep\n+encoding/hex.lo.dep: $(go_encoding_hex_files)\n+\t$(BUILDDEPS)\n+encoding/hex.lo: $(go_encoding_hex_files)\n \t$(BUILDPACKAGE)\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t@$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n+@go_include@ encoding/pem.lo.dep\n+encoding/pem.lo.dep: $(go_encoding_pem_files)\n+\t$(BUILDDEPS)\n+encoding/pem.lo: $(go_encoding_pem_files)\n \t$(BUILDPACKAGE)\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t@$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/ebnf.lo: $(go_exp_ebnf_files) scanner.gox go/token.gox os.gox \\\n-\t\tstrconv.gox unicode.gox utf8.gox\n+@go_include@ exp/ebnf.lo.dep\n+exp/ebnf.lo.dep: $(go_exp_ebnf_files)\n+\t$(BUILDDEPS)\n+exp/ebnf.lo: $(go_exp_ebnf_files)\n \t$(BUILDPACKAGE)\n exp/ebnf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/ebnf\n \t@$(CHECK)\n .PHONY: exp/ebnf/check\n \n-exp/gui.lo: $(go_exp_gui_files) image.gox image/draw.gox os.gox\n+@go_include@ exp/gui.lo.dep\n+exp/gui.lo.dep: $(go_exp_gui_files)\n+\t$(BUILDDEPS)\n+exp/gui.lo: $(go_exp_gui_files)\n \t$(BUILDPACKAGE)\n exp/gui/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/gui\n \t@$(CHECK)\n .PHONY: exp/gui/check\n \n-exp/norm.lo: $(go_exp_norm_files) io.gox os.gox utf8.gox\n+@go_include@ exp/norm.lo.dep\n+exp/norm.lo.dep: $(go_exp_norm_files)\n+\t$(BUILDDEPS)\n+exp/norm.lo: $(go_exp_norm_files)\n \t$(BUILDPACKAGE)\n exp/norm/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/norm\n \t@$(CHECK)\n .PHONY: exp/norm/check\n \n-exp/spdy.lo: $(go_exp_spdy_files) bytes.gox compress/zlib.gox \\\n-\t\tencoding/binary.gox http.gox io.gox os.gox strings.gox\n+@go_include@ exp/spdy.lo.dep\n+exp/spdy.lo.dep: $(go_exp_spdy_files)\n+\t$(BUILDDEPS)\n+exp/spdy.lo: $(go_exp_spdy_files)\n \t$(BUILDPACKAGE)\n exp/spdy/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/spdy\n \t@$(CHECK)\n .PHONY: exp/spdy/check\n \n-exp/sql.lo: $(go_exp_sql_files) exp/sql/driver.gox fmt.gox os.gox reflect.gox \\\n-\t\truntime.gox strconv.gox sync.gox\n+@go_include@ exp/sql.lo.dep\n+exp/sql.lo.dep: $(go_exp_sql_files)\n+\t$(BUILDDEPS)\n+exp/sql.lo: $(go_exp_sql_files)\n \t$(BUILDPACKAGE)\n exp/sql/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/sql\n \t@$(CHECK)\n .PHONY: exp/sql/check\n \n-exp/ssh.lo: $(go_exp_ssh_files) big.gox bufio.gox bytes.gox crypto.gox \\\n-\t\tcrypto/aes.gox crypto/cipher.gox crypto/hmac.gox \\\n-\t\tcrypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n-\t\tcrypto/subtle.gox crypto/x509.gox encoding/pem.gox hash.gox \\\n-\t\tio.gox net.gox os.gox reflect.gox strconv.gox sync.gox\n+@go_include@ exp/ssh.lo.dep\n+exp/ssh.lo.dep: $(go_exp_ssh_files)\n+\t$(BUILDDEPS)\n+exp/ssh.lo: $(go_exp_ssh_files)\n \t$(BUILDPACKAGE)\n exp/ssh/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/ssh\n \t@$(CHECK)\n .PHONY: exp/ssh/check\n \n-exp/terminal.lo: $(go_exp_terminal_files) io.gox os.gox syscall.gox\n+@go_include@ exp/terminal.lo.dep\n+exp/terminal.lo.dep: $(go_exp_terminal_files)\n+\t$(BUILDDEPS)\n+exp/terminal.lo: $(go_exp_terminal_files)\n \t$(BUILDPACKAGE)\n exp/terminal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/terminal\n \t@$(CHECK)\n .PHONY: exp/terminal/check\n \n-exp/types.lo: $(go_exp_types_files) big.gox bufio.gox fmt.gox go/ast.gox \\\n-\t\tgo/token.gox io.gox os.gox path/filepath.gox runtime.gox \\\n-\t\tscanner.gox sort.gox strconv.gox strings.gox\n+@go_include@ exp/types.lo.dep\n+exp/types.lo.dep: $(go_exp_types_files)\n+\t$(BUILDDEPS)\n+exp/types.lo: $(go_exp_types_files)\n \t$(BUILDPACKAGE)\n exp/types/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/types\n \t@$(CHECK)\n .PHONY: exp/types/check\n \n-exp/gui/x11.lo: $(go_exp_gui_x11_files) bufio.gox exp/gui.gox image.gox \\\n-\t\timage/draw.gox io.gox log.gox net.gox os.gox strconv.gox \\\n-\t\tstrings.gox time.gox\n+@go_include@ exp/gui/x11.lo.dep\n+exp/gui/x11.lo.dep: $(go_exp_gui_x11_files)\n+\t$(BUILDDEPS)\n+exp/gui/x11.lo: $(go_exp_gui_x11_files)\n \t$(BUILDPACKAGE)\n exp/gui/x11/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/gui/x11\n \t@$(CHECK)\n .PHONY: exp/gui/x11/check\n \n-exp/inotify.lo: $(go_exp_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n+@go_include@ exp/inotify.lo.dep\n+exp/inotify.lo.dep: $(go_exp_inotify_files)\n+\t$(BUILDDEPS)\n+exp/inotify.lo: $(go_exp_inotify_files)\n \t$(BUILDPACKAGE)\n exp/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/inotify\n \t@$(CHECK)\n .PHONY: exp/inotify/check\n \n-exp/sql/driver.lo: $(go_exp_sql_driver_files) fmt.gox os.gox reflect.gox \\\n-\t\tstrconv.gox\n+@go_include@ exp/sql/driver.lo.dep\n+exp/sql/driver.lo.dep: $(go_exp_sql_driver_files)\n+\t$(BUILDDEPS)\n+exp/sql/driver.lo: $(go_exp_sql_driver_files)\n \t$(BUILDPACKAGE)\n exp/sql/driver/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/sql/driver\n \t@$(CHECK)\n .PHONY: exp/sql/driver/check\n \n-exp/template/html.lo: $(go_exp_template_html_files) bytes.gox fmt.gox \\\n-\t\thtml.gox json.gox os.gox strings.gox template.gox \\\n-\t\ttemplate/parse.gox unicode.gox utf8.gox \n+@go_include@ exp/template/html.lo.dep\n+exp/template/html.lo.dep: $(go_exp_template_html_files)\n+\t$(BUILDDEPS)\n+exp/template/html.lo: $(go_exp_template_html_files)\n \t$(BUILDPACKAGE)\n exp/template/html/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/template/html\n \t@$(CHECK)\n .PHONY: exp/template/html/check\n \n-go/ast.lo: $(go_go_ast_files) bytes.gox fmt.gox go/scanner.gox go/token.gox \\\n-\t\tio.gox os.gox reflect.gox strconv.gox unicode.gox utf8.gox\n+@go_include@ go/ast.lo.dep\n+go/ast.lo.dep: $(go_go_ast_files)\n+\t$(BUILDDEPS)\n+go/ast.lo: $(go_go_ast_files)\n \t$(BUILDPACKAGE)\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t@$(CHECK)\n .PHONY: go/ast/check\n \n-go/build.lo: $(go_go_build_files) bytes.gox exec.gox fmt.gox go/ast.gox \\\n-\t\tgo/doc.gox go/parser.gox go/token.gox io/ioutil.gox log.gox \\\n-\t\tos.gox path.gox path/filepath.gox regexp.gox runtime.gox \\\n-\t\tsort.gox strconv.gox strings.gox runtime.gox unicode.gox\n+@go_include@ go/build.lo.dep\n+go/build.lo.dep: $(go_go_build_files)\n+\t$(BUILDDEPS)\n+go/build.lo: $(go_go_build_files)\n \t$(BUILDPACKAGE)\n go/build/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/build\n@@ -5249,292 +5498,365 @@ s-syslist: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change syslist.go.tmp syslist.go\n \t$(STAMP) $@\n \n-go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n-\t\tsort.gox strings.gox template.gox unicode.gox utf8.gox\n+@go_include@ go/doc.lo.dep\n+go/doc.lo.dep: $(go_go_doc_files)\n+\t$(BUILDDEPS)\n+go/doc.lo: $(go_go_doc_files)\n \t$(BUILDPACKAGE)\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t@$(CHECK)\n .PHONY: go/doc/check\n \n-go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n-\t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n-\t\tpath/filepath.gox strings.gox\n+@go_include@ go/parser.lo.dep\n+go/parser.lo.dep: $(go_go_parser_files)\n+\t$(BUILDDEPS)\n+go/parser.lo: $(go_go_parser_files)\n \t$(BUILDPACKAGE)\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t@$(CHECK)\n .PHONY: go/parser/check\n \n-go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n-\t\tgo/token.gox io.gox os.gox path/filepath.gox reflect.gox \\\n-\t\tstrings.gox tabwriter.gox\n+@go_include@ go/printer.lo.dep\n+go/printer.lo.dep: $(go_go_printer_files)\n+\t$(BUILDDEPS)\n+go/printer.lo: $(go_go_printer_files)\n \t$(BUILDPACKAGE)\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t@$(CHECK)\n .PHONY: go/printer/check\n \n-go/scanner.lo: $(go_go_scanner_files) bytes.gox fmt.gox go/token.gox io.gox \\\n-\t\tos.gox path/filepath.gox sort.gox strconv.gox unicode.gox \\\n-\t\tutf8.gox\n+@go_include@ go/scanner.lo.dep\n+go/scanner.lo.dep: $(go_go_scanner_files)\n+\t$(BUILDDEPS)\n+go/scanner.lo: $(go_go_scanner_files)\n \t$(BUILDPACKAGE)\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t@$(CHECK)\n .PHONY: go/scanner/check\n \n-go/token.lo: $(go_go_token_files) fmt.gox gob.gox io.gox os.gox sort.gox \\\n-\t\tstrconv.gox sync.gox\n+@go_include@ go/token.lo.dep\n+go/token.lo.dep: $(go_go_token_files)\n+\t$(BUILDDEPS)\n+go/token.lo: $(go_go_token_files)\n \t$(BUILDPACKAGE)\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t@$(CHECK)\n .PHONY: go/token/check\n \n-hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n+@go_include@ hash/adler32.lo.dep\n+hash/adler32.lo.dep: $(go_hash_adler32_files)\n+\t$(BUILDDEPS)\n+hash/adler32.lo: $(go_hash_adler32_files)\n \t$(BUILDPACKAGE)\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t@$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox sync.gox\n+@go_include@ hash/crc32.lo.dep\n+hash/crc32.lo.dep: $(go_hash_crc32_files)\n+\t$(BUILDDEPS)\n+hash/crc32.lo: $(go_hash_crc32_files)\n \t$(BUILDPACKAGE)\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t@$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n+@go_include@ hash/crc64.lo.dep\n+hash/crc64.lo.dep: $(go_hash_crc64_files)\n+\t$(BUILDDEPS)\n+hash/crc64.lo: $(go_hash_crc64_files)\n \t$(BUILDPACKAGE)\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t@$(CHECK)\n .PHONY: hash/crc64/check\n \n-hash/fnv.lo: $(go_hash_fnv_files) encoding/binary.gox hash.gox os.gox\n+@go_include@ hash/fnv.lo.dep\n+hash/fnv.lo.dep: $(go_hash_fnv_files)\n+\t$(BUILDDEPS)\n+hash/fnv.lo: $(go_hash_fnv_files)\n \t$(BUILDPACKAGE)\n hash/fnv/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/fnv\n \t@$(CHECK)\n .PHONY: hash/fnv/check\n \n-http/cgi.lo: $(go_http_cgi_files) bufio.gox crypto/tls.gox exec.gox fmt.gox \\\n-\t\thttp.gox net.gox io.gox io/ioutil.gox log.gox os.gox \\\n-\t\tpath/filepath.gox regexp.gox strconv.gox strings.gox url.gox\n+@go_include@ http/cgi.lo.dep\n+http/cgi.lo.dep: $(go_http_cgi_files)\n+\t$(BUILDDEPS)\n+http/cgi.lo: $(go_http_cgi_files)\n \t$(BUILDPACKAGE)\n http/cgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/cgi\n \t@$(CHECK)\n .PHONY: http/cgi/check\n \n-http/fcgi.lo: $(go_http_fcgi_files) bufio.gox bytes.gox encoding/binary.gox \\\n-\t\tfmt.gox http.gox http/cgi.gox io.gox net.gox os.gox sync.gox \\\n-\t\ttime.gox\n+@go_include@ http/fcgi.lo.dep\n+http/fcgi.lo.dep: $(go_http_fcgi_files)\n+\t$(BUILDDEPS)\n+http/fcgi.lo: $(go_http_fcgi_files)\n \t$(BUILDPACKAGE)\n http/fcgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/fcgi\n \t@$(CHECK)\n .PHONY: http/fcgi/check\n \n-http/httptest.lo: $(go_http_httptest_files) bytes.gox crypto/rand.gox \\\n-\t\tcrypto/tls.gox flag.gox fmt.gox http.gox net.gox os.gox \\\n-\t\ttime.gox\n+@go_include@ http/httptest.lo.dep\n+http/httptest.lo.dep: $(go_http_httptest_files)\n+\t$(BUILDDEPS)\n+http/httptest.lo: $(go_http_httptest_files)\n \t$(BUILDPACKAGE)\n http/httptest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/httptest\n \t@$(CHECK)\n .PHONY: http/httptest/check\n \n-http/pprof.lo: $(go_http_pprof_files) bufio.gox bytes.gox fmt.gox http.gox \\\n-\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+@go_include@ http/pprof.lo.dep\n+http/pprof.lo.dep: $(go_http_pprof_files)\n+\t$(BUILDDEPS)\n+http/pprof.lo: $(go_http_pprof_files)\n \t$(BUILDPACKAGE)\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t@$(CHECK)\n .PHONY: http/pprof/check\n \n-image/bmp.lo: $(go_image_bmp_files) image.gox image/color.gox io.gox os.gox\n+@go_include@ image/bmp.lo.dep\n+image/bmp.lo.dep: $(go_image_bmp_files)\n+\t$(BUILDDEPS)\n+image/bmp.lo: $(go_image_bmp_files)\n \t$(BUILDPACKAGE)\n image/bmp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/bmp\n \t@$(CHECK)\n .PHONY: image/bmp/check\n \n+@go_include@ image/color.lo.dep\n+image/color.lo.dep: $(go_image_color_files)\n+\t$(BUILDDEPS)\n image/color.lo: $(go_image_color_files)\n \t$(BUILDPACKAGE)\n image/color/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/color\n \t@$(CHECK)\n .PHONY: image/color/check\n \n-image/draw.lo: $(go_image_draw_files) image.gox image/color.gox image/ycbcr.gox\n+@go_include@ image/draw.lo.dep\n+image/draw.lo.dep: $(go_image_draw_files)\n+\t$(BUILDDEPS)\n+image/draw.lo: $(go_image_draw_files)\n \t$(BUILDPACKAGE)\n image/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/draw\n \t@$(CHECK)\n .PHONY: image/draw/check\n \n-image/gif.lo: $(go_image_gif_files) bufio.gox compress/lzw.gox fmt.gox \\\n-\t\timage.gox image/color.gox io.gox os.gox\n+@go_include@ image/gif.lo.dep\n+image/gif.lo.dep: $(go_image_gif_files)\n+\t$(BUILDDEPS)\n+image/gif.lo: $(go_image_gif_files)\n \t$(BUILDPACKAGE)\n image/gif/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/gif\n \t@$(CHECK)\n .PHONY: image/gif/check\n \n-image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox image/color.gox \\\n-\t\timage/ycbcr.gox io.gox os.gox\n+@go_include@ image/jpeg.lo.dep\n+image/jpeg.lo.dep: $(go_image_jpeg_files)\n+\t$(BUILDDEPS)\n+image/jpeg.lo: $(go_image_jpeg_files)\n \t$(BUILDPACKAGE)\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t@$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox \\\n-\t\tencoding/binary.gox fmt.gox hash.gox hash/crc32.gox image.gox \\\n-\t\timage/color.gox io.gox os.gox strconv.gox\n+@go_include@ image/png.lo.dep\n+image/png.lo.dep: $(go_image_png_files)\n+\t$(BUILDDEPS)\n+image/png.lo: $(go_image_png_files)\n \t$(BUILDPACKAGE)\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t@$(CHECK)\n .PHONY: image/png/check\n \n-image/tiff.lo: $(go_image_tiff_files) bufio.gox compress/lzw.gox \\\n-\t\tcompress/zlib.gox encoding/binary.gox image.gox \\\n-\t\timage/color.gox io.gox io/ioutil.gox os.gox\n+@go_include@ image/tiff.lo.dep\n+image/tiff.lo.dep: $(go_image_tiff_files)\n+\t$(BUILDDEPS)\n+image/tiff.lo: $(go_image_tiff_files)\n \t$(BUILDPACKAGE)\n image/tiff/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/tiff\n \t@$(CHECK)\n .PHONY: image/tiff/check\n \n-image/ycbcr.lo: $(go_image_ycbcr_files) image.gox image/color.gox\n+@go_include@ image/ycbcr.lo.dep\n+image/ycbcr.lo.dep: $(go_image_ycbcr_files)\n+\t$(BUILDDEPS)\n+image/ycbcr.lo: $(go_image_ycbcr_files)\n \t$(BUILDPACKAGE)\n image/ycbcr/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/ycbcr\n \t@$(CHECK)\n .PHONY: image/ycbcr/check\n \n-index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox \\\n-\t\tencoding/binary.gox io.gox os.gox regexp.gox sort.gox\n+@go_include@ index/suffixarray.lo.dep\n+index/suffixarray.lo.dep: $(go_index_suffixarray_files)\n+\t$(BUILDDEPS)\n+index/suffixarray.lo: $(go_index_suffixarray_files)\n \t$(BUILDPACKAGE)\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t@$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox path/filepath.gox \\\n-\t\tsort.gox strconv.gox\n+@go_include@ io/ioutil.lo.dep\n+io/ioutil.lo.dep: $(go_io_ioutil_files)\n+\t$(BUILDDEPS)\n+io/ioutil.lo: $(go_io_ioutil_files)\n \t$(BUILDPACKAGE)\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t@$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox \\\n-\t\tcrypto/rand.gox fmt.gox io.gox io/ioutil.gox mime.gox \\\n-\t\tnet/textproto.gox os.gox strings.gox\n+@go_include@ mime/multipart.lo.dep\n+mime/multipart.lo.dep: $(go_mime_multipart_files)\n+\t$(BUILDDEPS)\n+mime/multipart.lo: $(go_mime_multipart_files)\n \t$(BUILDPACKAGE)\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t@$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/dict.lo: $(go_net_dict_files) net/textproto.gox os.gox strconv.gox \\\n-\t\tstrings.gox\n+@go_include@ net/dict.lo.dep\n+net/dict.lo.dep: $(go_net_dict_files)\n+\t$(BUILDDEPS)\n+net/dict.lo: $(go_net_dict_files)\n \t$(BUILDPACKAGE)\n \n-net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox fmt.gox \\\n-\t\tio.gox io/ioutil.gox net.gox os.gox strings.gox strconv.gox \\\n-\t\tsync.gox\n+@go_include@ net/textproto.lo.dep\n+net/textproto.lo.dep: $(go_net_textproto_files)\n+\t$(BUILDDEPS)\n+net/textproto.lo: $(go_net_textproto_files)\n \t$(BUILDPACKAGE)\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t@$(CHECK)\n .PHONY: net/textproto/check\n \n-old/netchan.lo: $(go_old_netchan_files) gob.gox io.gox log.gox net.gox os.gox \\\n-\t\treflect.gox strconv.gox sync.gox time.gox\n+@go_include@ old/netchan.lo.dep\n+old/netchan.lo.dep: $(go_old_netchan_files)\n+\t$(BUILDDEPS)\n+old/netchan.lo: $(go_old_netchan_files)\n \t$(BUILDPACKAGE)\n old/netchan/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/netchan\n \t@$(CHECK)\n .PHONY: old/netchan/check\n \n-old/regexp.lo: $(go_old_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n-\t\tutf8.gox\n+@go_include@ old/regexp.lo.dep\n+old/regexp.lo.dep: $(go_old_regexp_files)\n+\t$(BUILDDEPS)\n+old/regexp.lo: $(go_old_regexp_files)\n \t$(BUILDPACKAGE)\n old/regexp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/regexp\n \t@$(CHECK)\n .PHONY: old/regexp/check\n \n-old/template.lo: $(go_old_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox os.gox reflect.gox strconv.gox strings.gox \\\n-\t\tunicode.gox utf8.gox\n+@go_include@ old/template.lo.dep\n+old/template.lo.dep: $(go_old_template_files)\n+\t$(BUILDDEPS)\n+old/template.lo: $(go_old_template_files)\n \t$(BUILDPACKAGE)\n old/template/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) old/template\n \t@$(CHECK)\n .PHONY: old/template/check\n \n-os/user.lo: $(go_os_user_files) fmt.gox os.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox syscall.gox\n+@go_include@ os/user.lo.dep\n+os/user.lo.dep: $(go_os_user_files)\n+\t$(BUILDDEPS)\n+os/user.lo: $(go_os_user_files)\n \t$(BUILDPACKAGE)\n os/user/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/user\n \t@$(CHECK)\n .PHONY: os/user/check\n \n-os/signal.lo: $(go_os_signal_files) os.gox runtime.gox\n+@go_include@ os/signal.lo.dep\n+os/signal.lo.dep: $(go_os_signal_files)\n+\t$(BUILDDEPS)\n+os/signal.lo: $(go_os_signal_files)\n \t$(BUILDPACKAGE)\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t@$(CHECK)\n .PHONY: os/signal/check\n \n-path/filepath.lo: $(go_path_filepath_files) bytes.gox os.gox runtime.gox \\\n-\t\tsort.gox strings.gox utf8.gox\n+@go_include@ path/filepath.lo.dep\n+path/filepath.lo.dep: $(go_path_filepath_files)\n+\t$(BUILDDEPS)\n+path/filepath.lo: $(go_path_filepath_files)\n \t$(BUILDPACKAGE)\n path/filepath/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) path/filepath\n \t@$(CHECK)\n .PHONY: path/filepath/check\n \n-regexp/syntax.lo: $(go_regexp_syntax_files) bytes.gox os.gox sort.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ regexp/syntax.lo.dep\n+regexp/syntax.lo.dep: $(go_regexp_syntax_files)\n+\t$(BUILDDEPS)\n+regexp/syntax.lo: $(go_regexp_syntax_files)\n \t$(BUILDPACKAGE)\n regexp/syntax/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) regexp/syntax\n \t@$(CHECK)\n .PHONY: regexp/syntax/check\n \n-rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n-\t\tos.gox rpc.gox sync.gox\n+@go_include@ rpc/jsonrpc.lo.dep\n+rpc/jsonrpc.lo.dep: $(go_rpc_jsonrpc_files)\n+\t$(BUILDDEPS)\n+rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files)\n \t$(BUILDPACKAGE)\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t@$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n-\t\tos.gox runtime.gox\n+@go_include@ runtime/debug.lo.dep\n+runtime/debug.lo.dep: $(go_runtime_debug_files)\n+\t$(BUILDDEPS)\n+runtime/debug.lo: $(go_runtime_debug_files)\n \t$(BUILDPACKAGE)\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t@$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n-\t\truntime.gox sync.gox\n+@go_include@ runtime/pprof.lo.dep\n+runtime/pprof.lo.dep: $(go_runtime_pprof_files)\n+\t$(BUILDDEPS)\n+runtime/pprof.lo: $(go_runtime_pprof_files)\n \t$(BUILDPACKAGE)\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t@$(CHECK)\n .PHONY: runtime/pprof/check\n \n+@go_include@ sync/atomic.lo.dep\n+sync/atomic.lo.dep: $(go_sync_atomic_files)\n+\t$(BUILDDEPS)\n sync/atomic.lo: $(go_sync_atomic_files)\n \t$(BUILDPACKAGE)\n sync/atomic_c.lo: $(go_sync_atomic_c_files) sync/atomic.lo\n@@ -5544,38 +5866,50 @@ sync/atomic/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: sync/atomic/check\n \n-template/parse.lo: $(go_template_parse_files) bytes.gox fmt.gox os.gox \\\n-\t\truntime.gox strconv.gox strings.gox unicode.gox utf8.gox\n+@go_include@ template/parse.lo.dep\n+template/parse.lo.dep: $(go_template_parse_files)\n+\t$(BUILDDEPS)\n+template/parse.lo: $(go_template_parse_files)\n \t$(BUILDPACKAGE)\n template/parse/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) template/parse\n \t@$(CHECK)\n .PHONY: template/parse/check\n \n-testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n+@go_include@ testing/iotest.lo.dep\n+testing/iotest.lo.dep: $(go_testing_iotest_files)\n+\t$(BUILDDEPS)\n+testing/iotest.lo: $(go_testing_iotest_files)\n \t$(BUILDPACKAGE)\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t@$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n-\t\trand.gox reflect.gox strings.gox\n+@go_include@ testing/quick.lo.dep\n+testing/quick.lo.dep: $(go_testing_quick_files)\n+\t$(BUILDDEPS)\n+testing/quick.lo: $(go_testing_quick_files)\n \t$(BUILDPACKAGE)\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t@$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n-\t\treflect.gox strings.gox\n+@go_include@ testing/script.lo.dep\n+testing/script.lo.dep: $(go_testing_script_files)\n+\t$(BUILDDEPS)\n+testing/script.lo: $(go_testing_script_files)\n \t$(BUILDPACKAGE)\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t@$(CHECK)\n .PHONY: testing/script/check\n \n-syscall/syscall.lo: $(go_syscall_files) sync.gox\n+@go_include@ syscall/syscall.lo.dep\n+syscall/syscall.lo.dep: $(go_syscall_files)\n+\t$(BUILDDEPS)\n+syscall/syscall.lo: $(go_syscall_files)\n \t$(BUILDPACKAGE)\n syscall/errno.lo: go/syscall/errno.c\n \t$(LTCOMPILE) -c -o $@ $<"}, {"sha": "314399fc404bcefa5546735b36ebfa4af578f58e", "filename": "libgo/configure", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -665,6 +665,7 @@ LIBGO_IS_FREEBSD_FALSE\n LIBGO_IS_FREEBSD_TRUE\n LIBGO_IS_DARWIN_FALSE\n LIBGO_IS_DARWIN_TRUE\n+go_include\n LIBFFIINCS\n LIBFFI\n glibgo_toolexeclibdir\n@@ -11096,7 +11097,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11099 \"configure\"\n+#line 11100 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11202,7 +11203,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11205 \"configure\"\n+#line 11206 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13455,6 +13456,11 @@ fi\n \n \n \n+# Used to tell GNU make to include a file without telling automake to\n+# include it.\n+go_include=\"-include\"\n+\n+\n is_darwin=no\n is_freebsd=no\n is_irix=no"}, {"sha": "6cb5f900203c9d642bde4c824b884b516e45afc4", "filename": "libgo/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -117,6 +117,11 @@ fi\n AC_SUBST(LIBFFI)\n AC_SUBST(LIBFFIINCS)\n \n+# Used to tell GNU make to include a file without telling automake to\n+# include it.\n+go_include=\"-include\"\n+AC_SUBST(go_include)\n+\n is_darwin=no\n is_freebsd=no\n is_irix=no"}, {"sha": "7ae5af93bf47d9a85b38d601c6d64ef54f03c787", "filename": "libgo/godeps.sh", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fgodeps.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Fgodeps.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgodeps.sh?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -0,0 +1,32 @@\n+#!/bin/sh\n+\n+# Copyright 2011 The Go Authors. All rights reserved.\n+# Use of this source code is governed by a BSD-style\n+# license that can be found in the LICENSE file.\n+\n+# The godeps.sh script outputs a dependency file for a package.  The\n+# dependency file is then included in the libgo Makefile.  This is\n+# automatic dependency generation, Go style.\n+\n+# The first parameter is the name of the file being generated.  The\n+# remaining parameters are the names of Go files which are scanned for\n+# imports.\n+\n+set -e\n+\n+if test $# = 0; then\n+    echo 1>&2 \"Usage: godeps.sh OUTPUT INPUTS...\"\n+    exit 1\n+fi\n+\n+output=$1\n+shift\n+\n+deps=`for f in $*; do cat $f; done | \n+  sed -n -e '/^import.*\"/p; /^import[ \t]*(/,/^)/p' |\n+  grep '\"' |\n+  grep -v '\"unsafe\"' |\n+  sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/' -e 's/$/.gox/' |\n+  sort -u`\n+\n+echo $output: $deps"}, {"sha": "c7e350570746461733c9433237d7216126d672c9", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c700754eef0eedcac04c1e3c5d548cafe4d5c2/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=18c700754eef0eedcac04c1e3c5d548cafe4d5c2", "patch": "@@ -169,6 +169,7 @@ exec_prefix = @exec_prefix@\n glibgo_prefixdir = @glibgo_prefixdir@\n glibgo_toolexecdir = @glibgo_toolexecdir@\n glibgo_toolexeclibdir = @glibgo_toolexeclibdir@\n+go_include = @go_include@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}]}