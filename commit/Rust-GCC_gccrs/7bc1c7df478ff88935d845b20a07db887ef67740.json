{"sha": "7bc1c7df478ff88935d845b20a07db887ef67740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JjMWM3ZGY0NzhmZjg4OTM1ZDg0NWIyMGEwN2RiODg3ZWY2Nzc0MA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2001-10-10T23:03:17Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-10T23:03:17Z"}, "message": "exp_ch4.adb (Expand_N_Allocator): Generate meaningful names for a dynamic task if...\n\n\t* exp_ch4.adb (Expand_N_Allocator): Generate meaningful names for\n\ta dynamic task if the allocator appears in an indexed assignment\n\tor selected component assignment.\n\n\t* exp_util.adb (Build_Task_Array_Image, Build_Task_Record_Image):\n\tFor a dynamic task in an assignment statement, use target of\n\tassignment to generate meaningful name.\n\nFrom-SVN: r46166", "tree": {"sha": "891a888a24f3e3925a8088ccc5a5bc3a567540ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/891a888a24f3e3925a8088ccc5a5bc3a567540ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bc1c7df478ff88935d845b20a07db887ef67740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc1c7df478ff88935d845b20a07db887ef67740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bc1c7df478ff88935d845b20a07db887ef67740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc1c7df478ff88935d845b20a07db887ef67740/comments", "author": null, "committer": null, "parents": [{"sha": "c84700e7c77e92776dd951d8ce7e7e1efd0c0464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84700e7c77e92776dd951d8ce7e7e1efd0c0464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84700e7c77e92776dd951d8ce7e7e1efd0c0464"}], "stats": {"total": 127, "additions": 94, "deletions": 33}, "files": [{"sha": "a094fde80d13fa9d2c69bcce0cef87e2089ebfc2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7bc1c7df478ff88935d845b20a07db887ef67740", "patch": "@@ -1,3 +1,13 @@\n+2001-10-10  Ed Schonberg <schonber@gnat.com>\n+\n+\t* exp_ch4.adb (Expand_N_Allocator): Generate meaningful names for\n+\ta dynamic task if the allocator appears in an indexed assignment\n+\tor selected component assignment.\n+\t\n+\t* exp_util.adb (Build_Task_Array_Image, Build_Task_Record_Image): \n+\tFor a dynamic task in an assignment statement, use target of \n+\tassignment to generate meaningful name.\n+\n 2001-10-10  Ed Schonberg <schonber@gnat.com>\n \n \t* einfo.adb (Write_Field19_Name): Body_Entity is also defined for "}, {"sha": "33c6f14468a5ea6648cc971e28a8deee0688d3e7", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7bc1c7df478ff88935d845b20a07db887ef67740", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.463 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -1818,7 +1818,10 @@ package body Exp_Ch4 is\n                   --  If the context of the allocator is a declaration or\n                   --  an assignment, we can generate a meaningful image for\n                   --  it, even though subsequent assignments might remove\n-                  --  the connection between task and entity.\n+                  --  the connection between task and entity. We build this\n+                  --  image when the left-hand side is a simple variable,\n+                  --  a simple indexed assignment or a simple selected\n+                  --  component.\n \n                   if Nkind (Parent (N)) = N_Assignment_Statement then\n                      declare\n@@ -1832,6 +1835,13 @@ package body Exp_Ch4 is\n                                  New_Occurrence_Of\n                                    (Entity (Nam), Sloc (Nam)), T);\n \n+                        elsif (Nkind (Nam) = N_Indexed_Component\n+                                or else Nkind (Nam) = N_Selected_Component)\n+                          and then Is_Entity_Name (Prefix (Nam))\n+                        then\n+                           Decls :=\n+                             Build_Task_Image_Decls (\n+                             Loc, Nam, Etype (Prefix (Nam)));\n                         else\n                            Decls := Build_Task_Image_Decls (Loc, T, T);\n                         end if;"}, {"sha": "a83d561d51c666591a91c57477a2d7963d0e4823", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 72, "deletions": 31, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bc1c7df478ff88935d845b20a07db887ef67740/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=7bc1c7df478ff88935d845b20a07db887ef67740", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.331 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -64,11 +64,15 @@ package body Exp_Util is\n    function Build_Task_Array_Image\n      (Loc    : Source_Ptr;\n       Id_Ref : Node_Id;\n-      A_Type : Entity_Id)\n+      A_Type : Entity_Id;\n+      Dyn    : Boolean := False)\n       return   Node_Id;\n    --  Build function to generate the image string for a task that is an\n    --  array component, concatenating the images of each index. To avoid\n    --  storage leaks, the string is built with successive slice assignments.\n+   --  The flag Dyn indicates whether this is called for the initialization\n+   --  procedure of an array of tasks, or for the name of a dynamically\n+   --  created task that is assigned to an indexed component.\n \n    function Build_Task_Image_Function\n      (Loc   : Source_Ptr;\n@@ -94,10 +98,14 @@ package body Exp_Util is\n    function Build_Task_Record_Image\n      (Loc    : Source_Ptr;\n       Id_Ref : Node_Id;\n-      A_Type : Entity_Id)\n+      A_Type : Entity_Id;\n+      Dyn    : Boolean := False)\n       return Node_Id;\n    --  Build function to generate the image string for a task that is a\n    --  record component. Concatenate name of variable with that of selector.\n+   --  The flag Dyn indicates whether this is called for the initialization\n+   --  procedure of record with task components, or for a dynamically\n+   --  created task that is assigned to a selected component.\n \n    function Make_CW_Equivalent_Type\n      (T    : Entity_Id;\n@@ -326,17 +334,17 @@ package body Exp_Util is\n    --  The generated function has the following structure:\n \n    --  function F return Task_Image_Type is\n-   --     Prefix : string := Task_Id.all;\n+   --     Pref : string := Task_Id.all;\n    --     T1 : String := Index1'Image (Val1);\n    --     ...\n    --     Tn : String := indexn'image (Valn);\n    --     Len : Integer := T1'Length + ... + Tn'Length + n + 1;\n    --     --  Len includes commas and the end parentheses.\n    --     Res : String (1..Len);\n-   --     Pos : Integer := Prefix'Length;\n+   --     Pos : Integer := Pref'Length;\n    --\n    --  begin\n-   --     Res (1 .. Pos) := Prefix;\n+   --     Res (1 .. Pos) := Pref;\n    --     Pos := Pos + 1;\n    --     Res (Pos)    := '(';\n    --     Pos := Pos + 1;\n@@ -357,7 +365,8 @@ package body Exp_Util is\n    function Build_Task_Array_Image\n      (Loc    : Source_Ptr;\n       Id_Ref : Node_Id;\n-      A_Type : Entity_Id)\n+      A_Type : Entity_Id;\n+      Dyn    : Boolean := False)\n       return   Node_Id\n    is\n       Dims : constant Nat := Number_Dimensions (A_Type);\n@@ -375,9 +384,12 @@ package body Exp_Util is\n       Pos : Entity_Id;\n       --  Running index for substring assignments\n \n-      Prefix : Entity_Id;\n+      Pref : Entity_Id;\n       --  Name of enclosing variable, prefix of resulting name\n \n+      P_Nam : Node_Id;\n+      --  string expression for Pref.\n+\n       Res : Entity_Id;\n       --  String to hold result\n \n@@ -394,15 +406,26 @@ package body Exp_Util is\n       Stats : List_Id := New_List;\n \n    begin\n-      Prefix := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+      Pref := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+\n+      --  For a dynamic task, the name comes from the target variable.\n+      --  For a static one it is a formal of the enclosing init_proc.\n+\n+      if Dyn then\n+         Get_Name_String (Chars (Entity (Prefix (Id_Ref))));\n+         P_Nam :=\n+           Make_String_Literal (Loc, Strval => String_From_Name_Buffer);\n+      else\n+         P_Nam :=\n+           Make_Explicit_Dereference (Loc,\n+             Prefix => Make_Identifier (Loc, Name_uTask_Id));\n+      end if;\n \n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier => Prefix,\n+          Defining_Identifier => Pref,\n           Object_Definition => New_Occurrence_Of (Standard_String, Loc),\n-          Expression =>\n-            Make_Explicit_Dereference (Loc,\n-              Prefix => Make_Identifier (Loc, Name_uTask_Id))));\n+          Expression => P_Nam));\n \n       Indx := First_Index (A_Type);\n       Val  := First (Expressions (Id_Ref));\n@@ -436,7 +459,7 @@ package body Exp_Util is\n            Make_Attribute_Reference (Loc,\n              Attribute_Name => Name_Length,\n              Prefix =>\n-               New_Occurrence_Of (Prefix, Loc),\n+               New_Occurrence_Of (Pref, Loc),\n              Expressions => New_List (Make_Integer_Literal (Loc, 1))));\n \n       for J in 1 .. Dims loop\n@@ -451,7 +474,7 @@ package body Exp_Util is\n                 Expressions => New_List (Make_Integer_Literal (Loc, 1))));\n       end loop;\n \n-      Build_Task_Image_Prefix (Loc, Len, Res, Pos, Prefix, Sum, Decls, Stats);\n+      Build_Task_Image_Prefix (Loc, Len, Res, Pos, Pref, Sum, Decls, Stats);\n \n       Set_Character_Literal_Name (Char_Code (Character'Pos ('(')));\n \n@@ -560,11 +583,14 @@ package body Exp_Util is\n       A_Type : Entity_Id)\n       return   List_Id\n    is\n-      T_Id  : Entity_Id := Empty;\n-      Decl  : Node_Id;\n-      Decls : List_Id   := New_List;\n-      Expr  : Node_Id   := Empty;\n-      Fun   : Node_Id   := Empty;\n+      T_Id   : Entity_Id := Empty;\n+      Decl   : Node_Id;\n+      Decls  : List_Id   := New_List;\n+      Expr   : Node_Id   := Empty;\n+      Fun    : Node_Id   := Empty;\n+      Is_Dyn : constant Boolean :=\n+        Nkind (Parent (Id_Ref)) = N_Assignment_Statement\n+         and then Nkind (Expression (Parent (Id_Ref))) = N_Allocator;\n \n    begin\n       --  If Discard_Names is in effect, generate a dummy declaration only.\n@@ -607,14 +633,14 @@ package body Exp_Util is\n             T_Id :=\n               Make_Defining_Identifier (Loc,\n                 New_External_Name (Chars (Selector_Name (Id_Ref)), 'I'));\n-            Fun := Build_Task_Record_Image (Loc, Id_Ref, A_Type);\n+            Fun := Build_Task_Record_Image (Loc, Id_Ref, A_Type, Is_Dyn);\n \n          elsif Nkind (Id_Ref) = N_Indexed_Component then\n             T_Id :=\n               Make_Defining_Identifier (Loc,\n                 New_External_Name (Chars (A_Type), 'I'));\n \n-            Fun := Build_Task_Array_Image (Loc, Id_Ref, A_Type);\n+            Fun := Build_Task_Array_Image (Loc, Id_Ref, A_Type, Is_Dyn);\n          end if;\n       end if;\n \n@@ -760,7 +786,8 @@ package body Exp_Util is\n    function Build_Task_Record_Image\n      (Loc    : Source_Ptr;\n       Id_Ref : Node_Id;\n-      A_Type : Entity_Id)\n+      A_Type : Entity_Id;\n+      Dyn    : Boolean := False)\n       return   Node_Id\n    is\n       Len : Entity_Id;\n@@ -772,9 +799,12 @@ package body Exp_Util is\n       Res : Entity_Id;\n       --  String to hold result\n \n-      Prefix : Entity_Id;\n+      Pref : Entity_Id;\n       --  Name of enclosing variable, prefix of resulting name\n \n+      P_Nam : Node_Id;\n+      --  string expression for Pref.\n+\n       Sum : Node_Id;\n       --  Expression to compute total size of string.\n \n@@ -785,15 +815,26 @@ package body Exp_Util is\n       Stats : List_Id := New_List;\n \n    begin\n-      Prefix := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+      Pref := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+\n+      --  For a dynamic task, the name comes from the target variable.\n+      --  For a static one it is a formal of the enclosing init_proc.\n+\n+      if Dyn then\n+         Get_Name_String (Chars (Entity (Prefix (Id_Ref))));\n+         P_Nam :=\n+           Make_String_Literal (Loc, Strval => String_From_Name_Buffer);\n+      else\n+         P_Nam :=\n+           Make_Explicit_Dereference (Loc,\n+             Prefix => Make_Identifier (Loc, Name_uTask_Id));\n+      end if;\n \n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier => Prefix,\n+          Defining_Identifier => Pref,\n           Object_Definition => New_Occurrence_Of (Standard_String, Loc),\n-          Expression =>\n-            Make_Explicit_Dereference (Loc,\n-              Prefix => Make_Identifier (Loc, Name_uTask_Id))));\n+          Expression => P_Nam));\n \n       Sel := Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n \n@@ -815,10 +856,10 @@ package body Exp_Util is\n            Make_Attribute_Reference (Loc,\n              Attribute_Name => Name_Length,\n              Prefix =>\n-               New_Occurrence_Of (Prefix, Loc),\n+               New_Occurrence_Of (Pref, Loc),\n              Expressions => New_List (Make_Integer_Literal (Loc, 1))));\n \n-      Build_Task_Image_Prefix (Loc, Len, Res, Pos, Prefix, Sum, Decls, Stats);\n+      Build_Task_Image_Prefix (Loc, Len, Res, Pos, Pref, Sum, Decls, Stats);\n \n       Set_Character_Literal_Name (Char_Code (Character'Pos ('.')));\n "}]}