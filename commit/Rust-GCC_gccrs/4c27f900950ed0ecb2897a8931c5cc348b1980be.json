{"sha": "4c27f900950ed0ecb2897a8931c5cc348b1980be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMyN2Y5MDA5NTBlZDBlY2IyODk3YTg5MzFjNWNjMzQ4YjE5ODBiZQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-10-27T09:43:27Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-06T13:01:35Z"}, "message": "[Fortran] Remove OpenACC 'loop' inside 'parallel' special-case code\n\nInstead, use the generic middle-end code, like already used for Fortran OpenACC\n'loop' inside other compute constructs, orphaned 'loop' constructs, and C, C++\ngenerally.\n\n\tgcc/fortran/\n\t* openmp.c (oacc_is_parallel, resolve_oacc_params_in_parallel):\n\tRemove.\n\t(resolve_oacc_loop_blocks): Don't call the former.\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/loop-2-parallel-3.f95: Adjust.", "tree": {"sha": "761ddfdcdccd901aff119dcafbcd0d9b3a18d18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/761ddfdcdccd901aff119dcafbcd0d9b3a18d18b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c27f900950ed0ecb2897a8931c5cc348b1980be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c27f900950ed0ecb2897a8931c5cc348b1980be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c27f900950ed0ecb2897a8931c5cc348b1980be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c27f900950ed0ecb2897a8931c5cc348b1980be/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b74462176e4741ce1248c055e6bb1cb902c025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b74462176e4741ce1248c055e6bb1cb902c025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b74462176e4741ce1248c055e6bb1cb902c025"}], "stats": {"total": 61, "additions": 12, "deletions": 49}, "files": [{"sha": "2270c858f394167f6206ca78ec43295b1e1324ae", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c27f900950ed0ecb2897a8931c5cc348b1980be/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c27f900950ed0ecb2897a8931c5cc348b1980be/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=4c27f900950ed0ecb2897a8931c5cc348b1980be", "patch": "@@ -6403,11 +6403,6 @@ resolve_omp_do (gfc_code *code)\n     }\n }\n \n-static bool\n-oacc_is_parallel (gfc_code *code)\n-{\n-  return code->op == EXEC_OACC_PARALLEL || code->op == EXEC_OACC_PARALLEL_LOOP;\n-}\n \n static gfc_statement\n omp_code_to_statement (gfc_code *code)\n@@ -6666,26 +6661,6 @@ resolve_oacc_nested_loops (gfc_code *code, gfc_code* do_code, int collapse,\n }\n \n \n-static void\n-resolve_oacc_params_in_parallel (gfc_code *code, const char *clause,\n-\t\t\t\t const char *arg)\n-{\n-  fortran_omp_context *c;\n-\n-  if (oacc_is_parallel (code))\n-    gfc_error (\"!$ACC LOOP %s in PARALLEL region doesn't allow \"\n-\t       \"%s arguments at %L\", clause, arg, &code->loc);\n-  for (c = omp_current_ctx; c; c = c->previous)\n-    {\n-      if (oacc_is_loop (c->code))\n-\tbreak;\n-      if (oacc_is_parallel (c->code))\n-\tgfc_error (\"!$ACC LOOP %s in PARALLEL region doesn't allow \"\n-\t\t   \"%s arguments at %L\", clause, arg, &code->loc);\n-    }\n-}\n-\n-\n static void\n resolve_oacc_loop_blocks (gfc_code *code)\n {\n@@ -6697,18 +6672,6 @@ resolve_oacc_loop_blocks (gfc_code *code)\n     gfc_error (\"Tiled loop cannot be parallelized across gangs, workers and \"\n \t       \"vectors at the same time at %L\", &code->loc);\n \n-  if (code->ext.omp_clauses->gang\n-      && code->ext.omp_clauses->gang_num_expr)\n-    resolve_oacc_params_in_parallel (code, \"GANG\", \"num\");\n-\n-  if (code->ext.omp_clauses->worker\n-      && code->ext.omp_clauses->worker_expr)\n-    resolve_oacc_params_in_parallel (code, \"WORKER\", \"num\");\n-\n-  if (code->ext.omp_clauses->vector\n-      && code->ext.omp_clauses->vector_expr)\n-    resolve_oacc_params_in_parallel (code, \"VECTOR\", \"length\");\n-\n   if (code->ext.omp_clauses->tile_list)\n     {\n       gfc_expr_list *el;"}, {"sha": "5379fba16ed8167574a87a984fb11014619168b9", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel-3.f95", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c27f900950ed0ecb2897a8931c5cc348b1980be/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c27f900950ed0ecb2897a8931c5cc348b1980be/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95?ref=4c27f900950ed0ecb2897a8931c5cc348b1980be", "patch": "@@ -5,52 +5,52 @@ program test\n   integer :: i\n \n   !$acc parallel\n-    !$acc loop gang(5) ! { dg-error \"num arguments\" }\n+    !$acc loop gang(5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n \n-    !$acc loop gang(num:5) ! { dg-error \"num arguments\" }\n+    !$acc loop gang(num:5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n \n-    !$acc loop worker(5) ! { dg-error \"num arguments\" }\n+    !$acc loop worker(5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n \n-    !$acc loop worker(num:5) ! { dg-error \"num arguments\" }\n+    !$acc loop worker(num:5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n \n-    !$acc loop vector(5) ! { dg-error \"length arguments\" }\n+    !$acc loop vector(5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n \n-    !$acc loop vector(length:5) ! { dg-error \"length arguments\" }\n+    !$acc loop vector(length:5) ! { dg-error \"argument not permitted\" }\n     DO i = 1,10\n     ENDDO\n   !$acc end parallel\n \n-  !$acc parallel loop gang(5) ! { dg-error \"num arguments\" }\n+  !$acc parallel loop gang(5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n \n-  !$acc parallel loop gang(num:5) ! { dg-error \"num arguments\" }\n+  !$acc parallel loop gang(num:5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n \n-  !$acc parallel loop worker(5) ! { dg-error \"num arguments\" }\n+  !$acc parallel loop worker(5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n \n-  !$acc parallel loop worker(num:5) ! { dg-error \"num arguments\" }\n+  !$acc parallel loop worker(num:5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n \n-  !$acc parallel loop vector(5) ! { dg-error \"length arguments\" }\n+  !$acc parallel loop vector(5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n \n-  !$acc parallel loop vector(length:5) ! { dg-error \"length arguments\" }\n+  !$acc parallel loop vector(length:5) ! { dg-error \"argument not permitted\" }\n   DO i = 1,10\n   ENDDO\n end"}]}