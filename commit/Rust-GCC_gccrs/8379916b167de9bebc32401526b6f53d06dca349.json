{"sha": "8379916b167de9bebc32401526b6f53d06dca349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3OTkxNmIxNjdkZTliZWJjMzI0MDE1MjZiNmY1M2QwNmRjYTM0OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-16T17:44:38Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-16T17:44:38Z"}, "message": "c++: Fix offsetof use [PR 98232]\n\noffsetof is underspecified.  GCC happened to accept an unneeded\nexplicit scoping, clang does not.\n\n\tgcc/cp/\n\t* module.cc (dumper::push): Clangify offsetof use.", "tree": {"sha": "71591e23374848694ff7974862da5d6efa3ce422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71591e23374848694ff7974862da5d6efa3ce422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8379916b167de9bebc32401526b6f53d06dca349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8379916b167de9bebc32401526b6f53d06dca349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8379916b167de9bebc32401526b6f53d06dca349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8379916b167de9bebc32401526b6f53d06dca349/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "269e82d49e2d5bf26ab847fa0f29fba0ad6f326a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269e82d49e2d5bf26ab847fa0f29fba0ad6f326a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269e82d49e2d5bf26ab847fa0f29fba0ad6f326a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e9ea18636b4286d8fc88314dbe35a2cd1cce01a4", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8379916b167de9bebc32401526b6f53d06dca349/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8379916b167de9bebc32401526b6f53d06dca349/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=8379916b167de9bebc32401526b6f53d06dca349", "patch": "@@ -4153,7 +4153,7 @@ dumper::push (module_state *m)\n       /* Create or extend the dump implementor.  */\n       unsigned current = dumps ? dumps->stack.length () : 0;\n       unsigned count = current ? current * 2 : EXPERIMENT (1, 20);\n-      size_t alloc = (offsetof (impl, impl::stack)\n+      size_t alloc = (offsetof (impl, stack)\n \t\t      + impl::stack_t::embedded_size (count));\n       dumps = XRESIZEVAR (impl, dumps, alloc);\n       dumps->stack.embedded_init (count, current);"}]}