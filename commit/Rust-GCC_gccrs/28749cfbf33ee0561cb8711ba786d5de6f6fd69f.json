{"sha": "28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3NDljZmJmMzNlZTA1NjFjYjg3MTFiYTc4NmQ1ZGU2ZjZmZDY5Zg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-02-16T15:47:20Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-02-16T15:47:20Z"}, "message": "re PR rtl-optimization/26296 (ACATS ICE cxg2007 cxg2012 verify_flow_info failed)\n\n\tPR rtl-optimization/26296\n\t* Makefile.in (loop-invariant.c): Add except.h dependency.\n\t* loop-invariant.c: Include except.h.\n\t(find_invariant_insn): Ignore insns satisfying can_throw_internal.\n\nFrom-SVN: r111139", "tree": {"sha": "3280aa0470bb6a6fec83e0edd515a0c12b6a1129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3280aa0470bb6a6fec83e0edd515a0c12b6a1129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/comments", "author": null, "committer": null, "parents": [{"sha": "b81ac2881e267c356ae502af92da39d9837939de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81ac2881e267c356ae502af92da39d9837939de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81ac2881e267c356ae502af92da39d9837939de"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "d01a0490d8d52f939d6a0cb38852b410dd6208f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "patch": "@@ -1,3 +1,10 @@\n+2006-02-16  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/26296\n+\t* Makefile.in (loop-invariant.c): Add except.h dependency.\n+\t* loop-invariant.c: Include except.h.\n+\t(find_invariant_insn): Ignore insns satisfying can_throw_internal.\n+\n 2005-02-16  Paul Brook  <paul@codesourcery.com>\n \n \t* reload1.c (emit_reload_insns): Invalidate dead input registers used"}, {"sha": "a6158b7795ad5c78dd8433f7e451d3a07a641784", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "patch": "@@ -2423,7 +2423,7 @@ loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h \\\n    $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) $(OBSTACK_H) output.h \\\n-   $(HASHTAB_H)\n+   $(HASHTAB_H) except.h\n cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) output.h \\\n    coretypes.h $(TM_H) cfghooks.h $(OBSTACK_H)"}, {"sha": "03a0c34e6cba93f54cb35e9da445e63559889e4f", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28749cfbf33ee0561cb8711ba786d5de6f6fd69f/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=28749cfbf33ee0561cb8711ba786d5de6f6fd69f", "patch": "@@ -52,6 +52,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"flags.h\"\n #include \"df.h\"\n #include \"hashtab.h\"\n+#include \"except.h\"\n \n /* The data stored for the loop.  */\n \n@@ -761,16 +762,14 @@ find_invariant_insn (rtx insn, bool always_reached, bool always_executed)\n       || !check_maybe_invariant (SET_SRC (set)))\n     return;\n \n-  if (may_trap_p (PATTERN (insn)))\n-    {\n-      if (!always_reached)\n-\treturn;\n+  /* If the insn can throw exception, we cannot move it at all without changing\n+     cfg.  */\n+  if (can_throw_internal (insn))\n+    return;\n \n-      /* Unless the exceptions are handled, the behavior is undefined\n- \t if the trap occurs.  */\n-      if (flag_non_call_exceptions)\n-\treturn;\n-    }\n+  /* We cannot make trapping insn executed, unless it was executed before.  */\n+  if (may_trap_p (PATTERN (insn)) && !always_reached)\n+    return;\n \n   depends_on = BITMAP_ALLOC (NULL);\n   if (!check_dependencies (insn, depends_on))"}]}