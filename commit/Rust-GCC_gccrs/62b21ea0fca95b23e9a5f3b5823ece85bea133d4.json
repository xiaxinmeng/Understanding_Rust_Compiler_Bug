{"sha": "62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiMjFlYTBmY2E5NWIyM2U5YTVmM2I1ODIzZWNlODViZWExMzNkNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-01-27T23:41:16Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-01-27T23:41:16Z"}, "message": "11584.cc: Correct new and delete declarations, add include and test variable.\n\n\n2004-01-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/27_io/ios_base/storage/11584.cc: Correct new and\n\tdelete declarations, add include and test variable.\n\nFrom-SVN: r76766", "tree": {"sha": "68297dfc5421c328bd36fc9d002ccd249365d33e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68297dfc5421c328bd36fc9d002ccd249365d33e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b21ea0fca95b23e9a5f3b5823ece85bea133d4/comments", "author": null, "committer": null, "parents": [{"sha": "826b47cc77a9b9ffb6489fd361be217cb024313f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826b47cc77a9b9ffb6489fd361be217cb024313f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826b47cc77a9b9ffb6489fd361be217cb024313f"}], "stats": {"total": 57, "additions": 32, "deletions": 25}, "files": [{"sha": "6fb3dd45f487eb2d9da652c5b9a1cbee47822e4a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b21ea0fca95b23e9a5f3b5823ece85bea133d4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b21ea0fca95b23e9a5f3b5823ece85bea133d4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "patch": "@@ -1,3 +1,8 @@\n+2004-01-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/27_io/ios_base/storage/11584.cc: Correct new and\n+\tdelete declarations, add include and test variable.\n+\n 2003-01-27  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* include/bits/codecvt.h, include/bits/locale_facets.h,"}, {"sha": "0df9c0c8b2161133463153dcfd81322bf288a199", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/11584.cc", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b21ea0fca95b23e9a5f3b5823ece85bea133d4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b21ea0fca95b23e9a5f3b5823ece85bea133d4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc?ref=62b21ea0fca95b23e9a5f3b5823ece85bea133d4", "patch": "@@ -22,40 +22,42 @@\n \n #include <cstdlib>\n #include <new>\n+#include <iostream>\n #include <testsuite_hooks.h>\n \n int new_fails;\n \n-void* operator new (size_t n)\n+void* operator new(std::size_t n) throw (std::bad_alloc)\n {\n-    if (new_fails)\n-        throw std::bad_alloc();\n-\n-    return malloc(n);\n+  if (new_fails)\n+    throw std::bad_alloc();  \n+  return malloc(n);\n }\n+void* operator new[] (std::size_t n) throw (std::bad_alloc)\n+{ return operator new(n); }\n \n-void operator delete (void *p) { free(p); }\n-void* operator new[] (size_t n) { return operator new(n); }\n-void operator delete[] (void *p) { operator delete(p); }\n+void operator delete (void *p) throw() { free(p); }\n+void operator delete[] (void *p) throw() { operator delete(p); }\n \n int main ()\n {\n-    const int i = std::ios::xalloc ();\n-\n-    new_fails = 1;\n-\n-    // Successive accesses to failure storage clears to zero.\n-    std::cout.iword(100) = 0xdeadbeef;\n-    VERIFY(std::cout.iword(100) == 0);\n-\n-    // Access to pword failure storage shouldn't clear iword pword storage.\n-    long& lr = std::cout.iword(100);\n-    lr = 0xdeadbeef;\n-\n-    void* pv = std::cout.pword(100);\n-    VERIFY(pv == 0);\n-    VERIFY(lr == 0xdeadbeef);\n-    \n-    return 0;\n+  bool test __attribute__((unused)) = true;\n+  const int i = std::ios::xalloc ();\n+\n+  new_fails = 1;\n+  \n+  // Successive accesses to failure storage clears to zero.\n+  std::cout.iword(100) = 0xdeadbeef;\n+  VERIFY(std::cout.iword(100) == 0);\n+  \n+  // Access to pword failure storage shouldn't clear iword pword storage.\n+  long& lr = std::cout.iword(100);\n+  lr = 0xdeadbeef;\n+  \n+  void* pv = std::cout.pword(100);\n+  VERIFY(pv == 0);\n+  VERIFY(lr == 0xdeadbeef);\n+  \n+  return 0;\n }\n "}]}