{"sha": "94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmMTFhZjEwOWFlMDg2MmZmZDZlYjE2MzA5ZGRlYThiNWM4ZTFhOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-06-29T17:18:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-29T17:18:17Z"}, "message": "i386.md (*jcc_1): Use %!\n\n\t* config/i386/i386.md (*jcc_1): Use %! in asm template.\n\tSet attribute \"length_nobnd\" instead of \"length\".\n\t(*jcc_2): Ditto.\n\t(jump): Ditto.\n\t(*jcc_1_bnd, *jcc_2_bnd, jump_bnd): Remove insn patterns.\n\nFrom-SVN: r225138", "tree": {"sha": "93e7e89918ec257c0ae4c64101f002a66300cda4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93e7e89918ec257c0ae4c64101f002a66300cda4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "030b9d905936aba9ba5957a9576e7e34ebdee4e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030b9d905936aba9ba5957a9576e7e34ebdee4e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030b9d905936aba9ba5957a9576e7e34ebdee4e1"}], "stats": {"total": 112, "additions": 36, "deletions": 76}, "files": [{"sha": "a14bb044b9e835e112ae6df28d68d9f121f31f68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "patch": "@@ -1,3 +1,11 @@\n+2015-06-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*jcc_1): Use %! in asm template.\n+\tSet attribute \"length_nobnd\" instead of \"length\".\n+\t(*jcc_2): Ditto.\n+\t(jump): Ditto.\n+\t(*jcc_1_bnd, *jcc_2_bnd, jump_bnd): Remove insn patterns.\n+\n 2015-06-29  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/nios2.c (nios2_delegitimize_address): Make"}, {"sha": "ff7baa4b66fddb6499fc6e33605cf86262ef89ac", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 28, "deletions": 76, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "patch": "@@ -10948,59 +10948,24 @@\n ;; Basic conditional jump instructions.\n ;; We ignore the overflow flag for signed branch instructions.\n \n-(define_insn \"*jcc_1_bnd\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n-\t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n-\t\t      (label_ref (match_operand 0))\n-\t\t      (pc)))]\n-  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n-  \"bnd %+j%C1\\t%l0\"\n-  [(set_attr \"type\" \"ibr\")\n-   (set_attr \"modrm\" \"0\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 3)\n-\t     (const_int 7)))])\n-\n (define_insn \"*jcc_1\"\n   [(set (pc)\n \t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n \t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n \t\t      (label_ref (match_operand 0))\n \t\t      (pc)))]\n   \"\"\n-  \"%+j%C1\\t%l0\"\n+  \"%!%+j%C1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n    (set_attr \"modrm\" \"0\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 2)\n-\t     (const_int 6)))])\n-\n-(define_insn \"*jcc_2_bnd\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n-\t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n-\t\t      (pc)\n-\t\t      (label_ref (match_operand 0))))]\n-  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n-  \"bnd %+j%c1\\t%l0\"\n-  [(set_attr \"type\" \"ibr\")\n-   (set_attr \"modrm\" \"0\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 3)\n-\t     (const_int 7)))])\n+   (set (attr \"length_nobnd\")\n+\t(if_then_else\n+\t  (and (ge (minus (match_dup 0) (pc))\n+\t\t   (const_int -126))\n+\t       (lt (minus (match_dup 0) (pc))\n+\t\t   (const_int 128)))\n+\t  (const_int 2)\n+\t  (const_int 6)))])\n \n (define_insn \"*jcc_2\"\n   [(set (pc)\n@@ -11009,16 +10974,17 @@\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0))))]\n   \"\"\n-  \"%+j%c1\\t%l0\"\n+  \"%!%+j%c1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n    (set_attr \"modrm\" \"0\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 2)\n-\t     (const_int 6)))])\n+   (set (attr \"length_nobnd\")\n+\t(if_then_else\n+\t  (and (ge (minus (match_dup 0) (pc))\n+\t\t   (const_int -126))\n+\t       (lt (minus (match_dup 0) (pc))\n+\t\t   (const_int 128)))\n+\t  (const_int 2)\n+\t  (const_int 6)))])\n \n ;; In general it is not safe to assume too much about CCmode registers,\n ;; so simplify-rtx stops when it sees a second one.  Under certain\n@@ -11452,35 +11418,21 @@\n \f\n ;; Unconditional and other jump instructions\n \n-(define_insn \"jump_bnd\"\n-  [(set (pc)\n-\t(label_ref (match_operand 0)))]\n-  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n-  \"bnd jmp\\t%l0\"\n-  [(set_attr \"type\" \"ibr\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 3)\n-\t     (const_int 6)))\n-   (set_attr \"modrm\" \"0\")])\n-\n (define_insn \"jump\"\n   [(set (pc)\n \t(label_ref (match_operand 0)))]\n   \"\"\n-  \"jmp\\t%l0\"\n+  \"%!jmp\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n-   (set (attr \"length\")\n-\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -126))\n-\t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 128)))\n-\t     (const_int 2)\n-\t     (const_int 5)))\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"modrm\" \"0\")\n+   (set (attr \"length_nobnd\")\n+\t(if_then_else\n+\t  (and (ge (minus (match_dup 0) (pc))\n+\t\t   (const_int -126))\n+\t       (lt (minus (match_dup 0) (pc))\n+\t\t   (const_int 128)))\n+\t  (const_int 2)\n+\t  (const_int 5)))])\n \n (define_expand \"indirect_jump\"\n   [(set (pc) (match_operand 0 \"indirect_branch_operand\"))]"}]}