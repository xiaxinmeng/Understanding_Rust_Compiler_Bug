{"sha": "331dc84013b27d0f13c640262248e51a5864d26d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxZGM4NDAxM2IyN2QwZjEzYzY0MDI2MjI0OGU1MWE1ODY0ZDI2ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-06T12:46:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-06T12:46:41Z"}, "message": "re PR tree-optimization/80974 (wrong code (generated code hangs) at -O2 on x86_64-linux-gnu)\n\n2017-06-06  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80974\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not change but only\n\tkeep or clear leaders SSA info.\n\n\t* gcc.dg/torture/pr80974.c: New testcase.\n\nFrom-SVN: r248919", "tree": {"sha": "365ee2a809f0ad3977898a23486965220a381600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/365ee2a809f0ad3977898a23486965220a381600"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/331dc84013b27d0f13c640262248e51a5864d26d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331dc84013b27d0f13c640262248e51a5864d26d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331dc84013b27d0f13c640262248e51a5864d26d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331dc84013b27d0f13c640262248e51a5864d26d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38827811dd5d0e07c8f31d780732d3e429aee4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38827811dd5d0e07c8f31d780732d3e429aee4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38827811dd5d0e07c8f31d780732d3e429aee4fa"}], "stats": {"total": 94, "additions": 65, "deletions": 29}, "files": [{"sha": "38d552433c34dd3964a49b1e4fdd1fc0c3782f85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=331dc84013b27d0f13c640262248e51a5864d26d", "patch": "@@ -1,3 +1,9 @@\n+2017-06-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80974\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not change but only\n+\tkeep or clear leaders SSA info.\n+\n 2017-06-06  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/nvptx/nvptx.c (split_mode_p): New function."}, {"sha": "a23dc7a184a2ddea8caa08db9b443c14f7b7b8d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=331dc84013b27d0f13c640262248e51a5864d26d", "patch": "@@ -1,3 +1,8 @@\n+2017-06-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80974\n+\t* gcc.dg/torture/pr80974.c: New testcase.\n+\n 2017-06-06  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.dg/utf16-4.c: Accept \"long unsigned int\" as well as"}, {"sha": "4918607ba1f2de89c41086c3b355582a3a37350f", "filename": "gcc/testsuite/gcc.dg/torture/pr80974.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80974.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80974.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80974.c?ref=331dc84013b27d0f13c640262248e51a5864d26d", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+\n+int a, b, c, d, e, f, g[4];\n+\n+static int fn1 ()\n+{\n+  int h, i;\n+  if (b)\n+    goto L1;\n+L2:;\n+   int m = a;\n+   while (1)\n+     {\n+       int n = 2;\n+       e = !f && (n = 5);\n+       if (e)\n+\t for (h = 0; h < 9; h++)\n+\t   for (i = 0; i < 6; i++)\n+\t     if (a)\n+\t       g[h] = 4;\n+       if (d)\n+\t goto L2;\n+       a & n || b;\n+L1:\n+       if (a)\n+\t L3:\n+\t     c = m;\n+       if (a)\n+\t goto L3;\n+       if (b < 5)\n+\t return 0;\n+     }\n+}\n+\n+int main ()\n+{\n+  fn1 ();\n+  return 0; \n+}"}, {"sha": "ff5c800662b284994c35453c7cf8007b689d53f3", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 15, "deletions": 29, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331dc84013b27d0f13c640262248e51a5864d26d/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=331dc84013b27d0f13c640262248e51a5864d26d", "patch": "@@ -3328,6 +3328,9 @@ set_ssa_val_to (tree from, tree to)\n \t       == get_addr_base_and_unit_offset (TREE_OPERAND (to, 0), &toff))\n \t   && coff == toff))\n     {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file, \" (changed)\\n\");\n+\n       /* If we equate two SSA names we have to make the side-band info\n          of the leader conservative (and remember whatever original value\n \t was present).  */\n@@ -3342,22 +3345,6 @@ set_ssa_val_to (tree from, tree to)\n \t\t\t gimple_bb (SSA_NAME_DEF_STMT (to))))\n \t\t/* Keep the info from the dominator.  */\n \t\t;\n-\t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n-\t\t       || dominated_by_p_w_unex\n-\t\t\t    (gimple_bb (SSA_NAME_DEF_STMT (to)),\n-\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from))))\n-\t\t{\n-\t\t  /* Save old info.  */\n-\t\t  if (! VN_INFO (to)->info.range_info)\n-\t\t    {\n-\t\t      VN_INFO (to)->info.range_info = SSA_NAME_RANGE_INFO (to);\n-\t\t      VN_INFO (to)->range_info_anti_range_p\n-\t\t\t= SSA_NAME_ANTI_RANGE_P (to);\n-\t\t    }\n-\t\t  /* Use that from the dominator.  */\n-\t\t  SSA_NAME_RANGE_INFO (to) = SSA_NAME_RANGE_INFO (from);\n-\t\t  SSA_NAME_ANTI_RANGE_P (to) = SSA_NAME_ANTI_RANGE_P (from);\n-\t\t}\n \t      else\n \t\t{\n \t\t  /* Save old info.  */\n@@ -3369,6 +3356,12 @@ set_ssa_val_to (tree from, tree to)\n \t\t    }\n \t\t  /* Rather than allocating memory and unioning the info\n \t\t     just clear it.  */\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    {\n+\t\t      fprintf (dump_file, \"clearing range info of \");\n+\t\t      print_generic_expr (dump_file, to);\n+\t\t      fprintf (dump_file, \"\\n\");\n+\t\t    }\n \t\t  SSA_NAME_RANGE_INFO (to) = NULL;\n \t\t}\n \t    }\n@@ -3381,17 +3374,6 @@ set_ssa_val_to (tree from, tree to)\n \t\t\t gimple_bb (SSA_NAME_DEF_STMT (to))))\n \t\t/* Keep the info from the dominator.  */\n \t\t;\n-\t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n-\t\t       || dominated_by_p_w_unex\n-\t\t\t    (gimple_bb (SSA_NAME_DEF_STMT (to)),\n-\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from))))\n-\t\t{\n-\t\t  /* Save old info.  */\n-\t\t  if (! VN_INFO (to)->info.ptr_info)\n-\t\t    VN_INFO (to)->info.ptr_info = SSA_NAME_PTR_INFO (to);\n-\t\t  /* Use that from the dominator.  */\n-\t\t  SSA_NAME_PTR_INFO (to) = SSA_NAME_PTR_INFO (from);\n-\t\t}\n \t      else if (! SSA_NAME_PTR_INFO (from)\n \t\t       /* Handle the case of trivially equivalent info.  */\n \t\t       || memcmp (SSA_NAME_PTR_INFO (to),\n@@ -3403,14 +3385,18 @@ set_ssa_val_to (tree from, tree to)\n \t\t    VN_INFO (to)->info.ptr_info = SSA_NAME_PTR_INFO (to);\n \t\t  /* Rather than allocating memory and unioning the info\n \t\t     just clear it.  */\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    {\n+\t\t      fprintf (dump_file, \"clearing points-to info of \");\n+\t\t      print_generic_expr (dump_file, to);\n+\t\t      fprintf (dump_file, \"\\n\");\n+\t\t    }\n \t\t  SSA_NAME_PTR_INFO (to) = NULL;\n \t\t}\n \t    }\n \t}\n \n       VN_INFO (from)->valnum = to;\n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \" (changed)\\n\");\n       return true;\n     }\n   if (dump_file && (dump_flags & TDF_DETAILS))"}]}