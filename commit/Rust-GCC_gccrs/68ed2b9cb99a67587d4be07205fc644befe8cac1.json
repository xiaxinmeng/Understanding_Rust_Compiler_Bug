{"sha": "68ed2b9cb99a67587d4be07205fc644befe8cac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlZDJiOWNiOTlhNjc1ODdkNGJlMDcyMDVmYzY0NGJlZmU4Y2FjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-09-14T21:17:43Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-14T21:17:43Z"}, "message": "sh.md: Use match_test rather than eq/ne symbol_ref throughout file.\n\ngcc/\n\t* config/sh/sh.md: Use match_test rather than eq/ne symbol_ref\n\tthroughout file.\n\nFrom-SVN: r178868", "tree": {"sha": "507bb55003cb2b2ee87ec894e3273abfb78dc5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/507bb55003cb2b2ee87ec894e3273abfb78dc5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ed2b9cb99a67587d4be07205fc644befe8cac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed2b9cb99a67587d4be07205fc644befe8cac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ed2b9cb99a67587d4be07205fc644befe8cac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed2b9cb99a67587d4be07205fc644befe8cac1/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3"}], "stats": {"total": 124, "additions": 62, "deletions": 62}, "files": [{"sha": "3a68c928fd96371f936b77001bcbd8a43d2c424c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ed2b9cb99a67587d4be07205fc644befe8cac1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ed2b9cb99a67587d4be07205fc644befe8cac1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68ed2b9cb99a67587d4be07205fc644befe8cac1", "patch": "@@ -1,3 +1,8 @@\n+2011-09-14  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/sh/sh.md: Use match_test rather than eq/ne symbol_ref\n+\tthroughout file.\n+\n 2011-09-14  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/s390/s390.md: Use match_test rather than eq/ne symbol_ref"}, {"sha": "f2c4e551ada0f4ed4f6b8683f0e82ae0646d66be", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 57, "deletions": 62, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ed2b9cb99a67587d4be07205fc644befe8cac1/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ed2b9cb99a67587d4be07205fc644befe8cac1/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=68ed2b9cb99a67587d4be07205fc644befe8cac1", "patch": "@@ -346,11 +346,11 @@\n ;; ??? This looks ugly because genattrtab won't allow if_then_else or cond\n ;; inside an le.\n (define_attr \"short_cbranch_p\" \"no,yes\"\n-  (cond [(ne (symbol_ref \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\") (const_int 0))\n+  (cond [(match_test \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 252)) (const_int 506))\n \t (const_string \"yes\")\n-\t (ne (symbol_ref \"NEXT_INSN (PREV_INSN (insn)) != insn\") (const_int 0))\n+\t (match_test \"NEXT_INSN (PREV_INSN (insn)) != insn\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 252)) (const_int 508))\n \t (const_string \"yes\")\n@@ -360,7 +360,7 @@\n   (cond [(leu (plus (minus (match_dup 0) (pc)) (const_int 990))\n \t      (const_int 1988))\n \t (const_string \"yes\")\n-\t (ne (symbol_ref \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\") (const_int 0))\n+\t (match_test \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 4092))\n \t      (const_int 8186))\n@@ -371,33 +371,33 @@\n   (cond [(leu (plus (minus (match_dup 0) (pc)) (const_int 988))\n \t      (const_int 1986))\n \t (const_string \"yes\")\n-\t (ne (symbol_ref \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\") (const_int 0))\n+\t (match_test \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 4090))\n \t       (const_int 8184))\n \t (const_string \"yes\")\n \t ] (const_string \"no\")))\n \n (define_attr \"braf_branch_p\" \"no,yes\"\n-  (cond [(ne (symbol_ref \"! TARGET_SH2\") (const_int 0))\n+  (cond [(match_test \"! TARGET_SH2\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 10330))\n \t      (const_int 20660))\n \t (const_string \"yes\")\n-\t (ne (symbol_ref \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\") (const_int 0))\n+\t (match_test \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 32764))\n \t      (const_int 65530))\n \t (const_string \"yes\")\n \t ] (const_string \"no\")))\n \n (define_attr \"braf_cbranch_p\" \"no,yes\"\n-  (cond [(ne (symbol_ref \"! TARGET_SH2\") (const_int 0))\n+  (cond [(match_test \"! TARGET_SH2\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 10328))\n \t      (const_int 20658))\n \t (const_string \"yes\")\n-\t (ne (symbol_ref \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\") (const_int 0))\n+\t (match_test \"mdep_reorg_phase <= SH_FIXUP_PCLOAD\")\n \t (const_string \"no\")\n \t (leu (plus (minus (match_dup 0) (pc)) (const_int 32762))\n \t      (const_int 65528))\n@@ -426,39 +426,36 @@\n ;; ??? using pc is not computed transitively.\n \t\t(ne (match_dup 0) (match_dup 0))\n \t\t(const_int 14)\n-\t\t(ne (symbol_ref (\"flag_pic\")) (const_int 0))\n+\t\t(match_test \"flag_pic\")\n \t\t(const_int 24)\n \t\t] (const_int 16))\n \t (eq_attr \"type\" \"jump\")\n \t (cond [(eq_attr \"med_branch_p\" \"yes\")\n \t\t(const_int 2)\n-\t\t(and (ne (symbol_ref \"prev_nonnote_insn (insn)\")\n-\t\t\t (const_int 0))\n-\t\t     (and (eq (symbol_ref \"GET_CODE (prev_nonnote_insn (insn))\")\n-\t\t\t      (symbol_ref \"INSN\"))\n-\t\t\t  (eq (symbol_ref \"INSN_CODE (prev_nonnote_insn (insn))\")\n-\t\t\t      (symbol_ref \"code_for_indirect_jump_scratch\"))))\n+\t\t(and (match_test \"prev_nonnote_insn (insn)\")\n+\t\t     (and (eq (symbol_ref \"GET_CODE (prev_nonnote_insn (insn))\")\t\t\t      (symbol_ref \"INSN\"))\n+\t\t\t  (eq (symbol_ref \"INSN_CODE (prev_nonnote_insn (insn))\")\t\t\t      (symbol_ref \"code_for_indirect_jump_scratch\"))))\n                 (cond [(eq_attr \"braf_branch_p\" \"yes\")\n                        (const_int 6)\n-                       (eq (symbol_ref \"flag_pic\") (const_int 0))\n+                       (not (match_test \"flag_pic\"))\n                        (const_int 10)\n-                       (ne (symbol_ref \"TARGET_SH2\") (const_int 0))\n+                       (match_test \"TARGET_SH2\")\n                        (const_int 10)] (const_int 18))\n \t\t(eq_attr \"braf_branch_p\" \"yes\")\n \t\t(const_int 10)\n ;; ??? using pc is not computed transitively.\n \t\t(ne (match_dup 0) (match_dup 0))\n \t\t(const_int 12)\n-\t\t(ne (symbol_ref (\"flag_pic\")) (const_int 0))\n+\t\t(match_test \"flag_pic\")\n \t\t(const_int 22)\n \t\t] (const_int 14))\n \t (eq_attr \"type\" \"pt_media\")\n-\t (if_then_else (ne (symbol_ref \"TARGET_SHMEDIA64\") (const_int 0))\n+\t (if_then_else (match_test \"TARGET_SHMEDIA64\")\n \t\t       (const_int 20) (const_int 12))\n \t (and (eq_attr \"type\" \"jump_media\")\n-\t      (ne (symbol_ref \"TARGET_SH5_CUT2_WORKAROUND\") (const_int 0)))\n+\t      (match_test \"TARGET_SH5_CUT2_WORKAROUND\"))\n \t (const_int 8)\n-\t ] (if_then_else (ne (symbol_ref \"TARGET_SHMEDIA\") (const_int 0))\n+\t ] (if_then_else (match_test \"TARGET_SHMEDIA\")\n \t\t\t (const_int 4)\n \t\t\t (const_int 2))))\n \n@@ -476,15 +473,13 @@\n (define_attr \"needs_delay_slot\" \"yes,no\" (const_string \"no\"))\n \n (define_attr \"banked\" \"yes,no\" \n-\t(cond [(eq (symbol_ref \"sh_loads_bankedreg_p (insn)\")\n-\t\t   (const_int 1))\n+\t(cond [(match_test \"sh_loads_bankedreg_p (insn)\")\n \t       (const_string \"yes\")]\n \t      (const_string \"no\")))\n \n ;; ??? This should be (nil) instead of (const_int 0)\n (define_attr \"hit_stack\" \"yes,no\"\n-\t(cond [(eq (symbol_ref \"find_regno_note (insn, REG_INC, SP_REG)\")\n-\t\t   (const_int 0))\n+\t(cond [(not (match_test \"find_regno_note (insn, REG_INC, SP_REG)\"))\n \t       (const_string \"no\")]\n \t      (const_string \"yes\")))\n \n@@ -559,7 +554,7 @@\n \t\t  (eq_attr \"type\" \"!pload,prset\"))\n \t     (and (eq_attr \"interrupt_function\" \"yes\")\n \t\t  (ior\n-\t\t   (eq (symbol_ref \"TARGET_SH3\") (const_int 0))\n+\t\t   (not (match_test \"TARGET_SH3\"))\n \t\t   (eq_attr \"hit_stack\" \"no\")\n \t\t   (eq_attr \"banked\" \"no\"))))) (nil) (nil)])\n \n@@ -580,7 +575,7 @@\n \n (define_delay\n   (and (eq_attr \"type\" \"cbranch\")\n-       (ne (symbol_ref \"TARGET_SH2\") (const_int 0)))\n+       (match_test \"TARGET_SH2\"))\n   ;; SH2e has a hardware bug that pretty much prohibits the use of\n   ;; annuled delay slots.\n   [(eq_attr \"cond_delay_slot\" \"yes\") (and (eq_attr \"cond_delay_slot\" \"yes\")\n@@ -3478,7 +3473,7 @@ label:\n   \"TARGET_SH1 && ! sh_dynamicalize_shift_p (operands[2])\"\n   \"#\"\n   [(set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 1))\n+\t(cond [(match_test \"shift_insns_rtx (insn)\")\n \t       (const_string \"2\")\n \t       (eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 2))\n \t       (const_string \"4\")\n@@ -3544,7 +3539,7 @@ label:\n   \"TARGET_SH1\"\n   \"#\"\n   [(set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 1))\n+\t(cond [(match_test \"shift_insns_rtx (insn)\")\n \t       (const_string \"2\")\n \t       (eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 2))\n \t       (const_string \"4\")]\n@@ -3780,7 +3775,7 @@ label:\n   \"TARGET_SH1 && ! sh_dynamicalize_shift_p (operands[2])\"\n   \"#\"\n   [(set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 1))\n+\t(cond [(match_test \"shift_insns_rtx (insn)\")\n \t       (const_string \"2\")\n \t       (eq (symbol_ref \"shift_insns_rtx (insn)\") (const_int 2))\n \t       (const_string \"4\")\n@@ -4201,7 +4196,7 @@ label:\n   \"TARGET_SH1 && (unsigned)shl_sext_kind (operands[2], operands[3], 0) - 1 < 5\"\n   \"#\"\n   [(set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"shl_sext_length (insn)\") (const_int 1))\n+\t(cond [(match_test \"shl_sext_length (insn)\")\n \t       (const_string \"2\")\n \t       (eq (symbol_ref \"shl_sext_length (insn)\") (const_int 2))\n \t       (const_string \"4\")\n@@ -4377,7 +4372,7 @@ label:\n \tld%M1.uw\t%m1, %0\"\n   [(set_attr \"type\" \"*,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4413,7 +4408,7 @@ label:\n \tld%M1.ub\t%m1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4443,7 +4438,7 @@ label:\n \tld%M1.uw\t%m1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4490,7 +4485,7 @@ label:\n \tld%M1.ub\t%m1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4519,7 +4514,7 @@ label:\n \tfmov.sl\t%1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media,fpconv_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"extend\")))])\n \n@@ -4532,7 +4527,7 @@ label:\n \tld%M1.w\t%m1, %0\"\n   [(set_attr \"type\" \"*,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4557,7 +4552,7 @@ label:\n \tld%M1.b\t%m1, %0\"\n   [(set_attr \"type\" \"*,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4597,7 +4592,7 @@ label:\n \tld%M1.w\t%m1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4634,7 +4629,7 @@ label:\n    (set_attr_alternative \"length\"\n      [(const_int 2)\n        (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))])])\n \n (define_insn \"*extendqisi2_media\"\n@@ -4646,7 +4641,7 @@ label:\n \tld%M1.b\t%m1, %0\"\n   [(set_attr \"type\" \"arith_media,load_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -4677,7 +4672,7 @@ label:\n    (set_attr_alternative \"length\"\n      [(const_int 2)\n        (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))])])\n \n /* It would seem useful to combine the truncXi patterns into the movXi\n@@ -4696,7 +4691,7 @@ label:\n \tfmov.s\t%T1, %0\"\n   [(set_attr \"type\"   \"arith_media,store_media,fstore_media,fload_media,fpconv_media,fmove_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"extend\")))])\n \n@@ -4710,7 +4705,7 @@ label:\n   [(set_attr \"type\"   \"arith_media,store_media\")\n    (set_attr \"length\" \"8,4\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"extend\")))])\n \n@@ -4726,7 +4721,7 @@ label:\n \tst%M0.b\t%m0, %1\"\n   [(set_attr \"type\"   \"arith_media,store\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"extend\")))])\n ;; -------------------------------------------------------------------------\n@@ -4937,13 +4932,13 @@ label:\n       (const_int 4)\n       (const_int 2)\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (const_int 2)\n       (const_int 2)\n       (const_int 2)\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (const_int 2)\n       (const_int 2)\n@@ -5021,7 +5016,7 @@ label:\n   [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,fload_media,fstore_media,fload_media,fpconv_media,fmove_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,8,4,4,4,4,4,4,4,4,4,12\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -5046,7 +5041,7 @@ label:\n   [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,8,4,4,4,4,12\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -5241,10 +5236,10 @@ label:\n      [(const_int 2)\n       (const_int 2)\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (const_int 2)\n       (const_int 2)\n@@ -5263,7 +5258,7 @@ label:\n \tst%M0.b\t%m0, %N1\"\n   [(set_attr \"type\" \"arith_media,arith_media,load_media,store_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -5325,7 +5320,7 @@ label:\n \tst%M0.w\t%m0, %N1\"\n   [(set_attr \"type\" \"arith_media,arith_media,*,load_media,store_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -5831,10 +5826,10 @@ label:\n       ;; We can't use 4-byte push/pop on SHcompact, so we have to\n       ;; increment or decrement r15 explicitly.\n       (if_then_else\n-       (ne (symbol_ref \"TARGET_SHCOMPACT\") (const_int 0))\n+       (match_test \"TARGET_SHCOMPACT\")\n        (const_int 10) (const_int 8))\n       (if_then_else\n-       (ne (symbol_ref \"TARGET_SHCOMPACT\") (const_int 0))\n+       (match_test \"TARGET_SHCOMPACT\")\n        (const_int 10) (const_int 8))])\n    (set_attr \"type\" \"fmove,move,pcfload,fload,fstore,pcload,load,store,load,fload\")\n    (set_attr \"late_fp_use\" \"*,*,*,*,yes,*,*,*,*,*\")\n@@ -6514,7 +6509,7 @@ label:\n \tst%M0.l\t%m0, %N1\"\n   [(set_attr \"type\" \"fmove_media,fload_media,fpconv_media,arith_media,*,fload_media,fstore_media,load_media,store_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -6531,7 +6526,7 @@ label:\n \tst%M0.l\t%m0, %N1\"\n   [(set_attr \"type\" \"arith_media,*,load_media,store_media\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n \n@@ -6623,17 +6618,17 @@ label:\n       (const_int 2)\n       (const_int 4)\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (const_int 2)\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (if_then_else\n-\t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))\n+\t(match_test \"TARGET_SH2A\")\n \t(const_int 4) (const_int 2))\n       (const_int 2)\n       (const_int 2)\n@@ -11613,7 +11608,7 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media\")\n    (set_attr \"length\" \"4,4,16,4,4\")\n    (set (attr \"highpart\")\n-\t(cond [(ne (symbol_ref \"sh_contains_memref_p (insn)\") (const_int 0))\n+\t(cond [(match_test \"sh_contains_memref_p (insn)\")\n \t       (const_string \"user\")]\n \t      (const_string \"ignore\")))])\n "}]}