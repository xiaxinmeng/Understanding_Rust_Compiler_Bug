{"sha": "d8909271a2b44fddfb6d3a6719a82e3836ddfcb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg5MDkyNzFhMmI0NGZkZGZiNmQzYTY3MTlhODJlMzgzNmRkZmNiMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-03T14:02:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-03T14:03:11Z"}, "message": "libcpp: unbreak bootstrap\n\nThis fixes the bootstrap breakage I caused.  Sorry about that.\n\n\tlibcpp/\n\t* init.c (cpp_read_main_file): Use cpp_get_deps result.", "tree": {"sha": "d520fa82edc609dfeff6518f46698d0243c8e803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d520fa82edc609dfeff6518f46698d0243c8e803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60be12c32cb3a07a64efdab1f0ee6fd74536cc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60be12c32cb3a07a64efdab1f0ee6fd74536cc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60be12c32cb3a07a64efdab1f0ee6fd74536cc93"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6c52f50de398b0990abcb695ac474d7b91b01a29", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8909271a2b44fddfb6d3a6719a82e3836ddfcb3/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=d8909271a2b44fddfb6d3a6719a82e3836ddfcb3", "patch": "@@ -669,7 +669,7 @@ cpp_read_main_file (cpp_reader *pfile, const char *fname, bool injecting)\n {\n   if (mkdeps *deps = cpp_get_deps (pfile))\n     /* Set the default target (if there is none already).  */\n-    deps_add_default_target (pfile->deps, fname);\n+    deps_add_default_target (deps, fname);\n \n   pfile->main_file\n     = _cpp_find_file (pfile, fname, &pfile->no_search_path, /*angle=*/0,"}]}