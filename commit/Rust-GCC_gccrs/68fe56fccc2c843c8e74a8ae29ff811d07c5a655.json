{"sha": "68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmZTU2ZmNjYzJjODQzYzhlNzRhOGFlMjlmZjgxMWQwN2M1YTY1NQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2004-08-13T15:24:30Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2004-08-13T15:24:30Z"}, "message": "* sh.md (cbranch define_delay) Use cond_delay_slot for\n\tnon-anulled condition too.\n\nFrom-SVN: r85941", "tree": {"sha": "6bf230a2ceaf00d2fe946dd0957e2e5f2550562e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bf230a2ceaf00d2fe946dd0957e2e5f2550562e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fe56fccc2c843c8e74a8ae29ff811d07c5a655/comments", "author": null, "committer": null, "parents": [{"sha": "a688b3aca294c00257ed988d3af3d063d66424b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a688b3aca294c00257ed988d3af3d063d66424b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a688b3aca294c00257ed988d3af3d063d66424b6"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "47c8fb2c053f49fce1d0508390a25fae0a8fb588", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe56fccc2c843c8e74a8ae29ff811d07c5a655/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe56fccc2c843c8e74a8ae29ff811d07c5a655/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "patch": "@@ -1,3 +1,8 @@\n+2004-08-13  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.md (cbranch define_delay) Use cond_delay_slot for\n+\tnon-anulled condition too.\n+\n 2004-08-12  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (any_parallel_operand): New predicate."}, {"sha": "cb7de4004c890f3f944e3a236aafed5d5f805ce7", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe56fccc2c843c8e74a8ae29ff811d07c5a655/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe56fccc2c843c8e74a8ae29ff811d07c5a655/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=68fe56fccc2c843c8e74a8ae29ff811d07c5a655", "patch": "@@ -524,12 +524,16 @@\n ;; Say that we have annulled true branches, since this gives smaller and\n ;; faster code when branches are predicted as not taken.\n \n+;; ??? The non-annulled condition should really be \"in_delay_slot\",\n+;; but insns that can be filled in non-annulled get priority over insns\n+;; that can only be filled in anulled.\n+\n (define_delay\n   (and (eq_attr \"type\" \"cbranch\")\n        (ne (symbol_ref \"TARGET_SH2\") (const_int 0)))\n   ;; SH2e has a hardware bug that pretty much prohibits the use of\n   ;; annuled delay slots.\n-  [(eq_attr \"in_delay_slot\" \"yes\") (and (eq_attr \"cond_delay_slot\" \"yes\")\n+  [(eq_attr \"cond_delay_slot\" \"yes\") (and (eq_attr \"cond_delay_slot\" \"yes\")\n \t\t\t\t\t(not (eq_attr \"cpu\" \"sh2e\"))) (nil)])\n \f\n ;; -------------------------------------------------------------------------"}]}