{"sha": "a57263bc3c2224416b9b2376972d098f96f9226e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3MjYzYmMzYzIyMjQ0MTZiOWIyMzc2OTcyZDA5OGY5NmY5MjI2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-12-06T12:05:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-06T12:05:44Z"}, "message": "function.c (assing_parms): Fix typo in last change.\n\n\t* function.c (assing_parms): Fix typo in last change.\n\t* config/clipper.c (clipper_builtin_saveregs): Remove Checker code.\n\t* config/m88k/m88k.c (m88k_builtin_saveregs): Likewise.\n\t* config/pa/pa.c (hppa_builtin_saveregs): Likewise.\n\t* config/sparc/sparc.c (sparc_builtin_saveregs): Likewise.\n\nFrom-SVN: r47715", "tree": {"sha": "8f1c59115b59ac5080eeedd64fce7e3faf2b4671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f1c59115b59ac5080eeedd64fce7e3faf2b4671"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a57263bc3c2224416b9b2376972d098f96f9226e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57263bc3c2224416b9b2376972d098f96f9226e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a57263bc3c2224416b9b2376972d098f96f9226e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57263bc3c2224416b9b2376972d098f96f9226e/comments", "author": null, "committer": null, "parents": [{"sha": "5b8c23564eb438eda9827b5341d05419afd092e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8c23564eb438eda9827b5341d05419afd092e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8c23564eb438eda9827b5341d05419afd092e4"}], "stats": {"total": 75, "additions": 14, "deletions": 61}, "files": [{"sha": "3b306410f525d3c285ca251d8c5c008015ffc64f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -1,3 +1,11 @@\n+Thu Dec  6 06:55:13 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* function.c (assing_parms): Fix typo in last change.\n+\t* config/clipper.c (clipper_builtin_saveregs): Remove Checker code.\n+\t* config/m88k/m88k.c (m88k_builtin_saveregs): Likewise.\n+\t* config/pa/pa.c (hppa_builtin_saveregs): Likewise.\n+\t* config/sparc/sparc.c (sparc_builtin_saveregs): Likewise.\n+\n 2001-12-06  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (rs6000_unique_section): Simplify and"}, {"sha": "7e6bd1330efa69938d470a37b31d3e0b50c95d7b", "filename": "gcc/config/clipper/clipper.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fclipper%2Fclipper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fclipper%2Fclipper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.c?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -423,34 +423,6 @@ clipper_builtin_saveregs ()\n   set_mem_alias_set (mem, set);\n   emit_move_insn (mem, gen_rtx_REG (DFmode, 17));\n \n-  if (current_function_check_memory_usage)\n-    {\n-      emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t f0_addr, ptr_mode,\n-\t\t\t GEN_INT (GET_MODE_SIZE (DFmode)),\n-\t\t\t TYPE_MODE (sizetype),\n-\t\t\t GEN_INT (MEMORY_USE_RW),\n-\t\t\t TYPE_MODE (integer_type_node));\n-      emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t f1_addr, ptr_mode,\n-\t\t\t GEN_INT (GET_MODE_SIZE (DFmode)),\n-\t\t\t TYPE_MODE (sizetype),\n-\t\t\t GEN_INT (MEMORY_USE_RW), \n-\t\t\t TYPE_MODE (integer_type_node));\n-      emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t r0_addr, ptr_mode,\n-\t\t\t GEN_INT (GET_MODE_SIZE (SImode)),\n-\t\t\t TYPE_MODE (sizetype),\n-\t\t\t GEN_INT (MEMORY_USE_RW),\n-\t\t\t TYPE_MODE (integer_type_node));\n-      emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t r1_addr, ptr_mode,\n-\t\t\t GEN_INT (GET_MODE_SIZE (SImode)),\n-\t\t\t TYPE_MODE (sizetype),\n-\t\t\t GEN_INT (MEMORY_USE_RW),\n-\t\t\t TYPE_MODE (integer_type_node));\n-    }\n-\n   return addr;\n }\n "}, {"sha": "df5019655c7b0f8d22e5fef5647ce7cb7891eabf", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -2604,7 +2604,7 @@ m88k_function_arg (args_so_far, mode, type, named)\n struct rtx_def *\n m88k_builtin_saveregs ()\n {\n-  rtx addr, dest;\n+  rtx addr;\n   tree fntype = TREE_TYPE (current_function_decl);\n   int argadj = ((!(TYPE_ARG_TYPES (fntype) != 0\n \t\t   && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n@@ -2627,21 +2627,10 @@ m88k_builtin_saveregs ()\n \n   /* Now store the incoming registers.  */\n   if (fixed < 8)\n-    {\n-      dest = adjust_address (addr, Pmode, fixed * UNITS_PER_WORD);\n-      move_block_from_reg (2 + fixed, dest, 8 - fixed,\n-\t\t\t   UNITS_PER_WORD * (8 - fixed));\n-\n-      if (current_function_check_memory_usage)\n-\t{\n-\t  emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t     dest, ptr_mode,\n-\t\t\t     GEN_INT (UNITS_PER_WORD * (8 - fixed)),\n-\t\t\t     TYPE_MODE (sizetype),\n-\t\t\t     GEN_INT (MEMORY_USE_RW),\n-\t\t\t     TYPE_MODE (integer_type_node));\n-\t}\n-    }\n+    move_block_from_reg (2 + fixed,\n+\t\t\t adjust_address (addr, Pmode, fixed * UNITS_PER_WORD),\n+\t\t\t 8 - fixed,\n+\t\t\t UNITS_PER_WORD * (8 - fixed));\n \n   /* Return the address of the save area, but don't put it in a\n      register.  This fails when not optimizing and produces worse code"}, {"sha": "27d2d79423fc8f3548b74c2fff290888de03cda0", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -4913,13 +4913,6 @@ hppa_builtin_saveregs ()\n      last argument register store.  So we emit a blockage insn here.  */\n   emit_insn (gen_blockage ());\n \n-  if (current_function_check_memory_usage)\n-    emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t       dest, ptr_mode,\n-\t\t       GEN_INT (4 * UNITS_PER_WORD), TYPE_MODE (sizetype),\n-\t\t       GEN_INT (MEMORY_USE_RW),\n-\t\t       TYPE_MODE (integer_type_node));\n-\n   return copy_to_reg (expand_binop (Pmode, add_optab,\n \t\t\t\t    current_function_internal_arg_pointer,\n \t\t\t\t    offset, 0, 0, OPTAB_LIB_WIDEN));"}, {"sha": "ec3aa0e86eb720a673a0ef01638794eaa3d3b743", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -4828,15 +4828,6 @@ sparc_builtin_saveregs ()\n \t\t\t  GEN_INT (STACK_POINTER_OFFSET\n \t\t\t\t   + UNITS_PER_WORD * first_reg));\n \n-  if (current_function_check_memory_usage\n-      && first_reg < NPARM_REGS (word_mode))\n-    emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t       address, ptr_mode,\n-\t\t       GEN_INT (UNITS_PER_WORD \n-\t\t\t \t* (NPARM_REGS (word_mode) - first_reg)),\n-\t\t       TYPE_MODE (sizetype), GEN_INT (MEMORY_USE_RW),\n-\t\t       TYPE_MODE (integer_type_node));\n-\n   return address;\n }\n "}, {"sha": "082d6c6737bf80321b1b9752cb7c9bf7e83eb33a", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57263bc3c2224416b9b2376972d098f96f9226e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a57263bc3c2224416b9b2376972d098f96f9226e", "patch": "@@ -5045,7 +5045,7 @@ assign_parms (fndecl)\n     = (stack_args_size.var == 0 ? GEN_INT (-stack_args_size.constant)\n        : expand_expr (size_diffop (stack_args_size.var,\n \t\t\t\t   size_int (-stack_args_size.constant)),\n-\t\t      NULL_RTX, VOIDmode, 0);\n+\t\t      NULL_RTX, VOIDmode, 0));\n #else\n   current_function_arg_offset_rtx = ARGS_SIZE_RTX (stack_args_size);\n #endif"}]}