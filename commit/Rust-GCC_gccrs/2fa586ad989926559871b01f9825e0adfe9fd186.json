{"sha": "2fa586ad989926559871b01f9825e0adfe9fd186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhNTg2YWQ5ODk5MjY1NTk4NzFiMDFmOTgyNWUwYWRmZTlmZDE4Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-12-07T19:34:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-12-07T19:34:11Z"}, "message": "re PR c++/68464 (ICE in valid constexpr function: ../../src/gcc/tree.c:11497)\n\n\tPR c++/68464\n\t* cp-gimplify.c (cp_fold): Don't assume X has TREE_TYPE.\n\t(cp_genericize): Don't do cp_fold_r here.\n\t(cp_fold_function): New.\n\t* cp-tree.h: Declare it.\n\t* decl.c (finish_function): Call it and the pre-genericize plugin\n\tbefore NRV processing.\n\nFrom-SVN: r231381", "tree": {"sha": "644e845c48d787861c08b7d50cc20f0f8e02d0a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644e845c48d787861c08b7d50cc20f0f8e02d0a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa586ad989926559871b01f9825e0adfe9fd186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa586ad989926559871b01f9825e0adfe9fd186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa586ad989926559871b01f9825e0adfe9fd186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa586ad989926559871b01f9825e0adfe9fd186/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7873d5fbc379c29055f5c67b3e33126bf0bdd214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7873d5fbc379c29055f5c67b3e33126bf0bdd214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7873d5fbc379c29055f5c67b3e33126bf0bdd214"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "5232534dfd891b519af8a1bdc15dfcb7b21dc33d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2fa586ad989926559871b01f9825e0adfe9fd186", "patch": "@@ -1,5 +1,13 @@\n 2015-12-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/68464\n+\t* cp-gimplify.c (cp_fold): Don't assume X has TREE_TYPE.\n+\t(cp_genericize): Don't do cp_fold_r here.\n+\t(cp_fold_function): New.\n+\t* cp-tree.h: Declare it.\n+\t* decl.c (finish_function): Call it and the pre-genericize plugin\n+\tbefore NRV processing.\n+\n \tPR c++/68170\n \t* pt.c (maybe_new_partial_specialization): The injected-class-name\n \tis not a new partial specialization."}, {"sha": "373c9e11aecbb23ac9447272adfb506955edbbb4", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=2fa586ad989926559871b01f9825e0adfe9fd186", "patch": "@@ -991,6 +991,15 @@ cp_fold_r (tree *stmt_p, int *walk_subtrees, void *data)\n   return NULL;\n }\n \n+/* Fold ALL the trees!  FIXME we should be able to remove this, but\n+   apparently that still causes optimization regressions.  */\n+\n+void\n+cp_fold_function (tree fndecl)\n+{\n+  cp_walk_tree (&DECL_SAVED_TREE (fndecl), cp_fold_r, NULL, NULL);\n+}\n+\n /* Perform any pre-gimplification lowering of C++ front end trees to\n    GENERIC.  */\n \n@@ -1475,10 +1484,6 @@ cp_genericize (tree fndecl)\n {\n   tree t;\n \n-  /* Fold ALL the trees!  FIXME we should be able to remove this, but\n-     apparently that still causes optimization regressions.  */\n-  cp_walk_tree (&DECL_SAVED_TREE (fndecl), cp_fold_r, NULL, NULL);\n-\n   /* Fix up the types of parms passed by invisible reference.  */\n   for (t = DECL_ARGUMENTS (fndecl); t; t = DECL_CHAIN (t))\n     if (TREE_ADDRESSABLE (TREE_TYPE (t)))\n@@ -1936,11 +1941,11 @@ cp_fold (tree x)\n   location_t loc;\n   bool rval_ops = true;\n \n-  if (!x || error_operand_p (x))\n+  if (!x || x == error_mark_node)\n     return x;\n \n   if (processing_template_decl\n-      || (EXPR_P (x) && !TREE_TYPE (x)))\n+      || (EXPR_P (x) && (!TREE_TYPE (x) || TREE_TYPE (x) == error_mark_node)))\n     return x;\n \n   /* Don't bother to cache DECLs or constants.  */"}, {"sha": "6190f4ed0e52f5d9174e561acadaf6abce1311d3", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2fa586ad989926559871b01f9825e0adfe9fd186", "patch": "@@ -6812,6 +6812,7 @@ extern tree cxx_omp_clause_dtor\t\t\t(tree, tree);\n extern void cxx_omp_finish_clause\t\t(tree, gimple_seq *);\n extern bool cxx_omp_privatize_by_reference\t(const_tree);\n extern bool cxx_omp_disregard_value_expr\t(tree, bool);\n+extern void cp_fold_function\t\t\t(tree);\n extern tree cp_fully_fold\t\t\t(tree);\n \n /* in name-lookup.c */"}, {"sha": "62636c9eefaed72def3ec29d6b5950b0711ed0af", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa586ad989926559871b01f9825e0adfe9fd186/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2fa586ad989926559871b01f9825e0adfe9fd186", "patch": "@@ -14580,6 +14580,14 @@ finish_function (int flags)\n      the NRV transformation.   */\n   maybe_save_function_definition (fndecl);\n \n+  /* Invoke the pre-genericize plugin before we start munging things.  */\n+  if (!processing_template_decl)\n+    invoke_plugin_callbacks (PLUGIN_PRE_GENERICIZE, fndecl);\n+\n+  /* Perform delayed folding before NRV transformation.  */\n+  if (!processing_template_decl)\n+    cp_fold_function (fndecl);\n+\n   /* Set up the named return value optimization, if we can.  Candidate\n      variables are selected in check_return_expr.  */\n   if (current_function_return_value)\n@@ -14686,7 +14694,6 @@ finish_function (int flags)\n   if (!processing_template_decl)\n     {\n       struct language_function *f = DECL_SAVED_FUNCTION_DATA (fndecl);\n-      invoke_plugin_callbacks (PLUGIN_PRE_GENERICIZE, fndecl);\n       cp_genericize (fndecl);\n       /* Clear out the bits we don't need.  */\n       f->x_current_class_ptr = NULL;"}]}