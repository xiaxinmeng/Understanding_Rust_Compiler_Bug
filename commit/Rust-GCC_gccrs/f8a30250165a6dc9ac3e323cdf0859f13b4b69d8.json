{"sha": "f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhMzAyNTAxNjVhNmRjOWFjM2UzMjNjZGYwODU5ZjEzYjRiNjlkOA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-05-09T17:16:54Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-05-09T17:16:54Z"}, "message": "reload1.c (reload_cse_move2add): Don't turn an implicit truncation into a self-set in the narrow mode.\n\n* reload1.c (reload_cse_move2add): Don't turn an implicit\ntruncation into a self-set in the narrow mode.\n\nFrom-SVN: r66638", "tree": {"sha": "a45f9fe5c6841a2561bee0d8369feff64fbea99c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45f9fe5c6841a2561bee0d8369feff64fbea99c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8/comments", "author": null, "committer": null, "parents": [{"sha": "e912eadf52af10e7ffff54c1c6ec867f2f0ba3bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e912eadf52af10e7ffff54c1c6ec867f2f0ba3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e912eadf52af10e7ffff54c1c6ec867f2f0ba3bc"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "d7ac8d830a75e022e129280c4cb9ab0e9a9ea2be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "patch": "@@ -1,3 +1,8 @@\n+2003-05-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* reload1.c (reload_cse_move2add): Don't turn an implicit\n+\ttruncation into a self-set in the narrow mode.\n+\n 2003-05-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (clzsi2): The CLZ instruction is predicable."}, {"sha": "adae5c8a1622a6d41106274c60d1152f600c6faa", "filename": "gcc/reload1.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a30250165a6dc9ac3e323cdf0859f13b4b69d8/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=f8a30250165a6dc9ac3e323cdf0859f13b4b69d8", "patch": "@@ -9166,7 +9166,14 @@ reload_cse_move2add (first)\n \t\t     value flag.  jump2 already knows how to get rid of\n \t\t     no-op moves.  */\n \t\t  if (new_src == const0_rtx)\n-\t\t    validate_change (insn, &SET_SRC (pat), reg, 0);\n+\t\t    {\n+\t\t      /* If the constants are different, this is a\n+\t\t\t truncation, that, if turned into (set (reg)\n+\t\t\t (reg)), would be discarded.  Maybe we should\n+\t\t\t try a truncMN pattern?  */\n+\t\t      if (INTVAL (src) == reg_offset [regno])\n+\t\t\tvalidate_change (insn, &SET_SRC (pat), reg, 0);\n+\t\t    }\n \t\t  else if (rtx_cost (new_src, PLUS) < rtx_cost (src, SET)\n \t\t\t   && have_add2_insn (reg, new_src))\n \t\t    {\n@@ -9252,9 +9259,15 @@ reload_cse_move2add (first)\n \t\t      int success = 0;\n \n \t\t      if (new_src == const0_rtx)\n-\t\t\t/* See above why we create (set (reg) (reg)) here.  */\n-\t\t\tsuccess\n-\t\t\t  = validate_change (next, &SET_SRC (set), reg, 0);\n+\t\t\t{\n+\t\t\t  if (INTVAL (src) == reg_offset [regno])\n+\t\t\t    /* See above why we create (set (reg)\n+\t\t\t       (reg)) here.  */\n+\t\t\t    success\n+\t\t\t      = validate_change (next, &SET_SRC (set), reg, 0);\n+\t\t\t  else\n+\t\t\t    success = 0;\n+\t\t\t}\n \t\t      else if ((rtx_cost (new_src, PLUS)\n \t\t\t\t< COSTS_N_INSNS (1) + rtx_cost (src3, SET))\n \t\t\t       && have_add2_insn (reg, new_src))"}]}