{"sha": "0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY1NzI5OWQzN2IyOTJiZGZkYzRlMmEwZDBmZTAwOTM1YjhjMTkzMQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-01T16:51:19Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-01T16:51:19Z"}, "message": "c-typeck.c (parser_build_binary_op): Don't call the function unsigned_conversion_warning to spot operand/result type...\n\n\n\t* c-typeck.c (parser_build_binary_op): Don't call the function\n\tunsigned_conversion_warning to spot operand/result type overflow.\n\t(build_binary_op): Instead, call convert_and_check instead of\n\tconvert to report the problem when the operands are promoted.\n\t* c-common.c (unsigned_conversion_warning): Make static.\n\t* c-common.h (unsigned_conversion_warning): Delete prototype.\n\n\t* gcc.dg/Wconversion-3.c: New test case.\n\t* gcc.dg/Wconversion-4.c: Likewise.\n\n\nCo-Authored-By: Joseph Myers <joseph@codesourcery.com>\n\nFrom-SVN: r113418", "tree": {"sha": "5fe7571023d4ea5ca8d0e554a9a317466e1d435f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fe7571023d4ea5ca8d0e554a9a317466e1d435f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/comments", "author": null, "committer": null, "parents": [{"sha": "f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0913ab8d6b3990d68fc498fd2f9d6407fd10536"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "30e68000ff2d9c8101adae7ad98c5fc47c4eb7a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -1,3 +1,12 @@\n+2006-05-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* c-typeck.c (parser_build_binary_op): Don't call the function\n+\tunsigned_conversion_warning to spot operand/result type overflow.\n+\t(build_binary_op): Instead, call convert_and_check instead of\n+\tconvert to report the problem when the operands are promoted.\n+\t* c-common.c (unsigned_conversion_warning): Make static.\n+\t* c-common.h (unsigned_conversion_warning): Delete prototype.\n+\n 2006-05-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/26726"}, {"sha": "fc9def8a2e08f475c7d15b42c65613a823ee3650", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -953,7 +953,7 @@ overflow_warning (tree value)\n    Invoke this function on every expression that might be implicitly\n    converted to an unsigned type.  */\n \n-void\n+static void\n unsigned_conversion_warning (tree result, tree operand)\n {\n   tree type = TREE_TYPE (result);"}, {"sha": "2d4248a49fd588ed8c55480601994b0db5781e23", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -659,7 +659,6 @@ extern void strict_aliasing_warning(tree, tree, tree);\n extern void empty_body_warning (tree, tree);\n extern tree convert_and_check (tree, tree);\n extern void overflow_warning (tree);\n-extern void unsigned_conversion_warning (tree, tree);\n extern bool c_determine_visibility (tree);\n extern bool same_scalar_type_ignoring_signedness (tree, tree);\n "}, {"sha": "2152920be5fa490b089ed7c1bfc76a5ec6567185", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -2628,8 +2628,6 @@ parser_build_binary_op (enum tree_code code, struct c_expr arg1,\n     warning (OPT_Wstring_literal_comparison,\n \t     \"comparison with string literal\");\n \n-  unsigned_conversion_warning (result.value, arg1.value);\n-  unsigned_conversion_warning (result.value, arg2.value);\n   overflow_warning (result.value);\n \n   return result;\n@@ -8367,9 +8365,9 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n   if (!converted)\n     {\n       if (TREE_TYPE (op0) != result_type)\n-\top0 = convert (result_type, op0);\n+\top0 = convert_and_check (result_type, op0);\n       if (TREE_TYPE (op1) != result_type)\n-\top1 = convert (result_type, op1);\n+\top1 = convert_and_check (result_type, op1);\n \n       /* This can happen if one operand has a vector type, and the other\n \t has a different type.  */"}, {"sha": "4ff294189569dc05a3830c86095453422aa665af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -1,3 +1,9 @@\n+2006-05-01  Roger Sayle  <roger@eyesopen.com>\n+\t    Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/Wconversion-3.c: New test case.\n+\t* gcc.dg/Wconversion-4.c: Likewise.\n+\n 2006-05-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/26726"}, {"sha": "d45749d69c0670b2b09e8764e24a21ba694e173a", "filename": "gcc/testsuite/gcc.dg/Wconversion-3.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-3.c?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wconversion\" } */\n+\n+unsigned f(unsigned a) { return a + -1; }  /* { dg-warning \"negative\" } */\n+"}, {"sha": "ddd19879fd4eae72fe33aa83b62243247e54227a", "filename": "gcc/testsuite/gcc.dg/Wconversion-4.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57299d37b292bdfdc4e2a0d0fe00935b8c1931/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion-4.c?ref=0f57299d37b292bdfdc4e2a0d0fe00935b8c1931", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned f(unsigned a) { return a + -1; }\n+"}]}