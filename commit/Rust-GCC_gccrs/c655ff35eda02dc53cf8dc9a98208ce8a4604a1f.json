{"sha": "c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "node_id": "C_kwDOANBUbNoAKGM2NTVmZjM1ZWRhMDJkYzUzY2Y4ZGM5YTk4MjA4Y2U4YTQ2MDRhMWY", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-06-24T02:20:45Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2022-06-24T02:20:45Z"}, "message": "aarch64: testsuite: symbol-range fallback to compile\n\nOn some of our embedded aarch64 targets, RAM size is too small for\nthis test to fit.  It doesn't look like this test requires linking,\nand if it does, the -tiny version may presumably get most of the\ncoverage without going overboard in target system requirements.\n\nStill, linking may be useful, so introduce a two_plus_gigs effective\ntarget, that checks for the ability to link a program with 2GiB of\nsbss, and use that to select whether to link or just compile\nsymbol-range.c.\n\n\nfor  gcc/ChangeLog\n\n\t* doc/sourcebuild.texi (Environment attributes): Document\n\ttwo_plus_gigs.\n\nfor  gcc/testsuite/ChangeLog\n\n\t* lib/target-supports.exp\n\t(check_effective_target_two_plus_gigs): New.\n\t* gcc.target/aarch64/symbol-range.c: Link only on\n\ttwo_plus_gigs targets, compile otherwise.", "tree": {"sha": "0eb1044821f0d68efb20348079f12cb7fa70fdcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eb1044821f0d68efb20348079f12cb7fa70fdcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/comments", "author": null, "committer": null, "parents": [{"sha": "df724ec773d63b2efc4010a7e31280eeb51ee2ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df724ec773d63b2efc4010a7e31280eeb51ee2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df724ec773d63b2efc4010a7e31280eeb51ee2ce"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "3696a58fbf2bc6a9902a09f31e7bf34c55683edf", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "patch": "@@ -2681,6 +2681,9 @@ Target supports @code{sysconf}.\n @item trampolines\n Target supports trampolines.\n \n+@item two_plus_gigs\n+Target supports linking programs with 2+GiB of data.\n+\n @item uclibc\n Target supports uClibc.\n "}, {"sha": "6b15f0872024c5e67af3e5c5716d927feca66f0c", "filename": "gcc/testsuite/gcc.target/aarch64/symbol-range.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsymbol-range.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsymbol-range.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsymbol-range.c?ref=c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do link } */\n+/* { dg-do link { target two_plus_gigs } } */\n+/* { dg-do compile { target { ! two_plus_gigs } } } */\n /* { dg-options \"-O3 -save-temps -mcmodel=small\" } */\n \n char fixed_regs[0x80000000];"}, {"sha": "20171f9d9858450415f955c25c77c2d16ac19b20", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c655ff35eda02dc53cf8dc9a98208ce8a4604a1f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c655ff35eda02dc53cf8dc9a98208ce8a4604a1f", "patch": "@@ -2906,6 +2906,15 @@ proc check_effective_target_le { } {\n     }]\n }\n \n+# Return 1 if we can link a program with 2+GB of data.\n+\n+proc check_effective_target_two_plus_gigs { } {\n+    return [check_no_compiler_messages two_plus_gigs executable {\n+\tint dummy[0x80000000];\n+\tint main () { return 0; }\n+    }]\n+}\n+\n # Return 1 if we're generating 32-bit code using default options, 0\n # otherwise.\n "}]}