{"sha": "ef8fc6c2eff4060e5acf59d7592837d352c706ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY4ZmM2YzJlZmY0MDYwZTVhY2Y1OWQ3NTkyODM3ZDM1MmM3MDZjZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-07-15T16:01:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-07-15T16:01:33Z"}, "message": "lto-symtab.c (lto_symtab_resolve_symbols): Remove hack handling comdats for broken gold.\n\n\t* lto-symtab.c (lto_symtab_resolve_symbols): Remove hack handling comdats\n\tfor broken gold.\n\t(lto_sy\tmtab_merge_decls_1): Set used_from_object_file correctly.\n\nFrom-SVN: r162225", "tree": {"sha": "052badf696ddabc169780546ea09d374868b2551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/052badf696ddabc169780546ea09d374868b2551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef8fc6c2eff4060e5acf59d7592837d352c706ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8fc6c2eff4060e5acf59d7592837d352c706ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8fc6c2eff4060e5acf59d7592837d352c706ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8fc6c2eff4060e5acf59d7592837d352c706ce/comments", "author": null, "committer": null, "parents": [{"sha": "3d894a8eaf6b85393ef136045babc20e3c6e6536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d894a8eaf6b85393ef136045babc20e3c6e6536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d894a8eaf6b85393ef136045babc20e3c6e6536"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "2e80e6900680d1db45dac31f3bfbcf58e7d0732c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef8fc6c2eff4060e5acf59d7592837d352c706ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef8fc6c2eff4060e5acf59d7592837d352c706ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef8fc6c2eff4060e5acf59d7592837d352c706ce", "patch": "@@ -1,3 +1,9 @@\n+2010-07-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-symtab.c (lto_symtab_resolve_symbols): Remove hack handling comdats\n+\tfor broken gold.\n+\t(lto_sy\tmtab_merge_decls_1): Set used_from_object_file correctly. \n+\n 2010-07-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.h (TREE_RTL_OPERAND_CHECK): Delete."}, {"sha": "978bccb90d73679b0b4630046c05a51045657756", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef8fc6c2eff4060e5acf59d7592837d352c706ce/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef8fc6c2eff4060e5acf59d7592837d352c706ce/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=ef8fc6c2eff4060e5acf59d7592837d352c706ce", "patch": "@@ -494,13 +494,7 @@ lto_symtab_resolve_symbols (void **slot)\n       if (TREE_CODE (e->decl) == FUNCTION_DECL)\n \te->node = cgraph_get_node_or_alias (e->decl);\n       else if (TREE_CODE (e->decl) == VAR_DECL)\n-\t{\n-\t  e->vnode = varpool_get_node (e->decl);\n-\t  /* The LTO plugin for gold doesn't handle common symbols\n-\t     properly.  Let us choose manually.  */\n-\t  if (DECL_COMMON (e->decl))\n-\t    e->resolution = LDPR_UNKNOWN;\n-\t}\n+\te->vnode = varpool_get_node (e->decl);\n     }\n \n   e = (lto_symtab_entry_t) *slot;\n@@ -742,23 +736,26 @@ lto_symtab_merge_decls_1 (void **slot, void *data ATTRIBUTE_UNUSED)\n       && TREE_CODE (prevailing->decl) != VAR_DECL)\n     prevailing->next = NULL;\n \n-  /* Set externally_visible flags for declaration of LDPR_PREVAILING_DEF */\n-  if (flag_whole_program)\n+  /* Set used_from_object_file flags.  */\n+  if (prevailing->resolution == LDPR_PREVAILING_DEF\n+      || prevailing->resolution == LDPR_PREEMPTED_REG\n+      || prevailing->resolution == LDPR_RESOLVED_EXEC\n+      || prevailing->resolution == LDPR_RESOLVED_DYN)\n     {\n-      if (prevailing->resolution == LDPR_PREVAILING_DEF)\n-        {\n-          if (TREE_CODE (prevailing->decl) == FUNCTION_DECL)\n-            prevailing->node->local.used_from_object_file = true;\n-          else\n-            prevailing->vnode->used_from_object_file = true;\n-        }\n-      else if (prevailing->resolution == LDPR_PREVAILING_DEF_IRONLY)\n-        {\n-          if (TREE_CODE (prevailing->decl) == FUNCTION_DECL)\n-            prevailing->node->local.used_from_object_file = false;\n-          else\n-            prevailing->vnode->used_from_object_file = false;\n-        }\n+      if (TREE_CODE (prevailing->decl) == FUNCTION_DECL)\n+\t{\n+\t  if (prevailing->node->same_body_alias)\n+\t    prevailing->node->same_body->local.used_from_object_file = true;\n+\t  else\n+\t    prevailing->node->local.used_from_object_file = true;\n+\t}\n+      else\n+\t{\n+\t  if (prevailing->vnode->alias)\n+\t    prevailing->vnode->extra_name->used_from_object_file = true;\n+\t  else\n+\t    prevailing->vnode->used_from_object_file = true;\n+\t}\n     }\n   return 1;\n }"}]}