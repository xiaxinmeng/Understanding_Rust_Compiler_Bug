{"sha": "a48328531e1ecafbbc767fae3c57c4127d999564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ4MzI4NTMxZTFlY2FmYmJjNzY3ZmFlM2M1N2M0MTI3ZDk5OTU2NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-08-02T22:59:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-02T22:59:03Z"}, "message": "class.c (mark_overriders): Fix order of args to overrides.\n\n\t* class.c (mark_overriders): Fix order of args to overrides.\n\t(warn_hidden): Likewise.  Fix for having virtual and non-virtual\n\tfunctions with the same name.\n\nFrom-SVN: r28415", "tree": {"sha": "3dbe2d6cc25848ae5fab98ac1d816d10103d3f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dbe2d6cc25848ae5fab98ac1d816d10103d3f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a48328531e1ecafbbc767fae3c57c4127d999564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48328531e1ecafbbc767fae3c57c4127d999564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a48328531e1ecafbbc767fae3c57c4127d999564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48328531e1ecafbbc767fae3c57c4127d999564/comments", "author": null, "committer": null, "parents": [{"sha": "1cb36a981d95f29f37fef511b88a04c48cfa90cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb36a981d95f29f37fef511b88a04c48cfa90cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb36a981d95f29f37fef511b88a04c48cfa90cc"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "9ba2082157f4af097b825af6a8bd41e9d81232e2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48328531e1ecafbbc767fae3c57c4127d999564/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48328531e1ecafbbc767fae3c57c4127d999564/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a48328531e1ecafbbc767fae3c57c4127d999564", "patch": "@@ -1,3 +1,9 @@\n+1999-08-02  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c (mark_overriders): Fix order of args to overrides.\n+\t(warn_hidden): Likewise.  Fix for having virtual and non-virtual\n+\tfunctions with the same name.\n+\n 1999-08-02  Richard Henderson  <rth@cygnus.com>\n \n \t* cp-tree.h (TYPE_PTRMEMFUNC_P): Check TYPE_LANG_SPECIFIC non-null."}, {"sha": "4373f139490397d5383378192759f10feef2a9e3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48328531e1ecafbbc767fae3c57c4127d999564/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48328531e1ecafbbc767fae3c57c4127d999564/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a48328531e1ecafbbc767fae3c57c4127d999564", "patch": "@@ -2923,18 +2923,18 @@ get_basefndecls (fndecl, t)\n \n /* Mark the functions that have been hidden with their overriders.\n    Since we start out with all functions already marked with a hider,\n-   no need to mark functions that are just hidden.  */\n+   no need to mark functions that are just hidden.\n+\n+   Subroutine of warn_hidden.  */\n \n static void\n mark_overriders (fndecl, base_fndecls)\n      tree fndecl, base_fndecls;\n {\n-  while (base_fndecls)\n+  for (; base_fndecls; base_fndecls = TREE_CHAIN (base_fndecls))\n     {\n-      if (overrides (TREE_VALUE (base_fndecls), fndecl))\n+      if (overrides (fndecl, TREE_VALUE (base_fndecls)))\n \tTREE_PURPOSE (base_fndecls) = fndecl;\n-\n-      base_fndecls = TREE_CHAIN (base_fndecls);\n     }\n }\n \n@@ -3022,8 +3022,15 @@ warn_hidden (t)\n       tree binfos = BINFO_BASETYPES (TYPE_BINFO (t));\n       int i, n_baseclasses = binfos ? TREE_VEC_LENGTH (binfos) : 0;\n \n-      fndecl = OVL_CURRENT (fns);\n-      if (DECL_VINDEX (fndecl) == NULL_TREE)\n+      /* First see if we have any virtual functions in this batch.  */\n+      for (; fns; fns = OVL_NEXT (fns))\n+\t{\n+\t  fndecl = OVL_CURRENT (fns);\n+\t  if (DECL_VINDEX (fndecl))\n+\t    break;\n+\t}\n+\n+      if (fns == NULL_TREE)\n \tcontinue;\n \n       /* First we get a list of all possible functions that might be\n@@ -3038,38 +3045,28 @@ warn_hidden (t)\n \t}\n \n       fns = OVL_NEXT (fns);\n-      if (fns)\n-\tfndecl = OVL_CURRENT (fns);\n-      else\n-\tfndecl = NULL_TREE;\n \n       /* ...then mark up all the base functions with overriders, preferring\n \t overriders to hiders.  */\n       if (base_fndecls)\n-\twhile (fndecl)\n+\tfor (; fns; fns = OVL_NEXT (fns))\n \t  {\n-\t    mark_overriders (fndecl, base_fndecls);\n-\t    \n-\t    fns = OVL_NEXT (fns);\n-\t    if (fns)\n-\t      fndecl = OVL_CURRENT (fns);\n-\t    else\n-\t      fndecl = NULL_TREE;\n+\t    fndecl = OVL_CURRENT (fns);\n+\t    if (DECL_VINDEX (fndecl))\n+\t      mark_overriders (fndecl, base_fndecls);\n \t  }\n \n       /* Now give a warning for all base functions without overriders,\n \t as they are hidden.  */\n-      while (base_fndecls)\n+      for (; base_fndecls; base_fndecls = TREE_CHAIN (base_fndecls))\n \t{\n-\t  if (! overrides (TREE_VALUE (base_fndecls),\n-\t\t\t   TREE_PURPOSE (base_fndecls)))\n+\t  if (! overrides (TREE_PURPOSE (base_fndecls),\n+\t\t\t   TREE_VALUE (base_fndecls)))\n \t    {\n \t      /* Here we know it is a hider, and no overrider exists.  */\n \t      cp_warning_at (\"`%D' was hidden\", TREE_VALUE (base_fndecls));\n \t      cp_warning_at (\"  by `%D'\", TREE_PURPOSE (base_fndecls));\n \t    }\n-\n-\t  base_fndecls = TREE_CHAIN (base_fndecls);\n \t}\n     }\n }"}]}