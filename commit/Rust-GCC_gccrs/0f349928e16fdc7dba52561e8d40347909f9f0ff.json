{"sha": "0f349928e16fdc7dba52561e8d40347909f9f0ff", "node_id": "C_kwDOANBUbNoAKDBmMzQ5OTI4ZTE2ZmRjN2RiYTUyNTYxZThkNDAzNDc5MDlmOWYwZmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-02T08:54:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-02T08:59:27Z"}, "message": "nested, openmp: Wrap OMP_CLAUSE_*_GIMPLE_SEQ into GIMPLE_BIND for declare_vars [PR108435]\n\nWhen gimplifying OMP_CLAUSE_{LASTPRIVATE,LINEAR}_STMT, we wrap it always\ninto a GIMPLE_BIND, but when putting statements directly into\nOMP_CLAUSE_{LASTPRIVATE,LINEAR}_GIMPLE_SEQ, we do it only if needed (there\nare any temporaries that need to be declared in the sequence).\nconvert_nonlocal_omp_clauses was relying on the GIMPLE_BIND to be there always\nbecause it called declare_vars on it.\n\nThe following patch wraps it into GIMPLE_BIND in tree-nested if we need to\ndeclare_vars on it on demand.\n\n2023-02-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/108435\n\t* tree-nested.cc (convert_nonlocal_omp_clauses)\n\t<case OMP_CLAUSE_LASTPRIVATE>: If info->new_local_var_chain and *seq\n\tis not a GIMPLE_BIND, wrap the sequence into a new GIMPLE_BIND\n\tbefore calling declare_vars.\n\t(convert_nonlocal_omp_clauses) <case OMP_CLAUSE_LINEAR>: Merge\n\twith the OMP_CLAUSE_LASTPRIVATE handling except for whether\n\tseq is initialized to &OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (clause)\n\tor &OMP_CLAUSE_LINEAR_GIMPLE_SEQ (clause).\n\n\t* gcc.dg/gomp/pr108435.c: New test.", "tree": {"sha": "b41620be24af33e3b16f084dfe37390e366d5ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b41620be24af33e3b16f084dfe37390e366d5ab9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f349928e16fdc7dba52561e8d40347909f9f0ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f349928e16fdc7dba52561e8d40347909f9f0ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f349928e16fdc7dba52561e8d40347909f9f0ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f349928e16fdc7dba52561e8d40347909f9f0ff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66d700af5bb64cb11650e4c560d44a3876b3f050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d700af5bb64cb11650e4c560d44a3876b3f050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d700af5bb64cb11650e4c560d44a3876b3f050"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "ca692ad0451b8d16305b11855e51cadece1eadc6", "filename": "gcc/testsuite/gcc.dg/gomp/pr108435.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f349928e16fdc7dba52561e8d40347909f9f0ff/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr108435.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f349928e16fdc7dba52561e8d40347909f9f0ff/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr108435.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr108435.c?ref=0f349928e16fdc7dba52561e8d40347909f9f0ff", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/108435 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fopenmp\" } */\n+\n+int\n+main ()\n+{\n+  int i, j;\n+  void\n+  bar (void)\n+  {\n+    #pragma omp for simd collapse(2)\n+     for (i = 1; i <= 16; i++)\n+       for (j = 1; j <= 16; j++)\n+\t ;\n+  }\n+  bar ();\n+}"}, {"sha": "1418e1f7f5621791a3983c73570d6086abb4b088", "filename": "gcc/tree-nested.cc", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f349928e16fdc7dba52561e8d40347909f9f0ff/gcc%2Ftree-nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f349928e16fdc7dba52561e8d40347909f9f0ff/gcc%2Ftree-nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.cc?ref=0f349928e16fdc7dba52561e8d40347909f9f0ff", "patch": "@@ -1566,29 +1566,29 @@ convert_nonlocal_omp_clauses (tree *pclauses, struct walk_stmt_info *wi)\n \t  break;\n \n \tcase OMP_CLAUSE_LASTPRIVATE:\n-\t  {\n-\t    tree save_local_var_chain = info->new_local_var_chain;\n-\t    info->new_local_var_chain = NULL;\n-\t    gimple_seq *seq = &OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (clause);\n-\t    walk_body (convert_nonlocal_reference_stmt,\n-\t\t       convert_nonlocal_reference_op, info, seq);\n-\t    if (info->new_local_var_chain)\n-\t      declare_vars (info->new_local_var_chain,\n-\t\t\t    gimple_seq_first_stmt (*seq), false);\n-\t    info->new_local_var_chain = save_local_var_chain;\n-\t  }\n-\t  break;\n-\n \tcase OMP_CLAUSE_LINEAR:\n \t  {\n \t    tree save_local_var_chain = info->new_local_var_chain;\n \t    info->new_local_var_chain = NULL;\n-\t    gimple_seq *seq = &OMP_CLAUSE_LINEAR_GIMPLE_SEQ (clause);\n+\t    gimple_seq *seq;\n+\t    if (OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_LASTPRIVATE)\n+\t      seq = &OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (clause);\n+\t    else\n+\t      seq = &OMP_CLAUSE_LINEAR_GIMPLE_SEQ (clause);\n \t    walk_body (convert_nonlocal_reference_stmt,\n \t\t       convert_nonlocal_reference_op, info, seq);\n \t    if (info->new_local_var_chain)\n-\t      declare_vars (info->new_local_var_chain,\n-\t\t\t    gimple_seq_first_stmt (*seq), false);\n+\t      {\n+\t\tgimple *g = gimple_seq_first_stmt (*seq);\n+\t\tif (gimple_code (g) != GIMPLE_BIND)\n+\t\t  {\n+\t\t    g = gimple_build_bind (NULL_TREE, *seq, NULL_TREE);\n+\t\t    *seq = NULL;\n+\t\t    gimple_seq_add_stmt_without_update (seq, g);\n+\t\t  }\n+\t\tdeclare_vars (info->new_local_var_chain,\n+\t\t\t      gimple_seq_first_stmt (*seq), false);\n+\t      }\n \t    info->new_local_var_chain = save_local_var_chain;\n \t  }\n \t  break;"}]}