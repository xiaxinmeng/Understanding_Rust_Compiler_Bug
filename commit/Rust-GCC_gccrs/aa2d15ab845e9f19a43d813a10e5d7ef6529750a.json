{"sha": "aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyZDE1YWI4NDVlOWYxOWE0M2Q4MTNhMTBlNWQ3ZWY2NTI5NzUwYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-08-12T07:30:04Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-08-12T07:30:04Z"}, "message": "* intrinsics/bessel.c: Add prototypes for all functions.\n\nFrom-SVN: r116098", "tree": {"sha": "55ab9616224f932aed340998560548a0445c164e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55ab9616224f932aed340998560548a0445c164e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2d15ab845e9f19a43d813a10e5d7ef6529750a/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a30701cf3e7226ec22973fa60d0eb06529d71155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a30701cf3e7226ec22973fa60d0eb06529d71155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a30701cf3e7226ec22973fa60d0eb06529d71155"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "bb8b34410e2b23efd57f85831effb124e8ebcf14", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2d15ab845e9f19a43d813a10e5d7ef6529750a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2d15ab845e9f19a43d813a10e5d7ef6529750a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "patch": "@@ -1,3 +1,7 @@\n+2006-08-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/bessel.c: Add prototypes for all functions.\n+\n 2006-08-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* intrinsics/access.c (access_func): Remove export directive."}, {"sha": "69facd6e58f9edc738319ff6e8e4e0bb844d52bf", "filename": "libgfortran/intrinsics/bessel.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2d15ab845e9f19a43d813a10e5d7ef6529750a/libgfortran%2Fintrinsics%2Fbessel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2d15ab845e9f19a43d813a10e5d7ef6529750a/libgfortran%2Fintrinsics%2Fbessel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fbessel.c?ref=aa2d15ab845e9f19a43d813a10e5d7ef6529750a", "patch": "@@ -32,8 +32,9 @@ Boston, MA 02110-1301, USA.  */\n #include <math.h>\n #include \"libgfortran.h\"\n \n-/* Assume we have all or none of these.  */\n #if HAVE_J0 && !HAVE_J0F\n+extern float j0f (float);\n+\n float\n j0f (float x)\n {\n@@ -42,13 +43,17 @@ j0f (float x)\n #endif\n \n #if HAVE_J1 && !HAVE_J1F\n+extern float j1f (float);\n+\n float j1f (float x)\n {\n   return (float) j1 ((double) x);\n }\n #endif\n \n #if HAVE_JN && !HAVE_JNF\n+extern float jnf (int, float);\n+\n float\n jnf (int n, float x)\n {\n@@ -57,6 +62,8 @@ jnf (int n, float x)\n #endif\n \n #if HAVE_Y0 && !HAVE_Y0F\n+extern float y0f (float);\n+\n float\n y0f (float x)\n {\n@@ -65,6 +72,8 @@ y0f (float x)\n #endif\n \n #if HAVE_Y1 && !HAVE_Y1F\n+extern float y1f (float);\n+\n float\n y1f (float x)\n {\n@@ -73,6 +82,8 @@ y1f (float x)\n #endif\n \n #if HAVE_YN && !HAVE_YNF\n+extern float ynf (int, float);\n+\n float\n ynf (int n, float x)\n {"}]}