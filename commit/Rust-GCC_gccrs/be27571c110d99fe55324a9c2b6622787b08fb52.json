{"sha": "be27571c110d99fe55324a9c2b6622787b08fb52", "node_id": "C_kwDOANBUbNoAKGJlMjc1NzFjMTEwZDk5ZmU1NTMyNGE5YzJiNjYyMjc4N2IwOGZiNTI", "commit": {"author": {"name": "Jiakun Fan", "email": "120090316@link.cuhk.edu.cn", "date": "2023-03-14T17:49:33Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-17T16:38:54Z"}, "message": "Feat: add visit (AST::Attribute &)\n\ngcc/rust/ChangeLog:\n\n\t* hir/rust-hir-dump.cc (Dump::go): fix format\n\t(Dump::visit):impl `visit (AST::Attribute &)`\n\tand `visit (Lifetime &)`\n\t* hir/rust-hir-dump.h:add `visit (AST::Attribute &)`\n\nSigned-off-by: Jiakun Fan <120090316@link.cuhk.edu.cn>", "tree": {"sha": "78a7d323da24a29bfc1ffc7524e9249c112351ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78a7d323da24a29bfc1ffc7524e9249c112351ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be27571c110d99fe55324a9c2b6622787b08fb52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be27571c110d99fe55324a9c2b6622787b08fb52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be27571c110d99fe55324a9c2b6622787b08fb52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be27571c110d99fe55324a9c2b6622787b08fb52/comments", "author": {"login": "chosen-ox", "id": 81693205, "node_id": "MDQ6VXNlcjgxNjkzMjA1", "avatar_url": "https://avatars.githubusercontent.com/u/81693205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chosen-ox", "html_url": "https://github.com/chosen-ox", "followers_url": "https://api.github.com/users/chosen-ox/followers", "following_url": "https://api.github.com/users/chosen-ox/following{/other_user}", "gists_url": "https://api.github.com/users/chosen-ox/gists{/gist_id}", "starred_url": "https://api.github.com/users/chosen-ox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chosen-ox/subscriptions", "organizations_url": "https://api.github.com/users/chosen-ox/orgs", "repos_url": "https://api.github.com/users/chosen-ox/repos", "events_url": "https://api.github.com/users/chosen-ox/events{/privacy}", "received_events_url": "https://api.github.com/users/chosen-ox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b04f7a0394c566d2958d457a92b1ad44043c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b04f7a0394c566d2958d457a92b1ad44043c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b04f7a0394c566d2958d457a92b1ad44043c5b"}], "stats": {"total": 72, "additions": 55, "deletions": 17}, "files": [{"sha": "1585df5506bfb1b5ed90304f4665c3fcd5571706", "filename": "gcc/rust/hir/rust-hir-dump.cc", "status": "modified", "additions": 54, "deletions": 17, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be27571c110d99fe55324a9c2b6622787b08fb52/gcc%2Frust%2Fhir%2Frust-hir-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be27571c110d99fe55324a9c2b6622787b08fb52/gcc%2Frust%2Fhir%2Frust-hir-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-hir-dump.cc?ref=be27571c110d99fe55324a9c2b6622787b08fb52", "patch": "@@ -51,7 +51,9 @@ Dump::go (HIR::Crate &crate)\n       stream << std::endl;\n       item->accept_vis (*this);\n     }\n+  stream << std::endl;\n   stream << indentation;\n+\n   stream << \"],\" << std::endl;\n   indentation.decrement ();\n   //\n@@ -66,8 +68,39 @@ Dump::go (HIR::Crate &crate)\n }\n \n void\n-Dump::visit (Lifetime &)\n-{}\n+Dump::visit (AST::Attribute &attribute)\n+{\n+  std::string path_str = attribute.get_path ().as_string ();\n+  stream << path_str;\n+  if (attribute.has_attr_input ())\n+    stream << attribute.get_attr_input ().as_string ();\n+}\n+\n+void\n+Dump::visit (Lifetime &lifetime)\n+{\n+  if (lifetime.is_error ())\n+    {\n+      stream << \"error lifetime\";\n+      return;\n+    }\n+\n+  switch (lifetime.get_lifetime_type ())\n+    {\n+    case AST::Lifetime::LifetimeType::NAMED:\n+      stream << \"'\" << lifetime.get_name ();\n+      break;\n+    case AST::Lifetime::LifetimeType::STATIC:\n+      stream << \"'static\";\n+      break;\n+    case AST::Lifetime::LifetimeType::WILDCARD:\n+      stream << \"'_\";\n+      break;\n+    default:\n+      stream << \"ERROR-MARK-STRING: lifetime type failure\";\n+      break;\n+    }\n+}\n void\n Dump::visit (LifetimeParam &)\n {}\n@@ -235,44 +268,48 @@ Dump::visit (ClosureExpr &)\n void\n Dump::visit (BlockExpr &block_expr)\n {\n-  stream << \"BlockExpr: [\";\n-  indentation.increment ();\n-  stream << std::endl;\n+  stream << \"BlockExpr: [\\n\";\n \n+  indentation.increment ();\n   // TODO: inner attributes\n-  stream << std::string (indent, indent_char);\n-  stream << \"inner attributes: \";\n   if (!block_expr.inner_attrs.empty ())\n     {\n-      for (const auto &attr : block_expr.inner_attrs)\n+      stream << indentation << \"inner_attrs: [\";\n+      indentation.increment ();\n+      for (auto &attr : block_expr.inner_attrs)\n \t{\n-\t  stream << std::endl;\n-\t  stream << std::string (indent, indent_char);\n-\t  stream << attr.as_string ();\n-\t  // stream << attr.accept_vis(*self);\n+\t  stream << \"\\n\";\n+\t  stream << indentation;\n+\t  visit (attr);\n \t}\n+      indentation.decrement ();\n+      stream << \"\\n\" << indentation << \"]\\n\";\n     }\n \n-  stream << std::endl;\n-\n   // statements\n+  // impl null pointer check\n+\n   if (block_expr.has_statements ())\n     {\n       auto &stmts = block_expr.get_statements ();\n       for (auto &stmt : stmts)\n \t{\n \t  stream << indentation << \"Stmt: {\\n\";\n-\t  // stream << indentation;\n \t  stmt->accept_vis (*this);\n \t  stream << \"\\n\";\n \t  stream << indentation << \"}\\n\";\n \t}\n     }\n \n-  // // TODO: print tail expression if exists\n+  // final expression\n+  if (block_expr.has_expr ())\n+    {\n+      stream << indentation << \"final expression:\";\n+      stream << \"\\n\" << indentation << block_expr.expr->as_string ();\n+    }\n \n   indentation.decrement ();\n-  stream << indentation << \"]\";\n+  stream << \"\\n\" << indentation << \"]\";\n }\n \n void"}, {"sha": "d0256340d4d9f94b419536f65a7718fe3b467d78", "filename": "gcc/rust/hir/rust-hir-dump.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be27571c110d99fe55324a9c2b6622787b08fb52/gcc%2Frust%2Fhir%2Frust-hir-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be27571c110d99fe55324a9c2b6622787b08fb52/gcc%2Frust%2Fhir%2Frust-hir-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-hir-dump.h?ref=be27571c110d99fe55324a9c2b6622787b08fb52", "patch": "@@ -37,6 +37,7 @@ class Dump : public HIRFullVisitor\n   Indent indentation;\n   std::ostream &stream;\n \n+  void visit (AST::Attribute &attribute);\n   virtual void visit (Lifetime &) override;\n   virtual void visit (LifetimeParam &) override;\n   virtual void visit (PathInExpression &) override;"}]}