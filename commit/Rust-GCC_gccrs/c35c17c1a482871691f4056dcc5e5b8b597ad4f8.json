{"sha": "c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM1YzE3YzFhNDgyODcxNjkxZjQwNTZkY2M1ZTViOGI1OTdhZDRmOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-04T05:53:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-04T05:53:20Z"}, "message": "fr30.h (FUNCTION_VALUE): Remove the target-independent comment.\n\n\t* config/fr30/fr30.h (FUNCTION_VALUE): Remove the\n\ttarget-independent comment.\n\nFrom-SVN: r77220", "tree": {"sha": "736e4eaab1fd6e5218580353562e9ed7f7fae8ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/736e4eaab1fd6e5218580353562e9ed7f7fae8ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35c17c1a482871691f4056dcc5e5b8b597ad4f8/comments", "author": null, "committer": null, "parents": [{"sha": "6b402165e36ef583ec9eefe614589da384e9ab20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b402165e36ef583ec9eefe614589da384e9ab20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b402165e36ef583ec9eefe614589da384e9ab20"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "e67f9db0286ed136248e8fdf0f83920e08d18429", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35c17c1a482871691f4056dcc5e5b8b597ad4f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35c17c1a482871691f4056dcc5e5b8b597ad4f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "patch": "@@ -1,3 +1,8 @@\n+2004-02-04  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/fr30/fr30.h (FUNCTION_VALUE): Remove the\n+\ttarget-independent comment.\n+\n 2004-02-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* doc/interface.texi, doc/tm.texi, doc/trouble.texi: Don't"}, {"sha": "2a4a886de45d6e037cf7134d56676f7da36b9507", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35c17c1a482871691f4056dcc5e5b8b597ad4f8/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35c17c1a482871691f4056dcc5e5b8b597ad4f8/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=c35c17c1a482871691f4056dcc5e5b8b597ad4f8", "patch": "@@ -783,24 +783,6 @@ enum reg_class\n /*}}}*/ \f\n /*{{{  How Scalar Function Values are Returned.  */ \n \n-/* A C expression to create an RTX representing the place where a function\n-   returns a value of data type VALTYPE.  VALTYPE is a tree node representing a\n-   data type.  Write `TYPE_MODE (VALTYPE)' to get the machine mode used to\n-   represent that type.  On many machines, only the mode is relevant.\n-   (Actually, on most machines, scalar values are returned in the same place\n-   regardless of mode).\n-\n-   If `PROMOTE_FUNCTION_RETURN' is defined, you must apply the same promotion\n-   rules specified in `PROMOTE_MODE' if VALTYPE is a scalar type.\n-\n-   If the precise function being called is known, FUNC is a tree node\n-   (`FUNCTION_DECL') for it; otherwise, FUNC is a null pointer.  This makes it\n-   possible to use a different value-returning convention for specific\n-   functions when all their calls are known.\n-\n-   `FUNCTION_VALUE' is not used for return vales with aggregate data types,\n-   because these are returned in another way.  See `STRUCT_VALUE_REGNUM' and\n-   related macros, below.  */\n #define FUNCTION_VALUE(VALTYPE, FUNC) \\\n      gen_rtx_REG (TYPE_MODE (VALTYPE), RETURN_VALUE_REGNUM)\n "}]}