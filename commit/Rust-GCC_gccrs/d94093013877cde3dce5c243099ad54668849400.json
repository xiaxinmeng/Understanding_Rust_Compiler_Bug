{"sha": "d94093013877cde3dce5c243099ad54668849400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0MDkzMDEzODc3Y2RlM2RjZTVjMjQzMDk5YWQ1NDY2ODg0OTQwMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-21T08:54:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-21T09:43:06Z"}, "message": "tree-optimization/97500 - avoid SLP backedges for inductions\n\nInductions are not vectorized as cycle but materialized from SCEV data.\nFilling in backedge SLP nodes confuses this process.\n\n2020-10-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97500\n\t* tree-vect-slp.c (vect_analyze_slp_backedges): Do not\n\tfill backedges for inductions.\n\n\t* gfortran.dg/pr97500.f90: New testcase.", "tree": {"sha": "0040e54ee46f87dec3ba0238146696a6e0a6165a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0040e54ee46f87dec3ba0238146696a6e0a6165a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d94093013877cde3dce5c243099ad54668849400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94093013877cde3dce5c243099ad54668849400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94093013877cde3dce5c243099ad54668849400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94093013877cde3dce5c243099ad54668849400/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b5d50b7c6e34267b40bdeb4c145e9132d83762d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5d50b7c6e34267b40bdeb4c145e9132d83762d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b5d50b7c6e34267b40bdeb4c145e9132d83762d"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "d63b8616ad6bb39fe26f5d465fc0983f3bc62d39", "filename": "gcc/testsuite/gfortran.dg/pr97500.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94093013877cde3dce5c243099ad54668849400/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97500.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94093013877cde3dce5c243099ad54668849400/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97500.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97500.f90?ref=d94093013877cde3dce5c243099ad54668849400", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+! { dg-additional-options \"-ftree-vectorize -fno-guess-branch-probability\" }\n+module testmod\n+  implicit none\n+\n+  contains\n+\n+  subroutine foo(n)\n+    integer, intent(in) :: n\n+    real :: r(0:n,-n:n), a(0:n,-n:n), dj\n+    integer :: k, j\n+\n+    ! initialize with some dummy values\n+    do j = -n, n\n+      a(:, j) = j\n+      r(:,j) = j + 1\n+    end do\n+\n+    ! here be dragons\n+    do k = 0, n\n+      dj = r(k, k - 2) * a(k, k - 2)\n+      r(k,k) = a(k, k - 1) * dj\n+    enddo\n+\n+    if (r(0,0) .ne. -2.) STOP 1\n+\n+  end subroutine\n+\n+end module\n+\n+program test\n+  use testmod\n+  implicit none\n+  call foo(5)\n+end program"}, {"sha": "e3f94cb8a2d1abe0e54df399ad78645a7d48d29c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94093013877cde3dce5c243099ad54668849400/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94093013877cde3dce5c243099ad54668849400/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=d94093013877cde3dce5c243099ad54668849400", "patch": "@@ -2380,6 +2380,12 @@ vect_analyze_slp_backedges (vec_info *vinfo, slp_tree node,\n     if (child)\n       vect_analyze_slp_backedges (vinfo, child, bst_map, visited);\n \n+  /* Inductions are not vectorized by vectorizing their defining cycle\n+     but by materializing the values from SCEV data.  */\n+  if (STMT_VINFO_DEF_TYPE (SLP_TREE_REPRESENTATIVE (node))\n+      == vect_induction_def)\n+    return;\n+\n   if (gphi *phi = dyn_cast <gphi *> (SLP_TREE_REPRESENTATIVE (node)->stmt))\n     for (unsigned i = 0; i < gimple_phi_num_args (phi); ++i)\n       {"}]}