{"sha": "21db8699c3896ec0f4acba2a008874592832bdab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkYjg2OTljMzg5NmVjMGY0YWNiYTJhMDA4ODc0NTkyODMyYmRhYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-06T09:55:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:55:03Z"}, "message": "s-valint.adb: Fix typo in last checkin.\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* s-valint.adb: Fix typo in last checkin.\n\t* s-valuns.adb (Value_Unsigned): More efficient fix for\n\tPositive'Last case.\n\t* sem_attr.adb (Analyze_Attribute): Minor reformatting\n\t(Eval_Attribute): Static ervaluation of 'Img for enumeration types.\n\nFrom-SVN: r219243", "tree": {"sha": "2d91fd1442baa80d4b72758fd7f0112b17b8a377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d91fd1442baa80d4b72758fd7f0112b17b8a377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21db8699c3896ec0f4acba2a008874592832bdab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21db8699c3896ec0f4acba2a008874592832bdab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21db8699c3896ec0f4acba2a008874592832bdab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21db8699c3896ec0f4acba2a008874592832bdab/comments", "author": null, "committer": null, "parents": [{"sha": "8d1359c77334511c56e62e1ae6b0b65e4003e930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1359c77334511c56e62e1ae6b0b65e4003e930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1359c77334511c56e62e1ae6b0b65e4003e930"}], "stats": {"total": 139, "additions": 66, "deletions": 73}, "files": [{"sha": "7b2ec9d551cade001dd043f7d0f28412999bf5fe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=21db8699c3896ec0f4acba2a008874592832bdab", "patch": "@@ -1,3 +1,11 @@\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-valint.adb: Fix typo in last checkin.\n+\t* s-valuns.adb (Value_Unsigned): More efficient fix for\n+\tPositive'Last case.\n+\t* sem_attr.adb (Analyze_Attribute): Minor reformatting\n+\t(Eval_Attribute): Static ervaluation of 'Img for enumeration types.\n+\n 2015-01-06  Robert Dewar  <dewar@adacore.com>\n \n \t* s-valint.adb, s-valuns.adb (Value_Integer): Deal with case where"}, {"sha": "11812971b9292cd72d0026c46e755dadcd0206ff", "filename": "gcc/ada/s-valint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fs-valint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fs-valint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valint.adb?ref=21db8699c3896ec0f4acba2a008874592832bdab", "patch": "@@ -108,7 +108,7 @@ package body System.Val_Int is\n             V : Integer;\n             P : aliased Integer := Str'First;\n          begin\n-            V := Scan_Integer (Str, P'Access, Str'Length);\n+            V := Scan_Integer (Str, P'Access, Str'Last);\n             Scan_Trailing_Blanks (Str, P);\n             return V;\n          end;"}, {"sha": "47e89bea4f90951f339a1ced41fc07c32fae33d8", "filename": "gcc/ada/s-valuns.adb", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fs-valuns.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fs-valuns.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuns.adb?ref=21db8699c3896ec0f4acba2a008874592832bdab", "patch": "@@ -289,17 +289,30 @@ package body System.Val_Uns is\n    --------------------\n \n    function Value_Unsigned (Str : String) return Unsigned is\n-      subtype NT is String (1 .. Str'Length);\n-      --  We use this subtype to convert Str for the calls below to deal with\n-      --  the obscure case where Str'Last is Positive'Last. Without these\n-      --  conversions, such a case would raise Constraint_Error.\n-\n-      V : Unsigned;\n-      P : aliased Integer := 1;\n    begin\n-      V := Scan_Unsigned (NT (Str), P'Access, Str'Length);\n-      Scan_Trailing_Blanks (NT (Str), P);\n-      return V;\n+      --  We have to special case Str'Last = Positive'Last because the normal\n+      --  circuit ends up setting P to Str'Last + 1 which is out of bounds. We\n+      --  deal with this by converting to a subtype which fixes the bounds.\n+\n+      if Str'Last = Positive'Last then\n+         declare\n+            subtype NT is String (1 .. Str'Length);\n+         begin\n+            return Value_Unsigned (NT (Str));\n+         end;\n+\n+      --  Normal case where Str'Last < Positive'Last\n+\n+      else\n+         declare\n+            V : Unsigned;\n+            P : aliased Integer := Str'First;\n+         begin\n+            V := Scan_Unsigned (Str, P'Access, Str'Last);\n+            Scan_Trailing_Blanks (Str, P);\n+            return V;\n+         end;\n+      end if;\n    end Value_Unsigned;\n \n end System.Val_Uns;"}, {"sha": "7b6ae24f83187e3576252a19e22af9bae29fe020", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 34, "deletions": 62, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21db8699c3896ec0f4acba2a008874592832bdab/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=21db8699c3896ec0f4acba2a008874592832bdab", "patch": "@@ -2454,8 +2454,8 @@ package body Sem_Attr is\n                        and then Attr_Id /= Attribute_Unrestricted_Access\n                      then\n                         Error_Msg_N\n-                          (\"in a constraint the current instance can only\"\n-                           & \" be used with an access attribute\", N);\n+                          (\"in a constraint the current instance can only \"\n+                           & \"be used with an access attribute\", N);\n                      end if;\n                   end if;\n                end;\n@@ -3378,31 +3378,6 @@ package body Sem_Attr is\n \n          Set_Etype (N, Standard_Boolean);\n \n-      ----------------\n-      -- Enum_Image --\n-      ----------------\n-\n-      when Attribute_Enum_Image => Enum_Image :\n-      begin\n-         Check_SPARK_05_Restriction_On_Attribute;\n-         Check_Scalar_Type;\n-         Set_Etype (N, Standard_String);\n-\n-         if not Is_Enumeration_Type (P_Type) then\n-            Error_Msg_Name_1 := Aname;\n-            Error_Msg_N\n-              (\"% attribute only allowed for enumerated types\", N);\n-         end if;\n-\n-         Check_E1;\n-         Resolve (E1, P_Base_Type);\n-\n-         if not Is_OK_Static_Expression (E1) then\n-            Error_Msg_Name_1 := Aname;\n-            Error_Msg_N (\"% attribute requires static argument\", E1);\n-         end if;\n-      end Enum_Image;\n-\n       --------------\n       -- Enum_Rep --\n       --------------\n@@ -7231,6 +7206,34 @@ package body Sem_Attr is\n          return;\n       end if;\n \n+      --  Attribute 'Img applied to a static enumeration value is static, and\n+      --  we will do the folding right here (things get confused if we let this\n+      --  case go through the normal circuitry).\n+\n+      if Attribute_Name (N) = Name_Img\n+        and then Is_Entity_Name (P)\n+        and then Is_Enumeration_Type (Etype (Entity (P)))\n+        and then Is_OK_Static_Expression (P)\n+      then\n+         declare\n+            Lit : constant Entity_Id := Expr_Value_E (P);\n+            Str : String_Id;\n+\n+         begin\n+            Start_String;\n+            Get_Unqualified_Decoded_Name_String (Chars (Lit));\n+            Set_Casing (All_Upper_Case);\n+            Store_String_Chars (Name_Buffer (1 .. Name_Len));\n+            Str := End_String;\n+\n+            Rewrite (N, Make_String_Literal (Loc, Strval => Str));\n+            Analyze_And_Resolve (N, Standard_String);\n+            Set_Is_Static_Expression (N, True);\n+         end;\n+\n+         return;\n+      end if;\n+\n       --  Special processing for cases where the prefix is an object. For\n       --  this purpose, a string literal counts as an object (attributes\n       --  of string literals can only appear in generated code).\n@@ -7394,9 +7397,7 @@ package body Sem_Attr is\n \n       --  Second foldable possibility is an array object (RM 4.9(8))\n \n-      elsif (Ekind (P_Entity) = E_Variable\n-               or else\n-             Ekind (P_Entity) = E_Constant)\n+      elsif Ekind_In (P_Entity, E_Variable, E_Constant)\n         and then Is_Array_Type (Etype (P_Entity))\n         and then (not Is_Generic_Type (Etype (P_Entity)))\n       then\n@@ -7935,27 +7936,6 @@ package body Sem_Attr is\n \n          Fold_Uint (N, 4 * Mantissa, Static);\n \n-      ----------------\n-      -- Enum_Image --\n-      ----------------\n-\n-      --  Enum_Image is always static and always has a string literal result\n-\n-      when Attribute_Enum_Image =>\n-         declare\n-            Lit : constant Entity_Id := Entity (E1);\n-            Str : String_Id;\n-         begin\n-            Start_String;\n-            Get_Unqualified_Decoded_Name_String (Chars (Lit));\n-            Set_Casing (All_Upper_Case);\n-            Store_String_Chars (Name_Buffer (1 .. Name_Len));\n-            Str := End_String;\n-            Rewrite (N, Make_String_Literal (Loc, Strval => Str));\n-            Analyze_And_Resolve (N, Standard_String);\n-            Set_Is_Static_Expression (N, True);\n-         end;\n-\n       --------------\n       -- Enum_Rep --\n       --------------\n@@ -8181,16 +8161,6 @@ package body Sem_Attr is\n             end;\n          end if;\n \n-      ---------\n-      -- Img --\n-      ---------\n-\n-      --  Img is a scalar attribute, but is never static, because it is\n-      --  not a static function (having a non-scalar argument (RM 4.9(22))\n-\n-      when Attribute_Img =>\n-         null;\n-\n       -------------------\n       -- Integer_Value --\n       -------------------\n@@ -9646,7 +9616,8 @@ package body Sem_Attr is\n       --  The following attributes can never be folded, and furthermore we\n       --  should not even have entered the case statement for any of these.\n       --  Note that in some cases, the values have already been folded as\n-      --  a result of the processing in Analyze_Attribute.\n+      --  a result of the processing in Analyze_Attribute or earlier in\n+      --  this procedure.\n \n       when Attribute_Abort_Signal                 |\n            Attribute_Access                       |\n@@ -9673,6 +9644,7 @@ package body Sem_Attr is\n            Attribute_External_Tag                 |\n            Attribute_Fast_Math                    |\n            Attribute_First_Bit                    |\n+           Attribute_Img                          |\n            Attribute_Input                        |\n            Attribute_Last_Bit                     |\n            Attribute_Library_Level                |"}]}