{"sha": "82c0ff026c37aa14ffeec831dfaac37896ebbb82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMGZmMDI2YzM3YWExNGZmZWVjODMxZGZhYWMzNzg5NmViYmI4Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-02T21:43:51Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-02T21:43:51Z"}, "message": "(expand_call): Don't use int_size_in_bytes for a variable-size object.\n\nFrom-SVN: r3060", "tree": {"sha": "e4ac94aaba913d87aeee54b5e4774e39c8836370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ac94aaba913d87aeee54b5e4774e39c8836370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c0ff026c37aa14ffeec831dfaac37896ebbb82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0ff026c37aa14ffeec831dfaac37896ebbb82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c0ff026c37aa14ffeec831dfaac37896ebbb82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0ff026c37aa14ffeec831dfaac37896ebbb82/comments", "author": null, "committer": null, "parents": [{"sha": "b00e5f0d0f9def786b31ca998b407e09ceea3f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00e5f0d0f9def786b31ca998b407e09ceea3f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00e5f0d0f9def786b31ca998b407e09ceea3f78"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c132a6586b86eec7aff4e84f1e574ec0a2a288de", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0ff026c37aa14ffeec831dfaac37896ebbb82/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0ff026c37aa14ffeec831dfaac37896ebbb82/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=82c0ff026c37aa14ffeec831dfaac37896ebbb82", "patch": "@@ -886,10 +886,10 @@ expand_call (exp, target, ignore)\n \t{\n \t  /* We make a copy of the object and pass the address to the function\n \t     being called.  */\n-\t  int size = int_size_in_bytes (type);\n \t  rtx copy;\n \n-\t  if (size < 0)\n+\t  if (TYPE_SIZE (type) == 0\n+\t      || TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST)\n \t    {\n \t      /* This is a variable-sized object.  Make space on the stack\n \t\t for it.  */\n@@ -908,7 +908,10 @@ expand_call (exp, target, ignore)\n \t\t\t\t\t\t\t    TYPE_ALIGN (type)));\n \t    }\n \t  else\n-\t    copy = assign_stack_temp (TYPE_MODE (type), size, 1);\n+\t    {\n+\t      int size = int_size_in_bytes (type);\n+\t      copy = assign_stack_temp (TYPE_MODE (type), size, 1);\n+\t    }\n \n \t  store_expr (args[i].tree_value, copy, 0);\n "}]}