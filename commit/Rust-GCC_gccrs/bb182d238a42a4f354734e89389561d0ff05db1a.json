{"sha": "bb182d238a42a4f354734e89389561d0ff05db1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxODJkMjM4YTQyYTRmMzU0NzM0ZTg5Mzg5NTYxZDBmZjA1ZGIxYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-03-05T21:45:41Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-03-05T21:45:41Z"}, "message": "sh.h (OVERRIDE_OPTIONS): For TARGET_SHMEDIA, the minimum value for align_jumps is 4.\n\n\t* sh.h (OVERRIDE_OPTIONS): For TARGET_SHMEDIA, the minimum value\n\tfor align_jumps is 4.\n\n\t(SECONDARY_INPUT_RELOAD_CLASS): If reloading a PLUS into FPUL,\n\tuse GENERAL_REGS.\n\nFrom-SVN: r63863", "tree": {"sha": "a6d7fb241184dbd5a7c3cc7259aac8a250fe33cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6d7fb241184dbd5a7c3cc7259aac8a250fe33cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb182d238a42a4f354734e89389561d0ff05db1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb182d238a42a4f354734e89389561d0ff05db1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb182d238a42a4f354734e89389561d0ff05db1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb182d238a42a4f354734e89389561d0ff05db1a/comments", "author": null, "committer": null, "parents": [{"sha": "f2d0440f54c4d1c79cc8e165cfd24ff02d9f6b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d0440f54c4d1c79cc8e165cfd24ff02d9f6b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d0440f54c4d1c79cc8e165cfd24ff02d9f6b52"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "e6cfe6f3e8f39817e3fa96e26bdeded345e16503", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb182d238a42a4f354734e89389561d0ff05db1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb182d238a42a4f354734e89389561d0ff05db1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb182d238a42a4f354734e89389561d0ff05db1a", "patch": "@@ -1,3 +1,11 @@\n+Wed Mar  5 21:40:57 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (OVERRIDE_OPTIONS): For TARGET_SHMEDIA, the minimum value\n+\tfor align_jumps is 4.\n+\n+\t(SECONDARY_INPUT_RELOAD_CLASS): If reloading a PLUS into FPUL,\n+\tuse GENERAL_REGS.\n+\n 2003-03-05  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.h (PAD_VARARGS_DOWN): Define and return"}, {"sha": "49503d180efe5946470916b7358ebdd54f5e92a9", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb182d238a42a4f354734e89389561d0ff05db1a/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb182d238a42a4f354734e89389561d0ff05db1a/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=bb182d238a42a4f354734e89389561d0ff05db1a", "patch": "@@ -507,8 +507,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n     align_loops =  1 << (TARGET_SH5 ? 3 : 2);\t\t\t\t\\\n   if (align_jumps == 0)\t\t\t\t\t\t\t\\\n     align_jumps = 1 << CACHE_LOG;\t\t\t\t\t\\\n-  else if (align_jumps <= 1)\t\t\t\t\t\t\\\n-    align_jumps = 2;\t\t\t\t\t\t\t\\\n+  else if (align_jumps < (TARGET_SHMEDIA ? 4 : 2))\t\t\t\\\n+    align_jumps = TARGET_SHMEDIA ? 4 : 2;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   /* Allocation boundary (in *bytes*) for the code of a function.\t\\\n      SH1: 32 bit alignment is faster, because instructions are always\t\\\n@@ -1395,8 +1395,9 @@ extern enum reg_class reg_class_from_letter[];\n    ? R0_REGS\t\t\t\t\t\t\t\t\\\n    : (CLASS == FPUL_REGS\t\t\t\t\t\t\\\n       && ((GET_CODE (X) == REG\t\t\t\t\t\t\\\n-          && (REGNO (X) == MACL_REG || REGNO (X) == MACH_REG\t\t\\\n-\t      || REGNO (X) == T_REG))))\t\t\t\t\t\\\n+\t   && (REGNO (X) == MACL_REG || REGNO (X) == MACH_REG\t\t\\\n+\t       || REGNO (X) == T_REG))\t\t\t\t\t\\\n+\t  || GET_CODE (X) == PLUS))\t\t\t\t\t\\\n    ? GENERAL_REGS\t\t\t\t\t\t\t\\\n    : CLASS == FPUL_REGS && immediate_operand ((X), (MODE))\t\t\\\n    ? (GET_CODE (X) == CONST_INT && CONST_OK_FOR_I (INTVAL (X))\t\t\\"}]}