{"sha": "6c62412f72c39b1835e49746af6be5591a133564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2MjQxMmY3MmMzOWIxODM1ZTQ5NzQ2YWY2YmU1NTkxYTEzMzU2NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-17T17:19:32Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-17T17:19:32Z"}, "message": "* expr.c (expand_expr_real_1): Remove an obsolete comment.\n\nFrom-SVN: r89174", "tree": {"sha": "c6feac9ce190209054f9449e07a6251d50093bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6feac9ce190209054f9449e07a6251d50093bca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c62412f72c39b1835e49746af6be5591a133564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c62412f72c39b1835e49746af6be5591a133564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c62412f72c39b1835e49746af6be5591a133564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c62412f72c39b1835e49746af6be5591a133564/comments", "author": null, "committer": null, "parents": [{"sha": "a2a877e2dccad1546217de219a750d9aab228036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a877e2dccad1546217de219a750d9aab228036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a877e2dccad1546217de219a750d9aab228036"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "a19dd4aefa4ae1b5c515a1bb0e87d4e0f516423d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c62412f72c39b1835e49746af6be5591a133564/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c62412f72c39b1835e49746af6be5591a133564/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c62412f72c39b1835e49746af6be5591a133564", "patch": "@@ -1,3 +1,7 @@\n+2004-10-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* expr.c (expand_expr_real_1): Remove an obsolete comment.\n+\n 2004-10-17  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* c-typeck.c (default_function_array_conversion): Always create"}, {"sha": "459d3b35372c8a65f3b655efdd9ad4b97c1a724c", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c62412f72c39b1835e49746af6be5591a133564/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c62412f72c39b1835e49746af6be5591a133564/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6c62412f72c39b1835e49746af6be5591a133564", "patch": "@@ -8064,14 +8064,6 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \n     case MODIFY_EXPR:\n       {\n-\t/* If lhs is complex, expand calls in rhs before computing it.\n-\t   That's so we don't compute a pointer and save it over a\n-\t   call.  If lhs is simple, compute it first so we can give it\n-\t   as a target if the rhs is just a call.  This avoids an\n-\t   extra temp and copy and that prevents a partial-subsumption\n-\t   which makes bad code.  Actually we could treat\n-\t   component_ref's of vars like vars.  */\n-\n \ttree lhs = TREE_OPERAND (exp, 0);\n \ttree rhs = TREE_OPERAND (exp, 1);\n "}]}