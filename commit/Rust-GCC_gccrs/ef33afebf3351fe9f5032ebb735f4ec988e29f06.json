{"sha": "ef33afebf3351fe9f5032ebb735f4ec988e29f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYzM2FmZWJmMzM1MWZlOWY1MDMyZWJiNzM1ZjRlYzk4OGUyOWYwNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-11-30T15:57:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-11-30T15:57:37Z"}, "message": "Fix ICE in substring locations from macros in header files (PR preprocessor/88257)\n\nPR preprocessor/88257 reports an ICE on gcc.dg/format/pr78304.c\nwhen compiled using g++:\n\nvoid test (const char *msg)\n{\n  printf (\"size: %\" PRIu32 \"\\n\", msg);\n}\n\ndue to mismatching files (and line maps) between\nlinemap_resolve_location and expand_location_to_spelling_point\nwhen PRIu32 is defined in a system header.\n\nThe root cause is that expand_location_to_spelling_point stops\nunwinding locations when it reaches a system header, whereas\nlinemap_resolve_location can resolve into a system header,\nwhich can lead to locations within get_substring_ranges_for_loc\ngetting out of sync, and using the wrong line map.\n\nThis patch fixes the issue by checking that the files are the\nsame.\n\ngcc/ChangeLog:\n\tPR preprocessor/88257\n\t* input.c (get_substring_ranges_for_loc): Fix indentation.\n\tBulletproof against getting a different files back from\n\tlinemap_resolve_location and expand_location_to_spelling_point.\n\ngcc/testsuite/ChangeLog:\n\tPR preprocessor/88257\n\t* c-c++-common/Wformat-pr88257.c: New test.\n\t* c-c++-common/Wformat-pr88257.h: New test header.\n\t* c-c++-common/empty.h: New test header.\n\nFrom-SVN: r266671", "tree": {"sha": "9f1d775b8b2b7f5c104ec695f1b0a8a79f772339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f1d775b8b2b7f5c104ec695f1b0a8a79f772339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef33afebf3351fe9f5032ebb735f4ec988e29f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef33afebf3351fe9f5032ebb735f4ec988e29f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef33afebf3351fe9f5032ebb735f4ec988e29f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef33afebf3351fe9f5032ebb735f4ec988e29f06/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "187b9e1dc53da0a7db345b3c39fce7941e15f0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187b9e1dc53da0a7db345b3c39fce7941e15f0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187b9e1dc53da0a7db345b3c39fce7941e15f0f1"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "7cda0b4191a2ac58910bc61fae4354bfba6758d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06", "patch": "@@ -1,3 +1,10 @@\n+2018-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/88257\n+\t* input.c (get_substring_ranges_for_loc): Fix indentation.\n+\tBulletproof against getting a different files back from\n+\tlinemap_resolve_location and expand_location_to_spelling_point.\n+\n 2018-11-30  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR gcov-profile/88279"}, {"sha": "be1da2cf4718f7d5a3056b274ddfc799abb58547", "filename": "gcc/input.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06", "patch": "@@ -1471,7 +1471,12 @@ get_substring_ranges_for_loc (cpp_reader *pfile,\n \t for start vs finish due to line-length jumps.  */\n       if (start_ord_map != final_ord_map\n \t  && start_ord_map->to_file != final_ord_map->to_file)\n-\t  return \"start and finish are spelled in different ordinary maps\";\n+\treturn \"start and finish are spelled in different ordinary maps\";\n+      /* The file from linemap_resolve_location ought to match that from\n+\t expand_location_to_spelling_point.  */\n+      if (start_ord_map->to_file != start.file)\n+\treturn \"mismatching file after resolving linemap\";\n+\n       location_t start_loc\n \t= linemap_position_for_line_and_column (line_table, final_ord_map,\n \t\t\t\t\t\tstart.line, start.column);"}, {"sha": "fcc7c8c0a27e8fcebf323db9fb1cf7c69db2c1f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06", "patch": "@@ -1,3 +1,10 @@\n+2018-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/88257\n+\t* c-c++-common/Wformat-pr88257.c: New test.\n+\t* c-c++-common/Wformat-pr88257.h: New test header.\n+\t* c-c++-common/empty.h: New test header.\n+\n 2018-11-30  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* gcc.target/arm/neon-dotprod-restriction.c: New file.\n@@ -10,7 +17,6 @@\n \tPR sanitizer/81715\n \t* c-c++-common/asan/asan-stack-small.c: New test.\n \n->>>>>>> .r266664\n 2018-11-30  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/gimplefe-34.c: New testcase."}, {"sha": "59e4db50847c6347dc06550869c31580f2d2922e", "filename": "gcc/testsuite/c-c++-common/Wformat-pr88257.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.c?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-options \"-Wformat -fdiagnostics-show-caret\" } */\n+\n+#include \"Wformat-pr88257.h\"\n+\n+void test (const char *msg)\n+{\n+  __builtin_printf (\"size: %\" PRIu32 \"\\n\", msg); /* { dg-warning \"expects argument of type\" } */\n+  /* { dg-begin-multiline-output \"\" }\n+   __builtin_printf (\"size: %\" PRIu32 \"\\n\", msg);\n+                     ^~~~~~~~~              ~~~\n+                                            |\n+                                            const char *\n+     { dg-end-multiline-output \"\" { target c } } */\n+  /* { dg-begin-multiline-output \"\" }\n+ # define PRIu32  \"u\"\n+     { dg-end-multiline-output \"\" { target c } } */\n+  /* { dg-begin-multiline-output \"\" }\n+   __builtin_printf (\"size: %\" PRIu32 \"\\n\", msg);\n+                     ^~~~~~~~~~~~~~~~~~~~~  ~~~\n+                                            |\n+                                            const char*\n+     { dg-end-multiline-output \"\" { target c++ } } */\n+}"}, {"sha": "c778e935e608a7e7e735e99016b5cb9b27d4c7a9", "filename": "gcc/testsuite/c-c++-common/Wformat-pr88257.h", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr88257.h?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06", "patch": "@@ -0,0 +1,26 @@\n+#pragma GCC system_header\n+\n+/* Whitespace is significant here, due to line numbering.\n+   See the comment below.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+  End of significant whitespace */\n+\n+#include \"empty.h\"\n+/* The preceding include ensures a line map starts here, with a line\n+   number greater than that of the usage site, to try to trigger\n+   an assertion failure.  */\n+\n+# define PRIu32  \"u\""}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/testsuite/c-c++-common/empty.h", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fempty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef33afebf3351fe9f5032ebb735f4ec988e29f06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fempty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fempty.h?ref=ef33afebf3351fe9f5032ebb735f4ec988e29f06"}]}