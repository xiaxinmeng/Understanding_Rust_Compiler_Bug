{"sha": "4e430df869819102d953369c7bc8e5a0cff2f6eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0MzBkZjg2OTgxOTEwMmQ5NTMzNjljN2JjOGU1YTBjZmYyZjZlYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-27T18:06:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-27T18:06:24Z"}, "message": "(expand_divmod): Don't make REG_NOTE if last insn's destination isn't\nQUOTIENT.\n\nFrom-SVN: r7798", "tree": {"sha": "137ff80a8e8ca26b2c68893d18ed9e075070f8e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/137ff80a8e8ca26b2c68893d18ed9e075070f8e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e430df869819102d953369c7bc8e5a0cff2f6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e430df869819102d953369c7bc8e5a0cff2f6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e430df869819102d953369c7bc8e5a0cff2f6eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e430df869819102d953369c7bc8e5a0cff2f6eb/comments", "author": null, "committer": null, "parents": [{"sha": "ad2e7dd004513e4877bf837f4113815ada04c7f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2e7dd004513e4877bf837f4113815ada04c7f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2e7dd004513e4877bf837f4113815ada04c7f0"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "994451a0e2d2a64be6edad839516e66fc0a77ddd", "filename": "gcc/expmed.c", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e430df869819102d953369c7bc8e5a0cff2f6eb/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e430df869819102d953369c7bc8e5a0cff2f6eb/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=4e430df869819102d953369c7bc8e5a0cff2f6eb", "patch": "@@ -2568,7 +2568,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n   rtx quotient = 0, remainder = 0;\n   rtx last;\n   int size;\n-  rtx insn;\n+  rtx insn, set;\n   optab optab1, optab2;\n   int op1_is_constant, op1_is_pow2;\n \n@@ -2813,10 +2813,13 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t  }\n \n \t\tinsn = get_last_insn ();\n-\t\tREG_NOTES (insn)\n-\t\t  = gen_rtx (EXPR_LIST, REG_EQUAL,\n-\t\t\t     gen_rtx (UDIV, compute_mode, op0, op1),\n-\t\t\t     REG_NOTES (insn));\n+\t\tif (insn != last\n+\t\t    && (set = single_set (insn)) != 0\n+\t\t    && SET_DEST (set) == quotient)\n+\t\t  REG_NOTES (insn)\n+\t\t    = gen_rtx (EXPR_LIST, REG_EQUAL,\n+\t\t\t       gen_rtx (UDIV, compute_mode, op0, op1),\n+\t\t\t       REG_NOTES (insn));\n \t      }\n \t    else\t\t/* TRUNC_DIV, signed */\n \t      {\n@@ -2878,11 +2881,14 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t    if (d < 0)\n \t\t      {\n \t\t\tinsn = get_last_insn ();\n-\t\t\tREG_NOTES (insn)\n-\t\t\t  = gen_rtx (EXPR_LIST, REG_EQUAL,\n-\t\t\t\t     gen_rtx (DIV, compute_mode, op0,\n-\t\t\t\t\t      GEN_INT (abs_d)),\n-\t\t\t\t     REG_NOTES (insn));\n+\t\t\tif (insn != last\n+\t\t\t    && (set = single_set (insn)) != 0\n+\t\t\t    && SET_DEST (set) == quotient)\n+\t\t\t  REG_NOTES (insn)\n+\t\t\t    = gen_rtx (EXPR_LIST, REG_EQUAL,\n+\t\t\t\t       gen_rtx (DIV, compute_mode, op0,\n+\t\t\t\t\t\tGEN_INT (abs_d)),\n+\t\t\t\t       REG_NOTES (insn));\n \n \t\t\tquotient = expand_unop (compute_mode, neg_optab,\n \t\t\t\t\t\tquotient, quotient, 0);\n@@ -2935,14 +2941,14 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t      }\n \t\t  }\n \n-\t\tif (quotient != 0)\n-\t\t  {\n-\t\t    insn = get_last_insn ();\n-\t\t    REG_NOTES (insn)\n-\t\t      = gen_rtx (EXPR_LIST, REG_EQUAL,\n-\t\t\t\t gen_rtx (DIV, compute_mode, op0, op1),\n-\t\t\t\t REG_NOTES (insn));\n-\t\t  }\n+\t\tinsn = get_last_insn ();\n+\t\tif (insn != last\n+\t\t    && (set = single_set (insn)) != 0\n+\t\t    && SET_DEST (set) == quotient)\n+\t\t  REG_NOTES (insn)\n+\t\t    = gen_rtx (EXPR_LIST, REG_EQUAL,\n+\t\t\t       gen_rtx (DIV, compute_mode, op0, op1),\n+\t\t\t       REG_NOTES (insn));\n \t      }\n \t    break;\n \t  }"}]}