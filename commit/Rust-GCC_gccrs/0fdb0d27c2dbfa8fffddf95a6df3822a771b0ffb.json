{"sha": "0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkYjBkMjdjMmRiZmE4ZmZmZGRmOTVhNmRmMzgyMmE3NzFiMGZmYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-01-14T13:20:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-01-14T13:20:22Z"}, "message": "re PR tree-optimization/47280 (ICE: verify_stmts failed: statement marked for throw, but doesn't with -fnon-call-exceptions -ftrapv)\n\n2011-01-14  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47280\n\t* tree-ssa-forwprop.c (associate_plusminus): Cleanup EH and\n\treturn CFG changes.\n\t(tree_ssa_forward_propagate_single_use_vars): Deal with\n\tCFG changes from associate_plusminus.\n\n\t* g++.dg/opt/pr47280.C: New testcase.\n\nFrom-SVN: r168784", "tree": {"sha": "416da2ccce41a8bb452b079c2b37c89a1abdc2dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/416da2ccce41a8bb452b079c2b37c89a1abdc2dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35385f991f052ff58476c64ed62b09751e55e31a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35385f991f052ff58476c64ed62b09751e55e31a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35385f991f052ff58476c64ed62b09751e55e31a"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "fab41be25de77b0197fbef468857aef6f83a5946", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "patch": "@@ -1,3 +1,11 @@\n+2011-01-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47280\n+\t* tree-ssa-forwprop.c (associate_plusminus): Cleanup EH and\n+\treturn CFG changes.\n+\t(tree_ssa_forward_propagate_single_use_vars): Deal with\n+\tCFG changes from associate_plusminus.\n+\n 2011-01-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47281"}, {"sha": "ed3676813b4fc069bd408d616dc41f01650e94e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "patch": "@@ -1,3 +1,8 @@\n+2011-01-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47280\n+\t* g++.dg/opt/pr47280.C: New testcase.\n+\n 2011-01-14  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/constexpr-regress1.C: New."}, {"sha": "01ca4843978fbcf4904082a954b1f65df0676320", "filename": "gcc/testsuite/g++.dg/opt/pr47280.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47280.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47280.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47280.C?ref=0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fnon-call-exceptions -ftrapv\" }\n+\n+void bar (int n, char *p)\n+{\n+  try\n+    {\n+      n++;\n+      for (int i = 0; i < n - 1; i++)\n+\tp[i];\n+    }\n+  catch (...)\n+    {}\n+}\n+"}, {"sha": "64c8e88e26e125b93a8db4c5223026bf5db71fa1", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=0fdb0d27c2dbfa8fffddf95a6df3822a771b0ffb", "patch": "@@ -1658,9 +1658,9 @@ simplify_bitwise_and (gimple_stmt_iterator *gsi, gimple stmt)\n \n \n /* Perform re-associations of the plus or minus statement STMT that are\n-   always permitted.  */\n+   always permitted.  Returns true if the CFG was changed.  */\n \n-static void\n+static bool\n associate_plusminus (gimple stmt)\n {\n   tree rhs1 = gimple_assign_rhs1 (stmt);\n@@ -1671,7 +1671,7 @@ associate_plusminus (gimple stmt)\n \n   /* We can't reassociate at all for saturating types.  */\n   if (TYPE_SATURATING (TREE_TYPE (rhs1)))\n-    return;\n+    return false;\n \n   /* First contract negates.  */\n   do\n@@ -1934,7 +1934,12 @@ associate_plusminus (gimple stmt)\n     {\n       fold_stmt_inplace (stmt);\n       update_stmt (stmt);\n+      if (maybe_clean_or_replace_eh_stmt (stmt, stmt)\n+\t  && gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n+\treturn true;\n     }\n+\n+  return false;\n }\n \n /* Main entry point for the forward propagation optimizer.  */\n@@ -2062,7 +2067,7 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t      else if (gimple_assign_rhs_code (stmt) == PLUS_EXPR\n \t\t       || gimple_assign_rhs_code (stmt) == MINUS_EXPR)\n \t\t{\n-\t\t  associate_plusminus (stmt);\n+\t\t  cfg_changed |= associate_plusminus (stmt);\n \t\t  gsi_next (&gsi);\n \t\t}\n \t      else"}]}