{"sha": "efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjYzY2ZjAyY2QwYjM0ZWUwZTJhMDgzMTJkN2FiOGUwNDA1YTU1Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-14T23:24:14Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-14T23:24:14Z"}, "message": "c99-flex-array-5.c, [...]: New tests.\n\n\t* gcc.dg/c99-flex-array-5.c, gcc.dg/c99-fordecl-3.c,\n\tgcc.dg/comp-goto-1.c, gcc.dg/comp-goto-2.c, gcc.dg/comp-goto-3.c,\n\tgcc.dg/format/strfmon-2.c, gcc.dg/pointer-arith-1.c,\n\tgcc.dg/pointer-arith-2.c, gcc.dg/pointer-arith-3.c,\n\tgcc.dg/pointer-arith-4.c, gcc.dg/switch-5.c, gcc.dg/switch-6.c,\n\tgcc.dg/switch-7.c: New tests.\n\nFrom-SVN: r90637", "tree": {"sha": "a201846a39be53f6e3ecd20c4823e63363353116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a201846a39be53f6e3ecd20c4823e63363353116"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "509228203e929a5aa3205aaa838700235187dc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509228203e929a5aa3205aaa838700235187dc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509228203e929a5aa3205aaa838700235187dc1d"}], "stats": {"total": 347, "additions": 347, "deletions": 0}, "files": [{"sha": "c21b4e1ec1469ec2c24bc47132a25df8dd7c1d58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -1,3 +1,12 @@\n+2004-11-14  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c99-flex-array-5.c, gcc.dg/c99-fordecl-3.c,\n+\tgcc.dg/comp-goto-1.c, gcc.dg/comp-goto-2.c, gcc.dg/comp-goto-3.c,\n+\tgcc.dg/format/strfmon-2.c, gcc.dg/pointer-arith-1.c,\n+\tgcc.dg/pointer-arith-2.c, gcc.dg/pointer-arith-3.c,\n+\tgcc.dg/pointer-arith-4.c, gcc.dg/switch-5.c, gcc.dg/switch-6.c,\n+\tgcc.dg/switch-7.c: New tests.\n+\n 2004-11-14  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* gcc.dg/vect/vect-78.c: Now vectorized on powerpc*."}, {"sha": "11c8d1cf2c1a14df778628a09a8a5bbf94cc31c8", "filename": "gcc/testsuite/gcc.dg/c99-flex-array-5.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-flex-array-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-flex-array-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-flex-array-5.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,6 @@\n+/* Test for flexible array members: not permitted in unions.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+union u { int a; char b[]; }; /* { dg-error \"error: flexible array member in union\" } */"}, {"sha": "c51a5551a998dbefe34efc329456dd31a9153d9b", "filename": "gcc/testsuite/gcc.dg/c99-fordecl-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-fordecl-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-fordecl-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-fordecl-3.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,15 @@\n+/* Test for C99 declarations in for loops.  Test constraints: struct\n+   and union tags can't be declared there (affirmed in response to\n+   DR#277).  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+void\n+foo (void)\n+{\n+  for (struct s { int p; } *p = 0; ;) /* { dg-error \"error: 'struct s' declared in 'for' loop initial declaration\" } */\n+    ;\n+  for (union u { int p; } *p = 0; ;) /* { dg-error \"error: 'union u' declared in 'for' loop initial declaration\" } */\n+    ;\n+}"}, {"sha": "66afac87b9f535efd82c89999daf22e75ff09c33", "filename": "gcc/testsuite/gcc.dg/comp-goto-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-1.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostics for addresses of labels and computed gotos.  Test\n+   with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f (void)\n+{\n+  void *p = &&a;\n+  goto *p;\n+ a: ;\n+}"}, {"sha": "babfe9b5361a58dc202b5862f965f626a37abc2e", "filename": "gcc/testsuite/gcc.dg/comp-goto-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-2.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostics for addresses of labels and computed gotos.  Test\n+   with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+void\n+f (void)\n+{\n+  void *p = &&a; /* { dg-warning \"warning: taking the address of a label is non-standard\" } */\n+  goto *p; /* { dg-warning \"warning: ISO C forbids 'goto \\\\*expr;'\" } */\n+ a: ;\n+}"}, {"sha": "add18613d75884643926f1a620d16ad65f11e2c7", "filename": "gcc/testsuite/gcc.dg/comp-goto-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-3.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostics for addresses of labels and computed gotos.  Test\n+   with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+void\n+f (void)\n+{\n+  void *p = &&a; /* { dg-error \"error: taking the address of a label is non-standard\" } */\n+  goto *p; /* { dg-error \"error: ISO C forbids 'goto \\\\*expr;'\" } */\n+ a: ;\n+}"}, {"sha": "1ecef711d34e3c16e5c03cb6c72ebd59b8b75fb3", "filename": "gcc/testsuite/gcc.dg/format/strfmon-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-2.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,13 @@\n+/* Test for strfmon format checking.  Test for missing fill character\n+   at end of format.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -Wformat\" } */\n+\n+#include \"format.h\"\n+\n+void\n+foo (char *s, size_t m)\n+{\n+  strfmon (s, m, \"%=\"); /* { dg-warning \"missing fill character at end\" } */\n+}"}, {"sha": "fec20547bf3709c8b5bf409947f5740862965d09", "filename": "gcc/testsuite/gcc.dg/pointer-arith-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-1.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,39 @@\n+/* Test diagnostics for arithmetic on void and function pointers.\n+   Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void *p;\n+void (*f)(void);\n+\n+void\n+g (void)\n+{\n+  p + 0;\n+  p + 1;\n+  0 + p;\n+  1 + p;\n+  p - 0;\n+  p - 1;\n+  p += 0;\n+  p += 1;\n+  p -= 0;\n+  p -= 1;\n+  f + 0;\n+  f + 1;\n+  0 + f;\n+  1 + f;\n+  f - 0;\n+  f - 1;\n+  f += 0;\n+  f += 1;\n+  f -= 0;\n+  f -= 1;\n+  p[0]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  0[p]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  f[0]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  0[f]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  p - p;\n+  f - f;\n+}"}, {"sha": "8e95ab520784c31b82972aaa4b37a5404f5ce0b3", "filename": "gcc/testsuite/gcc.dg/pointer-arith-2.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-2.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,41 @@\n+/* Test diagnostics for arithmetic on void and function pointers.\n+   Test with -Wpointer-arith.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wpointer-arith\" } */\n+\n+void *p;\n+void (*f)(void);\n+\n+void\n+g (void)\n+{\n+  p + 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p + 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  0 + p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  1 + p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  f + 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f + 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  0 + f; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  1 + f; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f - 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f - 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f += 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f += 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f -= 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f -= 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  p[0]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 33 } */\n+  0[p]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 35 } */\n+  f[0]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  0[f]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  p - p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in subtraction\" } */\n+  f - f; /* { dg-warning \"warning: pointer to a function used in subtraction\" } */\n+}"}, {"sha": "90f524101b871773a8f26ec18ae39cbd423ad385", "filename": "gcc/testsuite/gcc.dg/pointer-arith-3.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-3.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,41 @@\n+/* Test diagnostics for arithmetic on void and function pointers.\n+   Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+void *p;\n+void (*f)(void);\n+\n+void\n+g (void)\n+{\n+  p + 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p + 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  0 + p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  1 + p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 0; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 1; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  f + 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f + 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  0 + f; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  1 + f; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f - 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f - 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f += 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f += 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f -= 0; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  f -= 1; /* { dg-warning \"warning: pointer to a function used in arithmetic\" } */\n+  p[0]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 33 } */\n+  0[p]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-warning \"warning: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 35 } */\n+  f[0]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  0[f]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  p - p; /* { dg-warning \"warning: pointer of type 'void \\\\*' used in subtraction\" } */\n+  f - f; /* { dg-warning \"warning: pointer to a function used in subtraction\" } */\n+}"}, {"sha": "3e577fc1cb5781eb49b9bd09c632a370d737f1ed", "filename": "gcc/testsuite/gcc.dg/pointer-arith-4.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-4.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,41 @@\n+/* Test diagnostics for arithmetic on void and function pointers.\n+   Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+void *p;\n+void (*f)(void);\n+\n+void\n+g (void)\n+{\n+  p + 0; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p + 1; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  0 + p; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  1 + p; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 0; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p - 1; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 0; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p += 1; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 0; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  p -= 1; /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" } */\n+  f + 0; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f + 1; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  0 + f; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  1 + f; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f - 0; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f - 1; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f += 0; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f += 1; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f -= 0; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  f -= 1; /* { dg-error \"error: pointer to a function used in arithmetic\" } */\n+  p[0]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 33 } */\n+  0[p]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n+  /* { dg-error \"error: pointer of type 'void \\\\*' used in arithmetic\" \"array 1\" { target *-*-* } 35 } */\n+  f[0]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  0[f]; /* { dg-error \"error: subscripted value is neither array nor pointer\" } */\n+  p - p; /* { dg-error \"error: pointer of type 'void \\\\*' used in subtraction\" } */\n+  f - f; /* { dg-error \"error: pointer to a function used in subtraction\" } */\n+}"}, {"sha": "7c1c3d49715bceca71cedddc96c8ab597381083d", "filename": "gcc/testsuite/gcc.dg/switch-5.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-5.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,75 @@\n+/* Test diagnostics for switch statements and labels therein.  Test\n+   with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f (int a, double d, void *p)\n+{\n+  switch (d) /* { dg-error \"error: switch quantity not an integer\" } */\n+    {\n+    }\n+  switch (p) /* { dg-error \"error: switch quantity not an integer\" } */\n+    {\n+    }\n+  switch (a)\n+    {\n+    case (void *)0: ; /* { dg-error \"error: pointers are not permitted as case values\" } */\n+    }\n+  switch (a)\n+    {\n+    case (double)0: ; /* { dg-error \"error: case label does not reduce to an integer constant\" } */\n+    }\n+  switch (a)\n+    {\n+    case (char)0: ;\n+    }\n+  switch (a)\n+    {\n+    case 0 ... 0: ;\n+    }\n+  switch (a)\n+    {\n+    case 0 ... -1: ; /* { dg-warning \"warning: empty range specified\" } */\n+    }\n+  switch (a)\n+    {\n+    case 0 ... -2: ; /* { dg-warning \"warning: empty range specified\" } */\n+    }\n+  switch (a)\n+    {\n+    case 0:\n+    default: /* { dg-error \"error: this is the first default label\" } */\n+    case 1:\n+    default: ; /* { dg-error \"error: multiple default labels in one switch\" } */\n+    }\n+  switch (a)\n+    {\n+    case 0: /* { dg-error \"error: previously used here\" } */\n+    case 1:\n+    case 0: ; /* { dg-error \"error: duplicate case value\" } */\n+    }\n+ case 1: ; /* { dg-error \"error: case label not within a switch statement\" } */\n+ default: ; /* { dg-error \"error: 'default' label not within a switch statement\" } */\n+   break; /* { dg-error \"error: break statement not within loop or switch\" } */\n+   continue; /* { dg-error \"error: continue statement not within a loop\" } */\n+   switch (a)\n+     {\n+     case a: ; /* { dg-error \"error: case label does not reduce to an integer constant\" } */\n+     }\n+   switch (a)\n+     {\n+     case 0: /* { dg-error \"error: this is the first entry overlapping that value\" } */\n+     case -1 ... 1: /* { dg-error \"error: duplicate \\\\(or overlapping\\\\) case value\" } */\n+     case 2 ... 3: /* { dg-error \"error: previously used here\" } */\n+     case 2: /* { dg-error \"error: duplicate case value\" } */\n+     case 4 ... 7: /* { dg-error \"error: this is the first entry overlapping that value\" } */\n+     case 6 ... 9: ; /* { dg-error \"error: duplicate \\\\(or overlapping\\\\) case value\" } */\n+     }\n+   switch (a)\n+     {\n+     case 0:\n+       continue; /* { dg-error \"error: continue statement not within a loop\" } */\n+     }\n+}"}, {"sha": "70cc1882a4fd37a1ff03d865d84869f6c4795837", "filename": "gcc/testsuite/gcc.dg/switch-6.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-6.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,14 @@\n+/* Test diagnostics for switch statements and labels therein.  Test\n+   for case ranges with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+void\n+f (int a)\n+{\n+  switch (a)\n+    {\n+    case 0 ... 0: ; /* { dg-warning \"warning: range expressions in switch statements are non-standard\" } */\n+    }\n+}"}, {"sha": "d3fdfb4c38154c9971e49a39e2613c84b5dec7b7", "filename": "gcc/testsuite/gcc.dg/switch-7.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcc66f02cd0b34ee0e2a08312d7ab8e0405a556/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-7.c?ref=efcc66f02cd0b34ee0e2a08312d7ab8e0405a556", "patch": "@@ -0,0 +1,14 @@\n+/* Test diagnostics for switch statements and labels therein.  Test\n+   for case ranges with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+void\n+f (int a)\n+{\n+  switch (a)\n+    {\n+    case 0 ... 0: ; /* { dg-error \"error: range expressions in switch statements are non-standard\" } */\n+    }\n+}"}]}