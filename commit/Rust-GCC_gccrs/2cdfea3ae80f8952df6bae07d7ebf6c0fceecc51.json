{"sha": "2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkZmVhM2FlODBmODk1MmRmNmJhZTA3ZDdlYmY2YzBmY2VlY2M1MQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-06-08T14:42:06Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-08T14:42:06Z"}, "message": "Make-lang.in (F77_OBJS, [...]): Update.\n\n\t* Make-lang.in (F77_OBJS, f77.mostlyclean, f/com.o): Update.\n\t(f/f-options.c, f/f-options.h): New.\n\t* com.c: Include opts.h and f-options.h.\n\t(ffecom_decode_include_option_): Remove.\n\t(LANG_HOOKS_HANDLE_OPTION): New.\n\t(LANG_HOOKS_DECODE_OPTION): Drop.\n\t(struct file_name_list, ffecom_decode_include_option,\n\tffecom_open_include_): Constify.\n\t* com.h (ffecom_decode_include_option): Update.\n\t* lang.opt: New.\n\t* top.c: Include f-options.h, opts.h.\n\t(ffe_is_digit_string_): Constify.\n\t(ffe_decode_option): Transform to ffe_handle_option.\n\t* top.h (ffe_decode_option): Replace with ffe_handle_option.\n\nFrom-SVN: r67628", "tree": {"sha": "c2c30f96aa74213a4a406c1277d222ad47eaa584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2c30f96aa74213a4a406c1277d222ad47eaa584"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d79d6feaa13a134680113b32b5c50180b882761b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79d6feaa13a134680113b32b5c50180b882761b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79d6feaa13a134680113b32b5c50180b882761b"}], "stats": {"total": 1190, "additions": 802, "deletions": 388}, "files": [{"sha": "632cd09a0544383c4fdc1d32cb47bc95ab1fdd4b", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -1,3 +1,20 @@\n+Sun Jun  8 15:42:09 2003  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* Make-lang.in (F77_OBJS, f77.mostlyclean, f/com.o): Update.\n+\t(f/f-options.c, f/f-options.h): New.\n+\t* com.c: Include opts.h and f-options.h.\n+\t(ffecom_decode_include_option_): Remove.\n+\t(LANG_HOOKS_HANDLE_OPTION): New.\n+\t(LANG_HOOKS_DECODE_OPTION): Drop.\n+\t(struct file_name_list, ffecom_decode_include_option,\n+\tffecom_open_include_): Constify.\n+\t* com.h (ffecom_decode_include_option): Update.\n+\t* lang.opt: New.\n+\t* top.c: Include f-options.h, opts.h.\n+\t(ffe_is_digit_string_): Constify.\n+\t(ffe_decode_option): Transform to ffe_handle_option.\n+\t* top.h (ffe_decode_option): Replace with ffe_handle_option.\n+\n 2003-06-08  Andreas Jaeger  <aj@suse.de>\n \n \t* std.c: Remove #if 0'ed functions."}, {"sha": "0fe264bd26b1c781b80edf1aff96deece33abb26", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -88,7 +88,7 @@ g77-cross$(exeext): g77$(exeext)\n \n F77_OBJS = f/bad.o f/bit.o f/bld.o f/com.o f/data.o f/equiv.o f/expr.o \\\n  f/global.o f/implic.o f/info.o f/intrin.o f/lab.o f/lex.o f/malloc.o \\\n- f/name.o f/parse.o f/src.o f/st.o f/sta.o f/stb.o f/stc.o \\\n+ f/name.o f/f-options.o f/parse.o f/src.o f/st.o f/sta.o f/stb.o f/stc.o \\\n  f/std.o f/ste.o f/storag.o f/stp.o f/str.o f/sts.o f/stt.o f/stu.o \\\n  f/stv.o f/stw.o f/symbol.o f/target.o f/top.o f/type.o f/where.o\n \n@@ -320,6 +320,7 @@ f77.uninstall: installdirs\n f77.mostlyclean:\n \t-rm -f f/*$(objext)\n \t-rm -f f/*$(coverageexts)\n+\t-rm -f f/f-options.c f/f-options.h\n \t-rm -f f/fini$(build_exeext) f/stamp-str f/str-*.h f/str-*.j\n \t-rm -f f/intdoc$(build_exeext) f/ansify$(build_exeext) f/intdoc.h0\n \t-rm -f g77.aux g77.cps g77.ky g77.toc g77.vr g77.fn g77.kys \\\n@@ -542,8 +543,14 @@ f/top.o: f/top.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/top.h f/malloc.h f/where.h \\\n  f/info-w.def f/target.h f/lex.h f/type.h f/lab.h f/storag.h \\\n  f/symbol.h f/symbol.def f/equiv.h f/global.h f/name.h f/intrin.h \\\n  f/intrin.def f/data.h f/expr.h f/implic.h f/src.h f/st.h flags.h \\\n- toplev.h coretypes.h $(TM_H) opts.h\n+ toplev.h coretypes.h $(TM_H) opts.h f/f-options.h\n f/type.o: f/type.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/type.h f/malloc.h \\\n  coretypes.h $(TM_H)\n f/where.o: f/where.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/where.h glimits.h \\\n  f/top.h f/malloc.h f/lex.h $(GGC_H) gt-f-where.h coretypes.h $(TM_H)\n+\n+f/f-options.c: f/lang.opt opts.sh f/f-options.h\n+\n+f/f-options.h: f/lang.opt opts.sh\n+\tAWK=$(AWK) $(SHELL) $(srcdir)/opts.sh f/f-options.c \\\n+\t\tf/f-options.h $(srcdir)/f/lang.opt"}, {"sha": "ce821c755cdd6e16ca3f77becc926a3b65988d32", "filename": "gcc/f/com.c", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -389,7 +389,6 @@ static tree start_decl (tree decl, bool is_top_level);\n static void start_function (tree name, tree type, int nested, int public);\n static void ffecom_file_ (const char *name);\n static void ffecom_close_include_ (FILE *f);\n-static int ffecom_decode_include_option_ (char *spec);\n static FILE *ffecom_open_include_ (char *name, ffewhereLine l,\n \t\t\t\t   ffewhereColumn c);\n \n@@ -10697,12 +10696,6 @@ ffecom_close_include (FILE *f)\n   ffecom_close_include_ (f);\n }\n \n-int\n-ffecom_decode_include_option (char *spec)\n-{\n-  return ffecom_decode_include_option_ (spec);\n-}\n-\n /* End a compound statement (block).  */\n \n tree\n@@ -14148,8 +14141,8 @@ struct language_function GTY(())\n #define LANG_HOOKS_FINISH\t\tffe_finish\n #undef  LANG_HOOKS_INIT_OPTIONS\n #define LANG_HOOKS_INIT_OPTIONS\t\tffe_init_options\n-#undef  LANG_HOOKS_DECODE_OPTION\n-#define LANG_HOOKS_DECODE_OPTION\tffe_decode_option\n+#undef  LANG_HOOKS_HANDLE_OPTION\n+#define LANG_HOOKS_HANDLE_OPTION\tffe_handle_option\n #undef  LANG_HOOKS_POST_OPTIONS\n #define LANG_HOOKS_POST_OPTIONS\t\tffe_post_options\n #undef  LANG_HOOKS_PARSE_FILE\n@@ -15119,7 +15112,7 @@ static int max_include_len = 0;\n struct file_name_list\n   {\n     struct file_name_list *next;\n-    char *fname;\n+    const char *fname;\n     /* Mapping of file names for this directory.  */\n     struct file_name_map *name_map;\n     /* Nonzero if name_map is valid.  */\n@@ -15486,26 +15479,20 @@ ffecom_close_include_ (FILE *f)\n   ffewhere_column_kill (instack[indepth].column);\n }\n \n-static int\n-ffecom_decode_include_option_ (char *spec)\n+void\n+ffecom_decode_include_option (const char *dir)\n {\n-  struct file_name_list *dirtmp;\n-\n-  if (! ignore_srcdir && !strcmp (spec, \"-\"))\n+  if (! ignore_srcdir && !strcmp (dir, \"-\"))\n     ignore_srcdir = 1;\n   else\n     {\n-      dirtmp = (struct file_name_list *)\n+      struct file_name_list *dirtmp = (struct file_name_list *)\n \txmalloc (sizeof (struct file_name_list));\n       dirtmp->next = 0;\t\t/* New one goes on the end */\n-      dirtmp->fname = spec;\n+      dirtmp->fname = dir;\n       dirtmp->got_name_map = 0;\n-      if (spec[0] == 0)\n-\terror (\"directory name must immediately follow -I\");\n-      else\n-\tappend_include_chain (dirtmp, dirtmp);\n+      append_include_chain (dirtmp, dirtmp);\n     }\n-  return 1;\n }\n \n /* Open INCLUDEd file.  */\n@@ -15560,9 +15547,10 @@ ffecom_open_include_ (char *name, ffewhereLine l, ffewhereColumn c)\n \t      if (ep != NULL)\n \t\t{\n \t\t  n = ep - nam;\n-\t\t  dsp[0].fname = (char *) xmalloc (n + 1);\n-\t\t  strncpy (dsp[0].fname, nam, n);\n-\t\t  dsp[0].fname[n] = '\\0';\n+\t\t  fname = xmalloc (n + 1);\n+\t\t  strncpy (fname, nam, n);\n+\t\t  fname[n] = '\\0';\n+\t\t  dsp[0].fname = fname;\n \t\t  if (n + INCLUDE_LEN_FUDGE > max_include_len)\n \t\t    max_include_len = n + INCLUDE_LEN_FUDGE;\n \t\t}\n@@ -15670,7 +15658,7 @@ ffecom_open_include_ (char *name, ffewhereLine l, ffewhereColumn c)\n     }\n \n   if (dsp[0].fname != NULL)\n-    free (dsp[0].fname);\n+    free ((char *) dsp[0].fname);\n \n   if (f == NULL)\n     return NULL;"}, {"sha": "5036251726478c4d2470151faeb29041d8f2823d", "filename": "gcc/f/com.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -213,7 +213,7 @@ tree ffecom_const_expr (ffebld expr);\n tree ffecom_decl_field (tree context, tree prevfield, const char *name,\n \t\t\ttree type);\n void ffecom_close_include (FILE *f);\n-int ffecom_decode_include_option (char *spec);\n+void ffecom_decode_include_option (const char *dir);\n tree ffecom_end_compstmt (void);\n void ffecom_end_transition (void);\n void ffecom_exec_transition (void);"}, {"sha": "327556ff33681d2eb0e921d17e18a4851f83fd2a", "filename": "gcc/f/lang.opt", "status": "added", "additions": 329, "deletions": 0, "changes": 329, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang.opt?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -0,0 +1,329 @@\n+; Options for the Fortran 77 front end.\n+; Copyright (C) 2003 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+; \n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+; \n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+\n+; This file is processed by the script opts.sh.  It is a database of\n+; command line options, with each record separated by a blank line,\n+; and each field appearing on its own line.  The first field is the\n+; command-line switch with the leading \"-\" removed.  All options\n+; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n+; form; this form should not be listed.  If you do not want this\n+; negative form and you want it to be automatically rejected, add\n+; RejectNegative to the second field.\n+\n+; The second field should contain \"F77\".  If the switch takes an\n+; argument, then you should also specify \"Joined\" and/or \"Separate\" to\n+; indicate where the argument can appear.\n+\n+; Comments can appear on their own line anwhere in the file, preceded\n+; by a semicolon.  Whitespace is permitted before the semicolon.\n+\n+; For each switch XXX below, an enumeration constant is created by the\n+; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n+; characters replaced with an underscore.\n+\n+; Please try to keep this file in ASCII collating order.\n+\n+I\n+F77 Joined\n+\n+Wall\n+F77\n+\n+Wcomment\n+F77\n+\n+Wcomments\n+F77\n+\n+Wglobals\n+F77\n+\n+Wimplicit\n+F77\n+\n+Wimport\n+F77\n+\n+Wsurprising\n+F77\n+\n+Wtrigraphs\n+F77\n+\n+fautomatic\n+F77\n+\n+fbackslash\n+F77\n+\n+fbadu77-intrinsics-delete\n+F77 RejectNegative\n+\n+fbadu77-intrinsics-disable\n+F77 RejectNegative\n+\n+fbadu77-intrinsics-enable\n+F77 RejectNegative\n+\n+fbadu77-intrinsics-hide\n+F77 RejectNegative\n+\n+fcase-initcap\n+F77 RejectNegative\n+\n+fcase-lower\n+F77 RejectNegative\n+\n+fcase-preserve\n+F77 RejectNegative\n+\n+fcase-strict-lower\n+F77 RejectNegative\n+\n+fcase-strict-upper\n+F77 RejectNegative\n+\n+fcase-upper\n+F77 RejectNegative\n+\n+fdebug-kludge\n+F77\n+\n+fdollar-ok\n+F77\n+\n+femulate-complex\n+F77\n+\n+ff2c\n+F77\n+\n+ff2c-intrinsics-delete\n+F77 RejectNegative\n+\n+ff2c-intrinsics-disable\n+F77 RejectNegative\n+\n+ff2c-intrinsics-enable\n+F77 RejectNegative\n+\n+ff2c-intrinsics-hide\n+F77 RejectNegative\n+\n+ff2c-library\n+F77\n+\n+ff66\n+F77\n+\n+ff77\n+F77\n+\n+ff90\n+F77\n+\n+ff90-intrinsics-delete\n+F77 RejectNegative\n+\n+ff90-intrinsics-disable\n+F77 RejectNegative\n+\n+ff90-intrinsics-enable\n+F77 RejectNegative\n+\n+ff90-intrinsics-hide\n+F77 RejectNegative\n+\n+ff90-not-vxt\n+F77 RejectNegative\n+\n+ffixed-form\n+F77\n+\n+ffixed-line-length-\n+F77 Joined\n+\n+fflatten-arrays\n+F77\n+\n+ffortran-bounds-check\n+F77\n+\n+ffree-form\n+F77\n+\n+fglobals\n+F77\n+\n+fgnu-intrinsics-delete\n+F77 RejectNegative\n+\n+fgnu-intrinsics-disable\n+F77 RejectNegative\n+\n+fgnu-intrinsics-enable\n+F77 RejectNegative\n+\n+fgnu-intrinsics-hide\n+F77 RejectNegative\n+\n+finit-local-zero\n+F77\n+\n+fintrin-case-any\n+F77 RejectNegative\n+\n+fintrin-case-initcap\n+F77 RejectNegative\n+\n+fintrin-case-lower\n+F77 RejectNegative\n+\n+fintrin-case-upper\n+F77 RejectNegative\n+\n+fmatch-case-any\n+F77 RejectNegative\n+\n+fmatch-case-initcap\n+F77 RejectNegative\n+\n+fmatch-case-lower\n+F77 RejectNegative\n+\n+fmatch-case-upper\n+F77 RejectNegative\n+\n+fmil-intrinsics-delete\n+F77 RejectNegative\n+\n+fmil-intrinsics-disable\n+F77 RejectNegative\n+\n+fmil-intrinsics-enable\n+F77 RejectNegative\n+\n+fmil-intrinsics-hide\n+F77 RejectNegative\n+\n+fonetrip\n+F77\n+\n+fpedantic\n+F77\n+\n+fsecond-underscore\n+F77\n+\n+fsilent\n+F77\n+\n+fsource-case-lower\n+F77 RejectNegative\n+\n+fsource-case-preserve\n+F77 RejectNegative\n+\n+fsource-case-upper\n+F77 RejectNegative\n+\n+fsymbol-case-any\n+F77 RejectNegative\n+\n+fsymbol-case-initcap\n+F77 RejectNegative\n+\n+fsymbol-case-lower\n+F77 RejectNegative\n+\n+fsymbol-case-upper\n+F77 RejectNegative\n+\n+ftypeless-boz\n+F77\n+\n+fugly\n+F77\n+\n+fugly-args\n+F77\n+\n+fugly-assign\n+F77\n+\n+fugly-assumed\n+F77\n+\n+fugly-comma\n+F77\n+\n+fugly-complex\n+F77\n+\n+fugly-init\n+F77\n+\n+fugly-logint\n+F77\n+\n+funderscoring\n+F77\n+\n+funix-intrinsics-delete\n+F77 RejectNegative\n+\n+funix-intrinsics-disable\n+F77 RejectNegative\n+\n+funix-intrinsics-enable\n+F77 RejectNegative\n+\n+funix-intrinsics-hide\n+F77 RejectNegative\n+\n+fversion\n+F77 RejectNegative\n+\n+fvxt\n+F77\n+\n+fvxt-intrinsics-delete\n+F77 RejectNegative\n+\n+fvxt-intrinsics-disable\n+F77 RejectNegative\n+\n+fvxt-intrinsics-enable\n+F77 RejectNegative\n+\n+fvxt-intrinsics-hide\n+F77 RejectNegative\n+\n+fvxt-not-f90\n+F77 RejectNegative\n+\n+fxyzzy\n+F77\n+\n+fzeros\n+F77\n+\n+; This comment is to ensure we retain the blank line above."}, {"sha": "715e61ceebba2492ead2f0ce0d39f2f56020a8c5", "filename": "gcc/f/top.c", "status": "modified", "additions": 431, "deletions": 358, "changes": 789, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Ftop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Ftop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.c?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -47,6 +47,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"lex.h\"\n #include \"malloc.h\"\n #include \"name.h\"\n+#include \"f-options.h\"\n+#include \"opts.h\"\n #include \"src.h\"\n #include \"st.h\"\n #include \"storag.h\"\n@@ -55,13 +57,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"where.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n-#include \"opts.h\"\n \n /* Externals defined here. */\n \n-const unsigned int cl_options_count;\n-const struct cl_option cl_options[1];\n-\n bool ffe_is_do_internal_checks_ = FALSE;\n bool ffe_is_90_ = FFETARGET_defaultIS_90;\n bool ffe_is_automatic_ = FFETARGET_defaultIS_AUTOMATIC;\n@@ -142,14 +140,14 @@ bool ffe_in_4 = FALSE;\n \n /* Static functions (internal). */\n \n-static bool ffe_is_digit_string_ (char *s);\n+static bool ffe_is_digit_string_ (const char *s);\n \n /* Internal macros. */\n \f\n static bool\n-ffe_is_digit_string_ (char *s)\n+ffe_is_digit_string_ (const char *s)\n {\n-  char *p;\n+  const char *p;\n \n   for (p = s; ISDIGIT (*p); ++p)\n     ;\n@@ -159,371 +157,446 @@ ffe_is_digit_string_ (char *s)\n \n /* Handle command-line options.\t Returns 0 if unrecognized, 1 if\n    recognized and handled.  */\n-\n int\n-ffe_decode_option (int argc ATTRIBUTE_UNUSED, char **argv)\n+ffe_handle_option (size_t scode, const char *arg, int value)\n {\n-  char *opt = argv[0];\n-  if (opt[0] != '-')\n-    return 0;\n-  if (opt[1] == 'f')\n+  const struct cl_option *option = &cl_options[scode];\n+  enum opt_code code = (enum opt_code) scode;\n+\n+  /* Ignore file names.  */\n+  if (code == N_OPTS)\n+    return 1;\n+\n+  if (arg == NULL && (option->flags & (CL_JOINED | CL_SEPARATE)))\n     {\n-      if (strcmp (&opt[2], \"version\") == 0)\n-\t{\n-\t  ffe_set_is_version (TRUE);\n-\t  ffe_set_is_do_internal_checks (TRUE);\n-\t}\n-      else if (strcmp (&opt[2], \"f66\") == 0)\n-\t{\n-\t  ffe_set_is_onetrip (TRUE);\n-\t  ffe_set_is_ugly_assumed (TRUE);\n-\t}\n-      else if (strcmp (&opt[2], \"no-f66\") == 0)\n-\t{\n-\t  ffe_set_is_onetrip (FALSE);\n-\t  ffe_set_is_ugly_assumed (FALSE);\n-\t}\n-      else if (strcmp (&opt[2], \"f77\") == 0)\n-\t{\n-\t  ffe_set_is_backslash (TRUE);\n-\t  ffe_set_is_typeless_boz (FALSE);\n-\t}\n-      else if (strcmp (&opt[2], \"no-f77\") == 0)\n-\t{\n-\t  ffe_set_is_backslash (FALSE);\n-\t}\n-      else if (strcmp (&opt[2], \"f90\") == 0)\n-\tffe_set_is_90 (TRUE);\n-      else if (strcmp (&opt[2], \"no-f90\") == 0)\n-\tffe_set_is_90 (FALSE);\n-      else if (strcmp (&opt[2], \"automatic\") == 0)\n-\tffe_set_is_automatic (TRUE);\n-      else if (strcmp (&opt[2], \"no-automatic\") == 0)\n-\tffe_set_is_automatic (FALSE);\n-      else if (strcmp (&opt[2], \"dollar-ok\") == 0)\n-\tffe_set_is_dollar_ok (TRUE);\n-      else if (strcmp (&opt[2], \"no-dollar-ok\") == 0)\n-\tffe_set_is_dollar_ok (FALSE);\n-      else if (strcmp (&opt[2], \"f2c\") == 0)\n-\tffe_set_is_f2c (TRUE);\n-      else if (strcmp (&opt[2], \"no-f2c\") == 0)\n-\tffe_set_is_f2c (FALSE);\n-      else if (strcmp (&opt[2], \"f2c-library\") == 0)\n-\tffe_set_is_f2c_library (TRUE);\n-      else if (strcmp (&opt[2], \"no-f2c-library\") == 0)\n-\tffe_set_is_f2c_library (FALSE);\n-      else if (strcmp (&opt[2], \"flatten-arrays\") == 0)\n-\tffe_set_is_flatten_arrays (TRUE);\n-      else if (strcmp (&opt[2], \"no-flatten-arrays\") == 0)\n-\tffe_set_is_flatten_arrays (FALSE);\n-      else if (strcmp (&opt[2], \"free-form\") == 0)\n-\tffe_set_is_free_form (TRUE);\n-      else if (strcmp (&opt[2], \"no-free-form\") == 0)\n-\tffe_set_is_free_form (FALSE);\n-      else if (strcmp (&opt[2], \"fixed-form\") == 0)\n-\t{\n-\t  ffe_set_is_free_form (FALSE);\n-\t  return -1;\n-\t}\n-      else if (strcmp (&opt[2], \"no-fixed-form\") == 0)\n-\tffe_set_is_free_form (TRUE);\n-      else if (strcmp (&opt[2], \"pedantic\") == 0)\n-\tffe_set_is_pedantic (TRUE);\n-      else if (strcmp (&opt[2], \"no-pedantic\") == 0)\n-\tffe_set_is_pedantic (FALSE);\n-      else if (strcmp (&opt[2], \"vxt\") == 0)\n-\tffe_set_is_vxt (TRUE);\n-      else if (strcmp (&opt[2], \"not-vxt\") == 0)\n-\tffe_set_is_vxt (FALSE);\n-      else if (strcmp (&opt[2], \"vxt-not-f90\") == 0)\n-\twarning (\"%s no longer supported -- try -fvxt\", opt);\n-      else if (strcmp (&opt[2], \"f90-not-vxt\") == 0)\n-\twarning (\"%s no longer supported -- try -fno-vxt -ff90\", opt);\n-      else if (strcmp (&opt[2], \"no-ugly\") == 0)\n-\t{\n-\t  ffe_set_is_ugly_args (FALSE);\n-\t  ffe_set_is_ugly_assign (FALSE);\n-\t  ffe_set_is_ugly_assumed (FALSE);\n-\t  ffe_set_is_ugly_comma (FALSE);\n-\t  ffe_set_is_ugly_complex (FALSE);\n-\t  ffe_set_is_ugly_init (FALSE);\n-\t  ffe_set_is_ugly_logint (FALSE);\n-\t}\n-      else if (strcmp (&opt[2], \"ugly-args\") == 0)\n-\tffe_set_is_ugly_args (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-args\") == 0)\n-\tffe_set_is_ugly_args (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-assign\") == 0)\n-\tffe_set_is_ugly_assign (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-assign\") == 0)\n-\tffe_set_is_ugly_assign (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-assumed\") == 0)\n-\tffe_set_is_ugly_assumed (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-assumed\") == 0)\n-\tffe_set_is_ugly_assumed (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-comma\") == 0)\n-\tffe_set_is_ugly_comma (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-comma\") == 0)\n-\tffe_set_is_ugly_comma (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-complex\") == 0)\n-\tffe_set_is_ugly_complex (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-complex\") == 0)\n-\tffe_set_is_ugly_complex (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-init\") == 0)\n-\tffe_set_is_ugly_init (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-init\") == 0)\n-\tffe_set_is_ugly_init (FALSE);\n-      else if (strcmp (&opt[2], \"ugly-logint\") == 0)\n-\tffe_set_is_ugly_logint (TRUE);\n-      else if (strcmp (&opt[2], \"no-ugly-logint\") == 0)\n-\tffe_set_is_ugly_logint (FALSE);\n-      else if (strcmp (&opt[2], \"xyzzy\") == 0)\n-\tffe_set_is_ffedebug (TRUE);\n-      else if (strcmp (&opt[2], \"no-xyzzy\") == 0)\n-\tffe_set_is_ffedebug (FALSE);\n-      else if (strcmp (&opt[2], \"init-local-zero\") == 0)\n-\tffe_set_is_init_local_zero (TRUE);\n-      else if (strcmp (&opt[2], \"no-init-local-zero\") == 0)\n-\tffe_set_is_init_local_zero (FALSE);\n-      else if (strcmp (&opt[2], \"emulate-complex\") == 0)\n-\tffe_set_is_emulate_complex (TRUE);\n-      else if (strcmp (&opt[2], \"no-emulate-complex\") == 0)\n-\tffe_set_is_emulate_complex (FALSE);\n-      else if (strcmp (&opt[2], \"backslash\") == 0)\n-\tffe_set_is_backslash (TRUE);\n-      else if (strcmp (&opt[2], \"no-backslash\") == 0)\n-\tffe_set_is_backslash (FALSE);\n-      else if (strcmp (&opt[2], \"underscoring\") == 0)\n-\tffe_set_is_underscoring (TRUE);\n-      else if (strcmp (&opt[2], \"no-underscoring\") == 0)\n-\tffe_set_is_underscoring (FALSE);\n-      else if (strcmp (&opt[2], \"second-underscore\") == 0)\n-\tffe_set_is_second_underscore (TRUE);\n-      else if (strcmp (&opt[2], \"no-second-underscore\") == 0)\n-\tffe_set_is_second_underscore (FALSE);\n-      else if (strcmp (&opt[2], \"zeros\") == 0)\n-\tffe_set_is_zeros (TRUE);\n-      else if (strcmp (&opt[2], \"no-zeros\") == 0)\n-\tffe_set_is_zeros (FALSE);\n-      else if (strcmp (&opt[2], \"debug-kludge\") == 0)\n-\twarning (\"%s disabled, use normal debugging flags\", opt);\n-      else if (strcmp (&opt[2], \"no-debug-kludge\") == 0)\n-\twarning (\"%s disabled, use normal debugging flags\", opt);\n-      else if (strcmp (&opt[2], \"onetrip\") == 0)\n-\tffe_set_is_onetrip (TRUE);\n-      else if (strcmp (&opt[2], \"no-onetrip\") == 0)\n-\tffe_set_is_onetrip (FALSE);\n-      else if (strcmp (&opt[2], \"silent\") == 0)\n-\tffe_set_is_silent (TRUE);\n-      else if (strcmp (&opt[2], \"no-silent\") == 0)\n-\tffe_set_is_silent (FALSE);\n-      else if (strcmp (&opt[2], \"globals\") == 0)\n-\tffe_set_is_globals (TRUE);\n-      else if (strcmp (&opt[2], \"no-globals\") == 0)\n-\tffe_set_is_globals (FALSE);\n-      else if (strcmp (&opt[2], \"fortran-bounds-check\") == 0)\n-\tflag_bounds_check = TRUE;\n-      else if (strcmp (&opt[2], \"no-fortran-bounds-check\") == 0)\n-\tflag_bounds_check = FALSE;\n-      else if (strcmp (&opt[2], \"typeless-boz\") == 0)\n-\tffe_set_is_typeless_boz (TRUE);\n-      else if (strcmp (&opt[2], \"no-typeless-boz\") == 0)\n+      error (\"missing argument to \\\"-%s\\\"\", option->opt_text);\n+      return 1;\n+    }\n+\n+  switch (code)\n+    {\n+    default:\n+      return 0;\n+\n+    case OPT_fversion:\n+      ffe_set_is_version (TRUE);\n+      ffe_set_is_do_internal_checks (TRUE);\n+      break;\n+\n+    case OPT_ff66:\n+      ffe_set_is_onetrip (value);\n+      ffe_set_is_ugly_assumed (value);\n+      break;\n+\n+    case OPT_ff77:\n+      ffe_set_is_backslash (value);\n+      if (value)\n \tffe_set_is_typeless_boz (FALSE);\n-      else if (strcmp (&opt[2], \"intrin-case-initcap\") == 0)\n-\tffe_set_case_intrin (FFE_caseINITCAP);\n-      else if (strcmp (&opt[2], \"intrin-case-upper\") == 0)\n-\tffe_set_case_intrin (FFE_caseUPPER);\n-      else if (strcmp (&opt[2], \"intrin-case-lower\") == 0)\n-\tffe_set_case_intrin (FFE_caseLOWER);\n-      else if (strcmp (&opt[2], \"intrin-case-any\") == 0)\n-\tffe_set_case_intrin (FFE_caseNONE);\n-      else if (strcmp (&opt[2], \"match-case-initcap\") == 0)\n-\tffe_set_case_match (FFE_caseINITCAP);\n-      else if (strcmp (&opt[2], \"match-case-upper\") == 0)\n-\tffe_set_case_match (FFE_caseUPPER);\n-      else if (strcmp (&opt[2], \"match-case-lower\") == 0)\n-\tffe_set_case_match (FFE_caseLOWER);\n-      else if (strcmp (&opt[2], \"match-case-any\") == 0)\n-\tffe_set_case_match (FFE_caseNONE);\n-      else if (strcmp (&opt[2], \"source-case-upper\") == 0)\n-\tffe_set_case_source (FFE_caseUPPER);\n-      else if (strcmp (&opt[2], \"source-case-lower\") == 0)\n-\tffe_set_case_source (FFE_caseLOWER);\n-      else if (strcmp (&opt[2], \"source-case-preserve\") == 0)\n-\tffe_set_case_source (FFE_caseNONE);\n-      else if (strcmp (&opt[2], \"symbol-case-initcap\") == 0)\n-\tffe_set_case_symbol (FFE_caseINITCAP);\n-      else if (strcmp (&opt[2], \"symbol-case-upper\") == 0)\n-\tffe_set_case_symbol (FFE_caseUPPER);\n-      else if (strcmp (&opt[2], \"symbol-case-lower\") == 0)\n-\tffe_set_case_symbol (FFE_caseLOWER);\n-      else if (strcmp (&opt[2], \"symbol-case-any\") == 0)\n-\tffe_set_case_symbol (FFE_caseNONE);\n-      else if (strcmp (&opt[2], \"case-strict-upper\") == 0)\n-\t{\n-\t  ffe_set_case_intrin (FFE_caseUPPER);\n-\t  ffe_set_case_match (FFE_caseUPPER);\n-\t  ffe_set_case_source (FFE_caseNONE);\n-\t  ffe_set_case_symbol (FFE_caseUPPER);\n-\t}\n-      else if (strcmp (&opt[2], \"case-strict-lower\") == 0)\n-\t{\n-\t  ffe_set_case_intrin (FFE_caseLOWER);\n-\t  ffe_set_case_match (FFE_caseLOWER);\n-\t  ffe_set_case_source (FFE_caseNONE);\n-\t  ffe_set_case_symbol (FFE_caseLOWER);\n-\t}\n-      else if (strcmp (&opt[2], \"case-initcap\") == 0)\n-\t{\n-\t  ffe_set_case_intrin (FFE_caseINITCAP);\n-\t  ffe_set_case_match (FFE_caseINITCAP);\n-\t  ffe_set_case_source (FFE_caseNONE);\n-\t  ffe_set_case_symbol (FFE_caseINITCAP);\n-\t}\n-      else if (strcmp (&opt[2], \"case-upper\") == 0)\n-\t{\n-\t  ffe_set_case_intrin (FFE_caseNONE);\n-\t  ffe_set_case_match (FFE_caseNONE);\n-\t  ffe_set_case_source (FFE_caseUPPER);\n-\t  ffe_set_case_symbol (FFE_caseNONE);\n-\t}\n-      else if (strcmp (&opt[2], \"case-lower\") == 0)\n-\t{\n-\t  ffe_set_case_intrin (FFE_caseNONE);\n-\t  ffe_set_case_match (FFE_caseNONE);\n-\t  ffe_set_case_source (FFE_caseLOWER);\n-\t  ffe_set_case_symbol (FFE_caseNONE);\n-\t}\n-      else if (strcmp (&opt[2], \"case-preserve\") == 0)\n+      break;\n+\n+    case OPT_ff90:\n+      ffe_set_is_90 (value);\n+      break;\n+\n+    case OPT_fautomatic:\n+      ffe_set_is_automatic (value);\n+      break;\n+\n+    case OPT_fdollar_ok:\n+      ffe_set_is_dollar_ok (value);\n+      break;\n+\n+    case OPT_ff2c:\n+      ffe_set_is_f2c (value);\n+      break;\n+\n+    case OPT_ff2c_library:\n+      ffe_set_is_f2c_library (value);\n+      break;\n+\n+    case OPT_fflatten_arrays:\n+      ffe_set_is_f2c_library (value);\n+      break;\n+\n+    case OPT_ffree_form:\n+      ffe_set_is_free_form (value);\n+      break;\n+\n+    case OPT_ffixed_form:\n+      ffe_set_is_free_form (!value);\n+      if (value)\n+\treturn -1;\n+      break;\n+\n+    case OPT_fpedantic:\n+      ffe_set_is_pedantic (value);\n+      break;\n+\n+    case OPT_fvxt:\n+      ffe_set_is_vxt (value);\n+      break;\n+\n+    case OPT_fvxt_not_f90:\n+      warning (\"-fvxt-not-f90 no longer supported -- try -fvxt\");\n+      break;\n+\n+    case OPT_ff90_not_vxt:\n+      warning (\"-ff90-not-vxt no longer supported -- try -fno-vxt -ff90\");\n+      break;\n+\n+    case OPT_fugly:\n+      ffe_set_is_ugly_args (value);\n+      ffe_set_is_ugly_assign (value);\n+      ffe_set_is_ugly_assumed (value);\n+      ffe_set_is_ugly_comma (value);\n+      ffe_set_is_ugly_complex (value);\n+      ffe_set_is_ugly_init (value);\n+      ffe_set_is_ugly_logint (value);\n+      break;\n+\n+    case OPT_fugly_args:\n+      ffe_set_is_ugly_args (value);\n+      break;\n+\n+    case OPT_fugly_assign:\n+      ffe_set_is_ugly_assign (value);\n+      break;\n+\n+    case OPT_fugly_assumed:\n+      ffe_set_is_ugly_assumed (value);\n+      break;\n+\n+    case OPT_fugly_comma:\n+      ffe_set_is_ugly_comma (value);\n+      break;\n+\n+    case OPT_fugly_complex:\n+      ffe_set_is_ugly_complex (value);\n+      break;\n+\n+    case OPT_fugly_init:\n+      ffe_set_is_ugly_init (value);\n+      break;\n+\n+    case OPT_fugly_logint:\n+      ffe_set_is_ugly_logint (value);\n+      break;\n+\n+    case OPT_fxyzzy:\n+      ffe_set_is_ffedebug (value);\n+      break;\n+\n+    case OPT_finit_local_zero:\n+      ffe_set_is_init_local_zero (value);\n+      break;\n+\n+    case OPT_femulate_complex:\n+      ffe_set_is_emulate_complex (value);\n+      break;\n+\n+    case OPT_fbackslash:\n+      ffe_set_is_backslash (value);\n+      break;\n+\n+    case OPT_funderscoring:\n+      ffe_set_is_underscoring (value);\n+      break;\n+\n+    case OPT_fsecond_underscore:\n+      ffe_set_is_second_underscore (value);\n+      break;\n+\n+    case OPT_fzeros:\n+      ffe_set_is_zeros (value);\n+      break;\n+\n+    case OPT_fdebug_kludge:\n+      warning (\"-fdebug-kludge is disabled, use normal debugging flags\");\n+      break;\n+\n+    case OPT_fonetrip:\n+      ffe_set_is_onetrip (value);\n+      break;\n+\n+    case OPT_fsilent:\n+      ffe_set_is_silent (value);\n+      break;\n+\n+    case OPT_fglobals:\n+      ffe_set_is_globals (value);\n+      break;\n+\n+    case OPT_ffortran_bounds_check:\n+      flag_bounds_check = value;\n+      break;\n+\n+    case OPT_ftypeless_boz:\n+      ffe_set_is_typeless_boz (value);\n+      break;\n+\n+    case OPT_fintrin_case_initcap:\n+      ffe_set_case_intrin (FFE_caseINITCAP);\n+      break;\n+\n+    case OPT_fintrin_case_lower:\n+      ffe_set_case_intrin (FFE_caseLOWER);\n+      break;\n+\n+    case OPT_fintrin_case_upper:\n+      ffe_set_case_intrin (FFE_caseUPPER);\n+      break;\n+\n+    case OPT_fintrin_case_any:\n+      ffe_set_case_intrin (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fmatch_case_initcap:\n+      ffe_set_case_match (FFE_caseINITCAP);\n+      break;\n+\n+    case OPT_fmatch_case_lower:\n+      ffe_set_case_match (FFE_caseLOWER);\n+      break;\n+\n+    case OPT_fmatch_case_upper:\n+      ffe_set_case_match (FFE_caseUPPER);\n+      break;\n+\n+    case OPT_fmatch_case_any:\n+      ffe_set_case_match (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fsource_case_lower:\n+      ffe_set_case_source (FFE_caseLOWER);\n+      break;\n+\n+    case OPT_fsource_case_preserve:\n+      ffe_set_case_match (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fsource_case_upper:\n+      ffe_set_case_source (FFE_caseUPPER);\n+      break;\n+\n+    case OPT_fsymbol_case_initcap:\n+      ffe_set_case_symbol (FFE_caseINITCAP);\n+      break;\n+\n+    case OPT_fsymbol_case_lower:\n+      ffe_set_case_symbol (FFE_caseLOWER);\n+      break;\n+\n+    case OPT_fsymbol_case_upper:\n+      ffe_set_case_symbol (FFE_caseUPPER);\n+      break;\n+\n+    case OPT_fsymbol_case_any:\n+      ffe_set_case_symbol (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fcase_strict_upper:\n+      ffe_set_case_intrin (FFE_caseUPPER);\n+      ffe_set_case_match (FFE_caseUPPER);\n+      ffe_set_case_source (FFE_caseNONE);\n+      ffe_set_case_symbol (FFE_caseUPPER);\n+      break;\n+\n+    case OPT_fcase_strict_lower:\n+      ffe_set_case_intrin (FFE_caseLOWER);\n+      ffe_set_case_match (FFE_caseLOWER);\n+      ffe_set_case_source (FFE_caseNONE);\n+      ffe_set_case_symbol (FFE_caseLOWER);\n+      break;\n+\n+    case OPT_fcase_initcap:\n+      ffe_set_case_intrin (FFE_caseINITCAP);\n+      ffe_set_case_match (FFE_caseINITCAP);\n+      ffe_set_case_source (FFE_caseNONE);\n+      ffe_set_case_symbol (FFE_caseINITCAP);\n+      break;\n+\n+    case OPT_fcase_upper:\n+      ffe_set_case_intrin (FFE_caseNONE);\n+      ffe_set_case_match (FFE_caseNONE);\n+      ffe_set_case_source (FFE_caseUPPER);\n+      ffe_set_case_symbol (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fcase_lower:\n+      ffe_set_case_intrin (FFE_caseNONE);\n+      ffe_set_case_match (FFE_caseNONE);\n+      ffe_set_case_source (FFE_caseLOWER);\n+      ffe_set_case_symbol (FFE_caseNONE);\n+\n+    case OPT_fcase_preserve:\n+      ffe_set_case_intrin (FFE_caseNONE);\n+      ffe_set_case_match (FFE_caseNONE);\n+      ffe_set_case_source (FFE_caseNONE);\n+      ffe_set_case_symbol (FFE_caseNONE);\n+      break;\n+\n+    case OPT_fbadu77_intrinsics_delete:\n+      ffe_set_intrinsic_state_badu77 (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_fbadu77_intrinsics_hide:\n+      ffe_set_intrinsic_state_badu77 (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_fbadu77_intrinsics_disable:\n+      ffe_set_intrinsic_state_badu77 (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_fbadu77_intrinsics_enable:\n+      ffe_set_intrinsic_state_badu77 (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_fgnu_intrinsics_delete:\n+      ffe_set_intrinsic_state_gnu (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_fgnu_intrinsics_hide:\n+      ffe_set_intrinsic_state_gnu (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_fgnu_intrinsics_disable:\n+      ffe_set_intrinsic_state_gnu (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_fgnu_intrinsics_enable:\n+      ffe_set_intrinsic_state_gnu (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_ff2c_intrinsics_delete:\n+      ffe_set_intrinsic_state_f2c (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_ff2c_intrinsics_hide:\n+      ffe_set_intrinsic_state_f2c (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_ff2c_intrinsics_disable:\n+      ffe_set_intrinsic_state_f2c (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_ff2c_intrinsics_enable:\n+      ffe_set_intrinsic_state_f2c (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_ff90_intrinsics_delete:\n+      ffe_set_intrinsic_state_f90 (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_ff90_intrinsics_hide:\n+      ffe_set_intrinsic_state_f90 (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_ff90_intrinsics_disable:\n+      ffe_set_intrinsic_state_f90 (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_ff90_intrinsics_enable:\n+      ffe_set_intrinsic_state_f90 (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_fmil_intrinsics_delete:\n+      ffe_set_intrinsic_state_mil (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_fmil_intrinsics_hide:\n+      ffe_set_intrinsic_state_mil (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_fmil_intrinsics_disable:\n+      ffe_set_intrinsic_state_mil (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_fmil_intrinsics_enable:\n+      ffe_set_intrinsic_state_mil (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_funix_intrinsics_delete:\n+      ffe_set_intrinsic_state_unix (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_funix_intrinsics_hide:\n+      ffe_set_intrinsic_state_unix (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_funix_intrinsics_disable:\n+      ffe_set_intrinsic_state_unix (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_funix_intrinsics_enable:\n+      ffe_set_intrinsic_state_unix (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_fvxt_intrinsics_delete:\n+      ffe_set_intrinsic_state_vxt (FFE_intrinsicstateDELETED);\n+      break;\n+\n+    case OPT_fvxt_intrinsics_hide:\n+      ffe_set_intrinsic_state_vxt (FFE_intrinsicstateHIDDEN);\n+      break;\n+\n+    case OPT_fvxt_intrinsics_disable:\n+      ffe_set_intrinsic_state_vxt (FFE_intrinsicstateDISABLED);\n+      break;\n+\n+    case OPT_fvxt_intrinsics_enable:\n+      ffe_set_intrinsic_state_vxt (FFE_intrinsicstateENABLED);\n+      break;\n+\n+    case OPT_ffixed_line_length_:\n+      if (strcmp (arg, \"none\") == 0)\n \t{\n-\t  ffe_set_case_intrin (FFE_caseNONE);\n-\t  ffe_set_case_match (FFE_caseNONE);\n-\t  ffe_set_case_source (FFE_caseNONE);\n-\t  ffe_set_case_symbol (FFE_caseNONE);\n+\t  ffe_set_fixed_line_length (0);\n+\t  return -1;\n \t}\n-      else if (strcmp (&opt[2], \"badu77-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_badu77 (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"badu77-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_badu77 (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"badu77-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_badu77 (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"badu77-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_badu77 (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"gnu-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_gnu (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"gnu-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_gnu (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"gnu-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_gnu (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"gnu-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_gnu (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"f2c-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_f2c (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"f2c-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_f2c (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"f2c-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_f2c (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"f2c-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_f2c (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"f90-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_f90 (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"f90-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_f90 (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"f90-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_f90 (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"f90-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_f90 (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"mil-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_mil (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"mil-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_mil (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"mil-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_mil (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"mil-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_mil (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"unix-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_unix (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"unix-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_unix (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"unix-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_unix (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"unix-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_unix (FFE_intrinsicstateENABLED);\n-      else if (strcmp (&opt[2], \"vxt-intrinsics-delete\") == 0)\n-\tffe_set_intrinsic_state_vxt (FFE_intrinsicstateDELETED);\n-      else if (strcmp (&opt[2], \"vxt-intrinsics-hide\") == 0)\n-\tffe_set_intrinsic_state_vxt (FFE_intrinsicstateHIDDEN);\n-      else if (strcmp (&opt[2], \"vxt-intrinsics-disable\") == 0)\n-\tffe_set_intrinsic_state_vxt (FFE_intrinsicstateDISABLED);\n-      else if (strcmp (&opt[2], \"vxt-intrinsics-enable\") == 0)\n-\tffe_set_intrinsic_state_vxt (FFE_intrinsicstateENABLED);\n-      else if (strncmp (&opt[2], \"fixed-line-length-\",\n-\t\t\tstrlen (\"fixed-line-length-\")) == 0)\n+      else if (ffe_is_digit_string_ (arg))\n \t{\n-\t  char *len = &opt[2] + strlen (\"fixed-line-length-\");\n-\n-\t  if (strcmp (len, \"none\") == 0)\n-\t    {\n-\t      ffe_set_fixed_line_length (0);\n-\t      return -1;\n-\t    }\n-\t  else if (ffe_is_digit_string_ (len))\n-\t    {\n-\t      ffe_set_fixed_line_length (atol (len));\n-\t      return -1;\n-\t    }\n-\t  else\n-\t    return 0;\n+\t  ffe_set_fixed_line_length (atol (arg));\n+\t  return -1;\n \t}\n-      else\n-\treturn 0;\n-    }\n-  else if (opt[1] == 'W')\n-    {\n-      if (!strcmp (&opt[2], \"comment\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"no-comment\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"comments\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"no-comments\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"trigraphs\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"no-trigraphs\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"import\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"no-import\"))\n-\t; /* cpp handles this one.  */\n-      else if (!strcmp (&opt[2], \"globals\"))\n-\tffe_set_is_warn_globals (TRUE);\n-      else if (!strcmp (&opt[2], \"no-globals\"))\n-\tffe_set_is_warn_globals (FALSE);\n-      else if (!strcmp (&opt[2], \"implicit\"))\n-\tffe_set_is_warn_implicit (TRUE);\n-      else if (!strcmp (&opt[2], \"no-implicit\"))\n-\tffe_set_is_warn_implicit (FALSE);\n-      else if (!strcmp (&opt[2], \"surprising\"))\n-\tffe_set_is_warn_surprising (TRUE);\n-      else if (!strcmp (&opt[2], \"no-surprising\"))\n-\tffe_set_is_warn_surprising (FALSE);\n-      else if (!strcmp (&opt[2], \"all\"))\n+      return 0;\n+\n+    case OPT_Wcomment:\n+    case OPT_Wcomments:\n+    case OPT_Wimport:\n+    case OPT_Wtrigraphs:\n+      /* These are for cpp.  */\n+      break;\n+\n+    case OPT_Wglobals:\n+      ffe_set_is_warn_globals (value);\n+      break;\n+\n+    case OPT_Wimplicit:\n+      ffe_set_is_warn_implicit (value);\n+      break;\n+\n+    case OPT_Wsurprising:\n+      ffe_set_is_warn_surprising (value);\n+      break;\n+\n+    case OPT_Wall:\n+      set_Wunused (value);\n+      /* We save the value of warn_uninitialized, since if they put\n+\t -Wuninitialized on the command line, we need to generate a\n+\t warning about not using it without also specifying -O.  */\n+      if (value)\n \t{\n-\t  /* We save the value of warn_uninitialized, since if they put\n-\t     -Wuninitialized on the command line, we need to generate a\n-\t     warning about not using it without also specifying -O.  */\n \t  if (warn_uninitialized != 1)\n \t    warn_uninitialized = 2;\n-\t  set_Wunused (1);\n \t}\n       else\n-\treturn 0;\n+\twarn_uninitialized = 0;\n+      break;\n+\n+    case OPT_I:\n+      ffecom_decode_include_option (arg);\n+      break;\n     }\n-  else if (opt[1] == 'I')\n-    return ffecom_decode_include_option (&opt[2]);\n-  else\n-    return 0;\n \n   return 1;\n }"}, {"sha": "60c099512c48e1941957190c24f3c747a216023e", "filename": "gcc/f/top.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Ftop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51/gcc%2Ff%2Ftop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.h?ref=2cdfea3ae80f8952df6bae07d7ebf6c0fceecc51", "patch": "@@ -141,7 +141,7 @@ extern bool ffe_in_4;\n \n /* Declare functions with prototypes. */\n \n-int ffe_decode_option (int argc, char **argv);\n+int ffe_handle_option (size_t code, const char *arg, int on);\n void ffe_file (ffewhereFile wf, FILE *f);\n void ffe_init_0 (void);\n void ffe_init_1 (void);"}]}