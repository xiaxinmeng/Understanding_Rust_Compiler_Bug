{"sha": "b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlNjRkYjJhNDc1YTEzZjkwMjE5YzM2ZDRjOWMzZDg0NmY2MGIxYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-16T16:46:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-16T16:46:26Z"}, "message": "locale_facets.tcc (money_get::do_get(string_type&)): Fix parsing of the remaining sign characters.\n\n2004-02-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (money_get::do_get(string_type&)):\n\tFix parsing of the remaining sign characters.\n\t* 22_locale/money_get/get/char/2.cc: Tweak: now, correctly,\n\tthe input is scanned 'til eof.\n\t* 22_locale/money_get/get/char/4.cc: Likewise.\n\t* 22_locale/money_get/get/wchar_t/2.cc: Likewise.\n\t* 22_locale/money_get/get/wchar_t/4.cc: Likewise.\n\t* 22_locale/money_get/get/char/8.cc: Tweak: override do_neg_format,\n\tnot do_pos_format: the former is the only one that matters during\n\tinput.\n\t* 22_locale/money_get/get/wchar_t/8.cc: Likewise.\n\n\t* 22_locale/money_get/get/char/6.cc: Minor tweak.\n\t* 22_locale/money_get/get/wchar_t/6.cc: Likewise.\n\nFrom-SVN: r77896", "tree": {"sha": "398eed3d5887c9a9a902d82333e88cb60ac16e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/398eed3d5887c9a9a902d82333e88cb60ac16e58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/comments", "author": null, "committer": null, "parents": [{"sha": "9ac974606795ef764ada5241981be2c899dc5586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac974606795ef764ada5241981be2c899dc5586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac974606795ef764ada5241981be2c899dc5586"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "301779611e475c270f28294980897e9f34435e42", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -1,3 +1,20 @@\n+2004-02-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (money_get::do_get(string_type&)):\n+\tFix parsing of the remaining sign characters.\n+\t* 22_locale/money_get/get/char/2.cc: Tweak: now, correctly,\n+\tthe input is scanned 'til eof.\n+\t* 22_locale/money_get/get/char/4.cc: Likewise.\n+\t* 22_locale/money_get/get/wchar_t/2.cc: Likewise.\n+\t* 22_locale/money_get/get/wchar_t/4.cc: Likewise.\n+\t* 22_locale/money_get/get/char/8.cc: Tweak: override do_neg_format,\n+\tnot do_pos_format: the former is the only one that matters during\n+\tinput.\n+\t* 22_locale/money_get/get/wchar_t/8.cc: Likewise.\n+\n+\t* 22_locale/money_get/get/char/6.cc: Minor tweak.\n+\t* 22_locale/money_get/get/wchar_t/6.cc: Likewise.\n+\n 2004-02-15  David Asher  <david.asher@cavium.com>\n \n \tPR libstdc++/11352"}, {"sha": "5e6128e0934b958ed5ba2ec6eb89cf8a9da07e96", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -1207,7 +1207,7 @@ namespace std\n \t\t  || ((static_cast<part>(__p.field[3]) != money_base::none)\n \t\t      && __i == 2))\n \t\t{\n-\t\t  // According to 22.2.6.1.2.2, symbol is required\n+\t\t  // According to 22.2.6.1.2, p2, symbol is required\n \t\t  // if (__io.flags() & ios_base::showbase),\n \t\t  // otherwise is optional and consumed only if\n \t\t  // other characters are needed to complete the\n@@ -1293,9 +1293,8 @@ namespace std\n \t{\n \t  const size_type __len = __sign.size();\n \t  size_type __i = 1;\n-\t  for (; __beg != __end && __i < __len; ++__i)\n-\t    for (; __beg != __end\n-\t\t   && *__beg != __sign[__i]; ++__beg);\n+\t  for (; __beg != __end && __i < __len\n+\t\t && *__beg == __sign[__i]; ++__beg, ++__i);\n \n \t  if (__i != __len)\n \t    __testvalid = false;"}, {"sha": "b9bd0052cb63fc15ad34abb5a5c5b8f830ebd55b", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/2.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -81,15 +81,15 @@ void test02()\n   ios_base::iostate err10 = ios_base::goodbit;\n   mon_get.get(is_it10, end, true, iss, err10, result10);\n   VERIFY( result10 == digits2 );\n-  VERIFY( err10 == ios_base::goodbit );\n+  VERIFY( err10 == ios_base::eofbit );\n \n   iss.str(\"(HKD .01)\"); \n   iterator_type is_it11(iss);\n   string result11;\n   ios_base::iostate err11 = ios_base::goodbit;\n   mon_get.get(is_it11, end, true, iss, err11, result11);\n   VERIFY( result11 == digits4 );\n-  VERIFY( err11 == ios_base::goodbit );\n+  VERIFY( err11 == ios_base::eofbit );\n \n   // for the \"en_HK\" locale the parsing of the very same input streams must\n   // be successful without showbase too, since the symbol field appears in\n@@ -111,15 +111,15 @@ void test02()\n   ios_base::iostate err13 = ios_base::goodbit;\n   mon_get.get(is_it13, end, true, iss, err13, result13);\n   VERIFY( result13 == digits2 );\n-  VERIFY( err13 == ios_base::goodbit );\n+  VERIFY( err13 == ios_base::eofbit );\n \n   iss.str(\"(HKD .01)\"); \n   iterator_type is_it14(iss);\n   string result14;\n   ios_base::iostate err14 = ios_base::goodbit;\n   mon_get.get(is_it14, end, true, iss, err14, result14);\n   VERIFY( result14 == digits4 );\n-  VERIFY( err14 == ios_base::goodbit );\n+  VERIFY( err14 == ios_base::eofbit );\n }\n \n int main()"}, {"sha": "c5aa7a3a8c498f5d9c5b778a266bbf43303196d8", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/4.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -28,8 +28,6 @@\n void test04()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<char> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -64,7 +62,7 @@ void test04()\n   ios_base::iostate err03 = ios_base::goodbit;\n   mon_get.get(is_it03, end, true, iss, err03, result3);\n   VERIFY( result3 == digits4 );\n-  VERIFY( err03 == ios_base::goodbit );\n+  VERIFY( err03 == ios_base::eofbit );\n }\n \n int main()"}, {"sha": "434edfe12b7c1a51b3b827dcc8fdce2e23414837", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/6.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F6.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,12 +35,6 @@ struct My_money_io : public std::moneypunct<char,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n-  {\n-    pattern pat = { { symbol, none, sign, value } };\n-    return pat;\n-  }\n-\n   pattern do_neg_format() const\n   {\n     pattern pat = { { symbol, none, sign, value } };"}, {"sha": "f88b521c0020a1622576cb8143bb4866602b78c0", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/8.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F8.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -34,7 +34,7 @@ struct My_money_io_a : public std::moneypunct<char,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n+  pattern do_neg_format() const\n   {\n     pattern pat = { { sign, value, space, symbol } };\n     return pat;\n@@ -51,7 +51,7 @@ struct My_money_io_b : public std::moneypunct<char,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n+  pattern do_neg_format() const\n   {\n     pattern pat = { { sign, value, symbol, none } };\n     return pat;"}, {"sha": "95a0c735632be56d5ae6abf0b6af43c08430377e", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/2.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -81,15 +81,15 @@ void test02()\n   ios_base::iostate err10 = ios_base::goodbit;\n   mon_get.get(is_it10, end, true, iss, err10, result10);\n   VERIFY( result10 == digits2 );\n-  VERIFY( err10 == ios_base::goodbit );\n+  VERIFY( err10 == ios_base::eofbit );\n \n   iss.str(L\"(HKD .01)\"); \n   iterator_type is_it11(iss);\n   wstring result11;\n   ios_base::iostate err11 = ios_base::goodbit;\n   mon_get.get(is_it11, end, true, iss, err11, result11);\n   VERIFY( result11 == digits4 );\n-  VERIFY( err11 == ios_base::goodbit );\n+  VERIFY( err11 == ios_base::eofbit );\n \n   // for the \"en_HK\" locale the parsing of the very same input streams must\n   // be successful without showbase too, since the symbol field appears in\n@@ -111,15 +111,15 @@ void test02()\n   ios_base::iostate err13 = ios_base::goodbit;\n   mon_get.get(is_it13, end, true, iss, err13, result13);\n   VERIFY( result13 == digits2 );\n-  VERIFY( err13 == ios_base::goodbit );\n+  VERIFY( err13 == ios_base::eofbit );\n \n   iss.str(L\"(HKD .01)\"); \n   iterator_type is_it14(iss);\n   wstring result14;\n   ios_base::iostate err14 = ios_base::goodbit;\n   mon_get.get(is_it14, end, true, iss, err14, result14);\n   VERIFY( result14 == digits4 );\n-  VERIFY( err14 == ios_base::goodbit );\n+  VERIFY( err14 == ios_base::eofbit );\n }\n \n int main()"}, {"sha": "cb1a2abfcbcb05448cc2c7c31798267fbc25937b", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/4.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -28,8 +28,6 @@\n void test04()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<wchar_t> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -64,7 +62,7 @@ void test04()\n   ios_base::iostate err03 = ios_base::goodbit;\n   mon_get.get(is_it03, end, true, iss, err03, result3);\n   VERIFY( result3 == digits4 );\n-  VERIFY( err03 == ios_base::goodbit );\n+  VERIFY( err03 == ios_base::eofbit );\n }\n \n int main()"}, {"sha": "cebba6e3b80e27567d1847dc1c374e99a10e6e0c", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/6.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F6.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,12 +35,6 @@ struct My_money_io : public std::moneypunct<wchar_t,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n-  {\n-    pattern pat = { { symbol, none, sign, value } };\n-    return pat;\n-  }\n-\n   pattern do_neg_format() const\n   {\n     pattern pat = { { symbol, none, sign, value } };"}, {"sha": "2b86b36754235459566ce3a5192cb448043dc7f4", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/8.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e64db2a475a13f90219c36d4c9c3d846f60b1c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F8.cc?ref=b7e64db2a475a13f90219c36d4c9c3d846f60b1c", "patch": "@@ -34,7 +34,7 @@ struct My_money_io_a : public std::moneypunct<wchar_t,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n+  pattern do_neg_format() const\n   {\n     pattern pat = { { sign, value, space, symbol } };\n     return pat;\n@@ -51,7 +51,7 @@ struct My_money_io_b : public std::moneypunct<wchar_t,false>\n   \n   int do_frac_digits() const { return 2; }\n \n-  pattern do_pos_format() const\n+  pattern do_neg_format() const\n   {\n     pattern pat = { { sign, value, symbol, none } };\n     return pat;"}]}