{"sha": "1e928e07b22dd721d06501fb85a31360b55d3b8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5MjhlMDdiMjJkZDcyMWQwNjUwMWZiODVhMzEzNjBiNTVkM2I4Yg==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2015-08-05T01:08:49Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2015-08-05T01:08:49Z"}, "message": "cse.c (cse_insn): Restoring old behaviour for src_eqv when dest and value in the REG_EQUAL are...\n\ngcc/ChangeLog:\n\n2015-08-05  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* cse.c (cse_insn): Restoring old behaviour for src_eqv\n\t when dest and value in the REG_EQUAL are same and dest\n\t is STRICT_LOW_PART.\n\nFrom-SVN: r226606", "tree": {"sha": "62d24ce5582e5f92c90952397aea1b1914716d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62d24ce5582e5f92c90952397aea1b1914716d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e928e07b22dd721d06501fb85a31360b55d3b8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e928e07b22dd721d06501fb85a31360b55d3b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e928e07b22dd721d06501fb85a31360b55d3b8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e928e07b22dd721d06501fb85a31360b55d3b8b/comments", "author": null, "committer": null, "parents": [{"sha": "4856562a7036626de8408deb852779eb3ea7a197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4856562a7036626de8408deb852779eb3ea7a197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4856562a7036626de8408deb852779eb3ea7a197"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "9c8e1765d31fb5ff324fade538b7ffbc33aa54e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e928e07b22dd721d06501fb85a31360b55d3b8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e928e07b22dd721d06501fb85a31360b55d3b8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e928e07b22dd721d06501fb85a31360b55d3b8b", "patch": "@@ -1,3 +1,9 @@\n+2015-08-05  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* cse.c (cse_insn): Restoring old behaviour for src_eqv\n+\t when dest and value in the REG_EQUAL are same and dest\n+\t is STRICT_LOW_PART.\n+\n 2015-08-04  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/moxie/moxie.h (PRINT_OPERAND,"}, {"sha": "ef375791d4893602a83358b3e403846ee4cb02e6", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e928e07b22dd721d06501fb85a31360b55d3b8b/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e928e07b22dd721d06501fb85a31360b55d3b8b/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=1e928e07b22dd721d06501fb85a31360b55d3b8b", "patch": "@@ -4528,12 +4528,13 @@ cse_insn (rtx_insn *insn)\n      this case, and if it isn't set, then there will be no equivalence\n      for the destination.  */\n   if (n_sets == 1 && REG_NOTES (insn) != 0\n-      && (tem = find_reg_note (insn, REG_EQUAL, NULL_RTX)) != 0\n-      && (! rtx_equal_p (XEXP (tem, 0), SET_SRC (sets[0].rtl))))\n+      && (tem = find_reg_note (insn, REG_EQUAL, NULL_RTX)) != 0)\n     {\n-      if (GET_CODE (SET_DEST (sets[0].rtl)) == STRICT_LOW_PART)\n-\tsrc_eqv = copy_rtx (XEXP (tem, 0));\n \n+      if (GET_CODE (SET_DEST (sets[0].rtl)) != ZERO_EXTRACT\n+\t  && (! rtx_equal_p (XEXP (tem, 0), SET_SRC (sets[0].rtl))\n+\t      || GET_CODE (SET_DEST (sets[0].rtl)) == STRICT_LOW_PART))\n+\tsrc_eqv = copy_rtx (XEXP (tem, 0));\n       /* If DEST is of the form ZERO_EXTACT, as in:\n \t (set (zero_extract:SI (reg:SI 119)\n \t\t  (const_int 16 [0x10])"}]}