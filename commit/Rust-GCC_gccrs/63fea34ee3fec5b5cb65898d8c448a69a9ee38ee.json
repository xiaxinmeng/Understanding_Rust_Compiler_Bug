{"sha": "63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNmZWEzNGVlM2ZlYzViNWNiNjU4OThkOGM0NDhhNjlhOWVlMzhlZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2001-12-31T10:26:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2001-12-31T10:26:01Z"}, "message": "slist: Move into __gnu_cxx, tweak, add using declarations.\n\n2001-12-31  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/ext/slist:  Move into __gnu_cxx,\n\ttweak, add using declarations.\n\nFrom-SVN: r48423", "tree": {"sha": "d6ae257df07199541df034ee856082da9dd3c4f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6ae257df07199541df034ee856082da9dd3c4f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee/comments", "author": null, "committer": null, "parents": [{"sha": "e538847e1c56a0d6a8bbdea61d70a81bf958e78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e538847e1c56a0d6a8bbdea61d70a81bf958e78d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e538847e1c56a0d6a8bbdea61d70a81bf958e78d"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "420b7cd90b2b76efd99304d5270009aeef07a55a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "patch": "@@ -1,3 +1,8 @@\n+2001-12-31  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/ext/slist:  Move into __gnu_cxx,\n+        tweak, add using declarations.\n+\n 2001-12-31  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/ext/hash_map:  Move into __gnu_cxx,"}, {"sha": "0863a8cf9ccb29ab20213410ffdc0c22b174d81d", "filename": "libstdc++-v3/include/ext/slist", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63fea34ee3fec5b5cb65898d8c448a69a9ee38ee/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist?ref=63fea34ee3fec5b5cb65898d8c448a69a9ee38ee", "patch": "@@ -55,8 +55,14 @@\n #include <bits/stl_uninitialized.h>\n #include <bits/concept_check.h>\n \n-namespace std\n+namespace __gnu_cxx\n { \n+using std::size_t;\n+using std::ptrdiff_t;\n+using std::_Alloc_traits;\n+using std::_Construct;\n+using std::_Destroy;\n+using std::allocator;\n \n struct _Slist_node_base\n {\n@@ -145,9 +151,9 @@ struct _Slist_node : public _Slist_node_base\n \n struct _Slist_iterator_base\n {\n-  typedef size_t               size_type;\n-  typedef ptrdiff_t            difference_type;\n-  typedef forward_iterator_tag iterator_category;\n+  typedef size_t                    size_type;\n+  typedef ptrdiff_t                 difference_type;\n+  typedef std::forward_iterator_tag iterator_category;\n \n   _Slist_node_base* _M_node;\n \n@@ -297,7 +303,7 @@ class slist : private _Slist_base<_Tp,_Alloc>\n private:\n   typedef _Slist_base<_Tp,_Alloc> _Base;\n public:\n-  typedef _Tp                value_type;\n+  typedef _Tp               value_type;\n   typedef value_type*       pointer;\n   typedef const value_type* const_pointer;\n   typedef value_type&       reference;\n@@ -707,8 +713,8 @@ template <class _Tp, class _Alloc>\n inline bool\n operator<(const slist<_Tp,_Alloc>& _SL1, const slist<_Tp,_Alloc>& _SL2)\n {\n-  return lexicographical_compare(_SL1.begin(), _SL1.end(), \n-                                 _SL2.begin(), _SL2.end());\n+  return std::lexicographical_compare(_SL1.begin(), _SL1.end(), \n+\t\t\t\t      _SL2.begin(), _SL2.end());\n }\n \n template <class _Tp, class _Alloc>\n@@ -897,13 +903,17 @@ void slist<_Tp,_Alloc>::sort(_StrictWeakOrdering __comp)\n   }\n }\n \n+} // namespace __gnu_cxx\n+\n+namespace std\n+{\n // Specialization of insert_iterator so that insertions will be constant\n // time rather than linear time.\n \n template <class _Tp, class _Alloc>\n-class insert_iterator<slist<_Tp, _Alloc> > {\n+class insert_iterator<__gnu_cxx::slist<_Tp, _Alloc> > {\n protected:\n-  typedef slist<_Tp, _Alloc> _Container;\n+  typedef __gnu_cxx::slist<_Tp, _Alloc> _Container;\n   _Container* container;\n   typename _Container::iterator iter;\n public:\n@@ -932,7 +942,7 @@ public:\n   insert_iterator<_Container>& operator++(int) { return *this; }\n };\n \n-} // namespace std \n+} // namespace std\n \n #endif /* __SGI_STL_INTERNAL_SLIST_H */\n "}]}