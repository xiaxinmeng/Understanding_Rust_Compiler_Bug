{"sha": "a82ff31f392508ef56c4021a711ec08982dadf76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgyZmYzMWYzOTI1MDhlZjU2YzQwMjFhNzExZWMwODk4MmRhZGY3Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-17T20:33:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-17T20:33:54Z"}, "message": "re PR debug/48163 (ICEs for cris-elf, like gcc.c-torture/compile/calls.c gcc.c-torture/execute/complex-1.c)\n\n\tPR debug/48163\n\t* function.c (assign_parms): For data.passed_pointer parms\n\tuse MEM of data.entry_parm instead of data.entry_parm itself\n\tas DECL_INCOMING_RTL.\n\t* dwarf2out.c (rtl_for_decl_location): Use DECL_INCOMING_RTL\n\talso when passed and declared mode is the same, DECL_RTL\n\tis a MEM with pseudo as address and DECL_INCOMING_RTL is\n\ta MEM too.\n\nFrom-SVN: r171113", "tree": {"sha": "496891b63014ea8e0128f03a522aec63c8048962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/496891b63014ea8e0128f03a522aec63c8048962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a82ff31f392508ef56c4021a711ec08982dadf76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82ff31f392508ef56c4021a711ec08982dadf76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a82ff31f392508ef56c4021a711ec08982dadf76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82ff31f392508ef56c4021a711ec08982dadf76/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82ce305c0ce60d86928e6d2c7451d0401a446a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ce305c0ce60d86928e6d2c7451d0401a446a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ce305c0ce60d86928e6d2c7451d0401a446a78"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "3e4a5114572fb5d80af39981ebddcdb08ebbc9e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a82ff31f392508ef56c4021a711ec08982dadf76", "patch": "@@ -1,3 +1,14 @@\n+2011-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/48163\n+\t* function.c (assign_parms): For data.passed_pointer parms\n+\tuse MEM of data.entry_parm instead of data.entry_parm itself\n+\tas DECL_INCOMING_RTL.\n+\t* dwarf2out.c (rtl_for_decl_location): Use DECL_INCOMING_RTL\n+\talso when passed and declared mode is the same, DECL_RTL\n+\tis a MEM with pseudo as address and DECL_INCOMING_RTL is\n+\ta MEM too.\n+\n 2011-03-16  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/37273"}, {"sha": "31d9a0e99256d3178cf725f05e05d9e534403664", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a82ff31f392508ef56c4021a711ec08982dadf76", "patch": "@@ -16721,7 +16721,13 @@ rtl_for_decl_location (tree decl)\n     }\n   else if (TREE_CODE (decl) == PARM_DECL)\n     {\n-      if (rtl == NULL_RTX || is_pseudo_reg (rtl))\n+      if (rtl == NULL_RTX\n+\t  || is_pseudo_reg (rtl)\n+\t  || (MEM_P (rtl)\n+\t      && is_pseudo_reg (XEXP (rtl, 0))\n+\t      && DECL_INCOMING_RTL (decl)\n+\t      && MEM_P (DECL_INCOMING_RTL (decl))\n+\t      && GET_MODE (rtl) == GET_MODE (DECL_INCOMING_RTL (decl))))\n \t{\n \t  tree declared_type = TREE_TYPE (decl);\n \t  tree passed_type = DECL_ARG_TYPE (decl);\n@@ -16733,7 +16739,8 @@ rtl_for_decl_location (tree decl)\n \t     all cases where (rtl == NULL_RTX) just below.  */\n \t  if (dmode == pmode)\n \t    rtl = DECL_INCOMING_RTL (decl);\n-\t  else if (SCALAR_INT_MODE_P (dmode)\n+\t  else if ((rtl == NULL_RTX || is_pseudo_reg (rtl))\n+\t\t   && SCALAR_INT_MODE_P (dmode)\n \t\t   && GET_MODE_SIZE (dmode) <= GET_MODE_SIZE (pmode)\n \t\t   && DECL_INCOMING_RTL (decl))\n \t    {"}, {"sha": "64950a1a799a7b63d6f44ac52a3203c50463d7ad", "filename": "gcc/function.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82ff31f392508ef56c4021a711ec08982dadf76/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a82ff31f392508ef56c4021a711ec08982dadf76", "patch": "@@ -3403,7 +3403,15 @@ assign_parms (tree fndecl)\n \t}\n \n       /* Record permanently how this parm was passed.  */\n-      set_decl_incoming_rtl (parm, data.entry_parm, data.passed_pointer);\n+      if (data.passed_pointer)\n+\t{\n+\t  rtx incoming_rtl\n+\t    = gen_rtx_MEM (TYPE_MODE (TREE_TYPE (data.passed_type)),\n+\t\t\t   data.entry_parm);\n+\t  set_decl_incoming_rtl (parm, incoming_rtl, true);\n+\t}\n+      else\n+\tset_decl_incoming_rtl (parm, data.entry_parm, false);\n \n       /* Update info on where next arg arrives in registers.  */\n       targetm.calls.function_arg_advance (&all.args_so_far, data.promoted_mode,"}]}