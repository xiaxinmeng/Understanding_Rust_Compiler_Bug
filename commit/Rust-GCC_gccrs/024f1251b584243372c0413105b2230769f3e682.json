{"sha": "024f1251b584243372c0413105b2230769f3e682", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0ZjEyNTFiNTg0MjQzMzcyYzA0MTMxMDViMjIzMDc2OWYzZTY4Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-09-08T18:56:42Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-09-08T18:56:42Z"}, "message": "re PR c++/23691 (`mpl_::bool_<false>::value' is not a valid template argument for type `bool' because it is a non-constant expression)\n\n\tPR c++/23691\n\t* decl2.c (mark_used): Instantiate static data members initialized\n\tby constants, even in a template.\n\n\tPR c++/23691\n\t* g++.dg/template/static16.C: New test.\n\nFrom-SVN: r104041", "tree": {"sha": "794733d783728df4d410d1633a0e1e80bb479f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/794733d783728df4d410d1633a0e1e80bb479f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/024f1251b584243372c0413105b2230769f3e682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024f1251b584243372c0413105b2230769f3e682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024f1251b584243372c0413105b2230769f3e682", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024f1251b584243372c0413105b2230769f3e682/comments", "author": null, "committer": null, "parents": [{"sha": "0348d6fd857a367763b2e7c59449aa545b5c8c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0348d6fd857a367763b2e7c59449aa545b5c8c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0348d6fd857a367763b2e7c59449aa545b5c8c14"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "795b2a1cdffe2a2dfea32cde531119559fb8a750", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f1251b584243372c0413105b2230769f3e682/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f1251b584243372c0413105b2230769f3e682/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=024f1251b584243372c0413105b2230769f3e682", "patch": "@@ -1,3 +1,9 @@\n+2005-09-08  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23691\n+\t* decl2.c (mark_used): Instantiate static data members initialized\n+\tby constants, even in a template.\n+\n 2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR obj-c++/16816"}, {"sha": "a6e82f0c6c2a8d6f1a7cd6aa6a8182813d04d140", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f1251b584243372c0413105b2230769f3e682/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f1251b584243372c0413105b2230769f3e682/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=024f1251b584243372c0413105b2230769f3e682", "patch": "@@ -3217,12 +3217,38 @@ check_default_args (tree x)\n     }\n }\n \n+/* Mark DECL as \"used\" in the program.  If DECL is a specialization or\n+   implicitly declared class member, generate the actual definition.  */\n+\n void\n mark_used (tree decl)\n {\n+  HOST_WIDE_INT saved_processing_template_decl = 0;\n+\n   TREE_USED (decl) = 1;\n-  if (processing_template_decl || skip_evaluation)\n+  /* If we don't need a value, then we don't need to synthesize DECL.  */ \n+  if (skip_evaluation)\n     return;\n+  /* Normally, we can wait until instantiation-time to synthesize\n+     DECL.  However, if DECL is a static data member initialized with\n+     a constant, we need the value right now because a reference to\n+     such a data member is not value-dependent.  */\n+  if (processing_template_decl)\n+    {\n+      if (TREE_CODE (decl) == VAR_DECL\n+\t  && DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl)\n+\t  && DECL_CLASS_SCOPE_P (decl)\n+\t  && !dependent_type_p (DECL_CONTEXT (decl)))\n+\t{\n+\t  /* Pretend that we are not in a template so that the\n+\t     initializer for the static data member will be full\n+\t     simplified.  */\n+\t  saved_processing_template_decl = processing_template_decl;\n+\t  processing_template_decl = 0;\n+\t}\n+      else\n+\treturn;  \n+    }\n \n   if (TREE_CODE (decl) == FUNCTION_DECL && DECL_DECLARED_INLINE_P (decl)\n       && !TREE_ASM_WRITTEN (decl))\n@@ -3282,6 +3308,8 @@ mark_used (tree decl)\n        need.  */\n     instantiate_decl (decl, /*defer_ok=*/true, \n \t\t      /*expl_inst_class_mem_p=*/false);\n+\n+  processing_template_decl = saved_processing_template_decl;\n }\n \n #include \"gt-cp-decl2.h\""}, {"sha": "4fa4a7dd3fe2f9097f8f569df652d315ffb42a8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f1251b584243372c0413105b2230769f3e682/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f1251b584243372c0413105b2230769f3e682/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=024f1251b584243372c0413105b2230769f3e682", "patch": "@@ -1,3 +1,8 @@\n+2005-09-08  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23691\n+\t* g++.dg/template/static16.C: New test.\n+\n 2005-09-08  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR fortran/15326"}]}