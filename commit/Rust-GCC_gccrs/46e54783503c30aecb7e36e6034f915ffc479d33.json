{"sha": "46e54783503c30aecb7e36e6034f915ffc479d33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlNTQ3ODM1MDNjMzBhZWNiN2UzNmU2MDM0ZjkxNWZmYzQ3OWQzMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-08-19T19:54:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:23Z"}, "message": "[Ada] Fix bogus error on conversion from Float to 128-bit unsigned\n\ngcc/ada/\n\n\t* checks.adb (Apply_Float_Conversion_Check): Saturate the bounds\n\tof the check to those of the base type of the expression.", "tree": {"sha": "7c3ab03800ff3c5b12dd8507183b3b34ccf2cb6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c3ab03800ff3c5b12dd8507183b3b34ccf2cb6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e54783503c30aecb7e36e6034f915ffc479d33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e54783503c30aecb7e36e6034f915ffc479d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e54783503c30aecb7e36e6034f915ffc479d33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e54783503c30aecb7e36e6034f915ffc479d33/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e20130650fb46d71e0403652e4e07bc14f9775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e20130650fb46d71e0403652e4e07bc14f9775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e20130650fb46d71e0403652e4e07bc14f9775"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "355279507578f9d1be373f982d1dbbd75027cb5f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e54783503c30aecb7e36e6034f915ffc479d33/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e54783503c30aecb7e36e6034f915ffc479d33/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=46e54783503c30aecb7e36e6034f915ffc479d33", "patch": "@@ -2149,6 +2149,15 @@ package body Checks is\n          Lo_OK := (Lo >= UR_From_Uint (Ifirst));\n       end if;\n \n+      --  Saturate the lower bound to that of the expression's type, because\n+      --  we do not want to create an out-of-range value but we still need to\n+      --  do a comparison to catch NaNs.\n+\n+      if Lo < Expr_Value_R (Type_Low_Bound (Expr_Type)) then\n+         Lo := Expr_Value_R (Type_Low_Bound (Expr_Type));\n+         Lo_OK := True;\n+      end if;\n+\n       if Lo_OK then\n \n          --  Lo_Chk := (X >= Lo)\n@@ -2183,6 +2192,15 @@ package body Checks is\n          Hi_OK := (Hi <= UR_From_Uint (Ilast));\n       end if;\n \n+      --  Saturate the higher bound to that of the expression's type, because\n+      --  we do not want to create an out-of-range value but we still need to\n+      --  do a comparison to catch NaNs.\n+\n+      if Hi > Expr_Value_R (Type_High_Bound (Expr_Type)) then\n+         Hi := Expr_Value_R (Type_High_Bound (Expr_Type));\n+         Hi_OK := True;\n+      end if;\n+\n       if Hi_OK then\n \n          --  Hi_Chk := (X <= Hi)"}]}