{"sha": "436575867d862234062fee11552bdebad5fb641c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2NTc1ODY3ZDg2MjIzNDA2MmZlZTExNTUyYmRlYmFkNWZiNjQxYw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-11T21:58:46Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-11T21:58:46Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r439", "tree": {"sha": "53cf14378afeaf0b4e1bc394d2d45a930d1abe42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53cf14378afeaf0b4e1bc394d2d45a930d1abe42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/436575867d862234062fee11552bdebad5fb641c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436575867d862234062fee11552bdebad5fb641c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436575867d862234062fee11552bdebad5fb641c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436575867d862234062fee11552bdebad5fb641c/comments", "author": null, "committer": null, "parents": [{"sha": "ded40dfece4791ce91b92bb5de186b685cd230e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded40dfece4791ce91b92bb5de186b685cd230e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded40dfece4791ce91b92bb5de186b685cd230e9"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "f0a4ecc5659b2acc5bf8cd2a40d9fb551cd2796e", "filename": "gcc/config/m88k/sysv3.h", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436575867d862234062fee11552bdebad5fb641c/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436575867d862234062fee11552bdebad5fb641c/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv3.h?ref=436575867d862234062fee11552bdebad5fb641c", "patch": "@@ -36,12 +36,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    From arul@sdsu.edu.  */\n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \\\n-   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n+   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}} crtbegin.o%s\"\n \n /* Profiled libraries live in a different directory but keep the same\n    names other than that.  arul@sdsu.edu says -lg is always needed.  */\n #undef\tLIB_SPEC\n-#define LIB_SPEC \"%{p:-L/lib/libp}%{pg:%{!p:-L/lib/libp}} -lg -lc\"\n+#define LIB_SPEC \"%{p:-L/lib/libp}%{pg:%{!p:-L/lib/libp}} -lg -lc crtend.o%s\"\n \n /* Hot version of the profiler that uses r10 to pass the address of\n    the counter.  the _gcc_mcount routine knows not to screw with\n@@ -58,3 +58,45 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    too many changes to the m88k.h file.  */\n #undef\tUSE_LIBG\n #define\tUSE_LIBG\n+\n+/* Define a few machine-specific details\n+   of the implementation of constructors.\n+\n+   CTORS_SECTION_ASM_OP should be defined to concatenate\n+   the macro INIT_SECTION_ASM_OP, a newline, and a push instruction\n+   to push a word containing 0 (or some equivalent of that).\n+\n+   ASM_OUTPUT_CONSTRUCTOR should be defined\n+   to push the address of the constructor.  */\n+\n+#undef\tDO_GLOBAL_CTORS_BODY\n+#define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  func_ptr *__CTOR_LIST__ = __builtin_alloca (0), *p;\t\t\t\\\n+  for (p = __CTOR_LIST__; *p; p += 4)\t\t\t\t\t\\\n+    (*p) ();\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#undef\tCTORS_SECTION_ASM_OP\n+#define CTORS_SECTION_ASM_OP  \t\t\t\\\n+  INIT_SECTION_ASM_OP \"\\n\"\t\t\t\\\n+  \"subu\\t r31,r31,16\\n\\tst\\t r0,r31,32\\n\\t\"\t\\\n+  DATA_SECTION_ASM_OP\n+\n+/* The reason we end with DATA_SECTION_ASM_OP is to prevent the\n+   initial and final table elements (see crtstuff.c) from getting into\n+   the .init section and causing a crash.  */\n+\n+#undef\tASM_OUTPUT_CONSTRUCTOR\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n+  do {\t\t\t\t\t\t\\\n+    init_section ();\t\t\t\t\\\n+    fprintf (FILE, \"\\tor.u r13,r0,hi16(\");\t\\\n+    assemble_name (FILE, NAME);\t\t\t\\\n+    fprintf (FILE, \")\\nor\\t r13,r13,lo16(\");\t\\\n+    assemble_name (FILE, NAME);\t\t\t\\\n+    fprintf (FILE, \")\\n\\tsubu r31,r31,16\\nst\\t r13,r31,32\\n\"); \\\n+  } while (0)\n+\n+#undef\tDTORS_SECTION_ASM_OP\n+#define DTORS_SECTION_ASM_OP FINI_SECTION_ASM_OP"}]}