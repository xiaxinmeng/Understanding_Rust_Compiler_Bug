{"sha": "41e168350983a7b24d31585d1ddbcdfeea0c3075", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlMTY4MzUwOTgzYTdiMjRkMzE1ODVkMWRkYmNkZmVlYTBjMzA3NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-06-10T22:23:32Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-06-10T22:23:32Z"}, "message": "x\n\nFrom-SVN: r14225", "tree": {"sha": "fcacdeb8814a195725668368769656967b75bf54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcacdeb8814a195725668368769656967b75bf54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41e168350983a7b24d31585d1ddbcdfeea0c3075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e168350983a7b24d31585d1ddbcdfeea0c3075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e168350983a7b24d31585d1ddbcdfeea0c3075", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e168350983a7b24d31585d1ddbcdfeea0c3075/comments", "author": null, "committer": null, "parents": [{"sha": "d7d775a019c3a310bf54759560c7392bb03ea669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d775a019c3a310bf54759560c7392bb03ea669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7d775a019c3a310bf54759560c7392bb03ea669"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "e0ee61624befecfad76c7693df911f8d4d37d9e5", "filename": "gcc/collect2.c", "status": "modified", "additions": 48, "deletions": 24, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e168350983a7b24d31585d1ddbcdfeea0c3075/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e168350983a7b24d31585d1ddbcdfeea0c3075/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=41e168350983a7b24d31585d1ddbcdfeea0c3075", "patch": "@@ -493,6 +493,38 @@ savestring (input, size)\n   output[size] = 0;\n   return output;\n }\n+\n+/* Parse a reasonable subset of shell quoting syntax.  */\n+\n+static char *\n+extract_string (pp)\n+     char **pp;\n+{\n+  char *p = *pp;\n+  int backquote = 0;\n+  int inside = 0;\n+\n+  for (;;)\n+    {\n+      char c = *p;\n+      if (c == '\\0')\n+\tbreak;\n+      ++p;\n+      if (backquote)\n+\tobstack_1grow (&temporary_obstack, c);\n+      else if (! inside && c == ' ')\n+\tbreak;\n+      else if (! inside && c == '\\\\')\n+\tbackquote = 1;\n+      else if (c == '\\'')\n+\tinside = !inside;\n+      else\n+\tobstack_1grow (&temporary_obstack, c);\n+    }\n+\n+  *pp = p;\n+  return obstack_finish (&temporary_obstack);\n+}\n \f\n void\n dump_file (name)\n@@ -957,17 +989,13 @@ main (argc, argv)\n   putenv (p);\n \n   p = (char *) getenv (\"COLLECT_GCC_OPTIONS\");\n-  if (p)\n-    while (*p)\n-      {\n-\tchar *q = p;\n-\twhile (*q && *q != ' ') q++;\n-\tif (*p == '-' && p[1] == 'm')\n-\t  num_c_args++;\n-\n-\tif (*q) q++;\n-\tp = q;\n-      }\n+  while (p && *p)\n+    {\n+      char *q = extract_string (&p);\n+      if (*q == '-' && (q[1] == 'm' || q[1] == 'f'))\n+\tnum_c_args++;\n+    }\n+  obstack_free (&temporary_obstack, temporary_firstobj);\n \n   c_ptr = c_argv = (char **) xcalloc (sizeof (char *), num_c_args);\n \n@@ -1254,19 +1282,15 @@ main (argc, argv)\n \n   /* Get any options that the upper GCC wants to pass to the sub-GCC.  */\n   p = (char *) getenv (\"COLLECT_GCC_OPTIONS\");\n-  if (p)\n-    while (*p)\n-      {\n-\tchar *q = p;\n-\twhile (*q && *q != ' ') q++;\n-\tif (*p == '-' && (p[1] == 'm' || p[1] == 'f'))\n-\t  *c_ptr++ = savestring (p, q - p);\n-\tif (strncmp (p, \"-shared\", sizeof (\"shared\") - 1) == 0)\n-\t  shared_obj = 1;\n-\n-\tif (*q) q++;\n-\tp = q;\n-      }\n+  while (p && *p)\n+    {\n+      char *q = extract_string (&p);\n+      if (*q == '-' && (q[1] == 'm' || q[1] == 'f'))\n+\t*c_ptr++ = obstack_copy0 (&permanent_obstack, q, strlen (q));\n+      if (strncmp (q, \"-shared\", sizeof (\"shared\") - 1) == 0)\n+\tshared_obj = 1;\n+    }\n+  obstack_free (&temporary_obstack, temporary_firstobj);\n \n #ifdef COLLECT_EXPORT_LIST\n   /* The AIX linker will discard static constructors in object files if"}]}