{"sha": "4a5b806048bb94e2adcd34ea11ae27ca4030051f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1YjgwNjA0OGJiOTRlMmFkY2QzNGVhMTFhZTI3Y2E0MDMwMDUxZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-20T21:18:37Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-20T21:18:37Z"}, "message": "runtime, testing/internal/testdeps: fixes for cgo\n    \n    Some fixes that permit misc/cgo/test in the master gc repository to\n    pass using the current gccgo.\n    \n    Install testing/internal/testdeps.gox; it is needed by `go test`.\n    \n    Export runtime.lockedOSThread to enable calling via go:linkname; it is\n    used by misc/cgo/test.\n    \n    Loop on EAGAIN when creating a new thread; this is what the gc code\n    does, and misc/cgo/test tests that it works.\n    \n    Reviewed-on: https://go-review.googlesource.com/35479\n\nFrom-SVN: r244733", "tree": {"sha": "93038434ff16825833e5bb4fd64a08717fe4c31f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93038434ff16825833e5bb4fd64a08717fe4c31f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5b806048bb94e2adcd34ea11ae27ca4030051f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5b806048bb94e2adcd34ea11ae27ca4030051f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5b806048bb94e2adcd34ea11ae27ca4030051f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5b806048bb94e2adcd34ea11ae27ca4030051f/comments", "author": null, "committer": null, "parents": [{"sha": "a876231c40c9e3488d91bd64aa7a12c939babe51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a876231c40c9e3488d91bd64aa7a12c939babe51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a876231c40c9e3488d91bd64aa7a12c939babe51"}], "stats": {"total": 67, "additions": 60, "deletions": 7}, "files": [{"sha": "b4e7b71517553a41c7457fb2d7d2f59bdcb4c064", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5b806048bb94e2adcd34ea11ae27ca4030051f/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5b806048bb94e2adcd34ea11ae27ca4030051f/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4a5b806048bb94e2adcd34ea11ae27ca4030051f", "patch": "@@ -1,4 +1,4 @@\n-907f6e31975443993c47fa45e09cf85d0709b7e6\n+b573d4756096523d8bd4bf7b11e56383e5a2cca4\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "515b61b71e4d15f4a18f06d6614b8cfc418f527f", "filename": "libgo/Makefile.am", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=4a5b806048bb94e2adcd34ea11ae27ca4030051f", "patch": "@@ -360,6 +360,11 @@ toolexeclibgotesting_DATA = \\\n \ttesting/iotest.gox \\\n \ttesting/quick.gox\n \n+toolexeclibgotestinginternaldir = $(toolexeclibgotestingdir)/internal\n+\n+toolexeclibgotestinginternal_DATA = \\\n+\ttesting/internal/testdeps.gox\n+\n toolexeclibgotextdir = $(toolexeclibgodir)/text\n \n toolexeclibgotext_DATA = \\"}, {"sha": "d6e3eace40cee4f8635613176d47019b6eba7fd8", "filename": "libgo/Makefile.in", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=4a5b806048bb94e2adcd34ea11ae27ca4030051f", "patch": "@@ -146,6 +146,7 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgoruntimedir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgosyncdir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgotestingdir)\" \\\n+\t\"$(DESTDIR)$(toolexeclibgotestinginternaldir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgotextdir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgotexttemplatedir)\" \\\n \t\"$(DESTDIR)$(toolexeclibgounicodedir)\"\n@@ -265,7 +266,8 @@ DATA = $(noinst_DATA) $(toolexeclibgo_DATA) \\\n \t$(toolexeclibgonetrpc_DATA) $(toolexeclibgoos_DATA) \\\n \t$(toolexeclibgopath_DATA) $(toolexeclibgoregexp_DATA) \\\n \t$(toolexeclibgoruntime_DATA) $(toolexeclibgosync_DATA) \\\n-\t$(toolexeclibgotesting_DATA) $(toolexeclibgotext_DATA) \\\n+\t$(toolexeclibgotesting_DATA) \\\n+\t$(toolexeclibgotestinginternal_DATA) $(toolexeclibgotext_DATA) \\\n \t$(toolexeclibgotexttemplate_DATA) $(toolexeclibgounicode_DATA)\n RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n   distclean-recursive maintainer-clean-recursive\n@@ -740,6 +742,10 @@ toolexeclibgotesting_DATA = \\\n \ttesting/iotest.gox \\\n \ttesting/quick.gox\n \n+toolexeclibgotestinginternaldir = $(toolexeclibgotestingdir)/internal\n+toolexeclibgotestinginternal_DATA = \\\n+\ttesting/internal/testdeps.gox\n+\n toolexeclibgotextdir = $(toolexeclibgodir)/text\n toolexeclibgotext_DATA = \\\n \ttext/scanner.gox \\\n@@ -2645,6 +2651,27 @@ uninstall-toolexeclibgotestingDATA:\n \t@list='$(toolexeclibgotesting_DATA)'; test -n \"$(toolexeclibgotestingdir)\" || list=; \\\n \tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n \tdir='$(DESTDIR)$(toolexeclibgotestingdir)'; $(am__uninstall_files_from_dir)\n+install-toolexeclibgotestinginternalDATA: $(toolexeclibgotestinginternal_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(toolexeclibgotestinginternal_DATA)'; test -n \"$(toolexeclibgotestinginternaldir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(toolexeclibgotestinginternaldir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(toolexeclibgotestinginternaldir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(toolexeclibgotestinginternaldir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(toolexeclibgotestinginternaldir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-toolexeclibgotestinginternalDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclibgotestinginternal_DATA)'; test -n \"$(toolexeclibgotestinginternaldir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(toolexeclibgotestinginternaldir)'; $(am__uninstall_files_from_dir)\n install-toolexeclibgotextDATA: $(toolexeclibgotext_DATA)\n \t@$(NORMAL_INSTALL)\n \t@list='$(toolexeclibgotext_DATA)'; test -n \"$(toolexeclibgotextdir)\" || list=; \\\n@@ -2849,7 +2876,7 @@ all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) all-multi $(DATA) \\\n \t\tconfig.h\n installdirs: installdirs-recursive\n installdirs-am:\n-\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(toolexeclibgodir)\" \"$(DESTDIR)$(toolexeclibgoarchivedir)\" \"$(DESTDIR)$(toolexeclibgocompressdir)\" \"$(DESTDIR)$(toolexeclibgocontainerdir)\" \"$(DESTDIR)$(toolexeclibgocryptodir)\" \"$(DESTDIR)$(toolexeclibgocryptox509dir)\" \"$(DESTDIR)$(toolexeclibgodatabasedir)\" \"$(DESTDIR)$(toolexeclibgodatabasesqldir)\" \"$(DESTDIR)$(toolexeclibgodebugdir)\" \"$(DESTDIR)$(toolexeclibgoencodingdir)\" \"$(DESTDIR)$(toolexeclibgoexpdir)\" \"$(DESTDIR)$(toolexeclibgogodir)\" \"$(DESTDIR)$(toolexeclibgohashdir)\" \"$(DESTDIR)$(toolexeclibgohtmldir)\" \"$(DESTDIR)$(toolexeclibgoimagedir)\" \"$(DESTDIR)$(toolexeclibgoimagecolordir)\" \"$(DESTDIR)$(toolexeclibgoindexdir)\" \"$(DESTDIR)$(toolexeclibgoiodir)\" \"$(DESTDIR)$(toolexeclibgologdir)\" \"$(DESTDIR)$(toolexeclibgomathdir)\" \"$(DESTDIR)$(toolexeclibgomimedir)\" \"$(DESTDIR)$(toolexeclibgonetdir)\" \"$(DESTDIR)$(toolexeclibgonethttpdir)\" \"$(DESTDIR)$(toolexeclibgonetrpcdir)\" \"$(DESTDIR)$(toolexeclibgoosdir)\" \"$(DESTDIR)$(toolexeclibgopathdir)\" \"$(DESTDIR)$(toolexeclibgoregexpdir)\" \"$(DESTDIR)$(toolexeclibgoruntimedir)\" \"$(DESTDIR)$(toolexeclibgosyncdir)\" \"$(DESTDIR)$(toolexeclibgotestingdir)\" \"$(DESTDIR)$(toolexeclibgotextdir)\" \"$(DESTDIR)$(toolexeclibgotexttemplatedir)\" \"$(DESTDIR)$(toolexeclibgounicodedir)\"; do \\\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(toolexeclibgodir)\" \"$(DESTDIR)$(toolexeclibgoarchivedir)\" \"$(DESTDIR)$(toolexeclibgocompressdir)\" \"$(DESTDIR)$(toolexeclibgocontainerdir)\" \"$(DESTDIR)$(toolexeclibgocryptodir)\" \"$(DESTDIR)$(toolexeclibgocryptox509dir)\" \"$(DESTDIR)$(toolexeclibgodatabasedir)\" \"$(DESTDIR)$(toolexeclibgodatabasesqldir)\" \"$(DESTDIR)$(toolexeclibgodebugdir)\" \"$(DESTDIR)$(toolexeclibgoencodingdir)\" \"$(DESTDIR)$(toolexeclibgoexpdir)\" \"$(DESTDIR)$(toolexeclibgogodir)\" \"$(DESTDIR)$(toolexeclibgohashdir)\" \"$(DESTDIR)$(toolexeclibgohtmldir)\" \"$(DESTDIR)$(toolexeclibgoimagedir)\" \"$(DESTDIR)$(toolexeclibgoimagecolordir)\" \"$(DESTDIR)$(toolexeclibgoindexdir)\" \"$(DESTDIR)$(toolexeclibgoiodir)\" \"$(DESTDIR)$(toolexeclibgologdir)\" \"$(DESTDIR)$(toolexeclibgomathdir)\" \"$(DESTDIR)$(toolexeclibgomimedir)\" \"$(DESTDIR)$(toolexeclibgonetdir)\" \"$(DESTDIR)$(toolexeclibgonethttpdir)\" \"$(DESTDIR)$(toolexeclibgonetrpcdir)\" \"$(DESTDIR)$(toolexeclibgoosdir)\" \"$(DESTDIR)$(toolexeclibgopathdir)\" \"$(DESTDIR)$(toolexeclibgoregexpdir)\" \"$(DESTDIR)$(toolexeclibgoruntimedir)\" \"$(DESTDIR)$(toolexeclibgosyncdir)\" \"$(DESTDIR)$(toolexeclibgotestingdir)\" \"$(DESTDIR)$(toolexeclibgotestinginternaldir)\" \"$(DESTDIR)$(toolexeclibgotextdir)\" \"$(DESTDIR)$(toolexeclibgotexttemplatedir)\" \"$(DESTDIR)$(toolexeclibgounicodedir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n install: install-recursive\n@@ -2935,7 +2962,9 @@ install-exec-am: install-multi install-toolexeclibLIBRARIES \\\n \tinstall-toolexeclibgonetrpcDATA install-toolexeclibgoosDATA \\\n \tinstall-toolexeclibgopathDATA install-toolexeclibgoregexpDATA \\\n \tinstall-toolexeclibgoruntimeDATA install-toolexeclibgosyncDATA \\\n-\tinstall-toolexeclibgotestingDATA install-toolexeclibgotextDATA \\\n+\tinstall-toolexeclibgotestingDATA \\\n+\tinstall-toolexeclibgotestinginternalDATA \\\n+\tinstall-toolexeclibgotextDATA \\\n \tinstall-toolexeclibgotexttemplateDATA \\\n \tinstall-toolexeclibgounicodeDATA\n \n@@ -3005,6 +3034,7 @@ uninstall-am: uninstall-toolexeclibLIBRARIES \\\n \tuninstall-toolexeclibgoruntimeDATA \\\n \tuninstall-toolexeclibgosyncDATA \\\n \tuninstall-toolexeclibgotestingDATA \\\n+\tuninstall-toolexeclibgotestinginternalDATA \\\n \tuninstall-toolexeclibgotextDATA \\\n \tuninstall-toolexeclibgotexttemplateDATA \\\n \tuninstall-toolexeclibgounicodeDATA\n@@ -3046,7 +3076,9 @@ uninstall-am: uninstall-toolexeclibLIBRARIES \\\n \tinstall-toolexeclibgonetrpcDATA install-toolexeclibgoosDATA \\\n \tinstall-toolexeclibgopathDATA install-toolexeclibgoregexpDATA \\\n \tinstall-toolexeclibgoruntimeDATA install-toolexeclibgosyncDATA \\\n-\tinstall-toolexeclibgotestingDATA install-toolexeclibgotextDATA \\\n+\tinstall-toolexeclibgotestingDATA \\\n+\tinstall-toolexeclibgotestinginternalDATA \\\n+\tinstall-toolexeclibgotextDATA \\\n \tinstall-toolexeclibgotexttemplateDATA \\\n \tinstall-toolexeclibgounicodeDATA installcheck installcheck-am \\\n \tinstalldirs installdirs-am maintainer-clean \\\n@@ -3080,6 +3112,7 @@ uninstall-am: uninstall-toolexeclibLIBRARIES \\\n \tuninstall-toolexeclibgoruntimeDATA \\\n \tuninstall-toolexeclibgosyncDATA \\\n \tuninstall-toolexeclibgotestingDATA \\\n+\tuninstall-toolexeclibgotestinginternalDATA \\\n \tuninstall-toolexeclibgotextDATA \\\n \tuninstall-toolexeclibgotexttemplateDATA \\\n \tuninstall-toolexeclibgounicodeDATA"}, {"sha": "ea7f84e9b7088a2d9c99a54c910b8aea9bead4e6", "filename": "libgo/go/runtime/proc.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2Fgo%2Fruntime%2Fproc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2Fgo%2Fruntime%2Fproc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fproc.go?ref=4a5b806048bb94e2adcd34ea11ae27ca4030051f", "patch": "@@ -43,6 +43,9 @@ import (\n //go:linkname runqempty runtime.runqempty\n //go:linkname runqput runtime.runqput\n \n+// Function called by misc/cgo/test.\n+//go:linkname lockedOSThread runtime.lockedOSThread\n+\n // Functions temporarily in C that have not yet been ported.\n func allocm(*p, bool, *unsafe.Pointer, *uintptr) *m\n func malg(bool, bool, *unsafe.Pointer, *uintptr) *g"}, {"sha": "60d5bdbc6124abe342b73d6224d11b8923ee6669", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5b806048bb94e2adcd34ea11ae27ca4030051f/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=4a5b806048bb94e2adcd34ea11ae27ca4030051f", "patch": "@@ -2,6 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+#include <errno.h>\n #include <limits.h>\n #include <signal.h>\n #include <stdlib.h>\n@@ -216,6 +217,7 @@ runtime_newosproc(M *mp)\n \tpthread_attr_t attr;\n \tsigset_t clear, old;\n \tpthread_t tid;\n+\tint tries;\n \tint ret;\n \n \tif(pthread_attr_init(&attr) != 0)\n@@ -234,11 +236,21 @@ runtime_newosproc(M *mp)\n \n \tsigemptyset(&old);\n \tpthread_sigmask(SIG_BLOCK, &clear, &old);\n-\tret = pthread_create(&tid, &attr, runtime_mstart, mp);\n+\n+\tfor (tries = 0; tries < 20; tries++) {\n+\t\tret = pthread_create(&tid, &attr, runtime_mstart, mp);\n+\t\tif (ret != EAGAIN) {\n+\t\t\tbreak;\n+\t\t}\n+\t\truntime_usleep((tries + 1) * 1000); // Milliseconds.\n+\t}\n+\n \tpthread_sigmask(SIG_SETMASK, &old, nil);\n \n-\tif (ret != 0)\n+\tif (ret != 0) {\n+\t\truntime_printf(\"pthread_create failed: %d\\n\", ret);\n \t\truntime_throw(\"pthread_create\");\n+\t}\n }\n \n // First function run by a new goroutine.  This replaces gogocall."}]}