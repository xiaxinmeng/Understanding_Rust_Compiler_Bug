{"sha": "2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkNjViMGU5MTMxMmE5ZjJmYWRkNGFiZDllYjlkOThiMDg1OTIwYw==", "commit": {"author": {"name": "Stephen Clarke", "email": "stephen.clarke@superh.com", "date": "2002-07-09T22:04:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-07-09T22:04:34Z"}, "message": "sh.c (sh_adjust_cost): Special handling of SHMEDIA code.\n\nTue Jul  9 22:37:44 2002  Stephen Clarke <stephen.clarke@superh.com>\n                          J\"orn Rennecke <joern.rennecke@superh.com>\n\n\t* sh.c (sh_adjust_cost): Special handling of SHMEDIA code.\n\t* sh.md (attribute issues): Replace with:\n\t(attribute pipe_model).  All users changed.\n\t(attribute type): Change pt / ptabs to pt_media / ptabs_media.\n\tAll users changed.\n\t(function units sh5issue, sh5fds): New.\n\t(attribute is_mac_media): New.\n\t(adddi3_media, subdi3_media, divsi3_i1_media, anddi3): Add type.\n\t(andcdi3, iordi3, xordi3, ashldi3_media, lshrdi3_media): Likewise.\n\t(ashrdi3_media, negdi_media, extendsidi2, movqi_media): Likewise.\n\t(movhi_media, shori_media, movv2sf_i, jump_media): Likewise.\n\t(call_media, call_value_media, sibcall_media): Likewise.\n\t(casesi_jump_media, casesi_shift_media, casesi_load_media): Likewise.\n\t(return_media_i, addsf3_media, subsf3_media, mulsf3_media): Likewise.\n\t(mac_media, divsf3_media, floatdisf2, floatsisf2_media): Likewise.\n\t(fix_truncsfdi2, fix_truncsfsi2_media, cmpeqsf_media): Likewise.\n\t(cmpgtsf_media, cmpgesf_media, cmpunsf_media, negsf2_media): Likewise.\n\t(sqrtsf2_media, abssf2_media, adddf3_media, subdf3_media): Likewise.\n\t(muldf3_media, divdf3_media, floatdidf2, floatsidf2_media): Likewise.\n\t(fix_truncdfdi2, fix_truncdfsi2_media, cmpeqdf_media): Likewise.\n\t(cmpgtdf_media, cmpgedf_media,cmpundf_media, negdf2_media): Likewise.\n\t(sqrtdf2_media, absdf2_media, extendsfdf2_media): Likewise.\n\t(truncdfsf2_media): Likewise.\n\t(movsi_media, movsi_media_nofpu, movdi_media): Use new types.\n\t(movdi_media_nofpui, movdf_media, movdf_media_nofpu): Likewise.\n\nCo-Authored-By: J\"orn Rennecke <joern.rennecke@superh.com>\n\nFrom-SVN: r55346", "tree": {"sha": "cbbd8e6bb8493b3077f5ad782d53ef3c92229d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbbd8e6bb8493b3077f5ad782d53ef3c92229d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/comments", "author": null, "committer": null, "parents": [{"sha": "b6d339832674699119d46cf5c68433be19c4e1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d339832674699119d46cf5c68433be19c4e1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d339832674699119d46cf5c68433be19c4e1bb"}], "stats": {"total": 401, "additions": 292, "deletions": 109}, "files": [{"sha": "f54c49402a81d17871c420d788574a0941347337", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "patch": "@@ -1,3 +1,32 @@\n+Tue Jul  9 22:37:44 2002  Stephen Clarke <stephen.clarke@superh.com>\n+                          J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.c (sh_adjust_cost): Special handling of SHMEDIA code.\n+\t* sh.md (attribute issues): Replace with:\n+\t(attribute pipe_model).  All users changed.\n+\t(attribute type): Change pt / ptabs to pt_media / ptabs_media.\n+\tAll users changed.\n+\t(function units sh5issue, sh5fds): New.\n+\t(attribute is_mac_media): New.\n+\t(adddi3_media, subdi3_media, divsi3_i1_media, anddi3): Add type.\n+\t(andcdi3, iordi3, xordi3, ashldi3_media, lshrdi3_media): Likewise.\n+\t(ashrdi3_media, negdi_media, extendsidi2, movqi_media): Likewise.\n+\t(movhi_media, shori_media, movv2sf_i, jump_media): Likewise.\n+\t(call_media, call_value_media, sibcall_media): Likewise.\n+\t(casesi_jump_media, casesi_shift_media, casesi_load_media): Likewise.\n+\t(return_media_i, addsf3_media, subsf3_media, mulsf3_media): Likewise.\n+\t(mac_media, divsf3_media, floatdisf2, floatsisf2_media): Likewise.\n+\t(fix_truncsfdi2, fix_truncsfsi2_media, cmpeqsf_media): Likewise.\n+\t(cmpgtsf_media, cmpgesf_media, cmpunsf_media, negsf2_media): Likewise.\n+\t(sqrtsf2_media, abssf2_media, adddf3_media, subdf3_media): Likewise.\n+\t(muldf3_media, divdf3_media, floatdidf2, floatsidf2_media): Likewise.\n+\t(fix_truncdfdi2, fix_truncdfsi2_media, cmpeqdf_media): Likewise.\n+\t(cmpgtdf_media, cmpgedf_media,cmpundf_media, negdf2_media): Likewise.\n+\t(sqrtdf2_media, absdf2_media, extendsfdf2_media): Likewise.\n+\t(truncdfsf2_media): Likewise.\n+\t(movsi_media, movsi_media_nofpu, movdi_media): Use new types.\n+\t(movdi_media_nofpui, movdf_media, movdf_media_nofpu): Likewise.\n+\n Tue Jul  9 21:39:50 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.h (PREDICATE_CODES): Add general_extend_operand and inqhi_operand."}, {"sha": "a7eabba3090fb8a012e87629d18b68654e766456", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "patch": "@@ -6985,7 +6985,18 @@ sh_adjust_cost (insn, link, dep_insn, cost)\n {\n   rtx reg;\n \n-  if (GET_CODE(insn) == CALL_INSN)\n+  if (TARGET_SHMEDIA)\n+    {\n+      /* On SHmedia, if the dependence is an anti-dependence or\n+         output-dependence, there is no cost. */              \n+      if (REG_NOTE_KIND (link) != 0)\n+        cost = 0;\n+\n+      if (get_attr_is_mac_media (insn)\n+          && get_attr_is_mac_media (dep_insn))\n+        cost = 1;\n+    }\n+  else if (GET_CODE(insn) == CALL_INSN)\n     {\n       /* The only input for a call that is timing-critical is the\n \t function's address.  */"}, {"sha": "82c1fdc93758abb8ed26d753f46e3a041081b94e", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 251, "deletions": 108, "changes": 359, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad65b0e91312a9f2fadd4abd9eb9d98b085920c/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=2ad65b0e91312a9f2fadd4abd9eb9d98b085920c", "patch": "@@ -168,9 +168,12 @@\n (define_attr \"fmovd\" \"yes,no\"\n   (const (if_then_else (symbol_ref \"TARGET_FMOVD\")\n \t\t       (const_string \"yes\") (const_string \"no\"))))\n-;; issues/clock\n-(define_attr \"issues\" \"1,2\"\n-  (const (if_then_else (symbol_ref \"TARGET_SUPERSCALAR\") (const_string \"2\") (const_string \"1\"))))\n+;; pipeline model\n+(define_attr \"pipe_model\" \"sh1,sh4,sh5media\"\n+  (const\n+   (cond [(symbol_ref \"TARGET_SHMEDIA\") (const_string \"sh5media\")\n+          (symbol_ref \"TARGET_SUPERSCALAR\") (const_string \"sh4\")]\n+         (const_string \"sh1\"))))\n \n ;; cbranch\tconditional branch instructions\n ;; jump\t\tunconditional jumps\n@@ -200,10 +203,37 @@\n ;; gp_fpul\tmove between general purpose register and fpul\n ;; dfp_arith, dfp_cmp,dfp_conv\n ;; dfdiv\tdouble precision floating point divide (or square root)\n+;; arith_media\tSHmedia arithmetic, logical, and shift instructions\n+;; cbranch_media SHmedia conditional branch instructions\n+;; cmp_media\tSHmedia compare instructions\n+;; dfdiv_media\tSHmedia double precision divide and square root\n+;; dfmul_media\tSHmedia double precision multiply instruction\n+;; dfparith_media SHmedia double precision floating point arithmetic\n+;; dfpconv_media SHmedia double precision floating point conversions\n+;; dmpy_media\tSHmedia longword multiply\n+;; fcmp_media\tSHmedia floating point compare instructions\n+;; fdiv_media\tSHmedia single precision divide and square root\n+;; fload_media\tSHmedia floating point register load instructions\n+;; fmove_media\tSHmedia floating point register moves (inc. fabs and fneg)\n+;; fparith_media SHmedia single precision floating point arithmetic\n+;; fpconv_media\tSHmedia single precision floating point conversions\n+;; fstore_media\tSHmedia floating point register store instructions\n+;; gettr_media\tSHmedia gettr instruction\n+;; invalidate_line_media SHmedia invaldiate_line sequence\n+;; jump_media\tSHmedia unconditional branch instructions\n+;; load_media\tSHmedia general register load instructions\n+;; pt_media\tSHmedia pt instruction (expanded by assembler)\n+;; ptabs_media\tSHmedia ptabs instruction\n+;; store_media\tSHmedia general register store instructions\n+;; mcmp_media\tSHmedia multimedia compare, absolute, saturating ops\n+;; mac_media\tSHmedia mac-style fixed point operations\n+;; d2mpy_media\tSHmedia: two 32 bit integer multiplies\n+;; atrans\tSHmedia approximate transcendential functions\n+;; ustore_media\tSHmedia unaligned stores\n ;; nil\t\tno-op move, will be deleted.\n \n (define_attr \"type\"\n- \"cbranch,jump,jump_ind,arith,arith3,arith3b,dyn_shift,load,load_si,store,move,fmove,smpy,dmpy,return,pload,prset,pstore,prget,pcload,pcload_si,rte,sfunc,call,fp,fdiv,dfp_arith,dfp_cmp,dfp_conv,dfdiv,gp_fpul,arith_media,cbranch_media,cmp_media,dfdiv_media,dfmul_media,dfparith_media,dfpconv_media,dmpy_media,fcmp_media,fdiv_media,fload_media,fmove_media,fparith_media,fpconv_media,fstore_media,gettr_media,invalidate_line_media,jump_media,load_media,pt,ptabs,store_media,mcmp_media,mac_media,d2mpy_media,atrans_media,ustore_media,nil,other\"\n+ \"cbranch,jump,jump_ind,arith,arith3,arith3b,dyn_shift,load,load_si,store,move,fmove,smpy,dmpy,return,pload,prset,pstore,prget,pcload,pcload_si,rte,sfunc,call,fp,fdiv,dfp_arith,dfp_cmp,dfp_conv,dfdiv,gp_fpul,arith_media,cbranch_media,cmp_media,dfdiv_media,dfmul_media,dfparith_media,dfpconv_media,dmpy_media,fcmp_media,fdiv_media,fload_media,fmove_media,fparith_media,fpconv_media,fstore_media,gettr_media,invalidate_line_media,jump_media,load_media,pt_media,ptabs_media,store_media,mcmp_media,mac_media,d2mpy_media,atrans_media,ustore_media,nil,other\"\n   (const_string \"other\"))\n \n ;; We define a new attribute namely \"insn_class\".We use\n@@ -359,7 +389,7 @@\n \t\t(ne (symbol_ref (\"flag_pic\")) (const_int 0))\n \t\t(const_int 22)\n \t\t] (const_int 14))\n-\t (eq_attr \"type\" \"pt\")\n+\t (eq_attr \"type\" \"pt_media\")\n \t (if_then_else (ne (symbol_ref \"TARGET_SHMEDIA64\") (const_int 0))\n \t\t       (const_int 20) (const_int 12))\n \t ] (if_then_else (ne (symbol_ref \"TARGET_SHMEDIA\") (const_int 0))\n@@ -386,33 +416,33 @@\n ;; We only do this for SImode loads of general registers, to make the work\n ;; for ADJUST_COST easier.\n (define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"issues\" \"1\")\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n        (eq_attr \"type\" \"load_si,pcload_si\"))\n   3 2)\n (define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"issues\" \"1\")\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n        (eq_attr \"type\" \"load,pcload,pload,store,pstore\"))\n   2 2)\n \n (define_function_unit \"int\"    1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"arith3,arith3b\")) 3 3)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"arith3,arith3b\")) 3 3)\n \n (define_function_unit \"int\"    1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"dyn_shift\")) 2 2)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"dyn_shift\")) 2 2)\n \n (define_function_unit \"int\"    1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"!arith3,arith3b,dyn_shift\")) 1 1)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"!arith3,arith3b,dyn_shift\")) 1 1)\n \n ;; ??? These are approximations.\n (define_function_unit \"mpy\"    1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"smpy\")) 2 2)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"smpy\")) 2 2)\n (define_function_unit \"mpy\"    1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"dmpy\")) 3 3)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"dmpy\")) 3 3)\n \n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"fp,fmove\")) 2 1)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"fp,fmove\")) 2 1)\n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"1\") (eq_attr \"type\" \"fdiv\")) 13 12)\n+  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"fdiv\")) 13 12)\n \n \n ;; SH4 scheduling\n@@ -430,11 +460,11 @@\n ;; We use an 'issue' function unit to do that, and a cost factor of 10.\n \n (define_function_unit \"issue\" 2 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"!nil,arith3\"))\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"!nil,arith3\"))\n   10 10)\n \n (define_function_unit \"issue\" 2 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"arith3\"))\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"arith3\"))\n   30 30)\n \n ;; There is no point in providing exact scheduling information about branches,\n@@ -446,21 +476,21 @@\n ;; default is dual-issue, but can't be paired with an insn that\n ;; uses multiple function units.\n (define_function_unit \"single_issue\"     1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"!smpy,dmpy,pload,pstore,dfp_cmp,gp_fpul,call,sfunc,arith3,arith3b\"))\n   1 10\n   [(eq_attr \"type\" \"smpy,dmpy,pload,pstore,dfp_cmp,gp_fpul\")])\n \n (define_function_unit \"single_issue\"     1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"smpy,dmpy,pload,pstore,dfp_cmp,gp_fpul\"))\n   10 10\n   [(const_int 1)])\n \n ;; arith3 insns are always pairable at the start, but not inecessarily at\n ;; the end; however, there doesn't seem to be a way to express that.\n (define_function_unit \"single_issue\"     1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"arith3\"))\n   30 20\n   [(const_int 1)])\n@@ -470,14 +500,14 @@\n ;; When the following branch is immediately adjacent, we can redirect the\n ;; internal branch, which is likly to be a larger win.\n (define_function_unit \"single_issue\"     1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"arith3b\"))\n   20 20\n   [(const_int 1)])\n \n ;; calls introduce a longisch delay that is likely to flush the pipelines.\n (define_function_unit \"single_issue\"     1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"call,sfunc\"))\n   160 160\n   [(eq_attr \"type\" \"!call\") (eq_attr \"type\" \"call\")])\n@@ -505,37 +535,37 @@\n ;; load_store, load and load_si.\n \n (define_function_unit \"load_si\" 1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"load_si,pcload_si\")) 30 10)\n (define_function_unit \"load\" 1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"load,pcload,pload\")) 20 10)\n (define_function_unit \"load_store\" 1 0\n-  (and (eq_attr \"issues\" \"2\")\n+  (and (eq_attr \"pipe_model\" \"sh4\")\n        (eq_attr \"type\" \"load_si,pcload_si,load,pcload,pload,store,pstore,fmove\"))\n   10 10)\n \n (define_function_unit \"int\"    1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"arith,dyn_shift\")) 10 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"arith,dyn_shift\")) 10 10)\n \n ;; Again, we have to pretend a lower latency for the \"int\" unit to avoid a\n ;; spurious FIFO constraint; the multiply instructions use the \"int\"\n ;; unit actually only for two cycles.\n (define_function_unit \"int\"    1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"smpy,dmpy\")) 20 20)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"smpy,dmpy\")) 20 20)\n \n ;; We use a fictous \"mpy\" unit to express the actual latency.\n (define_function_unit \"mpy\"    1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"smpy,dmpy\")) 40 20)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"smpy,dmpy\")) 40 20)\n \n ;; Again, we have to pretend a lower latency for the \"int\" unit to avoid a\n ;; spurious FIFO constraint.\n (define_function_unit \"int\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"gp_fpul\")) 10 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"gp_fpul\")) 10 10)\n \n ;; We use a fictous \"gp_fpul\" unit to express the actual latency.\n (define_function_unit \"gp_fpul\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"gp_fpul\")) 20 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"gp_fpul\")) 20 10)\n \n ;; ??? multiply uses the floating point unit, but with a two cycle delay.\n ;; Thus, a simple single-precision fp operation could finish if issued in\n@@ -550,47 +580,100 @@\n ;; However, simple double-precision operations always conflict.\n \n (define_function_unit \"fp\"    1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"smpy,dmpy\")) 40 40\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"smpy,dmpy\")) 40 40\n   [(eq_attr \"type\" \"dfp_cmp,dfp_conv,dfp_arith\")])\n \n ;; The \"fp\" unit is for pipeline stages F1 and F2.\n \n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"fp\")) 30 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"fp\")) 30 10)\n \n ;; Again, we have to pretend a lower latency for the \"fp\" unit to avoid a\n ;; spurious FIFO constraint; the bulk of the fdiv type insns executes in\n ;; the F3 stage.\n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"fdiv\")) 30 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"fdiv\")) 30 10)\n \n ;; The \"fdiv\" function unit models the aggregate effect of the F1, F2 and F3\n ;; pipeline stages on the pipelining of fdiv/fsqrt insns.\n ;; We also use it to give the actual latency here.\n ;; fsqrt is actually one cycle faster than fdiv (and the value used here),\n ;; but that will hardly matter in practice for scheduling.\n (define_function_unit \"fdiv\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"fdiv\")) 120 100)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"fdiv\")) 120 100)\n \n ;; There is again a late use of the \"fp\" unit by [d]fdiv type insns\n ;; that we can't express.\n \n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"dfp_cmp,dfp_conv\")) 40 20)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"dfp_cmp,dfp_conv\")) 40 20)\n \n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"dfp_arith\")) 80 60)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"dfp_arith\")) 80 60)\n \n (define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"dfdiv\")) 230 10)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"dfdiv\")) 230 10)\n \n (define_function_unit \"fdiv\"     1 0\n-  (and (eq_attr \"issues\" \"2\") (eq_attr \"type\" \"dfdiv\")) 230 210)\n-\n-;; This should be enough for pt insns to be moved 5 insns ahead of\n-;; corresponding branches.\n-(define_function_unit \"pt\" 1 0\n-  (eq_attr \"type\" \"pt,ptabs\") 10 2)\n+  (and (eq_attr \"pipe_model\" \"sh4\") (eq_attr \"type\" \"dfdiv\")) 230 210)\n+\n+;; SH-5 SHmedia scheduling\n+;; When executing SHmedia code, the SH-5 is a fairly straightforward\n+;; single-issue machine.  It has four pipelines, the branch unit (br),\n+;; the integer and multimedia unit (imu), the load/store unit (lsu), and\n+;; the floating point unit (fpu).\n+;; Here model the instructions with a latency greater than one cycle.\n+\n+;; Every instruction on SH-5 occupies the issue resource for at least one\n+;; cycle.\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"!pt_media,ptabs_media,invalidate_line_media,dmpy_media,load_media,fload_media,fcmp_media,fmove_media,fparith_media,dfparith_media,fpconv_media,dfpconv_media,dfmul_media,store_media,fstore_media,mcmp_media,mac_media,d2mpy_media,atrans_media,ustore_media\")) 1 1)\n+\n+;; Specify the various types of instruction which have latency > 1\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"mcmp_media\")) 2 1)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"dmpy_media,load_media,fcmp_media,mac_media\")) 3 1)\n+;; but see sh_adjust_cost for mac_media exception.\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"fload_media,fmove_media\")) 4 1)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"d2mpy_media\")) 4 2)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"pt_media,ptabs_media\")) 5 1)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"fparith_media,dfparith_media,fpconv_media,dfpconv_media\")) 6 1)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\")\n+       (eq_attr \"type\" \"invalidate_line_media\")) 7 7)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\") (eq_attr \"type\" \"dfmul_media\")) 9 4)\n+\n+(define_function_unit \"sh5issue\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\") (eq_attr \"type\" \"atrans_media\")) 10 5)\n+\n+;; Floating-point divide and square-root occupy an additional resource,\n+;; which is not internally pipelined.  However, other instructions\n+;; can continue to issue.\n+(define_function_unit \"sh5fds\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\") (eq_attr \"type\" \"fdiv_media\"))  19 19)\n+\n+(define_function_unit \"sh5fds\" 1 0\n+  (and (eq_attr \"pipe_model\" \"sh5media\") (eq_attr \"type\" \"dfdiv_media\")) 35 35)\n \n ; Definitions for filling branch delay slots.\n \n@@ -616,6 +699,9 @@\n (define_attr \"is_sfunc\" \"\"\n   (if_then_else (eq_attr \"type\" \"sfunc\") (const_int 1) (const_int 0)))\n \n+(define_attr \"is_mac_media\" \"\"\n+  (if_then_else (eq_attr \"type\" \"mac_media\") (const_int 1) (const_int 0)))\n+\n (define_delay\n   (eq_attr \"needs_delay_slot\" \"yes\")\n   [(eq_attr \"in_delay_slot\" \"yes\") (nil) (nil)])\n@@ -1035,7 +1121,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tadd\t%1, %2, %0\n-\taddi\t%1, %2, %0\")\n+\taddi\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"adddi3z_media\"\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n@@ -1154,7 +1241,8 @@\n \t(minus:DI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"rN\")\n \t\t  (match_operand:DI 2 \"arith_reg_operand\" \"r\")))]\n   \"TARGET_SHMEDIA\"\n-  \"sub\t%N1, %2, %0\")\n+  \"sub\t%N1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"subdi3_compact\"\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n@@ -1484,7 +1572,8 @@\n    (clobber (reg:DI TR2_REG))\n    (use (match_operand:DI 1 \"target_operand\" \"b\"))]\n   \"TARGET_SHMEDIA && ! TARGET_SHMEDIA_FPU\"\n-  \"blink\t%1, r18\")\n+  \"blink\t%1, r18\"\n+  [(set_attr \"type\" \"sfunc\")])\n \n (define_expand \"divsi3_i4_media\"\n   [(set (match_dup 3) (float:DF (match_operand:SI 1 \"register_operand\" \"r\")))\n@@ -2025,14 +2114,16 @@\n   else\n     emit_insn (gen_mshfhi_l_di (operands[0], CONST0_RTX (DImode), operands[1]));\n   DONE;\n-}\")\n+}\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"andcdi3\"\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n \t(and:DI (match_operand:DI 1 \"arith_reg_operand\" \"r\")\n \t\t(not:DI (match_operand:DI 2 \"arith_reg_operand\" \"r\"))))]\n   \"TARGET_SHMEDIA\"\n-  \"andc\t%1,%2,%0\")\n+  \"andc\t%1,%2,%0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"iorsi3\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,z\")\n@@ -2050,7 +2141,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tor\t%1, %2, %0\n-\tori\t%1, %2, %0\")\n+\tori\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"xorsi3\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=z,r\")\n@@ -2068,7 +2160,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \txor\t%1, %2, %0\n-\txori\t%1, %2, %0\")\n+\txori\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \f\n ;; -------------------------------------------------------------------------\n ;; Shifts and rotates\n@@ -2604,7 +2697,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tshlld\t%1, %2, %0\n-\tshlli\t%1, %2, %0\")\n+\tshlli\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_expand \"ashldi3\"\n   [(parallel [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n@@ -2644,7 +2738,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tshlrd\t%1, %2, %0\n-\tshlri\t%1, %2, %0\")\n+\tshlri\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_expand \"lshrdi3\"\n   [(parallel [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n@@ -2684,7 +2779,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tshard\t%1, %2, %0\n-\tshari\t%1, %2, %0\")\n+\tshari\t%1, %2, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_expand \"ashrdi3\"\n   [(parallel [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n@@ -2943,7 +3039,8 @@\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n \t(neg:DI (match_operand:DI 1 \"arith_reg_operand\" \"r\")))]\n   \"TARGET_SHMEDIA\"\n-  \"sub\tr63, %1, %0\")\n+  \"sub\tr63, %1, %0\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_expand \"negdi2\"\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n@@ -3131,7 +3228,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tadd.l\t%1, r63, %0\n-\tld%M1.l\t%m1, %0\")\n+\tld%M1.l\t%m1, %0\"\n+  [(set_attr \"type\" \"arith_media,load_media\")])\n \n (define_insn \"extendhidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -3478,7 +3576,7 @@\n \tptabs\t%1, %0\n \tgettr\t%1, %0\n \tpt\t%1, %0\"\n-  [(set_attr \"type\"   \"move,move,*,load,store,load,store,move,move,move,ptabs,move,pt\")\n+  [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,fload_media,fstore_media,fload_media,fpconv_media,fmove_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,8,4,4,4,4,4,4,4,4,4,12\")])\n \n (define_insn \"*movsi_media_nofpu\"\n@@ -3496,7 +3594,7 @@\n \tptabs\t%1, %0\n \tgettr\t%1, %0\n \tpt\t%1, %0\"\n-  [(set_attr \"type\"   \"move,move,*,load,store,ptabs,move,pt\")\n+  [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,8,4,4,4,4,12\")])\n \n (define_split\n@@ -3608,7 +3706,8 @@\n \tadd.l\t%1, r63, %0\n \tmovi\t%1, %0\n \tld%M1.b\t%m1, %0\n-\tst%M0.b\t%m0, %1\")\n+\tst%M0.b\t%m0, %1\"\n+  [(set_attr \"type\" \"arith_media,arith_media,load_media,store_media\")])\n \n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n@@ -3660,7 +3759,8 @@\n \tmovi\t%1, %0\n \t#\n \tld%M1.w\t%m1, %0\n-\tst%M0.w\t%m0, %1\")\n+\tst%M0.w\t%m0, %1\"\n+  [(set_attr \"type\" \"arith_media,arith_media,*,load_media,store_media\")])\n \n (define_split\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n@@ -3774,7 +3874,7 @@\n \tptabs\t%1, %0\n \tgettr\t%1, %0\n \tpt\t%1, %0\"\n-  [(set_attr \"type\"   \"move,move,*,load,store,load,store,move,move,move,ptabs,move,pt\")\n+  [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,fload_media,fstore_media,fload_media,dfpconv_media,fmove_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,16,4,4,4,4,4,4,4,4,4,*\")])\n \n (define_insn \"*movdi_media_nofpu\"\n@@ -3792,7 +3892,7 @@\n \tptabs\t%1, %0\n \tgettr\t%1, %0\n \tpt\t%1, %0\"\n-  [(set_attr \"type\"   \"move,move,*,load,store,ptabs,move,pt\")\n+  [(set_attr \"type\"   \"arith_media,arith_media,*,load_media,store_media,ptabs_media,gettr_media,pt_media\")\n    (set_attr \"length\" \"4,4,16,4,4,4,4,*\")])\n \n (define_split\n@@ -4051,7 +4151,8 @@\n   \"TARGET_SHMEDIA\"\n   \"@\n \tshori\t%u2, %0\n-\t#\")\n+\t#\"\n+  [(set_attr \"type\" \"arith_media,*\")])\n \n (define_expand \"movdi\"\n   [(set (match_operand:DI 0 \"general_movdst_operand\" \"\")\n@@ -4075,7 +4176,7 @@\n \tfst%M0.d\t%m0, %1\n \tld%M1.q\t%m1, %0\n \tst%M0.q\t%m0, %1\"\n-  [(set_attr \"type\" \"move,move,move,move,*,load,store,load,store\")])\n+  [(set_attr \"type\" \"fmove_media,fload_media,dfpconv_media,arith_media,*,fload_media,fstore_media,load_media,store_media\")])\n \n (define_insn \"movdf_media_nofpu\"\n   [(set (match_operand:DF 0 \"general_movdst_operand\" \"=r,r,r,m\")\n@@ -4088,7 +4189,7 @@\n \t#\n \tld%M1.q\t%m1, %0\n \tst%M0.q\t%m0, %1\"\n-  [(set_attr \"type\" \"move,*,load,store\")])\n+  [(set_attr \"type\" \"arith_media,*,load_media,store_media\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4597,7 +4698,8 @@\n   \"@\n \t#\n \tfld%M1.p\t%m1, %0\n-\tfst%M0.p\t%m0, %1\")\n+\tfst%M0.p\t%m0, %1\"\n+  [(set_attr \"type\" \"*,fload_media,fstore_media\")])\n \n (define_split\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=f\")\n@@ -5386,7 +5488,8 @@\n   [(set (pc)\n \t(match_operand:DI 0 \"target_operand\" \"b\"))]\n   \"TARGET_SHMEDIA\"\n-  \"blink\t%0, r63\")\n+  \"blink\t%0, r63\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n (define_expand \"jump\"\n   [(set (pc)\n@@ -5511,7 +5614,8 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:DI PR_MEDIA_REG))]\n   \"TARGET_SHMEDIA\"\n-  \"blink\t%0, r18\")\n+  \"blink\t%0, r18\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n (define_insn \"call_valuei\"\n   [(set (match_operand 0 \"\" \"=rf\")\n@@ -5614,7 +5718,8 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:DI PR_MEDIA_REG))]\n   \"TARGET_SHMEDIA\"\n-  \"blink\t%1, r18\")\n+  \"blink\t%1, r18\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n (define_expand \"call\"\n   [(parallel [(call (mem:SI (match_operand 0 \"arith_reg_operand\" \"\"))\n@@ -6044,7 +6149,8 @@\n \t (match_operand 1 \"\" \"\"))\n    (return)]\n   \"TARGET_SHMEDIA\"\n-  \"blink\t%0, r63\")\n+  \"blink\t%0, r63\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n (define_expand \"sibcall\"\n   [(parallel\n@@ -6389,7 +6495,8 @@\n   [(set (pc) (match_operand:DI 0 \"target_reg_operand\" \"b\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_SHMEDIA\"\n-  \"blink\t%0, r63\")\n+  \"blink\t%0, r63\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n ;; Call subroutine returning any type.\n ;; ??? This probably doesn't work.\n@@ -6526,7 +6633,7 @@\n   \"TARGET_SHMEDIA && flag_pic\n    && EXTRA_CONSTRAINT_T (operands[1])\"\n   \"pt\t%1, %0\"\n-  [(set_attr \"type\" \"pt\")\n+  [(set_attr \"type\" \"pt_media\")\n    (set_attr \"length\" \"*\")])\n \n (define_insn \"*ptb\"\n@@ -6536,7 +6643,7 @@\n   \"TARGET_SHMEDIA && flag_pic\n    && EXTRA_CONSTRAINT_T (operands[1])\"\n   \"ptb/u\tdatalabel %1, %0\"\n-  [(set_attr \"type\" \"pt\")\n+  [(set_attr \"type\" \"pt_media\")\n    (set_attr \"length\" \"*\")])\n \n (define_insn \"ptrel\"\n@@ -6546,7 +6653,7 @@\n    (match_operand:DI 2 \"\" \"\")]\n   \"TARGET_SHMEDIA\"\n   \"%O2: ptrel/u\t%1, %0\"\n-  [(set_attr \"type\" \"ptabs\")])\n+  [(set_attr \"type\" \"ptabs_media\")])\n \n (define_expand \"builtin_setjmp_receiver\"\n   [(match_operand 0 \"\" \"\")]\n@@ -6882,7 +6989,8 @@\n     default:\n       abort ();\n     }\n-}\")\n+}\"\n+  [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"casesi_load_media\"\n   [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n@@ -6914,7 +7022,8 @@\n     default:\n       abort ();\n     }\n-}\")\n+}\"\n+  [(set_attr \"type\" \"load_media\")])\n \n (define_expand \"return\"\n   [(return)]\n@@ -6975,7 +7084,8 @@\n (define_insn \"return_media_i\"\n   [(parallel [(return) (use (match_operand:DI 0 \"target_reg_operand\" \"k\"))])]\n   \"TARGET_SHMEDIA && reload_completed\"\n-  \"blink\t%0, r63\")\n+  \"blink\t%0, r63\"\n+  [(set_attr \"type\" \"jump_media\")])\n \n (define_expand \"return_media\"\n   [(return)]\n@@ -7928,7 +8038,8 @@\n \t(plus:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%f\")\n \t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fadd.s\t%1, %2, %0\")\n+  \"fadd.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"addsf3_i\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n@@ -7959,7 +8070,8 @@\n \t(minus:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t  (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fsub.s\t%1, %2, %0\")\n+  \"fsub.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"subsf3_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -7996,7 +8108,8 @@\n \t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%f\")\n \t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fmul.s\t%1, %2, %0\")\n+  \"fmul.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"mulsf3_i4\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8022,7 +8135,8 @@\n \t\t\t  (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\"))\n \t\t (match_operand:SF 3 \"fp_arith_reg_operand\" \"0\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fmac.s %1, %2, %0\")\n+  \"fmac.s %1, %2, %0\"\n+  [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"*macsf3\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8054,7 +8168,8 @@\n \t(div:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t(match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fdiv.s\t%1, %2, %0\")\n+  \"fdiv.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fdiv_media\")])\n \n (define_insn \"divsf3_i\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n@@ -8070,7 +8185,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float:SF (match_operand:DI 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"float.qs %1, %0\")\n+  \"float.qs %1, %0\"\n+  [(set_attr \"type\" \"fpconv_media\")])\n \n (define_expand \"floatsisf2\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n@@ -8089,7 +8205,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"float.ls\t%1, %0\")\n+  \"float.ls\t%1, %0\"\n+  [(set_attr \"type\" \"fpconv_media\")])\n \n (define_insn \"floatsisf2_i4\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8111,7 +8228,8 @@\n   [(set (match_operand:DI 0 \"fp_arith_reg_operand\" \"=f\")\n \t(fix:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"ftrc.sq %1, %0\")\n+  \"ftrc.sq %1, %0\"\n+  [(set_attr \"type\" \"fpconv_media\")])\n \n (define_expand \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n@@ -8130,7 +8248,8 @@\n   [(set (match_operand:SI 0 \"fp_arith_reg_operand\" \"=f\")\n \t(fix:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"ftrc.sl\t%1, %0\")\n+  \"ftrc.sl\t%1, %0\"\n+  [(set_attr \"type\" \"fpconv_media\")])\n \n (define_insn \"fix_truncsfsi2_i4\"\n   [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n@@ -8234,28 +8353,32 @@\n \t(eq:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpeq.s\t%1, %2, %0\")\n+  \"fcmpeq.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgtsf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(gt:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpgt.s\t%1, %2, %0\")\n+  \"fcmpgt.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgesf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ge:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpge.s\t%1, %2, %0\")\n+  \"fcmpge.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpunsf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unordered:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t      (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpun.s\t%1, %2, %0\")\n+  \"fcmpun.s\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_expand \"cmpsf\"\n   [(set (reg:SI T_REG)\n@@ -8286,7 +8409,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fneg.s\t%1, %0\")\n+  \"fneg.s\t%1, %0\"\n+  [(set_attr \"type\" \"fmove_media\")])\n \n (define_insn \"negsf2_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8314,7 +8438,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(sqrt:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fsqrt.s\t%1, %0\")\n+  \"fsqrt.s\t%1, %0\"\n+  [(set_attr \"type\" \"fdiv_media\")])\n \n (define_insn \"sqrtsf2_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8342,7 +8467,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fabs.s\t%1, %0\")\n+  \"fabs.s\t%1, %0\"\n+  [(set_attr \"type\" \"fmove_media\")])\n \n (define_insn \"abssf2_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8372,7 +8498,8 @@\n \t(plus:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"%f\")\n \t\t (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fadd.d\t%1, %2, %0\")\n+  \"fadd.d\t%1, %2, %0\"\n+  [(set_attr \"type\" \"dfparith_media\")])\n \n (define_insn \"adddf3_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8403,7 +8530,8 @@\n \t(minus:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t  (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fsub.d\t%1, %2, %0\")\n+  \"fsub.d\t%1, %2, %0\"\n+  [(set_attr \"type\" \"dfparith_media\")])\n \n (define_insn \"subdf3_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8434,7 +8562,8 @@\n \t(mult:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"%f\")\n \t\t (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fmul.d\t%1, %2, %0\")\n+  \"fmul.d\t%1, %2, %0\"\n+  [(set_attr \"type\" \"dfmul_media\")])\n \n (define_insn \"muldf3_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8465,7 +8594,8 @@\n \t(div:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t(match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fdiv.d\t%1, %2, %0\")\n+  \"fdiv.d\t%1, %2, %0\"\n+  [(set_attr \"type\" \"dfdiv_media\")])\n \n (define_insn \"divdf3_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8481,7 +8611,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float:DF (match_operand:DI 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"float.qd\t%1, %0\")\n+  \"float.qd\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_expand \"floatsidf2\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n@@ -8501,7 +8632,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"float.ld\t%1, %0\")\n+  \"float.ld\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_insn \"floatsidf2_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8516,7 +8648,8 @@\n   [(set (match_operand:DI 0 \"fp_arith_reg_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"ftrc.dq\t%1, %0\")\n+  \"ftrc.dq\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_expand \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"fpul_operand\" \"\")\n@@ -8536,7 +8669,8 @@\n   [(set (match_operand:SI 0 \"fp_arith_reg_operand\" \"=f\")\n \t(fix:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"ftrc.dl\t%1, %0\")\n+  \"ftrc.dl\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_insn \"fix_truncdfsi2_i\"\n   [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n@@ -8605,28 +8739,32 @@\n \t(eq:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpeq.d\t%1,%2,%0\")\n+  \"fcmpeq.d\t%1,%2,%0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgtdf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(gt:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpgt.d\t%1,%2,%0\")\n+  \"fcmpgt.d\t%1,%2,%0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgedf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ge:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpge.d\t%1,%2,%0\")\n+  \"fcmpge.d\t%1,%2,%0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpundf_media\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unordered:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t      (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpun.d\t%1,%2,%0\")\n+  \"fcmpun.d\t%1,%2,%0\"\n+  [(set_attr \"type\" \"fcmp_media\")])\n \n (define_expand \"cmpdf\"\n   [(set (reg:SI T_REG)\n@@ -8657,7 +8795,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fneg.d\t%1, %0\")\n+  \"fneg.d\t%1, %0\"\n+  [(set_attr \"type\" \"fmove_media\")])\n \n (define_insn \"negdf2_i\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n@@ -8685,7 +8824,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(sqrt:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fsqrt.d\t%1, %0\")\n+  \"fsqrt.d\t%1, %0\"\n+  [(set_attr \"type\" \"dfdiv_media\")])\n \n (define_insn \"sqrtdf2_i\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n@@ -8713,7 +8853,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fabs.d\t%1, %0\")\n+  \"fabs.d\t%1, %0\"\n+  [(set_attr \"type\" \"fmove_media\")])\n \n (define_insn \"absdf2_i\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n@@ -8742,7 +8883,8 @@\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float_extend:DF (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcnv.sd\t%1, %0\")\n+  \"fcnv.sd\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_insn \"extendsfdf2_i4\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -8771,7 +8913,8 @@\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n-  \"fcnv.ds\t%1, %0\")\n+  \"fcnv.ds\t%1, %0\"\n+  [(set_attr \"type\" \"dfpconv_media\")])\n \n (define_insn \"truncdfsf2_i4\"\n   [(set (match_operand:SF 0 \"fpul_operand\" \"=y\")"}]}