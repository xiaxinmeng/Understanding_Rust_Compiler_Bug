{"sha": "480767a91ca7bea09f2d851786d8a8093b271565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgwNzY3YTkxY2E3YmVhMDlmMmQ4NTE3ODZkOGE4MDkzYjI3MTU2NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-11-03T02:45:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-11-03T02:45:25Z"}, "message": "configure.ac: Use AC_SYS_LARGEFILE.\n\ngcc/:\n\t* configure.ac: Use AC_SYS_LARGEFILE.\n\t* configure: Rebuild.\n\t* config.in: Rebuild.\nlibcpp/:\n\t* configure.ac: Use AC_SYS_LARGEFILE.\n\t* configure: Rebuild.\n\t* config.in: Rebuild.\n\nFrom-SVN: r166230", "tree": {"sha": "1088208c03af15c579ec6eeeb3cb6be7c0b7ca64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1088208c03af15c579ec6eeeb3cb6be7c0b7ca64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/480767a91ca7bea09f2d851786d8a8093b271565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480767a91ca7bea09f2d851786d8a8093b271565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480767a91ca7bea09f2d851786d8a8093b271565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480767a91ca7bea09f2d851786d8a8093b271565/comments", "author": null, "committer": null, "parents": [{"sha": "16684e9c0d93fc51f3fbd6f04b115659f4c4510b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16684e9c0d93fc51f3fbd6f04b115659f4c4510b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16684e9c0d93fc51f3fbd6f04b115659f4c4510b"}], "stats": {"total": 443, "additions": 440, "deletions": 3}, "files": [{"sha": "bd97bd9d34891fb8f63c5b14ef543c5fb91111ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -1,3 +1,9 @@\n+2010-11-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: Use AC_SYS_LARGEFILE.\n+\t* configure: Rebuild.\n+\t* config.in: Rebuild.\n+\n 2010-11-02  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* builtins.c (fold_builtin_signbit): Use build_zero_cst instead of"}, {"sha": "bb8df2bd7a00242814d4271867969d380c3820ed", "filename": "gcc/config.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -1744,6 +1744,18 @@\n # endif\n #endif\n \n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#ifndef USED_FOR_TARGET\n+#undef _FILE_OFFSET_BITS\n+#endif\n+\n+\n+/* Define for large files, on AIX-style hosts. */\n+#ifndef USED_FOR_TARGET\n+#undef _LARGE_FILES\n+#endif\n+\n+\n /* Define to 1 if on MINIX. */\n #ifndef USED_FOR_TARGET\n #undef _MINIX"}, {"sha": "a4d8a2177058e788ab42fe8cc8251ea36ce014f3", "filename": "gcc/configure", "status": "modified", "additions": 203, "deletions": 2, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -862,6 +862,7 @@ with_ld\n with_demangler_in_ld\n with_gnu_as\n with_as\n+enable_largefile\n enable_werror_always\n enable_checking\n enable_coverage\n@@ -1552,6 +1553,7 @@ Optional Features:\n                           put copies of generated files in source dir\n                           intended for creating source tarballs for users\n                           without texinfo bison or flex.\n+  --disable-largefile     omit support for large files\n   --enable-werror-always  enable -Werror despite compiler version\n   --enable-checking=LIST\n \t\t\t  enable expensive run-time checks.  With LIST,\n@@ -5474,6 +5476,205 @@ _ACEOF\n esac\n \n \n+# Check whether --enable-largefile was given.\n+if test \"${enable_largefile+set}\" = set; then :\n+  enableval=$enable_largefile;\n+fi\n+\n+if test \"$enable_largefile\" != no; then\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for special C compiler options needed for large files\" >&5\n+$as_echo_n \"checking for special C compiler options needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_largefile_CC+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_cv_sys_largefile_CC=no\n+     if test \"$GCC\" != yes; then\n+       ac_save_CC=$CC\n+       while :; do\n+\t # IRIX 6.2 and later do not support large files by default,\n+\t # so use the C compiler's -n32 option if that helps.\n+\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t CC=\"$CC -n32\"\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_largefile_CC=' -n32'; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t break\n+       done\n+       CC=$ac_save_CC\n+       rm -f conftest.$ac_ext\n+    fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_CC\" >&5\n+$as_echo \"$ac_cv_sys_largefile_CC\" >&6; }\n+  if test \"$ac_cv_sys_largefile_CC\" != no; then\n+    CC=$CC$ac_cv_sys_largefile_CC\n+  fi\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _FILE_OFFSET_BITS value needed for large files\" >&5\n+$as_echo_n \"checking for _FILE_OFFSET_BITS value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_file_offset_bits+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _FILE_OFFSET_BITS 64\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=64; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_file_offset_bits=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_file_offset_bits\" >&5\n+$as_echo \"$ac_cv_sys_file_offset_bits\" >&6; }\n+case $ac_cv_sys_file_offset_bits in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _FILE_OFFSET_BITS $ac_cv_sys_file_offset_bits\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  if test $ac_cv_sys_file_offset_bits = unknown; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _LARGE_FILES value needed for large files\" >&5\n+$as_echo_n \"checking for _LARGE_FILES value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_large_files+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _LARGE_FILES 1\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=1; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_large_files=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_large_files\" >&5\n+$as_echo \"$ac_cv_sys_large_files\" >&6; }\n+case $ac_cv_sys_large_files in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _LARGE_FILES $ac_cv_sys_large_files\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  fi\n+fi\n+\n+\n # sizeof(char) is 1 by definition.\n # The cast to long int works around a bug in the HP C Compiler\n # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n@@ -17082,7 +17283,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17085 \"configure\"\n+#line 17286 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17188,7 +17389,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17191 \"configure\"\n+#line 17392 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f62500dc9aa12b300870eccea17c116c7a81c770", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -304,6 +304,8 @@ AC_USE_SYSTEM_EXTENSIONS\n AC_PROG_CPP\n AC_C_INLINE\n \n+AC_SYS_LARGEFILE\n+\n # sizeof(char) is 1 by definition.\n AC_CHECK_SIZEOF(void *)\n AC_CHECK_SIZEOF(short)"}, {"sha": "afaca8a6b6c7ae5d8846628fea9ee9e668d49f01", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -1,4 +1,11 @@\n+2010-11-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: Use AC_SYS_LARGEFILE.\n+\t* configure: Rebuild.\n+\t* config.in: Rebuild.\n+\n 2010-10-19  Basile Starynkevitch  <basile@starynkevitch.net>\n+\n \t* line-map.h (source_location): Remove obsolete comment\n \tmentioning location_s.\n "}, {"sha": "4637ced58cc2bec5fd2180b72f070b6ab2f3e038", "filename": "libcpp/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfig.in?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -287,6 +287,12 @@\n # endif\n #endif\n \n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#undef _FILE_OFFSET_BITS\n+\n+/* Define for large files, on AIX-style hosts. */\n+#undef _LARGE_FILES\n+\n /* Define to empty if `const' does not conform to ANSI C. */\n #undef const\n "}, {"sha": "ede2baa6edf85e8a29bc992c573f23f321028200", "filename": "libcpp/configure", "status": "modified", "additions": 202, "deletions": 1, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -695,6 +695,7 @@ SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n+enable_largefile\n enable_build_with_cxx\n enable_werror_always\n with_gnu_ld\n@@ -1331,6 +1332,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --disable-largefile     omit support for large files\n   --enable-build-with-cxx build with C++ compiler instead of C compiler\n   --enable-werror-always  enable -Werror despite compiler version\n   --disable-rpath         do not hardcode runtime library paths\n@@ -4008,6 +4010,206 @@ else\n fi\n \n \n+\n+# Check whether --enable-largefile was given.\n+if test \"${enable_largefile+set}\" = set; then :\n+  enableval=$enable_largefile;\n+fi\n+\n+if test \"$enable_largefile\" != no; then\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for special C compiler options needed for large files\" >&5\n+$as_echo_n \"checking for special C compiler options needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_largefile_CC+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_cv_sys_largefile_CC=no\n+     if test \"$GCC\" != yes; then\n+       ac_save_CC=$CC\n+       while :; do\n+\t # IRIX 6.2 and later do not support large files by default,\n+\t # so use the C compiler's -n32 option if that helps.\n+\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t CC=\"$CC -n32\"\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_largefile_CC=' -n32'; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t break\n+       done\n+       CC=$ac_save_CC\n+       rm -f conftest.$ac_ext\n+    fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_CC\" >&5\n+$as_echo \"$ac_cv_sys_largefile_CC\" >&6; }\n+  if test \"$ac_cv_sys_largefile_CC\" != no; then\n+    CC=$CC$ac_cv_sys_largefile_CC\n+  fi\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _FILE_OFFSET_BITS value needed for large files\" >&5\n+$as_echo_n \"checking for _FILE_OFFSET_BITS value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_file_offset_bits+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _FILE_OFFSET_BITS 64\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=64; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_file_offset_bits=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_file_offset_bits\" >&5\n+$as_echo \"$ac_cv_sys_file_offset_bits\" >&6; }\n+case $ac_cv_sys_file_offset_bits in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _FILE_OFFSET_BITS $ac_cv_sys_file_offset_bits\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  if test $ac_cv_sys_file_offset_bits = unknown; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _LARGE_FILES value needed for large files\" >&5\n+$as_echo_n \"checking for _LARGE_FILES value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_large_files+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _LARGE_FILES 1\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=1; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_large_files=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_large_files\" >&5\n+$as_echo \"$ac_cv_sys_large_files\" >&6; }\n+case $ac_cv_sys_large_files in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _LARGE_FILES $ac_cv_sys_large_files\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  fi\n+fi\n+\n+\n # See if we are building gcc with C++.\n # Do this early so setting lang to C++ affects following tests\n # Check whether --enable-build-with-cxx was given.\n@@ -4153,7 +4355,6 @@ test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n # Figure out what compiler warnings we can enable.\n # See config/warnings.m4 for details.\n \n-\n warn=\n save_CFLAGS=\"$CFLAGS\"\n for option in -W -Wall -Wwrite-strings \\"}, {"sha": "868986d82793be1eaeee766a7224c9147fafca56", "filename": "libcpp/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480767a91ca7bea09f2d851786d8a8093b271565/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=480767a91ca7bea09f2d851786d8a8093b271565", "patch": "@@ -14,6 +14,8 @@ AC_PROG_CC\n AC_PROG_CXX\n AC_PROG_RANLIB\n \n+AC_SYS_LARGEFILE\n+\n # See if we are building gcc with C++.\n # Do this early so setting lang to C++ affects following tests\n AC_ARG_ENABLE(build-with-cxx,"}]}