{"sha": "5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkMmQ5ODUwYmZlMjE1OWMxZjcxYjI1YzU0NTFlYWIyYzYwM2VjMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-08-16T11:26:41Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-08-16T11:26:41Z"}, "message": "re PR middle-end/81695 (internal compiler error: in size_binop_loc, at fold-const.c:1768)\n\n\tPR middle/81695\n\t* fold-const.c (fold_indirect_ref_1): Restore original behavior\n\tregarding size_zero_node.\n\nFrom-SVN: r251119", "tree": {"sha": "82b748ba52694ff01a2026702500d3e762c9676a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82b748ba52694ff01a2026702500d3e762c9676a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c73200ca2636eba0beb90137b39f2942e5be87a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c73200ca2636eba0beb90137b39f2942e5be87a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c73200ca2636eba0beb90137b39f2942e5be87a0"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "6cd2ea6616feb683f8bb2175ff10c669da2da772", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "patch": "@@ -1,3 +1,9 @@\n+2017-08-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle/81695\n+\t* fold-const.c (fold_indirect_ref_1): Restore original behavior\n+\tregarding size_zero_node.\n+\n 2017-08-16  Martin Liska  <mliska@suse.cz>\n \n \tPR target/81753"}, {"sha": "0a5b168c3200168c04bc313eca53f56d313bf8f6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd2d9850bfe2159c1f71b25c5451eab2c603ec2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5dd2d9850bfe2159c1f71b25c5451eab2c603ec2", "patch": "@@ -14109,22 +14109,19 @@ fold_indirect_ref_1 (location_t loc, tree type, tree op0)\n \t\t   && type == TREE_TYPE (op00type))\n \t    {\n \t      tree type_domain = TYPE_DOMAIN (op00type);\n-\t      tree min;\n-\t      if (type_domain != NULL_TREE\n-\t\t  && (min = TYPE_MIN_VALUE (type_domain))\n-\t\t  && TREE_CODE (min) == INTEGER_CST)\n+\t      tree min = size_zero_node;\n+\t      if (type_domain && TYPE_MIN_VALUE (type_domain))\n+\t\tmin = TYPE_MIN_VALUE (type_domain);\n+\t      offset_int off = wi::to_offset (op01);\n+\t      offset_int el_sz = wi::to_offset (TYPE_SIZE_UNIT (type));\n+\t      offset_int remainder;\n+\t      off = wi::divmod_trunc (off, el_sz, SIGNED, &remainder);\n+\t      if (remainder == 0 && TREE_CODE (min) == INTEGER_CST)\n \t\t{\n-\t\t  offset_int off = wi::to_offset (op01);\n-\t\t  offset_int el_sz = wi::to_offset (TYPE_SIZE_UNIT (type));\n-\t\t  offset_int remainder;\n-\t\t  off = wi::divmod_trunc (off, el_sz, SIGNED, &remainder);\n-\t\t  if (remainder == 0)\n-\t\t    {\n-\t\t      off = off + wi::to_offset (min);\n-\t\t      op01 = wide_int_to_tree (sizetype, off);\n-\t\t      return build4_loc (loc, ARRAY_REF, type, op00, op01,\n-\t\t\t\t\t NULL_TREE, NULL_TREE);\n-\t\t    }\n+\t\t  off = off + wi::to_offset (min);\n+\t\t  op01 = wide_int_to_tree (sizetype, off);\n+\t\t  return build4_loc (loc, ARRAY_REF, type, op00, op01,\n+\t\t\t\t     NULL_TREE, NULL_TREE);\n \t\t}\n \t    }\n \t}"}]}