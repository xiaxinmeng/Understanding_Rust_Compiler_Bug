{"sha": "9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4OGZmNWExZmVkYjRhYzI5NjI4ZWM0MjFmZjBjYzYxM2JhNmYzOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-01-01T20:21:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-01-01T20:21:36Z"}, "message": "re PR c++/51379 ([C++0x] [DR 799] reinterpret_cast is not particularly useful)\n\n/cp\n2012-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51379\n\t* typeck.c (build_reinterpret_cast_1): Implement resolution of\n\tDR 799.\n\n/testsuite\n2012-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51379\n\t* g++.dg/conversion/reinterpret4.C: New.\n\t* g++.dg/conversion/reinterpret1.C: Adjust.\n\nFrom-SVN: r182775", "tree": {"sha": "be9e78f3b2cbb2cc86058386b500ee89964447eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be9e78f3b2cbb2cc86058386b500ee89964447eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/comments", "author": null, "committer": null, "parents": [{"sha": "b81e8df8386836f92a06bf6b60159a2c703d9b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81e8df8386836f92a06bf6b60159a2c703d9b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81e8df8386836f92a06bf6b60159a2c703d9b88"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "b4a3df4e4e95f80c1c384b51db036e13ffba301e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "patch": "@@ -1,4 +1,10 @@\n-2011-12-31  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+2012-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51379\n+\t* typeck.c (build_reinterpret_cast_1): Implement resolution of\n+\tDR 799.\n+\n+2012-01-01  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \t* parser.c (cp_parser_using_declaration): Add a warning about\n \tdeprecated access declarations when no errors were encountered"}, {"sha": "d9166c933bba226652eed83906fc86b7c4aba2f0", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "patch": "@@ -6203,6 +6203,11 @@ build_reinterpret_cast_1 (tree type, tree expr, bool c_cast_p,\n   else if (TYPE_PTR_P (type) && INTEGRAL_OR_ENUMERATION_TYPE_P (intype))\n     /* OK */\n     ;\n+  else if ((INTEGRAL_OR_ENUMERATION_TYPE_P (type)\n+\t    || TYPE_PTR_P (type) || TYPE_PTR_TO_MEMBER_P (type))\n+\t   && same_type_p (type, intype))\n+    /* DR 799 */\n+    return fold_if_not_in_template (build_nop (type, expr));\n   else if ((TYPE_PTRFN_P (type) && TYPE_PTRFN_P (intype))\n \t   || (TYPE_PTRMEMFUNC_P (type) && TYPE_PTRMEMFUNC_P (intype)))\n     return fold_if_not_in_template (build_nop (type, expr));"}, {"sha": "cfbef8d6a83edef48daaf70cdd2cbf2ca7409db8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "patch": "@@ -1,3 +1,9 @@\n+2012-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51379\n+\t* g++.dg/conversion/reinterpret4.C: New.\n+\t* g++.dg/conversion/reinterpret1.C: Adjust.\n+\n 2012-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/constexpr-delegating2.C: Add missing piece."}, {"sha": "aa55f6f4cf51d9c792e5c171800644cd6499ba8f", "filename": "gcc/testsuite/g++.dg/conversion/reinterpret1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret1.C?ref=9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "patch": "@@ -3,4 +3,4 @@\n struct Y { Y(int &); };\n \n int v;\n-Y y1(reinterpret_cast<int>(v));  // { dg-error \"\" }\n+Y y1(reinterpret_cast<int>(v));"}, {"sha": "71575a1abe5f279d134f53ddda925302a6c71a21", "filename": "gcc/testsuite/g++.dg/conversion/reinterpret4.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Freinterpret4.C?ref=9f88ff5a1fedb4ac29628ec421ff0cc613ba6f38", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/51379\n+\n+unsigned long t1 = 1;\n+unsigned long t2 = reinterpret_cast<unsigned long>(t1);"}]}