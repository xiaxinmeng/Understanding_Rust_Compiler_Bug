{"sha": "40a4184c57f44a65270133e52b540ba43ba17529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhNDE4NGM1N2Y0NGE2NTI3MDEzM2U1MmI1NDBiYTQzYmExNzUyOQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-03-17T05:46:05Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-03-17T05:46:05Z"}, "message": "Make-lang.in (treelang.tags): Remove duplicate entry.\n\nTreelang:\n2003-03-17  Andreas Jaeger  <aj@suse.de>\n\n\t* Make-lang.in (treelang.tags): Remove duplicate entry.\n\ncp:\n2003-03-17  Andreas Jaeger  <aj@suse.de>\n\n\t* Make-lang.in (cp/TAGS): Remove.\n\nFrom-SVN: r64463", "tree": {"sha": "1ed810d9fabcf5f0232e2209024d3c122eee717b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ed810d9fabcf5f0232e2209024d3c122eee717b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a4184c57f44a65270133e52b540ba43ba17529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a4184c57f44a65270133e52b540ba43ba17529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a4184c57f44a65270133e52b540ba43ba17529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a4184c57f44a65270133e52b540ba43ba17529/comments", "author": null, "committer": null, "parents": [{"sha": "7b3464eefed793556a367801d4c865f4c3423923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3464eefed793556a367801d4c865f4c3423923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3464eefed793556a367801d4c865f4c3423923"}], "stats": {"total": 92, "additions": 41, "deletions": 51}, "files": [{"sha": "c0a968f33d06292c4743f0989608d4d32ead4e47", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 37, "deletions": 33, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40a4184c57f44a65270133e52b540ba43ba17529", "patch": "@@ -1,3 +1,7 @@\n+2003-03-17  Andreas Jaeger  <aj@suse.de>\n+\n+\t* Make-lang.in (cp/TAGS): Remove.\n+\n 2003-03-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/9629\n@@ -15,7 +19,7 @@\n \t* decl.c (binding_for_name): Fix initialization thinko.\n \n 2003-03-15  Gabriel Dos Reis <gdr@integrable-solutions.net>\n-\t\n+\n \tCompile-time improvement: 2/n.\n \t* cp-tree.h (struct cxx_binding): New datatype;\n \t(struct lang_identifier): Use it.\n@@ -43,9 +47,9 @@\n \t(poplevel_class): Likewise.\n \t(free_bindings):  Adjust type.\n \t(find_binding): Adjust return type, add a third parameter. Remove\n-\tnon-useful assertion now that we use static typing.  \n+\tnon-useful assertion now that we use static typing.\n \t(cxx_scope_find_binding_for_name): New function.\n-\t(binding_for_name): Use it.  Adjust local variable type. Simplify. \n+\t(binding_for_name): Use it.  Adjust local variable type. Simplify.\n \t(namespace_binding):  Simplify.\n \t(set_namespace_binding): Likewise.\n \t(set_identifier_type_value_with_scope): Adjust local variable type.\n@@ -135,7 +139,7 @@\n 2003-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/9820\n-\t* search.c (lookup_member): Fix handling of functions in a class \n+\t* search.c (lookup_member): Fix handling of functions in a class\n \tbeing defined.\n \n 2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n@@ -161,7 +165,7 @@\n 2003-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/8660\n-\t* decl2.c (check_classfn): A member template only matches a \n+\t* decl2.c (check_classfn): A member template only matches a\n \tmember template.\n \n 2003-03-11  Neil Booth  <neil@daikokuya.co.uk>\n@@ -184,7 +188,7 @@\n \t(build_function_call): ... this.\n \n 2003-03-10  Devang Patel  <dpatel@apple.com>\n-\t\n+\n \tPR c++/9394\n \t* g++spec.c (lang_specific_driver): Use DEFAULT_WORD_SWTCH_TAKES_ARG.\n \n@@ -261,7 +265,7 @@\n \t(handle_class_head): Remove unncessary parameters.\n \t* parser.c (cp_parser_class_head): Check that\n \tnested-name-specifiers are used appropriately.\n-\t\n+\n 2003-03-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* call.c (reference_binding): Remove REF_IS_VAR parameter.\n@@ -275,7 +279,7 @@\n \t* cvt.c (build_up_reference): Adjust use of\n \tmake_temporary_var_for_ref_to_temp.\n \t* tree.c (real_non_cast_lvalue_p): New method.\n-\t \n+\n 2003-03-07  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* except.c (init_exception_processing): Use C90 prototype style.\n@@ -305,7 +309,7 @@\n \t(can_convert_eh): Likewise.\n \t(check_handlers_1): Likewise.\n \t(check_handlers): Likewise.\n-\t\n+\n 2003-03-06  Mark Mitchell  <mark@codesourcery.com>\n \n \t* call.c (merge_conversion_sequences): New function.\n@@ -316,7 +320,7 @@\n \t(build_user_type_conversion_1): Use merge_conversion_sequences.\n \t* cp-tree.def: Add comments for CONV nodes.\n \t* rtti.c (get_tinfo_decl): Use build_address/build_nop.\n-\t\n+\n 2003-03-07  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* error.c (init_error): Use C90 prototype style.\n@@ -415,7 +419,7 @@\n \t(push_namespace): Initialize static_decls for ordinary namespaces.\n \t(cxx_init_decl_processing): Initialize static_decls for global\n \tnamespace.\n-\t\n+\n 2003-03-05  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (end_of_class): Correct thinko.\n@@ -431,10 +435,10 @@\n         * decl.c (cxx_saved_binding_make): New macro.\n         (struct cxx_saved_binding): Define.\n         (store_bindings): Adjust prototype.  Use cxx_saved_binding to save\n-        C++ bindings. \n+        C++ bindings.\n         (maybe_push_to_top_level): Adjust local variable type.\n         (pop_from_top_level): Likewise.\n-\t\n+\n 2003-03-04  Tom Tromey  <tromey@redhat.com>\n \n \t* Make-lang.in (c++.tags): New target.\n@@ -496,7 +500,7 @@\n \t(convert_for_initialization): Adjust call to\n \tinitialize_reference.\n \t* typeck2.c (store_init_value): Remove #if 0'd code.\n-\t\n+\n 2003-03-03  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (start_function): Clear DECL_NUM_STMTS.\n@@ -547,7 +551,7 @@\n \tbuild_zero_init.\n \t(build_new_1): Adjust call to build_default_init.\n \t* typeck2.c (process_init_constructor): Adjust call to build_zero_init.\n-\t\n+\n 2003-02-26  Devang Patel  <dpatel@apple.com>\n \n \t* decl.c (finish_enum): Merge two 'for' loops. Copy value node if required.\n@@ -556,7 +560,7 @@\n \t#if 0'ed code.\n \t* pt.c (tsubst_enum): Set TREE_TYPE and copy value node.\n \t(tsubst_copy): Add check for enum type.\n-\t\n+\n 2003-02-25  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9683\n@@ -599,7 +603,7 @@\n \t* pt.c (instantiate_class_template): Don't try to instantiate\n \tdependent types.\n \t(resolve_typename_type): Use CLASSTYPE_PRIMARY_TEMPLATE.\n-\t\n+\n 2003-02-21  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9749\n@@ -762,12 +766,12 @@\n \ttrailing bit fields when computing CLASSTYPE_SIZE_UNIT.\n \n 2003-02-18  Matt Austern <austern@apple.com>\n-\t\n+\n \t* cp/cp-lang.c: Change lang hooks so that final_write_globals does\n \tnothing for C++.\n \t* cp/decl.c (wrapup_globals_for_namespace): Remove special\n \thandling of global namespace.\n-\t\n+\n 2003-02-18  Geoffrey Keating  <geoffk@apple.com>\n \n \t* cp-tree.h (rid_to_yy): Delete.\n@@ -839,7 +843,7 @@\n 2003-02-14   Andrew Pinski <pinskia@physics.uc.edu>\n \n         * decl.c: (define_label): Fix warning for return 0 instead of NULL.\n-\t\n+\n 2003-02-13  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* decl.c: Include \"timevar.h\".\n@@ -875,7 +879,7 @@\n \t(xref_tag): Likewise.\n \n \t* Make-lang.in (cp/decl.o): Add dependency on timevar.h\n-\t\n+\n 2003-02-12  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* decl.c (build_enumerator):  Remove unneeded test.\n@@ -1039,7 +1043,7 @@\n \t(build_modify_expr): Likewise.\n \t(build_x_modify_expr): Likewise.\n \t* typeck2.c (build_x_arrow): Likewise.\n-\t\n+\n 2003-01-29  Fariborz Jahanian  <fjahanian@apple.com>\n \n         * pt.c (last_pending_template) Declare GTY().\n@@ -1082,7 +1086,7 @@\n \tPR c++/9415\n \t* pt.c (tsubst_copy_and_build, CALL_EXPR): BASELINK exprs are\n \talready scoped.\n-\t\n+\n \tPR c++/8545\n \t* parser.c (cp_parser_cast_expression): Be more tentative.\n \n@@ -1129,7 +1133,7 @@\n \t(cp_parser_expression_statement): Use it.\n \t(cp_parser_explicit_instantiation): Likewise.\n \t* pt.c (do_decl_instantiation): Improve error handling logic.\n-\t\n+\n 2003-01-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9384\n@@ -1163,7 +1167,7 @@\n \t(dependent_template_arg_p): Likewise.\n \t(dependent_template_id_p): Likewise.\n \t(dependent_template_p): Likewise.\n-\t\n+\n \tPR c++/9285\n \tPR c++/9294\n \t* parser.c (cp_parser_simple_declaration): Return quickly when\n@@ -1202,7 +1206,7 @@\n \tPR c++/9272\n \t* parser.c (cp_parser_constructor_declarator_p): Do not assume\n \tthat a constructor cannot be declared outside of its own class.\n-\t\n+\n \t* parser.c (cp_parser_resolve_typename_type): If the scope cannot\n \tbe resolved, neither can the qualified name.\n \n@@ -1455,7 +1459,7 @@\n \t2003-01-09  Geoffrey Keating  <geoffk@apple.com>\n \n \tMerge to tag pch-merge-20030102:\n-\t\n+\n \t* semantics.c (finish_translation_unit): Don't call finish_file.\n \t* parser.c: Don't include ggc.h.\n \t(cp_lexer_new_main): Rename from cp_lexer_new, only create main lexer,\n@@ -1473,7 +1477,7 @@\n \n \t* Make-lang.in: Remove $(GGC_H) from all dependencies.\n \t(CXX_TREE_H): Add $(GGC_H).\n-\t* class.c: Don't include ggc.h. \n+\t* class.c: Don't include ggc.h.\n \t(field_decl_cmp): Make parameters be 'const void *' to match qsort.\n \t(method_name_cmp): Likewise.\n \t(resort_data): New variable.\n@@ -1611,7 +1615,7 @@\n \t(register_local_specialization): Revert 2003-01-05 change.\n \t(instantiate_decl): Use hash_local_specialization when creating\n \tthe local_specializations table.\n-\t\n+\n \t* decl2.c (mark_used): Do not synthesize thunks.\n \n \t* class.c (layout_class_type): Correct handling of unnamed\n@@ -1665,7 +1669,7 @@\n \t(register_local_specialization): Use htab_find_slot, not\n \thtab_find_slot_with_hash.\n \t(instantiate_decl): Pass a hash function to htab_create.\n-\t\n+\n 2003-01-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* parser.c (cp_parser_binary_expression,\n@@ -1684,7 +1688,7 @@\n \n 2003-01-03  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n-\t* cvt.c, decl.c, decl2.c: This is the C++ front end, not the C \n+\t* cvt.c, decl.c, decl2.c: This is the C++ front end, not the C\n \tfront end.\n \n 2003-01-03  Matt Austern  <austern@apple.com>\n@@ -1702,7 +1706,7 @@\n \t(finish_file): iterate only through keyed_classes list when\n \tdeciding whether to emit vtables, remove class from its list after\n \twe do the emission.\n-\t\n+\n 2003-01-02  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (build_conditional_expr): Stabilize lvalues properly.\n@@ -1744,7 +1748,7 @@\n \n \t* parser.c (struct cp_parser): Add access_checks_lists field\n \t(cp_parser_simple_declaration): Use.\n-\t(cp_parser_init_declarator): Likewise. \n+\t(cp_parser_init_declarator): Likewise.\n \n 2003-01-02  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "f6f707f515264ad5fd6e020d8b576a4f909c5827", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=40a4184c57f44a65270133e52b540ba43ba17529", "patch": "@@ -274,12 +274,3 @@ cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) rtl.h integrate.h insn-config\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h real.h\n \n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) diagnostic.h gt-cp-parser.h output.h\n-#\f\n-# These exist for maintenance purposes.\n-\n-# Update the tags table.\n-cp/TAGS: force\n-\tcd $(srcdir)/cp ;\t\t\t\\\n-\tetags --no-globals -l c *.c *.h ../*.c ../*.h;\n-\n-.PHONY: cp/TAGS"}, {"sha": "81ea75988712fd0bee027e67ba6bd37ae54855ad", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=40a4184c57f44a65270133e52b540ba43ba17529", "patch": "@@ -1,3 +1,7 @@\n+2003-03-17  Andreas Jaeger  <aj@suse.de>\n+\n+\t* Make-lang.in (treelang.tags): Remove duplicate entry.\n+\n 2003-03-15  Andreas Jaeger  <aj@suse.de>\n \n \t* treetree.c (cpp_handle_option): Remove."}, {"sha": "51dc49ab6c1fc566b425d4ef00b80458a3dda7be", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a4184c57f44a65270133e52b540ba43ba17529/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=40a4184c57f44a65270133e52b540ba43ba17529", "patch": "@@ -312,15 +312,6 @@ treelang.wc: force\n \n #\f\n \n-# Update the tags table for emacs find label (alt-.) function\n-TAGS: treelang.tags\n-\n-.PHONY: treelang.tags\n-\n-treelang.tags:\n-\tcd $(srcdir)/treelang;\t\t\t\t\t\t\\\n-\tetags -l c ${TREE_SOURCE}\n-\n .PHONY: treelang.html\n \n treelang.html:"}]}