{"sha": "6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFmNDZmZWI2YjZjZjFmZjYxODYwZGIzYmM0YWY3ZDBlZDAzZTE0OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2006-11-18T20:29:22Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2006-11-18T20:29:22Z"}, "message": "fold-const.c (fold_strip_sign_ops): Handle copysign.\n\n\t* fold-const.c (fold_strip_sign_ops): Handle copysign.\n\ntestsuite:\n\t* gcc.dg/builtins-20.c: Add cases for copysign.\n\nFrom-SVN: r118975", "tree": {"sha": "54f835b1efbe21c849bac39f9a546c2ce07db730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54f835b1efbe21c849bac39f9a546c2ce07db730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/comments", "author": null, "committer": null, "parents": [{"sha": "4f7d854795b86031099e9292e8b74d0791186898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7d854795b86031099e9292e8b74d0791186898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7d854795b86031099e9292e8b74d0791186898"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "0df21ccca998753fba5e622911a15a796cd2f56b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "patch": "@@ -1,3 +1,7 @@\n+2006-11-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fold-const.c (fold_strip_sign_ops): Handle copysign.\n+\n 2006-11-18  Richard Guenther  <rguenther@suse.de>\n \n \t* config/i386/i386.c (ix86_builtins): New array for ix86"}, {"sha": "cd7f1d9e831699b3c6a0479b0ba62f19c65dfd8d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "patch": "@@ -13388,14 +13388,29 @@ fold_strip_sign_ops (tree exp)\n       break;\n       \n     case CALL_EXPR:\n-      /* Strip sign ops from the argument of \"odd\" math functions.  */\n-      if (negate_mathfn_p (builtin_mathfn_code (exp)))\n-        {\n-\t  arg0 = fold_strip_sign_ops (TREE_VALUE (TREE_OPERAND (exp, 1)));\n-\t  if (arg0)\n-\t    return build_function_call_expr (get_callee_fndecl (exp),\n-\t\t\t\t\t     build_tree_list (NULL_TREE, arg0));\n+      {\n+\tconst enum built_in_function fcode = builtin_mathfn_code (exp);\n+\tswitch (fcode)\n+\t{\n+\tCASE_FLT_FN (BUILT_IN_COPYSIGN):\n+\t  /* Strip copysign function call, return the 1st argument. */\n+\t  arg0 = TREE_VALUE (TREE_OPERAND (exp, 1));\n+\t  arg1 = TREE_VALUE (TREE_CHAIN (TREE_OPERAND (exp, 1)));\n+\t  return omit_one_operand (TREE_TYPE (exp), arg0, arg1);\n+\n+\tdefault:\n+\t  /* Strip sign ops from the argument of \"odd\" math functions.  */\n+\t  if (negate_mathfn_p (fcode))\n+            {\n+\t      arg0 = fold_strip_sign_ops (TREE_VALUE (TREE_OPERAND (exp, 1)));\n+\t      if (arg0)\n+\t\treturn build_function_call_expr (get_callee_fndecl (exp),\n+\t\t\t\t\t\t build_tree_list (NULL_TREE,\n+\t\t\t\t\t\t\t\t  arg0));\n+\t    }\n+\t  break;\n \t}\n+      }\n       break;\n \n     default:"}, {"sha": "c23dae9fb653644934f75f2dc7c7e3bea0cf973d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "patch": "@@ -1,3 +1,7 @@\n+2006-11-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/builtins-20.c: Add cases for copysign.\n+\n 2006-11-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/24285"}, {"sha": "bb90aec9672aa9256921aefb9ddfbafa24d7c0fa", "filename": "gcc/testsuite/gcc.dg/builtins-20.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6af46feb6b6cf1ff61860db3bc4af7d0ed03e148/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c?ref=6af46feb6b6cf1ff61860db3bc4af7d0ed03e148", "patch": "@@ -16,18 +16,21 @@ extern double cos (double);\n extern double sin (double);\n extern double tan (double);\n extern double fabs (double);\n+extern double copysign (double, double);\n extern double hypot (double, double);\n extern double pure (double) __attribute__ ((__pure__));\n extern float cosf (float);\n extern float sinf (float);\n extern float tanf (float);\n extern float fabsf (float);\n+extern float copysignf (float, float);\n extern float hypotf (float, float);\n extern float puref (float) __attribute__ ((__pure__));\n extern long double cosl (long double);\n extern long double sinl (long double);\n extern long double tanl (long double);\n extern long double fabsl (long double);\n+extern long double copysignl (long double, long double);\n extern long double hypotl (long double, long double);\n extern long double purel (long double) __attribute__ ((__pure__));\n \n@@ -105,6 +108,12 @@ void test2(double x, double y)\n   if (cos((y*=2, -fabs(tan(x/-y)))) != cos((y*=2,tan(x/y))))\n     link_error ();\n \n+  if (cos(copysign(x,y)) != cos(x))\n+    link_error ();\n+\n+  if (cos(copysign(-fabs(x),y*=2)) != cos((y*=2,x)))\n+    link_error ();\n+\n   if (hypot (x, 0) != fabs(x))\n     link_error ();\n \n@@ -222,6 +231,12 @@ void test2f(float x, float y)\n   if (cosf((y*=2, -fabsf(tanf(x/-y)))) != cosf((y*=2,tanf(x/y))))\n     link_error ();\n \n+  if (cosf(copysignf(x,y)) != cosf(x))\n+    link_error ();\n+\n+  if (cosf(copysignf(-fabsf(x),y*=2)) != cosf((y*=2,x)))\n+    link_error ();\n+\n   if (hypotf (x, 0) != fabsf(x))\n     link_error ();\n \n@@ -340,6 +355,12 @@ void test2l(long double x, long double y)\n   if (cosl((y*=2, -fabsl(tanl(x/-y)))) != cosl((y*=2,tanl(x/y))))\n     link_error ();\n \n+  if (cosl(copysignl(x,y)) != cosl(x))\n+    link_error ();\n+\n+  if (cosl(copysignl(-fabsl(x),y*=2)) != cosl((y*=2,x)))\n+    link_error ();\n+\n   if (hypotl (x, 0) != fabsl(x))\n     link_error ();\n "}]}