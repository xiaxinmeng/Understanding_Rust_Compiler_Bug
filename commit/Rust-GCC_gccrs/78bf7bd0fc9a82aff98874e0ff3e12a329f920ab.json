{"sha": "78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiZjdiZDBmYzlhODJhZmY5ODg3NGUwZmYzZTEyYTMyOWY5MjBhYg==", "commit": {"author": {"name": "Olatunji Ruwase", "email": "tjruwase@google.com", "date": "2009-06-29T21:17:40Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-06-29T21:17:40Z"}, "message": "plugins.texi: Document PLUGIN_START_UNIT.\n\n2009-06-29  Olatunji Ruwase   <tjruwase@google.com>\n\n\t* doc/plugins.texi: Document PLUGIN_START_UNIT.\n\t* toplev.c (compile_file): Call PLUGIN_START_UNIT.\n\t* gcc-plugin.h (PLUGIN_START_UNIT): Added new event.\n\t* plugin.c (plugin_event_name): Added PLUGIN_START_UNIT.\n\t(register_callback): Handle PLUGIN_START_UNIT.\n\t(invoke_plugin_callbacks): Handle PLUGIN_START_UNIT.\n\nFrom-SVN: r149064", "tree": {"sha": "63398d650a9579870dc5c29493d49d49e66f87cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63398d650a9579870dc5c29493d49d49e66f87cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/comments", "author": null, "committer": null, "parents": [{"sha": "20460eb94863954cf7ebdc7bf2193038ac0b781a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20460eb94863954cf7ebdc7bf2193038ac0b781a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20460eb94863954cf7ebdc7bf2193038ac0b781a"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "1566160373cd0463d3ba38d393a1d8bc3116661e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -1,3 +1,12 @@\n+2009-06-29  Olatunji Ruwase   <tjruwase@google.com>\n+\n+\t* doc/plugins.texi: Document PLUGIN_START_UNIT.\n+\t* toplev.c (compile_file): Call PLUGIN_START_UNIT.\n+\t* gcc-plugin.h (PLUGIN_START_UNIT): Added new event.\n+\t* plugin.c (plugin_event_name): Added PLUGIN_START_UNIT.\n+\t(register_callback): Handle PLUGIN_START_UNIT.\n+\t(invoke_plugin_callbacks): Handle PLUGIN_START_UNIT.\n+\n 2009-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.c (process_call_operands): Propagate TREE_READONLY from the"}, {"sha": "4dfb159c88303995759d0951f6aadcae7f1d77fd", "filename": "gcc/doc/plugins.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fdoc%2Fplugins.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fdoc%2Fplugins.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fplugins.texi?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -134,6 +134,7 @@ enum plugin_event\n   PLUGIN_GGC_END,\t\t/* Called at end of GGC. */\n   PLUGIN_REGISTER_GGC_ROOTS,\t/* Register an extra GGC root table. */\n   PLUGIN_ATTRIBUTES,            /* Called during attribute registration */\n+  PLUGIN_START_UNIT,            /* Called before processing a translation unit.  */\n   PLUGIN_EVENT_LAST             /* Dummy event used for indexing callback\n                                    array.  */\n @};"}, {"sha": "9fbdc91af25750a5452d9076afd2a158cf62ec56", "filename": "gcc/gcc-plugin.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fgcc-plugin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fgcc-plugin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-plugin.h?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -41,6 +41,7 @@ enum plugin_event\n   PLUGIN_GGC_END,\t\t/* Called at end of GGC. */\n   PLUGIN_REGISTER_GGC_ROOTS,\t/* Register an extra GGC root table. */\n   PLUGIN_ATTRIBUTES,            /* Called during attribute registration.  */\n+  PLUGIN_START_UNIT,            /* Called before processing a translation unit.  */\n   PLUGIN_EVENT_LAST             /* Dummy event used for indexing callback\n                                    array.  */\n };"}, {"sha": "f6578505b88a44d7a5e6a9fb30a6a59fc98aee59", "filename": "gcc/plugin.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -57,6 +57,7 @@ const char *plugin_event_name[] =\n   \"PLUGIN_GGC_MARKING\",\n   \"PLUGIN_GGC_END\",\n   \"PLUGIN_REGISTER_GGC_ROOTS\",\n+  \"PLUGIN_START_UNIT\", \n   \"PLUGIN_EVENT_LAST\"\n };\n \n@@ -499,6 +500,7 @@ register_callback (const char *plugin_name,\n         ggc_register_root_tab ((const struct ggc_root_tab*) user_data);\n \tbreak;\n       case PLUGIN_FINISH_TYPE:\n+      case PLUGIN_START_UNIT:\n       case PLUGIN_FINISH_UNIT:\n       case PLUGIN_CXX_CP_PRE_GENERICIZE:\n       case PLUGIN_GGC_START:\n@@ -544,6 +546,7 @@ invoke_plugin_callbacks (enum plugin_event event, void *gcc_data)\n   switch (event)\n     {\n       case PLUGIN_FINISH_TYPE:\n+      case PLUGIN_START_UNIT:\n       case PLUGIN_FINISH_UNIT:\n       case PLUGIN_CXX_CP_PRE_GENERICIZE:\n       case PLUGIN_ATTRIBUTES:"}, {"sha": "3122fa8dc3eff799eee2725733667530476a0d08", "filename": "gcc/testsuite/gcc.dg/plugin/plugin.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -50,6 +50,7 @@ set plugin_test_list [list \\\n     { selfassign.c self-assign-test-1.c self-assign-test-2.c } \\\n     { ggcplug.c ggcplug-test-1.c } \\\n     { one_time_plugin.c one_time-test-1.c } \\\n+    { start_unit_plugin.c start_unit-test-1.c } \\\n ]\n \n foreach plugin_test $plugin_test_list {"}, {"sha": "4cd8a40f44156d3b069d93368f846b57650d5d70", "filename": "gcc/testsuite/gcc.dg/plugin/start_unit-test-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit-test-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit-test-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit-test-1.c?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+int main (int argc, char **argv) \n+{ \n+  return 0;  \n+}"}, {"sha": "5b16e84a4323a1f7d4971446d958d7eab7e55c8b", "filename": "gcc/testsuite/gcc.dg/plugin/start_unit_plugin.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -0,0 +1,66 @@\n+/* This plugin tests the correct operation of a PLUGIN_START_UNIT callback.\n+ * By the time a PLUGIN_START_UNIT callback is invoked, the frontend \n+ * initialization should have completed. At least the different *_type_nodes\n+ * should have been created. This plugin creates an artifical global \n+ * interger variable.\n+ * \n+*/\n+#include \"gcc-plugin.h\"\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"toplev.h\"\n+#include \"basic-block.h\"\n+#include \"gimple.h\"\n+#include \"tree.h\"\n+#include \"tree-pass.h\"\n+#include \"intl.h\"\n+\n+int plugin_is_GPL_compatible;\n+static tree fake_var = NULL;\n+\n+static bool\n+gate_start_unit (void)\n+{\n+  return true;\n+}\n+\n+static void start_unit_callback (void *gcc_data, void *user_data)\n+{\n+  if (integer_type_node) {\n+    fake_var = build_decl (UNKNOWN_LOCATION, VAR_DECL, \n+                           get_identifier (\"_fake_var_\"),\n+                           integer_type_node);\n+    TREE_PUBLIC (fake_var) = 1;\n+    DECL_ARTIFICIAL (fake_var) = 1;\n+  }\n+}\n+\n+static void finish_unit_callback (void *gcc_data, void *user_data)\n+{\n+  if (fake_var == NULL) {\n+    printf (\"fake_var not created \\n\");\n+    return;\n+  }\n+  if (TREE_CODE (fake_var) != VAR_DECL) {\n+    printf (\"fake_var not a VAR_DECL \\n\");\n+    return;\n+  }\n+  if (TREE_CODE (TREE_TYPE (fake_var)) != INTEGER_TYPE) {\n+    printf (\"fake_var not INTEGER_TYPE \\n\");\n+    return;\n+  }\n+  if (DECL_ARTIFICIAL (fake_var) == 0) {\n+    printf (\"fake_var not ARTIFICIAL \\n\");\n+    return;\n+  }\n+}\n+\n+int plugin_init (struct plugin_name_args *plugin_info,\n+                 struct plugin_gcc_version *version)\n+{\n+  register_callback (\"start_unit\", PLUGIN_START_UNIT, &start_unit_callback, NULL);\n+  register_callback (\"finish_unit\", PLUGIN_FINISH_UNIT, &finish_unit_callback, NULL);\n+  return 0;\n+}"}, {"sha": "2bd392becc193e64541ae5d46bc78110d4d482d4", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bf7bd0fc9a82aff98874e0ff3e12a329f920ab/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=78bf7bd0fc9a82aff98874e0ff3e12a329f920ab", "patch": "@@ -1017,6 +1017,7 @@ compile_file (void)\n   init_final (main_input_filename);\n   coverage_init (aux_base_name);\n   statistics_init ();\n+  invoke_plugin_callbacks (PLUGIN_START_UNIT, NULL);\n \n   timevar_push (TV_PARSE);\n "}]}