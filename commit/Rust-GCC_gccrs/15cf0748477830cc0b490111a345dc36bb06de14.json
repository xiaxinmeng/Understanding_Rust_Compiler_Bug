{"sha": "15cf0748477830cc0b490111a345dc36bb06de14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjZjA3NDg0Nzc4MzBjYzBiNDkwMTExYTM0NWRjMzZiYjA2ZGUxNA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-09-26T10:44:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-26T10:44:55Z"}, "message": "makeutl.ads (Main_Config_Project): Moved to gpr_util.ads\n\n2007-09-26  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.ads (Main_Config_Project): Moved to gpr_util.ads\n\n\t* prj.ads, prj.adb (Default_Language): Remove function, no longer used\n\tReplace components Compiler_Min_Options and Binder_Min_Options with\n\tCompiler_Required_Switches and Binder_Required_Switches in record\n\tLanguage_Config.\n\tRemove components Default_Language and Config in Project_Tree_Data,\n\tno longer used.\n\n\t* prj-attr.adb: New attributes Required_Switches (<language>) in\n\tpackages Compiler and Binder.\n\n\t* prj-nmsc.adb: Major rewrite of the processing of configuration\n\tattributes for gprbuild. No impact on GNAT tools.\n\n\t* prj-proc.ads, prj-proc.adb (Process_Project_Tree_Phase_2): No longer\n\tprocess configuration attributes: this is done in Prj.Nmsc.Check.\n\t(Recursive_Process): Make a full copy of packages inherited from project\n\tbeing extended, instead of a shallow copy.\n\t(Process_Project_Tree_Phase_1): New procedure\n\t(Process_Project_Tree_Phase_1): New procedure\n\t(Process): Implementation now uses the two new procedures\n\n\t* prj-util.adb (Executable_Of): Get the suffix and the default suffix\n\tfrom the project config, not the tree config that no longer exists.\n\nFrom-SVN: r128796", "tree": {"sha": "843e004295b9af3ff36cb24860ace43160446c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/843e004295b9af3ff36cb24860ace43160446c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15cf0748477830cc0b490111a345dc36bb06de14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15cf0748477830cc0b490111a345dc36bb06de14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15cf0748477830cc0b490111a345dc36bb06de14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15cf0748477830cc0b490111a345dc36bb06de14/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a8e311d153cabafc215ec3deecc2f4b49af9a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8e311d153cabafc215ec3deecc2f4b49af9a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8e311d153cabafc215ec3deecc2f4b49af9a79"}], "stats": {"total": 121, "additions": 102, "deletions": 19}, "files": [{"sha": "c2c10ad195881aa6039ddec37a6eabf980ef779b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 46, "deletions": 19, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=15cf0748477830cc0b490111a345dc36bb06de14", "patch": "@@ -76,6 +76,10 @@ package body Make is\n    --  Every program depends on this package, that must then be checked,\n    --  especially when -f and -a are used.\n \n+   procedure Kill (Pid : Process_Id; Sig_Num : Integer; Close : Integer);\n+   pragma Import (C, Kill, \"__gnat_kill\");\n+   --  Called by Sigint_Intercepted to kill all spawned compilation processes\n+\n    type Sigint_Handler is access procedure;\n \n    procedure Install_Int_Handler (Handler : Sigint_Handler);\n@@ -86,6 +90,28 @@ package body Make is\n    --  Called when the program is interrupted by Ctrl-C to delete the\n    --  temporary mapping files and configuration pragmas files.\n \n+   No_Mapping_File : constant Natural := 0;\n+\n+   type Compilation_Data is record\n+      Pid              : Process_Id;\n+      Full_Source_File : File_Name_Type;\n+      Lib_File         : File_Name_Type;\n+      Source_Unit      : Unit_Name_Type;\n+      Mapping_File     : Natural := No_Mapping_File;\n+      Project          : Project_Id := No_Project;\n+      Syntax_Only      : Boolean := False;\n+      Output_Is_Object : Boolean := True;\n+   end record;\n+   --  Data recorded for each compilation process spawned\n+\n+   type Comp_Data_Arr is array (Positive range <>) of Compilation_Data;\n+   type Comp_Data_Ptr is access Comp_Data_Arr;\n+   Running_Compile : Comp_Data_Ptr;\n+   --  Used to save information about outstanding compilations\n+\n+   Outstanding_Compiles : Natural := 0;\n+   --  Current number of outstanding compiles\n+\n    -------------------------\n    -- Note on terminology --\n    -------------------------\n@@ -2442,25 +2468,6 @@ package body Make is\n       Initialize_ALI_Data   : Boolean  := True;\n       Max_Process           : Positive := 1)\n    is\n-      No_Mapping_File : constant Natural := 0;\n-\n-      type Compilation_Data is record\n-         Pid              : Process_Id;\n-         Full_Source_File : File_Name_Type;\n-         Lib_File         : File_Name_Type;\n-         Source_Unit      : Unit_Name_Type;\n-         Mapping_File     : Natural := No_Mapping_File;\n-         Project          : Project_Id := No_Project;\n-         Syntax_Only      : Boolean := False;\n-         Output_Is_Object : Boolean := True;\n-      end record;\n-\n-      Running_Compile : array (1 .. Max_Process) of Compilation_Data;\n-      --  Used to save information about outstanding compilations\n-\n-      Outstanding_Compiles : Natural := 0;\n-      --  Current number of outstanding compiles\n-\n       Source_Unit : Unit_Name_Type;\n       --  Current source unit\n \n@@ -3150,6 +3157,9 @@ package body Make is\n    begin\n       pragma Assert (Args'First = 1);\n \n+      Outstanding_Compiles := 0;\n+      Running_Compile := new Comp_Data_Arr (1 .. Max_Process);\n+\n       --  Package and Queue initializations\n \n       Good_ALI.Init;\n@@ -5401,6 +5411,15 @@ package body Make is\n \n       Bad_Compilation.Init;\n \n+      --  If project files are used, create the mapping of all the sources,\n+      --  so that the correct paths will be found. Otherwise, if there is\n+      --  a file which is not a source with the same name in a source directory\n+      --  this file may be incorrectly found.\n+\n+      if Main_Project /= No_Project then\n+         Prj.Env.Create_Mapping (Project_Tree);\n+      end if;\n+\n       Current_Main_Index := Main_Index;\n \n       --  Here is where the make process is started\n@@ -7378,10 +7397,18 @@ package body Make is\n    ------------------------\n \n    procedure Sigint_Intercepted is\n+      SIGINT  : constant := 2;\n    begin\n       Set_Standard_Error;\n       Write_Line (\"*** Interrupted ***\");\n       Delete_All_Temp_Files;\n+\n+      --  Send SIGINT to all oustanding compilation processes spawned\n+\n+      for J in 1 .. Outstanding_Compiles loop\n+         Kill (Running_Compile (J).Pid, SIGINT, 1);\n+      end loop;\n+\n       OS_Exit (1);\n    end Sigint_Intercepted;\n "}, {"sha": "1d97d80231af50fce7c0ca196f889235397f2e62", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=15cf0748477830cc0b490111a345dc36bb06de14", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Fmap;\n with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -982,6 +983,56 @@ package body Prj.Env is\n       end if;\n    end Create_Config_Pragmas_File;\n \n+   --------------------\n+   -- Create_Mapping --\n+   --------------------\n+\n+   procedure Create_Mapping (In_Tree : Project_Tree_Ref) is\n+      The_Unit_Data : Unit_Data;\n+      Data          : File_Name_Data;\n+\n+   begin\n+      Fmap.Reset_Tables;\n+\n+      for Unit in 1 .. Unit_Table.Last (In_Tree.Units) loop\n+         The_Unit_Data := In_Tree.Units.Table (Unit);\n+\n+         --  Process only if the unit has a valid name\n+\n+         if The_Unit_Data.Name /= No_Name then\n+            Data := The_Unit_Data.File_Names (Specification);\n+\n+            --  If there is a spec, put it in the mapping\n+\n+            if Data.Name /= No_File then\n+               if Data.Path = Slash then\n+                  Fmap.Add_Forbidden_File_Name (Data.Name);\n+               else\n+                  Fmap.Add_To_File_Map\n+                    (Unit_Name => Unit_Name_Type (The_Unit_Data.Name),\n+                     File_Name => Data.Name,\n+                     Path_Name => File_Name_Type (Data.Path));\n+               end if;\n+            end if;\n+\n+            Data := The_Unit_Data.File_Names (Body_Part);\n+\n+            --  If there is a body (or subunit) put it in the mapping\n+\n+            if Data.Name /= No_File then\n+               if Data.Path = Slash then\n+                  Fmap.Add_Forbidden_File_Name (Data.Name);\n+               else\n+                  Fmap.Add_To_File_Map\n+                    (Unit_Name => Unit_Name_Type (The_Unit_Data.Name),\n+                     File_Name => Data.Name,\n+                     Path_Name => File_Name_Type (Data.Path));\n+               end if;\n+            end if;\n+         end if;\n+      end loop;\n+   end Create_Mapping;\n+\n    -------------------------\n    -- Create_Mapping_File --\n    -------------------------"}, {"sha": "83da472229fe3ce634d9d84ac2f726b7a401b8e1", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15cf0748477830cc0b490111a345dc36bb06de14/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=15cf0748477830cc0b490111a345dc36bb06de14", "patch": "@@ -35,6 +35,11 @@ package Prj.Env is\n    procedure Print_Sources (In_Tree : Project_Tree_Ref);\n    --  Output the list of sources, after Project files have been scanned\n \n+   procedure Create_Mapping (In_Tree : Project_Tree_Ref);\n+   --  Create in memory mapping from the sources of all the projects (in body\n+   --  of package Fmap), so that Osint.Find_File will find the correct path\n+   --  corresponding to a source.\n+\n    procedure Create_Mapping_File\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref;"}]}