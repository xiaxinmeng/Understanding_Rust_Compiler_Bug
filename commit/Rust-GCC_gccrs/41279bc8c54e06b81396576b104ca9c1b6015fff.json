{"sha": "41279bc8c54e06b81396576b104ca9c1b6015fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEyNzliYzhjNTRlMDZiODEzOTY1NzZiMTA0Y2E5YzFiNjAxNWZmZg==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2010-03-12T04:00:32Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2010-03-12T04:00:32Z"}, "message": "undo some of the damage\n\nFrom-SVN: r157399", "tree": {"sha": "c967cfd01c1b8e2ab1072bea11f3bf9aa745ebf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c967cfd01c1b8e2ab1072bea11f3bf9aa745ebf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41279bc8c54e06b81396576b104ca9c1b6015fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41279bc8c54e06b81396576b104ca9c1b6015fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41279bc8c54e06b81396576b104ca9c1b6015fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41279bc8c54e06b81396576b104ca9c1b6015fff/comments", "author": null, "committer": null, "parents": [{"sha": "bbf92edb2c9b2fd960b10d921f166fb4b05f3cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf92edb2c9b2fd960b10d921f166fb4b05f3cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf92edb2c9b2fd960b10d921f166fb4b05f3cbd"}], "stats": {"total": 109, "additions": 2, "deletions": 107}, "files": [{"sha": "b1d095fbba272ca25d65baec1e591fcd9448346e", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 2, "deletions": 67, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41279bc8c54e06b81396576b104ca9c1b6015fff/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41279bc8c54e06b81396576b104ca9c1b6015fff/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=41279bc8c54e06b81396576b104ca9c1b6015fff", "patch": "@@ -2,19 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n-<<<<<<< .mine\n- * It has been AutoGen-ed  September  5, 2009 at 01:31:09 PM by AutoGen 5.9.9\n-=======\n- * It has been AutoGen-ed  Friday January 29, 2010 at 04:49:43 PM MET\n->>>>>>> .r157397\n+ * It has been AutoGen-ed  March 11, 2010 at 07:56:32 PM by AutoGen 5.10.1\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-<<<<<<< .mine\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Sep  5 13:31:09 PDT 2009\n-=======\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jan 29 16:49:43 MET 2010\n->>>>>>> .r157397\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Mar 11 19:56:32 PST 2010\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -6122,63 +6114,6 @@ static const char* apzRs6000_ParamPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n-<<<<<<< .mine\n- *  Description of Sco_Math fix\n- */\n-tSCC zSco_MathName[] =\n-     \"sco_math\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zSco_MathList[] =\n-  \"math.h\\0*/math.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzSco_MathMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zSco_MathSelect0[] =\n-       \"inline double abs\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zSco_MathBypass0[] =\n-       \"__GNUG__\";\n-\n-#define    SCO_MATH_TEST_CT  2\n-static tTestDesc aSco_MathTests[] = {\n-  { TT_NEGREP,   zSco_MathBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zSco_MathSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Sco_Math\n- */\n-static const char* apzSco_MathPatch[] = { sed_cmd_z,\n-    \"-e\", \"/#define.*__fp_class(a) \\\\\\\\/i\\\\\\n\\\n-#ifndef __GNUC__\\n\",\n-    \"-e\", \"/.*__builtin_generic/a\\\\\\n\\\n-#else\\\\\\n\\\n-#define __fp_class(a) \\\\\\\\\\\\\\n\\\n-\\\\  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\\\n-\\\\   __fpclassifyl(a), \\\\\\\\\\\\\\n\\\n-\\\\    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\\\n-\\\\      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\\\n-#endif\\n\",\n-    \"-e\", \"/extern \\\"C++\\\"/N;/inline double abs/i\\\\\\n\\\n-#ifndef __GNUC__\\n\",\n-    \"-e\", \"/inline long double trunc/N;/inline long double trunc.*}.*extern \\\"C++\\\"/a\\\\\\n\\\n-#endif /* ! __GNUC__ */\\n\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n-=======\n->>>>>>> .r157397\n  *  Description of Solaris_Complex fix\n  */\n tSCC zSolaris_ComplexName[] ="}, {"sha": "88d2eebe2a07374ffdee47f600593b1a00a25d5e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41279bc8c54e06b81396576b104ca9c1b6015fff/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41279bc8c54e06b81396576b104ca9c1b6015fff/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=41279bc8c54e06b81396576b104ca9c1b6015fff", "patch": "@@ -3248,45 +3248,6 @@ fix = {\n \n \n /*\n-<<<<<<< .mine\n- *  On OpenServer and on UnixWare 7, <math.h> uses the native compiler\n- *  __builtin_generic. We fix that usage to use the GCC equivalent.\n- * It also has a plethora of inline functions that conflict with libstdc++.\n- */\n-fix = {\n-    hackname = sco_math;\n-    files    = math.h, '*/math.h';\n-    select   = \"inline double abs\";\n-    bypass   = \"__GNUG__\";\n-    sed      = \"/#define.*__fp_class(a) \\\\\\\\/i\\\\\\n\"\n-\t       \"#ifndef __GNUC__\\n\";\n-    sed      =\n-\"/.*__builtin_generic/a\\\\\\n\"\n-\"#else\\\\\\n\"\n-\"#define __fp_class(a) \\\\\\\\\\\\\\n\"\n-\"\\\\  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\"\n-\"\\\\   __fpclassifyl(a), \\\\\\\\\\\\\\n\"\n-\"\\\\    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\"\n-\"\\\\      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\"\n-\"#endif\\n\";\n-\n-    sed      = \"/extern \\\"C++\\\"/N;\"\n-\t       \"/inline double abs/i\\\\\\n\"\n-               \"#ifndef __GNUC__\\n\";\n-    sed      = \"/inline long double trunc/N;\"\n-\t       \"/inline long double trunc.*}.*extern \\\"C++\\\"/a\\\\\\n\"\n-\t       \"#endif /* ! __GNUC__ */\\n\";\n-\n-    test_text =\n-    \"#define __fp_class(a) \\\\\\\\\\n\"\n-    \" __builtin_generic(a,\\\"ld:__fplcassifyl;f:__fpclassifyf;:__fpclassify\\\")\\n\";\n-\n-};\n-\n-\n-/*\n-=======\n->>>>>>> .r157397\n  * Solaris 10+ complex.h defines _Complex_I and _Imaginary_I in terms of\n  * themselves, which are Sun Studio compiler intrinsics.  Remove _Imaginary_I\n  * and imaginary definitions which are not supported by GCC.\n@@ -3390,7 +3351,6 @@ fix = {\n     c_fix_arg = \"^#define[ \\t]+signbit\\\\(x\\\\)[ \\t]+__builtin_signbit\\\\(x\\\\)\";\n     test_text =\n     '#ident\t\"@(#)math_c99.h\t1.9\t04/11/01 SMI\"'\"\\n\"\n-    \"#undef\tsignbit\\n\"\n     \"#define\tsignbit(x)\t__builtin_signbit(x)\";\n };\n "}]}