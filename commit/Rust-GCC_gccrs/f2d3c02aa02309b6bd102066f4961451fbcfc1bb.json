{"sha": "f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkM2MwMmFhMDIzMDliNmJkMTAyMDY2ZjQ5NjE0NTFmYmNmYzFiYg==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2001-09-21T11:41:43Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2001-09-21T11:41:43Z"}, "message": "s390.md: Changed attributes for scheduling.\n\n2001-09-21  Hartmut Penner  <hpenner@de.ibm.com>\n\n        * s390.md: Changed attributes for scheduling.\n        * s390.c: (s390_adjust_cost, s390_adjust_priority)\n        Changed scheduling\n\nFrom-SVN: r45725", "tree": {"sha": "3cb7725adaf6bb62f615835bda0633155edc6fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cb7725adaf6bb62f615835bda0633155edc6fda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/comments", "author": null, "committer": null, "parents": [{"sha": "01c62aea29995a2530f8d9a5a28e7987af6da269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c62aea29995a2530f8d9a5a28e7987af6da269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c62aea29995a2530f8d9a5a28e7987af6da269"}], "stats": {"total": 589, "additions": 271, "deletions": 318}, "files": [{"sha": "4fed3f7f8d4b05297f500f09ee553db0d3802b9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "patch": "@@ -1,3 +1,9 @@\n+2001-09-21  Hartmut Penner  <hpenner@de.ibm.com>\n+\n+\t* s390.md: Changed attributes for scheduling.\n+\t* s390.c: (s390_adjust_cost, s390_adjust_priority)\n+\tChanged scheduling\n+\n 2001-09-21  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \tTable-driven attributes."}, {"sha": "e4bc735209e4f210fca10a85df4dcf3d3e09e4d8", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 46, "deletions": 13, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "patch": "@@ -46,6 +46,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n static int s390_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n+static int s390_adjust_priority PARAMS ((rtx, int));\n \n #undef  TARGET_ASM_FUNCTION_PROLOGUE \n #define TARGET_ASM_FUNCTION_PROLOGUE s390_function_prologue\n@@ -62,6 +63,9 @@ static int s390_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n #undef  TARGET_SCHED_ADJUST_COST\n #define TARGET_SCHED_ADJUST_COST s390_adjust_cost\n \n+#undef  TARGET_SCHED_ADJUST_PRIORITY\n+#define TARGET_SCHED_ADJUST_PRIORITY s390_adjust_priority\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n extern int reload_completed;\n@@ -1587,7 +1591,9 @@ addr_generation_dependency_p (dep_rtx, insn)\n    Data dependencies are all handled without delay.  However, if a\n    register is modified and subsequently used as base or index \n    register of a memory reference, at least 4 cycles need to pass\n-   between setting and using the register to avoid pipeline stalls.  */\n+   between setting and using the register to avoid pipeline stalls.  \n+   A exception is the LA instruction. A address generated by LA can\n+   be used by introducing only a one cycle stall on the pipeline.  */\n \n static int\n s390_adjust_cost (insn, link, dep_insn, cost)\n@@ -1610,53 +1616,80 @@ s390_adjust_cost (insn, link, dep_insn, cost)\n   if (recog_memoized (insn) < 0 || recog_memoized (dep_insn) < 0)\n     return cost;\n \n-  /* If cost equal 1 nothing needs to be checked. */\n-\n-  if (cost == 1)\n-    {\n-      return cost;\n-    }\n-\n   dep_rtx = PATTERN (dep_insn);\n \n   if (GET_CODE (dep_rtx) == SET)\n     {\n       if (addr_generation_dependency_p (dep_rtx, insn))\n \t{\n+\t  cost += (get_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n \t  if (DEBUG_SCHED)\n \t    {\n \t      fprintf (stderr, \"\\n\\nAddress dependency detected: cost %d\\n\",\n \t\t       cost);\n \t      debug_rtx (dep_insn);\n \t      debug_rtx (insn);\n \t    }\n-\t  return cost;\n \t}\n     }\n-\n   else if (GET_CODE (dep_rtx) == PARALLEL)\n     {\n       for (i = 0; i < XVECLEN (dep_rtx, 0); i++)\n \t{\n \t  if (addr_generation_dependency_p (XVECEXP (dep_rtx, 0, i),\n \t\t\t\t\t    insn))\n \t    {\n+\t      cost += (get_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n \t      if (DEBUG_SCHED)\n \t\t{\n \t\t  fprintf (stderr, \"\\n\\nAddress dependency detected: cost %d\\n\"\n \t\t\t   ,cost);\n \t\t  debug_rtx (dep_insn);\n \t\t  debug_rtx (insn);\n \t\t}\n-\t      return cost;\n \t    }\n \t}\n     }\n \n-  /* default cost.  */\n-  return 1;\n+  return cost;\n+}\n+\n+\n+/* A C statement (sans semicolon) to update the integer scheduling priority\n+   INSN_PRIORITY (INSN).  Reduce the priority to execute the INSN earlier,\n+   increase the priority to execute INSN later.  Do not define this macro if\n+   you do not need to adjust the scheduling priorities of insns. \n+\n+   A LA instruction maybe scheduled later, since the pipeline bypasses the\n+   calculated value.  */\n+\n+static int\n+s390_adjust_priority (insn, priority)\n+     rtx insn ATTRIBUTE_UNUSED;\n+     int priority;\n+{\n+  if (! INSN_P (insn))\n+    return priority;\n+\n+  if (GET_CODE (PATTERN (insn)) == USE \n+      || GET_CODE (PATTERN (insn)) == CLOBBER)\n+    return priority;\n+  \n+  switch (get_attr_type (insn))\n+    {\n+    default:\n+      break;\n+      \n+    case TYPE_LA:\n+      if (priority >= 0 && priority < 0x01000000)\n+\tpriority <<= 3;\n+      break;\n+    }\n+  \n+  return priority;\n }\n \n+\n /* Pool concept for Linux 390:\n    - Function prologue saves used register \n    - literal pool is dumped in prologue and  jump across with bras"}, {"sha": "853ac9bcfc67eebb76a4c0ad5b370d1caf4c7daa", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 219, "deletions": 305, "changes": 524, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d3c02aa02309b6bd102066f4961451fbcfc1bb/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=f2d3c02aa02309b6bd102066f4961451fbcfc1bb", "patch": "@@ -49,80 +49,62 @@\n \n ;; Insn type.  Used to default other attribute values.\n \n-;\n-; Insn are devide in two classes:\n-; mem: Use of base and/or index register for address generation\n-; reg: Use of second and third register not for address generation\n-;\n \n-(define_attr \"atype\" \"mem,reg\" (const_string \"reg\"))\n+;; Define an insn type attribute.  This is used in function unit delay\n+;; computations.\n \n-;\n-; Insn may take 1,2,3 or many cycles\n-; For the scheduling it does not matter, if a instruction has\n-; a issue_delay from 4 or more cycles, since the address dependency \n-; between two insns needs at least 4 cycles.\n-;\n+(define_attr \"type\" \"integer,load,lr,la,store,imul,lmul,fmul,idiv,ldiv,fdiv,branch,jsr,other,o2,o3\"\n+  (const_string \"integer\"))\n \n-(define_attr \"cycle\" \"1,2,3,n\" (const_string \"1\"))\n+;; Insn are devide in two classes:\n+;;   mem: Insn accesssing memory\n+;;   reg: Insn operands all in registers\n \n-;\n-; There are three classes of insns:\n-; set:  instruction setting a (potential) address relevant register\n-; xset: instruction setting no address relevant register\n-; la:   instruction setting a (potential) address relevant register,\n-;       but behave 'better' on the pipeline\n-;\n+(define_attr \"atype\" \"reg,mem\"\n+  (const_string \"reg\"))\n \n-(define_attr \"type\" \"set,xset,la\" (const_string \"xset\"))\n+;; Generic pipeline function unit.  \n \n-;\n-; Set operations changing a target register, which could be used for\n-; address generation. Adjust cost will check, if realy applicable. \n-;\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"integer\") 1 1)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"set\")\n-       (eq_attr \"cycle\" \"1\"))\n-  5 1 [(eq_attr \"atype\" \"mem\")] )\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"load\") 1 1)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"set\")\n-       (eq_attr \"cycle\" \"2\")) 5 2)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"la\") 1 1)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"set\")\n-       (eq_attr \"cycle\" \"3\")) 5 3)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"lr\") 1 1)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"set\")\n-       (eq_attr \"cycle\" \"n\")) 5 4)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"store\") 1 1)\n \n-(define_function_unit \"memory\" 1 0\n-  (eq_attr \"type\" \"la\") 2 1)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"jsr\") 5 5)\n \n-;\n-; xset insns, which don't set any valid address register.\n-; Only the issue delay matters.\n-; \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"imul\") 7 7)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fmul\") 6 6)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"xset\")\n-       (eq_attr \"cycle\" \"1\")) 1 1)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"idiv\") 33 33)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"xset\")\n-       (eq_attr \"cycle\" \"2\")) 1 2)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fdiv\") 33 33)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"xset\")\n-       (eq_attr \"cycle\" \"3\")) 1 3)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"o2\") 2 2)\n \n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"xset\")\n-       (eq_attr \"cycle\" \"n\")) 1 4)\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"o3\") 3 3)\n \n-; Operand type. Used to default length attribute values\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"other\") 5 5)\n+\n+;; Operand type. Used to default length attribute values\n \n (define_attr \"op_type\"\n   \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE\"\n@@ -150,7 +132,7 @@\n \n ;; Define attributes for `asm' insns.\n \n-(define_asm_attributes [(set_attr \"type\" \"xset\")\n+(define_asm_attributes [(set_attr \"type\" \"other\")\n                         (set_attr \"op_type\" \"NN\")])\n \n ;;\n@@ -279,7 +261,7 @@\n   return \\\"tmhh\\\\t%0,%x1\\\";\n }\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"integer\")])\n \n \n (define_insn \"*cmpdi_tm\"\n@@ -319,7 +301,7 @@\n     return \\\"tmll\\\\t%0,%x1\\\";\n }\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"integer\")])\n \n \n (define_insn \"*ltgr\"\n@@ -331,7 +313,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_64BIT\"\n   \"ltgr\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"type\"    \"integer\")])\n \n (define_insn \"*cmpdi_ccs_0_64\"\n   [(set (reg 33)\n@@ -340,7 +322,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_64BIT\"\n   \"ltgr\\\\t%0,%0\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"type\"    \"integer\")])\n \n (define_insn \"*cmpdi_ccs_0_31\"\n   [(set (reg 33)\n@@ -349,7 +331,7 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"srda\\\\t%0,0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"type\"    \"integer\")])\n \n (define_insn \"*cmpdi_ccs\"\n   [(set (reg 33)\n@@ -403,8 +385,7 @@\n   operands[1] = GEN_INT (1 << (15 - INTVAL(operands[2])));\n   return \\\"tmh\\\\t%0,%x1\\\";\n }\"\n-  [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"type\"    \"xset\")])\n+  [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*cmpsi_tm\"\n   [(set (reg 33)\n@@ -430,9 +411,7 @@\n     }\n   return \\\"tml\\\\t%0,%x1\\\";\n }\"\n-  [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"xset\")])\n-\n+  [(set_attr \"op_type\" \"RX\")])\n \n (define_insn \"*ltr\"\n   [(set (reg 33)\n@@ -442,8 +421,7 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"ltr\\\\t%2,%0\"\n-  [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"type\"    \"set\")])\n+  [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*icm15\"\n   [(set (reg 33)\n@@ -454,8 +432,7 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,15,%0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*icm15_cconly\"\n   [(set (reg 33)\n@@ -465,17 +442,15 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,15,%0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpsi_ccs_0\"\n   [(set (reg 33)\n         (compare (match_operand:SI 0 \"register_operand\" \"d\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"ltr\\\\t%0,%0\"\n-  [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"type\"    \"set\")])\n+  [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*cmpsidi_ccs\"\n   [(set (reg 33)\n@@ -484,8 +459,7 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"ch\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpsi_ccs\"\n   [(set (reg 33)\n@@ -497,8 +471,7 @@\n    chi\\\\t%0,%c1\n    c\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR,RI,RX\")\n-   (set_attr \"atype\"   \"reg,reg,mem\")\n-   (set_attr \"type\"    \"xset,xset,xset\")])\n+   (set_attr \"atype\"   \"reg,reg,mem\")])\n    \n (define_insn \"*cmpsi_ccu\"\n   [(set (reg 33)\n@@ -518,9 +491,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(4,%R0),%1\"\n    [(set_attr \"op_type\" \"SS\")\n-    (set_attr \"atype\"   \"mem\")\n-    (set_attr \"type\"    \"xset\")])\n-\n+    (set_attr \"atype\"   \"mem\")])\n \n ; HI instructions\n \n@@ -533,17 +504,15 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,3,%0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmphi_cct_0\"\n   [(set (reg 33)\n         (compare (match_operand:HI 0 \"register_operand\" \"d\")\n                  (match_operand:HI 1 \"const0_operand\"   \"\")))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"tml\\\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"xset\")])\n+  [(set_attr \"op_type\" \"RX\")])\n \n (define_insn \"*cmphi_ccs_0\"\n   [(set (reg 33)\n@@ -553,8 +522,7 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,3,%0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmphi_ccu\"\n   [(set (reg 33)\n@@ -563,8 +531,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clm\\\\t%0,3,%1\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmphi_ccu_mem\"\n   [(set (reg 33)\n@@ -573,8 +540,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(2,%R0),%1\"\n   [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n \n ; QI instructions\n@@ -588,8 +554,7 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,1,%0\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*tm_0\"\n   [(set (reg 33)\n@@ -600,17 +565,15 @@\n    INTVAL(operands[1]) >= 0 && INTVAL(operands[1]) < 256\"\n   \"tm\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpqi_cct_0\"\n   [(set (reg 33)\n         (compare (match_operand:QI 0 \"register_operand\" \"d\")\n                  (match_operand:QI 1 \"const0_operand\"   \"\")))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"tml\\\\t%0,255\"\n-  [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"type\"    \"xset\")])\n+  [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*cmpqi_ccs_0\"\n   [(set (reg 33)\n@@ -619,8 +582,7 @@\n    (clobber (match_scratch:QI 2 \"=d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,1,%0\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"type\"    \"xset\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*cmpqi_ccu_0\"\n   [(set (reg 33)\n@@ -629,8 +591,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"cli\\\\t%0,0\"\n   [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpqi_ccu\"\n   [(set (reg 33)\n@@ -639,8 +600,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clm\\\\t%0,1,%1\"\n   [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpqi_ccu_immed\"\n   [(set (reg 33)\n@@ -650,8 +610,7 @@\n    INTVAL(operands[1]) >= 0 && INTVAL(operands[1]) < 256\"\n   \"cli\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*cmpqi_ccu_mem\"\n   [(set (reg 33)\n@@ -660,8 +619,7 @@\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(1,%R0),%1\"\n   [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n \n ; DF instructions\n@@ -672,17 +630,15 @@\n                  (match_operand:DF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltdbr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"    \"set\")])\n+   [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*cmpdf_ccs_0_ibm\"\n   [(set (reg 33)\n         (compare (match_operand:DF 0 \"register_operand\" \"f\")\n                  (match_operand:DF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"ltdr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"    \"set\")])\n+   [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*cmpdf_ccs\"\n   [(set (reg 33)\n@@ -693,8 +649,7 @@\n    cdbr\\\\t%0,%1\n    cdb\\\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"atype\"   \"reg,mem\")  \n-    (set_attr \"type\"    \"xset,xset\")])\n+    (set_attr \"atype\"   \"reg,mem\")])  \n \n (define_insn \"*cmpdf_ccs_ibm\"\n   [(set (reg 33)\n@@ -705,8 +660,7 @@\n    cdr\\\\t%0,%1\n    cd\\\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"atype\"   \"reg,mem\")  \n-    (set_attr \"type\"    \"xset,xset\")])\n+    (set_attr \"atype\"   \"reg,mem\")])  \n \n \n ; SF instructions\n@@ -717,17 +671,15 @@\n                  (match_operand:SF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltebr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"    \"set\")])\n+   [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*cmpsf_ccs_0_ibm\"\n   [(set (reg 33)\n         (compare (match_operand:SF 0 \"register_operand\" \"f\")\n                  (match_operand:SF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lter\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"    \"set\")])\n+   [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -738,8 +690,7 @@\n    cebr\\\\t%0,%1\n    ceb\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR,RX\")\n-   (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"xset,xset\")])\n+   (set_attr \"atype\"   \"reg,mem\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -750,8 +701,7 @@\n    cer\\\\t%0,%1\n    ce\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR,RX\")\n-   (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"xset,xset\")])\n+   (set_attr \"atype\"   \"reg,mem\")])\n \n \n ;;\n@@ -803,7 +753,7 @@\n }\"\n   [(set_attr \"op_type\" \"NN,NN,RS,RS,SS\")\n    (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")\n-   (set_attr \"type\"    \"set\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"length\"  \"12,8,10,10,*\")])\n \n ;\n@@ -839,8 +789,8 @@\n    stg\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\t\n    [(set_attr \"op_type\" \"RRE,RI,RIL,RXE,RXE,SS\")\n-    (set_attr \"atype\"   \"reg,reg,reg,mem,mem,mem\")\n-    (set_attr \"type\"    \"set,set,la,set,set,set\")])\n+    (set_attr \"type\"    \"integer,integer,la,integer,integer,integer\")\n+    (set_attr \"atype\"   \"reg,reg,reg,mem,mem,mem\")])\n \n (define_insn \"*movdi_31\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q\")\n@@ -883,7 +833,7 @@\n }\"\n   [(set_attr \"op_type\" \"NN,NN,RS,RS,SS\")\n    (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")\n-   (set_attr \"type\"    \"set\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"length\"  \"4,8,8,8,*\")])\n \n \n@@ -919,8 +869,8 @@\n    st\\\\t%1,%0\n    mvc\\\\t%O0(4,%R0),%1\"\t\n   [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"type\"    \"lr,*,load,store,store\")\t\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n \n \n ;\n@@ -937,9 +887,7 @@\n    lh\\\\t%0,%1\n    sth\\\\t%1,%0\"\n   [(set_attr \"op_type\" \"RR,RI,RX,RX\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n-\n+   (set_attr \"atype\"   \"reg,reg,mem,mem\")])\n \n ;\n ; movqi instruction pattern(s).\n@@ -956,9 +904,7 @@\n    stc\\\\t%1,%0\n    mvi\\\\t%0,%b1\"\n   [(set_attr \"op_type\" \"RR,RI,RXE,RX,SI\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n-\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n \n (define_insn \"movqi\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q\")\n@@ -971,9 +917,7 @@\n    stc\\\\t%1,%0\n    mvi\\\\t%0,%b1\"\n   [(set_attr \"op_type\" \"RR,RX,RX,RX,SI\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n-\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n \n ;\n ; moveqstrictqi instruction pattern(s).\n@@ -1003,8 +947,7 @@\n    icm\\\\t%0,3,%1\n    stcm\\\\t%1,3,%0\"\n   [(set_attr \"op_type\" \"RS,RS\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n \n ;\n@@ -1020,8 +963,7 @@\n    l\\\\t%0,%1\n    st\\\\t%1,%0\"\n   [(set_attr \"op_type\" \"RR,RS,RS\")\n-   (set_attr \"atype\"   \"reg,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"reg,mem,mem\")])\n \n \n ;\n@@ -1051,8 +993,7 @@\n    lgr\\\\t%0,%1\n    mvc\\\\t%O0(8,%R0),%1\"\t\n   [(set_attr \"op_type\" \"RR,RX,RX,RXE,RXE,RR,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,mem,mem,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"reg,mem,mem,mem,mem,mem,mem\")])\n \n (define_insn \"*movdf_31\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,m,d,Q\")\n@@ -1110,8 +1051,7 @@\n    lgr\\\\t%0,%1\n    mvc\\\\t%O0(8,%R0),%1\"\t\n   [(set_attr \"op_type\" \"RXE,RXE,RR,SS\")\n-   (set_attr \"atype\"   \"mem,mem,mem,mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"atype\"   \"mem,mem,mem,mem\")])\n \n (define_insn \"*movdf_soft_31\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=!d,d,m,Q\")\n@@ -1261,8 +1201,7 @@\n     return \\\"lmg\\\\t%1,%0,%2\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n-    (set_attr \"type\"    \"set\")])\n+    (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*load_multiple_si\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -1280,8 +1219,7 @@\n     return \\\"lm\\\\t%1,%0,%2\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n-    (set_attr \"type\"    \"set\")])\n+    (set_attr \"atype\"   \"mem\")])\n \n ;\n ; store multiple pattern(s). \n@@ -1340,7 +1278,7 @@\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n     (set_attr \"atype\"   \"mem\")\n-    (set_attr \"type\"    \"xset\")])\n+    (set_attr \"type\"    \"other\")])\n \n \n (define_insn \"*store_multiple_si\"\n@@ -1360,7 +1298,7 @@\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n     (set_attr \"atype\"   \"mem\")\n-    (set_attr \"type\"    \"xset\")])\n+    (set_attr \"type\"    \"other\")])\n \n ;;\n ;; String instructions.\n@@ -1739,7 +1677,7 @@\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"   \"other\")\n    (set_attr \"length\"  \"8\")])\n \n (define_insn \"clrstrsi_31\"\n@@ -1753,7 +1691,7 @@\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"other\")\n    (set_attr \"length\"  \"8\")])\n \n ;\n@@ -1905,7 +1843,7 @@\n   \"clc\\\\t%O0(%c2,%R0),%1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"other\")])\n \n ; Compare a block that is larger than 255 bytes in length.\n \n@@ -1921,7 +1859,7 @@\n   \"clcl\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"other\")])\n \n (define_insn \"cmpstr_31\"\n   [(set (reg:CCU 33)\n@@ -1935,7 +1873,7 @@\n   \"clcl\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"other\")])\n \n ; Convert condition code to integer in range (-1, 0, 1)\n \n@@ -1954,7 +1892,7 @@\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"16\")\n    (set_attr \"atype\"   \"reg\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"other\")])\n \n (define_insn \"cmpint_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -1971,7 +1909,7 @@\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"22\")\n    (set_attr \"atype\"   \"reg\")\n-   (set_attr \"type\"    \"xset\")])\n+   (set_attr \"type\"    \"other\")])\n \n ;;\n ;;- Conversion instructions.\n@@ -1989,8 +1927,7 @@\n    lgfr\\\\t%0,%1\n    lgf\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"reg,mem\")])\n \n \n ;\n@@ -2005,9 +1942,7 @@\n   \"sllg\\\\t%0,%1,48\\;srag\\\\t%0,%0,48\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"12\")\n-   (set_attr \"cycle\"   \"2\")  \n-   (set_attr \"type\"    \"set\")])\n-\n+   (set_attr \"type\"   \"o2\")])  \n \n ;\n ; extendqidi2 instruction pattern(s).\n@@ -2021,9 +1956,7 @@\n   \"sllg\\\\t%0,%1,56\\;srag\\\\t%0,%0,56\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"12\")\n-   (set_attr \"cycle\"   \"2\")\n-   (set_attr \"type\"    \"set\")])\n-\n+   (set_attr \"type\"    \"o2\")])\n \n ;\n ; extendhisi2 instruction pattern(s).\n@@ -2039,9 +1972,8 @@\n    lr\\\\t%0,%1\\;sll\\\\t%0,16\\;sra\\\\t%0,16\n    lh\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"NN,NN,RX\")\n-   (set_attr \"cycle\"   \"2,3,1\")\n+   (set_attr \"type\"   \"o2,o3,integer\")\n    (set_attr \"atype\"   \"reg,reg,mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"8,10,*\")])\n \n \n@@ -2058,9 +1990,8 @@\n    sll\\\\t%0,24\\;sra\\\\t%0,24\n    icm\\\\t%0,8,%1\\;sra\\\\t%0,24\"\n   [(set_attr \"op_type\" \"NN,NN\")\n-   (set_attr \"cycle\"   \"2\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"8,8\")])\n \n \n@@ -2077,9 +2008,8 @@\n    sll\\\\t%0,24\\;sra\\\\t%0,24\n    icm\\\\t%0,8,%1\\;sra\\\\t%0,24\"\n   [(set_attr \"op_type\" \"NN,NN\")\n-   (set_attr \"cycle\"   \"2\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"8,8\")])\n \n \n@@ -2095,8 +2025,7 @@\n    llgfr\\\\t%0,%1\n    llgf\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"reg,mem\")])\n \n \n ;\n@@ -2111,11 +2040,9 @@\n    llgfr\\\\t%0,%1\\;iilh\\\\t%0,0\n    llgh\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"NN,RXE\")\n-   (set_attr \"cycle\"   \"2,1\")\n+   (set_attr \"type\"   \"o2,integer\")\n    (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"length\"  \"12,*\")\t\n-   (set_attr \"type\"    \"set\")])\n-\n+   (set_attr \"length\"  \"12,*\")])\t\n \n ;\n ; zero_extendqidi2 instruction pattern(s)\n@@ -2130,9 +2057,8 @@\n    sllg\\\\t%0,%1,56\\;srlg\\\\t%0,%0,56\n    llgc\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"NN,RXE\")\n-   (set_attr \"cycle\"   \"2,1\")\n+   (set_attr \"type\"   \"o2,integer\")\n    (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"12,*\")])\n \n \n@@ -2174,9 +2100,8 @@\n    icm\\\\t%0,12,%2\n    icm\\\\t%0,12,%1\\;srl\\\\t%0,16\"\n   [(set_attr \"op_type\" \"RX,NN\")\n-   (set_attr \"cycle\"   \"1,2\")\n+   (set_attr \"type\"   \"integer,o2\")\n    (set_attr \"atype\"   \"reg,mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"*,8\")])\n \n \n@@ -2192,9 +2117,8 @@\n   \"\"\n   \"sr\\\\t%0,%0\\;ic\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"2\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")\n    (set_attr \"length\"  \"6\")])\n \n (define_insn \"zero_extendqisi2_reg_31\"\n@@ -2205,8 +2129,7 @@\n   \"\"\n   \"icm\\\\t%0,14,%2\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"atype\"   \"mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"*zero_extendqisi2_64\"\n   [(set                 (match_operand:SI 0 \"register_operand\" \"=!d,d\")\n@@ -2216,7 +2139,7 @@\n    sllg\\\\t%0,%1,56\\;srlg\\\\t%0,%0,56\n    llgc\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"NN,RXE\")\n-   (set_attr \"cycle\"   \"2,1\")\n+   (set_attr \"type\"   \"o2,integer\")\n    (set_attr \"atype\"   \"reg,mem\")\n    (set_attr \"length\"  \"12,*\")])\n \n@@ -2319,7 +2242,7 @@\n   \"TARGET_64BIT\"\n   \"sllg\\\\t%0,%1,56\\;srlg\\\\t%0,%0,56\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"2\")\t\n+   (set_attr \"type\"    \"o2\")\t\n    (set_attr \"length\"  \"12\")])\n \n \n@@ -2370,7 +2293,7 @@\n   \"TARGET_64BIT\"\n   \"iilh\\\\t%0,0\\;nill\\\\t%0,0x00FF\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"2\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"length\"  \"8\")])\n \n \n@@ -2436,7 +2359,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cgdbr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"   \"other\")])\n \n ;\n ; fixuns_truncdfsi2 and fix_truncdfsi2 instruction pattern(s).\n@@ -2506,7 +2429,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cfdbr\\\\t%0,%h2,%1\"\n    [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"cycle\"   \"n\" )])\n+    (set_attr \"type\"   \"other\" )])\n \n (define_insn \"fix_truncdfsi2_ibm\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2525,7 +2448,7 @@\n    return \\\"l\\\\t%0,%N4\\\";\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"   \"other\")\n    (set_attr \"length\"  \"20\")])\n \n ;\n@@ -2577,7 +2500,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cgebr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"   \"other\")])\n \n ;\n ; fixuns_truncsfsi2 and fix_truncsfsi2 instruction pattern(s).\n@@ -2638,7 +2561,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cfebr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"   \"other\")])\n \n ;\n ; floatdidf2 instruction pattern(s).\n@@ -2650,7 +2573,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cdgbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\" )])\n+   (set_attr \"type\"   \"other\" )])\n \n ;\n ; floatdisf2 instruction pattern(s).\n@@ -2662,7 +2585,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cegbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\" )])\n+   (set_attr \"type\"   \"other\" )])\n \n ;\n ; floatsidf2 instruction pattern(s).\n@@ -2694,7 +2617,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cdfbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\" )])\n+   (set_attr \"type\"   \"other\" )])\n \n (define_insn \"floatsidf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -2712,7 +2635,7 @@\n    return \\\"sd\\\\t%0,%2\\\";\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"n\" )\n+   (set_attr \"type\"   \"other\" )\n    (set_attr \"length\"  \"20\")])\n \n ;\n@@ -2741,7 +2664,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cefbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"cycle\"   \"n\" )])\n+   (set_attr \"type\"   \"other\" )])\n \n ;\n ; truncdfsf2 instruction pattern(s).\n@@ -2851,8 +2774,7 @@\n    aghi\\\\t%0,%h2\n    ag\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RI,RXE\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,reg,mem\")])\n \n ;\n ; For weakness of reload, need (set (reg x) (plus (reg y) (reg x)))\n@@ -2869,8 +2791,7 @@\n    aghi\\\\t%0,%h1\n    ag\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RI,RXE\")\n-   (set_attr \"atype\"   \"reg,reg,mem\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"reg,reg,mem\")])\n \n (define_insn \"adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -2930,8 +2851,7 @@\n   \"TARGET_64BIT\"\n   \"brxlg\\\\t%0,%2,.+6\"\n   [(set_attr \"op_type\" \"RIE\")\n-   (set_attr \"atype\"   \"reg\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"reg\")])\n \n (define_insn \"*reload_la_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -3029,8 +2949,7 @@\n    ahi\\\\t%0,%h2\n    a\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")  \n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,reg,mem\")])  \n \n (define_insn \"*addsi3_cconly\"\n   [(set (reg 33) \n@@ -3044,8 +2963,7 @@\n    ahi\\\\t%0,%h2\n    a\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")  \n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,reg,mem\")])  \n \n (define_insn \"*addsi3_cconly2\"\n   [(set (reg 33) \n@@ -3058,8 +2976,7 @@\n    ahi\\\\t%0,%h2\n    a\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")  \n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,reg,mem\")])  \n \n (define_insn \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n@@ -3072,8 +2989,7 @@\n    ahi\\\\t%0,%h2\n    a\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,reg,mem\")])\n \n (define_insn \"do_la\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n@@ -3091,8 +3007,7 @@\n   \"\"\n   \"brxle\\\\t%0,%2,.+4\"\n   [(set_attr \"op_type\" \"RSI\")\n-   (set_attr \"atype\"   \"reg\")\n-   (set_attr \"type\"    \"set\")])\n+   (set_attr \"atype\"   \"reg\")])\n \n (define_insn \"*reload_la_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3265,8 +3180,7 @@\n    sgr\\\\t%0,%2\n    sg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RRE\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3311,8 +3225,7 @@\n    sr\\\\t%0,%2\n    s\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*subsi3_cconly\"\n   [(set (reg 33)\n@@ -3325,8 +3238,7 @@\n    sr\\\\t%0,%2\n    s\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -3338,8 +3250,7 @@\n    sr\\\\t%0,%2\n    s\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n ; subhi3 instruction pattern(s).\n@@ -3469,7 +3380,7 @@\n       rtx temp1_1 = gen_reg_rtx (SImode);\n       rtx temp2_0 = gen_reg_rtx (SImode);\n       rtx temp2_1 = gen_reg_rtx (SImode);\n-\n+ \n       emit_move_insn (temp1_0, operand_subword (operands[1], 0 ,1, DImode)); \n       emit_move_insn (temp1_1, operand_subword (operands[1], 1 ,1, DImode));\n       emit_move_insn (temp2_0, operand_subword (operands[2], 0 ,1, DImode));\n@@ -3507,9 +3418,37 @@\n    mghi\\\\t%0,%h2\n    msg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RI,RX\")\n-   (set_attr \"cycle\"    \"n\")\n    (set_attr \"atype\"    \"reg,reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"type\"     \"imul\")])\n+\n+;\n+; mulsidi3 instruction pattern(s).\n+;\n+\n+;(define_expand \"mulsidi3\"\n+;  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+;\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n+;\t\t (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"\"))))]\n+;  \"\"\n+;  \"\n+;{\n+;  emit_insn (gen_extendsidi2 (operands[0], operands[1]));\n+;  emit_insn (gen_muldisidi3  (operands[0], operands[0], operands[2]));\n+;  DONE;\n+;}\")\n+\n+;(define_insn \"muldisidi3\"\n+;  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+;\t(mult:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n+;\t\t (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n+;    (clobber (reg:CC 33))]\n+;   \"!TARGET_64BIT\"\n+;   \"@\n+;    mr\\\\t%0,%2\n+;    m\\\\t%0,%2\"\n+;  [(set_attr \"op_type\"  \"RR,RX\")\n+;   (set_attr \"atype\"    \"reg,mem\")\n+;   (set_attr \"type\"     \"imul\")])\n \n ;\n ; mulsi3 instruction pattern(s).\n@@ -3526,9 +3465,8 @@\n    mhi\\\\t%0,%h2\n    ms\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RI,RX\")\n-   (set_attr \"cycle\"    \"n\")\n    (set_attr \"atype\"    \"reg,reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"type\"     \"imul\")])\n \n (define_insn \"mulsi_6432\"\n    [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3542,9 +3480,8 @@\n     mr\\\\t%0,%2\n     m\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n    (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"type\"     \"imul\")])\n  \n \n ;\n@@ -3570,7 +3507,7 @@\n    mdbr\\\\t%0,%2\n    mdb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"    \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*muldf3_ibm\"\n@@ -3583,7 +3520,7 @@\n    mdr\\\\t%0,%2\n    md\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"    \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n@@ -3609,7 +3546,7 @@\n    meebr\\\\t%0,%2\n    meeb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*mulsf3_ibm\"\n@@ -3622,7 +3559,7 @@\n    mer\\\\t%0,%2\n    me\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n \n@@ -3686,7 +3623,7 @@\n    dsgr\\\\t%0,%2\n    dsg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"idiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n@@ -3745,7 +3682,7 @@\n    dlgr\\\\t%0,%2\n    dlg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"idiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n@@ -3810,7 +3747,7 @@\n    dr\\\\t%0,%2\n    d\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"idiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n@@ -3972,7 +3909,7 @@\n    ddbr\\\\t%0,%2\n    ddb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"    \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*divdf3_ibm\"\n@@ -3985,7 +3922,7 @@\n    ddr\\\\t%0,%2\n    dd\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"    \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n ;\n@@ -4011,7 +3948,7 @@\n    debr\\\\t%0,%2\n    deb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*divsf3\"\n@@ -4024,7 +3961,7 @@\n    der\\\\t%0,%2\n    de\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"cycle\"    \"n\")\n+   (set_attr \"type\"     \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n \n@@ -4049,8 +3986,7 @@\n    ng\\\\t%0,%2\n    nc\\\\t%O0(8,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n (define_insn \"*anddi3_cconly\"\n   [(set (reg 33)\n@@ -4063,8 +3999,7 @@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"anddi3\"\n   [(set (match_operand:DI 0 \"r_or_s_operand\" \"=d,d,Q\")\n@@ -4077,8 +4012,7 @@\n    ng\\\\t%0,%2\n    nc\\\\t%O0(8,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n ;\n ; andsi3 instruction pattern(s).\n@@ -4097,8 +4031,7 @@\n    n\\\\t%0,%2\n    nc\\\\t%O0(4,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n (define_insn \"*andsi3_cconly\"\n   [(set (reg 33)\n@@ -4111,8 +4044,7 @@\n    nr\\\\t%0,%2\n    n\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"andsi3\"\n   [(set (match_operand:SI 0 \"r_or_s_operand\" \"=d,d,Q\")\n@@ -4125,8 +4057,7 @@\n    n\\\\t%0,%2\n    nc\\\\t%O0(4,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n ;\n ; andhi3 instruction pattern(s).\n@@ -4195,8 +4126,7 @@\n    oc\\\\t%O0(8,%R0),%2\n    oill\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE,SS,RI\")\n-   (set_attr \"atype\"    \"reg,mem,mem,reg\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem,reg\")])\n \n ;\n ; iorsi3 instruction pattern(s).\n@@ -4226,8 +4156,7 @@\n    o\\\\t%0,%2\n    oc\\\\t%O0(4,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n ;\n ; iorhi3 instruction pattern(s).\n@@ -4295,8 +4224,7 @@\n    xg\\\\t%0,%2\n    xc\\\\t%O0(8,%R0),%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n ;\n ; xorsi3 instruction pattern(s).\n@@ -4326,8 +4254,7 @@\n    x\\\\t%0,%2\n    xc\\\\t%O0(4,%R0),%2\"\n   [(set_attr \"op_type\"  \"RR,RX,SS\")\n-   (set_attr \"atype\"    \"reg,mem,mem\")\n-   (set_attr \"type\"     \"set\")])\n+   (set_attr \"atype\"    \"reg,mem,mem\")])\n \n ;\n ; xorhi3 instruction pattern(s).\n@@ -4398,8 +4325,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"lcgr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*negdi2_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4431,8 +4357,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"lcr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n ;\n ; negdf2 instruction pattern(s).\n@@ -4505,8 +4430,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"lpgr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n ;\n ; abssi2 instruction pattern(s).\n@@ -4518,8 +4442,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"lpr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n ;\n ; abshi2 instruction pattern(s).\n@@ -4532,7 +4455,7 @@\n   \"\"\n   \"sll\\\\t%1,16\\;sra\\\\t%1,16\\;lpr\\\\t%0,%1\"\n   [(set_attr \"op_type\"  \"NN\")\n-   (set_attr \"cycle\"    \"3\")\n+   (set_attr \"type\"    \"o3\")\n    (set_attr \"length\"   \"10\")])\n \n ;\n@@ -4701,8 +4624,7 @@\n   \"@\n    rllg\\\\t%0,%1,%c2\n    rllg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RSE\")])\n \n ;\n ; rotlsi3 instruction pattern(s).\n@@ -4717,8 +4639,7 @@\n   \"@\n    rll\\\\t%0,%1,%c2\n    rll\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RSE\")])\n \n \n ;;\n@@ -4748,8 +4669,7 @@\n   \"@\n    sldl\\\\t%0,%c2\n    sldl\\\\t%0,0(%2)\"     \n-  [(set_attr \"op_type\"  \"RS\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RS\")])\n \n (define_insn \"*ashldi3_64\"\n   [(set            (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4760,8 +4680,7 @@\n   \"@\n    sllg\\\\t%0,%1,%2\n    sllg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RSE\")])\n \n ;\n ; ashrdi3 instruction pattern(s).\n@@ -4796,8 +4715,7 @@\n   \"@\n    srag\\\\t%0,%1,%c2\n    srag\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RSE\")])\n \n ;\n ; ashlsi3 instruction pattern(s).\n@@ -4813,8 +4731,7 @@\n   \"@\n    sll\\\\t%0,%c2\n    sll\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RS\")])\n \n ;\n ; ashrsi3 instruction pattern(s).\n@@ -4829,8 +4746,7 @@\n   \"@\n    sra\\\\t%0,%c2\n    sra\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RS\")])\n \n ;\n ; ashlhi3 instruction pattern(s).\n@@ -4901,8 +4817,7 @@\n   \"@\n    srlg\\\\t%0,%1,%c2\n    srlg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS,RS\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RS,RS\")])\n \n ;\n ; lshrsi3 instruction pattern(s).\n@@ -4917,8 +4832,7 @@\n   \"@\n    srl\\\\t%0,%c2\n    srl\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")\n-   (set_attr \"type\"     \"set\")])\n+  [(set_attr \"op_type\"  \"RS\")])\n \n ;\n ; lshrhi3 instruction pattern(s).\n@@ -5368,7 +5282,7 @@\n   \"TARGET_64BIT\"\n   \"brasl\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"   \"jsr\")])\n \n (define_insn \"bras\"\n   [(call (mem:QI (match_operand:SI 0 \"bras_sym_operand\" \"X\"))\n@@ -5377,7 +5291,7 @@\n   \"TARGET_SMALL_EXEC\"\n   \"bras\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"   \"jsr\")])\n \n (define_insn \"basr_64\"\n   [(call (mem:QI (match_operand:DI 0 \"register_operand\" \"a\"))\n@@ -5386,7 +5300,7 @@\n   \"TARGET_64BIT\"\n   \"basr\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"basr_31\"\n@@ -5396,7 +5310,7 @@\n   \"!TARGET_64BIT\"\n   \"basr\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"    \"mem\")])\n \n (define_insn \"bas_64\"\n@@ -5406,7 +5320,7 @@\n   \"TARGET_64BIT\"\n   \"bas\\\\t%2,%a0\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"bas_31\"\n@@ -5416,7 +5330,7 @@\n   \"!TARGET_64BIT\"\n   \"bas\\\\t%2,%a0\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"   \"mem\")])\n \n \n@@ -5475,7 +5389,7 @@\n   \"TARGET_64BIT\"\n   \"brasl\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"bras_r\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -5485,7 +5399,7 @@\n   \"TARGET_SMALL_EXEC\"\n   \"bras\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"basr_r_64\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -5495,7 +5409,7 @@\n   \"TARGET_64BIT\"\n   \"basr\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"cycle\"   \"n\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"basr_r_31\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -5505,7 +5419,7 @@\n   \"!TARGET_64BIT\"\n   \"basr\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"bas_r_64\"\n@@ -5516,7 +5430,7 @@\n   \"TARGET_64BIT\"\n   \"bas\\\\t%3,%a1\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"jsr\")\n    (set_attr \"atype\"   \"mem\")])\n \n (define_insn \"bas_r_31\"\n@@ -5527,7 +5441,7 @@\n   \"!TARGET_64BIT\"\n   \"bas\\\\t%3,%a1\"\n    [(set_attr \"op_type\" \"RX\")\n-    (set_attr \"cycle\"   \"n\")\n+    (set_attr \"type\"    \"jsr\")\n     (set_attr \"atype\"   \"mem\")])\n \n \n@@ -5720,7 +5634,7 @@\n     return \\\"basr\\\\t13,0\\;ahi\\\\t13,%Y0\\\";\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"2\")\n+   (set_attr \"type\"    \"o2\")\n    (set_attr \"length\"  \"8\")])\n \n (define_insn \"ltorg\"\n@@ -5733,7 +5647,7 @@\n    return \\\"0:\\\";\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"cycle\"   \"n\")\n+   (set_attr \"type\"    \"branch\")\n    (set_attr \"length\"  \"4096\")])\n \n "}]}