{"sha": "428684fd1c052848969dba78f1e09a91fdd7f466", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4Njg0ZmQxYzA1Mjg0ODk2OWRiYTc4ZjFlMDlhOTFmZGQ3ZjQ2Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-02-06T14:09:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-06T14:09:36Z"}, "message": "sem_attr.adb (Analyze_Attribute, case Max): Check for improper comparison of unordered enumeration type.\n\n2014-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case Max): Check for improper\n\tcomparison of unordered enumeration type.\n\t(Analyze_Attribute, case Max): Check for improper comparison of\n\tunordered enumeration type.\n\t* sem_res.adb (Bad_Unordered_Enumeration_Reference): Moved to\n\tsem_util.adb.\n\t* sem_util.ads, sem_util.adb (Bad_Unordered_Enumeration_Reference):\n\tMoved here from Sem_Res.\n\nFrom-SVN: r207556", "tree": {"sha": "4529dfaa3caa730e3a30b99fb46d2380889a1300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4529dfaa3caa730e3a30b99fb46d2380889a1300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428684fd1c052848969dba78f1e09a91fdd7f466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428684fd1c052848969dba78f1e09a91fdd7f466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428684fd1c052848969dba78f1e09a91fdd7f466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428684fd1c052848969dba78f1e09a91fdd7f466/comments", "author": null, "committer": null, "parents": [{"sha": "8c35b40a37767f63bdad36db3bb1c16f3c5f7c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c35b40a37767f63bdad36db3bb1c16f3c5f7c6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c35b40a37767f63bdad36db3bb1c16f3c5f7c6b"}], "stats": {"total": 79, "additions": 54, "deletions": 25}, "files": [{"sha": "2a3c7b7208bf23a0a08efaa25b3f0b30d6fe0854", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=428684fd1c052848969dba78f1e09a91fdd7f466", "patch": "@@ -1,3 +1,14 @@\n+2014-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case Max): Check for improper\n+\tcomparison of unordered enumeration type.\n+\t(Analyze_Attribute, case Max): Check for improper comparison of\n+\tunordered enumeration type.\n+\t* sem_res.adb (Bad_Unordered_Enumeration_Reference): Moved to\n+\tsem_util.adb.\n+\t* sem_util.ads, sem_util.adb (Bad_Unordered_Enumeration_Reference):\n+\tMoved here from Sem_Res.\n+\n 2014-02-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, sem_prag.adb, sem_res.adb, lib-xref.adb: Minor"}, {"sha": "703db44c77f33218c1069491bccb54995ad9abcf", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=428684fd1c052848969dba78f1e09a91fdd7f466", "patch": "@@ -4113,6 +4113,15 @@ package body Sem_Attr is\n          Resolve (E2, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n+         --  Check for comparison on unordered enumeration type\n+\n+         if Bad_Unordered_Enumeration_Reference (N, P_Base_Type) then\n+            Error_Msg_Sloc := Sloc (P_Base_Type);\n+            Error_Msg_NE\n+              (\"comparison on unordered enumeration type& declared#?U?\",\n+               N, P_Base_Type);\n+         end if;\n+\n       ----------------------------------\n       -- Max_Alignment_For_Allocation --\n       -- Max_Size_In_Storage_Elements --\n@@ -4174,6 +4183,15 @@ package body Sem_Attr is\n          Resolve (E2, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n+         --  Check for comparison on unordered enumeration type\n+\n+         if Bad_Unordered_Enumeration_Reference (N, P_Base_Type) then\n+            Error_Msg_Sloc := Sloc (P_Base_Type);\n+            Error_Msg_NE\n+              (\"comparison on unordered enumeration type& declared#?U?\",\n+               N, P_Base_Type);\n+         end if;\n+\n       ---------\n       -- Mod --\n       ---------"}, {"sha": "41eb4ced2100394ba570809e97eace713bcf69e1", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=428684fd1c052848969dba78f1e09a91fdd7f466", "patch": "@@ -93,15 +93,6 @@ package body Sem_Res is\n \n    --  Note that Resolve_Attribute is separated off in Sem_Attr\n \n-   function Bad_Unordered_Enumeration_Reference\n-     (N : Node_Id;\n-      T : Entity_Id) return Boolean;\n-   --  Node N contains a potentially dubious reference to type T, either an\n-   --  explicit comparison, or an explicit range. This function returns True\n-   --  if the type T is an enumeration type for which No pragma Order has been\n-   --  given, and the reference N is not in the same extended source unit as\n-   --  the declaration of T.\n-\n    procedure Check_Discriminant_Use (N : Node_Id);\n    --  Enforce the restrictions on the use of discriminants when constraining\n    --  a component of a discriminated type (record or concurrent type).\n@@ -397,22 +388,6 @@ package body Sem_Res is\n       end if;\n    end Analyze_And_Resolve;\n \n-   ----------------------------------------\n-   -- Bad_Unordered_Enumeration_Reference --\n-   ----------------------------------------\n-\n-   function Bad_Unordered_Enumeration_Reference\n-     (N : Node_Id;\n-      T : Entity_Id) return Boolean\n-   is\n-   begin\n-      return Is_Enumeration_Type (T)\n-        and then Comes_From_Source (N)\n-        and then Warn_On_Unordered_Enumeration_Type\n-        and then not Has_Pragma_Ordered (T)\n-        and then not In_Same_Extended_Unit (N, T);\n-   end Bad_Unordered_Enumeration_Reference;\n-\n    ----------------------------\n    -- Check_Discriminant_Use --\n    ----------------------------"}, {"sha": "2e79e110c1c1cb2fd2c1b55a54cf16d8f4b0dd81", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=428684fd1c052848969dba78f1e09a91fdd7f466", "patch": "@@ -669,6 +669,22 @@ package body Sem_Util is\n       end if;\n    end Bad_Predicated_Subtype_Use;\n \n+   ----------------------------------------\n+   -- Bad_Unordered_Enumeration_Reference --\n+   ----------------------------------------\n+\n+   function Bad_Unordered_Enumeration_Reference\n+     (N : Node_Id;\n+      T : Entity_Id) return Boolean\n+   is\n+   begin\n+      return Is_Enumeration_Type (T)\n+        and then Comes_From_Source (N)\n+        and then Warn_On_Unordered_Enumeration_Type\n+        and then not Has_Pragma_Ordered (T)\n+        and then not In_Same_Extended_Unit (N, T);\n+   end Bad_Unordered_Enumeration_Reference;\n+\n    --------------------------\n    -- Build_Actual_Subtype --\n    --------------------------"}, {"sha": "95981da0cc0015c333fbbac66ed71c6e64fe9656", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428684fd1c052848969dba78f1e09a91fdd7f466/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=428684fd1c052848969dba78f1e09a91fdd7f466", "patch": "@@ -171,6 +171,15 @@ package Sem_Util is\n    --  Suggest_Static when the context warrants an advice on how to avoid the\n    --  use error.\n \n+   function Bad_Unordered_Enumeration_Reference\n+     (N : Node_Id;\n+      T : Entity_Id) return Boolean;\n+   --  Node N contains a potentially dubious reference to type T, either an\n+   --  explicit comparison, or an explicit range. This function returns True\n+   --  if the type T is an enumeration type for which No pragma Order has been\n+   --  given, and the reference N is not in the same extended source unit as\n+   --  the declaration of T.\n+\n    function Build_Actual_Subtype\n      (T : Entity_Id;\n       N : Node_Or_Entity_Id) return Node_Id;"}]}