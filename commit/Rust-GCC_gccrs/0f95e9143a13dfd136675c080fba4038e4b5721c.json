{"sha": "0f95e9143a13dfd136675c080fba4038e4b5721c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5NWU5MTQzYTEzZGZkMTM2Njc1YzA4MGZiYTQwMzhlNGI1NzIxYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-05-10T15:59:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-05-10T15:59:16Z"}, "message": "sparc.c (mem_min_alignment): Do not rely on MEM_ALIGN if TARGET_UNALIGNED_DOUBLES.\n\n\t* config/sparc/sparc.c (mem_min_alignment): Do not rely\n\ton MEM_ALIGN if TARGET_UNALIGNED_DOUBLES.\n\nFrom-SVN: r99521", "tree": {"sha": "e7a4c55e4b2435e54681ebabf9020884b54bba14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a4c55e4b2435e54681ebabf9020884b54bba14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f95e9143a13dfd136675c080fba4038e4b5721c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f95e9143a13dfd136675c080fba4038e4b5721c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f95e9143a13dfd136675c080fba4038e4b5721c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f95e9143a13dfd136675c080fba4038e4b5721c/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53e0077e6f0a0240e7c92c2450b92f2f008f360d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e0077e6f0a0240e7c92c2450b92f2f008f360d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53e0077e6f0a0240e7c92c2450b92f2f008f360d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "e54a84d68360821ffa0499ecf2122dbc19194eac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f95e9143a13dfd136675c080fba4038e4b5721c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f95e9143a13dfd136675c080fba4038e4b5721c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f95e9143a13dfd136675c080fba4038e4b5721c", "patch": "@@ -1,3 +1,8 @@\n+2005-05-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (mem_min_alignment): Do not rely\n+\ton MEM_ALIGN if TARGET_UNALIGNED_DOUBLES.\n+\n 2005-05-10  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Rearrange special"}, {"sha": "3560ed988ba13a6e57445869190ecc496ccc6eec", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f95e9143a13dfd136675c080fba4038e4b5721c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f95e9143a13dfd136675c080fba4038e4b5721c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=0f95e9143a13dfd136675c080fba4038e4b5721c", "patch": "@@ -3193,7 +3193,8 @@ mem_min_alignment (rtx mem, int desired)\n     return 0;\n \n   /* Obviously...  */\n-  if (MEM_ALIGN (mem) / BITS_PER_UNIT >= (unsigned)desired)\n+  if (!TARGET_UNALIGNED_DOUBLES\n+      && MEM_ALIGN (mem) / BITS_PER_UNIT >= (unsigned)desired)\n     return 1;\n \n   /* ??? The rest of the function predates MEM_ALIGN so"}]}