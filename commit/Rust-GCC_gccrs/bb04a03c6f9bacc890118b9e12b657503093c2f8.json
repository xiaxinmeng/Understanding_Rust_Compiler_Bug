{"sha": "bb04a03c6f9bacc890118b9e12b657503093c2f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwNGEwM2M2ZjliYWNjODkwMTE4YjllMTJiNjU3NTAzMDkzYzJmOA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-18T15:20:40Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-18T16:34:31Z"}, "message": "Make 'gcc/hash-map-tests.c:test_map_of_type_with_ctor_and_dtor_expand' work on 32-bit architectures [PR101959]\n\nBug fix for recent commit e4f16e9f357a38ec702fb69a0ffab9d292a6af9b\n\"Add more self-tests for 'hash_map' with Value type with non-trivial\nconstructor/destructor\".\n\n\tgcc/\n\tPR bootstrap/101959\n\t* hash-map-tests.c (test_map_of_type_with_ctor_and_dtor_expand):\n\tUse an 'int_hash'.", "tree": {"sha": "0eb16ff89e7b6005794c516beaf4791824bcc165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eb16ff89e7b6005794c516beaf4791824bcc165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb04a03c6f9bacc890118b9e12b657503093c2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04a03c6f9bacc890118b9e12b657503093c2f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb04a03c6f9bacc890118b9e12b657503093c2f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04a03c6f9bacc890118b9e12b657503093c2f8/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "640df4ef815aa35fedf1d724ab31d8eed8817f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640df4ef815aa35fedf1d724ab31d8eed8817f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640df4ef815aa35fedf1d724ab31d8eed8817f82"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "6acc0d4337e1e6d49045f841c584123479a613df", "filename": "gcc/hash-map-tests.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04a03c6f9bacc890118b9e12b657503093c2f8/gcc%2Fhash-map-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04a03c6f9bacc890118b9e12b657503093c2f8/gcc%2Fhash-map-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-tests.c?ref=bb04a03c6f9bacc890118b9e12b657503093c2f8", "patch": "@@ -328,11 +328,22 @@ test_map_of_type_with_ctor_and_dtor_expand (bool remove_some_inline)\n   size_t expand_c_expected = 4;\n   size_t expand_c = 0;\n \n-  void *a[N_elem];\n+  /* For stability of this testing, we need all Key values 'k' to produce\n+     unique hash values 'Traits::hash (k)', as otherwise the dynamic\n+     insert/remove behavior may diverge across different architectures.  This\n+     is, for example, a problem when using the standard 'pointer_hash::hash',\n+     which is simply doing a 'k >> 3' operation, which is fine on 64-bit\n+     architectures, but on 32-bit architectures produces the same hash value\n+     for subsequent 'a[i] = &a[i]' array elements.  Therefore, use an\n+     'int_hash'.  */\n+\n+  int a[N_elem];\n   for (size_t i = 0; i < N_elem; ++i)\n-    a[i] = &a[i];\n+    a[i] = i;\n \n-  typedef hash_map <void *, val_t> Map;\n+  const int EMPTY = -1;\n+  const int DELETED = -2;\n+  typedef hash_map<int_hash<int, EMPTY, DELETED>, val_t> Map;\n \n   /* Note that we are starting with a fresh 'Map'.  Even if an existing one has\n      been cleared out completely, there remain 'deleted' elements, and these"}]}