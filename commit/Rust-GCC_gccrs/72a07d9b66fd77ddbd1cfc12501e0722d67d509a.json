{"sha": "72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhMDdkOWI2NmZkNzdkZGJkMWNmYzEyNTAxZTA3MjJkNjdkNTA5YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-10T10:59:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-10T10:59:20Z"}, "message": "re PR tree-optimization/46398 (early FRE miscompiles simple testcase)\n\n2010-11-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46398\n\t* tree-ssa-sccvn.c (process_scc): Iterate for all PHIs.\n\n\t* gcc.dg/torture/pr46398.c: New testcase.\n\nFrom-SVN: r166527", "tree": {"sha": "f4355ea195f58cfd9e8822fc306980538f7ca6fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4355ea195f58cfd9e8822fc306980538f7ca6fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/comments", "author": null, "committer": null, "parents": [{"sha": "d92034f1364e661ea9af0d31df4f23cecfb82094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92034f1364e661ea9af0d31df4f23cecfb82094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92034f1364e661ea9af0d31df4f23cecfb82094"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "ff1ef623e9d84a5ac7cd588fef5a55c71353fe57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46398\n+\t* tree-ssa-sccvn.c (process_scc): Iterate for all PHIs.\n+\n 2010-11-10  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR target/44760"}, {"sha": "e4ae2acf84982f89b214cc1c0e1f532248111ca9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "patch": "@@ -1,10 +1,16 @@\n+2010-11-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46398\n+\t* gcc.dg/torture/pr46398.c: New testcase.\n+\n 2010-11-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/open_dev_null.f90: New test.\n \n 2010-11-09   Jan Hubicka  <jh@suse.cz>\n \n-\t* testsuite/gcc.target/i386/recip-vec-sqrtf-avx.c: Update for loop unrolling.\n+\t* testsuite/gcc.target/i386/recip-vec-sqrtf-avx.c: Update for loop\n+\tunrolling.\n \n 2010-11-09  Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "9110bbbbe0686c0882119309ec0e9e5e4876a800", "filename": "gcc/testsuite/gcc.dg/torture/pr46398.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46398.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46398.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46398.c?ref=72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+\n+int __attribute__((noinline))\n+test (int token)\n+{\n+  int done = 0;\n+  int virtual_p = 0;\n+  while (!done)\n+    {\n+      if (token == 42)\n+\tvirtual_p = 1;\n+      else\n+\tdone = 1;\n+    }\n+  return virtual_p;\n+}\n+extern void abort (void);\n+int\n+main()\n+{\n+  if (test (0) != 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "994e94596cbc13a5b85e440921ea69775a6d1db9", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a07d9b66fd77ddbd1cfc12501e0722d67d509a/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "patch": "@@ -3108,9 +3108,20 @@ process_scc (VEC (tree, heap) *scc)\n   if (VEC_length (tree, scc) == 1)\n     {\n       tree use = VEC_index (tree, scc, 0);\n-      if (!VN_INFO (use)->use_processed)\n-\tvisit_use (use);\n-      return;\n+      if (VN_INFO (use)->use_processed)\n+\treturn;\n+      /* We need to make sure it doesn't form a cycle itself, which can\n+\t happen for self-referential PHI nodes.  In that case we would\n+\t end up inserting an expression with VN_TOP operands into the\n+\t valid table which makes us derive bogus equivalences later.\n+\t The cheapest way to check this is to assume it for all PHI nodes.  */\n+      if (gimple_code (SSA_NAME_DEF_STMT (use)) == GIMPLE_PHI)\n+\t/* Fallthru to iteration.  */ ;\n+      else\n+\t{\n+\t  visit_use (use);\n+\t  return;\n+\t}\n     }\n \n   /* Iterate over the SCC with the optimistic table until it stops"}]}