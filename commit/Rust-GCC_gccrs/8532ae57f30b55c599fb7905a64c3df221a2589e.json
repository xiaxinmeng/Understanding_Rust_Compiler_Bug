{"sha": "8532ae57f30b55c599fb7905a64c3df221a2589e", "node_id": "C_kwDOANBUbNoAKDg1MzJhZTU3ZjMwYjU1YzU5OWZiNzkwNWE2NGMzZGYyMjFhMjU4OWU", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-07T06:40:38Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T05:58:43Z"}, "message": "RISC-V: Add vwsubu.w C++ api TETS\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vwsubu_wv-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wv_tumu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwsubu_wx_tumu-3.C: New test.", "tree": {"sha": "a0289c16ad96ca5130fdef6f2b5d118d430aa3e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0289c16ad96ca5130fdef6f2b5d118d430aa3e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8532ae57f30b55c599fb7905a64c3df221a2589e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8532ae57f30b55c599fb7905a64c3df221a2589e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8532ae57f30b55c599fb7905a64c3df221a2589e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8532ae57f30b55c599fb7905a64c3df221a2589e/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "345b2aa4eb3be99f93ab5d13e454308704293890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345b2aa4eb3be99f93ab5d13e454308704293890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345b2aa4eb3be99f93ab5d13e454308704293890"}], "stats": {"total": 3960, "additions": 3960, "deletions": 0}, "files": [{"sha": "730d9ba9ca2ac0043dbdebca55144c003db8615c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vbool64_t mask,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vbool16_t mask,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vbool8_t mask,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vbool4_t mask,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vbool2_t mask,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vbool64_t mask,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vbool32_t mask,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vbool16_t mask,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vbool8_t mask,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vbool4_t mask,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vbool64_t mask,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vbool16_t mask,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vbool8_t mask,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "36070bcebcfbeea502cd777241c8d6bbac909318", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vbool64_t mask,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vbool16_t mask,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vbool8_t mask,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vbool4_t mask,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vbool2_t mask,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vbool64_t mask,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vbool32_t mask,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vbool16_t mask,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vbool8_t mask,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vbool4_t mask,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vbool64_t mask,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vbool16_t mask,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vbool8_t mask,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "690bd5574ea0611617361bf4f1373bf463a5dde3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(op1,op2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wv(vbool64_t mask,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv(vbool16_t mask,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv(vbool8_t mask,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv(vbool4_t mask,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv(vbool2_t mask,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv(vbool64_t mask,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv(vbool32_t mask,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv(vbool16_t mask,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv(vbool8_t mask,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv(vbool4_t mask,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv(vbool64_t mask,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv(vbool32_t mask,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv(vbool16_t mask,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv(vbool8_t mask,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv(mask,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "88220971cc364438d4469aabceff99081586993c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e0f90bb78fc96cc283fcf754ca8c21a17e842a75", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ef711e04dbaea03d71da4c9db42b438d23b6c50c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_mu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "de41838b784b149efdecbb4bea394865effad445", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tu(vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tu(vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tu(vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tu(vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tu(vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tu(vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tu(vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tu(vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tu(vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tu(vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tu(vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tu(vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "47a0aa2dfeab08b176be233b68c5fc383634fe59", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tu(vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tu(vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tu(vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tu(vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tu(vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tu(vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tu(vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tu(vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tu(vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tu(vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tu(vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tu(vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "84f184b1fac63b96d1498b0c88089b810ea13aa2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tu(vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tu(vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tu(vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tu(vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tu(vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tu(vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tu(vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tu(vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tu(vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tu(vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tu(vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tu(vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tu(merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "dcceb9cb8d986d903ab2dbd371942cc2bf5f17ca", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "64b0a4f060fffc02961e85b982160b71e3b7ecbd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "722beb70ac6ba191110b09f8f407f8c54596a709", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tum-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "17cfe6fbbfccf296e1c143bd964e9c511049cbe6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "93141147d7e0e646368d0012651f065b16e688fb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f207cfd9dea046e82e4a0bdd805ecc73bb2d2b11", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wv_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wv_tumu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wv_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wv_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wv_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wv_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wv_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wv_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wv_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "817fcb09ffc9d45948a9ddf1e0b3e60618093f75", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vbool64_t mask,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vbool16_t mask,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vbool8_t mask,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vbool4_t mask,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vbool2_t mask,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vbool64_t mask,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vbool32_t mask,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vbool16_t mask,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vbool8_t mask,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vbool4_t mask,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vbool64_t mask,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vbool16_t mask,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vbool8_t mask,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3b4e0e0b6fe39cf61e60dc3f2a3b59918c1c6304", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vbool64_t mask,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vbool16_t mask,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vbool8_t mask,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vbool4_t mask,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vbool2_t mask,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vbool64_t mask,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vbool32_t mask,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vbool16_t mask,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vbool8_t mask,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vbool4_t mask,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vbool64_t mask,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vbool16_t mask,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vbool8_t mask,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "57df16f6ad2aaa8c0792bd4f56d36032bd41a955", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(op1,0xAA,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwsubu_wx(vbool64_t mask,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx(vbool16_t mask,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx(vbool8_t mask,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx(vbool4_t mask,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx(vbool2_t mask,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx(vbool64_t mask,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx(vbool32_t mask,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx(vbool16_t mask,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx(vbool8_t mask,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx(vbool4_t mask,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx(vbool64_t mask,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx(vbool32_t mask,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx(vbool16_t mask,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx(vbool8_t mask,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx(mask,op1,0xAA,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f050d06c202927a093319027bdb8ce621d3b2638", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ea2a68eee6b0bcdb5355f7ba809bb7f82a9d910e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f8659923b16a3dc580c6d8991e78dcfc3d01f433", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_mu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_mu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ba41ae50c50d1887b94709e352033649483b1515", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tu(vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tu(vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tu(vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tu(vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tu(vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tu(vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tu(vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tu(vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tu(vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tu(vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tu(vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tu(vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "bc001478b2dd3220ca5aea4aa915264813aa8045", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tu(vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tu(vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tu(vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tu(vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tu(vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tu(vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tu(vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tu(vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tu(vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tu(vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tu(vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tu(vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "5f084a36684831eef7f5e7b4ed8a92e533f77294", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tu(vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tu(vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tu(vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tu(vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tu(vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tu(vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tu(vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tu(vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tu(vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tu(vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tu(vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tu(vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tu(merge,op1,0xAA,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "cab182d059a594c31d638d7a611a38046c6fd65f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "2cf9232b68e226d819e26e4032760f7f81f5db75", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "bbd2d841df58dd3c0586e77c97eefcbd237317c0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tum-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tum(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "b5f9b8b6fd118627fc22cfd5ae5da0ddfafdcdd0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-1.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "76b963f217550928435b499790b5566d25de133f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-2.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d275239736dd4dc0d8d569d79bc8353efe71075c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwsubu_wx_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532ae57f30b55c599fb7905a64c3df221a2589e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwsubu_wx_tumu-3.C?ref=8532ae57f30b55c599fb7905a64c3df221a2589e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwsubu_wx_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwsubu_wx_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwsubu_wx_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwsubu_wx_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwsubu_wx_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwsubu_wx_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vwsubu_wx_tumu(mask,merge,op1,0xAA,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsubu\\.wx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}]}