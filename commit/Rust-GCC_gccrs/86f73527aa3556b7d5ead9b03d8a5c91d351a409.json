{"sha": "86f73527aa3556b7d5ead9b03d8a5c91d351a409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmNzM1MjdhYTM1NTZiN2Q1ZWFkOWIwM2Q4YTVjOTFkMzUxYTQwOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-20T14:17:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-20T14:17:57Z"}, "message": "Skip libstdc++ debug build in early bootstrap stages\n\nAs mentioned in PR 90770, this is a patch that Debian have been carrying\nfor some time. The additional unoptimized copies of libstdc++ libs that\nget built during each stage are never going to be used, so don't bother\nbuilding them.\n\nFor a profiled bootstrap this means we won't train the compiler on the\nunoptimized library code with assertions enabled, but that doesn't seem\nlike a big problem, as the same code has already been compiled once for\nthe main libstdc++ library.\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_DEBUG): Only do debug build for final\n\tstage of bootstrap.\n\t* configure: Regenerate.\n\nFrom-SVN: r272509", "tree": {"sha": "0604cda3573398f131595dab0039ed64be1c0c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0604cda3573398f131595dab0039ed64be1c0c6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f73527aa3556b7d5ead9b03d8a5c91d351a409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f73527aa3556b7d5ead9b03d8a5c91d351a409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f73527aa3556b7d5ead9b03d8a5c91d351a409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f73527aa3556b7d5ead9b03d8a5c91d351a409/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d306dee31dc030d1a9992927eb17b8171aaf8308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d306dee31dc030d1a9992927eb17b8171aaf8308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d306dee31dc030d1a9992927eb17b8171aaf8308"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "ac98c0d02e7a585275a682e0cb66799396508c1a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=86f73527aa3556b7d5ead9b03d8a5c91d351a409", "patch": "@@ -1,5 +1,9 @@\n 2019-06-20  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* acinclude.m4 (GLIBCXX_ENABLE_DEBUG): Only do debug build for final\n+\tstage of bootstrap.\n+\t* configure: Regenerate.\n+\n \t* include/std/variant (_Variant_storage, _Extra_visit_slot_needed):\n \tQualify calls to __never_valueless.\n "}, {"sha": "fad390ba32283997931b4f38a3e9dadf20870fb2", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=86f73527aa3556b7d5ead9b03d8a5c91d351a409", "patch": "@@ -2899,8 +2899,20 @@ dnl       Where DEFAULT is either `yes' or `no'.\n dnl\n AC_DEFUN([GLIBCXX_ENABLE_DEBUG], [\n   AC_MSG_CHECKING([for additional debug build])\n+  skip_debug_build=\n   GLIBCXX_ENABLE(libstdcxx-debug,$1,,[build extra debug library])\n-  AC_MSG_RESULT($enable_libstdcxx_debug)\n+  if test x$enable_libstdcxx_debug = xyes; then\n+    if test -f $toplevel_builddir/../stage_final \\\n+      && test -f $toplevel_builddir/../stage_current; then\n+      stage_final=`cat $toplevel_builddir/../stage_final`\n+      stage_current=`cat $toplevel_builddir/../stage_current`\n+      if test x$stage_current != x$stage_final ; then\n+\tskip_debug_build=\" (skipped for bootstrap stage $stage_current)\"\n+\tenable_libstdcxx_debug=no\n+      fi\n+    fi\n+  fi\n+  AC_MSG_RESULT($enable_libstdcxx_debug$skip_debug_build)\n   GLIBCXX_CONDITIONAL(GLIBCXX_BUILD_DEBUG, test $enable_libstdcxx_debug = yes)\n ])\n "}, {"sha": "62d9cb49acf32724d499b290ca5d34293083e169", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f73527aa3556b7d5ead9b03d8a5c91d351a409/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=86f73527aa3556b7d5ead9b03d8a5c91d351a409", "patch": "@@ -18257,6 +18257,7 @@ $as_echo \"$as_me: Debug build flags set to $DEBUG_FLAGS\" >&6;}\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for additional debug build\" >&5\n $as_echo_n \"checking for additional debug build... \" >&6; }\n+  skip_debug_build=\n    # Check whether --enable-libstdcxx-debug was given.\n if test \"${enable_libstdcxx_debug+set}\" = set; then :\n   enableval=$enable_libstdcxx_debug;\n@@ -18270,8 +18271,19 @@ else\n fi\n \n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libstdcxx_debug\" >&5\n-$as_echo \"$enable_libstdcxx_debug\" >&6; }\n+  if test x$enable_libstdcxx_debug = xyes; then\n+    if test -f $toplevel_builddir/../stage_final \\\n+      && test -f $toplevel_builddir/../stage_current; then\n+      stage_final=`cat $toplevel_builddir/../stage_final`\n+      stage_current=`cat $toplevel_builddir/../stage_current`\n+      if test x$stage_current != x$stage_final ; then\n+\tskip_debug_build=\" (skipped for bootstrap stage $stage_current)\"\n+\tenable_libstdcxx_debug=no\n+      fi\n+    fi\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libstdcxx_debug$skip_debug_build\" >&5\n+$as_echo \"$enable_libstdcxx_debug$skip_debug_build\" >&6; }\n \n \n "}]}