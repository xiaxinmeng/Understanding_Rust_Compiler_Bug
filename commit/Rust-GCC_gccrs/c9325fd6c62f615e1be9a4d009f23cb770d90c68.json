{"sha": "c9325fd6c62f615e1be9a4d009f23cb770d90c68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkzMjVmZDZjNjJmNjE1ZTFiZTlhNGQwMDlmMjNjYjc3MGQ5MGM2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T16:52:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T16:52:00Z"}, "message": "(addsi3, subsi3): Add define_expand to make adddi3/subdi3; old pattern\nis now anonymous.\n\nFrom-SVN: r7226", "tree": {"sha": "ecaf70bad460485ebf09ec34d6cd6327855afa32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecaf70bad460485ebf09ec34d6cd6327855afa32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9325fd6c62f615e1be9a4d009f23cb770d90c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9325fd6c62f615e1be9a4d009f23cb770d90c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9325fd6c62f615e1be9a4d009f23cb770d90c68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9325fd6c62f615e1be9a4d009f23cb770d90c68/comments", "author": null, "committer": null, "parents": [{"sha": "8b7b2e363992f3001ad15114e3305600e14170c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b2e363992f3001ad15114e3305600e14170c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7b2e363992f3001ad15114e3305600e14170c4"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "c7ca0f01bae40d396fd84a5139e01aaa32d39bce", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9325fd6c62f615e1be9a4d009f23cb770d90c68/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9325fd6c62f615e1be9a4d009f23cb770d90c68/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=c9325fd6c62f615e1be9a4d009f23cb770d90c68", "patch": "@@ -85,7 +85,23 @@\n    cvtql %1,%0\\;cvtlq %0,%0\"\n   [(set_attr \"type\" \"iaddlog,ld,fpop\")])\n \n-(define_insn \"addsi3\"\n+;; Do addsi3 the way expand_binop would do if we didn't have one.  This\n+;; generates better code.  We have the anonymous addsi3 pattern below in\n+;; case combine wants to make it.\n+(define_expand \"addsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n+\t\t (match_operand:SI 2 \"add_operand\" \"\")))]\n+  \"\"\n+  \"\n+{ emit_insn (gen_rtx (SET, VOIDmode, gen_lowpart (DImode, operands[0]),\n+\t\t      gen_rtx (PLUS, DImode,\n+\t\t\t       gen_lowpart (DImode, operands[1]),\n+\t\t\t       gen_lowpart (DImode, operands[2]))));\n+  DONE;\n+} \")\n+\n+(define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ,rJ,rJ,rJ\")\n \t\t (match_operand:SI 2 \"add_operand\" \"rI,O,K,L\")))]\n@@ -273,7 +289,21 @@\n   \"subq $31,%1,%0\"\n   [(set_attr \"type\" \"iaddlog\")])\n \n-(define_insn \"subsi3\"\n+(define_expand \"subsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"\")))]\n+  \"\"\n+  \"\n+{ emit_insn (gen_rtx (SET, VOIDmode, gen_lowpart (DImode, operands[0]),\n+\t\t      gen_rtx (MINUS, DImode,\n+\t\t\t       gen_lowpart (DImode, operands[1]),\n+\t\t\t       gen_lowpart (DImode, operands[2]))));\n+  DONE;\n+\n+} \")\n+\n+(define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"rI\")))]"}]}