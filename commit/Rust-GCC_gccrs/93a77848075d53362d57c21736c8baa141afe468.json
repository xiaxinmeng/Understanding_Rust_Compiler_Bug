{"sha": "93a77848075d53362d57c21736c8baa141afe468", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNhNzc4NDgwNzVkNTMzNjJkNTdjMjE3MzZjOGJhYTE0MWFmZTQ2OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-11-11T05:54:02Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-11-11T05:54:02Z"}, "message": "sh.h (MODES_TIEABLE_P): Don't tie SFmode to other FP modes.\n\n* config/sh/sh.h (MODES_TIEABLE_P): Don't tie SFmode to other FP\nmodes.\n\nFrom-SVN: r37380", "tree": {"sha": "666b02f4e23ffb763170a7f1d9ba48faf8c19130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/666b02f4e23ffb763170a7f1d9ba48faf8c19130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93a77848075d53362d57c21736c8baa141afe468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a77848075d53362d57c21736c8baa141afe468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93a77848075d53362d57c21736c8baa141afe468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a77848075d53362d57c21736c8baa141afe468/comments", "author": null, "committer": null, "parents": [{"sha": "585ddf9c47fb750de8713634a5e93ed4fe55814a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585ddf9c47fb750de8713634a5e93ed4fe55814a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585ddf9c47fb750de8713634a5e93ed4fe55814a"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "0b2e121efded4b50803612aac869be76831f3e52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93a77848075d53362d57c21736c8baa141afe468/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93a77848075d53362d57c21736c8baa141afe468/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93a77848075d53362d57c21736c8baa141afe468", "patch": "@@ -1,3 +1,8 @@\n+2000-11-11  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/sh/sh.h (MODES_TIEABLE_P): Don't tie SFmode to other FP\n+\tmodes.\n+\n 2000-11-10  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.texi, gcov.texi: Update dates and version numbers."}, {"sha": "0e7105295c297b930af15859c61505607d8510f5", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93a77848075d53362d57c21736c8baa141afe468/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93a77848075d53362d57c21736c8baa141afe468/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=93a77848075d53362d57c21736c8baa141afe468", "patch": "@@ -537,10 +537,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Value is 1 if it is a good idea to tie two pseudo registers\n    when one has mode MODE1 and one has mode MODE2.\n    If HARD_REGNO_MODE_OK could produce different values for MODE1 and MODE2,\n-   for any hard reg, then this must be 0 for correct output.  */\n+   for any hard reg, then this must be 0 for correct output.\n+   That's the case for xd registers: we don't hold SFmode values in\n+   them, so we can't tie an SFmode pseudos with one in another\n+   floating-point mode.  */\n \n #define MODES_TIEABLE_P(MODE1, MODE2) \\\n-  ((MODE1) == (MODE2) || GET_MODE_CLASS (MODE1) == GET_MODE_CLASS (MODE2))\n+  ((MODE1) == (MODE2) \\\n+   || (GET_MODE_CLASS (MODE1) == GET_MODE_CLASS (MODE2) \\\n+       && (MODE1) != SFmode && (MODE2) != SFmode))\n \n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */"}]}