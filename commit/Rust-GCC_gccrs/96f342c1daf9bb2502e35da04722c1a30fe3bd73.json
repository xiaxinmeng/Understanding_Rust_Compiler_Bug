{"sha": "96f342c1daf9bb2502e35da04722c1a30fe3bd73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmMzQyYzFkYWY5YmIyNTAyZTM1ZGEwNDcyMmMxYTMwZmUzYmQ3Mw==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-07-20T07:35:32Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-07-20T07:35:32Z"}, "message": "t-slibgcc-darwin (stmp-lipo): Remove.\n\n2006-07-19  Eric Christopher  <echristo@apple.com>\n\n        * config/t-slibgcc-darwin (stmp-lipo): Remove.\n        Rewrite dependencies for libgcc_s.1.dylib.\n\nFrom-SVN: r115608", "tree": {"sha": "88c32010bbb8b6fc6216e2c738803dfdb1b25fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c32010bbb8b6fc6216e2c738803dfdb1b25fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f342c1daf9bb2502e35da04722c1a30fe3bd73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f342c1daf9bb2502e35da04722c1a30fe3bd73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f342c1daf9bb2502e35da04722c1a30fe3bd73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f342c1daf9bb2502e35da04722c1a30fe3bd73/comments", "author": null, "committer": null, "parents": [{"sha": "4951dd5247d236921c4be22110c72001c8540f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951dd5247d236921c4be22110c72001c8540f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4951dd5247d236921c4be22110c72001c8540f93"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "bb5eae6b281d80b70b4d54b1f0da67ae174b8805", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f342c1daf9bb2502e35da04722c1a30fe3bd73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f342c1daf9bb2502e35da04722c1a30fe3bd73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96f342c1daf9bb2502e35da04722c1a30fe3bd73", "patch": "@@ -1,3 +1,8 @@\n+2006-07-19  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/t-slibgcc-darwin (stmp-lipo): Remove.\n+\tRewrite dependencies for libgcc_s.1.dylib.\n+\n 2006-07-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* except.c (duplicate_eh_regions_1): Clear next_peer.\n@@ -39,7 +44,7 @@\n \tWhether a constructor node is a valid static constant initializer\n \tif all its elements are.\n \t(initializer_constant_valid_p) <CONSTRUCTOR value>: Use it.\n-\t* output.h: Declare it.\t\n+\t* output.h: Declare it.\n \t* expr.c (categorize_ctor_elements_1): Return whether the constructor\n \tis a valid constant initializer instead of computing the number of\n \tnon-constant elements.  Use constructor_static_from_elts_p for this\n@@ -49,7 +54,7 @@\n \thelper.  Former head comment from this helper moved here, adjusted to\n \taccount for the interface changes.\n \t(mostly_zeros_p): Adjust call to categorize_ctor_elements.\n-\t(all_zeros_p): Likewise.\t\n+\t(all_zeros_p): Likewise.\n \t* gimplify.c (gimplify_init_constructor): Decide whether we can make\n \tstatic versions of the constructor from the categorize_ctor_elements\n \treturn value instead of the formerly computed number of non-constant\n@@ -186,7 +191,7 @@\n 2006-07-14  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* dbxout.c (dbxout_begin_prologue): Emit LFBB label at function start.\n-\t(dbxout_function_end): Use local label LFBB. Remove hook \n+\t(dbxout_function_end): Use local label LFBB. Remove hook\n \tDBX_OUTPUT_NFUN.\n \t(dbxout_source_line): Use local label LFBB.\n \t(dbxout_block): Likewise.\n@@ -212,7 +217,7 @@\n \n \t* config/sh/sh.c (sh_reorg): Ignore deleted insns whilst\n \twalking the LOG_LINKS chain.\n-  \n+\n 2006-07-12  Geoffrey Keating  <geoffk@apple.com>\n \n \t* doc/invoke.texi (C++ Dialect Options): Explain difference"}, {"sha": "d9381e646f15eac3ff0cd9c3f1cec0b7fb5c2220", "filename": "gcc/config/t-slibgcc-darwin", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f342c1daf9bb2502e35da04722c1a30fe3bd73/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f342c1daf9bb2502e35da04722c1a30fe3bd73/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=96f342c1daf9bb2502e35da04722c1a30fe3bd73", "patch": "@@ -43,7 +43,7 @@ ASM_HIDDEN_OP = .private_extern\n # The actual use of the libraries is controlled by REAL_LIBGCC_SPEC.\n #\n # This assumes each multilib corresponds to a different architecture.\n-libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc.a\n+libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver stmp-multilib\n \t# When building multilibbed target libraries, all the required\n \t# libraries are expected to exist in the multilib directory.\n \tMLIBS=`$(GCC_FOR_TARGET) --print-multi-lib \\\n@@ -62,7 +62,8 @@ libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc.a\n \t$(LIPO_FOR_TARGET) -output $@ -create $(@)_T*\n \trm $(@)_T*\n \n-stmp-lipo: libgcc.a libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n+libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT): stmp-multilib libgcc_s.10.4.dylib \\\n+\tlibgcc_s.10.5.dylib\n \t# When building multilibbed target libraries, all the required\n \t# libraries are expected to exist in the multilib directory.\n \tMLIBS=`$(GCC_FOR_TARGET) --print-multi-lib \\\n@@ -74,16 +75,15 @@ stmp-lipo: libgcc.a libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n \t$(LIPO_FOR_TARGET) -output libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) \\\n \t  -create libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n \trm libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n-\t$(STAMP) stmp-lipo\n \n # From the point-of-view of the Makefiles, libgcc is built by the 'strip'\n # and 'lipo' commands above.\n-LIBGCC=stmp-lipo\n+LIBGCC=libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) libgcc_s.10.4.dylib \\\n+\tlibgcc_s.10.5.dylib stmp-multilib\n \n INSTALL_FILES=libgcc_s.10.4.dylib libgcc_s.10.5.dylib libgcc_s.1.dylib\n \n-install-darwin-libgcc-stubs : $(INSTALL_FILES) installdirs install-multilib \\\n-\t\t\t \tstmp-lipo\n+install-darwin-libgcc-stubs : $(INSTALL_FILES) installdirs\n \tfor d in $(INSTALL_FILES) ; do \\\n \t  $(INSTALL_DATA) $$d $(DESTDIR)$(slibdir)/$$d || exit 1 ; \\\n \tdone\n@@ -93,4 +93,4 @@ install-darwin-libgcc-stubs : $(INSTALL_FILES) installdirs install-multilib \\\n \t$(LN_S) libgcc_s.1.dylib \\\n \t\t$(DESTDIR)$(slibdir)/libgcc_s_ppc64.1.dylib\n \n-INSTALL_LIBGCC += install-darwin-libgcc-stubs\n+INSTALL_LIBGCC = install-darwin-libgcc-stubs install-multilib"}]}