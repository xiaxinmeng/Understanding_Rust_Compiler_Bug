{"sha": "18246cedb54858482e28e44693f7459528f2714e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyNDZjZWRiNTQ4NTg0ODJlMjhlNDQ2OTNmNzQ1OTUyOGYyNzE0ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2010-04-21T23:33:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2010-04-21T23:33:44Z"}, "message": "faq.xml: Link to manual.\n\n2010-04-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* doc/xml/faq.xml: Link to manual.\n\t* doc/xml/manual/using.xml: Expand dynamic libraries section.\n\t* doc/xml/manual/strings.xml: Mention shrink_to_fit() member.\n\t* doc/xml/manual/prerequisites.xml: Link to doxygen requirements.\n\t* doc/xml/manual/appendix_contributing.xml: Update Bash version.\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r158624", "tree": {"sha": "80f57097da71ed324ad21f9513419c6d2b076a31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80f57097da71ed324ad21f9513419c6d2b076a31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18246cedb54858482e28e44693f7459528f2714e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18246cedb54858482e28e44693f7459528f2714e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18246cedb54858482e28e44693f7459528f2714e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18246cedb54858482e28e44693f7459528f2714e/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79"}], "stats": {"total": 8543, "additions": 4338, "deletions": 4205}, "files": [{"sha": "841dd99d7f6367d809307f4b63e61c89cf7accf4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,3 +1,12 @@\n+2010-04-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/xml/faq.xml: Link to manual.\n+\t* doc/xml/manual/using.xml: Expand dynamic libraries section.\n+\t* doc/xml/manual/strings.xml: Mention shrink_to_fit() member.\n+\t* doc/xml/manual/prerequisites.xml: Link to doxygen requirements.\n+\t* doc/xml/manual/appendix_contributing.xml: Update Bash version.\n+\t* doc/html/*: Regenerate.\n+\n 2010-04-13  Ian Lance Taylor  <iant@google.com>\n \n \t* include/backward/hash_map: Don't #include \"backward_warning.h\""}, {"sha": "5a40764298d8a3735589056e407270137c2df776", "filename": "libstdc++-v3/doc/html/api.html", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,24 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>API and Source Level Documentation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk02.html\" title=\"\" /><link rel=\"prev\" href=\"bk02.html\" title=\"\" /><link rel=\"next\" href=\"bk03.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">API and Source Level Documentation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\"></th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk03.html\">Next</a></td></tr></table><hr /></div><div class=\"article\" title=\"API and Source Level Documentation\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"api\"></a>API and Source Level Documentation</h2></div><div><p class=\"copyright\">Copyright \u00a9 \n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>API Documentation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk02.html\" title=\"\" /><link rel=\"prev\" href=\"bk02.html\" title=\"\" /><link rel=\"next\" href=\"bk03.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">API Documentation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\"></th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk03.html\">Next</a></td></tr></table><hr /></div><div class=\"article\" title=\"API Documentation\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"api\"></a>API Documentation</h2></div><div><p class=\"copyright\">Copyright \u00a9 \n       2008\n+    , \n+      2010\n      \n       <a class=\"ulink\" href=\"http://www.fsf.org/\" target=\"_top\">FSF\n       </a>\n-    </p></div><div><div class=\"legalnotice\" title=\"Legal Notice\"><a id=\"id561368\"></a><p>\n+    </p></div><div><div class=\"legalnotice\" title=\"Legal Notice\"><a id=\"id515244\"></a><p>\n       <a class=\"link\" href=\"manual/license.html\" title=\"License\">License \n       </a>\n     </p></div></div></div><hr /></div><p>\n-The GNU C++ library sources have been specially formatted so that with the\n-proper invocation of another tool (Doxygen), a set of HTML pages\n-are generated from the sources files themselves. The resultant\n-documentation is referred to as Source Level Documentation, and is\n-useful for examining the signatures of public member functions for\n-the library classes, finding out what is in a particular include\n-file, looking at inheritance diagrams, etc.\n+  The GNU C++ library sources have been specially formatted so that\n+  with the proper invocation of another tool (Doxygen), a set of\n+  indexed reference material can generated from the sources files\n+  themselves. The resultant documentation is referred to as the API\n+  documentation, and is useful for examining the signatures of public\n+  member functions for the library classes, finding out what is in a\n+  particular include file, looking at inheritance diagrams, etc.\n </p><p>\n-The source-level documentation for the most recent releases can be\n-viewed online:\n+  The API documentation, rendered into HTML, can be viewed online:\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n       <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-3.4/index.html\" target=\"_top\">for the 3.4 release\n       </a>\n@@ -39,16 +40,14 @@\n       </a>\n       (For the main development tree; see the date on the first page.)\n     </p></li></ul></div><p>\n-This generated HTML collection, as above, is also available for download in the libstdc++ snapshots directory at\n+  The rendered HTML, as above, is also available for download on the\n+  gcc.org site in a directory located at\n    <code class=\"literal\">&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>.\n    You will almost certainly need to use one of the\n    <a class=\"ulink\" href=\"http://gcc.gnu.org/mirrors.html\" target=\"_top\">mirror sites</a> to download\n-   the tarball.  After unpacking, simply load libstdc++-html-*/index.html\n+   the tarball. After unpacking, simply load libstdc++-html-*/index.html\n    into a browser.\n </p><p>\n-Documentation for older releases is available for download only, not\n-online viewing.\n-</p><p>\n-In addition, an initial set of man pages are also available in the\n-same place as the HTML collections.  Start with C++Intro(3).\n+  In addition, a rendered set of man pages are available in the same\n+  location specified above. Start with C++Intro(3).\n </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "16ac5f094f65e70b32f3df00989de3b721ec4bb8", "filename": "libstdc++-v3/doc/html/bk02.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,3 +1,3 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"prev\" href=\"manual/backwards.html\" title=\"Backwards Compatibility\" /><link rel=\"next\" href=\"api.html\" title=\"API and Source Level Documentation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"manual/backwards.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><hr /></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"article\"><a href=\"api.html\">API and Source Level Documentation</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"manual/backwards.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\">\u00a0</td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Backwards Compatibility\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0API and Source Level Documentation</td></tr></table></div></body></html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"prev\" href=\"manual/backwards.html\" title=\"Backwards Compatibility\" /><link rel=\"next\" href=\"api.html\" title=\"API Documentation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"manual/backwards.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><hr /></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"article\"><a href=\"api.html\">API Documentation</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"manual/backwards.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\">\u00a0</td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Backwards Compatibility\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0API Documentation</td></tr></table></div></body></html>"}, {"sha": "89beabfeb2677c43770f59edab2392b3f712c17f", "filename": "libstdc++-v3/doc/html/bk03.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fbk03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,3 +1,3 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"prev\" href=\"api.html\" title=\"API and Source Level Documentation\" /><link rel=\"next\" href=\"faq.html\" title=\"Frequently Asked Questions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"api.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"faq.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><hr /></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"article\"><a href=\"faq.html\">Frequently Asked Questions</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"api.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\">\u00a0</td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"faq.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">API and Source Level Documentation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Frequently Asked Questions</td></tr></table></div></body></html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"prev\" href=\"api.html\" title=\"API Documentation\" /><link rel=\"next\" href=\"faq.html\" title=\"Frequently Asked Questions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"api.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"faq.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><hr /></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"article\"><a href=\"faq.html\">Frequently Asked Questions</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"api.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\">\u00a0</td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"faq.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">API Documentation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Frequently Asked Questions</td></tr></table></div></body></html>"}, {"sha": "046cbb3bc831e477a9f507d85f7dc08f12ffba67", "filename": "libstdc++-v3/doc/html/faq.html", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -4,7 +4,7 @@\n       2008\n      \n       <a class=\"ulink\" href=\"http://www.fsf.org\" target=\"_top\">FSF</a>\n-    </p></div></div><hr /></div><div class=\"qandaset\" title=\"Frequently Asked Questions\"><a id=\"id571249\"></a><dl><dt>1.  <a href=\"faq.html#faq.info\">General Information</a></dt><dd><dl><dt>1.1. <a href=\"faq.html#faq.what\">\n+    </p></div></div><hr /></div><div class=\"qandaset\" title=\"Frequently Asked Questions\"><a id=\"id621954\"></a><dl><dt>1.  <a href=\"faq.html#faq.info\">General Information</a></dt><dd><dl><dt>1.1. <a href=\"faq.html#faq.what\">\n       What is libstdc++?\n     </a></dt><dt>1.2. <a href=\"faq.html#faq.why\">\n       Why should I use libstdc++?\n@@ -315,12 +315,15 @@\n     and <span class=\"command\"><strong>ldconfig</strong></span> for more information. The dynamic\n     linker has different names on different platforms but the man page\n     is usually called something such as <code class=\"filename\">ld.so/rtld/dld.so</code>.\n+    </p><p>\n+    Using LD_LIBRARY_PATH is not always the best solution, <a class=\"link\" href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\" title=\"Finding Dynamic or Shared Libraries\">Finding Dynamic or Shared\n+    Libraries</a> in the manual gives some alternatives.\n     </p></td></tr><tr class=\"question\" title=\"3.5.\"><td align=\"left\" valign=\"top\"><a id=\"faq.what_is_libsupcxx\"></a><a id=\"q-what_is_libsupcxx\"></a><p><b>3.5.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       What's libsupc++?\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-what_is_libsupcxx\"></a></td><td align=\"left\" valign=\"top\"><p>\n       If the only functions from <code class=\"filename\">libstdc++.a</code>\n       which you need are language support functions (those listed in\n-      <a class=\"link\" href=\"manual/support.html\" title=\"Part\u00a0II.\u00a0 Support\">clause 18</a> of the\n+      <a class=\"link\" href=\"manual/support.html\" title=\"Chapter\u00a04.\u00a0 Support\">clause 18</a> of the\n       standard, e.g., <code class=\"function\">new</code> and\n       <code class=\"function\">delete</code>), then try linking against\n       <code class=\"filename\">libsupc++.a</code>, which is a subset of\n@@ -647,8 +650,9 @@\n     typo, or wrong visibility, or you just plain forgot, etc).\n     </p><p>\n     More information, including how to optionally enable/disable the\n-    checks, is available\n-    <a class=\"link\" href=\"manual/bk01pt03ch08.html\" title=\"Chapter\u00a08.\u00a0Concept Checking\">here</a>.\n+    checks, is available in the\n+    <a class=\"link\" href=\"manual/bk01pt02ch05s02.html\" title=\"Concept Checking\">Diagnostics</a>.\n+    chapter of the manual.\n     </p></td></tr><tr class=\"question\" title=\"6.6.\"><td align=\"left\" valign=\"top\"><a id=\"faq.dlopen_crash\"></a><a id=\"q-dlopen_crash\"></a><p><b>6.6.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       Program crashes when using library code in a\n       dynamically-loaded library\n@@ -685,7 +689,7 @@\n       list::size() is O(n)!\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-list_size_on\"></a></td><td align=\"left\" valign=\"top\"><p>\n     See\n-    the <a class=\"link\" href=\"manual/containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\">Containers</a>\n+    the <a class=\"link\" href=\"manual/containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\">Containers</a>\n     chapter.\n     </p></td></tr><tr class=\"question\" title=\"6.9.\"><td align=\"left\" valign=\"top\"><a id=\"faq.easy_to_fix\"></a><a id=\"q-easy_to_fix\"></a><p><b>6.9.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       Aw, that's easy to fix!\n@@ -869,6 +873,6 @@\n \u00a0\u00a0\u00a0\u00a0</p></div><p>\n     The copy will take O(n) time and the swap is constant time.\n     </p><p>\n-    See <a class=\"link\" href=\"manual/bk01pt05ch13s05.html\" title=\"Shrink to Fit\">Shrink-to-fit\n+    See <a class=\"link\" href=\"manual/strings.html#strings.string.shrink\" title=\"Shrink to Fit\">Shrink-to-fit\n     strings</a> for a similar solution for strings.\n     </p></td></tr></tbody></table></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk03.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0</td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "618da46367b13058ddacb2ba68e26473afc21ee0", "filename": "libstdc++-v3/doc/html/manual/abi.html", "status": "modified", "additions": 84, "deletions": 73, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -8,12 +8,12 @@\n   C++ applications often dependent on specific language support\n   routines, say for throwing exceptions, or catching exceptions, and\n   perhaps also dependent on features in the C++ Standard Library.\n-</p><p> \n+</p><p>\n   The C++ Standard Library has many include files, types defined in\n   those include files, specific named functions, and other\n   behavior. The text of these behaviors, as written in source include\n   files, is called the Application Programing Interface, or API.\n-</p><p> \n+</p><p>\n   Furthermore, C++ source that is compiled into object files is\n   transformed by the compiler: it arranges objects with specific\n   alignment and in a particular layout, mangling names according to a\n@@ -32,7 +32,7 @@\n   <code class=\"code\">-fno-exceptions</code>, but include others: see the complete\n   list in the GCC manual under the heading <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Code-Gen-Options.html#Code%20Gen%20Options\" target=\"_top\">Options\n   for Code Generation Conventions</a>.\n-</p><p> \n+</p><p>\n   The configure options used when building a specific libstdc++\n   version may also impact the resulting library ABI. The available\n   configure options, and their impact on the library ABI, are\n@@ -240,11 +240,11 @@\n %g++ hello.cc -o hello.out\n \n %ldd hello.out\n-        libstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x00764000)\n-        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x004a8000)\n-        libgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x40016000)\n-        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x0036d000)\n-        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n+\tlibstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x00764000)\n+\tlibm.so.6 =&gt; /lib/tls/libm.so.6 (0x004a8000)\n+\tlibgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x40016000)\n+\tlibc.so.6 =&gt; /lib/tls/libc.so.6 (0x0036d000)\n+\t/lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n \n %nm hello.out\n </pre><p>\n@@ -273,7 +273,7 @@\n the way the compiler deals with this class in by-value return\n statements or parameters: instead of being passing instances of this\n class in registers, the compiler will be forced to use memory. See <a class=\"ulink\" href=\"http://www.codesourcery.com/cxx-abi/abi.html#calls\" target=\"_top\"> this part</a>\n- of the C++ ABI documentation for further details. \n+ of the C++ ABI documentation for further details.\n  </p></li></ol></div></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"abi.impl\"></a>Implementation</h3></div></div></div><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n      Separation of interface and implementation\n    </p><p>\n@@ -298,7 +298,7 @@\n        char</code> and <code class=\"code\"> wchar_t</code> instantiations, and\n        includes <code class=\"code\"> basic_string</code>, the locale facets, and the\n        types in <code class=\"code\"> iostreams</code>.\n-     </p></dd></dl></div><p> \n+     </p></dd></dl></div><p>\n    In addition, these techniques have the additional benefit that they\n    reduce binary size, which can increase runtime performance.\n  </p></li><li class=\"listitem\"><p>\n@@ -329,7 +329,7 @@\n     </p><p>\n       Testing the C++ compiler ABI can be done various ways.\n     </p><p>\n-      One.  Intel ABI checker. \n+      One.  Intel ABI checker.\n     </p><p>\n Two.\n The second is yet unreleased, but has been announced on the gcc\n@@ -344,16 +344,16 @@\n </p><p>\n Testing the C++ library ABI can also be done various ways.\n </p><p>\n-One. \n-(Brendan Kehoe, Jeff Law suggestion to run 'make check-c++' two ways, \n+One.\n+(Brendan Kehoe, Jeff Law suggestion to run 'make check-c++' two ways,\n one with a new compiler and an old library, and the other with an old\n compiler and a new library, and look for testsuite regressions)\n </p><p>\n Details on how to set this kind of test up can be found here:\n http://gcc.gnu.org/ml/gcc/2002-08/msg00142.html\n </p><p>\n-Two.  \n-Use the 'make check-abi' rule in the libstdc++ Makefile. \n+Two.\n+Use the 'make check-abi' rule in the libstdc++ Makefile.\n </p><p>\n This is a proactive check the library ABI. Currently, exported symbol\n names that are either weak or defined are checked against a last known\n@@ -372,7 +372,7 @@\n </p><p>\n This dataset is insufficient, yet a start. Also needed is a\n comprehensive check for all user-visible types part of the standard\n-library for sizeof() and alignof() changes. \n+library for sizeof() and alignof() changes.\n </p><p>\n Verifying compatible layouts of objects is not even attempted.  It\n should be possible to use sizeof, alignof, and offsetof to compute\n@@ -403,7 +403,7 @@\n \n %$bld/H-x86-gcc-3.4.0/bin/g++ -c a.cc\n \n-%ar cru libone.a a.o \n+%ar cru libone.a a.o\n </pre><p> And, libtwo is constructed as follows: </p><pre class=\"programlisting\">\n %$bld/H-x86-gcc-3.3.3/bin/g++ -fPIC -DPIC -c b.cc\n \n@@ -413,24 +413,24 @@\n \n %$bld/H-x86-gcc-3.3.3/bin/g++ -c b.cc\n \n-%ar cru libtwo.a b.o \n+%ar cru libtwo.a b.o\n </pre><p> ...with the resulting libraries looking like </p><pre class=\"screen\">\n <code class=\"computeroutput\">\n %ldd libone.so.1.0.0\n-        libstdc++.so.6 =&gt; /usr/lib/libstdc++.so.6 (0x40016000)\n-        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x400fa000)\n-        libgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x4011c000)\n-        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x40125000)\n-        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n+\tlibstdc++.so.6 =&gt; /usr/lib/libstdc++.so.6 (0x40016000)\n+\tlibm.so.6 =&gt; /lib/tls/libm.so.6 (0x400fa000)\n+\tlibgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x4011c000)\n+\tlibc.so.6 =&gt; /lib/tls/libc.so.6 (0x40125000)\n+\t/lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n \n %ldd libtwo.so.1.0.0\n-        libstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x40027000)\n-        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x400e1000)\n-        libgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x40103000)\n-        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x4010c000)\n-        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n+\tlibstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x40027000)\n+\tlibm.so.6 =&gt; /lib/tls/libm.so.6 (0x400e1000)\n+\tlibgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x40103000)\n+\tlibc.so.6 =&gt; /lib/tls/libc.so.6 (0x4010c000)\n+\t/lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n </code>\n-</pre><p> \n+</pre><p>\n   Then, the \"C\" compiler is used to compile a source file that uses\n   functions from each library.\n </p><pre class=\"programlisting\">\n@@ -440,18 +440,18 @@\n </p><pre class=\"screen\">\n <code class=\"computeroutput\">\n %ldd a.out\n-        libstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x00764000)\n-        libstdc++.so.6 =&gt; /usr/lib/libstdc++.so.6 (0x40015000)\n-        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x0036d000)\n-        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x004a8000)\n-        libgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x400e5000)\n-        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n+\tlibstdc++.so.5 =&gt; /usr/lib/libstdc++.so.5 (0x00764000)\n+\tlibstdc++.so.6 =&gt; /usr/lib/libstdc++.so.6 (0x40015000)\n+\tlibc.so.6 =&gt; /lib/tls/libc.so.6 (0x0036d000)\n+\tlibm.so.6 =&gt; /lib/tls/libm.so.6 (0x004a8000)\n+\tlibgcc_s.so.1 =&gt; /mnt/hd/bld/gcc/gcc/libgcc_s.so.1 (0x400e5000)\n+\t/lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x00355000)\n </code>\n </pre><p>\n   This resulting binary, when executed, will be able to safely use\n   code from both liba, and the dependent libstdc++.so.6, and libb,\n   with the dependent libstdc++.so.5.\n-</p></div></div><div class=\"sect2\" title=\"Outstanding Issues\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"abi.issues\"></a>Outstanding Issues</h3></div></div></div><p> \n+</p></div></div><div class=\"sect2\" title=\"Outstanding Issues\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"abi.issues\"></a>Outstanding Issues</h3></div></div></div><p>\n   Some features in the C++ language make versioning especially\n   difficult. In particular, compiler generated constructs such as\n   implicit instantiations for templates, typeinfo information, and\n@@ -464,60 +464,71 @@\n <a class=\"ulink\" href=\"http://gcc.gnu.org/PR24660\" target=\"_top\">24660: versioning weak symbols in libstdc++</a>\n </p><p>\n <a class=\"ulink\" href=\"http://gcc.gnu.org/PR19664\" target=\"_top\">19664: libstdc++ headers should have pop/push of the visibility around the declarations</a>\n-</p></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"abi.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"ABIcheck, a vague idea of checking ABI compatibility\"><a id=\"id725008\"></a><p><span class=\"title\"><i>\n-      ABIcheck, a vague idea of checking ABI compatibility\n-    </i>. </span><span class=\"biblioid\">\n+</p></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"abi.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\"><a id=\"id422104\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://abicheck.sourceforge.net/\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  ABIcheck, a vague idea of checking ABI compatibility\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"C++ ABI Reference\"><a id=\"id725026\"></a><p><span class=\"title\"><i>\n-      C++ ABI Reference\n-    </i>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id422124\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.codesourcery.com/public/cxx-abi/\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  C++ ABI Reference\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Intel\u00ae Compilers for Linux* -Compatibility with the GNU Compilers\"><a id=\"id725043\"></a><p><span class=\"title\"><i>\n-      Intel\u00ae Compilers for Linux* -Compatibility with the GNU Compilers\n-    </i>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id422144\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.intel.com/cd/software/products/asmo-na/eng/284736.htm\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Intel Compilers for Linux Compatibility with the GNU Compilers\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Sun Solaris 2.9 : Linker and Libraries Guide (document 816-1386)\"><a id=\"id725060\"></a><p><span class=\"title\"><i>\n-      Sun Solaris 2.9 : Linker and Libraries Guide (document 816-1386)\n-    </i>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id422164\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://docs.sun.com/app/docs/doc/817-1984\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Sun Solaris 2.9 : Linker and Libraries Guide (document 816-1386)\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Sun Solaris 2.9 : C++ Migration Guide (document 816-2459)\"><a id=\"id725077\"></a><p><span class=\"title\"><i>\n-      Sun Solaris 2.9 : C++ Migration Guide (document 816-2459)\n-    </i>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id493165\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://docs.sun.com/app/docs/doc/819-5266\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Sun Solaris 2.9 : C++ Migration Guide (document 816-2459)\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"How to Write Shared Libraries\"><a id=\"id725094\"></a><p><span class=\"title\"><i>\n-      How to Write Shared Libraries\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id493184\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://people.redhat.com/drepper/dsohowto.pdf\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  How to Write Shared Libraries\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"C++ ABI for the ARM Architecture\"><a id=\"id725122\"></a><p><span class=\"title\"><i>\n-      C++ ABI for the ARM Architecture\n-    </i>. </span><span class=\"biblioid\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id493215\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.arm.com/miscPDFs/8033.pdf\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  C++ ABI for the ARM Architecture\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Dynamic Shared Objects: Survey and Issues\"><a id=\"id651420\"></a><p><span class=\"title\"><i>\n-      Dynamic Shared Objects: Survey and Issues\n-    </i>. </span><span class=\"subtitle\">\n-      ISO C++ J16/06-0046\n-    . </span><span class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span>. </span><span class=\"biblioid\">\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id493234\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1976.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Dynamic Shared Objects: Survey and Issues\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Versioning With Namespaces\"><a id=\"id651453\"></a><p><span class=\"title\"><i>\n-      Versioning With Namespaces\n-    </i>. </span><span class=\"subtitle\">\n-      ISO C++ J16/06-0083\n-    . </span><span class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span>. </span><span class=\"biblioid\">\n+    . </span><span class=\"subtitle\">\n+      ISO C++ J16/06-0046\n+    . </span><span class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id493269\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2013.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Versioning With Namespaces\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Binary Compatibility of Shared Libraries Implemented in C++ on GNU/Linux Systems\"><a id=\"id651486\"></a><p><span class=\"title\"><i>\n-      Binary Compatibility of Shared Libraries Implemented in C++ on GNU/Linux Systems\n-    </i>. </span><span class=\"subtitle\">\n-SYRCoSE 2009\n-    . </span><span class=\"author\"><span class=\"firstname\">Pavel</span> <span class=\"surname\">Shved</span>. </span><span class=\"author\"><span class=\"firstname\">Denis</span> <span class=\"surname\">Silakov</span>. </span><span class=\"biblioid\">\n+    . </span><span class=\"subtitle\">\n+      ISO C++ J16/06-0083\n+    . </span><span class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id493304\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://syrcose.ispras.ru/2009/files/SYRCoSE2009-CfP.pdf\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Binary Compatibility of Shared Libraries Implemented in C++\n+\t  on GNU/Linux Systems\n+\t</em>\n       </a>\n-    . </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"test.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Test\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0API Evolution and Deprecation History</td></tr></table></div></body></html>\n+    . </span><span class=\"subtitle\">\n+      SYRCoSE 2009\n+    . </span><span class=\"author\"><span class=\"firstname\">Pavel</span> <span class=\"surname\">Shved</span>. </span><span class=\"author\"><span class=\"firstname\">Denis</span> <span class=\"surname\">Silakov</span>. </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"test.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"api.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Test\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0API Evolution and Deprecation History</td></tr></table></div></body></html>"}, {"sha": "3e5b3a5a86ef7893efb93fb435922501caf595d3", "filename": "libstdc++-v3/doc/html/manual/algorithms.html", "status": "modified", "additions": 56, "deletions": 4, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Falgorithms.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Falgorithms.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Falgorithms.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,61 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0IX.\u00a0 Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      algorithm&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt08ch19s02.html\" title=\"One Past the End\" /><link rel=\"next\" href=\"bk01pt09pr02.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0IX.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a011.\u00a0 Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      algorithm&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"iterators.html\" title=\"Chapter\u00a010.\u00a0 Iterators\" /><link rel=\"next\" href=\"numerics.html\" title=\"Chapter\u00a012.\u00a0 Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a011.\u00a0\n   Algorithms\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt08ch19s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt09pr02.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0IX.\u00a0 Algorithms\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.algorithms\"></a>Part\u00a0IX.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a011.\u00a0 Algorithms\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.algorithms\"></a>Chapter\u00a011.\u00a0\n   Algorithms\n-  <a id=\"id638163\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"preface\"><a href=\"bk01pt09pr02.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"bk01pt09ch20.html\">20. Mutating</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"bk01pt09ch20.html#algorithms.mutating.swap\"><code class=\"function\">swap</code></a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt09ch20.html#algorithms.swap.specializations\">Specializations</a></span></dt></dl></dd></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt08ch19s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt09pr02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">One Past the End\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n+  <a id=\"id505811\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"algorithms.html#std.algorithms.mutating\">Mutating</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"algorithms.html#algorithms.mutating.swap\"><code class=\"function\">swap</code></a></span></dt></dl></dd></dl></div><p>\n+  The neatest accomplishment of the algorithms sect1 is that all the\n+  work is done via iterators, not containers directly.  This means two\n+  important things:\n+</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n+      Anything that behaves like an iterator can be used in one of\n+      these algorithms.  Raw pointers make great candidates, thus\n+      built-in arrays are fine containers, as well as your own\n+      iterators.\n+    </p></li><li class=\"listitem\"><p>\n+      The algorithms do not (and cannot) affect the container as a\n+      whole; only the things between the two iterator endpoints.  If\n+      you pass a range of iterators only enclosing the middle third of\n+      a container, then anything outside that range is inviolate.\n+    </p></li></ol></div><p>\n+  Even strings can be fed through the algorithms here, although the\n+  string class has specialized versions of many of these functions\n+  (for example, <code class=\"code\">string::find()</code>).  Most of the examples\n+  on this page will use simple arrays of integers as a playground\n+  for algorithms, just to keep things simple.  The use of\n+  <span class=\"emphasis\"><em>N</em></span> as a size in the examples is to keep things\n+  easy to read but probably won't be valid code.  You can use wrappers\n+  such as those described in\n+  the <a class=\"link\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\">containers sect1</a> to keep\n+  real code readable.\n+</p><p>\n+  The single thing that trips people up the most is the definition\n+  of <span class=\"emphasis\"><em>range</em></span> used with iterators; the famous\n+  \"past-the-end\" rule that everybody loves to hate.  The\n+  <a class=\"link\" href=\"iterators.html\" title=\"Chapter\u00a010.\u00a0 Iterators\">iterators sect1</a> of this\n+    document has a complete explanation of this simple rule that seems\n+    to cause so much confusion.  Once you\n+    get <span class=\"emphasis\"><em>range</em></span> into your head (it's not that hard,\n+    honest!), then the algorithms are a cakewalk.\n+</p><div class=\"sect1\" title=\"Mutating\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.algorithms.mutating\"></a>Mutating</h2></div></div></div><div class=\"sect2\" title=\"swap\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"algorithms.mutating.swap\"></a><code class=\"function\">swap</code></h3></div></div></div><div class=\"sect3\" title=\"Specializations\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"algorithms.swap.specializations\"></a>Specializations</h4></div></div></div><p>If you call <code class=\"code\"> std::swap(x,y); </code> where x and y are standard\n+      containers, then the call will automatically be replaced by a call to\n+      <code class=\"code\"> x.swap(y); </code> instead.\n+   </p><p>This allows member functions of each container class to take over, and\n+      containers' swap functions should have O(1) complexity according to\n+      the standard.  (And while \"should\" allows implementations to\n+      behave otherwise and remain compliant, this implementation does in\n+      fact use constant-time swaps.)  This should not be surprising, since\n+      for two containers of the same type to swap contents, only some\n+      internal pointers to storage need to be exchanged.\n+   </p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a010.\u00a0\n+  Iterators\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a012.\u00a0\n+  Numerics\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "a8b88b7d5a9e29bb145766aa12feee4173641617", "filename": "libstdc++-v3/doc/html/manual/api.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -30,8 +30,8 @@\n   </p><p>Symbol versioning introduced for shared library.</p><p>Removal of include <code class=\"filename\">backward/strstream.h</code>.</p><p>Allocator changes. Change <code class=\"code\">__malloc_alloc</code> to <code class=\"code\">malloc_allocator</code> and <code class=\"code\">__new_alloc</code> to <code class=\"code\">new_allocator</code>. </p><p> For GCC releases from 2.95 through the 3.1 series, defining\n    <code class=\"literal\">__USE_MALLOC</code> on the gcc command line would change the\n    default allocation strategy to instead use <code class=\"code\"> malloc</code> and\n-   <code class=\"function\">free</code>. (This same functionality is now spelled <code class=\"literal\">_GLIBCXX_FORCE_NEW</code>, see \n-   <a class=\"link\" href=\"using_macros.html\" title=\"Macros\">this page</a> \n+   <code class=\"function\">free</code>. (This same functionality is now spelled <code class=\"literal\">_GLIBCXX_FORCE_NEW</code>, see\n+   <a class=\"link\" href=\"using_macros.html\" title=\"Macros\">this page</a>\n    for details.\n    </p><p>Error handling in iostreams cleaned up, made consistent. </p></div><div class=\"sect2\" title=\"3.3\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_330\"></a><code class=\"constant\">3.3</code></h3></div></div></div><p>\n   </p></div><div class=\"sect2\" title=\"3.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_340\"></a><code class=\"constant\">3.4</code></h3></div></div></div><p>\n@@ -75,11 +75,11 @@\n    <span class=\"type\">__alloc</span> to select an underlying allocator that\n    satisfied memory allocation requests. The selection of this\n    underlying allocator was not user-configurable.\n-   </p><div class=\"table\"><a id=\"id653273\"></a><p class=\"title\"><b>Table\u00a0B.1.\u00a0Extension Allocators</b></p><div class=\"table-contents\"><table summary=\"Extension Allocators\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Allocator (3.4)</th><th align=\"left\">Header (3.4)</th><th align=\"left\">Allocator (3.[0-3])</th><th align=\"left\">Header (3.[0-3])</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::new_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/new_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__new_alloc</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::malloc_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/malloc_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__malloc_alloc_template&lt;int&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::debug_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/debug_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::debug_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::__pool_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/pool_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__default_alloc_template&lt;bool,int&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::__mt_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/mt_allocator.h</code></td><td align=\"left\"> </td><td align=\"left\"> </td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::bitmap_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/bitmap_allocator.h</code></td><td align=\"left\"> </td><td align=\"left\"> </td></tr></tbody></table></div></div><br class=\"table-break\" /><p> Releases after gcc-3.4 have continued to add to the collection\n+   </p><div class=\"table\"><a id=\"id433329\"></a><p class=\"title\"><b>Table\u00a0B.1.\u00a0Extension Allocators</b></p><div class=\"table-contents\"><table summary=\"Extension Allocators\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Allocator (3.4)</th><th align=\"left\">Header (3.4)</th><th align=\"left\">Allocator (3.[0-3])</th><th align=\"left\">Header (3.[0-3])</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::new_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/new_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__new_alloc</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::malloc_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/malloc_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__malloc_alloc_template&lt;int&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::debug_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/debug_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::debug_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::__pool_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/pool_allocator.h</code></td><td align=\"left\"><code class=\"classname\">std::__default_alloc_template&lt;bool,int&gt;</code></td><td align=\"left\"><code class=\"filename\">memory</code></td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::__mt_alloc&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/mt_allocator.h</code></td><td align=\"left\"> </td><td align=\"left\"> </td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::bitmap_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/bitmap_allocator.h</code></td><td align=\"left\"> </td><td align=\"left\"> </td></tr></tbody></table></div></div><br class=\"table-break\" /><p> Releases after gcc-3.4 have continued to add to the collection\n    of available allocators. All of these new allocators are\n    standard-style. The following table includes details, along with\n    the first released version of GCC that included the extension allocator.\n-   </p><div class=\"table\"><a id=\"id594438\"></a><p class=\"title\"><b>Table\u00a0B.2.\u00a0Extension Allocators Continued</b></p><div class=\"table-contents\"><table summary=\"Extension Allocators Continued\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Allocator</th><th align=\"left\">Include</th><th align=\"left\">Version</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::array_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/array_allocator.h</code></td><td align=\"left\">4.0.0</td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::throw_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/throw_allocator.h</code></td><td align=\"left\">4.2.0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n+   </p><div class=\"table\"><a id=\"id432659\"></a><p class=\"title\"><b>Table\u00a0B.2.\u00a0Extension Allocators Continued</b></p><div class=\"table-contents\"><table summary=\"Extension Allocators Continued\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Allocator</th><th align=\"left\">Include</th><th align=\"left\">Version</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::array_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/array_allocator.h</code></td><td align=\"left\">4.0.0</td></tr><tr><td align=\"left\"><code class=\"classname\">__gnu_cxx::throw_allocator&lt;T&gt;</code></td><td align=\"left\"><code class=\"filename\">ext/throw_allocator.h</code></td><td align=\"left\">4.2.0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n Debug mode first appears.\n </p><p>\n Precompiled header support <acronym class=\"acronym\">PCH</acronym> support.\n@@ -143,13 +143,13 @@\n </p><p>\n Parallel mode first appears.\n </p><p>Variadic template implementations of items in <code class=\"filename\">tuple</code> and\n-    <code class=\"filename\">functional</code>. \n+    <code class=\"filename\">functional</code>.\n </p><p>Default <code class=\"code\">what</code> implementations give more elaborate\n     exception strings for <code class=\"code\">bad_cast</code>,\n     <code class=\"code\">bad_typeid</code>, <code class=\"code\">bad_exception</code>, and\n     <code class=\"code\">bad_alloc</code>.\n </p><p>\n-PCH binary files no longer installed. Instead, the source files are installed. \n+PCH binary files no longer installed. Instead, the source files are installed.\n </p><p>\n Namespace pb_ds moved to __gnu_pb_ds.\n </p></div><div class=\"sect2\" title=\"4.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_440\"></a><code class=\"constant\">4.4</code></h3></div></div></div><p>\n@@ -227,7 +227,7 @@\n   </p></li></ul></div><p>\n Profile mode first appears.\n </p><p>\n-Support for decimal floating-point arithmetic, including <code class=\"classname\">decimal32</code>, <code class=\"classname\">decimal64</code>, and <code class=\"classname\">decimal128</code>. \n+Support for decimal floating-point arithmetic, including <code class=\"classname\">decimal32</code>, <code class=\"classname\">decimal64</code>, and <code class=\"classname\">decimal128</code>.\n </p><p>\n Python pretty-printers are added for use with appropriately-advanced versions of <span class=\"command\"><strong>gdb</strong></span>.\n </p><p>"}, {"sha": "467f7fd098821bbfe5aff520c619689245a9ffdf", "filename": "libstdc++-v3/doc/html/manual/appendix_contributing.html", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_contributing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_contributing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_contributing.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,17 +1,19 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0A.\u00a0 Contributing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt12ch41s03.html\" title=\"Use\" /><link rel=\"next\" href=\"source_organization.html\" title=\"Directory Layout and Source Conventions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0A.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0A.\u00a0 Contributing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"prev\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"next\" href=\"source_organization.html\" title=\"Directory Layout and Source Conventions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0A.\u00a0\n   Contributing\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch41s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_organization.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0A.\u00a0 Contributing\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.contrib\"></a>Appendix\u00a0A.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_organization.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0A.\u00a0 Contributing\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.contrib\"></a>Appendix\u00a0A.\u00a0\n   Contributing\n-  <a id=\"id598653\" class=\"indexterm\"></a>\n-</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"appendix_contributing.html#contrib.list\">Contributor Checklist</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.reading\">Reading</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.copyright\">Assignment</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.getting\">Getting Sources</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.patches\">Submitting Patches</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_organization.html\">Directory Layout and Source Conventions</a></span></dt><dt><span class=\"sect1\"><a href=\"source_code_style.html\">Coding Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.bad_identifiers\">Bad Identifiers</a></span></dt><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.example\">By Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"documentation_style.html\">Documentation Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.doxygen\">Doxygen</a></span></dt><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.docbook\">Docbook</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_design_notes.html\">Design Notes</a></span></dt></dl></div><p> \n+  <a id=\"id488768\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"appendix_contributing.html#contrib.list\">Contributor Checklist</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.reading\">Reading</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.copyright\">Assignment</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.getting\">Getting Sources</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.patches\">Submitting Patches</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_organization.html\">Directory Layout and Source Conventions</a></span></dt><dt><span class=\"sect1\"><a href=\"source_code_style.html\">Coding Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.bad_identifiers\">Bad Identifiers</a></span></dt><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.example\">By Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"documentation_style.html\">Documentation Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.doxygen\">Doxygen</a></span></dt><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.docbook\">Docbook</a></span></dt><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.combines\">Combines</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_design_notes.html\">Design Notes</a></span></dt></dl></div><p>\n   The GNU C++ Library follows an open development model. Active\n   contributors are assigned maintainer-ship responsibility, and given\n   write access to the source repository. First time contributors\n   should follow this procedure:\n-</p><div class=\"sect1\" title=\"Contributor Checklist\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.list\"></a>Contributor Checklist</h2></div></div></div><div class=\"sect2\" title=\"Reading\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"list.reading\"></a>Reading</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p> \n+</p><div class=\"sect1\" title=\"Contributor Checklist\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.list\"></a>Contributor Checklist</h2></div></div></div><div class=\"sect2\" title=\"Reading\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"list.reading\"></a>Reading</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n \t  Get and read the relevant sections of the C++ language\n \t  specification. Copies of the full ISO 14882 standard are\n \t  available on line via the ISO mirror site for committee\n@@ -21,38 +23,38 @@\n \t  the standard from their respective national standards\n \t  organization. In the USA, this national standards\n \t  organization is ANSI and their web-site is right\n-\t  <a class=\"ulink\" href=\"http://www.ansi.org\" target=\"_top\">here.</a> \n-\t  (And if you've already registered with them, clicking this link will take you to directly to the place where you can \n+\t  <a class=\"ulink\" href=\"http://www.ansi.org\" target=\"_top\">here.</a>\n+\t  (And if you've already registered with them, clicking this link will take you to directly to the place where you can\n \t  <a class=\"ulink\" href=\"http://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC+14882:2003\" target=\"_top\">buy the standard on-line.)</a>\n-\t</p></li><li class=\"listitem\"><p> \n+\t</p></li><li class=\"listitem\"><p>\n \t  The library working group bugs, and known defects, can\n \t  be obtained here:\n \t  <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/\" target=\"_top\">http://www.open-std.org/jtc1/sc22/wg21 </a>\n-\t</p></li><li class=\"listitem\"><p> \n+\t</p></li><li class=\"listitem\"><p>\n \t  The newsgroup dedicated to standardization issues is\n \t  comp.std.c++: this FAQ for this group is quite useful and\n \t  can be\n \t  found <a class=\"ulink\" href=\"http://www.comeaucomputing.com/csc/faq.html\" target=\"_top\">\n \t  here </a>.\n-      </p></li><li class=\"listitem\"><p> \n+      </p></li><li class=\"listitem\"><p>\n \t  Peruse\n \t  the <a class=\"ulink\" href=\"http://www.gnu.org/prep/standards\" target=\"_top\">GNU\n \t  Coding Standards</a>, and chuckle when you hit the part\n \t  about <span class=\"quote\">\u201c<span class=\"quote\">Using Languages Other Than C</span>\u201d</span>.\n-\t</p></li><li class=\"listitem\"><p> \n+\t</p></li><li class=\"listitem\"><p>\n \t  Be familiar with the extensions that preceded these\n \t  general GNU rules. These style issues for libstdc++ can be\n \t  found <a class=\"link\" href=\"source_code_style.html\" title=\"Coding Style\">here</a>.\n-      </p></li><li class=\"listitem\"><p> \n+      </p></li><li class=\"listitem\"><p>\n \t  And last but certainly not least, read the\n \t  library-specific information\n \t  found <a class=\"link\" href=\"appendix_porting.html\" title=\"Appendix\u00a0B.\u00a0 Porting and Maintenance\"> here</a>.\n       </p></li></ul></div></div><div class=\"sect2\" title=\"Assignment\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"list.copyright\"></a>Assignment</h3></div></div></div><p>\n       Small changes can be accepted without a copyright assignment form on\n       file. New code and additions to the library need completed copyright\n       assignment form on file at the FSF. Note: your employer may be required\n-      to fill out appropriate disclaimer forms as well. \n-    </p><p> \n+      to fill out appropriate disclaimer forms as well.\n+    </p><p>\n       Historically, the libstdc++ assignment form added the following\n       question:\n     </p><p>\n@@ -64,7 +66,7 @@\n       While not strictly necessary, humoring the maintainers and answering\n       this question would be appreciated.\n     </p><p>\n-      For more information about getting a copyright assignment, please see \n+      For more information about getting a copyright assignment, please see\n       <a class=\"ulink\" href=\"http://www.gnu.org/prep/maintain/html_node/Legal-Matters.html\" target=\"_top\">Legal\n \tMatters</a>.\n     </p><p>\n@@ -81,22 +83,22 @@\n       Every patch must have several pieces of information before it can be\n       properly evaluated. Ideally (and to ensure the fastest possible\n       response from the maintainers) it would have all of these pieces:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p> \n+    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n \t  A description of the bug and how your patch fixes this\n \t  bug. For new features a description of the feature and your\n-\t  implementation. \n-\t</p></li><li class=\"listitem\"><p> \n+\t  implementation.\n+\t</p></li><li class=\"listitem\"><p>\n \t  A ChangeLog entry as plain text; see the various\n \t  ChangeLog files for format and content. If you are\n \t  using emacs as your editor, simply position the insertion\n \t  point at the beginning of your change and hit CX-4a to bring\n \t  up the appropriate ChangeLog entry. See--magic! Similar\n-\t  functionality also exists for vi. \n-\t</p></li><li class=\"listitem\"><p> \n+\t  functionality also exists for vi.\n+\t</p></li><li class=\"listitem\"><p>\n \t  A testsuite submission or sample program that will\n \t  easily and simply show the existing error or test new\n-\t  functionality. \n-\t</p></li><li class=\"listitem\"><p> \n+\t  functionality.\n+\t</p></li><li class=\"listitem\"><p>\n \t  The patch itself. If you are accessing the SVN\n \t  repository use <span class=\"command\"><strong>svn update; svn diff NEW</strong></span>;\n \t  else, use <span class=\"command\"><strong>diff -cp OLD NEW</strong></span> ... If your\n@@ -105,9 +107,11 @@\n \t  diff. The <a class=\"ulink\" href=\"http://gcc.gnu.org/wiki/SvnTricks\" target=\"_top\">SVN\n \t  Tricks</a> wiki page has information on customising the\n \t  output of <code class=\"code\">svn diff</code>.\n-\t</p></li><li class=\"listitem\"><p> \n+\t</p></li><li class=\"listitem\"><p>\n \t  When you have all these pieces, bundle them up in a\n \t  mail message and send it to libstdc++@gcc.gnu.org. All\n \t  patches and related discussion should be sent to the\n-\t  libstdc++ mailing list. \n-\t</p></li></ul></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch41s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_organization.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Use\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Directory Layout and Source Conventions</td></tr></table></div></body></html>\n+\t  libstdc++ mailing list.\n+\t</p></li></ul></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt04.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_organization.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0IV.\u00a0\n+  Appendices\n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Directory Layout and Source Conventions</td></tr></table></div></body></html>"}, {"sha": "bc6c37655ea2a8c85641455e4461b887bc6b2463", "filename": "libstdc++-v3/doc/html/manual/appendix_free.html", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_free.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_free.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_free.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,11 +1,13 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"backwards.html\" title=\"Backwards Compatibility\" /><link rel=\"next\" href=\"appendix_gpl.html\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0C.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"prev\" href=\"backwards.html\" title=\"Backwards Compatibility\" /><link rel=\"next\" href=\"appendix_gpl.html\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0C.\u00a0\n   Free Software Needs Free Documentation\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"backwards.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gpl.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.free\"></a>Appendix\u00a0C.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"backwards.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gpl.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.free\"></a>Appendix\u00a0C.\u00a0\n   Free Software Needs Free Documentation\n-  <a id=\"id702684\" class=\"indexterm\"></a>\n+  <a id=\"id490083\" class=\"indexterm\"></a>\n </h2></div></div></div><p>\n The biggest deficiency in free operating systems is not in the\n software--it is the lack of good free manuals that we can include in\n@@ -35,7 +37,7 @@\n </p><p>\n Given that writing good English is a rare skill among programmers, we\n can ill afford to lose manuals this way.\n-</p><p> \n+</p><p>\n   Free documentation, like free software, is a matter of freedom,\n not price.  The problem with these manuals was not that O'Reilly\n Associates charged a price for printed copies--that in itself is fine.\n@@ -119,6 +121,6 @@\n that lists free books available from other publishers</a>].\n </p><p>Copyright \u00a9 2004, 2005, 2006, 2007 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA</p><p>Verbatim copying and distribution of this entire article are\n permitted worldwide, without royalty, in any medium, provided this\n-notice is preserved.</p><p>Report any problems or suggestions to <code class=\"email\">&lt;<a class=\"email\" href=\"mailto:webmaster@fsf.org\">webmaster@fsf.org</a>&gt;</code>.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"backwards.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gpl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Backwards Compatibility\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0D.\u00a0\n+notice is preserved.</p><p>Report any problems or suggestions to <code class=\"email\">&lt;<a class=\"email\" href=\"mailto:webmaster@fsf.org\">webmaster@fsf.org</a>&gt;</code>.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"backwards.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt04.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gpl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Backwards Compatibility\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0D.\u00a0\n     <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n   </td></tr></table></div></body></html>"}, {"sha": "edb2f0c3f4dbf65dc989a3e969a855a70186887e", "filename": "libstdc++-v3/doc/html/manual/appendix_gfdl.html", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gfdl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gfdl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gfdl.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0E.\u00a0GNU Free Documentation License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"appendix_gpl.html\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\" /><link rel=\"next\" href=\"bk01ix01.html\" title=\"Index\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0E.\u00a0GNU Free Documentation License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gpl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01ix01.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gfdl-1.2\"></a>Appendix\u00a0E.\u00a0GNU Free Documentation License</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0E.\u00a0GNU Free Documentation License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"prev\" href=\"appendix_gpl.html\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\" /><link rel=\"next\" href=\"../bk02.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0E.\u00a0GNU Free Documentation License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gpl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gfdl-1.2\"></a>Appendix\u00a0E.\u00a0GNU Free Documentation License</h2></div></div></div><p>\n     Copyright (C) 2000, 2001, 2002 Free Software Foundation,\n     <abbr class=\"abbrev\">Inc.</abbr> 51 Franklin <abbr class=\"abbrev\">St</abbr>, Fifth Floor,\n     Boston, <abbr class=\"abbrev\">MA</abbr> 02110-1301 <abbr class=\"abbrev\">USA</abbr>.  Everyone is permitted to copy and\n@@ -390,6 +392,6 @@\n     recommend releasing these examples in parallel under your choice of free\n     software license, such as the GNU General Public License, to permit their\n     use in free software.\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gpl.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01ix01.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0D.\u00a0\n+  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gpl.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt04.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0D.\u00a0\n     <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n-  \u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Index</td></tr></table></div></body></html>\n+  \u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "42a68eca06d997e3d33c63fb6e2c9275d50f5a31", "filename": "libstdc++-v3/doc/html/manual/appendix_gpl.html", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gpl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gpl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_gpl.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,8 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0D.\u00a0 GNU General Public License version 3</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"appendix_free.html\" title=\"Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation\" /><link rel=\"next\" href=\"appendix_gfdl.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0D.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0D.\u00a0 GNU General Public License version 3</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"prev\" href=\"appendix_free.html\" title=\"Appendix\u00a0C.\u00a0 Free Software Needs Free Documentation\" /><link rel=\"next\" href=\"appendix_gfdl.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0D.\u00a0\n     <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n-  </th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gfdl.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gpl-3.0\"></a>Appendix\u00a0D.\u00a0\n+  </th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gfdl.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0D.\u00a0 GNU General Public License version 3\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gpl-3.0\"></a>Appendix\u00a0D.\u00a0\n     <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n   </h2></div></div></div><p>\n     Version 3, 29 June 2007\n@@ -76,7 +78,7 @@\n   </p><p>\n     The precise terms and conditions for copying, distribution and modification\n     follow.\n-  </p><h2><a id=\"id703002\"></a>\n+  </p><h2><a id=\"id382653\"></a>\n     TERMS AND CONDITIONS\n   </h2><h2><a id=\"gpl-3-definitions\"></a>\n     0. Definitions.\n@@ -617,7 +619,7 @@\n     waiver of all civil liability in connection with the Program, unless a\n     warranty or assumption of liability accompanies a copy of the Program in\n     return for a fee.\n-  </p><h2><a id=\"id635999\"></a>\n+  </p><h2><a id=\"id421222\"></a>\n     END OF TERMS AND CONDITIONS\n   </h2><h2><a id=\"HowToApply\"></a>\n     How to Apply These Terms to Your New Programs\n@@ -675,7 +677,7 @@\n     proprietary applications with the library.  If this is what you want to do,\n     use the <acronym class=\"acronym\">GNU</acronym> Lesser General Public License instead of this\n     License.  But first, please read <a class=\"ulink\" href=\"http://www.gnu.org/philosophy/why-not-lgpl.html\" target=\"_top\">http://www.gnu.org/philosophy/why-not-lgpl.html</a>.\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gfdl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0C.\u00a0\n+  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt04.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_gfdl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0C.\u00a0\n   Free Software Needs Free Documentation\n   \n \u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0E.\u00a0GNU Free Documentation License</td></tr></table></div></body></html>"}, {"sha": "47d342a193f59c904055868e1f85a190225617e0", "filename": "libstdc++-v3/doc/html/manual/appendix_porting.html", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,12 +1,14 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0B.\u00a0 Porting and Maintenance</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"source_design_notes.html\" title=\"Design Notes\" /><link rel=\"next\" href=\"internals.html\" title=\"Porting to New Hardware or Operating Systems\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0B.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0B.\u00a0 Porting and Maintenance</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /><link rel=\"prev\" href=\"source_design_notes.html\" title=\"Design Notes\" /><link rel=\"next\" href=\"internals.html\" title=\"Porting to New Hardware or Operating Systems\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0B.\u00a0\n   Porting and Maintenance\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"source_design_notes.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"internals.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0B.\u00a0 Porting and Maintenance\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.porting\"></a>Appendix\u00a0B.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"source_design_notes.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"internals.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" title=\"Appendix\u00a0B.\u00a0 Porting and Maintenance\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.porting\"></a>Appendix\u00a0B.\u00a0\n   Porting and Maintenance\n-  <a id=\"id631944\" class=\"indexterm\"></a>\n-</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"appendix_porting.html#appendix.porting.build_hacking\">Configure and Build Hacking</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.map\">Overview: What Comes from Where</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.scripts\">Storing Information in non-AC files (like configure.host)</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.conventions\">Coding and Commenting Conventions</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.acinclude\">The acinclude.m4 layout</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.enable\"><code class=\"constant\">GLIBCXX_ENABLE</code>, the <code class=\"literal\">--enable</code> maker</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"internals.html\">Porting to New Hardware or Operating Systems</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"internals.html#internals.os\">Operating System</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.cpu\">CPU</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.char_types\">Character Types</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.numeric_limits\">Numeric Limits</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.libtool\">Libtool</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"test.html\">Test</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"test.html#test.organization\">Organization</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.run\">Running the Testsuite</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.new_tests\">Writing a new test case</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.harness\">Test Harness and Utilities</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.special\">Special Topics</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.third\">Third</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Configure and Build Hacking\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"appendix.porting.build_hacking\"></a>Configure and Build Hacking</h2></div></div></div><div class=\"sect2\" title=\"Prerequisites\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"build_hacking.prereq\"></a>Prerequisites</h3></div></div></div><p> \n+  <a id=\"id505235\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"appendix_porting.html#appendix.porting.build_hacking\">Configure and Build Hacking</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.map\">Overview: What Comes from Where</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.scripts\">Storing Information in non-AC files (like configure.host)</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.conventions\">Coding and Commenting Conventions</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.acinclude\">The acinclude.m4 layout</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.enable\"><code class=\"constant\">GLIBCXX_ENABLE</code>, the <code class=\"literal\">--enable</code> maker</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"internals.html\">Porting to New Hardware or Operating Systems</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"internals.html#internals.os\">Operating System</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.cpu\">CPU</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.char_types\">Character Types</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.numeric_limits\">Numeric Limits</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.libtool\">Libtool</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"test.html\">Test</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"test.html#test.organization\">Organization</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.run\">Running the Testsuite</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.new_tests\">Writing a new test case</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.harness\">Test Harness and Utilities</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.special\">Special Topics</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.third\">Third</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Configure and Build Hacking\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"appendix.porting.build_hacking\"></a>Configure and Build Hacking</h2></div></div></div><div class=\"sect2\" title=\"Prerequisites\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"build_hacking.prereq\"></a>Prerequisites</h3></div></div></div><p>\n     As noted <a class=\"ulink\" href=\"http://gcc.gnu.org/install/prerequisites.html\" target=\"_top\">previously</a>,\n     certain other tools are necessary for hacking on files that\n     control configure (<code class=\"code\">configure.ac</code>,\n@@ -227,4 +229,4 @@\n   argument checking at all is done in this signature.  See\n   GLIBCXX_ENABLE_CXX_FLAGS for an example of handling, and an error\n   message.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"source_design_notes.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"internals.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design Notes\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Porting to New Hardware or Operating Systems</td></tr></table></div></body></html>\n+</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"source_design_notes.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt04.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"internals.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design Notes\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Porting to New Hardware or Operating Systems</td></tr></table></div></body></html>"}, {"sha": "2173413e41caf53cbc360bb19ad814b1f3b29daa", "filename": "libstdc++-v3/doc/html/manual/associative.html", "status": "modified", "additions": 109, "deletions": 4, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fassociative.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fassociative.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fassociative.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a017.\u00a0Associative</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\" /><link rel=\"prev\" href=\"vector.html\" title=\"vector\" /><link rel=\"next\" href=\"bitset.html\" title=\"bitset\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a017.\u00a0Associative</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"vector.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Associative</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\" /><link rel=\"prev\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\" /><link rel=\"next\" href=\"containers_and_c.html\" title=\"Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Associative</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a09.\u00a0\n   Containers\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitset.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a017.\u00a0Associative\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.associative\"></a>Chapter\u00a017.\u00a0Associative</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"associative.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"sect1\"><a href=\"bitset.html\">bitset</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitset.html#associative.bitset.size_variable\">Size Variable</a></span></dt><dt><span class=\"sect2\"><a href=\"bitset.html#associative.bitset.type_string\">Type String</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Insertion Hints\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.associative.insert_hints\"></a>Insertion Hints</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Associative\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.containers.associative\"></a>Associative</h2></div></div></div><div class=\"sect2\" title=\"Insertion Hints\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.associative.insert_hints\"></a>Insertion Hints</h3></div></div></div><p>\n      Section [23.1.2], Table 69, of the C++ standard lists this\n      function for all of the associative containers (map, set, etc):\n    </p><pre class=\"programlisting\">\n@@ -48,7 +48,7 @@\n \t  <code class=\"code\">end()</code>, then the item being inserted should have\n \t  a key greater than all the other keys in the container.  The\n \t  item will be inserted at the end of the container, becoming\n-\t  the new entry before <code class=\"code\">end()</code>.  \n+\t  the new entry before <code class=\"code\">end()</code>.\n       </p></li><li class=\"listitem\"><p>\n \t  neither <code class=\"code\">begin()</code> nor <code class=\"code\">end()</code>, then:\n \t  Let <code class=\"code\">h</code> be the entry in the container pointed to\n@@ -84,4 +84,109 @@\n      the new item would in fact belong there.  If the hint does not\n      point to the correct place, then no further local searching is\n      done; the search begins from scratch in logarithmic time.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"vector.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitset.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">vector\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0bitset</td></tr></table></div></body></html>\n+   </p></div><div class=\"sect2\" title=\"bitset\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.associative.bitset\"></a>bitset</h3></div></div></div><div class=\"sect3\" title=\"Size Variable\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"associative.bitset.size_variable\"></a>Size Variable</h4></div></div></div><p>\n+\tNo, you cannot write code of the form\n+      </p><pre class=\"programlisting\">\n+      #include &lt;bitset&gt;\n+\n+      void foo (size_t n)\n+      {\n+\t  std::bitset&lt;n&gt;   bits;\n+\t  ....\n+      }\n+   </pre><p>\n+     because <code class=\"code\">n</code> must be known at compile time.  Your\n+     compiler is correct; it is not a bug.  That's the way templates\n+     work.  (Yes, it <span class=\"emphasis\"><em>is</em></span> a feature.)\n+   </p><p>\n+     There are a couple of ways to handle this kind of thing.  Please\n+     consider all of them before passing judgement.  They include, in\n+     no chaptericular order:\n+   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>A very large N in <code class=\"code\">bitset&lt;N&gt;</code>.</p></li><li class=\"listitem\"><p>A container&lt;bool&gt;.</p></li><li class=\"listitem\"><p>Extremely weird solutions.</p></li></ul></div><p>\n+     <span class=\"emphasis\"><em>A very large N in\n+     <code class=\"code\">bitset&lt;N&gt;</code>.\u00a0\u00a0</em></span> It has been\n+     pointed out a few times in newsgroups that N bits only takes up\n+     (N/8) bytes on most systems, and division by a factor of eight is\n+     pretty impressive when speaking of memory.  Half a megabyte given\n+     over to a bitset (recall that there is zero space overhead for\n+     housekeeping info; it is known at compile time exactly how large\n+     the set is) will hold over four million bits.  If you're using\n+     those bits as status flags (e.g.,\n+     <span class=\"quote\">\u201c<span class=\"quote\">changed</span>\u201d</span>/<span class=\"quote\">\u201c<span class=\"quote\">unchanged</span>\u201d</span> flags), that's a\n+     <span class=\"emphasis\"><em>lot</em></span> of state.\n+   </p><p>\n+     You can then keep track of the <span class=\"quote\">\u201c<span class=\"quote\">maximum bit used</span>\u201d</span>\n+     during some testing runs on representative data, make note of how\n+     many of those bits really need to be there, and then reduce N to\n+     a smaller number.  Leave some extra space, of course.  (If you\n+     plan to write code like the incorrect example above, where the\n+     bitset is a local variable, then you may have to talk your\n+     compiler into allowing that much stack space; there may be zero\n+     space overhead, but it's all allocated inside the object.)\n+   </p><p>\n+     <span class=\"emphasis\"><em>A container&lt;bool&gt;.\u00a0\u00a0</em></span> The\n+     Committee made provision for the space savings possible with that\n+     (N/8) usage previously mentioned, so that you don't have to do\n+     wasteful things like <code class=\"code\">Container&lt;char&gt;</code> or\n+     <code class=\"code\">Container&lt;short int&gt;</code>.  Specifically,\n+     <code class=\"code\">vector&lt;bool&gt;</code> is required to be specialized for\n+     that space savings.\n+   </p><p>\n+     The problem is that <code class=\"code\">vector&lt;bool&gt;</code> doesn't\n+     behave like a normal vector anymore.  There have been\n+     journal articles which discuss the problems (the ones by Herb\n+     Sutter in the May and July/August 1999 issues of C++ Report cover\n+     it well).  Future revisions of the ISO C++ Standard will change\n+     the requirement for <code class=\"code\">vector&lt;bool&gt;</code>\n+     specialization.  In the meantime, <code class=\"code\">deque&lt;bool&gt;</code>\n+     is recommended (although its behavior is sane, you probably will\n+     not get the space savings, but the allocation scheme is different\n+     than that of vector).\n+   </p><p>\n+     <span class=\"emphasis\"><em>Extremely weird solutions.\u00a0\u00a0</em></span> If\n+     you have access to the compiler and linker at runtime, you can do\n+     something insane, like figuring out just how many bits you need,\n+     then writing a temporary source code file.  That file contains an\n+     instantiation of <code class=\"code\">bitset</code> for the required number of\n+     bits, inside some wrapper functions with unchanging signatures.\n+     Have your program then call the compiler on that file using\n+     Position Independent Code, then open the newly-created object\n+     file and load those wrapper functions.  You'll have an\n+     instantiation of <code class=\"code\">bitset&lt;N&gt;</code> for the exact\n+     <code class=\"code\">N</code> that you need at the time.  Don't forget to delete\n+     the temporary files.  (Yes, this <span class=\"emphasis\"><em>can</em></span> be, and\n+     <span class=\"emphasis\"><em>has been</em></span>, done.)\n+   </p><p>\n+     This would be the approach of either a visionary genius or a\n+     raving lunatic, depending on your programming and management\n+     style.  Probably the latter.\n+   </p><p>\n+     Which of the above techniques you use, if any, are up to you and\n+     your intended application.  Some time/space profiling is\n+     indicated if it really matters (don't just guess).  And, if you\n+     manage to do anything along the lines of the third category, the\n+     author would love to hear from you...\n+   </p><p>\n+     Also note that the implementation of bitset used in libstdc++ has\n+     <a class=\"link\" href=\"bk01pt03ch21s02.html\" title=\"HP/SGI\">some extensions</a>.\n+   </p></div><div class=\"sect3\" title=\"Type String\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"associative.bitset.type_string\"></a>Type String</h4></div></div></div><p>\n+      </p><p>\n+     Bitmasks do not take char* nor const char* arguments in their\n+     constructors.  This is something of an accident, but you can read\n+     about the problem: follow the library's <span class=\"quote\">\u201c<span class=\"quote\">Links</span>\u201d</span> from\n+     the homepage, and from the C++ information <span class=\"quote\">\u201c<span class=\"quote\">defect\n+     reflector</span>\u201d</span> link, select the library issues list.  Issue\n+     number 116 describes the problem.\n+   </p><p>\n+     For now you can simply make a temporary string object using the\n+     constructor expression:\n+   </p><pre class=\"programlisting\">\n+      std::bitset&lt;5&gt; b ( std::string(<span class=\"quote\">\u201c<span class=\"quote\">10110</span>\u201d</span>) );\n+   </pre><p>\n+     instead of\n+   </p><pre class=\"programlisting\">\n+      std::bitset&lt;5&gt; b ( <span class=\"quote\">\u201c<span class=\"quote\">10110</span>\u201d</span> );    // invalid\n+    </pre></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a09.\u00a0\n+  Containers\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "1db9a81fbe18c4fd980e1b9761c7aa574ddd2f86", "filename": "libstdc++-v3/doc/html/manual/atomics.html", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fatomics.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fatomics.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fatomics.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a014.\u00a0 Atomics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      atomic&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"io_and_c.html\" title=\"Interacting with C\" /><link rel=\"next\" href=\"concurrency.html\" title=\"Chapter\u00a015.\u00a0 Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a014.\u00a0\n+  Atomics\n+  \n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a014.\u00a0 Atomics\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.atomics\"></a>Chapter\u00a014.\u00a0\n+  Atomics\n+  <a id=\"id510195\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"atomics.html#std.atomics.api\">API Reference</a></span></dt></dl></div><p>\n+  Facilities for atomic operations.\n+</p><div class=\"sect1\" title=\"API Reference\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.atomics.api\"></a>API Reference</h2></div></div></div><p>\n+    All items are declared in the standard header\n+    file <code class=\"filename\">atomic</code>.\n+  </p><p>\n+    Set of typedefs that map <span class=\"type\">int</span> to\n+    <code class=\"classname\">atomic_int</code>, and so on for all builtin\n+    integral types. Global enumeration <span class=\"type\">memory_order</span> to\n+    control memory ordering. Also includes\n+    <code class=\"classname\">atomic</code>, a class template with member\n+    functions such as <code class=\"function\">load</code> and\n+    <code class=\"function\">store</code> that is instantiable such that\n+    <code class=\"classname\">atomic_int</code> is the base class of\n+    <code class=\"classname\">atomic&lt;int&gt;</code>.\n+  </p><p>\n+    Full API details.\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a015.\u00a0\n+  Concurrency\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "777264504bfbd1136136e728a7f32ab2c007276d", "filename": "libstdc++-v3/doc/html/manual/auto_ptr.html", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fauto_ptr.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fauto_ptr.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fauto_ptr.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,90 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>auto_ptr</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      auto_ptr&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"memory.html\" title=\"Chapter\u00a011.\u00a0Memory\" /><link rel=\"prev\" href=\"memory.html\" title=\"Chapter\u00a011.\u00a0Memory\" /><link rel=\"next\" href=\"shared_ptr.html\" title=\"shared_ptr\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">auto_ptr</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"memory.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a011.\u00a0Memory</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"shared_ptr.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"auto_ptr\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.util.memory.auto_ptr\"></a>auto_ptr</h2></div></div></div><div class=\"sect2\" title=\"Limitations\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"auto_ptr.limitations\"></a>Limitations</h3></div></div></div><p>Explaining all of the fun and delicious things that can\n-   happen with misuse of the <code class=\"classname\">auto_ptr</code> class\n-   template (called <acronym class=\"acronym\">AP</acronym> here) would take some\n-   time. Suffice it to say that the use of <acronym class=\"acronym\">AP</acronym>\n-   safely in the presence of copying has some subtleties.\n-   </p><p>\n-     The AP class is a really\n-      nifty idea for a smart pointer, but it is one of the dumbest of\n-      all the smart pointers -- and that's fine.\n-   </p><p>\n-     AP is not meant to be a supersmart solution to all resource\n-      leaks everywhere.  Neither is it meant to be an effective form\n-      of garbage collection (although it can help, a little bit).\n-      And it can <span class=\"emphasis\"><em>not</em></span>be used for arrays!\n-   </p><p>\n-     <acronym class=\"acronym\">AP</acronym> is meant to prevent nasty leaks in the\n-     presence of exceptions.  That's <span class=\"emphasis\"><em>all</em></span>.  This\n-     code is AP-friendly:\n-   </p><pre class=\"programlisting\">\n-    // Not a recommend naming scheme, but good for web-based FAQs.\n-    typedef std::auto_ptr&lt;MyClass&gt;  APMC;\n-\n-    extern function_taking_MyClass_pointer (MyClass*);\n-    extern some_throwable_function ();\n-\n-    void func (int data)\n-    {\n-        APMC  ap (new MyClass(data));\n-\n-        some_throwable_function();   // this will throw an exception\n-\n-        function_taking_MyClass_pointer (ap.get());\n-    }\n-   </pre><p>When an exception gets thrown, the instance of MyClass that's\n-      been created on the heap will be <code class=\"function\">delete</code>'d as the stack is\n-      unwound past <code class=\"function\">func()</code>.\n-   </p><p>Changing that code as follows is not <acronym class=\"acronym\">AP</acronym>-friendly:\n-   </p><pre class=\"programlisting\">\n-        APMC  ap (new MyClass[22]);\n-   </pre><p>You will get the same problems as you would without the use\n-      of <acronym class=\"acronym\">AP</acronym>:\n-   </p><pre class=\"programlisting\">\n-        char*  array = new char[10];       // array new...\n-        ...\n-        delete array;                      // ...but single-object delete\n-   </pre><p>\n-     AP cannot tell whether the pointer you've passed at creation points\n-      to one or many things.  If it points to many things, you are about\n-      to die.  AP is trivial to write, however, so you could write your\n-      own <code class=\"code\">auto_array_ptr</code> for that situation (in fact, this has\n-      been done many times; check the mailing lists, Usenet, Boost, etc).\n-   </p></div><div class=\"sect2\" title=\"Use in Containers\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"auto_ptr.using\"></a>Use in Containers</h3></div></div></div><p>\n-  </p><p>All of the <a class=\"link\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\">containers</a>\n-      described in the standard library require their contained types\n-      to have, among other things, a copy constructor like this:\n-  </p><pre class=\"programlisting\">\n-    struct My_Type\n-    {\n-        My_Type (My_Type const&amp;);\n-    };\n-   </pre><p>\n-     Note the const keyword; the object being copied shouldn't change.\n-     The template class <code class=\"code\">auto_ptr</code> (called AP here) does not\n-     meet this requirement.  Creating a new AP by copying an existing\n-     one transfers ownership of the pointed-to object, which means that\n-     the AP being copied must change, which in turn means that the\n-     copy ctors of AP do not take const objects.\n-   </p><p>\n-     The resulting rule is simple: <span class=\"emphasis\"><em>Never ever use a\n-     container of auto_ptr objects</em></span>. The standard says that\n-     <span class=\"quote\">\u201c<span class=\"quote\">undefined</span>\u201d</span> behavior is the result, but it is\n-     guaranteed to be messy.\n-   </p><p>\n-     To prevent you from doing this to yourself, the\n-      <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a029.\u00a0Compile Time Checks\">concept checks</a> built\n-      in to this implementation will issue an error if you try to\n-      compile code like this:\n-   </p><pre class=\"programlisting\">\n-    #include &lt;vector&gt;\n-    #include &lt;memory&gt;\n-    \n-    void f()\n-    {\n-        std::vector&lt; std::auto_ptr&lt;int&gt; &gt;   vec_ap_int;\n-    }\n-   </pre><p>\n-Should you try this with the checks enabled, you will see an error.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"memory.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"memory.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"shared_ptr.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a011.\u00a0Memory\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0shared_ptr</td></tr></table></div></body></html>"}, {"sha": "8656c934d1f94d632584b242bec90a7fdc9f0f4d", "filename": "libstdc++-v3/doc/html/manual/backwards.html", "status": "modified", "additions": 104, "deletions": 107, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbackwards.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbackwards.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbackwards.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -17,8 +17,8 @@\n really useful things that are used by a lot of people, the Standards\n Committee couldn't include everything, and so a lot of those\n <span class=\"quote\">\u201c<span class=\"quote\">obvious</span>\u201d</span> classes didn't get included.\n-</p><p>Known Issues include many of the limitations of its immediate ancestor.</p><p>Portability notes and known implementation limitations are as follows.</p><div class=\"sect3\" title=\"No ios_base\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id646429\"></a>No <code class=\"code\">ios_base</code></h4></div></div></div><p> At least some older implementations don't have <code class=\"code\">std::ios_base</code>, so you should use <code class=\"code\">std::ios::badbit</code>, <code class=\"code\">std::ios::failbit</code> and <code class=\"code\">std::ios::eofbit</code> and <code class=\"code\">std::ios::goodbit</code>.\n-</p></div><div class=\"sect3\" title=\"No cout in ostream.h, no cin in istream.h\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id646461\"></a>No <code class=\"code\">cout</code> in <code class=\"code\">ostream.h</code>, no <code class=\"code\">cin</code> in <code class=\"code\">istream.h</code></h4></div></div></div><p>\n+</p><p>Known Issues include many of the limitations of its immediate ancestor.</p><p>Portability notes and known implementation limitations are as follows.</p><div class=\"sect3\" title=\"No ios_base\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id508624\"></a>No <code class=\"code\">ios_base</code></h4></div></div></div><p> At least some older implementations don't have <code class=\"code\">std::ios_base</code>, so you should use <code class=\"code\">std::ios::badbit</code>, <code class=\"code\">std::ios::failbit</code> and <code class=\"code\">std::ios::eofbit</code> and <code class=\"code\">std::ios::goodbit</code>.\n+</p></div><div class=\"sect3\" title=\"No cout in ostream.h, no cin in istream.h\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id508656\"></a>No <code class=\"code\">cout</code> in <code class=\"code\">ostream.h</code>, no <code class=\"code\">cin</code> in <code class=\"code\">istream.h</code></h4></div></div></div><p>\n \tIn earlier versions of the standard,\n \t<code class=\"filename\">fstream.h</code>,\n \t<code class=\"filename\">ostream.h</code>\n@@ -32,26 +32,26 @@\n the <a class=\"ulink\" href=\"http://gcc.gnu.org/extensions.html\" target=\"_top\">GCC extensions\n page</a> describes where to find the last libg++ source. The code is\n considered replaced and rewritten.\n-</p></div></div><div class=\"sect2\" title=\"Second\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"backwards.second\"></a>Second</h3></div></div></div><p> \n+</p></div></div><div class=\"sect2\" title=\"Second\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"backwards.second\"></a>Second</h3></div></div></div><p>\n   The second generation GNU C++ library was called libstdc++, or\n   libstdc++-v2. It spans the time between libg++ and pre-ISO C++\n   standardization and is usually associated with the following GCC\n   releases: egcs 1.x, gcc 2.95, and gcc 2.96.\n-</p><p> \n+</p><p>\n   The STL portions of this library are based on SGI/HP STL release 3.11.\n </p><p>\n   This project is no longer maintained or supported, and the sources\n   archived.  The code is considered replaced and rewritten.\n </p><p>\n   Portability notes and known implementation limitations are as follows.\n-</p><div class=\"sect3\" title=\"Namespace std:: not supported\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id646559\"></a>Namespace <code class=\"code\">std::</code> not supported</h4></div></div></div><p>\n+</p><div class=\"sect3\" title=\"Namespace std:: not supported\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id508754\"></a>Namespace <code class=\"code\">std::</code> not supported</h4></div></div></div><p>\n     Some care is required to support C++ compiler and or library\n     implementation that do not have the standard library in\n     <code class=\"code\">namespace std</code>.\n   </p><p>\n     The following sections list some possible solutions to support compilers\n     that cannot ignore <code class=\"code\">std::</code>-qualified names.\n-  </p><p> \n+  </p><p>\n     First, see if the compiler has a flag for this. Namespace\n     back-portability-issues are generally not a problem for g++\n     compilers that do not have libstdc++ in <code class=\"code\">std::</code>, as the\n@@ -62,7 +62,7 @@\n     probably applies to some other compilers as well.\n   </p><p>\n     Second, experiment with a variety of pre-processor tricks.\n-  </p><p> \n+  </p><p>\n     By defining <code class=\"code\">std</code> as a macro, fully-qualified namespace\n     calls become global. Volia.\n   </p><pre class=\"programlisting\">\n@@ -99,16 +99,16 @@\n   ac_cv_cxx_have_std_namespace,\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n-  AC_TRY_COMPILE([#include &lt;iostream&gt; \n-                  std::istream&amp; is = std::cin;],,\n+  AC_TRY_COMPILE([#include &lt;iostream&gt;\n+\t\t  std::istream&amp; is = std::cin;],,\n   ac_cv_cxx_have_std_namespace=yes, ac_cv_cxx_have_std_namespace=no)\n   AC_LANG_RESTORE\n   ])\n   if test \"$ac_cv_cxx_have_std_namespace\" = yes; then\n     AC_DEFINE(HAVE_NAMESPACE_STD,,[Define if g++ supports namespace std. ])\n   fi\n ])\n-</pre></div><div class=\"sect3\" title=\"Illegal iterator usage\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id699742\"></a>Illegal iterator usage</h4></div></div></div><p>\n+</pre></div><div class=\"sect3\" title=\"Illegal iterator usage\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id508877\"></a>Illegal iterator usage</h4></div></div></div><p>\n   The following illustrate implementation-allowed illegal iterator\n   use, and then correct use.\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n@@ -120,28 +120,28 @@\n       0</code>) =&gt; use <code class=\"code\">iterator = iterator_type();</code>\n     </p></li><li class=\"listitem\"><p>\n       <code class=\"code\">if (iterator)</code> won't work any more =&gt; use\n-      <code class=\"code\">if (iterator != iterator_type())</code> \n-    </p></li></ul></div></div><div class=\"sect3\" title=\"isspace from cctype is a macro\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id699804\"></a><code class=\"code\">isspace</code> from <code class=\"filename\">cctype</code> is a macro\n-  </h4></div></div></div><p> \n+      <code class=\"code\">if (iterator != iterator_type())</code>\n+    </p></li></ul></div></div><div class=\"sect3\" title=\"isspace from cctype is a macro\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id508938\"></a><code class=\"code\">isspace</code> from <code class=\"filename\">cctype</code> is a macro\n+  </h4></div></div></div><p>\n     Glibc 2.0.x and 2.1.x define <code class=\"filename\">ctype.h</code> functionality as macros\n     (isspace, isalpha etc.).\n   </p><p>\n     This implementations of libstdc++, however, keep these functions\n     as macros, and so it is not back-portable to use fully qualified\n     names. For example:\n-  </p><pre class=\"programlisting\"> \n-#include &lt;cctype&gt; \n-int main() { std::isspace('X'); } \n+  </p><pre class=\"programlisting\">\n+#include &lt;cctype&gt;\n+int main() { std::isspace('X'); }\n </pre><p>\n   Results in something like this:\n-</p><pre class=\"programlisting\"> \n-std:: (__ctype_b[(int) ( ( 'X' ) )] &amp; (unsigned short int) _ISspace ) ; \n-</pre><p> \n+</p><pre class=\"programlisting\">\n+std:: (__ctype_b[(int) ( ( 'X' ) )] &amp; (unsigned short int) _ISspace ) ;\n+</pre><p>\n   A solution is to modify a header-file so that the compiler tells\n   <code class=\"filename\">ctype.h</code> to define functions\n   instead of macros:\n </p><pre class=\"programlisting\">\n-// This keeps isalnum, et al from being propagated as macros. \n+// This keeps isalnum, et al from being propagated as macros.\n #if __linux__\n # define __NO_CTYPE 1\n #endif\n@@ -154,7 +154,7 @@\n   (<code class=\"filename\">ctype.h</code>) and the\n   definitions in namespace <code class=\"code\">std::</code>\n   (<code class=\"code\">&lt;cctype&gt;</code>).\n-</p></div><div class=\"sect3\" title=\"No vector::at, deque::at, string::at\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id699897\"></a>No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></h4></div></div></div><p>\n+</p></div><div class=\"sect3\" title=\"No vector::at, deque::at, string::at\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502656\"></a>No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></h4></div></div></div><p>\n   One solution is to add an autoconf-test for this:\n </p><pre class=\"programlisting\">\n AC_MSG_CHECKING(for container::at)\n@@ -163,7 +163,7 @@\n #include &lt;vector&gt;\n #include &lt;deque&gt;\n #include &lt;string&gt;\n-\t\n+\n using namespace std;\n ],\n [\n@@ -180,53 +180,53 @@\n </pre><p>\n   If you are using other (non-GNU) compilers it might be a good idea\n   to check for <code class=\"code\">string::at</code> separately.\n-</p></div><div class=\"sect3\" title=\"No std::char_traits&lt;char&gt;::eof\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id716937\"></a>No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></h4></div></div></div><p>\n+</p></div><div class=\"sect3\" title=\"No std::char_traits&lt;char&gt;::eof\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502694\"></a>No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></h4></div></div></div><p>\n   Use some kind of autoconf test, plus this:\n </p><pre class=\"programlisting\">\n #ifdef HAVE_CHAR_TRAITS\n #define CPP_EOF std::char_traits&lt;char&gt;::eof()\n #else\n #define CPP_EOF EOF\n #endif\n-</pre></div><div class=\"sect3\" title=\"No string::clear\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id716955\"></a>No <code class=\"code\">string::clear</code></h4></div></div></div><p>\n+</pre></div><div class=\"sect3\" title=\"No string::clear\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502712\"></a>No <code class=\"code\">string::clear</code></h4></div></div></div><p>\n   There are two functions for deleting the contents of a string:\n   <code class=\"code\">clear</code> and <code class=\"code\">erase</code> (the latter returns the\n   string).\n </p><pre class=\"programlisting\">\n-void \n+void\n clear() { _M_mutate(0, this-&gt;size(), 0); }\n </pre><pre class=\"programlisting\">\n-basic_string&amp; \n+basic_string&amp;\n erase(size_type __pos = 0, size_type __n = npos)\n-{ \n+{\n   return this-&gt;replace(_M_check(__pos), _M_fold(__pos, __n),\n-                          _M_data(), _M_data()); \n+\t\t\t  _M_data(), _M_data());\n }\n </pre><p>\n   Unfortunately, <code class=\"code\">clear</code> is not implemented in this\n   version, so you should use <code class=\"code\">erase</code> (which is probably\n   faster than <code class=\"code\">operator=(charT*)</code>).\n-</p></div><div class=\"sect3\" title=\"Removal of ostream::form and istream::scan extensions\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id717001\"></a>\n+</p></div><div class=\"sect3\" title=\"Removal of ostream::form and istream::scan extensions\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502758\"></a>\n   Removal of <code class=\"code\">ostream::form</code> and <code class=\"code\">istream::scan</code>\n   extensions\n-</h4></div></div></div><p> \n+</h4></div></div></div><p>\n   These are no longer supported. Please use stringstreams instead.\n-</p></div><div class=\"sect3\" title=\"No basic_stringbuf, basic_stringstream\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id717020\"></a>No <code class=\"code\">basic_stringbuf</code>, <code class=\"code\">basic_stringstream</code></h4></div></div></div><p>\n+</p></div><div class=\"sect3\" title=\"No basic_stringbuf, basic_stringstream\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502777\"></a>No <code class=\"code\">basic_stringbuf</code>, <code class=\"code\">basic_stringstream</code></h4></div></div></div><p>\n   Although the ISO standard <code class=\"code\">i/ostringstream</code>-classes are\n   provided, (<code class=\"filename\">sstream</code>), for\n   compatibility with older implementations the pre-ISO\n   <code class=\"code\">i/ostrstream</code> (<code class=\"filename\">strstream</code>) interface is also provided,\n   with these caveats:\n-</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p> \n+</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n       <code class=\"code\">strstream</code> is considered to be deprecated\n-    </p></li><li class=\"listitem\"><p> \n+    </p></li><li class=\"listitem\"><p>\n       <code class=\"code\">strstream</code> is limited to <code class=\"code\">char</code>\n-    </p></li><li class=\"listitem\"><p> \n+    </p></li><li class=\"listitem\"><p>\n       with <code class=\"code\">ostringstream</code> you don't have to take care of\n-      terminating the string or freeing its memory \n-    </p></li><li class=\"listitem\"><p> \n+      terminating the string or freeing its memory\n+    </p></li><li class=\"listitem\"><p>\n       <code class=\"code\">istringstream</code> can be re-filled (clear();\n-      str(input);) \n+      str(input);)\n     </p></li></ul></div><p>\n   You can then use output-stringstreams like this:\n </p><pre class=\"programlisting\">\n@@ -268,7 +268,7 @@\n #endif\n \n int i;\n-iss &gt;&gt; i; \n+iss &gt;&gt; i;\n </pre><p> One (the only?) restriction is that an istrstream cannot be re-filled:\n </p><pre class=\"programlisting\">\n std::istringstream iss(numerator);\n@@ -295,18 +295,18 @@\n throw runtime_error(..)\n any = temp;\n }\n-</pre><p> \n-  Another example of using stringstreams is in <a class=\"link\" href=\"bk01pt05ch13s05.html\" title=\"Shrink to Fit\">this howto</a>.\n+</pre><p>\n+  Another example of using stringstreams is in <a class=\"link\" href=\"strings.html#strings.string.shrink\" title=\"Shrink to Fit\">this howto</a>.\n </p><p> There is additional information in the libstdc++-v2 info files, in\n particular <span class=\"quote\">\u201c<span class=\"quote\">info iostream</span>\u201d</span>.\n-</p></div><div class=\"sect3\" title=\"Little or no wide character support\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id717171\"></a>Little or no wide character support</h4></div></div></div><p>\n+</p></div><div class=\"sect3\" title=\"Little or no wide character support\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502928\"></a>Little or no wide character support</h4></div></div></div><p>\n     Classes <code class=\"classname\">wstring</code> and\n     <code class=\"classname\">char_traits&lt;wchar_t&gt;</code> are\n     not supported.\n-  </p></div><div class=\"sect3\" title=\"No templatized iostreams\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id717190\"></a>No templatized iostreams</h4></div></div></div><p>\n+  </p></div><div class=\"sect3\" title=\"No templatized iostreams\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502947\"></a>No templatized iostreams</h4></div></div></div><p>\n     Classes <code class=\"classname\">wfilebuf</code> and\n     <code class=\"classname\">wstringstream</code> are not supported.\n-  </p></div><div class=\"sect3\" title=\"Thread safety issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id717209\"></a>Thread safety issues</h4></div></div></div><p>\n+  </p></div><div class=\"sect3\" title=\"Thread safety issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id502966\"></a>Thread safety issues</h4></div></div></div><p>\n     Earlier GCC releases had a somewhat different approach to\n     threading configuration and proper compilation.  Before GCC 3.0,\n     configuration of the threading model was dictated by compiler\n@@ -348,10 +348,10 @@\n \t    release series.\n \t  </p></li><li class=\"listitem\"><p>\n \t    <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2001-05/msg00384.html\" target=\"_top\">\n-        This message</a> inspired a recent updating of issues with\n-        threading and the SGI STL library.  It also contains some\n-        example POSIX-multithreaded STL code.\n-\t  </p></li></ul></div><p> \n+\tThis message</a> inspired a recent updating of issues with\n+\tthreading and the SGI STL library.  It also contains some\n+\texample POSIX-multithreaded STL code.\n+\t  </p></li></ul></div><p>\n      (A large selection of links to older messages has been removed;\n      many of the messages from 1999 were lost in a disk crash, and the\n      few people with access to the backup tapes have been too swamped\n@@ -360,11 +360,11 @@\n    </p></div></div><div class=\"sect2\" title=\"Third\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"backwards.third\"></a>Third</h3></div></div></div><p> The third generation GNU C++ library is called libstdc++, or\n libstdc++-v3.\n </p><p>The subset commonly known as the Standard Template Library\n-         (chapters 23 through 25, mostly) is adapted from the final release\n-         of the SGI STL (version 3.3), with extensive changes.\n+\t (chapters 23 through 25, mostly) is adapted from the final release\n+\t of the SGI STL (version 3.3), with extensive changes.\n       </p><p>A more formal description of the V3 goals can be found in the\n-         official <a class=\"link\" href=\"source_design_notes.html\" title=\"Design Notes\">design document</a>.\n-      </p><p>Portability notes and known implementation limitations are as follows.</p><div class=\"sect3\" title=\"Pre-ISO headers moved to backwards or removed\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id706015\"></a>Pre-ISO headers moved to backwards or removed</h4></div></div></div><p> The pre-ISO C++ headers\n+\t official <a class=\"link\" href=\"source_design_notes.html\" title=\"Design Notes\">design document</a>.\n+      </p><p>Portability notes and known implementation limitations are as follows.</p><div class=\"sect3\" title=\"Pre-ISO headers moved to backwards or removed\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id426691\"></a>Pre-ISO headers moved to backwards or removed</h4></div></div></div><p> The pre-ISO C++ headers\n       (<code class=\"code\">iostream.h</code>, <code class=\"code\">defalloc.h</code> etc.) are\n       available, unlike previous libstdc++ versions, but inclusion\n       generates a warning that you are using deprecated headers.\n@@ -385,7 +385,7 @@\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -Wno-deprecated\"\t\n+  CXXFLAGS=\"$CXXFLAGS -Wno-deprecated\"\n \n   # Omit defalloc.h, as compilation with newer compilers is problematic.\n   AC_TRY_COMPILE([\n@@ -436,41 +436,41 @@\n directive <code class=\"code\">using namespace std;</code> can be put at the global\n scope. This should be enough to get this code compiling, assuming the\n other usage is correct.\n-</p></div><div class=\"sect3\" title=\"Extension headers hash_map, hash_set moved to ext or backwards\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id706097\"></a>Extension headers hash_map, hash_set moved to ext or backwards</h4></div></div></div><p>At this time most of the features of the SGI STL extension have been\n-         replaced by standardized libraries.\n-         In particular, the unordered_map and unordered_set containers of TR1\n-         are suitable replacement for the non-standard hash_map and hash_set\n-         containers in the SGI STL. \n+</p></div><div class=\"sect3\" title=\"Extension headers hash_map, hash_set moved to ext or backwards\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id426772\"></a>Extension headers hash_map, hash_set moved to ext or backwards</h4></div></div></div><p>At this time most of the features of the SGI STL extension have been\n+\t replaced by standardized libraries.\n+\t In particular, the unordered_map and unordered_set containers of TR1\n+\t are suitable replacement for the non-standard hash_map and hash_set\n+\t containers in the SGI STL.\n       </p><p> Header files <code class=\"filename\">hash_map</code> and <code class=\"filename\">hash_set</code> moved\n to <code class=\"filename\">ext/hash_map</code> and  <code class=\"filename\">ext/hash_set</code>,\n respectively. At the same time, all types in these files are enclosed\n in <code class=\"code\">namespace __gnu_cxx</code>. Later versions move deprecate\n these files, and suggest using TR1's  <code class=\"filename\">unordered_map</code>\n and  <code class=\"filename\">unordered_set</code> instead.\n </p><p>The extensions are no longer in the global or <code class=\"code\">std</code>\n-         namespaces, instead they are declared in the <code class=\"code\">__gnu_cxx</code>\n-         namespace. For maximum portability, consider defining a namespace\n-         alias to use to talk about extensions, e.g.:\n+\t namespaces, instead they are declared in the <code class=\"code\">__gnu_cxx</code>\n+\t namespace. For maximum portability, consider defining a namespace\n+\t alias to use to talk about extensions, e.g.:\n       </p><pre class=\"programlisting\">\n       #ifdef __GNUC__\n       #if __GNUC__ &lt; 3\n-        #include &lt;hash_map.h&gt;\n-        namespace extension { using ::hash_map; }; // inherit globals\n+\t#include &lt;hash_map.h&gt;\n+\tnamespace extension { using ::hash_map; }; // inherit globals\n       #else\n-        #include &lt;backward/hash_map&gt;\n-        #if __GNUC__ == 3 &amp;&amp; __GNUC_MINOR__ == 0\n-          namespace extension = std;               // GCC 3.0\n-        #else\n-          namespace extension = ::__gnu_cxx;       // GCC 3.1 and later\n-        #endif\n+\t#include &lt;backward/hash_map&gt;\n+\t#if __GNUC__ == 3 &amp;&amp; __GNUC_MINOR__ == 0\n+\t  namespace extension = std;               // GCC 3.0\n+\t#else\n+\t  namespace extension = ::__gnu_cxx;       // GCC 3.1 and later\n+\t#endif\n       #endif\n       #else      // ...  there are other compilers, right?\n-        namespace extension = std;\n+\tnamespace extension = std;\n       #endif\n \n-      extension::hash_map&lt;int,int&gt; my_map; \n+      extension::hash_map&lt;int,int&gt; my_map;\n       </pre><p>This is a bit cleaner than defining typedefs for all the\n-         instantiations you might need.\n+\t instantiations you might need.\n       </p><p>The following autoconf tests check for working HP/SGI hash containers.\n </p><pre class=\"programlisting\">\n # AC_HEADER_EXT_HASH_MAP\n@@ -480,7 +480,7 @@\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -Werror\"\t\n+  CXXFLAGS=\"$CXXFLAGS -Werror\"\n   AC_TRY_COMPILE([#include &lt;ext/hash_map&gt;], [using __gnu_cxx::hash_map;],\n   ac_cv_cxx_ext_hash_map=yes, ac_cv_cxx_ext_hash_map=no)\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n@@ -498,7 +498,7 @@\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -Werror\"\t\n+  CXXFLAGS=\"$CXXFLAGS -Werror\"\n   AC_TRY_COMPILE([#include &lt;ext/hash_set&gt;], [using __gnu_cxx::hash_set;],\n   ac_cv_cxx_ext_hash_set=yes, ac_cv_cxx_ext_hash_set=no)\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n@@ -508,7 +508,7 @@\n     AC_DEFINE(HAVE_EXT_HASH_SET,,[Define if ext/hash_set is present. ])\n   fi\n ])\n-</pre></div><div class=\"sect3\" title=\"No ios::nocreate/ios::noreplace.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id706200\"></a>No <code class=\"code\">ios::nocreate/ios::noreplace</code>.\n+</pre></div><div class=\"sect3\" title=\"No ios::nocreate/ios::noreplace.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id426874\"></a>No <code class=\"code\">ios::nocreate/ios::noreplace</code>.\n </h4></div></div></div><p> The existence of <code class=\"code\">ios::nocreate</code> being used for\n input-streams has been confirmed, most probably because the author\n thought it would be more correct to specify nocreate explicitly.  So\n@@ -519,7 +519,7 @@\n decide whether you want to create/replace or not. To my knowledge,\n even older implementations support <code class=\"code\">app</code>, <code class=\"code\">ate</code>\n and <code class=\"code\">trunc</code> (except for <code class=\"code\">app</code> ?).\n-</p></div><div class=\"sect3\" title=\"No stream::attach(int fd)\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id703184\"></a>\n+</p></div><div class=\"sect3\" title=\"No stream::attach(int fd)\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id426921\"></a>\n No <code class=\"code\">stream::attach(int fd)</code>\n </h4></div></div></div><p>\n       Phil Edwards writes: It was considered and rejected for the ISO\n@@ -531,7 +531,7 @@\n       <code class=\"code\">std::streambuf</code> (or\n       <code class=\"code\">std::basic_streambuf&lt;..&gt;</code>) which opens a file\n       given a descriptor, and then pass an instance of this to the\n-      stream-constructor. \n+      stream-constructor.\n     </p><p>\n       An extension is available that implements this.\n       <code class=\"filename\">ext/stdio_filebuf.h</code> contains a derived class called\n@@ -540,9 +540,9 @@\n       descriptor, and provides the <code class=\"code\">fd()</code> function.\n     </p><p>\n  For another example of this, refer to\n-      <a class=\"ulink\" href=\"http://www.josuttis.com/cppcode/fdstream.html\" target=\"_top\">fdstream example</a> \n+      <a class=\"ulink\" href=\"http://www.josuttis.com/cppcode/fdstream.html\" target=\"_top\">fdstream example</a>\n       by Nicolai Josuttis.\n-</p></div><div class=\"sect3\" title=\"Support for C++98 dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id703247\"></a>\n+</p></div><div class=\"sect3\" title=\"Support for C++98 dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id426985\"></a>\n Support for C++98 dialect.\n </h4></div></div></div><p>Check for complete library coverage of the C++1998/2003 standard.\n </p><pre class=\"programlisting\">\n@@ -610,7 +610,7 @@\n     AC_DEFINE(STDCXX_98_HEADERS,,[Define if ISO C++ 1998 header files are present. ])\n   fi\n ])\n-</pre></div><div class=\"sect3\" title=\"Support for C++TR1 dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id703275\"></a>\n+</pre></div><div class=\"sect3\" title=\"Support for C++TR1 dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id489807\"></a>\n Support for C++TR1 dialect.\n </h4></div></div></div><p>Check for library coverage of the TR1 standard.\n </p><pre class=\"programlisting\">\n@@ -687,7 +687,7 @@\n     AC_DEFINE(HAVE_TR1_UNORDERED_SET,,[Define if tr1/unordered_set is present. ])\n   fi\n ])\n-</pre></div><div class=\"sect3\" title=\"Support for C++0x dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id703319\"></a>\n+</pre></div><div class=\"sect3\" title=\"Support for C++0x dialect.\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id489851\"></a>\n Support for C++0x dialect.\n </h4></div></div></div><p>Check for baseline language coverage in the compiler for the C++0xstandard.\n </p><pre class=\"programlisting\">\n@@ -699,7 +699,7 @@\n   AC_LANG_CPLUSPLUS\n   AC_TRY_COMPILE([\n   template &lt;typename T&gt;\n-    struct check \n+    struct check\n     {\n       static_assert(sizeof(int) &lt;= sizeof(T), \"not big enough\");\n     };\n@@ -721,10 +721,10 @@\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -std=c++0x\"\t\n+  CXXFLAGS=\"$CXXFLAGS -std=c++0x\"\n   AC_TRY_COMPILE([\n   template &lt;typename T&gt;\n-    struct check \n+    struct check\n     {\n       static_assert(sizeof(int) &lt;= sizeof(T), \"not big enough\");\n     };\n@@ -747,10 +747,10 @@\n   [AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\t\n+  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\n   AC_TRY_COMPILE([\n   template &lt;typename T&gt;\n-    struct check \n+    struct check\n     {\n       static_assert(sizeof(int) &lt;= sizeof(T), \"not big enough\");\n     };\n@@ -768,8 +768,8 @@\n   AC_LANG_RESTORE\n   ])\n \n-  if test \"$ac_cv_cxx_compile_cxx0x_native\" = yes || \n-     test \"$ac_cv_cxx_compile_cxx0x_cxx\" = yes || \n+  if test \"$ac_cv_cxx_compile_cxx0x_native\" = yes ||\n+     test \"$ac_cv_cxx_compile_cxx0x_cxx\" = yes ||\n      test \"$ac_cv_cxx_compile_cxx0x_gxx\" = yes; then\n     AC_DEFINE(HAVE_STDCXX_0X,,[Define if g++ supports C++0x features. ])\n   fi\n@@ -784,7 +784,7 @@\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\t\n+  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\n \n   AC_TRY_COMPILE([\n     #include &lt;cassert&gt;\n@@ -870,7 +870,7 @@\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\t\n+  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\n   AC_TRY_COMPILE([#include &lt;unordered_map&gt;], [using std::unordered_map;],\n   ac_cv_cxx_unordered_map=yes, ac_cv_cxx_unordered_map=no)\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n@@ -889,7 +889,7 @@\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\t\n+  CXXFLAGS=\"$CXXFLAGS -std=gnu++0x\"\n   AC_TRY_COMPILE([#include &lt;unordered_set&gt;], [using std::unordered_set;],\n   ac_cv_cxx_unordered_set=yes, ac_cv_cxx_unordered_set=no)\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n@@ -899,32 +899,29 @@\n     AC_DEFINE(HAVE_UNORDERED_SET,,[Define if unordered_set is present. ])\n   fi\n ])\n-</pre></div><div class=\"sect3\" title=\"Container::iterator_type is not necessarily Container::value_type*\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id703396\"></a>\n+</pre></div><div class=\"sect3\" title=\"Container::iterator_type is not necessarily Container::value_type*\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id489928\"></a>\n   Container::iterator_type is not necessarily Container::value_type*\n </h4></div></div></div><p>\n   This is a change in behavior from the previous version. Now, most\n   <span class=\"type\">iterator_type</span> typedefs in container classes are POD\n   objects, not <span class=\"type\">value_type</span> pointers.\n-</p></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"backwards.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"Migrating to GCC 4.1\"><a id=\"id703425\"></a><p>[<abbr class=\"abbrev\">\n-      kegel41\n-    </abbr>] <span class=\"title\"><i>\n-      Migrating to GCC 4.1\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Dan</span> <span class=\"surname\">Kegel</span>. </span><span class=\"biblioid\">\n+</p></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"backwards.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\"><a id=\"id489958\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.kegel.com/gcc/gcc4.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Building the Whole Debian Archive with GCC 4.1: A Summary\"><a id=\"id703458\"></a><p>[<abbr class=\"abbrev\">\n-      kegel41\n-    </abbr>] <span class=\"title\"><i>\n-      Building the Whole Debian Archive with GCC 4.1: A Summary\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Martin</span> <span class=\"surname\">Michlmayr</span>. </span><span class=\"biblioid\">\n+\t<em class=\"citetitle\">\n+\t  Migrating to GCC 4.1\n+\t</em>\n+\t</a>\n+    . </span><span class=\"author\"><span class=\"firstname\">Dan</span> <span class=\"surname\">Kegel</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id489988\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://lists.debian.org/debian-gcc/2006/03/msg00405.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Building the Whole Debian Archive with GCC 4.1: A Summary\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Migration guide for GCC-3.2\"><a id=\"id703491\"></a><p>[<abbr class=\"abbrev\">\n-      lbl32\n-    </abbr>] <span class=\"title\"><i>\n-      Migration guide for GCC-3.2\n-    </i>. </span><span class=\"biblioid\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Martin</span> <span class=\"surname\">Michlmayr</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id490020\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://annwm.lbl.gov/~leggett/Atlas/gcc-3.2.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Migration guide for GCC-3.2\n+\t</em>\n       </a>\n     . </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"api.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_free.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">API Evolution and Deprecation History\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0C.\u00a0\n   Free Software Needs Free Documentation"}, {"sha": "2d750160b292f1a79926c53d3462b6115ef162f6", "filename": "libstdc++-v3/doc/html/manual/bitmap_allocator.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>bitmap_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      allocator&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_allocators.html\" title=\"Chapter\u00a033.\u00a0Allocators\" /><link rel=\"prev\" href=\"ext_allocators.html\" title=\"Chapter\u00a033.\u00a0Allocators\" /><link rel=\"next\" href=\"ext_containers.html\" title=\"Chapter\u00a034.\u00a0Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">bitmap_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_allocators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a033.\u00a0Allocators</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"bitmap_allocator\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.allocator.bitmap\"></a>bitmap_allocator</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>bitmap_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      allocator&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_allocators.html\" title=\"Chapter\u00a020.\u00a0Allocators\" /><link rel=\"prev\" href=\"ext_allocators.html\" title=\"Chapter\u00a020.\u00a0Allocators\" /><link rel=\"next\" href=\"ext_containers.html\" title=\"Chapter\u00a021.\u00a0Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">bitmap_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_allocators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0Allocators</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"bitmap_allocator\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.allocator.bitmap\"></a>bitmap_allocator</h2></div></div></div><p>\n </p><div class=\"sect2\" title=\"Design\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.bitmap.design\"></a>Design</h3></div></div></div><p>\n     As this name suggests, this allocator uses a bit-map to keep track\n     of the used and unused memory locations for it's book-keeping\n@@ -103,7 +103,7 @@\n   </p><p>\n     Consider a block of size 64 ints. In memory, it would look like this:\n     (assume a 32-bit system where, size_t is a 32-bit entity).\n-  </p><div class=\"table\"><a id=\"id620814\"></a><p class=\"title\"><b>Table\u00a033.1.\u00a0Bitmap Allocator Memory Map</b></p><div class=\"table-contents\"><table summary=\"Bitmap Allocator Memory Map\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\">268</td><td align=\"left\">0</td><td align=\"left\">4294967295</td><td align=\"left\">4294967295</td><td align=\"left\">Data -&gt; Space for 64 ints</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n+  </p><div class=\"table\"><a id=\"id379923\"></a><p class=\"title\"><b>Table\u00a020.1.\u00a0Bitmap Allocator Memory Map</b></p><div class=\"table-contents\"><table summary=\"Bitmap Allocator Memory Map\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\">268</td><td align=\"left\">0</td><td align=\"left\">4294967295</td><td align=\"left\">4294967295</td><td align=\"left\">Data -&gt; Space for 64 ints</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n     The first Column(268) represents the size of the Block in bytes as\n     seen by the Bitmap Allocator. Internally, a global free list is\n     used to keep track of the free blocks used and given back by the\n@@ -192,20 +192,20 @@\n \t_S_refill_pool which does the following:\n       </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n \t    Gets more memory from the Global Free List of the Required\n-\t    size.  \n+\t    size.\n \t  </p></li><li class=\"listitem\"><p>\n-      Adjusts the size for the next call to itself. \n+      Adjusts the size for the next call to itself.\n       </p></li><li class=\"listitem\"><p>\n       Writes the appropriate headers in the bit-maps.\n       </p></li><li class=\"listitem\"><p>\n \tSets the use count for that super-block just allocated to 0\n-\t(zero).  \n+\t(zero).\n       </p></li><li class=\"listitem\"><p>\n \t  All of the above accounts to maintaining the basic invariant\n \t  for the allocator. If the invariant is maintained, we are\n \t  sure that all is well. Now, the same process is applied on\n \t  the newly acquired free blocks, which are dispatched\n-\t  accordingly.  \n+\t  accordingly.\n       </p></li></ul></div></li></ol></div><p>\n Thus, you can clearly see that the allocate function is nothing but a\n combination of the next-fit and first-fit algorithm optimized ONLY for\n@@ -337,4 +337,4 @@\n     sizeof(size_t) x 8 which is the number of bits in an integer,\n     which can fit exactly in a CPU register. Hence, the term given is\n     exponential growth of the internal pool.\n-  </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_allocators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_allocators.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a033.\u00a0Allocators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a034.\u00a0Containers</td></tr></table></div></body></html>\n+  </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_allocators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_allocators.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a020.\u00a0Allocators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a021.\u00a0Containers</td></tr></table></div></body></html>"}, {"sha": "0d9fbeb2088d43d5cc187c97e29f2bd6e73f47cf", "filename": "libstdc++-v3/doc/html/manual/bitset.html", "status": "removed", "additions": 0, "deletions": 105, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitset.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitset.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitset.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,105 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>bitset</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"associative.html\" title=\"Chapter\u00a017.\u00a0Associative\" /><link rel=\"prev\" href=\"associative.html\" title=\"Chapter\u00a017.\u00a0Associative\" /><link rel=\"next\" href=\"containers_and_c.html\" title=\"Chapter\u00a018.\u00a0Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">bitset</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"associative.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a017.\u00a0Associative</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"bitset\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.associative.bitset\"></a>bitset</h2></div></div></div><div class=\"sect2\" title=\"Size Variable\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"associative.bitset.size_variable\"></a>Size Variable</h3></div></div></div><p>\n-\tNo, you cannot write code of the form\n-      </p><pre class=\"programlisting\">\n-      #include &lt;bitset&gt;\n-\n-      void foo (size_t n)\n-      {\n-          std::bitset&lt;n&gt;   bits;\n-          ....\n-      } \n-   </pre><p>\n-     because <code class=\"code\">n</code> must be known at compile time.  Your\n-     compiler is correct; it is not a bug.  That's the way templates\n-     work.  (Yes, it <span class=\"emphasis\"><em>is</em></span> a feature.)\n-   </p><p>\n-     There are a couple of ways to handle this kind of thing.  Please\n-     consider all of them before passing judgement.  They include, in\n-     no particular order:\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>A very large N in <code class=\"code\">bitset&lt;N&gt;</code>.</p></li><li class=\"listitem\"><p>A container&lt;bool&gt;.</p></li><li class=\"listitem\"><p>Extremely weird solutions.</p></li></ul></div><p>\n-     <span class=\"emphasis\"><em>A very large N in\n-     <code class=\"code\">bitset&lt;N&gt;</code>.\u00a0\u00a0</em></span> It has been\n-     pointed out a few times in newsgroups that N bits only takes up\n-     (N/8) bytes on most systems, and division by a factor of eight is\n-     pretty impressive when speaking of memory.  Half a megabyte given\n-     over to a bitset (recall that there is zero space overhead for\n-     housekeeping info; it is known at compile time exactly how large\n-     the set is) will hold over four million bits.  If you're using\n-     those bits as status flags (e.g.,\n-     <span class=\"quote\">\u201c<span class=\"quote\">changed</span>\u201d</span>/<span class=\"quote\">\u201c<span class=\"quote\">unchanged</span>\u201d</span> flags), that's a\n-     <span class=\"emphasis\"><em>lot</em></span> of state.\n-   </p><p>\n-     You can then keep track of the <span class=\"quote\">\u201c<span class=\"quote\">maximum bit used</span>\u201d</span>\n-     during some testing runs on representative data, make note of how\n-     many of those bits really need to be there, and then reduce N to\n-     a smaller number.  Leave some extra space, of course.  (If you\n-     plan to write code like the incorrect example above, where the\n-     bitset is a local variable, then you may have to talk your\n-     compiler into allowing that much stack space; there may be zero\n-     space overhead, but it's all allocated inside the object.)\n-   </p><p>\n-     <span class=\"emphasis\"><em>A container&lt;bool&gt;.\u00a0\u00a0</em></span> The\n-     Committee made provision for the space savings possible with that\n-     (N/8) usage previously mentioned, so that you don't have to do\n-     wasteful things like <code class=\"code\">Container&lt;char&gt;</code> or\n-     <code class=\"code\">Container&lt;short int&gt;</code>.  Specifically,\n-     <code class=\"code\">vector&lt;bool&gt;</code> is required to be specialized for\n-     that space savings.\n-   </p><p>\n-     The problem is that <code class=\"code\">vector&lt;bool&gt;</code> doesn't\n-     behave like a normal vector anymore.  There have been\n-     journal articles which discuss the problems (the ones by Herb\n-     Sutter in the May and July/August 1999 issues of C++ Report cover\n-     it well).  Future revisions of the ISO C++ Standard will change\n-     the requirement for <code class=\"code\">vector&lt;bool&gt;</code>\n-     specialization.  In the meantime, <code class=\"code\">deque&lt;bool&gt;</code>\n-     is recommended (although its behavior is sane, you probably will\n-     not get the space savings, but the allocation scheme is different\n-     than that of vector).\n-   </p><p>\n-     <span class=\"emphasis\"><em>Extremely weird solutions.\u00a0\u00a0</em></span> If\n-     you have access to the compiler and linker at runtime, you can do\n-     something insane, like figuring out just how many bits you need,\n-     then writing a temporary source code file.  That file contains an\n-     instantiation of <code class=\"code\">bitset</code> for the required number of\n-     bits, inside some wrapper functions with unchanging signatures.\n-     Have your program then call the compiler on that file using\n-     Position Independent Code, then open the newly-created object\n-     file and load those wrapper functions.  You'll have an\n-     instantiation of <code class=\"code\">bitset&lt;N&gt;</code> for the exact\n-     <code class=\"code\">N</code> that you need at the time.  Don't forget to delete\n-     the temporary files.  (Yes, this <span class=\"emphasis\"><em>can</em></span> be, and\n-     <span class=\"emphasis\"><em>has been</em></span>, done.)\n-   </p><p>\n-     This would be the approach of either a visionary genius or a\n-     raving lunatic, depending on your programming and management\n-     style.  Probably the latter.\n-   </p><p>\n-     Which of the above techniques you use, if any, are up to you and\n-     your intended application.  Some time/space profiling is\n-     indicated if it really matters (don't just guess).  And, if you\n-     manage to do anything along the lines of the third category, the\n-     author would love to hear from you...\n-   </p><p>\n-     Also note that the implementation of bitset used in libstdc++ has\n-     <a class=\"link\" href=\"bk01pt12ch34s02.html\" title=\"HP/SGI\">some extensions</a>.\n-   </p></div><div class=\"sect2\" title=\"Type String\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"associative.bitset.type_string\"></a>Type String</h3></div></div></div><p>\n-      </p><p>\n-     Bitmasks do not take char* nor const char* arguments in their\n-     constructors.  This is something of an accident, but you can read\n-     about the problem: follow the library's <span class=\"quote\">\u201c<span class=\"quote\">Links</span>\u201d</span> from\n-     the homepage, and from the C++ information <span class=\"quote\">\u201c<span class=\"quote\">defect\n-     reflector</span>\u201d</span> link, select the library issues list.  Issue\n-     number 116 describes the problem.\n-   </p><p>\n-     For now you can simply make a temporary string object using the\n-     constructor expression:\n-   </p><pre class=\"programlisting\">\n-      std::bitset&lt;5&gt; b ( std::string(<span class=\"quote\">\u201c<span class=\"quote\">10110</span>\u201d</span>) );\n-   </pre><p>\n-     instead of\n-   </p><pre class=\"programlisting\">\n-      std::bitset&lt;5&gt; b ( <span class=\"quote\">\u201c<span class=\"quote\">10110</span>\u201d</span> );    // invalid\n-    </pre></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"associative.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"associative.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a017.\u00a0Associative\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a018.\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "185b1c4bd2ab4d5dd776e797db99f020c68ff114", "filename": "libstdc++-v3/doc/html/manual/bk01ix01.html", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ix01.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ix01.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ix01.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Index</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"appendix_gfdl.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\" /><link rel=\"next\" href=\"../bk02.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Index</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gfdl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr></table><hr /></div><div class=\"index\" title=\"Index\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"id649926\"></a>Index</h2></div></div></div><div class=\"index\"><div class=\"indexdiv\"><h3>A</h3><dl><dt>Algorithms, <a class=\"indexterm\" href=\"algorithms.html\">\n-  Algorithms\n-  \n-</a></dt><dt>Appendix</dt><dd><dl><dt>Contributing, <a class=\"indexterm\" href=\"appendix_contributing.html\">\n-  Contributing\n-  \n-</a></dt><dt>Free Documentation, <a class=\"indexterm\" href=\"appendix_free.html\">\n-  Free Software Needs Free Documentation\n-  \n-</a></dt><dt>Porting and Maintenance, <a class=\"indexterm\" href=\"appendix_porting.html\">\n-  Porting and Maintenance\n-  \n-</a></dt></dl></dd></dl></div><div class=\"indexdiv\"><h3>C</h3><dl><dt>Containers, <a class=\"indexterm\" href=\"containers.html\">\n-  Containers\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>D</h3><dl><dt>Diagnostics, <a class=\"indexterm\" href=\"diagnostics.html\">\n-  Diagnostics\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>E</h3><dl><dt>Extensions, <a class=\"indexterm\" href=\"extensions.html\">\n-  Extensions\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>I</h3><dl><dt>Input and Output, <a class=\"indexterm\" href=\"io.html\">\n-  Input and Output\n-  \n-</a></dt><dt>Introduction, <a class=\"indexterm\" href=\"intro.html\">\n-  Introduction\n-  \n-</a></dt><dt>Iterators, <a class=\"indexterm\" href=\"iterators.html\">\n-  Iterators\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>L</h3><dl><dt>Localization, <a class=\"indexterm\" href=\"localization.html\">\n-  Localization\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>N</h3><dl><dt>Numerics, <a class=\"indexterm\" href=\"numerics.html\">\n-  Numerics\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>S</h3><dl><dt>Strings, <a class=\"indexterm\" href=\"strings.html\">\n-  Strings\n-  \n-</a></dt><dt>Support, <a class=\"indexterm\" href=\"support.html\">\n-  Support\n-  \n-</a></dt></dl></div><div class=\"indexdiv\"><h3>T</h3><dl><dt>Test</dt><dd><dl><dt>Exception Safety, <a class=\"indexterm\" href=\"test.html#test.exception.safety\">\n-  Qualifying Exception Safety Guarantees\n-  \n-</a></dt></dl></dd></dl></div><div class=\"indexdiv\"><h3>U</h3><dl><dt>Utilities, <a class=\"indexterm\" href=\"utilities.html\">\n-  Utilities\n-  \n-</a></dt></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_gfdl.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0E.\u00a0GNU Free Documentation License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "b9aa00be2933f4ccf55f74ddec24cedfc73787ef", "filename": "libstdc++-v3/doc/html/manual/bk01pt02.html", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0II.\u00a0 Standard Contents</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"debug.html\" title=\"Debugging Support\" /><link rel=\"next\" href=\"support.html\" title=\"Chapter\u00a04.\u00a0 Support\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"debug.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"support.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0II.\u00a0 Standard Contents\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.std\"></a>Part\u00a0II.\u00a0\n+  Standard Contents\n+</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"support.html\">4. \n+  Support\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"support.html#std.support.types\">Types</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"support.html#std.support.types.fundamental\">Fundamental Types</a></span></dt><dt><span class=\"sect2\"><a href=\"support.html#std.support.types.numeric_limits\">Numeric Properties</a></span></dt><dt><span class=\"sect2\"><a href=\"support.html#std.support.types.null\">NULL</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"dynamic_memory.html\">Dynamic Memory</a></span></dt><dt><span class=\"sect1\"><a href=\"termination.html\">Termination</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"termination.html#support.termination.handlers\">Termination Handlers</a></span></dt><dt><span class=\"sect2\"><a href=\"termination.html#support.termination.verbose\">Verbose Terminate Handler</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"diagnostics.html\">5. \n+  Diagnostics\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"diagnostics.html#std.diagnostics.exceptions\">Exceptions</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"diagnostics.html#std.diagnostics.exceptions.api\">API Reference</a></span></dt><dt><span class=\"sect2\"><a href=\"diagnostics.html#std.diagnostics.exceptions.data\">Adding Data to <code class=\"classname\">exception</code></a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt02ch05s02.html\">Concept Checking</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"utilities.html\">6. \n+  Utilities\n+  \n+</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"utilities.html#std.util.functors\">Functors</a></span></dt><dt><span class=\"section\"><a href=\"pairs.html\">Pairs</a></span></dt><dt><span class=\"section\"><a href=\"memory.html\">Memory</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"memory.html#std.util.memory.allocator\">Allocators</a></span></dt><dt><span class=\"section\"><a href=\"memory.html#std.util.memory.auto_ptr\">auto_ptr</a></span></dt><dt><span class=\"section\"><a href=\"memory.html#std.util.memory.shared_ptr\">shared_ptr</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"traits.html\">Traits</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"strings.html\">7. \n+  Strings\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"strings.html#std.strings.string\">String Classes</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.simple\">Simple Transformations</a></span></dt><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.case\">Case Sensitivity</a></span></dt><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.character_types\">Arbitrary Character Types</a></span></dt><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.token\">Tokenizing</a></span></dt><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.shrink\">Shrink to Fit</a></span></dt><dt><span class=\"sect2\"><a href=\"strings.html#strings.string.Cstring\">CString (MFC)</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"localization.html\">8. \n+  Localization\n+  \n+</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"localization.html#std.localization.locales\">Locales</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"localization.html#std.localization.locales.locale\">locale</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"facets.html\">Facets</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"facets.html#std.localization.facet.ctype\">ctype</a></span></dt><dt><span class=\"section\"><a href=\"facets.html#std.localization.facet.codecvt\">codecvt</a></span></dt><dt><span class=\"section\"><a href=\"facets.html#manual.localization.facet.messages\">messages</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"containers.html\">9. \n+  Containers\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"containers.html#std.containers.sequences\">Sequences</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"containers.html#containers.sequences.list\">list</a></span></dt><dt><span class=\"sect2\"><a href=\"containers.html#containers.sequences.vector\">vector</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"associative.html\">Associative</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"associative.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"sect2\"><a href=\"associative.html#containers.associative.bitset\">bitset</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"containers_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"containers_and_c.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"iterators.html\">10. \n+  Iterators\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"iterators.html#std.iterators.predefined\">Predefined</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"iterators.html#iterators.predefined.vs_pointers\">Iterators vs. Pointers</a></span></dt><dt><span class=\"sect2\"><a href=\"iterators.html#iterators.predefined.end\">One Past the End</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"algorithms.html\">11. \n+  Algorithms\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"algorithms.html#std.algorithms.mutating\">Mutating</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"algorithms.html#algorithms.mutating.swap\"><code class=\"function\">swap</code></a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"numerics.html\">12. \n+  Numerics\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"numerics.html#std.numerics.complex\">Complex</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"numerics.html#numerics.complex.processing\">complex Processing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"generalized_numeric_operations.html\">Generalized Operations</a></span></dt><dt><span class=\"sect1\"><a href=\"numerics_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"numerics_and_c.html#numerics.c.array\">Numerics vs. Arrays</a></span></dt><dt><span class=\"sect2\"><a href=\"numerics_and_c.html#numerics.c.c99\">C99</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"io.html\">13. \n+  Input and Output\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"io.html#std.io.objects\">Iostream Objects</a></span></dt><dt><span class=\"sect1\"><a href=\"streambufs.html\">Stream Buffers</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"streambufs.html#io.streambuf.derived\">Derived streambuf Classes</a></span></dt><dt><span class=\"sect2\"><a href=\"streambufs.html#io.streambuf.buffering\">Buffering</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"stringstreams.html\">Memory Based Streams</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"stringstreams.html#std.io.memstreams.compat\">Compatibility With strstream</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"fstreams.html\">File Based Streams</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"fstreams.html#std.io.filestreams.copying_a_file\">Copying a File</a></span></dt><dt><span class=\"sect2\"><a href=\"fstreams.html#std.io.filestreams.binary\">Binary Input and Output</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"io_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"io_and_c.html#std.io.c.FILE\">Using FILE* and file descriptors</a></span></dt><dt><span class=\"sect2\"><a href=\"io_and_c.html#std.io.c.sync\">Performance</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"atomics.html\">14. \n+  Atomics\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"atomics.html#std.atomics.api\">API Reference</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"concurrency.html\">15. \n+  Concurrency\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"concurrency.html#std.concurrency.api\">API Reference</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"debug.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"support.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Debugging Support\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a04.\u00a0\n+  Support\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "45fa1f6e2b41db502b7b1eb75a0bf257f9c89ffe", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch04s02.html", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,49 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Numeric Properties</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"fundamental_types.html\" title=\"Chapter\u00a04.\u00a0Types\" /><link rel=\"prev\" href=\"fundamental_types.html\" title=\"Chapter\u00a04.\u00a0Types\" /><link rel=\"next\" href=\"bk01pt02ch04s03.html\" title=\"NULL\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Numeric Properties</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"fundamental_types.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a04.\u00a0Types</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Numeric Properties\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.support.types.numeric_limits\"></a>Numeric Properties</h2></div></div></div><p>\n-    The header <code class=\"filename\">limits</code> defines\n-    traits classes to give access to various implementation\n-    defined-aspects of the fundamental types. The traits classes --\n-    fourteen in total -- are all specializations of the template class\n-    <code class=\"classname\">numeric_limits</code>, documented <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00593.html\" target=\"_top\">here</a>\n-    and defined as follows:\n-    </p><pre class=\"programlisting\">\n-   template&lt;typename T&gt; \n-     struct class \n-     {\n-       static const bool is_specialized;\n-       static T max() throw();\n-       static T min() throw();\n-\n-       static const int digits;\n-       static const int digits10;\n-       static const bool is_signed;\n-       static const bool is_integer;\n-       static const bool is_exact;\n-       static const int radix;\n-       static T epsilon() throw();\n-       static T round_error() throw();\n-\n-       static const int min_exponent;\n-       static const int min_exponent10;\n-       static const int max_exponent;\n-       static const int max_exponent10;\n-\n-       static const bool has_infinity;\n-       static const bool has_quiet_NaN;\n-       static const bool has_signaling_NaN;\n-       static const float_denorm_style has_denorm;\n-       static const bool has_denorm_loss;\n-       static T infinity() throw();\n-       static T quiet_NaN() throw();\n-       static T denorm_min() throw();\n-\n-       static const bool is_iec559;\n-       static const bool is_bounded;\n-       static const bool is_modulo;\n-\n-       static const bool traps;\n-       static const bool tinyness_before;\n-       static const float_round_style round_style;\n-     };\n-   </pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"fundamental_types.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"fundamental_types.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a04.\u00a0Types\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0NULL</td></tr></table></div></body></html>"}, {"sha": "c9225c8b9ca727f7ad1c034a81c8befd9a7e30e0", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch04s03.html", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04s03.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,29 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>NULL</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"fundamental_types.html\" title=\"Chapter\u00a04.\u00a0Types\" /><link rel=\"prev\" href=\"bk01pt02ch04s02.html\" title=\"Numeric Properties\" /><link rel=\"next\" href=\"dynamic_memory.html\" title=\"Chapter\u00a05.\u00a0Dynamic Memory\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">NULL</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a04.\u00a0Types</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"dynamic_memory.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"NULL\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.support.types.null\"></a>NULL</h2></div></div></div><p>\n-     The only change that might affect people is the type of\n-     <code class=\"constant\">NULL</code>: while it is required to be a macro,\n-     the definition of that macro is <span class=\"emphasis\"><em>not</em></span> allowed\n-     to be <code class=\"constant\">(void*)0</code>, which is often used in C.\n-    </p><p>\n-     For <span class=\"command\"><strong>g++</strong></span>, <code class=\"constant\">NULL</code> is\n-     </p><pre class=\"programlisting\">#define</pre><p>'d to be\n-     <code class=\"constant\">__null</code>, a magic keyword extension of\n-     <span class=\"command\"><strong>g++</strong></span>.\n-    </p><p>\n-     The biggest problem of #defining <code class=\"constant\">NULL</code> to be\n-     something like <span class=\"quote\">\u201c<span class=\"quote\">0L</span>\u201d</span> is that the compiler will view\n-     that as a long integer before it views it as a pointer, so\n-     overloading won't do what you expect. (This is why\n-     <span class=\"command\"><strong>g++</strong></span> has a magic extension, so that\n-     <code class=\"constant\">NULL</code> is always a pointer.)\n-    </p><p>In his book <a class=\"ulink\" href=\"http://www.awprofessional.com/titles/0-201-92488-9/\" target=\"_top\"><span class=\"emphasis\"><em>Effective\n-    C++</em></span></a>, Scott Meyers points out that the best way\n-    to solve this problem is to not overload on pointer-vs-integer\n-    types to begin with.  He also offers a way to make your own magic\n-    <code class=\"constant\">NULL</code> that will match pointers before it\n-    matches integers.\n-    </p><p>See \n-      <a class=\"ulink\" href=\"http://www.awprofessional.com/titles/0-201-31015-5/\" target=\"_top\">the\n-      Effective C++ CD example</a>\n-    </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"fundamental_types.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"dynamic_memory.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Numeric Properties\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a05.\u00a0Dynamic Memory</td></tr></table></div></body></html>"}, {"sha": "3487b705f009a9dbb58224e528dbcd46f42fc9a6", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch05s02.html", "status": "renamed", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a08.\u00a0Concept Checking</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0 Diagnostics\" /><link rel=\"prev\" href=\"bk01pt03ch07s02.html\" title=\"Adding Data to Exceptions\" /><link rel=\"next\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0 Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a08.\u00a0Concept Checking</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch07s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Concept Checking</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"diagnostics.html\" title=\"Chapter\u00a05.\u00a0 Diagnostics\" /><link rel=\"prev\" href=\"diagnostics.html\" title=\"Chapter\u00a05.\u00a0 Diagnostics\" /><link rel=\"next\" href=\"utilities.html\" title=\"Chapter\u00a06.\u00a0 Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Concept Checking</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a05.\u00a0\n   Diagnostics\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a08.\u00a0Concept Checking\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.diagnostics.concept_checking\"></a>Chapter\u00a08.\u00a0Concept Checking</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Concept Checking\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.diagnostics.concept_checking\"></a>Concept Checking</h2></div></div></div><p>\n     In 1999, SGI added <span class=\"quote\">\u201c<span class=\"quote\">concept checkers</span>\u201d</span> to their\n     implementation of the STL: code which checked the template\n     parameters of instantiated pieces of the STL, in order to insure\n@@ -39,7 +39,10 @@\n    support for template parameter constraints based on concepts in the core\n    language. This will obviate the need for the library-simulated concept\n    checking described above.\n- </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch07s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"diagnostics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Adding Data to Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0IV.\u00a0\n+ </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"diagnostics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a05.\u00a0\n+  Diagnostics\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a06.\u00a0\n   Utilities\n   \n </td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt03ch08.html"}, {"sha": "d88bbccff218e4ebfe4701a757abf0a411a5a6e6", "filename": "libstdc++-v3/doc/html/manual/bk01pt02pr01.html", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02pr01.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02pr01.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02pr01.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0 Support\" /><link rel=\"prev\" href=\"support.html\" title=\"Part\u00a0II.\u00a0 Support\" /><link rel=\"next\" href=\"fundamental_types.html\" title=\"Chapter\u00a04.\u00a0Types\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"support.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n-  Support\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"fundamental_types.html\">Next</a></td></tr></table><hr /></div><div class=\"preface\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"id616146\"></a></h2></div></div></div><p>\n-    This part deals with the functions called and objects created\n-    automatically during the course of a program's existence.\n-  </p><p>\n-    While we can't reproduce the contents of the Standard here (you\n-    need to get your own copy from your nation's member body; see our\n-    homepage for help), we can mention a couple of changes in what\n-    kind of support a C++ program gets from the Standard Library.\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"support.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"fundamental_types.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0II.\u00a0\n-  Support\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a04.\u00a0Types</td></tr></table></div></body></html>"}, {"sha": "54df29a65534655ea22cbc9e7dcd3795fddc1047", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch07s02.html", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Adding Data to Exceptions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"exceptions.html\" title=\"Chapter\u00a07.\u00a0Exceptions\" /><link rel=\"prev\" href=\"exceptions.html\" title=\"Chapter\u00a07.\u00a0Exceptions\" /><link rel=\"next\" href=\"bk01pt03ch08.html\" title=\"Chapter\u00a08.\u00a0Concept Checking\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Adding Data to Exceptions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"exceptions.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a07.\u00a0Exceptions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch08.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Adding Data to Exceptions\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.diagnostics.exceptions.data\"></a>Adding Data to Exceptions</h2></div></div></div><p>\n-      The standard exception classes carry with them a single string as\n-      data (usually describing what went wrong or where the 'throw' took\n-    place).  It's good to remember that you can add your own data to\n-    these exceptions when extending the hierarchy:\n-   </p><pre class=\"programlisting\">\n-   struct My_Exception : public std::runtime_error\n-   {\n-     public:\n-       My_Exception (const string&amp; whatarg)\n-           : std::runtime_error(whatarg), e(errno), id(GetDataBaseID()) { }\n-       int  errno_at_time_of_throw() const { return e; }\n-       DBID id_of_thing_that_threw() const { return id; }\n-     protected:\n-       int    e;\n-       DBID   id;     // some user-defined type\n-   };\n-   </pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"exceptions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"exceptions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch08.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a07.\u00a0Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a08.\u00a0Concept Checking</td></tr></table></div></body></html>"}, {"sha": "b6bbc40ea0bc0a6d830b9d6867f6181dedd94f71", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch07s03.html", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07s03.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,4 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Cancellation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.3\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"exceptions.html\" title=\"Chapter\u00a07.\u00a0Exceptions\" /><link rel=\"prev\" href=\"bk01pt03ch07s02.html\" title=\"Adding Data to Exceptions\" /><link rel=\"next\" href=\"bk01pt03ch08.html\" title=\"Chapter\u00a08.\u00a0Concept Checking\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Cancellation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch07s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a07.\u00a0Exceptions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch08.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.diagnostics.exceptions.cancellation\"></a>Cancellation</h2></div></div></div><p>\n-    </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch07s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"exceptions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch08.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Adding Data to Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a08.\u00a0Concept Checking</td></tr></table></div></body></html>"}, {"sha": "f2f1f483c0007584350db8653847d760267c0827", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch17s02.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Semantics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /><link rel=\"next\" href=\"bk01pt12ch30s03.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Semantics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"debug_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Semantics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.semantics\"></a>Semantics</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Semantics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\" /><link rel=\"next\" href=\"bk01pt03ch17s03.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Semantics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"debug_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a017.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Semantics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.semantics\"></a>Semantics</h2></div></div></div><p>\n   </p><p>A program that uses the C++ standard library correctly\n   will maintain the same semantics under debug mode as it had with\n   the normal (release) library. All functional and exception-handling\n@@ -10,7 +10,7 @@\n   instance, erasing an element in a <code class=\"code\">std::list</code> is a\n   constant-time operation in normal library, but in debug mode it is\n   linear in the number of iterators that reference that particular\n-  list. So while your (correct) program won't change its results, it \n+  list. So while your (correct) program won't change its results, it\n   is likely to execute more slowly.</p><p>libstdc++ includes many extensions to the C++ standard library. In\n   some cases the extensions are obvious, such as the hashed\n   associative containers, whereas other extensions give predictable\n@@ -52,4 +52,4 @@\n guaranteed to work.  For full debug-mode support you can use the\n <code class=\"code\">__gnu_debug::basic_string</code> debugging container directly,\n which always works correctly.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"debug_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a030.\u00a0Debug Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"debug_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a017.\u00a0Debug Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch30s02.html"}, {"sha": "ae2b3b830ae6b544f6d6fdf103d2bbdfec749c51", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch17s03.html", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"bk01pt03ch17s02.html\" title=\"Semantics\" /><link rel=\"next\" href=\"bk01pt03ch17s04.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a017.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Using\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.using\"></a>Using</h2></div></div></div><p>\n+  </p><div class=\"sect2\" title=\"Using the Debug Mode\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug_mode.using.mode\"></a>Using the Debug Mode</h3></div></div></div><p>To use the libstdc++ debug mode, compile your application with the\n+  compiler flag <code class=\"code\">-D_GLIBCXX_DEBUG</code>. Note that this flag\n+  changes the sizes and behavior of standard class templates such\n+  as <code class=\"code\">std::vector</code>, and therefore you can only link code\n+  compiled with debug mode and code compiled without debug mode if no\n+  instantiation of a container is passed between the two translation\n+  units.</p><p>By default, error messages are formatted to fit on lines of about\n+  78 characters.  The environment variable\n+  <code class=\"code\">GLIBCXX_DEBUG_MESSAGE_LENGTH</code> can be used to request a\n+  different length.</p></div><div class=\"sect2\" title=\"Using a Specific Debug Container\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug_mode.using.specific\"></a>Using a Specific Debug Container</h3></div></div></div><p>When it is not feasible to recompile your entire application, or\n+  only specific containers need checking, debugging containers are\n+  available as GNU extensions. These debugging containers are\n+  functionally equivalent to the standard drop-in containers used in\n+  debug mode, but they are available in a separate namespace as GNU\n+  extensions and may be used in programs compiled with either release\n+  mode or with debug mode. The\n+  following table provides the names and headers of the debugging\n+  containers:\n+</p><div class=\"table\"><a id=\"id487304\"></a><p class=\"title\"><b>Table\u00a017.1.\u00a0Debugging Containers</b></p><div class=\"table-contents\"><table summary=\"Debugging Containers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Container</th><th align=\"left\">Header</th><th align=\"left\">Debug container</th><th align=\"left\">Debug header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">std::bitset</code></td><td align=\"left\"><code class=\"filename\">bitset</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::bitset</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/bitset&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::deque</code></td><td align=\"left\"><code class=\"filename\">deque</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::deque</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/deque&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::list</code></td><td align=\"left\"><code class=\"filename\">list</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::list</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/list&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::map</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::map</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/map&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::multimap</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::multimap</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/map&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::multiset</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::multiset</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/set&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::set</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::set</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/set&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::string</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::string</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/string&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::wstring</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::wstring</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/string&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::basic_string</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::basic_string</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/string&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::vector</code></td><td align=\"left\"><code class=\"filename\">vector</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::vector</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/vector&gt;</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>In addition, when compiling in C++0x mode, these additional\n+containers have additional debug capability.\n+</p><div class=\"table\"><a id=\"id488498\"></a><p class=\"title\"><b>Table\u00a017.2.\u00a0Debugging Containers C++0x</b></p><div class=\"table-contents\"><table summary=\"Debugging Containers C++0x\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Container</th><th align=\"left\">Header</th><th align=\"left\">Debug container</th><th align=\"left\">Debug header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">std::unordered_map</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_map</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/unordered_map&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_multimap</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_multimap</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/unordered_map&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_set</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_set</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/unordered_set&gt;</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_multiset</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_multiset</code></td><td align=\"left\"><code class=\"filename\">&lt;debug/unordered_set&gt;</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Semantics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>"}, {"sha": "758af487ad7b98cfaaf8322fdbd39db02d5ceec7", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch17s04.html", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch17s04.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"bk01pt12ch30s03.html\" title=\"Using\" /><link rel=\"next\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"parallel_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.design\"></a>Design</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"bk01pt03ch17s03.html\" title=\"Using\" /><link rel=\"next\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a017.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"parallel_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.design\"></a>Design</h2></div></div></div><p>\n   </p><div class=\"sect2\" title=\"Goals\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug_mode.design.goals\"></a>Goals</h3></div></div></div><p>\n     </p><p> The libstdc++ debug mode replaces unsafe (but efficient) standard\n   containers and iterators with semantically equivalent safe standard\n@@ -38,7 +38,7 @@\n     own usability and implementation characteristics. In general, the\n     higher-numbered conformance levels are more usable (i.e., require\n     less recompilation) but are more complicated to implement than\n-    the lower-numbered conformance levels. \n+    the lower-numbered conformance levels.\n       </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Full recompilation</em></span>: The user must recompile his or\n \ther entire application and all C++ libraries it depends on,\n \tincluding the C++ standard library that ships with the\n@@ -101,7 +101,7 @@\n   container that will perform the actual work. This design decision\n   ensures that we cannot regress release-mode performance (because the\n   release-mode containers are left untouched) and partially\n-  enables <a class=\"link\" href=\"bk01pt12ch30s04.html#methods.coexistence.link\" title=\"Link- and run-time coexistence of release- and debug-mode components\">mixing debug and\n+  enables <a class=\"link\" href=\"bk01pt03ch17s04.html#methods.coexistence.link\" title=\"Link- and run-time coexistence of release- and debug-mode components\">mixing debug and\n   release code</a> at link time, although that will not be\n   discussed at this time.</p><p>Two types of wrappers are used in the implementation of the debug\n   mode: container wrappers and iterator wrappers. The two types of\n@@ -133,8 +133,8 @@\n   version) as appropriate. However, all safe containers inherit from\n   the class template <code class=\"code\">__gnu_debug::_Safe_sequence</code>,\n   instantiated with the type of the safe container itself (an instance\n-  of the curiously recurring template pattern).</p><p>The iterators of a container wrapper will be \n-  <a class=\"link\" href=\"bk01pt12ch30s04.html#debug_mode.design.methods.safe_iter\" title=\"Safe Iterators\">safe\n+  of the curiously recurring template pattern).</p><p>The iterators of a container wrapper will be\n+  <a class=\"link\" href=\"bk01pt03ch17s04.html#debug_mode.design.methods.safe_iter\" title=\"Safe Iterators\">safe\n   iterators</a> that reference sequences of this type and wrap the\n   iterators provided by the release-mode base class. The debugging\n   container will use only the safe iterators within its own interface\n@@ -221,7 +221,7 @@\n      };\n } // namespace std\n </pre><p>In debug mode we include the release-mode container (which is now\n-defined in in the namespace <code class=\"code\">__norm</code>) and also the\n+defined in the namespace <code class=\"code\">__norm</code>) and also the\n debug-mode container. The debug-mode container is defined within the\n namespace <code class=\"code\">__debug</code>, which is associated with namespace\n <code class=\"code\">std</code> via the C++0x namespace association language feature.  This\n@@ -236,7 +236,7 @@\n     template&lt;typename _Tp, typename _Alloc = allocator&lt;_Tp&gt; &gt;\n       class list\n       {\n-        // ...\n+\t// ...\n       };\n   } // namespace __gnu_norm\n \n@@ -245,9 +245,9 @@\n     template&lt;typename _Tp, typename _Alloc = allocator&lt;_Tp&gt; &gt;\n       class list\n       : public __norm::list&lt;_Tp, _Alloc&gt;,\n-        public __gnu_debug::_Safe_sequence&lt;list&lt;_Tp, _Alloc&gt; &gt;\n+\tpublic __gnu_debug::_Safe_sequence&lt;list&lt;_Tp, _Alloc&gt; &gt;\n       {\n-        // ...\n+\t// ...\n       };\n   } // namespace __norm\n \n@@ -256,7 +256,7 @@\n }\n </pre></div><div class=\"sect4\" title=\"Link- and run-time coexistence of release- and debug-mode components\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"methods.coexistence.link\"></a>Link- and run-time coexistence of release- and\n     debug-mode components</h5></div></div></div><p>Because each component has a distinct and separate release and\n-debug implementation, there are are no issues with link-time\n+debug implementation, there is no issue with link-time\n coexistence: the separate namespaces result in different mangled\n names, and thus unique linkage.</p><p>However, components that are defined and used within the C++\n standard library itself face additional constraints. For instance,\n@@ -273,20 +273,20 @@\n #include &lt;string&gt;\n \n std::string test02();\n- \n+\n std::string test01()\n {\n   return test02();\n }\n- \n+\n int main()\n {\n   test01();\n   return 0;\n }\n </pre><p> ... and linked to this translation unit, compiled in release mode:</p><pre class=\"programlisting\">\n #include &lt;string&gt;\n- \n+\n std::string\n test02()\n {\n@@ -349,7 +349,7 @@\n       enticing option, because it would eliminate the need for\n       the <code class=\"code\">link_name</code> extension by aliasing the\n       templates. However, there is no true template aliasing mechanism\n-      is C++, because both <code class=\"code\">using</code> directives and using\n+      in C++, because both <code class=\"code\">using</code> directives and using\n       declarations disallow specialization. This method fails\n       the <span class=\"emphasis\"><em>correctness</em></span> criteria.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em> Use implementation-specific properties of anonymous\n     namespaces. </em></span>\n@@ -375,7 +375,7 @@\n     include ordering. Two, ODR issues remained with container member\n     functions taking no arguments in mixed-mode settings resulting in\n     equivalent link names, <code class=\"code\"> vector::push_back() </code> being\n-    one example. \n+    one example.\n     See <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2003-08/msg00177.html\" target=\"_top\">link\n     name</a> </p></li></ul></div><p>Other options may exist for implementing the debug mode, many of\n   which have probably been considered and others that may still be\n@@ -409,4 +409,4 @@\n   a full debug-mode implementation (including debugging for\n   CodeWarrior extensions) and is easy to use, although it meets only\n   the \"Full recompilation\" (1) recompilation\n-  guarantee.</p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"parallel_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Using\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a031.\u00a0Parallel Mode</td></tr></table></div></body></html>\n+  guarantee.</p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"parallel_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Using\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a018.\u00a0Parallel Mode</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch30s04.html"}, {"sha": "29f7dad3cca7feb4853847aaf079d4f86c277b48", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch18s02.html", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Semantics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"next\" href=\"bk01pt12ch31s03.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Semantics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Semantics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.semantics\"></a>Semantics</h2></div></div></div><p> The parallel mode STL algorithms are currently not exception-safe,\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Semantics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"next\" href=\"bk01pt03ch18s03.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Semantics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Semantics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.semantics\"></a>Semantics</h2></div></div></div><p> The parallel mode STL algorithms are currently not exception-safe,\n i.e. user-defined functors must not throw exceptions.\n Also, the order of execution is not guaranteed for some functions, of course.\n Therefore, user-defined functors should not have any concurrent side effects.\n </p><p> Since the current GCC OpenMP implementation does not support\n OpenMP parallel regions in concurrent threads,\n it is not possible to call parallel STL algorithm in\n concurrent threads, either.\n-It might work with other compilers, though.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a031.\u00a0Parallel Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>\n+It might work with other compilers, though.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a018.\u00a0Parallel Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch31s02.html"}, {"sha": "778d35acbcd78b69dfdb2707ee4d8b0909eb80f4", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch18s03.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,13 +1,13 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt12ch31s02.html\" title=\"Semantics\" /><link rel=\"next\" href=\"bk01pt12ch31s04.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Using\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.using\"></a>Using</h2></div></div></div><div class=\"sect2\" title=\"Prerequisite Compiler Flags\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"parallel_mode.using.prereq_flags\"></a>Prerequisite Compiler Flags</h3></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt03ch18s02.html\" title=\"Semantics\" /><link rel=\"next\" href=\"bk01pt03ch18s04.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Using\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.using\"></a>Using</h2></div></div></div><div class=\"sect2\" title=\"Prerequisite Compiler Flags\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"parallel_mode.using.prereq_flags\"></a>Prerequisite Compiler Flags</h3></div></div></div><p>\n   Any use of parallel functionality requires additional compiler\n   and runtime support, in particular support for OpenMP. Adding this support is\n   not difficult: just compile your application with the compiler\n   flag <code class=\"literal\">-fopenmp</code>. This will link\n   in <code class=\"code\">libgomp</code>, the GNU\n   OpenMP <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libgomp\" target=\"_top\">implementation</a>,\n-  whose presence is mandatory. \n+  whose presence is mandatory.\n </p><p>\n In addition, hardware that supports atomic operations and a compiler\n   capable of producing atomic operations is mandatory: GCC defaults to no\n@@ -63,4 +63,4 @@\n flags for atomic operations.)\n </p><p> The following table provides the names and headers of all the\n   parallel algorithms that can be used in a similar manner:\n-</p><div class=\"table\"><a id=\"id713517\"></a><p class=\"title\"><b>Table\u00a031.1.\u00a0Parallel Algorithms</b></p><div class=\"table-contents\"><table summary=\"Parallel Algorithms\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Algorithm</th><th align=\"left\">Header</th><th align=\"left\">Parallel algorithm</th><th align=\"left\">Parallel header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"function\">std::accumulate</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::accumulate</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::adjacent_difference</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::adjacent_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::inner_product</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::inner_product</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partial_sum</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partial_sum</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::adjacent_find</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::adjacent_find</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::count</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::count</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::count_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::count_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::equal</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::equal</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find_first_of</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find_first_of</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::for_each</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::for_each</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::generate</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::generate</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::generate_n</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::generate_n</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::lexicographical_compare</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::lexicographical_compare</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::mismatch</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::mismatch</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::search</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::search</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::search_n</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::search_n</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::transform</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::transform</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::replace</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::replace</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::replace_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::replace_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::max_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::max_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::merge</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::merge</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::min_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::min_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::nth_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::nth_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partial_sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partial_sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partition</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partition</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::random_shuffle</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::random_shuffle</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_union</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_union</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_intersection</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_intersection</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_symmetric_difference</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_symmetric_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_difference</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::stable_sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::stable_sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::unique_copy</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::unique_copy</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Semantics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>\n+</p><div class=\"table\"><a id=\"id394282\"></a><p class=\"title\"><b>Table\u00a018.1.\u00a0Parallel Algorithms</b></p><div class=\"table-contents\"><table summary=\"Parallel Algorithms\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Algorithm</th><th align=\"left\">Header</th><th align=\"left\">Parallel algorithm</th><th align=\"left\">Parallel header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"function\">std::accumulate</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::accumulate</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::adjacent_difference</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::adjacent_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::inner_product</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::inner_product</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partial_sum</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partial_sum</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::adjacent_find</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::adjacent_find</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::count</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::count</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::count_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::count_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::equal</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::equal</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::find_first_of</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::find_first_of</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::for_each</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::for_each</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::generate</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::generate</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::generate_n</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::generate_n</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::lexicographical_compare</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::lexicographical_compare</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::mismatch</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::mismatch</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::search</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::search</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::search_n</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::search_n</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::transform</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::transform</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::replace</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::replace</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::replace_if</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::replace_if</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::max_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::max_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::merge</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::merge</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::min_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::min_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::nth_element</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::nth_element</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partial_sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partial_sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::partition</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::partition</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::random_shuffle</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::random_shuffle</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_union</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_union</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_intersection</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_intersection</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_symmetric_difference</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_symmetric_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::set_difference</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::set_difference</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::stable_sort</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::stable_sort</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr><tr><td align=\"left\"><code class=\"function\">std::unique_copy</code></td><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"function\">__gnu_parallel::unique_copy</code></td><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Semantics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch31s03.html"}, {"sha": "2b2fd27996ec1cc9c89d13001c368347853714de", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch18s04.html", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s04.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt12ch31s03.html\" title=\"Using\" /><link rel=\"next\" href=\"bk01pt12ch31s05.html\" title=\"Testing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.design\"></a>Design</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt03ch18s03.html\" title=\"Using\" /><link rel=\"next\" href=\"bk01pt03ch18s05.html\" title=\"Testing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.design\"></a>Design</h2></div></div></div><p>\n   </p><div class=\"sect2\" title=\"Interface Basics\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"parallel_mode.design.intro\"></a>Interface Basics</h3></div></div></div><p>\n All parallel algorithms are intended to have signatures that are\n equivalent to the ISO C++ algorithms replaced. For instance, the\n@@ -105,7 +105,7 @@\n <code class=\"code\">__gnu_parallel::parallel_tag</code> and\n <code class=\"code\">__gnu_parallel::default_parallel_tag</code>, in addition to\n <code class=\"code\">__gnu_parallel::sequential_tag</code>.\n-<code class=\"code\">__gnu_parallel::default_parallel_tag</code> chooses the default \n+<code class=\"code\">__gnu_parallel::default_parallel_tag</code> chooses the default\n algorithm at compiletime, as does omitting the tag.\n <code class=\"code\">__gnu_parallel::parallel_tag</code> postpones the decision to runtime\n (see next section).\n@@ -120,7 +120,7 @@\n For the <code class=\"code\">sort</code> and <code class=\"code\">stable_sort</code> algorithms, there are\n several additional choices, namely\n <code class=\"code\">__gnu_parallel::multiway_mergesort_tag</code>,\n-<code class=\"code\">__gnu_parallel::multiway_mergesort_exact_tag</code>, \n+<code class=\"code\">__gnu_parallel::multiway_mergesort_exact_tag</code>,\n <code class=\"code\">__gnu_parallel::multiway_mergesort_sampling_tag</code>,\n <code class=\"code\">__gnu_parallel::quicksort_tag</code>, and\n <code class=\"code\">__gnu_parallel::balanced_quicksort_tag</code>.\n@@ -198,7 +198,7 @@\n explicitly sequential:\n <code class=\"code\">__gnu_serial</code>.\n </p><p> Two namespaces contain the parallel mode:\n-<code class=\"code\">std::__parallel</code> and <code class=\"code\">__gnu_parallel</code>. \n+<code class=\"code\">std::__parallel</code> and <code class=\"code\">__gnu_parallel</code>.\n </p><p> Parallel implementations of standard components, including\n template helpers to select parallelism, are defined in <code class=\"code\">namespace\n std::__parallel</code>. For instance, <code class=\"function\">std::transform</code> from <code class=\"filename\">algorithm</code> has a parallel counterpart in\n@@ -210,4 +210,4 @@\n </p><p> More information, and an organized index of types and functions\n related to the parallel mode on a per-namespace basis, can be found in\n the generated source documentation.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Using\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Testing</td></tr></table></div></body></html>\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Using\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Testing</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch31s04.html"}, {"sha": "7a92bbaba9c878a08e6e8691ebfc5c681a98f329", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch18s05.html", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch18s05.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,17 +1,17 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt12ch31s04.html\" title=\"Design\" /><link rel=\"next\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Testing\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.test\"></a>Testing</h2></div></div></div><p> \n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt03ch18s04.html\" title=\"Design\" /><link rel=\"next\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Testing\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.test\"></a>Testing</h2></div></div></div><p>\n     Both the normal conformance and regression tests and the\n     supplemental performance tests work.\n-  </p><p> \n+  </p><p>\n     To run the conformance and regression tests with the parallel mode\n     active,\n   </p><pre class=\"screen\">\n   <strong class=\"userinput\"><code>make check-parallel</code></strong>\n   </pre><p>\n     The log and summary files for conformance testing are in the\n     <code class=\"filename\">testsuite/parallel</code> directory.\n-  </p><p> \n+  </p><p>\n     To run the performance tests with the parallel mode active,\n   </p><pre class=\"screen\">\n   <strong class=\"userinput\"><code>make check-performance-parallel</code></strong>\n@@ -23,4 +23,4 @@\n     additional software dependencies than the usual bare-boned text\n     file, and can be generated by using the <code class=\"code\">make\n     doc-performance</code> rule in the testsuite's Makefile.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a032.\u00a0Profile Mode</td></tr></table></div></body></html>\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a019.\u00a0Profile Mode</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch31s05.html"}, {"sha": "575a89dc0c202f744b13030931feb3aa43ac31bc", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s02.html", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"next\" href=\"bk01pt12ch32s03.html\" title=\"Extensions for Custom Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.design\"></a>Design</h2></div></div></div><p>\n-</p><div class=\"table\"><a id=\"id594983\"></a><p class=\"title\"><b>Table\u00a032.1.\u00a0Code Location</b></p><div class=\"table-contents\"><table summary=\"Code Location\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Code Location</th><th align=\"left\">Use</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/std/*</code></td><td align=\"left\">Preprocessor code to redirect to profile extension headers.</td></tr><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/profile/*</code></td><td align=\"left\">Profile extension public headers (map, vector, ...).</td></tr><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/profile/impl/*</code></td><td align=\"left\">Profile extension internals.  Implementation files are\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"next\" href=\"bk01pt03ch19s03.html\" title=\"Extensions for Custom Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.design\"></a>Design</h2></div></div></div><p>\n+</p><div class=\"table\"><a id=\"id387560\"></a><p class=\"title\"><b>Table\u00a019.1.\u00a0Profile Code Location</b></p><div class=\"table-contents\"><table summary=\"Profile Code Location\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Code Location</th><th align=\"left\">Use</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/std/*</code></td><td align=\"left\">Preprocessor code to redirect to profile extension headers.</td></tr><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/profile/*</code></td><td align=\"left\">Profile extension public headers (map, vector, ...).</td></tr><tr><td align=\"left\"><code class=\"code\">libstdc++-v3/include/profile/impl/*</code></td><td align=\"left\">Profile extension internals.  Implementation files are\n      only included from <code class=\"code\">impl/profiler.h</code>, which is the only\n      file included from the public headers.</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n </p><div class=\"sect2\" title=\"Wrapper Model\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.design.wrapper\"></a>Wrapper Model</h3></div></div></div><p>\n@@ -10,12 +10,12 @@\n   we use the same wrapper model as the debug mode.\n   We subclass entities from the release version.  Wherever\n   <code class=\"code\">_GLIBCXX_PROFILE</code> is defined, the release namespace is\n-  <code class=\"code\">std::__norm</code>, whereas the profile namespace is \n+  <code class=\"code\">std::__norm</code>, whereas the profile namespace is\n   <code class=\"code\">std::__profile</code>.  Using plain <code class=\"code\">std</code> translates\n   into <code class=\"code\">std::__profile</code>.\n   </p><p>\n   Whenever possible, we try to wrap at the public interface level, e.g.,\n-  in <code class=\"code\">unordered_set</code> rather than in <code class=\"code\">hashtable</code>, \n+  in <code class=\"code\">unordered_set</code> rather than in <code class=\"code\">hashtable</code>,\n   in order not to depend on implementation.\n   </p><p>\n   Mixing object files built with and without the profile mode must\n@@ -29,20 +29,20 @@\n   Instead of instrumenting every public entry and exit point,\n   we chose to add instrumentation on demand, as needed\n   by individual diagnostics.\n-  The main reason is that some diagnostics require us to extract bits of \n+  The main reason is that some diagnostics require us to extract bits of\n   internal state that are particular only to that diagnostic.\n   We plan to formalize this later, after we learn more about the requirements\n   of several diagnostics.\n   </p><p>\n-  All the instrumentation points can be switched on and off using \n+  All the instrumentation points can be switched on and off using\n   <code class=\"code\">-D[_NO]_GLIBCXX_PROFILE_&lt;diagnostic&gt;</code> options.\n   With all the instrumentation calls off, there should be negligible\n   overhead over the release version.  This property is needed to support\n   diagnostics based on timing of internal operations.  For such diagnostics,\n   we anticipate turning most of the instrumentation off in order to prevent\n   profiling overhead from polluting time measurements, and thus diagnostics.\n   </p><p>\n-  All the instrumentation on/off compile time switches live in \n+  All the instrumentation on/off compile time switches live in\n   <code class=\"code\">include/profile/profiler.h</code>.\n   </p></div><div class=\"sect2\" title=\"Run Time Behavior\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.design.rtlib\"></a>Run Time Behavior</h3></div></div></div><p>\n   For practical reasons, the instrumentation library processes the trace\n@@ -60,7 +60,7 @@\n   is destroyed, we accumulate its effect to the corresponding entry for the\n   call stack of its constructor location.\n   </p><p>\n-  For details, see \n+  For details, see\n    <a class=\"ulink\" href=\"http://dx.doi.org/10.1109/CGO.2009.36\" target=\"_top\">paper presented at\n    CGO 2009</a>.\n   </p></div><div class=\"sect2\" title=\"Analysis and Diagnostics\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.design.analysis\"></a>Analysis and Diagnostics</h3></div></div></div><p>\n@@ -71,7 +71,7 @@\n   The input to the analysis is a table indexed by profile type and call stack.\n   The data type for each entry depends on the profile type.\n   </p></div><div class=\"sect2\" title=\"Cost Model\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.design.cost-model\"></a>Cost Model</h3></div></div></div><p>\n-  While it is likely that cost models become complex as we get into \n+  While it is likely that cost models become complex as we get into\n   more sophisticated analysis, we will try to follow a simple set of rules\n   at the beginning.\n   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Relative benefit estimation:</em></span>\n@@ -95,7 +95,7 @@\n   and report the one that performs best for each call context.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Show stoppers:</em></span>\n   We may decide that the presence of an operation nullifies the advice.\n-  For instance, when considering switching from <code class=\"code\">set</code> to \n+  For instance, when considering switching from <code class=\"code\">set</code> to\n   <code class=\"code\">unordered_set</code>, if we detect use of operator <code class=\"code\">++</code>,\n   we will simply not issue the advice, since this could signal that the use\n   care require a sorted container.</p></li></ul></div></div><div class=\"sect2\" title=\"Reports\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.design.reports\"></a>Reports</h3></div></div></div><p>\n@@ -119,4 +119,4 @@\n   We created a <code class=\"code\">profile</code> directory in the test suite.\n   Each diagnostic must come with at least two tests, one for false positives\n   and one for false negatives.\n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a032.\u00a0Profile Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Extensions for Custom Containers</td></tr></table></div></body></html>\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a019.\u00a0Profile Mode\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Extensions for Custom Containers</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s02.html"}, {"sha": "89c14c0a82122d999e9a0db7d9546801d738d9a1", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s03.html", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,10 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Extensions for Custom Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt12ch32s02.html\" title=\"Design\" /><link rel=\"next\" href=\"bk01pt12ch32s04.html\" title=\"Empirical Cost Model\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Extensions for Custom Containers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Extensions for Custom Containers\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.api\"></a>Extensions for Custom Containers</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Extensions for Custom Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt03ch19s02.html\" title=\"Design\" /><link rel=\"next\" href=\"bk01pt03ch19s04.html\" title=\"Empirical Cost Model\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Extensions for Custom Containers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Extensions for Custom Containers\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.api\"></a>Extensions for Custom Containers</h2></div></div></div><p>\n   Many large projects use their own data structures instead of the ones in the\n   standard library.  If these data structures are similar in functionality\n   to the standard library, they can be instrumented with the same hooks\n   that are used to instrument the standard library.\n   The instrumentation API is exposed in file\n   <code class=\"code\">profiler.h</code> (look for \"Instrumentation hooks\").\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Empirical Cost Model</td></tr></table></div></body></html>\n+  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Empirical Cost Model</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s03.html"}, {"sha": "64a3a19822ac59cf40b78c4c237d00c88d5ee58c", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s04.html", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s04.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Empirical Cost Model</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt12ch32s03.html\" title=\"Extensions for Custom Containers\" /><link rel=\"next\" href=\"bk01pt12ch32s05.html\" title=\"Implementation Issues\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Empirical Cost Model</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Empirical Cost Model\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.cost_model\"></a>Empirical Cost Model</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Empirical Cost Model</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt03ch19s03.html\" title=\"Extensions for Custom Containers\" /><link rel=\"next\" href=\"bk01pt03ch19s05.html\" title=\"Implementation Issues\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Empirical Cost Model</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Empirical Cost Model\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.cost_model\"></a>Empirical Cost Model</h2></div></div></div><p>\n   Currently, the cost model uses formulas with predefined relative weights\n   for alternative containers or container implementations.  For instance,\n   iterating through a vector is X times faster than iterating through a list.\n@@ -15,4 +15,4 @@\n   filled in either by hand or by an automated training mechanism.\n   The analysis module will then use this database instead of the built in.\n   generic parameters.\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Extensions for Custom Containers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation Issues</td></tr></table></div></body></html>\n+  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Extensions for Custom Containers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation Issues</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s04.html"}, {"sha": "025dbb126795f8e15c1ac0c316dba8a0a406f6ec", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s05.html", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s05.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation Issues</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt12ch32s04.html\" title=\"Empirical Cost Model\" /><link rel=\"next\" href=\"bk01pt12ch32s06.html\" title=\"Developer Information\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation Issues</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s06.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Implementation Issues\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.implementation\"></a>Implementation Issues</h2></div></div></div><div class=\"sect2\" title=\"Stack Traces\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.implementation.stack\"></a>Stack Traces</h3></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation Issues</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt03ch19s04.html\" title=\"Empirical Cost Model\" /><link rel=\"next\" href=\"bk01pt03ch19s06.html\" title=\"Developer Information\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation Issues</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s06.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Implementation Issues\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.implementation\"></a>Implementation Issues</h2></div></div></div><div class=\"sect2\" title=\"Stack Traces\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.implementation.stack\"></a>Stack Traces</h3></div></div></div><p>\n   Accurate stack traces are needed during profiling since we group events by\n   call context and dynamic instance.  Without accurate traces, diagnostics\n   may be hard to interpret.  For instance, when giving advice to the user\n@@ -24,15 +24,15 @@\n   During profiling, we keep a single information table per diagnostic.\n   There is a single lock per information table.\n   </p></div><div class=\"sect2\" title=\"Using the Standard Library in the Instrumentation Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.implementation.stdlib-in-proflib\"></a>Using the Standard Library in the Instrumentation Implementation</h3></div></div></div><p>\n-  As much as we would like to avoid uses of stdlibc++ within our \n-  instrumentation library, containers such as unordered_map are very \n-  appealing.  We plan to use them as long as they are named properly \n+  As much as we would like to avoid uses of libstdc++ within our\n+  instrumentation library, containers such as unordered_map are very\n+  appealing.  We plan to use them as long as they are named properly\n   to avoid ambiguity.\n   </p></div><div class=\"sect2\" title=\"Malloc Hooks\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.implementation.malloc-hooks\"></a>Malloc Hooks</h3></div></div></div><p>\n   User applications/libraries can provide malloc hooks.\n   When the implementation of the malloc hooks uses stdlibc++, there can\n   be an infinite cycle between the profile mode instrumentation and the\n-  the malloc hook code.\n+  malloc hook code.\n   </p><p>\n   We protect against reentrance to the profile mode instrumentation code,\n   which should avoid this problem in most cases.\n@@ -46,6 +46,6 @@\n   The profiling library state is initialized at the first call to a profiling\n   method.  This allows us to record the construction of all global objects.\n   However, we cannot do the same at destruction time.  The trace is written\n-  by a function registered by <code class=\"code\">atexit</code>, thus invoked by \n+  by a function registered by <code class=\"code\">atexit</code>, thus invoked by\n   <code class=\"code\">exit</code>.\n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s06.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Empirical Cost Model\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Developer Information</td></tr></table></div></body></html>\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s06.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Empirical Cost Model\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Developer Information</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s05.html"}, {"sha": "a4eb97333e864ce7bd5d5ed0e19914f42029f98b", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s06.html", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s06.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s06.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s06.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,21 +1,21 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Developer Information</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt12ch32s05.html\" title=\"Implementation Issues\" /><link rel=\"next\" href=\"bk01pt12ch32s07.html\" title=\"Diagnostics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Developer Information</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s07.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Developer Information\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.developer\"></a>Developer Information</h2></div></div></div><div class=\"sect2\" title=\"Big Picture\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.developer.bigpic\"></a>Big Picture</h3></div></div></div><p>The profile mode headers are included with\n-   <code class=\"code\">-D_GLIBCXX_PROFILE</code> through preprocessor directives in \n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Developer Information</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt03ch19s05.html\" title=\"Implementation Issues\" /><link rel=\"next\" href=\"bk01pt03ch19s07.html\" title=\"Diagnostics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Developer Information</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s07.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Developer Information\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.developer\"></a>Developer Information</h2></div></div></div><div class=\"sect2\" title=\"Big Picture\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.developer.bigpic\"></a>Big Picture</h3></div></div></div><p>The profile mode headers are included with\n+   <code class=\"code\">-D_GLIBCXX_PROFILE</code> through preprocessor directives in\n    <code class=\"code\">include/std/*</code>.\n-  </p><p>Instrumented implementations are provided in \n+  </p><p>Instrumented implementations are provided in\n    <code class=\"code\">include/profile/*</code>.  All instrumentation hooks are macros\n    defined in <code class=\"code\">include/profile/profiler.h</code>.\n-  </p><p>All the implementation of the instrumentation hooks is in \n+  </p><p>All the implementation of the instrumentation hooks is in\n    <code class=\"code\">include/profile/impl/*</code>.  Although all the code gets included,\n    thus is publicly visible, only a small number of functions are called from\n    outside this directory.  All calls to hook implementations must be\n    done through macros defined in <code class=\"code\">profiler.h</code>.  The macro\n-   must ensure (1) that the call is guarded against reentrance and \n+   must ensure (1) that the call is guarded against reentrance and\n    (2) that the call can be turned off at compile time using a\n    <code class=\"code\">-D_GLIBCXX_PROFILE_...</code> compiler option.\n   </p></div><div class=\"sect2\" title=\"How To Add A Diagnostic\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.developer.howto\"></a>How To Add A Diagnostic</h3></div></div></div><p>Let's say the diagnostic name is \"magic\".\n-  </p><p>If you need to instrument a header not already under \n+  </p><p>If you need to instrument a header not already under\n    <code class=\"code\">include/profile/*</code>, first edit the corresponding header\n    under <code class=\"code\">include/std/</code> and add a preprocessor directive such\n    as the one in <code class=\"code\">include/std/vector</code>:\n@@ -57,12 +57,12 @@\n       Define class <code class=\"code\">__magic_stack_info: public __magic_info</code>.\n       This defines the content of a line in the stack table.\n      </p></li><li class=\"listitem\"><p>\n-      Define class <code class=\"code\">__trace_magic: public __trace_base&lt;__magic_info, \n+      Define class <code class=\"code\">__trace_magic: public __trace_base&lt;__magic_info,\n       __magic_stack_info&gt;</code>.\n       It defines the content of the trace associated with this diagnostic.\n      </p></li></ul></div><p>\n   </p><p>Add initialization and reporting calls in\n    <code class=\"code\">include/profile/impl/profiler_trace.h</code>.  Use\n    <code class=\"code\">__trace_vector_to_list</code> as an example.\n   </p><p>Add documentation in file <code class=\"code\">doc/xml/manual/profile_mode.xml</code>.\n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s07.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation Issues\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Diagnostics</td></tr></table></div></body></html>\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s07.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation Issues\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Diagnostics</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s06.html"}, {"sha": "e5d00f5a9d9a357fa4456a88d47b0a3efa586a89", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch19s07.html", "status": "renamed", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s07.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s07.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch19s07.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,12 +1,12 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Diagnostics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt12ch32s06.html\" title=\"Developer Information\" /><link rel=\"next\" href=\"ext_allocators.html\" title=\"Chapter\u00a033.\u00a0Allocators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Diagnostics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s06.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_allocators.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Diagnostics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.diagnostics\"></a>Diagnostics</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Diagnostics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /><link rel=\"prev\" href=\"bk01pt03ch19s06.html\" title=\"Developer Information\" /><link rel=\"next\" href=\"ext_allocators.html\" title=\"Chapter\u00a020.\u00a0Allocators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Diagnostics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s06.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_allocators.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Diagnostics\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.diagnostics\"></a>Diagnostics</h2></div></div></div><p>\n   The table below presents all the diagnostics we intend to implement.\n   Each diagnostic has a corresponding compile time switch\n   <code class=\"code\">-D_GLIBCXX_PROFILE_&lt;diagnostic&gt;</code>.\n   Groups of related diagnostics can be turned on with a single switch.\n   For instance, <code class=\"code\">-D_GLIBCXX_PROFILE_LOCALITY</code> is equivalent to\n-  <code class=\"code\">-D_GLIBCXX_PROFILE_SOFTWARE_PREFETCH \n+  <code class=\"code\">-D_GLIBCXX_PROFILE_SOFTWARE_PREFETCH\n   -D_GLIBCXX_PROFILE_RBTREE_LOCALITY</code>.\n   </p><p>\n   The benefit, cost, expected frequency and accuracy of each diagnostic\n@@ -18,7 +18,7 @@\n   A high accuracy means that the diagnostic is unlikely to be wrong.\n   These grades are not perfect.  They are just meant to guide users with\n   specific needs or time budgets.\n-  </p><div class=\"table\"><a id=\"id626153\"></a><p class=\"title\"><b>Table\u00a032.2.\u00a0Diagnostics</b></p><div class=\"table-contents\"><table summary=\"Diagnostics\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Group</th><th align=\"left\">Flag</th><th align=\"left\">Benefit</th><th align=\"left\">Cost</th><th align=\"left\">Freq.</th><th align=\"left\">Implemented</th></tr></thead><tbody><tr><td align=\"left\"><a class=\"ulink\" href=\"#manual.ext.profile_mode.analysis.containers\" target=\"_top\">\n+  </p><div class=\"table\"><a id=\"id425023\"></a><p class=\"title\"><b>Table\u00a019.2.\u00a0Profile Diagnostics</b></p><div class=\"table-contents\"><table summary=\"Profile Diagnostics\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Group</th><th align=\"left\">Flag</th><th align=\"left\">Benefit</th><th align=\"left\">Cost</th><th align=\"left\">Freq.</th><th align=\"left\">Implemented</th><td class=\"auto-generated\">\u00a0</td></tr></thead><tbody><tr><td align=\"left\"><a class=\"ulink\" href=\"#manual.ext.profile_mode.analysis.containers\" target=\"_top\">\n     CONTAINERS</a></td><td align=\"left\"><a class=\"ulink\" href=\"#manual.ext.profile_mode.analysis.hashtable_too_small\" target=\"_top\">\n     HASHTABLE_TOO_SMALL</a></td><td align=\"left\">10</td><td align=\"left\">1</td><td align=\"left\">\u00a0</td><td align=\"left\">10</td><td align=\"left\">yes</td></tr><tr><td align=\"left\">\u00a0</td><td align=\"left\"><a class=\"ulink\" href=\"#manual.ext.profile_mode.analysis.hashtable_too_large\" target=\"_top\">\n     HASHTABLE_TOO_LARGE</a></td><td align=\"left\">5</td><td align=\"left\">1</td><td align=\"left\">\u00a0</td><td align=\"left\">10</td><td align=\"left\">yes</td></tr><tr><td align=\"left\">\u00a0</td><td align=\"left\"><a class=\"ulink\" href=\"#manual.ext.profile_mode.analysis.inefficient_hash\" target=\"_top\">\n@@ -57,22 +57,22 @@\n   <code class=\"code\">_GLIBCXX_PROFILE_CONTAINERS</code>.\n </p><div class=\"sect3\" title=\"Hashtable Too Small\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.hashtable_too_small\"></a>Hashtable Too Small</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_HASHTABLE_TOO_SMALL</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect hashtables with many \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect hashtables with many\n   rehash operations, small construction size and large destruction size.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span> Rehash is very expensive.\n   Read content, follow chains within bucket, evaluate hash function, place at\n   new location in different order.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span> 36%.\n   Code similar to example below.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span> \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>\n   Set initial size to N at construction site S.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span>\n   <code class=\"code\">unordered_set, unordered_map</code> constructor, destructor, rehash.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   For each dynamic instance of <code class=\"code\">unordered_[multi]set|map</code>,\n   record initial size and call context of the constructor.\n   Record size increase, if any, after each relevant operation such as insert.\n   Record the estimated rehash cost.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Number of individual rehash operations * cost per rehash.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Number of individual rehash operations * cost per rehash.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1 unordered_set&lt;int&gt; us;\n 2 for (int k = 0; k &lt; 1000000; ++k) {\n@@ -89,16 +89,16 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span> Save memory, which\n   is good in itself and may also improve memory reference performance through\n   fewer cache and TLB misses.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span> unknown.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span> \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>\n   Set initial size to N at construction site S.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span>\n   <code class=\"code\">unordered_set, unordered_map</code> constructor, destructor, rehash.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   For each dynamic instance of <code class=\"code\">unordered_[multi]set|map</code>,\n   record initial size and call context of the constructor, and correlate it\n   with its size at destruction time.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Number of iteration operations + memory saved.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Number of iteration operations + memory saved.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1 vector&lt;unordered_set&lt;int&gt;&gt; v(100000, unordered_set&lt;int&gt;(100)) ;\n 2 for (int k = 0; k &lt; 100000; ++k) {\n@@ -114,7 +114,7 @@\n   <code class=\"code\">_GLIBCXX_PROFILE_INEFFICIENT_HASH</code>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect hashtables with polarized\n   distribution.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span> A non-uniform \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span> A non-uniform\n   distribution may lead to long chains, thus possibly increasing complexity\n   by a factor up to the number of elements.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span> factor up\n@@ -128,7 +128,7 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   Count the exact number of link traversals.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Total number of links traversed.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Total number of links traversed.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n class dumb_hash {\n  public:\n@@ -143,7 +143,7 @@\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"Vector Too Small\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.vector_too_small\"></a>Vector Too Small</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_VECTOR_TOO_SMALL</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span>Detect vectors with many \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span>Detect vectors with many\n   resize operations, small construction size and large destruction size..\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>Resizing can be expensive.\n   Copying large amounts of data takes time.  Resizing many small vectors may\n@@ -153,17 +153,17 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   For each dynamic instance of <code class=\"code\">vector</code>,\n   record initial size and call context of the constructor.\n-  Record size increase, if any, after each relevant operation such as \n+  Record size increase, if any, after each relevant operation such as\n   <code class=\"code\">push_back</code>.  Record the estimated resize cost.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Total number of words copied * time to copy a word.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Total number of words copied * time to copy a word.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1 vector&lt;int&gt; v;\n 2 for (int k = 0; k &lt; 1000000; ++k) {\n 3   v.push_back(k);\n 4 }\n \n-foo.cc:1: advice: Changing initial vector size from 10 to 1000000 saves \n+foo.cc:1: advice: Changing initial vector size from 10 to 1000000 saves\n copying 4000000 bytes and 20 memory allocations and deallocations.\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"Vector Too Large\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.vector_too_large\"></a>Vector Too Large</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n@@ -180,7 +180,7 @@\n   For each dynamic instance of <code class=\"code\">vector</code>,\n   record initial size and call context of the constructor, and correlate it\n   with its size at destruction time.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Total amount of memory saved.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Total amount of memory saved.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1 vector&lt;vector&lt;int&gt;&gt; v(100000, vector&lt;int&gt;(100)) ;\n 2 for (int k = 0; k &lt; 100000; ++k) {\n@@ -194,20 +194,20 @@\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"Vector to Hashtable\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.vector_to_hashtable\"></a>Vector to Hashtable</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_VECTOR_TO_HASHTABLE</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect uses of \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect uses of\n   <code class=\"code\">vector</code> that can be substituted with <code class=\"code\">unordered_set</code>\n   to reduce execution time.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n   Linear search in a vector is very expensive, whereas searching in a hashtable\n   is very quick.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>factor up\n    to container size.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>Replace \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>Replace\n   <code class=\"code\">vector</code> with <code class=\"code\">unordered_set</code> at site S.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span><code class=\"code\">vector</code>\n   operations and access methods.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   For each dynamic instance of <code class=\"code\">vector</code>,\n   record call context of the constructor.  Issue the advice only if the\n-  only methods called on this <code class=\"code\">vector</code> are <code class=\"code\">push_back</code>, \n+  only methods called on this <code class=\"code\">vector</code> are <code class=\"code\">push_back</code>,\n   <code class=\"code\">insert</code> and <code class=\"code\">find</code>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   Cost(vector::push_back) + cost(vector::insert) + cost(find, vector) -\n@@ -225,18 +225,18 @@\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"Hashtable to Vector\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.hashtable_to_vector\"></a>Hashtable to Vector</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_HASHTABLE_TO_VECTOR</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect uses of \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect uses of\n   <code class=\"code\">unordered_set</code> that can be substituted with <code class=\"code\">vector</code>\n   to reduce execution time.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n   Hashtable iterator is slower than vector iterator.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>95%.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>Replace \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>Replace\n   <code class=\"code\">unordered_set</code> with <code class=\"code\">vector</code> at site S.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span><code class=\"code\">unordered_set</code>\n   operations and access methods.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   For each dynamic instance of <code class=\"code\">unordered_set</code>,\n   record call context of the constructor.  Issue the advice only if the\n-  number of <code class=\"code\">find</code>, <code class=\"code\">insert</code> and <code class=\"code\">[]</code> \n+  number of <code class=\"code\">find</code>, <code class=\"code\">insert</code> and <code class=\"code\">[]</code>\n   operations on this <code class=\"code\">unordered_set</code> are small relative to the\n   number of elements, and methods <code class=\"code\">begin</code> or <code class=\"code\">end</code>\n   are invoked (suggesting iteration).</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n@@ -254,11 +254,11 @@\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"Vector to List\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.vector_to_list\"></a>Vector to List</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_VECTOR_TO_LIST</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where\n   <code class=\"code\">vector</code> could be substituted with <code class=\"code\">list</code> for\n   better performance.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n-  Inserting in the middle of a vector is expensive compared to inserting in a \n+  Inserting in the middle of a vector is expensive compared to inserting in a\n   list.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>factor up to\n    container size.\n@@ -272,19 +272,19 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   (Sum(cost(vector::method)) - Sum(cost(list::method)), for\n   method in [push_back, insert, erase])\n-  + (Cost(iterate vector) - Cost(iterate list))</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  + (Cost(iterate vector) - Cost(iterate list))</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1  vector&lt;int&gt; v;\n 2  for (int i = 0; i &lt; 10000; ++i) {\n 3    v.insert(v.begin(), i);\n 4  }\n \n-foo.cc:1: advice: Changing \"vector\" to \"list\" will save about 5,000,000 \n+foo.cc:1: advice: Changing \"vector\" to \"list\" will save about 5,000,000\n operations.\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"List to Vector\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.list_to_vector\"></a>List to Vector</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_LIST_TO_VECTOR</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where\n   <code class=\"code\">list</code> could be substituted with <code class=\"code\">vector</code> for\n   better performance.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n@@ -297,7 +297,7 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n     (Sum(cost(vector::method)) - Sum(cost(list::method)), for\n   method in [push_back, insert, erase])\n-  + (Cost(iterate vector) - Cost(iterate list))</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  + (Cost(iterate vector) - Cost(iterate list))</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1  list&lt;int&gt; l;\n ...\n@@ -311,7 +311,7 @@\n </pre><p>\n </p></li></ul></div></div><div class=\"sect3\" title=\"List to Forward List (Slist)\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.list_to_slist\"></a>List to Forward List (Slist)</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_LIST_TO_SLIST</code>.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect cases where\n   <code class=\"code\">list</code> could be substituted with <code class=\"code\">forward_list</code> for\n   better performance.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n@@ -328,7 +328,7 @@\n   Issue the advice if there are no <code class=\"code\">backwards</code> traversals\n   or insertion before a given node.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n-  Always true.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  Always true.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1  list&lt;int&gt; l;\n ...\n@@ -344,7 +344,7 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span>  Detect cases where ordered\n   associative containers can be replaced with unordered ones.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n-  Insert and search are quicker in a hashtable than in \n+  Insert and search are quicker in a hashtable than in\n   a red-black tree.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>52%.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>\n   Replace set with unordered_set at site S.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span>\n@@ -374,17 +374,17 @@\n   performance based on actual input.  For instance, advise Radix Sort over\n   Quick Sort for a particular call context.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n-  See papers: \n+  See papers:\n   <a class=\"ulink\" href=\"http://portal.acm.org/citation.cfm?doid=1065944.1065981\" target=\"_top\">\n-  A framework for adaptive algorithm selection in STAPL</a> and \n+  A framework for adaptive algorithm selection in STAPL</a> and\n   <a class=\"ulink\" href=\"http://ieeexplore.ieee.org/search/wrapper.jsp?arnumber=4228227\" target=\"_top\">\n   Optimizing Sorting with Machine Learning Algorithms</a>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>60%.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span> Change sort algorithm\n   at site S from X Sort to Y Sort.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> <code class=\"code\">sort</code>\n   algorithm.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   Issue the advice if the cost model tells us that another sort algorithm\n-  would do better on this input.  Requires us to know what algorithm we \n+  would do better on this input.  Requires us to know what algorithm we\n   are using in our sort implementation in release mode.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   Runtime(algo) for algo in [radix, quick, merge, ...]</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n@@ -399,13 +399,13 @@\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>\n   Indirect references are hard to predict and are very expensive when they\n   miss in caches.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>25%.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span> Insert prefetch \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span> Insert prefetch\n   instruction.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> Vector iterator and\n   access operator [].\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   First, get cache line size and page size from system.\n   Then record iterator dereference sequences for which the value is a pointer.\n-  For each sequence within a container, issue a warning if successive pointer \n+  For each sequence within a container, issue a warning if successive pointer\n   addresses are not within cache lines and do not form a linear pattern\n   (otherwise they may be prefetched by hardware).\n   If they also step across page boundaries, make the warning stronger.\n@@ -417,11 +417,11 @@\n   </p><p>\n   This analysis is a little oversimplified.  A better cost model could be\n   created by understanding the capability of the hardware prefetcher.\n-  This model could be trained automatically by running a set of synthetic \n+  This model could be trained automatically by running a set of synthetic\n   cases.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   Total distance between pointer values of successive elements in vectors\n-  of pointers.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  of pointers.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1 int zero = 0;\n 2 vector&lt;int*&gt; v(10000000, &amp;zero);\n@@ -441,14 +441,14 @@\n   with respect to their actual traversal patterns.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span>Allocation can be tuned\n   to a specific traversal pattern, to result in better data locality.\n-  See paper: \n+  See paper:\n   <a class=\"ulink\" href=\"http://www.springerlink.com/content/8085744l00x72662/\" target=\"_top\">\n   Custom Memory Allocation for Free</a>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Sample runtime reduction:</em></span>30%.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Recommendation:</em></span>\n   High scatter score N for container built at site S.\n   Consider changing allocation sequence or choosing a structure conscious\n-  allocator.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> Methods of all \n+  allocator.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>To instrument:</em></span> Methods of all\n   containers using linked structures.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   First, get cache line size and page size from system.\n   Then record the number of successive elements that are on different line\n@@ -502,7 +502,7 @@\n   container member accesses.  Issue advice for elements referenced by\n   multiple threads.\n   See paper: <a class=\"ulink\" href=\"http://portal.acm.org/citation.cfm?id=207110.207148\" target=\"_top\">\n-  The LRPD test: speculative run-time parallelization of loops with \n+  The LRPD test: speculative run-time parallelization of loops with\n   privatization and reduction parallelization</a>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   Number of accesses to elements referenced from multiple threads\n@@ -512,7 +512,7 @@\n </p></li></ul></div></div><div class=\"sect3\" title=\"False Sharing\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.mthread.false_share\"></a>False Sharing</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"emphasis\"><em>Switch:</em></span>\n   <code class=\"code\">_GLIBCXX_PROFILE_FALSE_SHARING</code>.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Goal:</em></span> Detect elements in the\n-  same container which share a cache line, are written by at least one \n+  same container which share a cache line, are written by at least one\n   thread, and accessed by different threads.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Fundamentals:</em></span> Under these assumptions,\n   cache protocols require\n@@ -523,14 +523,14 @@\n   and iterators.\n   </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Analysis:</em></span>\n   First, get the cache line size.\n-  For each shared container, record all the associated iterator dereferences \n+  For each shared container, record all the associated iterator dereferences\n   and member access methods with the thread id.  Compare the address lists\n-  across threads to detect references in two different threads to the same \n-  cache line.  Issue a warning only if the ratio to total references is \n-  significant.  Do the same for iterator dereference values if they are \n+  across threads to detect references in two different threads to the same\n+  cache line.  Issue a warning only if the ratio to total references is\n+  significant.  Do the same for iterator dereference values if they are\n   pointers.</p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Cost model:</em></span>\n   Number of accesses to same cache line from different threads.\n-  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span> \n+  </p></li><li class=\"listitem\"><p><span class=\"emphasis\"><em>Example:</em></span>\n </p><pre class=\"programlisting\">\n 1     vector&lt;int&gt; v(2, 0);\n 2 #pragma omp parallel for shared(v, SIZE) schedule(static, 1)\n@@ -539,7 +539,7 @@\n 5     }\n \n OMP_NUM_THREADS=2 ./a.out\n-foo.cc:1: advice: Change container structure or padding to avoid false \n+foo.cc:1: advice: Change container structure or padding to avoid false\n sharing in multithreaded access at foo.cc:4.  Detected N shared cache lines.\n </pre><p>\n </p></li></ul></div></div></div><div class=\"sect2\" title=\"Statistics\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.profile_mode.analysis.statistics\"></a>Statistics</h3></div></div></div><p>\n@@ -555,4 +555,4 @@\n   This diagnostic will not issue any advice, but it will print statistics for\n   each container construction site.  The statistics will contain the cost\n   of each operation actually performed on the container.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s06.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_allocators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Developer Information\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a033.\u00a0Allocators</td></tr></table></div></body></html>\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s06.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"profile_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_allocators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Developer Information\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a020.\u00a0Allocators</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32s07.html"}, {"sha": "185d3ad8df4a97a72368a850143d4e8e542bfc10", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch21s02.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>HP/SGI</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a034.\u00a0Containers\" /><link rel=\"prev\" href=\"ext_containers.html\" title=\"Chapter\u00a034.\u00a0Containers\" /><link rel=\"next\" href=\"bk01pt12ch34s03.html\" title=\"Deprecated HP/SGI\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">HP/SGI</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a034.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch34s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"HP/SGI\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.sgi\"></a>HP/SGI</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>HP/SGI</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a021.\u00a0Containers\" /><link rel=\"prev\" href=\"ext_containers.html\" title=\"Chapter\u00a021.\u00a0Containers\" /><link rel=\"next\" href=\"bk01pt03ch21s03.html\" title=\"Deprecated HP/SGI\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">HP/SGI</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch21s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"HP/SGI\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.sgi\"></a>HP/SGI</h2></div></div></div><p>\n     </p><p>A few extensions and nods to backwards-compatibility have been made with\n    containers.  Those dealing with older SGI-style allocators are dealt with\n    elsewhere.  The remaining ones all deal with bits:\n@@ -26,7 +26,7 @@\n    </pre><p>Note that these may in fact be removed in the future, although we have\n    no present plans to do so (and there doesn't seem to be any immediate\n    reason to).\n-</p><p>The semantics of member function <code class=\"code\">operator[]</code> are not specified \n+</p><p>The semantics of member function <code class=\"code\">operator[]</code> are not specified\n    in the C++ standard.  A long-standing defect report calls for sensible\n    obvious semantics, which are already implemented here:  <code class=\"code\">op[]</code>\n    on a const bitset returns a bool, and for a non-const bitset returns a\n@@ -40,4 +40,4 @@\n </p><pre class=\"programlisting\">\n    size_t _Find_first() const;\n    size_t _Find_next (size_t prev) const;</pre><p>The same caveat given for the _Unchecked_* functions applies here also.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch34s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a034.\u00a0Containers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Deprecated HP/SGI</td></tr></table></div></body></html>\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch21s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a021.\u00a0Containers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Deprecated HP/SGI</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch34s02.html"}, {"sha": "7486167b08968561f88045e4818ecd0e9119e763", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch21s03.html", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch21s03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Deprecated HP/SGI</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a034.\u00a0Containers\" /><link rel=\"prev\" href=\"bk01pt12ch34s02.html\" title=\"HP/SGI\" /><link rel=\"next\" href=\"ext_utilities.html\" title=\"Chapter\u00a035.\u00a0Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Deprecated HP/SGI</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a034.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Deprecated HP/SGI\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.deprecated_sgi\"></a>Deprecated HP/SGI</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Deprecated HP/SGI</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a021.\u00a0Containers\" /><link rel=\"prev\" href=\"bk01pt03ch21s02.html\" title=\"HP/SGI\" /><link rel=\"next\" href=\"ext_utilities.html\" title=\"Chapter\u00a022.\u00a0Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Deprecated HP/SGI</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch21s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Deprecated HP/SGI\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.deprecated_sgi\"></a>Deprecated HP/SGI</h2></div></div></div><p>\n      The SGI hashing classes <code class=\"classname\">hash_set</code> and\n      <code class=\"classname\">hash_set</code> have been deprecated by the\n      unordered_set, unordered_multiset, unordered_map,\n@@ -47,4 +47,4 @@\n        possibility of pathological cases, you'll probably get better\n        performance from hash_map.\n      </em></span>\n-     </p></blockquote></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">HP/SGI\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a035.\u00a0Utilities</td></tr></table></div></body></html>\n+     </p></blockquote></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch21s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">HP/SGI\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a022.\u00a0Utilities</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch34s03.html"}, {"sha": "ec4a92763c4c9f9d17d63344bb217724160868bf", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch28s02.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s02.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a041.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a041.\u00a0Concurrency\" /><link rel=\"next\" href=\"bk01pt12ch41s03.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a041.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch41s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"sect2\" title=\"Using Builtin Atomic Functions\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Builtin Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a028.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a028.\u00a0Concurrency\" /><link rel=\"next\" href=\"bk01pt03ch28s03.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a028.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch28s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"sect2\" title=\"Using Builtin Atomic Functions\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Builtin Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n implemented via compiler intrinsics (if the underlying host is\n capable) or by library fallbacks.</p><p>Compiler intrinsics (builtins) are always preferred.  However, as\n the compiler builtins for atomics are not universally implemented,\n@@ -12,7 +12,7 @@\n conditionally, via the <code class=\"code\">-march</code> command line flag. This makes\n usage vary depending on the target hardware and the flags used during\n compile.\n-</p><p> \n+</p><p>\n If builtins are possible for bool-sized integral types,\n <code class=\"code\">_GLIBCXX_ATOMIC_BUILTINS_1</code> will be defined.\n If builtins are possible for int-sized integral types,\n@@ -38,4 +38,4 @@\n functions, and usage found in the usual &lt;pthread.h&gt; file,\n including <code class=\"code\">pthread_t</code>, <code class=\"code\">pthread_once_t</code>, <code class=\"code\">pthread_create</code>,\n etc.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch41s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a041.\u00a0Concurrency\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Use</td></tr></table></div></body></html>\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch28s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a028.\u00a0Concurrency\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Use</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch41s02.html"}, {"sha": "e5835a70b7616d612de67afdf90fff70fe25654c", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch28s03.html", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch28s03.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Use</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a041.\u00a0Concurrency\" /><link rel=\"prev\" href=\"bk01pt12ch41s02.html\" title=\"Implementation\" /><link rel=\"next\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0 Contributing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Use</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch41s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a041.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_contributing.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Use\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.use\"></a>Use</h2></div></div></div><p>Typical usage of the last two constructs is demonstrated as follows:\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Use</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a028.\u00a0Concurrency\" /><link rel=\"prev\" href=\"bk01pt03ch28s02.html\" title=\"Implementation\" /><link rel=\"next\" href=\"bk01pt04.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Use</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch28s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a028.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Use\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.use\"></a>Use</h2></div></div></div><p>Typical usage of the last two constructs is demonstrated as follows:\n </p><pre class=\"programlisting\">\n #include &lt;ext/concurrence.h&gt;\n \n@@ -31,7 +31,6 @@\n concurrence-related errors. These classes\n are: <code class=\"code\">__concurrence_lock_error</code>, <code class=\"code\">__concurrence_unlock_error</code>, <code class=\"code\">__concurrence_wait_error</code>,\n and <code class=\"code\">__concurrence_broadcast_error</code>.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch41s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_contributing.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0A.\u00a0\n-  Contributing\n-  \n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch28s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0IV.\u00a0\n+  Appendices\n </td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12ch41s03.html"}, {"sha": "be1c0f16ae2d92759e1d64a3086cb7ffa17cb3bf", "filename": "libstdc++-v3/doc/html/manual/bk01pt03pr01.html", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03pr01.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03pr01.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03pr01.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,26 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"next\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a029.\u00a0Compile Time Checks\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"extensions.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"next\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"extensions.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_compile_checks.html\">Next</a></td></tr></table><hr /></div><div class=\"preface\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"id684983\"></a></h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_compile_checks.html\">Next</a></td></tr></table><hr /></div><div class=\"preface\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"id433082\"></a></h2></div></div></div><p>\n   Here we will make an attempt at describing the non-Standard extensions to\n   the library.  Some of these are from SGI's STL, some of these are GNU's,\n   and some just seemed to appear on the doorstep.\n </p><p><span class=\"emphasis\"><em>Before</em></span> you leap in and use any of these\n extensions, be aware of two things:\n </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n-     Non-Standard means exactly that.  \n+     Non-Standard means exactly that.\n      </p><p>\n        The behavior, and the very\n        existence, of these extensions may change with little or no\n        warning.  (Ideally, the really good ones will appear in the next\n        revision of C++.)  Also, other platforms, other compilers, other\n        versions of g++ or libstdc++ may not recognize these names, or\n-       treat them differently, or... \n+       treat them differently, or...\n      </p></li><li class=\"listitem\"><p>\n-       You should know how to access these headers properly. \n-     </p></li></ol></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"extensions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_compile_checks.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0XII.\u00a0\n+       You should know how to access these headers properly.\n+     </p></li></ol></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"extensions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_compile_checks.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0III.\u00a0\n   Extensions\n   \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a029.\u00a0Compile Time Checks</td></tr></table></div></body></html>\n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a016.\u00a0Compile Time Checks</td></tr></table></div></body></html>", "previous_filename": "libstdc++-v3/doc/html/manual/bk01pt12pr03.html"}, {"sha": "66713b1213dcc8f3b9a33e87384f50c1ffcb0d95", "filename": "libstdc++-v3/doc/html/manual/bk01pt04.html", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0IV.\u00a0 Appendices</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt03ch28s03.html\" title=\"Use\" /><link rel=\"next\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0 Contributing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0IV.\u00a0\n+  Appendices\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch28s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_contributing.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0IV.\u00a0 Appendices\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"appendix\"></a>Part\u00a0IV.\u00a0\n+  Appendices\n+</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"appendix\"><a href=\"appendix_contributing.html\">A. \n+  Contributing\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"appendix_contributing.html#contrib.list\">Contributor Checklist</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.reading\">Reading</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.copyright\">Assignment</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.getting\">Getting Sources</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_contributing.html#list.patches\">Submitting Patches</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_organization.html\">Directory Layout and Source Conventions</a></span></dt><dt><span class=\"sect1\"><a href=\"source_code_style.html\">Coding Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.bad_identifiers\">Bad Identifiers</a></span></dt><dt><span class=\"sect2\"><a href=\"source_code_style.html#coding_style.example\">By Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"documentation_style.html\">Documentation Style</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.doxygen\">Doxygen</a></span></dt><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.docbook\">Docbook</a></span></dt><dt><span class=\"sect2\"><a href=\"documentation_style.html#doc_style.combines\">Combines</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"source_design_notes.html\">Design Notes</a></span></dt></dl></dd><dt><span class=\"appendix\"><a href=\"appendix_porting.html\">B. \n+  Porting and Maintenance\n+  \n+</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"appendix_porting.html#appendix.porting.build_hacking\">Configure and Build Hacking</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.map\">Overview: What Comes from Where</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.scripts\">Storing Information in non-AC files (like configure.host)</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.conventions\">Coding and Commenting Conventions</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.acinclude\">The acinclude.m4 layout</a></span></dt><dt><span class=\"sect2\"><a href=\"appendix_porting.html#build_hacking.enable\"><code class=\"constant\">GLIBCXX_ENABLE</code>, the <code class=\"literal\">--enable</code> maker</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"internals.html\">Porting to New Hardware or Operating Systems</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"internals.html#internals.os\">Operating System</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.cpu\">CPU</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.char_types\">Character Types</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.numeric_limits\">Numeric Limits</a></span></dt><dt><span class=\"sect2\"><a href=\"internals.html#internals.libtool\">Libtool</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"test.html\">Test</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"test.html#test.organization\">Organization</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.run\">Running the Testsuite</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.new_tests\">Writing a new test case</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.harness\">Test Harness and Utilities</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.special\">Special Topics</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dt><span class=\"sect2\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"sect2\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dt><span class=\"sect2\"><a href=\"backwards.html#backwards.third\">Third</a></span></dt></dl></dd></dl></dd><dt><span class=\"appendix\"><a href=\"appendix_free.html\">C. \n+  Free Software Needs Free Documentation\n+  \n+</a></span></dt><dt><span class=\"appendix\"><a href=\"appendix_gpl.html\">D. \n+    <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n+  </a></span></dt><dt><span class=\"appendix\"><a href=\"appendix_gfdl.html\">E. GNU Free Documentation License</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch28s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_contributing.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Use\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0A.\u00a0\n+  Contributing\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "e86d7fe1779bb8bbf3e3cb5d7af1fe1de980e9e7", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13.html", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,90 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a013.\u00a0String Classes</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"strings.html\" title=\"Part\u00a0V.\u00a0 Strings\" /><link rel=\"prev\" href=\"strings.html\" title=\"Part\u00a0V.\u00a0 Strings\" /><link rel=\"next\" href=\"bk01pt05ch13s02.html\" title=\"Case Sensitivity\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"strings.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0V.\u00a0\n-  Strings\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a013.\u00a0String Classes\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.strings.string\"></a>Chapter\u00a013.\u00a0String Classes</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt05ch13.html#strings.string.simple\">Simple Transformations</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt05ch13s02.html\">Case Sensitivity</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt05ch13s03.html\">Arbitrary Character Types</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt05ch13s04.html\">Tokenizing</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt05ch13s05.html\">Shrink to Fit</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt05ch13s06.html\">CString (MFC)</a></span></dt></dl></div><div class=\"sect1\" title=\"Simple Transformations\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.simple\"></a>Simple Transformations</h2></div></div></div><p>\n-      Here are Standard, simple, and portable ways to perform common\n-      transformations on a <code class=\"code\">string</code> instance, such as\n-      \"convert to all upper case.\" The word transformations\n-      is especially apt, because the standard template function\n-      <code class=\"code\">transform&lt;&gt;</code> is used.\n-   </p><p>\n-     This code will go through some iterations.  Here's a simple\n-     version:\n-   </p><pre class=\"programlisting\">\n-   #include &lt;string&gt;\n-   #include &lt;algorithm&gt;\n-   #include &lt;cctype&gt;      // old &lt;ctype.h&gt;\n-\n-   struct ToLower\n-   {\n-     char operator() (char c) const  { return std::tolower(c); }\n-   };\n-\n-   struct ToUpper\n-   {\n-     char operator() (char c) const  { return std::toupper(c); }\n-   };\n-\n-   int main()\n-   {\n-     std::string  s (\"Some Kind Of Initial Input Goes Here\");\n-\n-     // Change everything into upper case\n-     std::transform (s.begin(), s.end(), s.begin(), ToUpper());\n-\n-     // Change everything into lower case\n-     std::transform (s.begin(), s.end(), s.begin(), ToLower());\n-\n-     // Change everything back into upper case, but store the\n-     // result in a different string\n-     std::string  capital_s;\n-     capital_s.resize(s.size());\n-     std::transform (s.begin(), s.end(), capital_s.begin(), ToUpper());\n-   } \n-   </pre><p>\n-     <span class=\"emphasis\"><em>Note</em></span> that these calls all\n-      involve the global C locale through the use of the C functions\n-      <code class=\"code\">toupper/tolower</code>.  This is absolutely guaranteed to work --\n-      but <span class=\"emphasis\"><em>only</em></span> if the string contains <span class=\"emphasis\"><em>only</em></span> characters\n-      from the basic source character set, and there are <span class=\"emphasis\"><em>only</em></span>\n-      96 of those.  Which means that not even all English text can be\n-      represented (certain British spellings, proper names, and so forth).\n-      So, if all your input forevermore consists of only those 96\n-      characters (hahahahahaha), then you're done.\n-   </p><p><span class=\"emphasis\"><em>Note</em></span> that the\n-      <code class=\"code\">ToUpper</code> and <code class=\"code\">ToLower</code> function objects\n-      are needed because <code class=\"code\">toupper</code> and <code class=\"code\">tolower</code>\n-      are overloaded names (declared in <code class=\"code\">&lt;cctype&gt;</code> and\n-      <code class=\"code\">&lt;locale&gt;</code>) so the template-arguments for\n-      <code class=\"code\">transform&lt;&gt;</code> cannot be deduced, as explained in\n-      <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-11/msg00180.html\" target=\"_top\">this\n-      message</a>.  \n-      \n-      At minimum, you can write short wrappers like\n-   </p><pre class=\"programlisting\">\n-   char toLower (char c)\n-   {\n-      return std::tolower(c);\n-   } </pre><p>(Thanks to James Kanze for assistance and suggestions on all of this.)\n-   </p><p>Another common operation is trimming off excess whitespace.  Much\n-      like transformations, this task is trivial with the use of string's\n-      <code class=\"code\">find</code> family.  These examples are broken into multiple\n-      statements for readability:\n-   </p><pre class=\"programlisting\">\n-   std::string  str (\" \\t blah blah blah    \\n \");\n-\n-   // trim leading whitespace\n-   string::size_type  notwhite = str.find_first_not_of(\" \\t\\n\");\n-   str.erase(0,notwhite);\n-\n-   // trim trailing whitespace\n-   notwhite = str.find_last_not_of(\" \\t\\n\"); \n-   str.erase(notwhite+1); </pre><p>Obviously, the calls to <code class=\"code\">find</code> could be inserted directly\n-      into the calls to <code class=\"code\">erase</code>, in case your compiler does not\n-      optimize named temporaries out of existence.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"strings.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"strings.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0V.\u00a0\n-  Strings\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Case Sensitivity</td></tr></table></div></body></html>"}, {"sha": "2cd970a12bfafe664c3e726cbb1695848b099c6a", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13s02.html", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Case Sensitivity</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"prev\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"next\" href=\"bk01pt05ch13s03.html\" title=\"Arbitrary Character Types\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Case Sensitivity</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Case Sensitivity\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.case\"></a>Case Sensitivity</h2></div></div></div><p>\n-    </p><p>The well-known-and-if-it-isn't-well-known-it-ought-to-be\n-      <a class=\"ulink\" href=\"http://www.gotw.ca/gotw/\" target=\"_top\">Guru of the Week</a>\n-      discussions held on Usenet covered this topic in January of 1998.\n-      Briefly, the challenge was, <span class=\"quote\">\u201c<span class=\"quote\">write a 'ci_string' class which\n-      is identical to the standard 'string' class, but is\n-      case-insensitive in the same way as the (common but nonstandard)\n-      C function stricmp()</span>\u201d</span>.\n-   </p><pre class=\"programlisting\">\n-   ci_string s( \"AbCdE\" );\n-\n-   // case insensitive\n-   assert( s == \"abcde\" );\n-   assert( s == \"ABCDE\" );\n-\n-   // still case-preserving, of course\n-   assert( strcmp( s.c_str(), \"AbCdE\" ) == 0 );\n-   assert( strcmp( s.c_str(), \"abcde\" ) != 0 ); </pre><p>The solution is surprisingly easy.  The original answer was\n-   posted on Usenet, and a revised version appears in Herb Sutter's\n-   book <span class=\"emphasis\"><em>Exceptional C++</em></span> and on his website as <a class=\"ulink\" href=\"http://www.gotw.ca/gotw/029.htm\" target=\"_top\">GotW 29</a>.\n-   </p><p>See?  Told you it was easy!</p><p>\n-     <span class=\"emphasis\"><em>Added June 2000:</em></span> The May 2000 issue of C++\n-     Report contains a fascinating <a class=\"ulink\" href=\"http://lafstern.org/matt/col2_new.pdf\" target=\"_top\"> article</a> by\n-     Matt Austern (yes, <span class=\"emphasis\"><em>the</em></span> Matt Austern) on why\n-     case-insensitive comparisons are not as easy as they seem, and\n-     why creating a class is the <span class=\"emphasis\"><em>wrong</em></span> way to go\n-     about it in production code.  (The GotW answer mentions one of\n-     the principle difficulties; his article mentions more.)\n-   </p><p>Basically, this is \"easy\" only if you ignore some things,\n-      things which may be too important to your program to ignore.  (I chose\n-      to ignore them when originally writing this entry, and am surprised\n-      that nobody ever called me on it...)  The GotW question and answer\n-      remain useful instructional tools, however.\n-   </p><p><span class=\"emphasis\"><em>Added September 2000:</em></span>  James Kanze provided a link to a\n-      <a class=\"ulink\" href=\"http://www.unicode.org/reports/tr21/tr21-5.html\" target=\"_top\">Unicode\n-      Technical Report discussing case handling</a>, which provides some\n-      very good information.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt05ch13.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a013.\u00a0String Classes\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Arbitrary Character Types</td></tr></table></div></body></html>"}, {"sha": "aa2afea53a6602aedc1ea6c852d22f83cb8056cb", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13s03.html", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s03.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,57 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Arbitrary Character Types</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"prev\" href=\"bk01pt05ch13s02.html\" title=\"Case Sensitivity\" /><link rel=\"next\" href=\"bk01pt05ch13s04.html\" title=\"Tokenizing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Arbitrary Character Types</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Arbitrary Character Types\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.character_types\"></a>Arbitrary Character Types</h2></div></div></div><p>\n-    </p><p>The <code class=\"code\">std::basic_string</code> is tantalizingly general, in that\n-      it is parameterized on the type of the characters which it holds.\n-      In theory, you could whip up a Unicode character class and instantiate\n-      <code class=\"code\">std::basic_string&lt;my_unicode_char&gt;</code>, or assuming\n-      that integers are wider than characters on your platform, maybe just\n-      declare variables of type <code class=\"code\">std::basic_string&lt;int&gt;</code>.\n-   </p><p>That's the theory.  Remember however that basic_string has additional\n-      type parameters, which take default arguments based on the character\n-      type (called <code class=\"code\">CharT</code> here):\n-   </p><pre class=\"programlisting\">\n-      template &lt;typename CharT,\n-                typename Traits = char_traits&lt;CharT&gt;,\n-                typename Alloc = allocator&lt;CharT&gt; &gt;\n-      class basic_string { .... };</pre><p>Now, <code class=\"code\">allocator&lt;CharT&gt;</code> will probably Do The Right\n-      Thing by default, unless you need to implement your own allocator\n-      for your characters.\n-   </p><p>But <code class=\"code\">char_traits</code> takes more work.  The char_traits\n-      template is <span class=\"emphasis\"><em>declared</em></span> but not <span class=\"emphasis\"><em>defined</em></span>.\n-      That means there is only\n-   </p><pre class=\"programlisting\">\n-      template &lt;typename CharT&gt;\n-        struct char_traits\n-        {\n-            static void foo (type1 x, type2 y);\n-            ...\n-        };</pre><p>and functions such as char_traits&lt;CharT&gt;::foo() are not\n-      actually defined anywhere for the general case.  The C++ standard\n-      permits this, because writing such a definition to fit all possible\n-      CharT's cannot be done.\n-   </p><p>The C++ standard also requires that char_traits be specialized for\n-      instantiations of <code class=\"code\">char</code> and <code class=\"code\">wchar_t</code>, and it\n-      is these template specializations that permit entities like\n-      <code class=\"code\">basic_string&lt;char,char_traits&lt;char&gt;&gt;</code> to work.\n-   </p><p>If you want to use character types other than char and wchar_t,\n-      such as <code class=\"code\">unsigned char</code> and <code class=\"code\">int</code>, you will\n-      need suitable specializations for them.  For a time, in earlier\n-      versions of GCC, there was a mostly-correct implementation that\n-      let programmers be lazy but it broke under many situations, so it\n-      was removed.  GCC 3.4 introduced a new implementation that mostly\n-      works and can be specialized even for <code class=\"code\">int</code> and other\n-      built-in types.\n-   </p><p>If you want to use your own special character class, then you have\n-      <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-08/msg00163.html\" target=\"_top\">a lot\n-      of work to do</a>, especially if you with to use i18n features\n-      (facets require traits information but don't have a traits argument).\n-   </p><p>Another example of how to specialize char_traits was given <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-08/msg00260.html\" target=\"_top\">on the\n-      mailing list</a> and at a later date was put into the file <code class=\"code\">\n-      include/ext/pod_char_traits.h</code>.  We agree\n-      that the way it's used with basic_string (scroll down to main())\n-      doesn't look nice, but that's because <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-08/msg00236.html\" target=\"_top\">the\n-      nice-looking first attempt</a> turned out to <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-08/msg00242.html\" target=\"_top\">not\n-      be conforming C++</a>, due to the rule that CharT must be a POD.\n-      (See how tricky this is?)\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt05ch13.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Case Sensitivity\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Tokenizing</td></tr></table></div></body></html>"}, {"sha": "12d1ee7fb5c38c8cc45e9e7c437e834c898b78b6", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13s04.html", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s04.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,79 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Tokenizing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"prev\" href=\"bk01pt05ch13s03.html\" title=\"Arbitrary Character Types\" /><link rel=\"next\" href=\"bk01pt05ch13s05.html\" title=\"Shrink to Fit\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Tokenizing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Tokenizing\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.token\"></a>Tokenizing</h2></div></div></div><p>\n-    </p><p>The Standard C (and C++) function <code class=\"code\">strtok()</code> leaves a lot to\n-      be desired in terms of user-friendliness.  It's unintuitive, it\n-      destroys the character string on which it operates, and it requires\n-      you to handle all the memory problems.  But it does let the client\n-      code decide what to use to break the string into pieces; it allows\n-      you to choose the \"whitespace,\" so to speak.\n-   </p><p>A C++ implementation lets us keep the good things and fix those\n-      annoyances.  The implementation here is more intuitive (you only\n-      call it once, not in a loop with varying argument), it does not\n-      affect the original string at all, and all the memory allocation\n-      is handled for you.\n-   </p><p>It's called stringtok, and it's a template function. Sources are\n-   as below, in a less-portable form than it could be, to keep this\n-   example simple (for example, see the comments on what kind of\n-   string it will accept).\n-   </p><pre class=\"programlisting\">\n-#include &lt;string&gt;\n-template &lt;typename Container&gt;\n-void\n-stringtok(Container &amp;container, string const &amp;in,\n-          const char * const delimiters = \" \\t\\n\")\n-{\n-    const string::size_type len = in.length();\n-          string::size_type i = 0;\n-\n-    while (i &lt; len)\n-    {\n-        // Eat leading whitespace\n-        i = in.find_first_not_of(delimiters, i);\n-        if (i == string::npos)\n-\t  return;   // Nothing left but white space\n-\n-        // Find the end of the token\n-        string::size_type j = in.find_first_of(delimiters, i);\n-\n-        // Push token\n-        if (j == string::npos) \n-\t{\n-\t  container.push_back(in.substr(i));\n-\t  return;\n-        } \n-\telse\n-\t  container.push_back(in.substr(i, j-i));\n-\n-        // Set up for next loop\n-        i = j + 1;\n-    }\n-}\n-</pre><p>\n-     The author uses a more general (but less readable) form of it for\n-     parsing command strings and the like.  If you compiled and ran this\n-     code using it:\n-   </p><pre class=\"programlisting\">\n-   std::list&lt;string&gt;  ls;\n-   stringtok (ls, \" this  \\t is\\t\\n  a test  \");\n-   for (std::list&lt;string&gt;const_iterator i = ls.begin();\n-        i != ls.end(); ++i)\n-   {\n-       std::cerr &lt;&lt; ':' &lt;&lt; (*i) &lt;&lt; \":\\n\";\n-   } </pre><p>You would see this as output:\n-   </p><pre class=\"programlisting\">\n-   :this:\n-   :is:\n-   :a:\n-   :test: </pre><p>with all the whitespace removed.  The original <code class=\"code\">s</code> is still\n-      available for use, <code class=\"code\">ls</code> will clean up after itself, and\n-      <code class=\"code\">ls.size()</code> will return how many tokens there were.\n-   </p><p>As always, there is a price paid here, in that stringtok is not\n-      as fast as strtok.  The other benefits usually outweigh that, however.\n-   </p><p><span class=\"emphasis\"><em>Added February 2001:</em></span>  Mark Wilden pointed out that the\n-      standard <code class=\"code\">std::getline()</code> function can be used with standard\n-      <code class=\"code\">istringstreams</code> to perform\n-      tokenizing as well.  Build an istringstream from the input text,\n-      and then use std::getline with varying delimiters (the three-argument\n-      signature) to extract tokens into a string.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt05ch13.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Arbitrary Character Types\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Shrink to Fit</td></tr></table></div></body></html>"}, {"sha": "b6a5da10d20e3093c58f239cad52631509a8d419", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13s05.html", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s05.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Shrink to Fit</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"prev\" href=\"bk01pt05ch13s04.html\" title=\"Tokenizing\" /><link rel=\"next\" href=\"bk01pt05ch13s06.html\" title=\"CString (MFC)\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Shrink to Fit</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s06.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Shrink to Fit\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.shrink\"></a>Shrink to Fit</h2></div></div></div><p>\n-    </p><p>From GCC 3.4 calling <code class=\"code\">s.reserve(res)</code> on a\n-      <code class=\"code\">string s</code> with <code class=\"code\">res &lt; s.capacity()</code> will\n-      reduce the string's capacity to <code class=\"code\">std::max(s.size(), res)</code>.\n-   </p><p>This behaviour is suggested, but not required by the standard. Prior\n-      to GCC 3.4 the following alternative can be used instead\n-   </p><pre class=\"programlisting\">\n-      std::string(str.data(), str.size()).swap(str);\n-   </pre><p>This is similar to the idiom for reducing\n-      a <code class=\"code\">vector</code>'s memory usage\n-      (see <a class=\"link\" href=\"../faq.html#faq.size_equals_capacity\" title=\"7.8.\">this FAQ\n-      entry</a>) but the regular copy constructor cannot be used\n-      because libstdc++'s <code class=\"code\">string</code> is Copy-On-Write.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt05ch13.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt05ch13s06.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Tokenizing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0CString (MFC)</td></tr></table></div></body></html>"}, {"sha": "29ad197e1ddb2403e984689374eeb78ce8f9c706", "filename": "libstdc++-v3/doc/html/manual/bk01pt05ch13s06.html", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s06.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s06.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt05ch13s06.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,94 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>CString (MFC)</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt05ch13.html\" title=\"Chapter\u00a013.\u00a0String Classes\" /><link rel=\"prev\" href=\"bk01pt05ch13s05.html\" title=\"Shrink to Fit\" /><link rel=\"next\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0 Localization\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">CString (MFC)</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0String Classes</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"localization.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"CString (MFC)\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"strings.string.Cstring\"></a>CString (MFC)</h2></div></div></div><p>\n-    </p><p>A common lament seen in various newsgroups deals with the Standard\n-      string class as opposed to the Microsoft Foundation Class called\n-      CString.  Often programmers realize that a standard portable\n-      answer is better than a proprietary nonportable one, but in porting\n-      their application from a Win32 platform, they discover that they\n-      are relying on special functions offered by the CString class.\n-   </p><p>Things are not as bad as they seem.  In\n-      <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/gcc/1999-04n/msg00236.html\" target=\"_top\">this\n-      message</a>, Joe Buck points out a few very important things:\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>The Standard <code class=\"code\">string</code> supports all the operations\n-             that CString does, with three exceptions.\n-         </p></li><li class=\"listitem\"><p>Two of those exceptions (whitespace trimming and case \n-             conversion) are trivial to implement.  In fact, we do so\n-             on this page.\n-         </p></li><li class=\"listitem\"><p>The third is <code class=\"code\">CString::Format</code>, which allows formatting\n-             in the style of <code class=\"code\">sprintf</code>.  This deserves some mention:\n-         </p></li></ul></div><p>\n-      The old libg++ library had a function called form(), which did much\n-      the same thing.  But for a Standard solution, you should use the\n-      stringstream classes.  These are the bridge between the iostream\n-      hierarchy and the string class, and they operate with regular\n-      streams seamlessly because they inherit from the iostream\n-      hierarchy.  An quick example:\n-   </p><pre class=\"programlisting\">\n-   #include &lt;iostream&gt;\n-   #include &lt;string&gt;\n-   #include &lt;sstream&gt;\n-\n-   string f (string&amp; incoming)     // incoming is \"foo  N\"\n-   {\n-       istringstream   incoming_stream(incoming);\n-       string          the_word;\n-       int             the_number;\n-\n-       incoming_stream &gt;&gt; the_word        // extract \"foo\"\n-                       &gt;&gt; the_number;     // extract N\n-\n-       ostringstream   output_stream;\n-       output_stream &lt;&lt; \"The word was \" &lt;&lt; the_word\n-                     &lt;&lt; \" and 3*N was \" &lt;&lt; (3*the_number);\n-\n-       return output_stream.str();\n-   } </pre><p>A serious problem with CString is a design bug in its memory\n-      allocation.  Specifically, quoting from that same message:\n-   </p><pre class=\"programlisting\">\n-   CString suffers from a common programming error that results in\n-   poor performance.  Consider the following code:\n-   \n-   CString n_copies_of (const CString&amp; foo, unsigned n)\n-   {\n-           CString tmp;\n-           for (unsigned i = 0; i &lt; n; i++)\n-                   tmp += foo;\n-           return tmp;\n-   }\n-   \n-   This function is O(n^2), not O(n).  The reason is that each +=\n-   causes a reallocation and copy of the existing string.  Microsoft\n-   applications are full of this kind of thing (quadratic performance\n-   on tasks that can be done in linear time) -- on the other hand,\n-   we should be thankful, as it's created such a big market for high-end\n-   ix86 hardware. :-)\n-   \n-   If you replace CString with string in the above function, the\n-   performance is O(n).\n-   </pre><p>Joe Buck also pointed out some other things to keep in mind when\n-      comparing CString and the Standard string class:\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>CString permits access to its internal representation; coders\n-             who exploited that may have problems moving to <code class=\"code\">string</code>.\n-         </p></li><li class=\"listitem\"><p>Microsoft ships the source to CString (in the files\n-             MFC\\SRC\\Str{core,ex}.cpp), so you could fix the allocation\n-             bug and rebuild your MFC libraries.\n-             <span class=\"emphasis\"><em><span class=\"emphasis\"><em>Note:</em></span> It looks like the CString shipped\n-             with VC++6.0 has fixed this, although it may in fact have been\n-             one of the VC++ SPs that did it.</em></span>\n-         </p></li><li class=\"listitem\"><p><code class=\"code\">string</code> operations like this have O(n) complexity\n-             <span class=\"emphasis\"><em>if the implementors do it correctly</em></span>.  The libstdc++\n-             implementors did it correctly.  Other vendors might not.\n-         </p></li><li class=\"listitem\"><p>While parts of the SGI STL are used in libstdc++, their\n-             string class is not.  The SGI <code class=\"code\">string</code> is essentially\n-             <code class=\"code\">vector&lt;char&gt;</code> and does not do any reference\n-             counting like libstdc++'s does.  (It is O(n), though.)\n-             So if you're thinking about SGI's string or rope classes,\n-             you're now looking at four possibilities:  CString, the\n-             libstdc++ string, the SGI string, and the SGI rope, and this\n-             is all before any allocator or traits customizations!  (More\n-             choices than you can shake a stick at -- want fries with that?)\n-         </p></li></ul></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt05ch13.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"localization.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Shrink to Fit\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0VI.\u00a0\n-  Localization\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "6b6bb02dbdeeef47538bd47ef09f01c8f5293055", "filename": "libstdc++-v3/doc/html/manual/bk01pt08ch19.html", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,39 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a019.\u00a0Predefined</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"iterators.html\" title=\"Part\u00a0VIII.\u00a0 Iterators\" /><link rel=\"prev\" href=\"iterators.html\" title=\"Part\u00a0VIII.\u00a0 Iterators\" /><link rel=\"next\" href=\"bk01pt08ch19s02.html\" title=\"One Past the End\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a019.\u00a0Predefined</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VIII.\u00a0\n-  Iterators\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt08ch19s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a019.\u00a0Predefined\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.iterators.predefined\"></a>Chapter\u00a019.\u00a0Predefined</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt08ch19.html#iterators.predefined.vs_pointers\">Iterators vs. Pointers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt08ch19s02.html\">One Past the End</a></span></dt></dl></div><div class=\"sect1\" title=\"Iterators vs. Pointers\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"iterators.predefined.vs_pointers\"></a>Iterators vs. Pointers</h2></div></div></div><p>\n-     The following\n-FAQ <a class=\"link\" href=\"../faq.html#faq.iterator_as_pod\" title=\"7.1.\">entry</a> points out that\n-iterators are not implemented as pointers.  They are a generalization\n-of pointers, but they are implemented in libstdc++ as separate\n-classes.\n-   </p><p>Keeping that simple fact in mind as you design your code will\n-      prevent a whole lot of difficult-to-understand bugs.\n-   </p><p>You can think of it the other way 'round, even.  Since iterators\n-      are a generalization, that means that <span class=\"emphasis\"><em>pointers</em></span> are\n-      <span class=\"emphasis\"><em>iterators</em></span>, and that pointers can be used whenever an\n-      iterator would be.  All those functions in the Algorithms chapter\n-      of the Standard will work just as well on plain arrays and their\n-      pointers.\n-   </p><p>That doesn't mean that when you pass in a pointer, it gets wrapped\n-      into some special delegating iterator-to-pointer class with a layer\n-      of overhead.  (If you think that's the case anywhere, you don't\n-      understand templates to begin with...)  Oh, no; if you pass\n-      in a pointer, then the compiler will instantiate that template\n-      using T* as a type, and good old high-speed pointer arithmetic as\n-      its operations, so the resulting code will be doing exactly the same\n-      things as it would be doing if you had hand-coded it yourself (for\n-      the 273rd time).\n-   </p><p>How much overhead <span class=\"emphasis\"><em>is</em></span> there when using an iterator class?\n-      Very little.  Most of the layering classes contain nothing but\n-      typedefs, and typedefs are \"meta-information\" that simply\n-      tell the compiler some nicknames; they don't create code.  That\n-      information gets passed down through inheritance, so while the\n-      compiler has to do work looking up all the names, your runtime code\n-      does not.  (This has been a prime concern from the beginning.)\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"iterators.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt08ch19s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0VIII.\u00a0\n-  Iterators\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0One Past the End</td></tr></table></div></body></html>"}, {"sha": "2a0e28d40dae409b5be607a63aadb7fc91c3bdbf", "filename": "libstdc++-v3/doc/html/manual/bk01pt08ch19s02.html", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt08ch19s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,86 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>One Past the End</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt08ch19.html\" title=\"Chapter\u00a019.\u00a0Predefined\" /><link rel=\"prev\" href=\"bk01pt08ch19.html\" title=\"Chapter\u00a019.\u00a0Predefined\" /><link rel=\"next\" href=\"algorithms.html\" title=\"Part\u00a0IX.\u00a0 Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">One Past the End</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt08ch19.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0Predefined</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"One Past the End\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"iterators.predefined.end\"></a>One Past the End</h2></div></div></div><p>This starts off sounding complicated, but is actually very easy,\n-      especially towards the end.  Trust me.\n-   </p><p>Beginners usually have a little trouble understand the whole\n-      'past-the-end' thing, until they remember their early algebra classes\n-      (see, they <span class=\"emphasis\"><em>told</em></span> you that stuff would come in handy!) and\n-      the concept of half-open ranges.\n-   </p><p>First, some history, and a reminder of some of the funkier rules in\n-      C and C++ for builtin arrays.  The following rules have always been\n-      true for both languages:\n-   </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>You can point anywhere in the array, <span class=\"emphasis\"><em>or to the first element\n-          past the end of the array</em></span>.  A pointer that points to one\n-          past the end of the array is guaranteed to be as unique as a\n-          pointer to somewhere inside the array, so that you can compare\n-          such pointers safely.\n-\t</p></li><li class=\"listitem\"><p>You can only dereference a pointer that points into an array.\n-          If your array pointer points outside the array -- even to just\n-          one past the end -- and you dereference it, Bad Things happen.\n-\t</p></li><li class=\"listitem\"><p>Strictly speaking, simply pointing anywhere else invokes\n-          undefined behavior.  Most programs won't puke until such a\n-          pointer is actually dereferenced, but the standards leave that\n-          up to the platform.\n-\t</p></li></ol></div><p>The reason this past-the-end addressing was allowed is to make it\n-      easy to write a loop to go over an entire array, e.g.,\n-      while (*d++ = *s++);.\n-   </p><p>So, when you think of two pointers delimiting an array, don't think\n-      of them as indexing 0 through n-1.  Think of them as <span class=\"emphasis\"><em>boundary\n-      markers</em></span>:\n-   </p><pre class=\"programlisting\">\n-\n-   beginning            end\n-     |                   |\n-     |                   |               This is bad.  Always having to\n-     |                   |               remember to add or subtract one.\n-     |                   |               Off-by-one bugs very common here.\n-     V                   V\n-        array of N elements\n-     |---|---|--...--|---|---|\n-     | 0 | 1 |  ...  |N-2|N-1|\n-     |---|---|--...--|---|---|\n-\n-     ^                       ^\n-     |                       |\n-     |                       |           This is good.  This is safe.  This\n-     |                       |           is guaranteed to work.  Just don't\n-     |                       |           dereference 'end'.\n-   beginning                end\n-\n-   </pre><p>See?  Everything between the boundary markers is part of the array.\n-      Simple.\n-   </p><p>Now think back to your junior-high school algebra course, when you\n-      were learning how to draw graphs.  Remember that a graph terminating\n-      with a solid dot meant, \"Everything up through this point,\"\n-      and a graph terminating with an open dot meant, \"Everything up\n-      to, but not including, this point,\" respectively called closed\n-      and open ranges?  Remember how closed ranges were written with\n-      brackets, <span class=\"emphasis\"><em>[a,b]</em></span>, and open ranges were written with parentheses,\n-      <span class=\"emphasis\"><em>(a,b)</em></span>?\n-   </p><p>The boundary markers for arrays describe a <span class=\"emphasis\"><em>half-open range</em></span>,\n-      starting with (and including) the first element, and ending with (but\n-      not including) the last element:  <span class=\"emphasis\"><em>[beginning,end)</em></span>.  See, I\n-      told you it would be simple in the end.\n-   </p><p>Iterators, and everything working with iterators, follows this same\n-      time-honored tradition.  A container's <code class=\"code\">begin()</code> method returns\n-      an iterator referring to the first element, and its <code class=\"code\">end()</code>\n-      method returns a past-the-end iterator, which is guaranteed to be\n-      unique and comparable against any other iterator pointing into the\n-      middle of the container.\n-   </p><p>Container constructors, container methods, and algorithms, all take\n-      pairs of iterators describing a range of values on which to operate.\n-      All of these ranges are half-open ranges, so you pass the beginning\n-      iterator as the starting parameter, and the one-past-the-end iterator\n-      as the finishing parameter.\n-   </p><p>This generalizes very well.  You can operate on sub-ranges quite\n-      easily this way; functions accepting a <span class=\"emphasis\"><em>[first,last)</em></span> range\n-      don't know or care whether they are the boundaries of an entire {array,\n-      sequence, container, whatever}, or whether they only enclose a few\n-      elements from the center.  This approach also makes zero-length\n-      sequences very simple to recognize:  if the two endpoints compare\n-      equal, then the {array, sequence, container, whatever} is empty.\n-   </p><p>Just don't dereference <code class=\"code\">end()</code>.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt08ch19.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt08ch19.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a019.\u00a0Predefined\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0IX.\u00a0\n-  Algorithms\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "a343f9c50f4ba463f2a6c99dfd3dae91ded93321", "filename": "libstdc++-v3/doc/html/manual/bk01pt09ch20.html", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09ch20.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09ch20.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09ch20.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a020.\u00a0Mutating</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      algorithm&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"algorithms.html\" title=\"Part\u00a0IX.\u00a0 Algorithms\" /><link rel=\"prev\" href=\"bk01pt09pr02.html\" title=\"\" /><link rel=\"next\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0 Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a020.\u00a0Mutating</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt09pr02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IX.\u00a0\n-  Algorithms\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a020.\u00a0Mutating\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.algorithms.mutating\"></a>Chapter\u00a020.\u00a0Mutating</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt09ch20.html#algorithms.mutating.swap\"><code class=\"function\">swap</code></a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt09ch20.html#algorithms.swap.specializations\">Specializations</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"swap\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"algorithms.mutating.swap\"></a><code class=\"function\">swap</code></h2></div></div></div><div class=\"sect2\" title=\"Specializations\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"algorithms.swap.specializations\"></a>Specializations</h3></div></div></div><p>If you call <code class=\"code\"> std::swap(x,y); </code> where x and y are standard\n-      containers, then the call will automatically be replaced by a call to\n-      <code class=\"code\"> x.swap(y); </code> instead.\n-   </p><p>This allows member functions of each container class to take over, and\n-      containers' swap functions should have O(1) complexity according to\n-      the standard.  (And while \"should\" allows implementations to\n-      behave otherwise and remain compliant, this implementation does in\n-      fact use constant-time swaps.)  This should not be surprising, since\n-      for two containers of the same type to swap contents, only some\n-      internal pointers to storage need to be exchanged.\n-   </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt09pr02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"algorithms.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0X.\u00a0\n-  Numerics\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "c81bbee976e1c0a7bee5ddd5015671d2a26ae695", "filename": "libstdc++-v3/doc/html/manual/bk01pt09pr02.html", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09pr02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09pr02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt09pr02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,41 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title></title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      algorithm&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"algorithms.html\" title=\"Part\u00a0IX.\u00a0 Algorithms\" /><link rel=\"prev\" href=\"algorithms.html\" title=\"Part\u00a0IX.\u00a0 Algorithms\" /><link rel=\"next\" href=\"bk01pt09ch20.html\" title=\"Chapter\u00a020.\u00a0Mutating\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\"></th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IX.\u00a0\n-  Algorithms\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt09ch20.html\">Next</a></td></tr></table><hr /></div><div class=\"preface\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"id638172\"></a></h2></div></div></div><p>\n-  The neatest accomplishment of the algorithms chapter is that all the\n-  work is done via iterators, not containers directly.  This means two\n-  important things:\n-</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n-\t  Anything that behaves like an iterator can be used in one of\n-          these algorithms.  Raw pointers make great candidates, thus\n-          built-in arrays are fine containers, as well as your own iterators.\n-\t</p></li><li class=\"listitem\"><p>\n-\t  The algorithms do not (and cannot) affect the container as a\n-          whole; only the things between the two iterator endpoints.  If\n-          you pass a range of iterators only enclosing the middle third of\n-          a container, then anything outside that range is inviolate.\n-\t</p></li></ol></div><p>\n-     Even strings can be fed through the algorithms here, although the\n-     string class has specialized versions of many of these functions\n-     (for example, <code class=\"code\">string::find()</code>).  Most of the examples\n-     on this page will use simple arrays of integers as a playground\n-     for algorithms, just to keep things simple.  The use of\n-     <span class=\"emphasis\"><em>N</em></span> as a size in the examples is to keep\n-     things easy to read but probably won't be valid code.  You can\n-     use wrappers such as those described in the <a class=\"link\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\">containers chapter</a> to\n-     keep real code readable.\n-   </p><p>\n-     The single thing that trips people up the most is the definition\n-     of <span class=\"emphasis\"><em>range</em></span> used with iterators; the famous\n-     \"past-the-end\" rule that everybody loves to hate.  The\n-     <a class=\"link\" href=\"iterators.html\" title=\"Part\u00a0VIII.\u00a0 Iterators\">iterators\n-     chapter</a> of this document has a complete explanation of\n-     this simple rule that seems to cause so much confusion.  Once you\n-     get <span class=\"emphasis\"><em>range</em></span> into your head (it's not that\n-     hard, honest!), then the algorithms are a cakewalk.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"algorithms.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt09ch20.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0IX.\u00a0\n-  Algorithms\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a020.\u00a0Mutating</td></tr></table></div></body></html>"}, {"sha": "31c37c741cf3ae767a838dece6e30a144e8e4071", "filename": "libstdc++-v3/doc/html/manual/bk01pt10ch23s02.html", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>C99</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics_and_c.html\" title=\"Chapter\u00a023.\u00a0Interacting with C\" /><link rel=\"prev\" href=\"numerics_and_c.html\" title=\"Chapter\u00a023.\u00a0Interacting with C\" /><link rel=\"next\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0 Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">C99</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"numerics_and_c.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a023.\u00a0Interacting with C</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"C99\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"numerics.c.c99\"></a>C99</h2></div></div></div><p>In addition to the other topics on this page, we'll note here some\n-      of the C99 features that appear in libstdc++.\n-   </p><p>The C99 features depend on the <code class=\"code\">--enable-c99</code> configure flag.\n-      This flag is already on by default, but it can be disabled by the\n-      user.  Also, the configuration machinery will disable it if the\n-      necessary support for C99 (e.g., header files) cannot be found.\n-   </p><p>As of GCC 3.0, C99 support includes classification functions\n-      such as <code class=\"code\">isnormal</code>, <code class=\"code\">isgreater</code>,\n-      <code class=\"code\">isnan</code>, etc.\n-      The functions used for 'long long' support such as <code class=\"code\">strtoll</code>\n-      are supported, as is the <code class=\"code\">lldiv_t</code> typedef.  Also supported\n-      are the wide character functions using 'long long', like\n-      <code class=\"code\">wcstoll</code>.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"numerics_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics_and_c.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a023.\u00a0Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0XI.\u00a0\n-  Input and Output\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "b713ad2ef02bbcd6a488713e2c167b6e347900ae", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch25s02.html", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,77 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Buffering</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"streambufs.html\" title=\"Chapter\u00a025.\u00a0Stream Buffers\" /><link rel=\"prev\" href=\"streambufs.html\" title=\"Chapter\u00a025.\u00a0Stream Buffers\" /><link rel=\"next\" href=\"stringstreams.html\" title=\"Chapter\u00a026.\u00a0Memory Based Streams\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Buffering</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"streambufs.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a025.\u00a0Stream Buffers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"stringstreams.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Buffering\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"io.streambuf.buffering\"></a>Buffering</h2></div></div></div><p>First, are you sure that you understand buffering?  Particularly\n-      the fact that C++ may not, in fact, have anything to do with it?\n-   </p><p>The rules for buffering can be a little odd, but they aren't any\n-      different from those of C.  (Maybe that's why they can be a bit\n-      odd.)  Many people think that writing a newline to an output\n-      stream automatically flushes the output buffer.  This is true only\n-      when the output stream is, in fact, a terminal and not a file\n-      or some other device -- and <span class=\"emphasis\"><em>that</em></span> may not even be true\n-      since C++ says nothing about files nor terminals.  All of that is\n-      system-dependent.  (The \"newline-buffer-flushing only occurring\n-      on terminals\" thing is mostly true on Unix systems, though.)\n-   </p><p>Some people also believe that sending <code class=\"code\">endl</code> down an\n-      output stream only writes a newline.  This is incorrect; after a\n-      newline is written, the buffer is also flushed.  Perhaps this\n-      is the effect you want when writing to a screen -- get the text\n-      out as soon as possible, etc -- but the buffering is largely\n-      wasted when doing this to a file:\n-   </p><pre class=\"programlisting\">\n-   output &lt;&lt; \"a line of text\" &lt;&lt; endl;\n-   output &lt;&lt; some_data_variable &lt;&lt; endl;\n-   output &lt;&lt; \"another line of text\" &lt;&lt; endl; </pre><p>The proper thing to do in this case to just write the data out\n-      and let the libraries and the system worry about the buffering.\n-      If you need a newline, just write a newline:\n-   </p><pre class=\"programlisting\">\n-   output &lt;&lt; \"a line of text\\n\"\n-          &lt;&lt; some_data_variable &lt;&lt; '\\n'\n-          &lt;&lt; \"another line of text\\n\"; </pre><p>I have also joined the output statements into a single statement.\n-      You could make the code prettier by moving the single newline to\n-      the start of the quoted text on the last line, for example.\n-   </p><p>If you do need to flush the buffer above, you can send an\n-      <code class=\"code\">endl</code> if you also need a newline, or just flush the buffer\n-      yourself:\n-   </p><pre class=\"programlisting\">\n-   output &lt;&lt; ...... &lt;&lt; flush;    // can use std::flush manipulator\n-   output.flush();               // or call a member fn </pre><p>On the other hand, there are times when writing to a file should\n-      be like writing to standard error; no buffering should be done \n-      because the data needs to appear quickly (a prime example is a\n-      log file for security-related information).  The way to do this is\n-      just to turn off the buffering <span class=\"emphasis\"><em>before any I/O operations at\n-      all</em></span> have been done (note that opening counts as an I/O operation):\n-   </p><pre class=\"programlisting\">\n-   std::ofstream    os;\n-   std::ifstream    is;\n-   int   i;\n-\n-   os.rdbuf()-&gt;pubsetbuf(0,0);\n-   is.rdbuf()-&gt;pubsetbuf(0,0);\n-\n-   os.open(\"/foo/bar/baz\");\n-   is.open(\"/qux/quux/quuux\");\n-   ...\n-   os &lt;&lt; \"this data is written immediately\\n\";\n-   is &gt;&gt; i;   // and this will probably cause a disk read </pre><p>Since all aspects of buffering are handled by a streambuf-derived\n-      member, it is necessary to get at that member with <code class=\"code\">rdbuf()</code>.\n-      Then the public version of <code class=\"code\">setbuf</code> can be called.  The \n-      arguments are the same as those for the Standard C I/O Library\n-      function (a buffer area followed by its size).\n-   </p><p>A great deal of this is implementation-dependent.  For example,\n-      <code class=\"code\">streambuf</code> does not specify any actions for its own \n-      <code class=\"code\">setbuf()</code>-ish functions; the classes derived from\n-      <code class=\"code\">streambuf</code> each define behavior that \"makes \n-      sense\" for that class:  an argument of (0,0) turns off buffering\n-      for <code class=\"code\">filebuf</code> but does nothing at all for its siblings\n-      <code class=\"code\">stringbuf</code> and <code class=\"code\">strstreambuf</code>, and specifying\n-      anything other than (0,0) has varying effects.\n-      User-defined classes derived from <code class=\"code\">streambuf</code> can\n-      do whatever they want.  (For <code class=\"code\">filebuf</code> and arguments for\n-      <code class=\"code\">(p,s)</code> other than zeros, libstdc++ does what you'd expect:\n-      the first <code class=\"code\">s</code> bytes of <code class=\"code\">p</code> are used as a buffer,\n-      which you must allocate and deallocate.)\n-   </p><p>A last reminder:  there are usually more buffers involved than\n-      just those at the language/library level.  Kernel buffers, disk\n-      buffers, and the like will also have an effect.  Inspecting and\n-      changing those are system-dependent.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"streambufs.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"streambufs.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"stringstreams.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a025.\u00a0Stream Buffers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a026.\u00a0Memory Based Streams</td></tr></table></div></body></html>"}, {"sha": "4366e8fd8c068c8e1b1231f2102569320be8243c", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch27s02.html", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,101 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Binary Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"fstreams.html\" title=\"Chapter\u00a027.\u00a0File Based Streams\" /><link rel=\"prev\" href=\"fstreams.html\" title=\"Chapter\u00a027.\u00a0File Based Streams\" /><link rel=\"next\" href=\"io_and_c.html\" title=\"Chapter\u00a028.\u00a0Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Binary Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"fstreams.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a027.\u00a0File Based Streams</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Binary Input and Output\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.filestreams.binary\"></a>Binary Input and Output</h2></div></div></div><p>\n-    </p><p>The first and most important thing to remember about binary I/O is\n-      that opening a file with <code class=\"code\">ios::binary</code> is not, repeat\n-      <span class=\"emphasis\"><em>not</em></span>, the only thing you have to do.  It is not a silver\n-      bullet, and will not allow you to use the <code class=\"code\">&lt;&lt;/&gt;&gt;</code>\n-      operators of the normal fstreams to do binary I/O.\n-   </p><p>Sorry.  Them's the breaks.\n-   </p><p>This isn't going to try and be a complete tutorial on reading and\n-      writing binary files (because \"binary\"\n-      covers a lot of ground), but we will try and clear\n-      up a couple of misconceptions and common errors.\n-   </p><p>First, <code class=\"code\">ios::binary</code> has exactly one defined effect, no more\n-      and no less.  Normal text mode has to be concerned with the newline\n-      characters, and the runtime system will translate between (for\n-      example) '\\n' and the appropriate end-of-line sequence (LF on Unix,\n-      CRLF on DOS, CR on Macintosh, etc).  (There are other things that\n-      normal mode does, but that's the most obvious.)  Opening a file in\n-      binary mode disables this conversion, so reading a CRLF sequence\n-      under Windows won't accidentally get mapped to a '\\n' character, etc.\n-      Binary mode is not supposed to suddenly give you a bitstream, and\n-      if it is doing so in your program then you've discovered a bug in\n-      your vendor's compiler (or some other part of the C++ implementation,\n-      possibly the runtime system).\n-   </p><p>Second, using <code class=\"code\">&lt;&lt;</code> to write and <code class=\"code\">&gt;&gt;</code> to\n-      read isn't going to work with the standard file stream classes, even\n-      if you use <code class=\"code\">skipws</code> during reading.  Why not?  Because \n-      ifstream and ofstream exist for the purpose of <span class=\"emphasis\"><em>formatting</em></span>,\n-      not reading and writing.  Their job is to interpret the data into\n-      text characters, and that's exactly what you don't want to happen\n-      during binary I/O.\n-   </p><p>Third, using the <code class=\"code\">get()</code> and <code class=\"code\">put()/write()</code> member\n-      functions still aren't guaranteed to help you.  These are\n-      \"unformatted\" I/O functions, but still character-based.\n-      (This may or may not be what you want, see below.)\n-   </p><p>Notice how all the problems here are due to the inappropriate use\n-      of <span class=\"emphasis\"><em>formatting</em></span> functions and classes to perform something\n-      which <span class=\"emphasis\"><em>requires</em></span> that formatting not be done?  There are a\n-      seemingly infinite number of solutions, and a few are listed here:\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"quote\">\u201c<span class=\"quote\">Derive your own fstream-type classes and write your own\n-          &lt;&lt;/&gt;&gt; operators to do binary I/O on whatever data\n-          types you're using.</span>\u201d</span>\n-\t</p><p>\n-\t  This is a Bad Thing, because while\n-          the compiler would probably be just fine with it, other humans\n-          are going to be confused.  The overloaded bitshift operators\n-          have a well-defined meaning (formatting), and this breaks it.\n-\t</p></li><li class=\"listitem\"><p>\n-\t  <span class=\"quote\">\u201c<span class=\"quote\">Build the file structure in memory, then\n-\t  <code class=\"code\">mmap()</code> the file and copy the\n-\t  structure.\n-\t</span>\u201d</span>\n-\t</p><p>\n-\t  Well, this is easy to make work, and easy to break, and is\n-\t  pretty equivalent to using <code class=\"code\">::read()</code> and\n-\t  <code class=\"code\">::write()</code> directly, and makes no use of the\n-\t  iostream library at all...\n-\t  </p></li><li class=\"listitem\"><p>\n-\t  <span class=\"quote\">\u201c<span class=\"quote\">Use streambufs, that's what they're there for.</span>\u201d</span>\n-\t</p><p>\n-          While not trivial for the beginner, this is the best of all\n-          solutions.  The streambuf/filebuf layer is the layer that is\n-          responsible for actual I/O.  If you want to use the C++\n-          library for binary I/O, this is where you start.\n-\t</p></li></ul></div><p>How to go about using streambufs is a bit beyond the scope of this\n-      document (at least for now), but while streambufs go a long way,\n-      they still leave a couple of things up to you, the programmer.\n-      As an example, byte ordering is completely between you and the\n-      operating system, and you have to handle it yourself.\n-   </p><p>Deriving a streambuf or filebuf\n-      class from the standard ones, one that is specific to your data\n-      types (or an abstraction thereof) is probably a good idea, and\n-      lots of examples exist in journals and on Usenet.  Using the\n-      standard filebufs directly (either by declaring your own or by\n-      using the pointer returned from an fstream's <code class=\"code\">rdbuf()</code>)\n-      is certainly feasible as well.\n-   </p><p>One area that causes problems is trying to do bit-by-bit operations\n-      with filebufs.  C++ is no different from C in this respect:  I/O\n-      must be done at the byte level.  If you're trying to read or write\n-      a few bits at a time, you're going about it the wrong way.  You\n-      must read/write an integral number of bytes and then process the\n-      bytes.  (For example, the streambuf functions take and return\n-      variables of type <code class=\"code\">int_type</code>.)\n-   </p><p>Another area of problems is opening text files in binary mode.\n-      Generally, binary mode is intended for binary files, and opening\n-      text files in binary mode means that you now have to deal with all of \n-      those end-of-line and end-of-file problems that we mentioned before.\n-   </p><p>\n-      An instructive thread from comp.lang.c++.moderated delved off into\n-      this topic starting more or less at\n-      <a class=\"ulink\" href=\"http://groups.google.com/group/comp.std.c++/browse_thread/thread/f87b4abd7954a87/946a3eb9921e382d?q=comp.std.c%2B%2B+binary+iostream#946a3eb9921e382d\" target=\"_top\">this</a>\n-      post and continuing to the end of the thread. (The subject heading is \"binary iostreams\" on both comp.std.c++\n-      and comp.lang.c++.moderated.) Take special note of the replies by James Kanze and Dietmar K\u00fchl.\n-   </p><p>Briefly, the problems of byte ordering and type sizes mean that\n-      the unformatted functions like <code class=\"code\">ostream::put()</code> and\n-      <code class=\"code\">istream::get()</code> cannot safely be used to communicate\n-      between arbitrary programs, or across a network, or from one\n-      invocation of a program to another invocation of the same program\n-      on a different platform, etc.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"fstreams.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"fstreams.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a027.\u00a0File Based Streams\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a028.\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "69fa0f12ec1a3ebb93f30673bf0858902337dd33", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch28s02.html", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28s02.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,49 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Performance</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io_and_c.html\" title=\"Chapter\u00a028.\u00a0Interacting with C\" /><link rel=\"prev\" href=\"io_and_c.html\" title=\"Chapter\u00a028.\u00a0Interacting with C\" /><link rel=\"next\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Performance</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a028.\u00a0Interacting with C</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"extensions.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Performance\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.c.sync\"></a>Performance</h2></div></div></div><p>\n-      Pathetic Performance? Ditch C.\n-    </p><p>It sounds like a flame on C, but it isn't.  Really.  Calm down.\n-      I'm just saying it to get your attention.\n-   </p><p>Because the C++ library includes the C library, both C-style and\n-      C++-style I/O have to work at the same time.  For example:\n-   </p><pre class=\"programlisting\">\n-     #include &lt;iostream&gt;\n-     #include &lt;cstdio&gt;\n-\n-     std::cout &lt;&lt; \"Hel\";\n-     std::printf (\"lo, worl\");\n-     std::cout &lt;&lt; \"d!\\n\";\n-   </pre><p>This must do what you think it does.\n-   </p><p>Alert members of the audience will immediately notice that buffering\n-      is going to make a hash of the output unless special steps are taken.\n-   </p><p>The special steps taken by libstdc++, at least for version 3.0,\n-      involve doing very little buffering for the standard streams, leaving\n-      most of the buffering to the underlying C library.  (This kind of\n-      thing is tricky to get right.)\n-      The upside is that correctness is ensured.  The downside is that\n-      writing through <code class=\"code\">cout</code> can quite easily lead to awful\n-      performance when the C++ I/O library is layered on top of the C I/O\n-      library (as it is for 3.0 by default).  Some patches have been applied\n-      which improve the situation for 3.1.\n-   </p><p>However, the C and C++ standard streams only need to be kept in sync\n-      when both libraries' facilities are in use.  If your program only uses\n-      C++ I/O, then there's no need to sync with the C streams.  The right\n-      thing to do in this case is to call\n-   </p><pre class=\"programlisting\">\n-     #include <span class=\"emphasis\"><em>any of the I/O headers such as ios, iostream, etc</em></span>\n-\n-     std::ios::sync_with_stdio(false);\n-   </pre><p>You must do this before performing any I/O via the C++ stream objects.\n-      Once you call this, the C++ streams will operate independently of the\n-      (unused) C streams.  For GCC 3.x, this means that <code class=\"code\">cout</code> and\n-      company will become fully buffered on their own.\n-   </p><p>Note, by the way, that the synchronization requirement only applies to\n-      the standard streams (<code class=\"code\">cin</code>, <code class=\"code\">cout</code>,\n-      <code class=\"code\">cerr</code>,\n-      <code class=\"code\">clog</code>, and their wide-character counterparts).  File stream\n-      objects that you declare yourself have no such requirement and are fully\n-      buffered.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io_and_c.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"extensions.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a028.\u00a0Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0XII.\u00a0\n-  Extensions\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "2d56fc66378a6fa7cb9e121564a21cc0f709887f", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch30s03.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch30s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch30s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch30s03.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,24 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /><link rel=\"prev\" href=\"bk01pt12ch30s02.html\" title=\"Semantics\" /><link rel=\"next\" href=\"bk01pt12ch30s04.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Debug Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Using\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.using\"></a>Using</h2></div></div></div><p>\n-  </p><div class=\"sect2\" title=\"Using the Debug Mode\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug_mode.using.mode\"></a>Using the Debug Mode</h3></div></div></div><p>To use the libstdc++ debug mode, compile your application with the\n-  compiler flag <code class=\"code\">-D_GLIBCXX_DEBUG</code>. Note that this flag\n-  changes the sizes and behavior of standard class templates such\n-  as <code class=\"code\">std::vector</code>, and therefore you can only link code\n-  compiled with debug mode and code compiled without debug mode if no\n-  instantiation of a container is passed between the two translation\n-  units.</p><p>By default, error messages are formatted to fit on lines of about\n-  78 characters.  The environment variable\n-  <code class=\"code\">GLIBCXX_DEBUG_MESSAGE_LENGTH</code> can be used to request a\n-  different length.</p></div><div class=\"sect2\" title=\"Using a Specific Debug Container\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug_mode.using.specific\"></a>Using a Specific Debug Container</h3></div></div></div><p>When it is not feasible to recompile your entire application, or\n-  only specific containers need checking, debugging containers are\n-  available as GNU extensions. These debugging containers are\n-  functionally equivalent to the standard drop-in containers used in\n-  debug mode, but they are available in a separate namespace as GNU\n-  extensions and may be used in programs compiled with either release\n-  mode or with debug mode. The\n-  following table provides the names and headers of the debugging\n-  containers:\n-</p><div class=\"table\"><a id=\"id705570\"></a><p class=\"title\"><b>Table\u00a030.1.\u00a0Debugging Containers</b></p><div class=\"table-contents\"><table summary=\"Debugging Containers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Container</th><th align=\"left\">Header</th><th align=\"left\">Debug container</th><th align=\"left\">Debug header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">std::bitset</code></td><td align=\"left\"><code class=\"filename\">bitset</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::bitset</code></td><td align=\"left\"><code class=\"filename\">bitset</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::deque</code></td><td align=\"left\"><code class=\"filename\">deque</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::deque</code></td><td align=\"left\"><code class=\"filename\">deque</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::list</code></td><td align=\"left\"><code class=\"filename\">list</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::list</code></td><td align=\"left\"><code class=\"filename\">list</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::map</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::map</code></td><td align=\"left\"><code class=\"filename\">map</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::multimap</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::multimap</code></td><td align=\"left\"><code class=\"filename\">map</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::multiset</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::multiset</code></td><td align=\"left\"><code class=\"filename\">set</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::set</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::set</code></td><td align=\"left\"><code class=\"filename\">set</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::string</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::string</code></td><td align=\"left\"><code class=\"filename\">string</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::wstring</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::wstring</code></td><td align=\"left\"><code class=\"filename\">string</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::basic_string</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::basic_string</code></td><td align=\"left\"><code class=\"filename\">string</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::vector</code></td><td align=\"left\"><code class=\"filename\">vector</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::vector</code></td><td align=\"left\"><code class=\"filename\">vector</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>In addition, when compiling in C++0x mode, these additional\n-containers have additional debug capability.\n-</p><div class=\"table\"><a id=\"id607020\"></a><p class=\"title\"><b>Table\u00a030.2.\u00a0Debugging Containers C++0x</b></p><div class=\"table-contents\"><table summary=\"Debugging Containers C++0x\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Container</th><th align=\"left\">Header</th><th align=\"left\">Debug container</th><th align=\"left\">Debug header</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"classname\">std::unordered_map</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_map</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_multimap</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_multimap</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_set</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_set</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td></tr><tr><td align=\"left\"><code class=\"classname\">std::unordered_multiset</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td><td align=\"left\"><code class=\"classname\">__gnu_debug::unordered_multiset</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"debug_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Semantics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>"}, {"sha": "88ec80cabb28a857883d94e04114e794281838df", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 135, "deletions": 135, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -36,317 +36,317 @@\n \tof style.  Note that we usually do not make changes to the\n \tcode until an issue has reached <a class=\"ulink\" href=\"../ext/lwg-active.html#DR\" target=\"_top\">DR</a> status.\n       </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#5\" target=\"_top\">5</a>:\n-        <span class=\"emphasis\"><em>string::compare specification questionable</em></span>\n+\t<span class=\"emphasis\"><em>string::compare specification questionable</em></span>\n     </span></dt><dd><p>This should be two overloaded functions rather than a single function.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#17\" target=\"_top\">17</a>:\n-        <span class=\"emphasis\"><em>Bad bool parsing</em></span>\n+\t<span class=\"emphasis\"><em>Bad bool parsing</em></span>\n     </span></dt><dd><p>Apparently extracting Boolean values was messed up...\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#19\" target=\"_top\">19</a>:\n-        <span class=\"emphasis\"><em>\"Noconv\" definition too vague</em></span>\n+\t<span class=\"emphasis\"><em>\"Noconv\" definition too vague</em></span>\n     </span></dt><dd><p>If <code class=\"code\">codecvt::do_in</code> returns <code class=\"code\">noconv</code> there are\n-        no changes to the values in <code class=\"code\">[to, to_limit)</code>.\n+\tno changes to the values in <code class=\"code\">[to, to_limit)</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#22\" target=\"_top\">22</a>:\n-        <span class=\"emphasis\"><em>Member open vs flags</em></span>\n+\t<span class=\"emphasis\"><em>Member open vs flags</em></span>\n     </span></dt><dd><p>Re-opening a file stream does <span class=\"emphasis\"><em>not</em></span> clear the state flags.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#23\" target=\"_top\">23</a>:\n-        <span class=\"emphasis\"><em>Num_get overflow result</em></span>\n+\t<span class=\"emphasis\"><em>Num_get overflow result</em></span>\n     </span></dt><dd><p>Implement the proposed resolution.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#25\" target=\"_top\">25</a>:\n-        <span class=\"emphasis\"><em>String operator&lt;&lt; uses width() value wrong</em></span>\n+\t<span class=\"emphasis\"><em>String operator&lt;&lt; uses width() value wrong</em></span>\n     </span></dt><dd><p>Padding issues.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#48\" target=\"_top\">48</a>:\n-        <span class=\"emphasis\"><em>Use of non-existent exception constructor</em></span>\n+\t<span class=\"emphasis\"><em>Use of non-existent exception constructor</em></span>\n     </span></dt><dd><p>An instance of <code class=\"code\">ios_base::failure</code> is constructed instead.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#49\" target=\"_top\">49</a>:\n-        <span class=\"emphasis\"><em>Underspecification of ios_base::sync_with_stdio</em></span>\n+\t<span class=\"emphasis\"><em>Underspecification of ios_base::sync_with_stdio</em></span>\n     </span></dt><dd><p>The return type is the <span class=\"emphasis\"><em>previous</em></span> state of synchronization.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#50\" target=\"_top\">50</a>:\n-        <span class=\"emphasis\"><em>Copy constructor and assignment operator of ios_base</em></span>\n+\t<span class=\"emphasis\"><em>Copy constructor and assignment operator of ios_base</em></span>\n     </span></dt><dd><p>These members functions are declared <code class=\"code\">private</code> and are\n-        thus inaccessible.  Specifying the correct semantics of\n-        \"copying stream state\" was deemed too complicated.\n+\tthus inaccessible.  Specifying the correct semantics of\n+\t\"copying stream state\" was deemed too complicated.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#60\" target=\"_top\">60</a>:\n-        <span class=\"emphasis\"><em>What is a formatted input function?</em></span>\n+\t<span class=\"emphasis\"><em>What is a formatted input function?</em></span>\n     </span></dt><dd><p>This DR made many widespread changes to <code class=\"code\">basic_istream</code>\n-        and <code class=\"code\">basic_ostream</code> all of which have been implemented.\n+\tand <code class=\"code\">basic_ostream</code> all of which have been implemented.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#63\" target=\"_top\">63</a>:\n-        <span class=\"emphasis\"><em>Exception-handling policy for unformatted output</em></span>\n+\t<span class=\"emphasis\"><em>Exception-handling policy for unformatted output</em></span>\n     </span></dt><dd><p>Make the policy consistent with that of formatted input, unformatted\n-        input, and formatted output.\n+\tinput, and formatted output.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#68\" target=\"_top\">68</a>:\n-        <span class=\"emphasis\"><em>Extractors for char* should store null at end</em></span>\n+\t<span class=\"emphasis\"><em>Extractors for char* should store null at end</em></span>\n     </span></dt><dd><p>And they do now.  An editing glitch in the last item in the list of\n-        [27.6.1.2.3]/7.\n+\t[27.6.1.2.3]/7.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#74\" target=\"_top\">74</a>:\n-        <span class=\"emphasis\"><em>Garbled text for codecvt::do_max_length</em></span>\n+\t<span class=\"emphasis\"><em>Garbled text for codecvt::do_max_length</em></span>\n     </span></dt><dd><p>The text of the standard was gibberish.  Typos gone rampant.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#75\" target=\"_top\">75</a>:\n-        <span class=\"emphasis\"><em>Contradiction in codecvt::length's argument types</em></span>\n+\t<span class=\"emphasis\"><em>Contradiction in codecvt::length's argument types</em></span>\n     </span></dt><dd><p>Change the first parameter to <code class=\"code\">stateT&amp;</code> and implement\n-        the new effects paragraph.\n+\tthe new effects paragraph.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#83\" target=\"_top\">83</a>:\n-        <span class=\"emphasis\"><em>string::npos vs. string::max_size()</em></span>\n+\t<span class=\"emphasis\"><em>string::npos vs. string::max_size()</em></span>\n     </span></dt><dd><p>Safety checks on the size of the string should test against\n-        <code class=\"code\">max_size()</code> rather than <code class=\"code\">npos</code>.\n+\t<code class=\"code\">max_size()</code> rather than <code class=\"code\">npos</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#90\" target=\"_top\">90</a>:\n-        <span class=\"emphasis\"><em>Incorrect description of operator&gt;&gt; for strings</em></span>\n+\t<span class=\"emphasis\"><em>Incorrect description of operator&gt;&gt; for strings</em></span>\n     </span></dt><dd><p>The effect contain <code class=\"code\">isspace(c,getloc())</code> which must be\n-        replaced by <code class=\"code\">isspace(c,is.getloc())</code>.\n+\treplaced by <code class=\"code\">isspace(c,is.getloc())</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#91\" target=\"_top\">91</a>:\n-        <span class=\"emphasis\"><em>Description of operator&gt;&gt; and getline() for string&lt;&gt;\n+\t<span class=\"emphasis\"><em>Description of operator&gt;&gt; and getline() for string&lt;&gt;\n \t    might cause endless loop</em></span>\n     </span></dt><dd><p>They behave as a formatted input function and as an unformatted\n-        input function, respectively (except that <code class=\"code\">getline</code> is\n+\tinput function, respectively (except that <code class=\"code\">getline</code> is\n \tnot required to set <code class=\"code\">gcount</code>).\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#103\" target=\"_top\">103</a>:\n-        <span class=\"emphasis\"><em>set::iterator is required to be modifiable, but this allows\n+\t<span class=\"emphasis\"><em>set::iterator is required to be modifiable, but this allows\n \t    modification of keys.</em></span>\n     </span></dt><dd><p>For associative containers where the value type is the same as\n-        the key type, both <code class=\"code\">iterator</code> and <code class=\"code\">const_iterator\n+\tthe key type, both <code class=\"code\">iterator</code> and <code class=\"code\">const_iterator\n \t</code> are constant iterators.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#109\" target=\"_top\">109</a>:\n-        <span class=\"emphasis\"><em>Missing binders for non-const sequence elements</em></span>\n+\t<span class=\"emphasis\"><em>Missing binders for non-const sequence elements</em></span>\n     </span></dt><dd><p>The <code class=\"code\">binder1st</code> and <code class=\"code\">binder2nd</code> didn't have an\n-        <code class=\"code\">operator()</code> taking a non-const parameter.\n+\t<code class=\"code\">operator()</code> taking a non-const parameter.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#110\" target=\"_top\">110</a>:\n-        <span class=\"emphasis\"><em>istreambuf_iterator::equal not const</em></span>\n+\t<span class=\"emphasis\"><em>istreambuf_iterator::equal not const</em></span>\n     </span></dt><dd><p>This was not a const member function.  Note that the DR says to\n-        replace the function with a const one; we have instead provided an\n-        overloaded version with identical contents.\n+\treplace the function with a const one; we have instead provided an\n+\toverloaded version with identical contents.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#117\" target=\"_top\">117</a>:\n-        <span class=\"emphasis\"><em>basic_ostream uses nonexistent num_put member functions</em></span>\n+\t<span class=\"emphasis\"><em>basic_ostream uses nonexistent num_put member functions</em></span>\n     </span></dt><dd><p><code class=\"code\">num_put::put()</code> was overloaded on the wrong types.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#118\" target=\"_top\">118</a>:\n-        <span class=\"emphasis\"><em>basic_istream uses nonexistent num_get member functions</em></span>\n+\t<span class=\"emphasis\"><em>basic_istream uses nonexistent num_get member functions</em></span>\n     </span></dt><dd><p>Same as 117, but for <code class=\"code\">num_get::get()</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#129\" target=\"_top\">129</a>:\n-        <span class=\"emphasis\"><em>Need error indication from seekp() and seekg()</em></span>\n+\t<span class=\"emphasis\"><em>Need error indication from seekp() and seekg()</em></span>\n     </span></dt><dd><p>These functions set <code class=\"code\">failbit</code> on error now.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#130\" target=\"_top\">130</a>:\n-        <span class=\"emphasis\"><em>Return type of container::erase(iterator) differs for associative containers</em></span>\n-    </span></dt><dd><p>Make member <code class=\"code\">erase</code> return iterator for <code class=\"code\">set</code>, <code class=\"code\">multiset</code>, <code class=\"code\">map</code>, <code class=\"code\">multimap</code>. \n+\t<span class=\"emphasis\"><em>Return type of container::erase(iterator) differs for associative containers</em></span>\n+    </span></dt><dd><p>Make member <code class=\"code\">erase</code> return iterator for <code class=\"code\">set</code>, <code class=\"code\">multiset</code>, <code class=\"code\">map</code>, <code class=\"code\">multimap</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#136\" target=\"_top\">136</a>:\n-        <span class=\"emphasis\"><em>seekp, seekg setting wrong streams?</em></span>\n+\t<span class=\"emphasis\"><em>seekp, seekg setting wrong streams?</em></span>\n     </span></dt><dd><p><code class=\"code\">seekp</code> should only set the output stream, and\n-        <code class=\"code\">seekg</code> should only set the input stream.\n+\t<code class=\"code\">seekg</code> should only set the input stream.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#167\" target=\"_top\">167</a>:\n-        <span class=\"emphasis\"><em>Improper use of traits_type::length()</em></span>\n+\t<span class=\"emphasis\"><em>Improper use of traits_type::length()</em></span>\n     </span></dt><dd><p><code class=\"code\">op&lt;&lt;</code> with a <code class=\"code\">const char*</code> was\n-        calculating an incorrect number of characters to write.\n+\tcalculating an incorrect number of characters to write.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#169\" target=\"_top\">169</a>:\n-        <span class=\"emphasis\"><em>Bad efficiency of overflow() mandated</em></span>\n+\t<span class=\"emphasis\"><em>Bad efficiency of overflow() mandated</em></span>\n     </span></dt><dd><p>Grow efficiently the internal array object.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#171\" target=\"_top\">171</a>:\n-        <span class=\"emphasis\"><em>Strange seekpos() semantics due to joint position</em></span>\n+\t<span class=\"emphasis\"><em>Strange seekpos() semantics due to joint position</em></span>\n     </span></dt><dd><p>Quite complex to summarize...\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#181\" target=\"_top\">181</a>:\n-        <span class=\"emphasis\"><em>make_pair() unintended behavior</em></span>\n+\t<span class=\"emphasis\"><em>make_pair() unintended behavior</em></span>\n     </span></dt><dd><p>This function used to take its arguments as reference-to-const, now\n-        it copies them (pass by value).\n+\tit copies them (pass by value).\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#195\" target=\"_top\">195</a>:\n-        <span class=\"emphasis\"><em>Should basic_istream::sentry's constructor ever set eofbit?</em></span>\n+\t<span class=\"emphasis\"><em>Should basic_istream::sentry's constructor ever set eofbit?</em></span>\n     </span></dt><dd><p>Yes, it can, specifically if EOF is reached while skipping whitespace.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#211\" target=\"_top\">211</a>:\n-        <span class=\"emphasis\"><em>operator&gt;&gt;(istream&amp;, string&amp;) doesn't set failbit</em></span>\n+\t<span class=\"emphasis\"><em>operator&gt;&gt;(istream&amp;, string&amp;) doesn't set failbit</em></span>\n     </span></dt><dd><p>If nothing is extracted into the string, <code class=\"code\">op&gt;&gt;</code> now\n-        sets <code class=\"code\">failbit</code> (which can cause an exception, etc., etc.).\n+\tsets <code class=\"code\">failbit</code> (which can cause an exception, etc., etc.).\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#214\" target=\"_top\">214</a>:\n-        <span class=\"emphasis\"><em>set::find() missing const overload</em></span>\n+\t<span class=\"emphasis\"><em>set::find() missing const overload</em></span>\n     </span></dt><dd><p>Both <code class=\"code\">set</code> and <code class=\"code\">multiset</code> were missing\n-        overloaded find, lower_bound, upper_bound, and equal_range functions\n-        for const instances.\n+\toverloaded find, lower_bound, upper_bound, and equal_range functions\n+\tfor const instances.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#231\" target=\"_top\">231</a>:\n-        <span class=\"emphasis\"><em>Precision in iostream?</em></span>\n+\t<span class=\"emphasis\"><em>Precision in iostream?</em></span>\n     </span></dt><dd><p>For conversion from a floating-point type, <code class=\"code\">str.precision()</code>\n-        is specified in the conversion specification.\n+\tis specified in the conversion specification.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#233\" target=\"_top\">233</a>:\n-        <span class=\"emphasis\"><em>Insertion hints in associative containers</em></span>\n+\t<span class=\"emphasis\"><em>Insertion hints in associative containers</em></span>\n     </span></dt><dd><p>Implement N1780, first check before then check after, insert as close\n-        to hint as possible.\n+\tto hint as possible.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#235\" target=\"_top\">235</a>:\n-        <span class=\"emphasis\"><em>No specification of default ctor for reverse_iterator</em></span>\n+\t<span class=\"emphasis\"><em>No specification of default ctor for reverse_iterator</em></span>\n     </span></dt><dd><p>The declaration of <code class=\"code\">reverse_iterator</code> lists a default constructor.\n-        However, no specification is given what this constructor should do.\n+\tHowever, no specification is given what this constructor should do.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#241\" target=\"_top\">241</a>:\n-        <span class=\"emphasis\"><em>Does unique_copy() require CopyConstructible and Assignable?</em></span>\n+\t<span class=\"emphasis\"><em>Does unique_copy() require CopyConstructible and Assignable?</em></span>\n     </span></dt><dd><p>Add a helper for forward_iterator/output_iterator, fix the existing\n-        one for input_iterator/output_iterator to not rely on Assignability.\n+\tone for input_iterator/output_iterator to not rely on Assignability.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#243\" target=\"_top\">243</a>:\n-        <span class=\"emphasis\"><em>get and getline when sentry reports failure</em></span>\n+\t<span class=\"emphasis\"><em>get and getline when sentry reports failure</em></span>\n     </span></dt><dd><p>Store a null character only if the character array has a non-zero size.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#251\" target=\"_top\">251</a>:\n-        <span class=\"emphasis\"><em>basic_stringbuf missing allocator_type</em></span>\n+\t<span class=\"emphasis\"><em>basic_stringbuf missing allocator_type</em></span>\n     </span></dt><dd><p>This nested typedef was originally not specified.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#253\" target=\"_top\">253</a>:\n-        <span class=\"emphasis\"><em>valarray helper functions are almost entirely useless</em></span>\n+\t<span class=\"emphasis\"><em>valarray helper functions are almost entirely useless</em></span>\n     </span></dt><dd><p>Make the copy constructor and copy-assignment operator declarations\n-        public in gslice_array, indirect_array, mask_array, slice_array; provide\n+\tpublic in gslice_array, indirect_array, mask_array, slice_array; provide\n \tdefinitions.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#265\" target=\"_top\">265</a>:\n-        <span class=\"emphasis\"><em>std::pair::pair() effects overly restrictive</em></span>\n+\t<span class=\"emphasis\"><em>std::pair::pair() effects overly restrictive</em></span>\n     </span></dt><dd><p>The default ctor would build its members from copies of temporaries;\n-        now it simply uses their respective default ctors.\n+\tnow it simply uses their respective default ctors.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#266\" target=\"_top\">266</a>:\n-        <span class=\"emphasis\"><em>bad_exception::~bad_exception() missing Effects clause</em></span>\n+\t<span class=\"emphasis\"><em>bad_exception::~bad_exception() missing Effects clause</em></span>\n     </span></dt><dd><p>The <code class=\"code\">bad_</code>* classes no longer have destructors (they\n-        are trivial), since no description of them was ever given.\n+\tare trivial), since no description of them was ever given.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#271\" target=\"_top\">271</a>:\n-        <span class=\"emphasis\"><em>basic_iostream missing typedefs</em></span>\n+\t<span class=\"emphasis\"><em>basic_iostream missing typedefs</em></span>\n     </span></dt><dd><p>The typedefs it inherits from its base classes can't be used, since\n-        (for example) <code class=\"code\">basic_iostream&lt;T&gt;::traits_type</code> is ambiguous.\n+\t(for example) <code class=\"code\">basic_iostream&lt;T&gt;::traits_type</code> is ambiguous.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#275\" target=\"_top\">275</a>:\n-        <span class=\"emphasis\"><em>Wrong type in num_get::get() overloads</em></span>\n+\t<span class=\"emphasis\"><em>Wrong type in num_get::get() overloads</em></span>\n     </span></dt><dd><p>Similar to 118.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#280\" target=\"_top\">280</a>:\n-        <span class=\"emphasis\"><em>Comparison of reverse_iterator to const reverse_iterator</em></span>\n+\t<span class=\"emphasis\"><em>Comparison of reverse_iterator to const reverse_iterator</em></span>\n     </span></dt><dd><p>Add global functions with two template parameters.\n-        (NB: not added for now a templated assignment operator) \n+\t(NB: not added for now a templated assignment operator)\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#292\" target=\"_top\">292</a>:\n-        <span class=\"emphasis\"><em>Effects of a.copyfmt (a)</em></span>\n+\t<span class=\"emphasis\"><em>Effects of a.copyfmt (a)</em></span>\n     </span></dt><dd><p>If <code class=\"code\">(this == &amp;rhs)</code> do nothing.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#300\" target=\"_top\">300</a>:\n-        <span class=\"emphasis\"><em>List::merge() specification incomplete</em></span>\n+\t<span class=\"emphasis\"><em>List::merge() specification incomplete</em></span>\n     </span></dt><dd><p>If <code class=\"code\">(this == &amp;x)</code> do nothing.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#303\" target=\"_top\">303</a>:\n-        <span class=\"emphasis\"><em>Bitset input operator underspecified</em></span>\n-    </span></dt><dd><p>Basically, compare the input character to \n-                    <code class=\"code\">is.widen(0)</code> and <code class=\"code\">is.widen(1)</code>.\n+\t<span class=\"emphasis\"><em>Bitset input operator underspecified</em></span>\n+    </span></dt><dd><p>Basically, compare the input character to\n+\t\t    <code class=\"code\">is.widen(0)</code> and <code class=\"code\">is.widen(1)</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#305\" target=\"_top\">305</a>:\n-        <span class=\"emphasis\"><em>Default behavior of codecvt&lt;wchar_t, char, \n-                  mbstate_t&gt;::length()</em></span>\n-    </span></dt><dd><p>Do not specify what <code class=\"code\">codecvt&lt;wchar_t, char, \n-                    mbstate_t&gt;::do_length</code> must return.\n+\t<span class=\"emphasis\"><em>Default behavior of codecvt&lt;wchar_t, char,\n+\t\t  mbstate_t&gt;::length()</em></span>\n+    </span></dt><dd><p>Do not specify what <code class=\"code\">codecvt&lt;wchar_t, char,\n+\t\t    mbstate_t&gt;::do_length</code> must return.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#328\" target=\"_top\">328</a>:\n-        <span class=\"emphasis\"><em>Bad sprintf format modifier in \n-                  money_put&lt;&gt;::do_put()</em></span>\n+\t<span class=\"emphasis\"><em>Bad sprintf format modifier in\n+\t\t  money_put&lt;&gt;::do_put()</em></span>\n     </span></dt><dd><p>Change the format string to \"%.0Lf\".\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#365\" target=\"_top\">365</a>:\n-        <span class=\"emphasis\"><em>Lack of const-qualification in clause 27</em></span>\n+\t<span class=\"emphasis\"><em>Lack of const-qualification in clause 27</em></span>\n     </span></dt><dd><p>Add const overloads of <code class=\"code\">is_open</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#387\" target=\"_top\">387</a>:\n-        <span class=\"emphasis\"><em>std::complex over-encapsulated</em></span>\n+\t<span class=\"emphasis\"><em>std::complex over-encapsulated</em></span>\n     </span></dt><dd><p>Add the <code class=\"code\">real(T)</code> and <code class=\"code\">imag(T)</code>\n-                    members;  in C++0x mode, also adjust the existing \n-                    <code class=\"code\">real()</code> and <code class=\"code\">imag()</code> members and \n-                    free functions.\n+\t\t    members;  in C++0x mode, also adjust the existing\n+\t\t    <code class=\"code\">real()</code> and <code class=\"code\">imag()</code> members and\n+\t\t    free functions.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#389\" target=\"_top\">389</a>:\n-        <span class=\"emphasis\"><em>Const overload of valarray::operator[] returns \n-                  by value</em></span>\n+\t<span class=\"emphasis\"><em>Const overload of valarray::operator[] returns\n+\t\t  by value</em></span>\n     </span></dt><dd><p>Change it to return a <code class=\"code\">const T&amp;</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#396\" target=\"_top\">396</a>:\n-        <span class=\"emphasis\"><em>what are characters zero and one</em></span>\n+\t<span class=\"emphasis\"><em>what are characters zero and one</em></span>\n     </span></dt><dd><p>Implement the proposed resolution.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#402\" target=\"_top\">402</a>:\n-        <span class=\"emphasis\"><em>Wrong new expression in [some_]allocator::construct</em></span>\n+\t<span class=\"emphasis\"><em>Wrong new expression in [some_]allocator::construct</em></span>\n     </span></dt><dd><p>Replace \"new\" with \"::new\".\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#408\" target=\"_top\">408</a>:\n-        <span class=\"emphasis\"><em>\n-        Is vector&lt;reverse_iterator&lt;char*&gt; &gt; forbidden?\n-        </em></span>\n+\t<span class=\"emphasis\"><em>\n+\tIs vector&lt;reverse_iterator&lt;char*&gt; &gt; forbidden?\n+\t</em></span>\n     </span></dt><dd><p>Tweak the debug-mode checks in _Safe_iterator.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#409\" target=\"_top\">409</a>:\n-        <span class=\"emphasis\"><em>Closing an fstream should clear the error state</em></span>\n+\t<span class=\"emphasis\"><em>Closing an fstream should clear the error state</em></span>\n     </span></dt><dd><p>Have <code class=\"code\">open</code> clear the error flags.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-closed.html#431\" target=\"_top\">431</a>:\n-        <span class=\"emphasis\"><em>Swapping containers with unequal allocators</em></span>\n+\t<span class=\"emphasis\"><em>Swapping containers with unequal allocators</em></span>\n     </span></dt><dd><p>Implement Option 3, as per N1599.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#432\" target=\"_top\">432</a>:\n-        <span class=\"emphasis\"><em>stringbuf::overflow() makes only one write position\n+\t<span class=\"emphasis\"><em>stringbuf::overflow() makes only one write position\n \t    available</em></span>\n     </span></dt><dd><p>Implement the resolution, beyond DR 169.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#434\" target=\"_top\">434</a>:\n-        <span class=\"emphasis\"><em>bitset::to_string() hard to use</em></span>\n+\t<span class=\"emphasis\"><em>bitset::to_string() hard to use</em></span>\n     </span></dt><dd><p>Add three overloads, taking fewer template arguments.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#438\" target=\"_top\">438</a>:\n-        <span class=\"emphasis\"><em>Ambiguity in the \"do the right thing\" clause</em></span>\n+\t<span class=\"emphasis\"><em>Ambiguity in the \"do the right thing\" clause</em></span>\n     </span></dt><dd><p>Implement the resolution, basically cast less.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#453\" target=\"_top\">453</a>:\n-        <span class=\"emphasis\"><em>basic_stringbuf::seekoff need not always fail for an empty stream</em></span>\n+\t<span class=\"emphasis\"><em>basic_stringbuf::seekoff need not always fail for an empty stream</em></span>\n     </span></dt><dd><p>Don't fail if the next pointer is null and newoff is zero.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#455\" target=\"_top\">455</a>:\n-        <span class=\"emphasis\"><em>cerr::tie() and wcerr::tie() are overspecified</em></span>\n+\t<span class=\"emphasis\"><em>cerr::tie() and wcerr::tie() are overspecified</em></span>\n     </span></dt><dd><p>Initialize cerr tied to cout and wcerr tied to wcout.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#464\" target=\"_top\">464</a>:\n-        <span class=\"emphasis\"><em>Suggestion for new member functions in standard containers</em></span>\n+\t<span class=\"emphasis\"><em>Suggestion for new member functions in standard containers</em></span>\n     </span></dt><dd><p>Add <code class=\"code\">data()</code> to <code class=\"code\">std::vector</code> and\n-        <code class=\"code\">at(const key_type&amp;)</code> to <code class=\"code\">std::map</code>.\n+\t<code class=\"code\">at(const key_type&amp;)</code> to <code class=\"code\">std::map</code>.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#508\" target=\"_top\">508</a>:\n-        <span class=\"emphasis\"><em>Bad parameters for ranlux64_base_01</em></span>\n+\t<span class=\"emphasis\"><em>Bad parameters for ranlux64_base_01</em></span>\n     </span></dt><dd><p>Fix the parameters.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-closed.html#512\" target=\"_top\">512</a>:\n-        <span class=\"emphasis\"><em>Seeding subtract_with_carry_01 from a single unsigned long</em></span>\n+\t<span class=\"emphasis\"><em>Seeding subtract_with_carry_01 from a single unsigned long</em></span>\n     </span></dt><dd><p>Construct a <code class=\"code\">linear_congruential</code> engine and seed with it.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-closed.html#526\" target=\"_top\">526</a>:\n-        <span class=\"emphasis\"><em>Is it undefined if a function in the standard changes in\n+\t<span class=\"emphasis\"><em>Is it undefined if a function in the standard changes in\n \t    parameters?</em></span>\n     </span></dt><dd><p>Use &amp;value.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#538\" target=\"_top\">538</a>:\n-        <span class=\"emphasis\"><em>241 again: Does unique_copy() require CopyConstructible\n+\t<span class=\"emphasis\"><em>241 again: Does unique_copy() require CopyConstructible\n \t    and Assignable?</em></span>\n     </span></dt><dd><p>In case of input_iterator/output_iterator rely on Assignability of\n-        input_iterator' value_type.\n+\tinput_iterator' value_type.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#539\" target=\"_top\">539</a>:\n-        <span class=\"emphasis\"><em>partial_sum and adjacent_difference should mention\n-            requirements</em></span>\n+\t<span class=\"emphasis\"><em>partial_sum and adjacent_difference should mention\n+\t    requirements</em></span>\n     </span></dt><dd><p>We were almost doing the right thing, just use std::move\n-        in adjacent_difference.\n+\tin adjacent_difference.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#541\" target=\"_top\">541</a>:\n-        <span class=\"emphasis\"><em>shared_ptr template assignment and void</em></span>\n+\t<span class=\"emphasis\"><em>shared_ptr template assignment and void</em></span>\n     </span></dt><dd><p>Add an auto_ptr&lt;void&gt; specialization.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#543\" target=\"_top\">543</a>:\n-        <span class=\"emphasis\"><em>valarray slice default constructor</em></span>\n+\t<span class=\"emphasis\"><em>valarray slice default constructor</em></span>\n     </span></dt><dd><p>Follow the straightforward proposed resolution.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#550\" target=\"_top\">550</a>:\n-        <span class=\"emphasis\"><em>What should the return type of pow(float,int) be?</em></span>\n+\t<span class=\"emphasis\"><em>What should the return type of pow(float,int) be?</em></span>\n     </span></dt><dd><p>In C++0x mode, remove the pow(float,int), etc., signatures.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#586\" target=\"_top\">586</a>:\n-        <span class=\"emphasis\"><em>string inserter not a formatted function</em></span>\n+\t<span class=\"emphasis\"><em>string inserter not a formatted function</em></span>\n     </span></dt><dd><p>Change it to be a formatted output function (i.e. catch exceptions).\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#596\" target=\"_top\">596</a>:\n-        <span class=\"emphasis\"><em>27.8.1.3 Table 112 omits \"a+\" and \"a+b\" modes</em></span>\n+\t<span class=\"emphasis\"><em>27.8.1.3 Table 112 omits \"a+\" and \"a+b\" modes</em></span>\n     </span></dt><dd><p>Add the missing modes to fopen_mode.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#630\" target=\"_top\">630</a>:\n-        <span class=\"emphasis\"><em>arrays of valarray</em></span>\n+\t<span class=\"emphasis\"><em>arrays of valarray</em></span>\n     </span></dt><dd><p>Implement the simple resolution.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#660\" target=\"_top\">660</a>:\n-        <span class=\"emphasis\"><em>Missing bitwise operations</em></span>\n+\t<span class=\"emphasis\"><em>Missing bitwise operations</em></span>\n     </span></dt><dd><p>Add the missing operations.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#691\" target=\"_top\">691</a>:\n-        <span class=\"emphasis\"><em>const_local_iterator cbegin, cend missing from TR1</em></span>\n+\t<span class=\"emphasis\"><em>const_local_iterator cbegin, cend missing from TR1</em></span>\n     </span></dt><dd><p>In C++0x mode add cbegin(size_type) and cend(size_type)\n-\t            to the unordered containers.\n+\t\t    to the unordered containers.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#693\" target=\"_top\">693</a>:\n-        <span class=\"emphasis\"><em>std::bitset::all() missing</em></span>\n+\t<span class=\"emphasis\"><em>std::bitset::all() missing</em></span>\n     </span></dt><dd><p>Add it, consistently with the discussion.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#695\" target=\"_top\">695</a>:\n-        <span class=\"emphasis\"><em>ctype&lt;char&gt;::classic_table() not accessible</em></span>\n+\t<span class=\"emphasis\"><em>ctype&lt;char&gt;::classic_table() not accessible</em></span>\n     </span></dt><dd><p>Make the member functions table and classic_table public.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#696\" target=\"_top\">696</a>:\n-        <span class=\"emphasis\"><em>istream::operator&gt;&gt;(int&amp;) broken</em></span>\n+\t<span class=\"emphasis\"><em>istream::operator&gt;&gt;(int&amp;) broken</em></span>\n     </span></dt><dd><p>Implement the straightforward resolution.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#761\" target=\"_top\">761</a>:\n-        <span class=\"emphasis\"><em>unordered_map needs an at() member function</em></span>\n+\t<span class=\"emphasis\"><em>unordered_map needs an at() member function</em></span>\n     </span></dt><dd><p>In C++0x mode, add at() and at() const.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#775\" target=\"_top\">775</a>:\n-        <span class=\"emphasis\"><em>Tuple indexing should be unsigned?</em></span>\n+\t<span class=\"emphasis\"><em>Tuple indexing should be unsigned?</em></span>\n     </span></dt><dd><p>Implement the int -&gt; size_t replacements.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#776\" target=\"_top\">776</a>:\n-        <span class=\"emphasis\"><em>Undescribed assign function of std::array</em></span>\n+\t<span class=\"emphasis\"><em>Undescribed assign function of std::array</em></span>\n     </span></dt><dd><p>In C++0x mode, remove assign, add fill.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#781\" target=\"_top\">781</a>:\n-        <span class=\"emphasis\"><em>std::complex should add missing C99 functions</em></span>\n+\t<span class=\"emphasis\"><em>std::complex should add missing C99 functions</em></span>\n     </span></dt><dd><p>In C++0x mode, add std::proj.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#809\" target=\"_top\">809</a>:\n-        <span class=\"emphasis\"><em>std::swap should be overloaded for array types</em></span>\n+\t<span class=\"emphasis\"><em>std::swap should be overloaded for array types</em></span>\n     </span></dt><dd><p>Add the overload.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#844\" target=\"_top\">844</a>:\n-        <span class=\"emphasis\"><em>complex pow return type is ambiguous</em></span>\n+\t<span class=\"emphasis\"><em>complex pow return type is ambiguous</em></span>\n     </span></dt><dd><p>In C++0x mode, remove the pow(complex&lt;T&gt;, int) signature.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#853\" target=\"_top\">853</a>:\n-        <span class=\"emphasis\"><em>to_string needs updating with zero and one</em></span>\n+\t<span class=\"emphasis\"><em>to_string needs updating with zero and one</em></span>\n     </span></dt><dd><p>Update / add the signatures.\n     </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#865\" target=\"_top\">865</a>:\n-        <span class=\"emphasis\"><em>More algorithms that throw away information</em></span>\n+\t<span class=\"emphasis\"><em>More algorithms that throw away information</em></span>\n     </span></dt><dd><p>The traditional HP / SGI return type and value is blessed\n-                    by the resolution of the DR.\n+\t\t    by the resolution of the DR.\n     </p></dd></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"license.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"status.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"setup.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a02.\u00a0Setup</td></tr></table></div></body></html>"}, {"sha": "1e45a2582cb03ee238a7154c03d76db4d79b38b1", "filename": "libstdc++-v3/doc/html/manual/codecvt.html", "status": "removed", "additions": 0, "deletions": 379, "changes": 379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcodecvt.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcodecvt.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcodecvt.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,379 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>codecvt</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      codecvt&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"facets.html\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\" /><link rel=\"prev\" href=\"facets.html\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\" /><link rel=\"next\" href=\"messages.html\" title=\"messages\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">codecvt</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a015.\u00a0Facets aka Categories</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"messages.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"codecvt\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.facet.codecvt\"></a>codecvt</h2></div></div></div><p>\n-The standard class codecvt attempts to address conversions between\n-different character encoding schemes. In particular, the standard\n-attempts to detail conversions between the implementation-defined wide\n-characters (hereafter referred to as wchar_t) and the standard type\n-char that is so beloved in classic <span class=\"quote\">\u201c<span class=\"quote\">C</span>\u201d</span> (which can now be\n-referred to as narrow characters.)  This document attempts to describe\n-how the GNU libstdc++ implementation deals with the conversion between\n-wide and narrow characters, and also presents a framework for dealing\n-with the huge number of other encodings that iconv can convert,\n-including Unicode and UTF8. Design issues and requirements are\n-addressed, and examples of correct usage for both the required\n-specializations for wide and narrow characters and the\n-implementation-provided extended functionality are given.\n-</p><div class=\"sect2\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.req\"></a>Requirements</h3></div></div></div><p>\n-Around page 425 of the C++ Standard, this charming heading comes into view:\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-22.2.1.5 - Template class codecvt\n-</p></blockquote></div><p>\n-The text around the codecvt definition gives some clues:\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--1- The class codecvt&lt;internT,externT,stateT&gt; is for use when\n-converting from one codeset to another, such as from wide characters\n-to multibyte characters, between wide character encodings such as\n-Unicode and EUC. \n-</em></span>\n-</p></blockquote></div><p> \n-Hmm. So, in some unspecified way, Unicode encodings and\n-translations between other character sets should be handled by this\n-class.  \n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--2- The stateT argument selects the pair of codesets being mapped between. \n-</em></span>\n-</p></blockquote></div><p>\n-Ah ha! Another clue...\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--3- The instantiations required in the Table ??\n-(lib.locale.category), namely codecvt&lt;wchar_t,char,mbstate_t&gt; and\n-codecvt&lt;char,char,mbstate_t&gt;, convert the implementation-defined\n-native character set. codecvt&lt;char,char,mbstate_t&gt; implements a\n-degenerate conversion; it does not convert at\n-all. codecvt&lt;wchar_t,char,mbstate_t&gt; converts between the native\n-character sets for tiny and wide characters. Instantiations on\n-mbstate_t perform conversion between encodings known to the library\n-implementor.  Other encodings can be converted by specializing on a\n-user-defined stateT type. The stateT object can contain any state that\n-is useful to communicate to or from the specialized do_convert member.\n-</em></span>\n-</p></blockquote></div><p>\n-At this point, a couple points become clear:\n-</p><p>\n-One: The standard clearly implies that attempts to add non-required\n-(yet useful and widely used) conversions need to do so through the\n-third template parameter, stateT.</p><p>\n-Two: The required conversions, by specifying mbstate_t as the third\n-template parameter, imply an implementation strategy that is mostly\n-(or wholly) based on the underlying C library, and the functions\n-mcsrtombs and wcsrtombs in particular.</p></div><div class=\"sect2\" title=\"Design\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.design\"></a>Design</h3></div></div></div><div class=\"sect3\" title=\"wchar_t Size\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"codecvt.design.wchar_t_size\"></a><span class=\"type\">wchar_t</span> Size</h4></div></div></div><p>\n-      The simple implementation detail of wchar_t's size seems to\n-      repeatedly confound people. Many systems use a two byte,\n-      unsigned integral type to represent wide characters, and use an\n-      internal encoding of Unicode or UCS2. (See AIX, Microsoft NT,\n-      Java, others.) Other systems, use a four byte, unsigned integral\n-      type to represent wide characters, and use an internal encoding\n-      of UCS4. (GNU/Linux systems using glibc, in particular.) The C\n-      programming language (and thus C++) does not specify a specific\n-      size for the type wchar_t.\n-    </p><p>\n-      Thus, portable C++ code cannot assume a byte size (or endianness) either.\n-    </p></div><div class=\"sect3\" title=\"Support for Unicode\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"codecvt.design.unicode\"></a>Support for Unicode</h4></div></div></div><p>\n-    Probably the most frequently asked question about code conversion\n-    is: \"So dudes, what's the deal with Unicode strings?\"\n-    The dude part is optional, but apparently the usefulness of\n-    Unicode strings is pretty widely appreciated. Sadly, this specific\n-    encoding (And other useful encodings like UTF8, UCS4, ISO 8859-10,\n-    etc etc etc) are not mentioned in the C++ standard.\n-  </p><p>\n-    A couple of comments:\n-  </p><p>\n-    The thought that all one needs to convert between two arbitrary\n-    codesets is two types and some kind of state argument is\n-    unfortunate. In particular, encodings may be stateless. The naming\n-    of the third parameter as stateT is unfortunate, as what is really\n-    needed is some kind of generalized type that accounts for the\n-    issues that abstract encodings will need. The minimum information\n-    that is required includes:\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-\tIdentifiers for each of the codesets involved in the\n-\tconversion. For example, using the iconv family of functions\n-\tfrom the Single Unix Specification (what used to be called\n-\tX/Open) hosted on the GNU/Linux operating system allows\n-\tbi-directional mapping between far more than the following\n-\ttantalizing possibilities:\n-      </p><p>\n-\t(An edited list taken from <code class=\"code\">`iconv --list`</code> on a\n-\tRed Hat 6.2/Intel system:\n-      </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n-8859_1, 8859_9, 10646-1:1993, 10646-1:1993/UCS4, ARABIC, ARABIC7,\n-ASCII, EUC-CN, EUC-JP, EUC-KR, EUC-TW, GREEK-CCIcode, GREEK, GREEK7-OLD,\n-GREEK7, GREEK8, HEBREW, ISO-8859-1, ISO-8859-2, ISO-8859-3,\n-ISO-8859-4, ISO-8859-5, ISO-8859-6, ISO-8859-7, ISO-8859-8,\n-ISO-8859-9, ISO-8859-10, ISO-8859-11, ISO-8859-13, ISO-8859-14,\n-ISO-8859-15, ISO-10646, ISO-10646/UCS2, ISO-10646/UCS4,\n-ISO-10646/UTF-8, ISO-10646/UTF8, SHIFT-JIS, SHIFT_JIS, UCS-2, UCS-4,\n-UCS2, UCS4, UNICODE, UNICODEBIG, UNICODELIcodeLE, US-ASCII, US, UTF-8,\n-UTF-16, UTF8, UTF16).\n-</pre></blockquote></div><p>\n-For iconv-based implementations, string literals for each of the\n-encodings (i.e. \"UCS-2\" and \"UTF-8\") are necessary,\n-although for other,\n-non-iconv implementations a table of enumerated values or some other\n-mechanism may be required.\n-</p></li><li class=\"listitem\"><p>\n- Maximum length of the identifying string literal.\n-</p></li><li class=\"listitem\"><p>\n- Some encodings require explicit endian-ness. As such, some kind\n-  of endian marker or other byte-order marker will be necessary. See\n-  \"Footnotes for C/C++ developers\" in Haible for more information on\n-  UCS-2/Unicode endian issues. (Summary: big endian seems most likely,\n-  however implementations, most notably Microsoft, vary.)\n-</p></li><li class=\"listitem\"><p>\n- Types representing the conversion state, for conversions involving\n-  the machinery in the \"C\" library, or the conversion descriptor, for\n-  conversions using iconv (such as the type iconv_t.)  Note that the\n-  conversion descriptor encodes more information than a simple encoding\n-  state type.\n-</p></li><li class=\"listitem\"><p>\n- Conversion descriptors for both directions of encoding. (i.e., both\n-  UCS-2 to UTF-8 and UTF-8 to UCS-2.)\n-</p></li><li class=\"listitem\"><p>\n- Something to indicate if the conversion requested if valid.\n-</p></li><li class=\"listitem\"><p>\n- Something to represent if the conversion descriptors are valid.\n-</p></li><li class=\"listitem\"><p>\n- Some way to enforce strict type checking on the internal and\n-  external types. As part of this, the size of the internal and\n-  external types will need to be known.\n-</p></li></ul></div></div><div class=\"sect3\" title=\"Other Issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"codecvt.design.issues\"></a>Other Issues</h4></div></div></div><p>\n-In addition, multi-threaded and multi-locale environments also impact\n-the design and requirements for code conversions. In particular, they\n-affect the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt;\n-when implemented using standard \"C\" functions.\n-</p><p>\n-Three problems arise, one big, one of medium importance, and one small. \n-</p><p>\n-First, the small: mcsrtombs and wcsrtombs may not be multithread-safe\n-on all systems required by the GNU tools. For GNU/Linux and glibc,\n-this is not an issue.\n-</p><p>\n-Of medium concern, in the grand scope of things, is that the functions\n-used to implement this specialization work on null-terminated\n-strings. Buffers, especially file buffers, may not be null-terminated,\n-thus giving conversions that end prematurely or are otherwise\n-incorrect. Yikes!\n-</p><p>\n-The last, and fundamental problem, is the assumption of a global\n-locale for all the \"C\" functions referenced above. For something like\n-C++ iostreams (where codecvt is explicitly used) the notion of\n-multiple locales is fundamental. In practice, most users may not run\n-into this limitation. However, as a quality of implementation issue,\n-the GNU C++ library would like to offer a solution that allows\n-multiple locales and or simultaneous usage with computationally\n-correct results. In short, libstdc++ is trying to offer, as an\n-option, a high-quality implementation, damn the additional complexity!\n-</p><p>\n-For the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt; ,\n-conversions are made between the internal character set (always UCS4\n-on GNU/Linux) and whatever the currently selected locale for the\n-LC_CTYPE category implements.\n-</p></div></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.impl\"></a>Implementation</h3></div></div></div><p>\n-The two required specializations are implemented as follows:\n-</p><p>\n-<code class=\"code\">\n-codecvt&lt;char, char, mbstate_t&gt;\n-</code>\n-</p><p>\n-This is a degenerate (i.e., does nothing) specialization. Implementing\n-this was a piece of cake.\n-</p><p>\n-<code class=\"code\">\n-codecvt&lt;char, wchar_t, mbstate_t&gt;\n-</code>\n-</p><p>\n-This specialization, by specifying all the template parameters, pretty\n-much ties the hands of implementors. As such, the implementation is\n-straightforward, involving mcsrtombs for the conversions between char\n-to wchar_t and wcsrtombs for conversions between wchar_t and char.\n-</p><p>\n-Neither of these two required specializations deals with Unicode\n-characters. As such, libstdc++ implements a partial specialization\n-of the codecvt class with and iconv wrapper class, encoding_state as the\n-third template parameter.\n-</p><p>\n-This implementation should be standards conformant. First of all, the\n-standard explicitly points out that instantiations on the third\n-template parameter, stateT, are the proper way to implement\n-non-required conversions. Second of all, the standard says (in Chapter\n-17) that partial specializations of required classes are a-ok. Third\n-of all, the requirements for the stateT type elsewhere in the standard\n-(see 21.1.2 traits typedefs) only indicate that this type be copy\n-constructible.\n-</p><p>\n-As such, the type encoding_state is defined as a non-templatized, POD\n-type to be used as the third type of a codecvt instantiation. This\n-type is just a wrapper class for iconv, and provides an easy interface\n-to iconv functionality.\n-</p><p>\n-There are two constructors for encoding_state:\n-</p><p>\n-<code class=\"code\"> \n-encoding_state() : __in_desc(0), __out_desc(0)\n-</code>\n-</p><p>\n-This default constructor sets the internal encoding to some default\n-(currently UCS4) and the external encoding to whatever is returned by\n-nl_langinfo(CODESET).\n-</p><p>\n-<code class=\"code\"> \n-encoding_state(const char* __int, const char* __ext)\n-</code>\n-</p><p>\n-This constructor takes as parameters string literals that indicate the\n-desired internal and external encoding. There are no defaults for\n-either argument.\n-</p><p>\n-One of the issues with iconv is that the string literals identifying\n-conversions are not standardized. Because of this, the thought of\n-mandating and or enforcing some set of pre-determined valid\n-identifiers seems iffy: thus, a more practical (and non-migraine\n-inducing) strategy was implemented: end-users can specify any string\n-(subject to a pre-determined length qualifier, currently 32 bytes) for\n-encodings. It is up to the user to make sure that these strings are\n-valid on the target system.\n-</p><p>\n-<code class=\"code\"> \n-void\n-_M_init()\n-</code>\n-</p><p>\n-Strangely enough, this member function attempts to open conversion\n-descriptors for a given encoding_state object. If the conversion\n-descriptors are not valid, the conversion descriptors returned will\n-not be valid and the resulting calls to the codecvt conversion\n-functions will return error.\n-</p><p>\n-<code class=\"code\"> \n-bool\n-_M_good()\n-</code>\n-</p><p>\n-Provides a way to see if the given encoding_state object has been\n-properly initialized. If the string literals describing the desired\n-internal and external encoding are not valid, initialization will\n-fail, and this will return false. If the internal and external\n-encodings are valid, but iconv_open could not allocate conversion\n-descriptors, this will also return false. Otherwise, the object is\n-ready to convert and will return true.\n-</p><p>\n-<code class=\"code\"> \n-encoding_state(const encoding_state&amp;)\n-</code>\n-</p><p>\n-As iconv allocates memory and sets up conversion descriptors, the copy\n-constructor can only copy the member data pertaining to the internal\n-and external code conversions, and not the conversion descriptors\n-themselves.\n-</p><p>\n-Definitions for all the required codecvt member functions are provided\n-for this specialization, and usage of codecvt&lt;internal character type,\n-external character type, encoding_state&gt; is consistent with other\n-codecvt usage.\n-</p></div><div class=\"sect2\" title=\"Use\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.use\"></a>Use</h3></div></div></div><p>A conversions involving string literal.</p><pre class=\"programlisting\">\n-  typedef codecvt_base::result                  result;\n-  typedef unsigned short                        unicode_t;\n-  typedef unicode_t                             int_type;\n-  typedef char                                  ext_type;\n-  typedef encoding_state                          state_type;\n-  typedef codecvt&lt;int_type, ext_type, state_type&gt; unicode_codecvt;\n-\n-  const ext_type*       e_lit = \"black pearl jasmine tea\";\n-  int                   size = strlen(e_lit);\n-  int_type              i_lit_base[24] = \n-  { 25088, 27648, 24832, 25344, 27392, 8192, 28672, 25856, 24832, 29184, \n-    27648, 8192, 27136, 24832, 29440, 27904, 26880, 28160, 25856, 8192, 29696,\n-    25856, 24832, 2560\n-  };\n-  const int_type*       i_lit = i_lit_base;\n-  const ext_type*       efrom_next;\n-  const int_type*       ifrom_next;\n-  ext_type*             e_arr = new ext_type[size + 1];\n-  ext_type*             eto_next;\n-  int_type*             i_arr = new int_type[size + 1];\n-  int_type*             ito_next;\n-\n-  // construct a locale object with the specialized facet.\n-  locale                loc(locale::classic(), new unicode_codecvt);\n-  // sanity check the constructed locale has the specialized facet.\n-  VERIFY( has_facet&lt;unicode_codecvt&gt;(loc) );\n-  const unicode_codecvt&amp; cvt = use_facet&lt;unicode_codecvt&gt;(loc); \n-  // convert between const char* and unicode strings\n-  unicode_codecvt::state_type state01(\"UNICODE\", \"ISO_8859-1\");\n-  initialize_state(state01);\n-  result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next, \n-                     i_arr, i_arr + size, ito_next);\n-  VERIFY( r1 == codecvt_base::ok );\n-  VERIFY( !int_traits::compare(i_arr, i_lit, size) ); \n-  VERIFY( efrom_next == e_lit + size );\n-  VERIFY( ito_next == i_arr + size );\n-</pre></div><div class=\"sect2\" title=\"Future\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-   a. things that are sketchy, or remain unimplemented:\n-      do_encoding, max_length and length member functions\n-      are only weakly implemented. I have no idea how to do\n-      this correctly, and in a generic manner.  Nathan?\n-</p></li><li class=\"listitem\"><p>\n-   b. conversions involving std::string\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n-      how should operators != and == work for string of\n-      different/same encoding?\n-      </p></li><li class=\"listitem\"><p>\n-      what is equal? A byte by byte comparison or an\n-      encoding then byte comparison?\n-      </p></li><li class=\"listitem\"><p>\n-      conversions between narrow, wide, and unicode strings\n-      </p></li></ul></div></li><li class=\"listitem\"><p>\n-   c. conversions involving std::filebuf and std::ostream\n-</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n-      how to initialize the state object in a\n-      standards-conformant manner?\n-      </p></li><li class=\"listitem\"><p>\n-      how to synchronize the \"C\" and \"C++\"\n-      conversion information?\n-      </p></li><li class=\"listitem\"><p>\n-      wchar_t/char internal buffers and conversions between\n-      internal/external buffers?\n-      </p></li></ul></div></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.codecvt.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id686680\"></a><p><span class=\"title\"><i>\n-      The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6 Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id693504\"></a><p><span class=\"title\"><i>\n-      Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id612636\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id612655\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\" title=\"The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\"><a id=\"id699030\"></a><p><span class=\"title\"><i>\n-      The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.unix.org/version3/ieee_std.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id699056\"></a><p><span class=\"title\"><i>\n-      The C++ Programming Language, Special Edition\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id698403\"></a><p><span class=\"title\"><i>\n-      Standard C++ IOStreams and Locales\n-    </i>. </span><span class=\"subtitle\">\n-      Advanced Programmer's Guide and Reference\n-    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley Longman\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"A brief description of Normative Addendum 1\"><a id=\"id661653\"></a><p><span class=\"title\"><i>\n-      A brief description of Normative Addendum 1\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Clive</span> <span class=\"surname\">Feather</span>. </span><span class=\"pagenums\">Extended Character Sets. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.lysator.liu.se/c/na1.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The Unicode HOWTO\"><a id=\"id661684\"></a><p><span class=\"title\"><i>\n-      The Unicode HOWTO\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bruno</span> <span class=\"surname\">Haible</span>. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://tldp.org/HOWTO/Unicode-HOWTO.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"UTF-8 and Unicode FAQ for Unix/Linux\"><a id=\"id662453\"></a><p><span class=\"title\"><i>\n-      UTF-8 and Unicode FAQ for Unix/Linux\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Markus</span> <span class=\"surname\">Khun</span>. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.cl.cam.ac.uk/~mgk25/unicode.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"facets.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"messages.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a015.\u00a0Facets aka Categories\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0messages</td></tr></table></div></body></html>"}, {"sha": "cb82e609eabf39364f33e8d36d45447de929824e", "filename": "libstdc++-v3/doc/html/manual/complex.html", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcomplex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcomplex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcomplex.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a021.\u00a0Complex</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0 Numerics\" /><link rel=\"prev\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0 Numerics\" /><link rel=\"next\" href=\"generalized_numeric_operations.html\" title=\"Chapter\u00a022.\u00a0Generalized Operations\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a021.\u00a0Complex</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0\n-  Numerics\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"generalized_numeric_operations.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a021.\u00a0Complex\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.complex\"></a>Chapter\u00a021.\u00a0Complex</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"complex.html#numerics.complex.processing\">complex Processing</a></span></dt></dl></div><p>\n-  </p><div class=\"sect1\" title=\"complex Processing\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"numerics.complex.processing\"></a>complex Processing</h2></div></div></div><p>\n-    </p><p>Using <code class=\"code\">complex&lt;&gt;</code> becomes even more comple- er, sorry,\n-      <span class=\"emphasis\"><em>complicated</em></span>, with the not-quite-gratuitously-incompatible\n-      addition of complex types to the C language.  David Tribble has\n-      compiled a list of C++98 and C99 conflict points; his description of\n-      C's new type versus those of C++ and how to get them playing together\n-      nicely is\n-<a class=\"ulink\" href=\"http://david.tribble.com/text/cdiffs.htm#C99-complex\" target=\"_top\">here</a>.\n-   </p><p><code class=\"code\">complex&lt;&gt;</code> is intended to be instantiated with a\n-      floating-point type.  As long as you meet that and some other basic\n-      requirements, then the resulting instantiation has all of the usual\n-      math operators defined, as well as definitions of <code class=\"code\">op&lt;&lt;</code>\n-      and <code class=\"code\">op&gt;&gt;</code> that work with iostreams: <code class=\"code\">op&lt;&lt;</code>\n-      prints <code class=\"code\">(u,v)</code> and <code class=\"code\">op&gt;&gt;</code> can read <code class=\"code\">u</code>,\n-      <code class=\"code\">(u)</code>, and <code class=\"code\">(u,v)</code>.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"generalized_numeric_operations.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0X.\u00a0\n-  Numerics\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a022.\u00a0Generalized Operations</td></tr></table></div></body></html>"}, {"sha": "86de72e9c04fba01b15a2a82ee8fe452acfc0087", "filename": "libstdc++-v3/doc/html/manual/concurrency.html", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a015.\u00a0 Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    , &#10;      mutex&#10;    , &#10;      thread&#10;    , &#10;      future&#10;    , &#10;      condition_variable&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"atomics.html\" title=\"Chapter\u00a014.\u00a0 Atomics\" /><link rel=\"next\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a015.\u00a0\n+  Concurrency\n+  \n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"atomics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"extensions.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a015.\u00a0 Concurrency\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.concurrency\"></a>Chapter\u00a015.\u00a0\n+  Concurrency\n+  <a id=\"id397655\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"concurrency.html#std.concurrency.api\">API Reference</a></span></dt></dl></div><p>\n+  Facilities for concurrent operation, and control thereof.\n+</p><div class=\"sect1\" title=\"API Reference\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.concurrency.api\"></a>API Reference</h2></div></div></div><p>\n+    All items are declared in one of four standard header files.\n+  </p><p>\n+    In header <code class=\"filename\">mutex</code>, class\n+    template <code class=\"classname\">mutex</code> and variants,\n+    class <code class=\"classname\">once_flag</code>, and class\n+    template <code class=\"classname\">unique_lock</code>.\n+  </p><p>\n+    In header <code class=\"filename\">condition_variable</code>,\n+    classes <code class=\"classname\">condition_variable</code>\n+    and <code class=\"classname\">condition_variable_any</code>.\n+  </p><p>\n+    In header <code class=\"filename\">thread</code>,\n+    class <code class=\"classname\">thread</code> and\n+    namespace <code class=\"code\">this_thread</code>.\n+  </p><p>\n+    In header <code class=\"filename\">future</code>, class\n+    template <code class=\"classname\">future</code> and class\n+    template <code class=\"classname\">shared_future</code>, class\n+    template <code class=\"classname\">promise</code>,\n+    and <code class=\"classname\">packaged_task</code>.\n+  </p><p>\n+    Full API details.\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"atomics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"extensions.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a014.\u00a0\n+  Atomics\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0III.\u00a0\n+  Extensions\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "47f58f47f891ccbf8b9eb67a260440ef68053522", "filename": "libstdc++-v3/doc/html/manual/configure.html", "status": "modified", "additions": 129, "deletions": 129, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -19,186 +19,186 @@\n    available for a given set of libstdc++ sources is to go to the\n    source directory and then type:<span class=\"command\"><strong>./configure --help</strong></span>.\n </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"code\">--enable-multilib</code>[default]</span></dt><dd><p>This is part of the generic multilib support for building cross\n-        compilers.  As such, targets like \"powerpc-elf\" will have\n-        libstdc++ built many different ways:  \"-msoft-float\"\n-        and not, etc.  A different libstdc++ will be built for each of\n-        the different multilib versions.  This option is on by default.\n+\tcompilers.  As such, targets like \"powerpc-elf\" will have\n+\tlibstdc++ built many different ways:  \"-msoft-float\"\n+\tand not, etc.  A different libstdc++ will be built for each of\n+\tthe different multilib versions.  This option is on by default.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-sjlj-exceptions</code></span></dt><dd><p>Forces old, set-jump/long-jump exception handling model.  If\n-        at all possible, the new, frame unwinding exception handling routines\n-        should be used instead, as they significantly reduce both\n-        runtime memory usage and executable size. This option can\n-        change the library ABI.\n+\tat all possible, the new, frame unwinding exception handling routines\n+\tshould be used instead, as they significantly reduce both\n+\truntime memory usage and executable size. This option can\n+\tchange the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-version-specific-runtime-libs</code></span></dt><dd><p>Specify that run-time libraries should be installed in the\n-        compiler-specific subdirectory (i.e.,\n-        <code class=\"code\">${libdir}/gcc-lib/${target_alias}/${gcc_version}</code>)\n-        instead of <code class=\"code\">${libdir}</code>.  This option is useful if you\n-        intend to use several versions of gcc in parallel.  In addition,\n-        libstdc++'s include files will be installed in\n-        <code class=\"code\">${libdir}/gcc-lib/${target_alias}/${gcc_version}/include/g++</code>,\n-        unless you also specify\n+\tcompiler-specific subdirectory (i.e.,\n+\t<code class=\"code\">${libdir}/gcc-lib/${target_alias}/${gcc_version}</code>)\n+\tinstead of <code class=\"code\">${libdir}</code>.  This option is useful if you\n+\tintend to use several versions of gcc in parallel.  In addition,\n+\tlibstdc++'s include files will be installed in\n+\t<code class=\"code\">${libdir}/gcc-lib/${target_alias}/${gcc_version}/include/g++</code>,\n+\tunless you also specify\n        <code class=\"literal\">--with-gxx-include-dir=<code class=\"filename\">dirname</code></code> during configuration.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--with-gxx-include-dir=&lt;include-files dir&gt;</code></span></dt><dd><p>Adds support for named libstdc++ include directory.  For instance,\n-        the following puts all the libstdc++ headers into a directory\n-        called \"4.4-20090404\" instead of the usual\n-        \"c++/(version)\".\n+\tthe following puts all the libstdc++ headers into a directory\n+\tcalled \"4.4-20090404\" instead of the usual\n+\t\"c++/(version)\".\n      </p><pre class=\"programlisting\">\n    --with-gxx-include-dir=/foo/H-x86-gcc-3-c-gxx-inc/include/4.4-20090404</pre></dd><dt><span class=\"term\"><code class=\"code\">--enable-cstdio</code></span></dt><dd><p>This is an abbreviated form of <code class=\"code\">'--enable-cstdio=stdio'</code>\n-        (described next). \n+\t(described next).\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-cstdio=OPTION</code></span></dt><dd><p>Select a target-specific I/O package. At the moment, the only\n-        choice is to use 'stdio', a generic \"C\" abstraction.\n-        The default is 'stdio'. This option can change the library ABI.\n+\tchoice is to use 'stdio', a generic \"C\" abstraction.\n+\tThe default is 'stdio'. This option can change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-clocale</code></span></dt><dd><p>This is an abbreviated form of <code class=\"code\">'--enable-clocale=generic'</code>\n-        (described next). \n+\t(described next).\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-clocale=OPTION</code></span></dt><dd><p>Select a target-specific underlying locale package.  The\n-        choices are 'ieee_1003.1-2001' to specify an X/Open, Standard Unix\n-        (IEEE Std. 1003.1-2001) model based on langinfo/iconv/catgets,\n-        'gnu' to specify a model based on functionality from the GNU C\n-        library (langinfo/iconv/gettext) (from <a class=\"ulink\" href=\"http://sources.redhat.com/glibc/\" target=\"_top\">glibc</a>, the GNU C\n-        library), or 'generic' to use a generic \"C\"\n-        abstraction which consists of \"C\" locale info.\n+\tchoices are 'ieee_1003.1-2001' to specify an X/Open, Standard Unix\n+\t(IEEE Std. 1003.1-2001) model based on langinfo/iconv/catgets,\n+\t'gnu' to specify a model based on functionality from the GNU C\n+\tlibrary (langinfo/iconv/gettext) (from <a class=\"ulink\" href=\"http://sources.redhat.com/glibc/\" target=\"_top\">glibc</a>, the GNU C\n+\tlibrary), or 'generic' to use a generic \"C\"\n+\tabstraction which consists of \"C\" locale info.\n      </p><p>If not explicitly specified, the configure proccess tries\n       to guess the most suitable package from the choices above. The\n       default is 'generic'. On glibc-based systems of sufficient\n       vintage (2.2.5 and newer) and capability (with installed DE and\n       FR locale data), 'gnu' is automatically selected. This option\n       can change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-allocator</code></span></dt><dd><p>This is an abbreviated form of\n-        <code class=\"code\">'--enable-libstdcxx-allocator=auto'</code> (described\n-        next). \n+\t<code class=\"code\">'--enable-libstdcxx-allocator=auto'</code> (described\n+\tnext).\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-allocator=OPTION  </code></span></dt><dd><p>Select a target-specific underlying std::allocator.  The\n-        choices are 'new' to specify a wrapper for new, 'malloc' to\n-        specify a wrapper for malloc, 'mt' for a fixed power of two allocator,\n+\tchoices are 'new' to specify a wrapper for new, 'malloc' to\n+\tspecify a wrapper for malloc, 'mt' for a fixed power of two allocator,\n \t'pool' for the SGI pooled allocator or 'bitmap' for a bitmap allocator.\n-\tSee this page for more information on allocator \n-        <a class=\"link\" href=\"memory.html#allocator.ext\" title=\"Extension Allocators\">extensions</a>. This option\n-        can change the library ABI.\n+\tSee this page for more information on allocator\n+\t<a class=\"link\" href=\"memory.html#allocator.ext\" title=\"Extension Allocators\">extensions</a>. This option\n+\tcan change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-cheaders=OPTION</code></span></dt><dd><p>This allows the user to define the approach taken for C header\n-        compatibility with C++. Options are c, c_std, and c_global.\n-        These correspond to the source directory's include/c,\n-        include/c_std, and include/c_global, and may also include\n-        include/c_compatibility.  The default is 'c_global'.\n+\tcompatibility with C++. Options are c, c_std, and c_global.\n+\tThese correspond to the source directory's include/c,\n+\tinclude/c_std, and include/c_global, and may also include\n+\tinclude/c_compatibility.  The default is 'c_global'.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-threads</code></span></dt><dd><p>This is an abbreviated form of <code class=\"code\">'--enable-threads=yes'</code>\n-        (described next). \n+\t(described next).\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-threads=OPTION</code></span></dt><dd><p>Select a threading library.  A full description is\n-        given in the\n-        general <a class=\"ulink\" href=\"http://gcc.gnu.org/install/configure.html\" target=\"_top\">compiler\n-        configuration instructions</a>. This option can change the\n-        library ABI.\n+\tgiven in the\n+\tgeneral <a class=\"ulink\" href=\"http://gcc.gnu.org/install/configure.html\" target=\"_top\">compiler\n+\tconfiguration instructions</a>. This option can change the\n+\tlibrary ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-debug</code></span></dt><dd><p>Build separate debug libraries in addition to what is normally built.\n-        By default, the debug libraries are compiled with \n-        <code class=\"code\"> CXXFLAGS='-g3 -O0 -fno-inline'</code>\n-        , are installed in <code class=\"code\">${libdir}/debug</code>, and have the\n-        same names and versioning information as the non-debug\n-        libraries. This option is off by default.\n+\tBy default, the debug libraries are compiled with\n+\t<code class=\"code\"> CXXFLAGS='-g3 -O0 -fno-inline'</code>\n+\t, are installed in <code class=\"code\">${libdir}/debug</code>, and have the\n+\tsame names and versioning information as the non-debug\n+\tlibraries. This option is off by default.\n      </p><p>Note this make command, executed in\n-        the build directory, will do much the same thing, without the\n-        configuration difference and without building everything twice: \n-        <code class=\"code\">make CXXFLAGS='-g3 -O0 -fno-inline' all</code>\n+\tthe build directory, will do much the same thing, without the\n+\tconfiguration difference and without building everything twice:\n+\t<code class=\"code\">make CXXFLAGS='-g3 -O0 -fno-inline' all</code>\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-debug-flags=FLAGS</code></span></dt><dd><p>This option is only valid when <code class=\"code\"> --enable-debug </code>\n-        is also specified, and applies to the debug builds only. With\n-        this option, you can pass a specific string of flags to the\n-        compiler to use when building the debug versions of libstdc++.\n-        FLAGS is a quoted string of options, like\n+\tis also specified, and applies to the debug builds only. With\n+\tthis option, you can pass a specific string of flags to the\n+\tcompiler to use when building the debug versions of libstdc++.\n+\tFLAGS is a quoted string of options, like\n      </p><pre class=\"programlisting\">\n   --enable-libstdcxx-debug-flags='-g3 -O1 -fno-inline'</pre></dd><dt><span class=\"term\"><code class=\"code\">--enable-cxx-flags=FLAGS</code></span></dt><dd><p>With this option, you can pass a string of -f (functionality)\n-        flags to the compiler to use when building libstdc++. This\n-        option can change the library ABI. FLAGS is a quoted string of\n-        options, like\n+\tflags to the compiler to use when building libstdc++. This\n+\toption can change the library ABI. FLAGS is a quoted string of\n+\toptions, like\n      </p><pre class=\"programlisting\">\n   --enable-cxx-flags='-fvtable-gc -fomit-frame-pointer -ansi'</pre><p>\n-        Note that the flags don't necessarily have to all be -f flags,\n-        as shown, but usually those are the ones that will make sense\n-        for experimentation and configure-time overriding.\n+\tNote that the flags don't necessarily have to all be -f flags,\n+\tas shown, but usually those are the ones that will make sense\n+\tfor experimentation and configure-time overriding.\n      </p><p>The advantage of --enable-cxx-flags over setting CXXFLAGS in\n-        the 'make' environment is that, if files are automatically\n-        rebuilt, the same flags will be used when compiling those files\n-        as well, so that everything matches.\n+\tthe 'make' environment is that, if files are automatically\n+\trebuilt, the same flags will be used when compiling those files\n+\tas well, so that everything matches.\n      </p><p>Fun flags to try might include combinations of\n      </p><pre class=\"programlisting\">\n   -fstrict-aliasing\n   -fno-exceptions\n   -ffunction-sections\n   -fvtable-gc</pre><p>and opposite forms (-fno-) of the same.  Tell us (the libstdc++\n-        mailing list) if you discover more!\n+\tmailing list) if you discover more!\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-c99</code></span></dt><dd><p>The \"long long\" type was introduced in C99, along\n-        with many other functions for wide characters, and math\n-        classification macros, etc.  If enabled, all C99 functions not\n-        specified by the C++ standard will be put into <code class=\"code\">namespace\n-        __gnu_cxx</code>, and then all these names will\n-        be injected into namespace std, so that C99 functions can be\n-        used \"as if\" they were in the C++ standard (as they\n-        will eventually be in some future revision of the standard,\n-        without a doubt).  By default, C99 support is on, assuming the\n-        configure probes find all the necessary functions and bits\n-        necessary. This option can change the library ABI.\n+\twith many other functions for wide characters, and math\n+\tclassification macros, etc.  If enabled, all C99 functions not\n+\tspecified by the C++ standard will be put into <code class=\"code\">namespace\n+\t__gnu_cxx</code>, and then all these names will\n+\tbe injected into namespace std, so that C99 functions can be\n+\tused \"as if\" they were in the C++ standard (as they\n+\twill eventually be in some future revision of the standard,\n+\twithout a doubt).  By default, C99 support is on, assuming the\n+\tconfigure probes find all the necessary functions and bits\n+\tnecessary. This option can change the library ABI.\n     </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-wchar_t</code>[default]</span></dt><dd><p>Template specializations for the \"wchar_t\" type are\n-        required for wide character conversion support.  Disabling\n-        wide character specializations may be expedient for initial\n-        porting efforts, but builds only a subset of what is required by\n-        ISO, and is not recommended.  By default, this option is on.\n-        This option can change the library ABI.\n+\trequired for wide character conversion support.  Disabling\n+\twide character specializations may be expedient for initial\n+\tporting efforts, but builds only a subset of what is required by\n+\tISO, and is not recommended.  By default, this option is on.\n+\tThis option can change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-long-long  </code></span></dt><dd><p>The \"long long\" type was introduced in C99.  It is\n-        provided as a GNU extension to C++98 in g++.  This flag builds\n-        support for \"long long\" into the library (specialized\n-        templates and the like for iostreams).  This option is on by default:\n-        if enabled, users will have to either use the new-style \"C\"\n-        headers by default (i.e., &lt;cmath&gt; not &lt;math.h&gt;)\n-        or add appropriate compile-time flags to all compile lines to\n-        allow \"C\" visibility of this feature (on GNU/Linux,\n-        the flag is -D_ISOC99_SOURCE, which is added automatically via\n-        CPLUSPLUS_CPP_SPEC's addition of _GNU_SOURCE).\n-        This option can change the library ABI. \n+\tprovided as a GNU extension to C++98 in g++.  This flag builds\n+\tsupport for \"long long\" into the library (specialized\n+\ttemplates and the like for iostreams).  This option is on by default:\n+\tif enabled, users will have to either use the new-style \"C\"\n+\theaders by default (i.e., &lt;cmath&gt; not &lt;math.h&gt;)\n+\tor add appropriate compile-time flags to all compile lines to\n+\tallow \"C\" visibility of this feature (on GNU/Linux,\n+\tthe flag is -D_ISOC99_SOURCE, which is added automatically via\n+\tCPLUSPLUS_CPP_SPEC's addition of _GNU_SOURCE).\n+\tThis option can change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-fully-dynamic-string</code></span></dt><dd><p>This option enables a special version of basic_string avoiding\n-        the optimization that allocates empty objects in static memory.\n+\tthe optimization that allocates empty objects in static memory.\n \tMostly useful together with shared memory allocators, see PR\n \tlibstdc++/16612 for details.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-concept-checks</code></span></dt><dd><p>This turns on additional compile-time checks for instantiated\n-        library templates, in the form of specialized templates,\n-        <a class=\"link\" href=\"bk01pt03ch08.html\" title=\"Chapter\u00a08.\u00a0Concept Checking\">described here</a>.  They\n-        can help users discover when they break the rules of the STL, before\n-        their programs run.\n+\tlibrary templates, in the form of specialized templates,\n+\t<a class=\"link\" href=\"bk01pt02ch05s02.html\" title=\"Concept Checking\">described here</a>.  They\n+\tcan help users discover when they break the rules of the STL, before\n+\ttheir programs run.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-symvers[=style]</code></span></dt><dd><p>In 3.1 and later, tries to turn on symbol versioning in the\n-        shared library (if a shared library has been\n-        requested). Values for 'style' that are currently supported\n-        are 'gnu', 'gnu-versioned-namespace', 'darwin', and\n-        'darwin-export'. Both gnu- options require that a recent\n-        version of the GNU linker be in use. Both darwin options are\n-        equivalent. With no style given, the configure script will try\n-        to guess correct defaults for the host system, probe to see if\n-        additional requirements are necessary and present for\n-        activation, and if so, will turn symbol versioning on. This\n-        option can change the library ABI.\n+\tshared library (if a shared library has been\n+\trequested). Values for 'style' that are currently supported\n+\tare 'gnu', 'gnu-versioned-namespace', 'darwin', and\n+\t'darwin-export'. Both gnu- options require that a recent\n+\tversion of the GNU linker be in use. Both darwin options are\n+\tequivalent. With no style given, the configure script will try\n+\tto guess correct defaults for the host system, probe to see if\n+\tadditional requirements are necessary and present for\n+\tactivation, and if so, will turn symbol versioning on. This\n+\toption can change the library ABI.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-visibility</code></span></dt><dd><p> In 4.2 and later, enables or disables visibility attributes.\n-        If enabled (as by default), and the compiler seems capable of\n-        passing the simple sanity checks thrown at it, adjusts items\n-        in namespace std, namespace std::tr1, and namespace __gnu_cxx\n-        so that -fvisibility options work.\n+\tIf enabled (as by default), and the compiler seems capable of\n+\tpassing the simple sanity checks thrown at it, adjusts items\n+\tin namespace std, namespace std::tr1, and namespace __gnu_cxx\n+\tso that -fvisibility options work.\n     </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-pch</code></span></dt><dd><p>In 3.4 and later, tries to turn on the generation of\n-        stdc++.h.gch, a pre-compiled file including all the standard\n-        C++ includes. If enabled (as by default), and the compiler\n-        seems capable of passing the simple sanity checks thrown at\n-        it, try to build stdc++.h.gch as part of the make process. \n-        In addition, this generated file is used later on (by appending <code class=\"code\">\n-        --include bits/stdc++.h </code> to CXXFLAGS) when running the\n-        testsuite.\n+\tstdc++.h.gch, a pre-compiled file including all the standard\n+\tC++ includes. If enabled (as by default), and the compiler\n+\tseems capable of passing the simple sanity checks thrown at\n+\tit, try to build stdc++.h.gch as part of the make process.\n+\tIn addition, this generated file is used later on (by appending <code class=\"code\">\n+\t--include bits/stdc++.h </code> to CXXFLAGS) when running the\n+\ttestsuite.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--disable-hosted-libstdcxx</code></span></dt><dd><p>\n      By default, a complete <span class=\"emphasis\"><em>hosted</em></span> C++ library is\n      built.  The C++ Standard also describes a\n      <span class=\"emphasis\"><em>freestanding</em></span> environment, in which only a\n      minimal set of headers are provided.  This option builds such an\n      environment.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-time</code></span></dt><dd><p>This is an abbreviated form of\n-        <code class=\"code\">'--enable-libstdcxx-time=yes'</code>(described next).\n+\t<code class=\"code\">'--enable-libstdcxx-time=yes'</code>(described next).\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--enable-libstdcxx-time=OPTION</code></span></dt><dd><p>Enables link-type checks for the availability of the\n-        clock_gettime clocks, used in the implementation of [time.clock],\n-        and of the nanosleep and sched_yield functions, used in the\n-        implementation of [thread.thread.this] of the current C++0x draft.\n-        The choice OPTION=yes checks for the availability of the facilities\n-        in libc and libposix4.  In case of need the latter is also linked\n-        to libstdc++ as part of the build process.  OPTION=rt also searches\n-        (and, in case, links) librt.   Note that the latter is not always\n-        desirable because, in glibc, for example, in turn it triggers the\n-        linking of libpthread too, which activates locking, a large overhead\n-        for single-thread programs.  OPTION=no skips the tests completely.\n-        The default is OPTION=no.\n+\tclock_gettime clocks, used in the implementation of [time.clock],\n+\tand of the nanosleep and sched_yield functions, used in the\n+\timplementation of [thread.thread.this] of the current C++0x draft.\n+\tThe choice OPTION=yes checks for the availability of the facilities\n+\tin libc and libposix4.  In case of need the latter is also linked\n+\tto libstdc++ as part of the build process.  OPTION=rt also searches\n+\t(and, in case, links) librt.   Note that the latter is not always\n+\tdesirable because, in glibc, for example, in turn it triggers the\n+\tlinking of libpthread too, which activates locking, a large overhead\n+\tfor single-thread programs.  OPTION=no skips the tests completely.\n+\tThe default is OPTION=no.\n     </p></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"setup.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"setup.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"make.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a02.\u00a0Setup\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Make</td></tr></table></div></body></html>"}, {"sha": "4aceb1bbedc873a05e43fae47dc745a1a78c7b78", "filename": "libstdc++-v3/doc/html/manual/containers.html", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,55 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0VII.\u00a0 Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"messages.html\" title=\"messages\" /><link rel=\"next\" href=\"sequences.html\" title=\"Chapter\u00a016.\u00a0Sequences\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0VII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a09.\u00a0 Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"facets.html\" title=\"Facets\" /><link rel=\"next\" href=\"associative.html\" title=\"Associative\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a09.\u00a0\n   Containers\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"messages.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"sequences.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0VII.\u00a0 Containers\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.containers\"></a>Part\u00a0VII.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"associative.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a09.\u00a0 Containers\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.containers\"></a>Chapter\u00a09.\u00a0\n   Containers\n-  <a id=\"id611655\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"sequences.html\">16. Sequences</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"sequences.html#containers.sequences.list\">list</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"sequences.html#sequences.list.size\">list::size() is O(n)</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"vector.html\">vector</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"vector.html#sequences.vector.management\">Space Overhead Management</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"associative.html\">17. Associative</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"associative.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"sect1\"><a href=\"bitset.html\">bitset</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitset.html#associative.bitset.size_variable\">Size Variable</a></span></dt><dt><span class=\"sect2\"><a href=\"bitset.html#associative.bitset.type_string\">Type String</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"containers_and_c.html\">18. Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"containers_and_c.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"messages.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"sequences.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">messages\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a016.\u00a0Sequences</td></tr></table></div></body></html>\n+  <a id=\"id485371\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"containers.html#std.containers.sequences\">Sequences</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"containers.html#containers.sequences.list\">list</a></span></dt><dt><span class=\"sect2\"><a href=\"containers.html#containers.sequences.vector\">vector</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"associative.html\">Associative</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"associative.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"sect2\"><a href=\"associative.html#containers.associative.bitset\">bitset</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"containers_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"containers_and_c.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Sequences\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.containers.sequences\"></a>Sequences</h2></div></div></div><div class=\"sect2\" title=\"list\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.sequences.list\"></a>list</h3></div></div></div><div class=\"sect3\" title=\"list::size() is O(n)\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"sequences.list.size\"></a>list::size() is O(n)</h4></div></div></div><p>\n+     Yes it is, and that's okay.  This is a decision that we preserved\n+     when we imported SGI's STL implementation.  The following is\n+     quoted from <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/FAQ.html\" target=\"_top\">their FAQ</a>:\n+   </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+       The size() member function, for list and slist, takes time\n+       proportional to the number of elements in the list.  This was a\n+       deliberate tradeoff.  The only way to get a constant-time\n+       size() for linked lists would be to maintain an extra member\n+       variable containing the list's size.  This would require taking\n+       extra time to update that variable (it would make splice() a\n+       linear time operation, for example), and it would also make the\n+       list larger.  Many list algorithms don't require that extra\n+       word (algorithms that do require it might do better with\n+       vectors than with lists), and, when it is necessary to maintain\n+       an explicit size count, it's something that users can do\n+       themselves.\n+     </p><p>\n+       This choice is permitted by the C++ standard. The standard says\n+       that size() <span class=\"quote\">\u201c<span class=\"quote\">should</span>\u201d</span> be constant time, and\n+       <span class=\"quote\">\u201c<span class=\"quote\">should</span>\u201d</span> does not mean the same thing as\n+       <span class=\"quote\">\u201c<span class=\"quote\">shall</span>\u201d</span>.  This is the officially recommended ISO\n+       wording for saying that an implementation is supposed to do\n+       something unless there is a good reason not to.\n+      </p><p>\n+\tOne implication of linear time size(): you should never write\n+      </p><pre class=\"programlisting\">\n+\t if (L.size() == 0)\n+\t     ...\n+\t </pre><p>\n+\t Instead, you should write\n+\t </p><pre class=\"programlisting\">\n+\t if (L.empty())\n+\t     ...\n+\t </pre></blockquote></div></div></div><div class=\"sect2\" title=\"vector\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.sequences.vector\"></a>vector</h3></div></div></div><p>\n+  </p><div class=\"sect3\" title=\"Space Overhead Management\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"sequences.vector.management\"></a>Space Overhead Management</h4></div></div></div><p>\n+     In <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-04/msg00105.html\" target=\"_top\">this\n+     message to the list</a>, Daniel Kostecky announced work on an\n+     alternate form of <code class=\"code\">std::vector</code> that would support\n+     hints on the number of elements to be over-allocated.  The design\n+     was also described, along with possible implementation choices.\n+   </p><p>\n+     The first two alpha releases were announced <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-07/msg00048.html\" target=\"_top\">here</a>\n+     and <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-07/msg00111.html\" target=\"_top\">here</a>.\n+   </p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"associative.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Facets\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Associative</td></tr></table></div></body></html>"}, {"sha": "4967255c4ce914cb76e2c765ff22d6d6c71895d7", "filename": "libstdc++-v3/doc/html/manual/containers_and_c.html", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers_and_c.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers_and_c.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers_and_c.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a018.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\" /><link rel=\"prev\" href=\"bitset.html\" title=\"bitset\" /><link rel=\"next\" href=\"iterators.html\" title=\"Part\u00a0VIII.\u00a0 Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a018.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitset.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\" /><link rel=\"prev\" href=\"associative.html\" title=\"Associative\" /><link rel=\"next\" href=\"iterators.html\" title=\"Chapter\u00a010.\u00a0 Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"associative.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a09.\u00a0\n   Containers\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a018.\u00a0Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.c\"></a>Chapter\u00a018.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"containers_and_c.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></div><div class=\"sect1\" title=\"Containers vs. Arrays\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.c.vs_array\"></a>Containers vs. Arrays</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.containers.c\"></a>Interacting with C</h2></div></div></div><div class=\"sect2\" title=\"Containers vs. Arrays\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.c.vs_array\"></a>Containers vs. Arrays</h3></div></div></div><p>\n      You're writing some code and can't decide whether to use builtin\n      arrays or some kind of container.  There are compelling reasons\n      to use one of the container classes, but you're afraid that\n@@ -18,7 +18,7 @@\n      container classes, these are iterators (usually\n      <code class=\"code\">begin()</code> and <code class=\"code\">end()</code>, but not always).\n      For builtin arrays, these are the address of the first element\n-     and the <a class=\"link\" href=\"bk01pt08ch19s02.html\" title=\"One Past the End\">past-the-end</a> element.\n+     and the <a class=\"link\" href=\"iterators.html#iterators.predefined.end\" title=\"One Past the End\">past-the-end</a> element.\n    </p><p>\n      Some very simple wrapper functions can hide all of that from the\n      rest of the code.  For example, a pair of functions called\n@@ -48,27 +48,27 @@\n   { return v.begin(); }\n \n template&lt;typename T, unsigned int sz&gt;\n-  inline T* \n+  inline T*\n   beginof(T (&amp;array)[sz]) { return array; }\n \n // endof\n template&lt;typename T&gt;\n-  inline typename vector&lt;T&gt;::iterator \n+  inline typename vector&lt;T&gt;::iterator\n   endof(vector&lt;T&gt; &amp;v)\n   { return v.end(); }\n \n template&lt;typename T, unsigned int sz&gt;\n-  inline T* \n+  inline T*\n   endof(T (&amp;array)[sz]) { return array + sz; }\n \n // lengthof\n template&lt;typename T&gt;\n-  inline typename vector&lt;T&gt;::size_type \n+  inline typename vector&lt;T&gt;::size_type\n   lengthof(vector&lt;T&gt; &amp;v)\n   { return v.size(); }\n \n template&lt;typename T, unsigned int sz&gt;\n-  inline unsigned int \n+  inline unsigned int\n   lengthof(T (&amp;)[sz]) { return sz; }\n </pre><p>\n      Astute readers will notice two things at once: first, that the\n@@ -81,10 +81,10 @@\n    </p><p>\n      Second, the line\n    </p><pre class=\"programlisting\">\n-    inline unsigned int lengthof (T (&amp;)[sz]) { return sz; } \n+    inline unsigned int lengthof (T (&amp;)[sz]) { return sz; }\n    </pre><p>\n      looks just weird!  Hint:  unused parameters can be left nameless.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitset.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitset\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0VIII.\u00a0\n+   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"associative.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Associative\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a010.\u00a0\n   Iterators\n   \n </td></tr></table></div></body></html>"}, {"sha": "9a16afd14d21aa3b0303e63c1e05de4fae331731", "filename": "libstdc++-v3/doc/html/manual/debug.html", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,10 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Debugging Support</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"using_exceptions.html\" title=\"Exceptions\" /><link rel=\"next\" href=\"support.html\" title=\"Part\u00a0II.\u00a0 Support\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Debugging Support</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"using_exceptions.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"support.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Debugging Support\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.debug\"></a>Debugging Support</h2></div></div></div><p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Debugging Support</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"using_exceptions.html\" title=\"Exceptions\" /><link rel=\"next\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Debugging Support</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"using_exceptions.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Debugging Support\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.debug\"></a>Debugging Support</h2></div></div></div><p>\n   There are numerous things that can be done to improve the ease with\n   which C++ binaries are debugged when using the GNU tool chain. Here\n   are some of them.\n-</p><div class=\"sect2\" title=\"Using g++\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.compiler\"></a>Using <span class=\"command\"><strong>g++</strong></span></h3></div></div></div><p> \n+</p><div class=\"sect2\" title=\"Using g++\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.compiler\"></a>Using <span class=\"command\"><strong>g++</strong></span></h3></div></div></div><p>\n     Compiler flags determine how debug information is transmitted\n     between compilation and debug or analysis tools.\n   </p><p>\n@@ -46,13 +46,13 @@\n   separate directory tree, in <code class=\"code\">(prefix)/lib/debug</code>. For\n   more information, look at the <a class=\"link\" href=\"configure.html\" title=\"Configure\">configuration</a> section.\n </p><p>\n-  A second approach is to use the configuration flags \n+  A second approach is to use the configuration flags\n </p><pre class=\"programlisting\">\n      make CXXFLAGS='-g3 -fno-inline -O0' all\n </pre><p>\n   This quick and dirty approach is often sufficient for quick\n   debugging tasks, when you cannot or don't want to recompile your\n-  application to use the <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\">debug mode</a>.</p></div><div class=\"sect2\" title=\"Memory Leak Hunting\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.memory\"></a>Memory Leak Hunting</h3></div></div></div><p>\n+  application to use the <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">debug mode</a>.</p></div><div class=\"sect2\" title=\"Memory Leak Hunting\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.memory\"></a>Memory Leak Hunting</h3></div></div></div><p>\n   There are various third party memory tracing and debug utilities\n   that can be used to provide detailed memory allocation information\n   about C++ code. An exhaustive list of tools is not going to be\n@@ -111,17 +111,17 @@\n    int main()\n    {\n       extern void* __dso_handle __attribute__ ((__weak__));\n-      __cxa_atexit((void (*) (void *)) __libc_freeres, NULL, \n-                   &amp;__dso_handle ? __dso_handle : NULL);\n+      __cxa_atexit((void (*) (void *)) __libc_freeres, NULL,\n+\t\t   &amp;__dso_handle ? __dso_handle : NULL);\n       do_test();\n       return 0;\n    }\n </pre><p>\n   Suggested valgrind flags, given the suggestions above about setting\n   up the runtime environment, library, and test file, might be:\n-</p><pre class=\"programlisting\"> \n+</p><pre class=\"programlisting\">\n    valgrind -v --num-callers=20 --leak-check=yes --leak-resolution=high --show-reachable=yes a.out\n-</pre></div><div class=\"sect2\" title=\"Using gdb\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.gdb\"></a>Using <span class=\"command\"><strong>gdb</strong></span></h3></div></div></div><p> \n+</pre></div><div class=\"sect2\" title=\"Using gdb\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.gdb\"></a>Using <span class=\"command\"><strong>gdb</strong></span></h3></div></div></div><p>\n   </p><p>\n   Many options are available for gdb itself: please see <a class=\"ulink\" href=\"http://sources.redhat.com/gdb/current/onlinedocs/gdb_13.html#SEC125\" target=\"_top\">\n   \"GDB features for C++\" </a> in the gdb documentation. Also\n@@ -145,7 +145,7 @@\n   To enable these printers, check-out the latest printers to a local\n   directory:\n </p><pre class=\"programlisting\">\n-  svn co svn://gcc.gnu.org/svn/gcc/trunk/libstdc++-v3/python \n+  svn co svn://gcc.gnu.org/svn/gcc/trunk/libstdc++-v3/python\n </pre><p>\n   Next, add the following section to your ~/.gdbinit  The path must\n   match the location where the Python module above was checked-out.\n@@ -175,18 +175,17 @@\n   <a class=\"ulink\" href=\"http://sourceware.org/gdb/\" target=\"_top\"> \"GDB: The GNU Project\n   Debugger\" </a>.\n </p></div><div class=\"sect2\" title=\"Tracking uncaught exceptions\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.exceptions\"></a>Tracking uncaught exceptions</h3></div></div></div><p>\n-  The <a class=\"link\" href=\"verbose_termination.html\" title=\"Verbose Terminate Handler\">verbose\n+  The <a class=\"link\" href=\"termination.html#support.termination.verbose\" title=\"Verbose Terminate Handler\">verbose\n   termination handler</a> gives information about uncaught\n   exceptions which are killing the program.  It is described in the\n   linked-to page.\n-</p></div><div class=\"sect2\" title=\"Debug Mode\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.debug_mode\"></a>Debug Mode</h3></div></div></div><p> The <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\">Debug Mode</a>\n+</p></div><div class=\"sect2\" title=\"Debug Mode\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.debug_mode\"></a>Debug Mode</h3></div></div></div><p> The <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">Debug Mode</a>\n   has compile and run-time checks for many containers.\n-  </p></div><div class=\"sect2\" title=\"Compile Time Checking\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.compile_time_checks\"></a>Compile Time Checking</h3></div></div></div><p> The <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a029.\u00a0Compile Time Checks\">Compile-Time\n+  </p></div><div class=\"sect2\" title=\"Compile Time Checking\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.compile_time_checks\"></a>Compile Time Checking</h3></div></div></div><p> The <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\">Compile-Time\n   Checks</a> Extension has compile-time checks for many algorithms.\n-  </p></div><div class=\"sect2\" title=\"Profile-based Performance Analysis\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.profile_mode\"></a>Profile-based Performance Analysis</h3></div></div></div><p> The <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a032.\u00a0Profile Mode\">Profile-based \n-  Performance Analysis</a> Extension has performance checks for many \n+  </p></div><div class=\"sect2\" title=\"Profile-based Performance Analysis\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.profile_mode\"></a>Profile-based Performance Analysis</h3></div></div></div><p> The <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\">Profile-based\n+  Performance Analysis</a> Extension has performance checks for many\n   algorithms.\n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"using_exceptions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"support.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0II.\u00a0\n-  Support\n-  \n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"using_exceptions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0II.\u00a0\n+  Standard Contents\n </td></tr></table></div></body></html>"}, {"sha": "fcaeb9c52096eecd197bc29e2b2ad022f3f9dc66", "filename": "libstdc++-v3/doc/html/manual/debug_mode.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug_mode.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a030.\u00a0Debug Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a029.\u00a0Compile Time Checks\" /><link rel=\"next\" href=\"bk01pt12ch30s02.html\" title=\"Semantics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a030.\u00a0Debug Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_compile_checks.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a017.\u00a0Debug Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      debug&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\" /><link rel=\"next\" href=\"bk01pt03ch17s02.html\" title=\"Semantics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a017.\u00a0Debug Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_compile_checks.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a030.\u00a0Debug Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.debug_mode\"></a>Chapter\u00a030.\u00a0Debug Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s03.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s03.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.methods\">Methods</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Intro\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.intro\"></a>Intro</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a017.\u00a0Debug Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.debug_mode\"></a>Chapter\u00a017.\u00a0Debug Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s03.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s03.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.methods\">Methods</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Intro\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.debug_mode.intro\"></a>Intro</h2></div></div></div><p>\n     By default, libstdc++ is built with efficiency in mind, and\n     therefore performs little or no error checking that is not\n     required by the C++ standard. This means that programs that\n@@ -15,7 +15,7 @@\n     library facilities, and will report errors in the use of libstdc++\n     as soon as they can be detected by emitting a description of the\n     problem to standard error and aborting the program.  This debug\n-    mode is available with GCC 3.4.0 and later versions. \n+    mode is available with GCC 3.4.0 and later versions.\n   </p><p>\n     The libstdc++ debug mode performs checking for many areas of the\n     C++ standard, but the focus is on checking interactions among\n@@ -34,4 +34,4 @@\n     the same predicate that was passed\n     to <code class=\"code\">set_intersection</code>; the libstdc++ debug mode will\n     detect an error if the sequence is not sorted or was sorted by a\n-    different predicate.</p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_compile_checks.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch30s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a029.\u00a0Compile Time Checks\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Semantics</td></tr></table></div></body></html>\n+    different predicate.</p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_compile_checks.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch17s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a016.\u00a0Compile Time Checks\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Semantics</td></tr></table></div></body></html>"}, {"sha": "d04585fbcd970c5d4ff163fd6b4a251c7b92a509", "filename": "libstdc++-v3/doc/html/manual/diagnostics.html", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdiagnostics.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdiagnostics.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdiagnostics.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,43 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0III.\u00a0 Diagnostics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"verbose_termination.html\" title=\"Verbose Terminate Handler\" /><link rel=\"next\" href=\"exceptions.html\" title=\"Chapter\u00a07.\u00a0Exceptions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0III.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a05.\u00a0 Diagnostics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"termination.html\" title=\"Termination\" /><link rel=\"next\" href=\"bk01pt02ch05s02.html\" title=\"Concept Checking\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a05.\u00a0\n   Diagnostics\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"verbose_termination.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"exceptions.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0III.\u00a0 Diagnostics\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.diagnostics\"></a>Part\u00a0III.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"termination.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch05s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a05.\u00a0 Diagnostics\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.diagnostics\"></a>Chapter\u00a05.\u00a0\n   Diagnostics\n-  <a id=\"id622040\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"exceptions.html\">7. Exceptions</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"exceptions.html#manual.diagnostics.exceptions.hierarchy\">Exception Classes</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch07s02.html\">Adding Data to Exceptions</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"bk01pt03ch08.html\">8. Concept Checking</a></span></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"verbose_termination.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"exceptions.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Verbose Terminate Handler\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a07.\u00a0Exceptions</td></tr></table></div></body></html>\n+  <a id=\"id477731\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"diagnostics.html#std.diagnostics.exceptions\">Exceptions</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"diagnostics.html#std.diagnostics.exceptions.api\">API Reference</a></span></dt><dt><span class=\"sect2\"><a href=\"diagnostics.html#std.diagnostics.exceptions.data\">Adding Data to <code class=\"classname\">exception</code></a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt02ch05s02.html\">Concept Checking</a></span></dt></dl></div><div class=\"sect1\" title=\"Exceptions\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.diagnostics.exceptions\"></a>Exceptions</h2></div></div></div><div class=\"sect2\" title=\"API Reference\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.diagnostics.exceptions.api\"></a>API Reference</h3></div></div></div><p>\n+      All exception objects are defined in one of the standard header\n+      files: <code class=\"filename\">exception</code>,\n+      <code class=\"filename\">stdexcept</code>, <code class=\"filename\">new</code>, and\n+      <code class=\"filename\">typeinfo</code>.\n+    </p><p>\n+      The base exception object is <code class=\"classname\">exception</code>,\n+      located in <code class=\"filename\">exception</code>. This object has no\n+      <code class=\"classname\">string</code> member.\n+    </p><p>\n+      Derived from this are several classes that may have a\n+      <code class=\"classname\">string</code> member: a full hierarchy can be\n+      found in the source documentation.\n+    </p><p>\n+      Full API details.\n+    </p></div><div class=\"sect2\" title=\"Adding Data to exception\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.diagnostics.exceptions.data\"></a>Adding Data to <code class=\"classname\">exception</code></h3></div></div></div><p>\n+      The standard exception classes carry with them a single string as\n+      data (usually describing what went wrong or where the 'throw' took\n+    place).  It's good to remember that you can add your own data to\n+    these exceptions when extending the hierarchy:\n+   </p><pre class=\"programlisting\">\n+   struct My_Exception : public std::runtime_error\n+   {\n+     public:\n+       My_Exception (const string&amp; whatarg)\n+\t   : std::runtime_error(whatarg), e(errno), id(GetDataBaseID()) { }\n+       int  errno_at_time_of_throw() const { return e; }\n+       DBID id_of_thing_that_threw() const { return id; }\n+     protected:\n+       int    e;\n+       DBID   id;     // some user-defined type\n+   };\n+   </pre></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"termination.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch05s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Termination\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Concept Checking</td></tr></table></div></body></html>"}, {"sha": "e32947a26260434daee1a16bc0f3098997811b94", "filename": "libstdc++-v3/doc/html/manual/documentation_style.html", "status": "modified", "additions": 46, "deletions": 30, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_style.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_style.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_style.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -4,25 +4,29 @@\n   Contributing\n   \n </th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_design_notes.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Documentation Style\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.doc_style\"></a>Documentation Style</h2></div></div></div><div class=\"sect2\" title=\"Doxygen\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.doxygen\"></a>Doxygen</h3></div></div></div><div class=\"sect3\" title=\"Prerequisites\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"doxygen.prereq\"></a>Prerequisites</h4></div></div></div><p>\n-\tPrerequisite tools are Bash 2.x,\n+\tPrerequisite tools are Bash 2.x or higher,\n \t<a class=\"ulink\" href=\"http://www.doxygen.org/\" target=\"_top\">Doxygen</a>, and\n \tthe <a class=\"ulink\" href=\"http://www.gnu.org/software/coreutils/\" target=\"_top\">GNU\n \tcoreutils</a>. (GNU versions of find, xargs, and possibly\n \tsed and grep are used, just because the GNU versions make\n-\tthings very easy.)\n+\tthings very easy.) \n       </p><p>\n \tTo generate the pretty pictures and hierarchy\n \tgraphs, the\n-\t<a class=\"ulink\" href=\"http://www.graphviz.org\" target=\"_top\">Graphviz</a>\n-\tpackage will need to be installed. \n+\t<a class=\"ulink\" href=\"http://www.graphviz.org\" target=\"_top\">Graphviz</a> package\n+\twill need to be installed. For PDF\n+\toutput, <a class=\"ulink\" href=\"http://www.tug.org/applications/pdftex/\" target=\"_top\">\n+\tpdflatex</a> is required.\n       </p></div><div class=\"sect3\" title=\"Generating the Doxygen Files\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"doxygen.rules\"></a>Generating the Doxygen Files</h4></div></div></div><p>\n \tThe following Makefile rules run Doxygen to generate HTML\n-\tdocs, XML docs, and the man pages.\n+\tdocs, XML docs, PDF docs, and the man pages.\n       </p><p>\n       </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html-doxygen</code></strong></pre><p>\n       </p><p>\n       </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-doxygen</code></strong></pre><p>\n       </p><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-pdf-doxygen</code></strong></pre><p>\n+      </p><p>\n       </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-man-doxygen</code></strong></pre><p>\n       </p><p>\n \tCareful observers will see that the Makefile rules simply call\n@@ -64,7 +68,7 @@\n \t    ...not the Qt style. The intermediate *'s are preferred.\n \t  </p></li><li class=\"listitem\"><p>\n \t    Use the triple-slash style only for one-line comments (the\n-\t    <span class=\"quote\">\u201c<span class=\"quote\">brief</span>\u201d</span> mode). \n+\t    <span class=\"quote\">\u201c<span class=\"quote\">brief</span>\u201d</span> mode).\n \t  </p></li><li class=\"listitem\"><p>\n \t    This is disgusting. Don't do this.\n \t  </p></li></ol></div><p>\n@@ -95,7 +99,7 @@\n \u00a0\u00a0\u00a0*\u00a0@brief\u00a0A\u00a0model\u00a0of\u00a0a\u00a0linear\u00a0congruential\u00a0random\u00a0number\u00a0generator.<br />\n \u00a0\u00a0\u00a0*<br />\n \u00a0\u00a0\u00a0*\u00a0@f[<br />\n-\u00a0\u00a0\u00a0*\u00a0\u00a0\u00a0\u00a0\u00a0x_{i+1}\\leftarrow(ax_{i}\u00a0+\u00a0c)\u00a0\\bmod\u00a0m\u00a0<br />\n+\u00a0\u00a0\u00a0*\u00a0\u00a0\u00a0\u00a0\u00a0x_{i+1}\\leftarrow(ax_{i}\u00a0+\u00a0c)\u00a0\\bmod\u00a0m<br />\n \u00a0\u00a0\u00a0*\u00a0@f]<br />\n \u00a0\u00a0\u00a0*/<br />\n </p></div><p>\n@@ -104,7 +108,7 @@\n \twriting Doxygen comments. Single and double quotes, and\n \tseparators in filenames are two common trouble spots. When in\n \tdoubt, consult the following table.\n-      </p><div class=\"table\"><a id=\"id645775\"></a><p class=\"title\"><b>Table\u00a0A.1.\u00a0HTML to Doxygen markup comparison</b></p><div class=\"table-contents\"><table summary=\"HTML to Doxygen markup comparison\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">HTML</th><th align=\"left\">Doxygen</th></tr></thead><tbody><tr><td align=\"left\">\\</td><td align=\"left\">\\\\</td></tr><tr><td align=\"left\">\"</td><td align=\"left\">\\\"</td></tr><tr><td align=\"left\">'</td><td align=\"left\">\\'</td></tr><tr><td align=\"left\">&lt;i&gt;</td><td align=\"left\">@a word</td></tr><tr><td align=\"left\">&lt;b&gt;</td><td align=\"left\">@b word</td></tr><tr><td align=\"left\">&lt;code&gt;</td><td align=\"left\">@c word</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">@a word</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">&lt;em&gt;two words or more&lt;/em&gt;</td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"sect2\" title=\"Docbook\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.docbook\"></a>Docbook</h3></div></div></div><div class=\"sect3\" title=\"Prerequisites\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.prereq\"></a>Prerequisites</h4></div></div></div><p>\n+      </p><div class=\"table\"><a id=\"id389869\"></a><p class=\"title\"><b>Table\u00a0A.1.\u00a0HTML to Doxygen Markup Comparison</b></p><div class=\"table-contents\"><table summary=\"HTML to Doxygen Markup Comparison\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">HTML</th><th align=\"left\">Doxygen</th></tr></thead><tbody><tr><td align=\"left\">\\</td><td align=\"left\">\\\\</td></tr><tr><td align=\"left\">\"</td><td align=\"left\">\\\"</td></tr><tr><td align=\"left\">'</td><td align=\"left\">\\'</td></tr><tr><td align=\"left\">&lt;i&gt;</td><td align=\"left\">@a word</td></tr><tr><td align=\"left\">&lt;b&gt;</td><td align=\"left\">@b word</td></tr><tr><td align=\"left\">&lt;code&gt;</td><td align=\"left\">@c word</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">@a word</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">&lt;em&gt;two words or more&lt;/em&gt;</td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"sect2\" title=\"Docbook\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.docbook\"></a>Docbook</h3></div></div></div><div class=\"sect3\" title=\"Prerequisites\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.prereq\"></a>Prerequisites</h4></div></div></div><p>\n \tEditing the DocBook sources requires an XML editor. Many\n \texist: some notable options\n \tinclude <span class=\"command\"><strong>emacs</strong></span>, <span class=\"application\">Kate</span>,\n@@ -139,45 +143,47 @@\n \tby a vendor package like <code class=\"filename\">libxml2</code>.\n       </p><p>\n \tFor PDF output, something that transforms valid XML to PDF is\n-\trequired. Possible solutions include <span class=\"command\"><strong>xmlto</strong></span>,\n-\t<a class=\"ulink\" href=\"http://xmlgraphics.apache.org/fop/\" target=\"_top\">Apache\n-\tFOP</a>, or <span class=\"command\"><strong>prince</strong></span>. Other options are\n-\tlisted on the DocBook web <a class=\"ulink\" href=\"http://wiki.docbook.org/topic/DocBookPublishingTools\" target=\"_top\">pages</a>. Please\n+\trequired. Possible solutions include \n+\t<a class=\"ulink\" href=\"http://dblatex.sourceforge.net\" target=\"_top\">dblatex</a>, \n+\t<span class=\"command\"><strong>xmlto</strong></span>, or <span class=\"command\"><strong>prince</strong></span>. Other\n+\toptions are listed on the DocBook\n+\tweb <a class=\"ulink\" href=\"http://wiki.docbook.org/topic/DocBookPublishingTools\" target=\"_top\">pages</a>. Please\n \tconsult the <code class=\"email\">&lt;<a class=\"email\" href=\"mailto:libstdc++@gcc.gnu.org\">libstdc++@gcc.gnu.org</a>&gt;</code> list when\n-\tpreparing printed manuals for current best practice and suggestions.\n+\tpreparing printed manuals for current best practice and\n+\tsuggestions.\n       </p><p>\n \tMake sure that the XML documentation and markup is valid for\n \tany change. This can be done easily, with the validation rules\n-\tin the <code class=\"filename\">Makefile</code>, which is equivalent to doing: \n+\tin the <code class=\"filename\">Makefile</code>, which is equivalent to doing:\n       </p><pre class=\"screen\">\n \t  <strong class=\"userinput\"><code>\n xmllint --noout --valid <code class=\"filename\">xml/index.xml</code>\n \t  </code></strong>\n \t</pre></div><div class=\"sect3\" title=\"Generating the DocBook Files\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.rules\"></a>Generating the DocBook Files</h4></div></div></div><p>\n \tThe following Makefile rules generate (in order): an HTML\n-\tversion of all the documentation, a PDF version of the same, a\n+\tversion of all the DocBook documentation, a PDF version of the same, a\n \tsingle XML document, and the result of validating the entire XML\n \tdocument.\n       </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html</code></strong></pre><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html-docbook</code></strong></pre><p>\n       </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-pdf</code></strong></pre><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-pdf-docbook</code></strong></pre><p>\n       </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-single</code></strong></pre><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-single-docbook</code></strong></pre><p>\n       </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-validate</code></strong></pre><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-validate-docbook</code></strong></pre><p>\n       </p></div><div class=\"sect3\" title=\"File Organization and Basics\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.examples\"></a>File Organization and Basics</h4></div></div></div><div class=\"literallayout\"><p><br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"emphasis\"><em>Which\u00a0files\u00a0are\u00a0important</em></span><br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0Docbook\u00a0files\u00a0are\u00a0in\u00a0the\u00a0directory<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libstdc++-v3/doc/xml<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Inside\u00a0this\u00a0directory,\u00a0the\u00a0files\u00a0of\u00a0importance:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spine.xml\u00a0\u00a0\t-\u00a0index\u00a0to\u00a0documentation\u00a0set<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spine.xml\t\u00a0\t-\u00a0index\u00a0to\u00a0documentation\u00a0set<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual/spine.xml\u00a0\u00a0-\u00a0index\u00a0to\u00a0manual<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual/*.xml\u00a0\u00a0\t-\u00a0individual\u00a0chapters\u00a0and\u00a0sections\u00a0of\u00a0the\u00a0manual<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0faq.xml\u00a0\u00a0\t\t-\u00a0index\u00a0to\u00a0FAQ<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0api.xml\u00a0\u00a0\t\t-\u00a0index\u00a0to\u00a0source\u00a0level\u00a0/\u00a0API\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0api.xml\u00a0\u00a0\t\t-\u00a0index\u00a0to\u00a0source\u00a0level\u00a0/\u00a0API<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0*.txml\u00a0files\u00a0are\u00a0template\u00a0xml\u00a0files,\u00a0i.e.,\u00a0otherwise\u00a0empty\u00a0files\u00a0with<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0correct\u00a0structure,\u00a0suitable\u00a0for\u00a0filling\u00a0in\u00a0with\u00a0new\u00a0information.<br />\n@@ -205,7 +211,7 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/chapter&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/book&gt;<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;book&gt;\t<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;book&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;part&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;chapter&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;section&gt;<br />\n@@ -222,20 +228,21 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;chapter&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/part&gt;\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/part&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/book&gt;<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/set&gt;<br />\n \u00a0\u00a0\u00a0\u00a0</p></div></div><div class=\"sect3\" title=\"Markup By Example\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.markup\"></a>Markup By Example</h4></div></div></div><p>\n-Complete details on Docbook markup can be found in the DocBook Element\n-Reference, <a class=\"ulink\" href=\"http://www.docbook.org/tdg/en/html/part2.html\" target=\"_top\">online</a>. An\n-incomplete reference for HTML to Docbook conversion is detailed in the\n-table below.\n-</p><div class=\"table\"><a id=\"id724766\"></a><p class=\"title\"><b>Table\u00a0A.2.\u00a0HTML to Docbook XML markup comparison</b></p><div class=\"table-contents\"><table summary=\"HTML to Docbook XML markup comparison\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">HTML</th><th align=\"left\">Docbook</th></tr></thead><tbody><tr><td align=\"left\">&lt;p&gt;</td><td align=\"left\">&lt;para&gt;</td></tr><tr><td align=\"left\">&lt;pre&gt;</td><td align=\"left\">&lt;computeroutput&gt;, &lt;programlisting&gt;, \n+\tComplete details on Docbook markup can be found in the DocBook\n+\tElement Reference,\n+\t<a class=\"ulink\" href=\"http://www.docbook.org/tdg/en/html/part2.html\" target=\"_top\">online</a>.\n+\tAn incomplete reference for HTML to Docbook conversion is\n+\tdetailed in the table below.\n+      </p><div class=\"table\"><a id=\"id501323\"></a><p class=\"title\"><b>Table\u00a0A.2.\u00a0HTML to Docbook XML Markup Comparison</b></p><div class=\"table-contents\"><table summary=\"HTML to Docbook XML Markup Comparison\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">HTML</th><th align=\"left\">Docbook</th></tr></thead><tbody><tr><td align=\"left\">&lt;p&gt;</td><td align=\"left\">&lt;para&gt;</td></tr><tr><td align=\"left\">&lt;pre&gt;</td><td align=\"left\">&lt;computeroutput&gt;, &lt;programlisting&gt;,\n \t&lt;literallayout&gt;</td></tr><tr><td align=\"left\">&lt;ul&gt;</td><td align=\"left\">&lt;itemizedlist&gt;</td></tr><tr><td align=\"left\">&lt;ol&gt;</td><td align=\"left\">&lt;orderedlist&gt;</td></tr><tr><td align=\"left\">&lt;il&gt;</td><td align=\"left\">&lt;listitem&gt;</td></tr><tr><td align=\"left\">&lt;dl&gt;</td><td align=\"left\">&lt;variablelist&gt;</td></tr><tr><td align=\"left\">&lt;dt&gt;</td><td align=\"left\">&lt;term&gt;</td></tr><tr><td align=\"left\">&lt;dd&gt;</td><td align=\"left\">&lt;listitem&gt;</td></tr><tr><td align=\"left\">&lt;a href=\"\"&gt;</td><td align=\"left\">&lt;ulink url=\"\"&gt;</td></tr><tr><td align=\"left\">&lt;code&gt;</td><td align=\"left\">&lt;literal&gt;, &lt;programlisting&gt;</td></tr><tr><td align=\"left\">&lt;strong&gt;</td><td align=\"left\">&lt;emphasis&gt;</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">&lt;emphasis&gt;</td></tr><tr><td align=\"left\">\"</td><td align=\"left\">&lt;quote&gt;</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n   And examples of detailed markup for which there are no real HTML\n   equivalents are listed in the table below.\n-</p><div class=\"table\"><a id=\"id631420\"></a><p class=\"title\"><b>Table\u00a0A.3.\u00a0Docbook XML Element Use</b></p><div class=\"table-contents\"><table summary=\"Docbook XML Element Use\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Element</th><th align=\"left\">Use</th></tr></thead><tbody><tr><td align=\"left\">&lt;structname&gt;</td><td align=\"left\">&lt;structname&gt;char_traits&lt;/structname&gt;</td></tr><tr><td align=\"left\">&lt;classname&gt;</td><td align=\"left\">&lt;classname&gt;string&lt;/classname&gt;</td></tr><tr><td align=\"left\">&lt;function&gt;</td><td align=\"left\">\n+</p><div class=\"table\"><a id=\"id377073\"></a><p class=\"title\"><b>Table\u00a0A.3.\u00a0Docbook XML Element Use</b></p><div class=\"table-contents\"><table summary=\"Docbook XML Element Use\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Element</th><th align=\"left\">Use</th></tr></thead><tbody><tr><td align=\"left\">&lt;structname&gt;</td><td align=\"left\">&lt;structname&gt;char_traits&lt;/structname&gt;</td></tr><tr><td align=\"left\">&lt;classname&gt;</td><td align=\"left\">&lt;classname&gt;string&lt;/classname&gt;</td></tr><tr><td align=\"left\">&lt;function&gt;</td><td align=\"left\">\n \t<p>&lt;function&gt;clear()&lt;/function&gt;</p>\n \t<p>&lt;function&gt;fs.clear()&lt;/function&gt;</p>\n       </td></tr><tr><td align=\"left\">&lt;type&gt;</td><td align=\"left\">&lt;type&gt;long long&lt;/type&gt;</td></tr><tr><td align=\"left\">&lt;varname&gt;</td><td align=\"left\">&lt;varname&gt;fs&lt;/varname&gt;</td></tr><tr><td align=\"left\">&lt;literal&gt;</td><td align=\"left\">\n@@ -248,4 +255,13 @@\n \t<p>&lt;filename class=\"headerfile\"&gt;ctype.h&lt;/filename&gt;</p>\n \t<p>&lt;filename class=\"directory\"&gt;/home/gcc/build&lt;/filename&gt;</p>\n \t<p>&lt;filename class=\"libraryfile\"&gt;libstdc++.so&lt;/filename&gt;</p>\n-      </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"source_code_style.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_design_notes.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Coding Style\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design Notes</td></tr></table></div></body></html>\n+      </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"sect2\" title=\"Combines\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.combines\"></a>Combines</h3></div></div></div><div class=\"sect3\" title=\"Generating Combines and Assemblages\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"combines.rules\"></a>Generating Combines and Assemblages</h4></div></div></div><p>\n+\tThe following Makefile rules are defaults, and are usually\n+\taliased to variable rules.\n+      </p><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html</code></strong></pre><p>\n+      </p><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-man</code></strong></pre><p>\n+      </p><p>\n+      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-pdf</code></strong></pre><p>\n+      </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"source_code_style.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"source_design_notes.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Coding Style\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design Notes</td></tr></table></div></body></html>"}, {"sha": "4403ae80a5a5253e321590c8ce1cacd66fedfb18", "filename": "libstdc++-v3/doc/html/manual/dynamic_memory.html", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdynamic_memory.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdynamic_memory.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdynamic_memory.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a05.\u00a0Dynamic Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0 Support\" /><link rel=\"prev\" href=\"bk01pt02ch04s03.html\" title=\"NULL\" /><link rel=\"next\" href=\"termination.html\" title=\"Chapter\u00a06.\u00a0Termination\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a05.\u00a0Dynamic Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Dynamic Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Chapter\u00a04.\u00a0 Support\" /><link rel=\"prev\" href=\"support.html\" title=\"Chapter\u00a04.\u00a0 Support\" /><link rel=\"next\" href=\"termination.html\" title=\"Termination\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Dynamic Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"support.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a04.\u00a0\n   Support\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"termination.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a05.\u00a0Dynamic Memory\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.support.memory\"></a>Chapter\u00a05.\u00a0Dynamic Memory</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"termination.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Dynamic Memory\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.support.memory\"></a>Dynamic Memory</h2></div></div></div><p>\n     There are six flavors each of <code class=\"function\">new</code> and\n     <code class=\"function\">delete</code>, so make certain that you're using the right\n     ones. Here are quickie descriptions of <code class=\"function\">new</code>:\n@@ -51,8 +51,8 @@\n    {\n        delete[] safety;\n        popup_window (\"Dude, you are running low on heap memory.  You\n-                      should, like, close some windows, or something.\n-                      The next time you run out, we're gonna burn!\");\n+\t\t      should, like, close some windows, or something.\n+\t\t      The next time you run out, we're gonna burn!\");\n        set_new_handler (old_handler);\n        return;\n    }\n@@ -65,5 +65,8 @@\n    }\n    </pre><p>\n      <code class=\"classname\">bad_alloc</code> is derived from the base <code class=\"classname\">exception</code>\n-     class defined in Chapter 19.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"termination.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">NULL\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a06.\u00a0Termination</td></tr></table></div></body></html>\n+     class defined in Sect1 19.\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"support.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"termination.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a04.\u00a0\n+  Support\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Termination</td></tr></table></div></body></html>"}, {"sha": "3e6b12b93e43b33c8e60e1dadfad25ec074452de", "filename": "libstdc++-v3/doc/html/manual/exceptions.html", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fexceptions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fexceptions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fexceptions.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a07.\u00a0Exceptions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0 Diagnostics\" /><link rel=\"prev\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0 Diagnostics\" /><link rel=\"next\" href=\"bk01pt03ch07s02.html\" title=\"Adding Data to Exceptions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a07.\u00a0Exceptions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n-  Diagnostics\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch07s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a07.\u00a0Exceptions\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.diagnostics.exceptions\"></a>Chapter\u00a07.\u00a0Exceptions</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"exceptions.html#manual.diagnostics.exceptions.hierarchy\">Exception Classes</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch07s02.html\">Adding Data to Exceptions</a></span></dt></dl></div><div class=\"sect1\" title=\"Exception Classes\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.diagnostics.exceptions.hierarchy\"></a>Exception Classes</h2></div></div></div><p>\n-      All exception objects are defined in one of the standard header\n-      files: <code class=\"filename\">exception</code>,\n-      <code class=\"filename\">stdexcept</code>, <code class=\"filename\">new</code>, and\n-      <code class=\"filename\">typeinfo</code>.\n-    </p><p>\n-      The base exception object is <code class=\"classname\">exception</code>,\n-      located in <code class=\"filename\">exception</code>. This object has no\n-      <code class=\"classname\">string</code> member.\n-    </p><p>\n-      Derived from this are several classes that may have a\n-      <code class=\"classname\">string</code> member: a full hierarchy can be\n-      found in the <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00460.html\" target=\"_top\">source documentation</a>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"diagnostics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch07s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0III.\u00a0\n-  Diagnostics\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Adding Data to Exceptions</td></tr></table></div></body></html>"}, {"sha": "1b42f7da28eaf8e5ba3826cf4743369674050f71", "filename": "libstdc++-v3/doc/html/manual/ext_algorithms.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a036.\u00a0Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_utilities.html\" title=\"Chapter\u00a035.\u00a0Utilities\" /><link rel=\"next\" href=\"ext_numerics.html\" title=\"Chapter\u00a037.\u00a0Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a036.\u00a0Algorithms</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a023.\u00a0Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_utilities.html\" title=\"Chapter\u00a022.\u00a0Utilities\" /><link rel=\"next\" href=\"ext_numerics.html\" title=\"Chapter\u00a024.\u00a0Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a023.\u00a0Algorithms</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a036.\u00a0Algorithms\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.algorithms\"></a>Chapter\u00a036.\u00a0Algorithms</h2></div></div></div><p>25.1.6 (count, count_if) is extended with two more versions of count\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a023.\u00a0Algorithms\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.algorithms\"></a>Chapter\u00a023.\u00a0Algorithms</h2></div></div></div><p>25.1.6 (count, count_if) is extended with two more versions of count\n    and count_if.  The standard versions return their results.  The\n    additional signatures return void, but take a final parameter by\n    reference to which they assign their results, e.g.,\n@@ -16,8 +16,8 @@\n </p><p>25.3 (sorting 'n' heaps 'n' stuff) is extended with some helper\n    predicates.  Look in the doxygen-generated pages for notes on these.\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"code\">is_heap</code> tests whether or not a range is a heap.</p></li><li class=\"listitem\"><p><code class=\"code\">is_sorted</code> tests whether or not a range is sorted in\n-        nondescending order.</p></li></ul></div><p>25.3.8 (lexicographical_compare) is extended with\n+\tnondescending order.</p></li></ul></div><p>25.3.8 (lexicographical_compare) is extended with\n </p><pre class=\"programlisting\">\n    lexicographical_compare_3way(_InputIter1 first1, _InputIter1 last1,\n-                                 _InputIter2 first2, _InputIter2 last2)</pre><p>which does... what?\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a035.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a037.\u00a0Numerics</td></tr></table></div></body></html>\n+\t\t\t\t _InputIter2 first2, _InputIter2 last2)</pre><p>which does... what?\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a022.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a024.\u00a0Numerics</td></tr></table></div></body></html>"}, {"sha": "37bed0b14f71c6030d7b39829d2e6a96c1ed6b37", "filename": "libstdc++-v3/doc/html/manual/ext_allocators.html", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_allocators.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_allocators.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_allocators.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,10 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a033.\u00a0Allocators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch32s07.html\" title=\"Diagnostics\" /><link rel=\"next\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a033.\u00a0Allocators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s07.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a020.\u00a0Allocators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt03ch19s07.html\" title=\"Diagnostics\" /><link rel=\"next\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a020.\u00a0Allocators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s07.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a033.\u00a0Allocators\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator\"></a>Chapter\u00a033.\u00a0Allocators</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_allocators.html#manual.ext.allocator.mt\">mt_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_single\">Single Thread Example</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_multi\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bitmap_allocator.html\">bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.impl\">Implementation</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"mt_allocator\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.allocator.mt\"></a>mt_allocator</h2></div></div></div><p>\n-</p><div class=\"sect2\" title=\"Intro\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.intro\"></a>Intro</h3></div></div></div><p> \n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a020.\u00a0Allocators\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator\"></a>Chapter\u00a020.\u00a0Allocators</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_allocators.html#manual.ext.allocator.mt\">mt_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_single\">Single Thread Example</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_multi\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bitmap_allocator.html\">bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.impl\">Implementation</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"mt_allocator\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.allocator.mt\"></a>mt_allocator</h2></div></div></div><p>\n+</p><div class=\"sect2\" title=\"Intro\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.intro\"></a>Intro</h3></div></div></div><p>\n   The mt allocator [hereinafter referred to simply as \"the allocator\"]\n   is a fixed size (power of two) allocator that was initially\n   developed specifically to suit the needs of multi threaded\n@@ -25,7 +25,7 @@\n containing this pool that links instantiation types to common or\n individual pools, and a class inheriting from the policy class that is\n the actual allocator.\n-</p><p>The datum describing pools characteristics is \n+</p><p>The datum describing pools characteristics is\n </p><pre class=\"programlisting\">\n   template&lt;bool _Thread&gt;\n     class __pool\n@@ -82,9 +82,9 @@\n   tune_type t_single(16, 5120, 32, 5120, 1, 10, false);\n \n   tune_type t;\n-  t = allocator_type::_M_get_options();  \n+  t = allocator_type::_M_get_options();\n   allocator_type::_M_set_options(t_opt);\n-  t = allocator_type::_M_get_options();  \n+  t = allocator_type::_M_get_options();\n \n   allocator_type a;\n   allocator_type::pointer p1 = a.allocate(128);\n@@ -111,54 +111,54 @@\n   allocate() to return memory directly from a new() call, and deallocate will\n   only do a delete() call.\n </p><p>\n-- If the GLIBCXX_FORCE_NEW environment variable is not set, both ST and MT \n+- If the GLIBCXX_FORCE_NEW environment variable is not set, both ST and MT\n   applications will:\n   - Calculate the number of bins needed. A bin is a specific power of two size\n-    of bytes. I.e., by default the allocator will deal with requests of up to \n-    128 bytes (or whatever the value of _S_max_bytes is when _S_init() is \n-    called). This means that there will be bins of the following sizes \n-    (in bytes): 1, 2, 4, 8, 16, 32, 64, 128. \n+    of bytes. I.e., by default the allocator will deal with requests of up to\n+    128 bytes (or whatever the value of _S_max_bytes is when _S_init() is\n+    called). This means that there will be bins of the following sizes\n+    (in bytes): 1, 2, 4, 8, 16, 32, 64, 128.\n \n-  - Create the _S_binmap array. All requests are rounded up to the next \n-    \"large enough\" bin. I.e., a request for 29 bytes will cause a block from \n-    the \"32 byte bin\" to be returned to the application. The purpose of \n-    _S_binmap is to speed up the process of finding out which bin to use. \n+  - Create the _S_binmap array. All requests are rounded up to the next\n+    \"large enough\" bin. I.e., a request for 29 bytes will cause a block from\n+    the \"32 byte bin\" to be returned to the application. The purpose of\n+    _S_binmap is to speed up the process of finding out which bin to use.\n     I.e., the value of _S_binmap[ 29 ] is initialized to 5 (bin 5 = 32 bytes).\n </p><p>\n   - Create the _S_bin array. This array consists of bin_records. There will be\n     as many bin_records in this array as the number of bins that we calculated\n     earlier. I.e., if _S_max_bytes = 128 there will be 8 entries.\n     Each bin_record is then initialized:\n     - bin_record-&gt;first = An array of pointers to block_records. There will be\n-      as many block_records pointers as there are maximum number of threads \n-      (in a ST application there is only 1 thread, in a MT application there \n+      as many block_records pointers as there are maximum number of threads\n+      (in a ST application there is only 1 thread, in a MT application there\n       are _S_max_threads).\n       This holds the pointer to the first free block for each thread in this\n       bin. I.e., if we would like to know where the first free block of size 32\n       for thread number 3 is we would look this up by: _S_bin[ 5 ].first[ 3 ]\n \n-    The above created block_record pointers members are now initialized to \n+    The above created block_record pointers members are now initialized to\n     their initial values. I.e. _S_bin[ n ].first[ n ] = NULL;\n </p><p>\n - Additionally a MT application will:\n   - Create a list of free thread id's. The pointer to the first entry\n-    is stored in _S_thread_freelist_first. The reason for this approach is \n-    that the __gthread_self() call will not return a value that corresponds to \n+    is stored in _S_thread_freelist_first. The reason for this approach is\n+    that the __gthread_self() call will not return a value that corresponds to\n     the maximum number of threads allowed but rather a process id number or\n     something else. So what we do is that we create a list of thread_records.\n     This list is _S_max_threads long and each entry holds a size_t thread_id\n     which is initialized to 1, 2, 3, 4, 5 and so on up to _S_max_threads.\n-    Each time a thread calls allocate() or deallocate() we call \n+    Each time a thread calls allocate() or deallocate() we call\n     _S_get_thread_id() which looks at the value of _S_thread_key which is a\n     thread local storage pointer. If this is NULL we know that this is a newly\n     created thread and we pop the first entry from this list and saves the\n-    pointer to this record in the _S_thread_key variable. The next time \n-    we will get the pointer to the thread_record back and we use the \n-    thread_record-&gt;thread_id as identification. I.e., the first thread that \n+    pointer to this record in the _S_thread_key variable. The next time\n+    we will get the pointer to the thread_record back and we use the\n+    thread_record-&gt;thread_id as identification. I.e., the first thread that\n     calls allocate will get the first record in this list and thus be thread\n     number 1 and will then find the pointer to its first free 32 byte block\n     in _S_bin[ 5 ].first[ 1 ]\n-    When we create the _S_thread_key we also define a destructor \n+    When we create the _S_thread_key we also define a destructor\n     (_S_thread_key_destr) which means that when the thread dies, this\n     thread_record is returned to the front of this list and the thread id\n     can then be reused if a new thread is created.\n@@ -176,7 +176,7 @@\n       has made 678 requests (and no deallocations...) of 32-byte blocks this\n       counter will read 678.\n \n-    The above created arrays are now initialized with their initial values. \n+    The above created arrays are now initialized with their initial values.\n     I.e. _S_bin[ n ].free[ n ] = 0;\n </p><p>\n   - Initialize the mutex of each bin_record: The bin_record-&gt;mutex\n@@ -260,39 +260,39 @@\n +----------------+\n </pre><p>\n With this in mind we simplify things a bit for a while and say that there is\n-only one thread (a ST application). In this case all operations are made to \n+only one thread (a ST application). In this case all operations are made to\n what is referred to as the global pool - thread id 0 (No thread may be\n assigned this id since they span from 1 to _S_max_threads in a MT application).\n </p><p>\n When the application requests memory (calling allocate()) we first look at the\n requested size and if this is &gt; _S_max_bytes we call new() directly and return.\n </p><p>\n-If the requested size is within limits we start by finding out from which \n+If the requested size is within limits we start by finding out from which\n bin we should serve this request by looking in _S_binmap.\n </p><p>\n A quick look at _S_bin[ bin ].first[ 0 ] tells us if there are any blocks of\n this size on the freelist (0). If this is not NULL - fine, just remove the\n-block that _S_bin[ bin ].first[ 0 ] points to from the list, \n+block that _S_bin[ bin ].first[ 0 ] points to from the list,\n update _S_bin[ bin ].first[ 0 ] and return a pointer to that blocks data.\n </p><p>\n-If the freelist is empty (the pointer is NULL) we must get memory from the \n+If the freelist is empty (the pointer is NULL) we must get memory from the\n system and build us a freelist within this memory. All requests for new memory\n-is made in chunks of _S_chunk_size. Knowing the size of a block_record and \n-the bytes that this bin stores we then calculate how many blocks we can create \n+is made in chunks of _S_chunk_size. Knowing the size of a block_record and\n+the bytes that this bin stores we then calculate how many blocks we can create\n within this chunk, build the list, remove the first block, update the pointer\n-(_S_bin[ bin ].first[ 0 ]) and return a pointer to that blocks data. \n+(_S_bin[ bin ].first[ 0 ]) and return a pointer to that blocks data.\n </p><p>\n Deallocation is equally simple; the pointer is casted back to a block_record\n-pointer, lookup which bin to use based on the size, add the block to the front \n-of the global freelist and update the pointer as needed \n+pointer, lookup which bin to use based on the size, add the block to the front\n+of the global freelist and update the pointer as needed\n (_S_bin[ bin ].first[ 0 ]).\n </p><p>\n The decision to add deallocated blocks to the front of the freelist was made\n after a set of performance measurements that showed that this is roughly 10%\n faster than maintaining a set of \"last pointers\" as well.\n </p></div><div class=\"sect2\" title=\"Multiple Thread Example\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.example_multi\"></a>Multiple Thread Example</h3></div></div></div><p>\n-In the ST example we never used the thread_id variable present in each block. \n-Let's start by explaining the purpose of this in a MT application. \n+In the ST example we never used the thread_id variable present in each block.\n+Let's start by explaining the purpose of this in a MT application.\n </p><p>\n The concept of \"ownership\" was introduced since many MT applications\n allocate and deallocate memory to shared containers from different\n@@ -321,10 +321,10 @@\n look at the requested size and if this is &gt;_S_max_bytes we call new()\n directly and return.\n </p><p>\n-If the requested size is within limits we start by finding out from which \n+If the requested size is within limits we start by finding out from which\n bin we should serve this request by looking in _S_binmap.\n </p><p>\n-A call to _S_get_thread_id() returns the thread id for the calling thread \n+A call to _S_get_thread_id() returns the thread id for the calling thread\n (and if no value has been set in _S_thread_key, a new id is assigned and\n returned).\n </p><p>\n@@ -394,4 +394,4 @@\n a threads freelist mentioned above). The \"formula\" used can probably\n be improved to further reduce the risk of blocks being \"bounced back\n and forth\" between freelists.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch32s07.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Diagnostics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0bitmap_allocator</td></tr></table></div></body></html>\n+</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch19s07.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Diagnostics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0bitmap_allocator</td></tr></table></div></body></html>"}, {"sha": "e99452bdb593c9d143e2b30b7ec9a12db654d07d", "filename": "libstdc++-v3/doc/html/manual/ext_compile_checks.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_compile_checks.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_compile_checks.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_compile_checks.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a029.\u00a0Compile Time Checks</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt12pr03.html\" title=\"\" /><link rel=\"next\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a029.\u00a0Compile Time Checks</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12pr03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a016.\u00a0Compile Time Checks</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt03pr01.html\" title=\"\" /><link rel=\"next\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a016.\u00a0Compile Time Checks</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03pr01.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a029.\u00a0Compile Time Checks\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.compile_checks\"></a>Chapter\u00a029.\u00a0Compile Time Checks</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.compile_checks\"></a>Chapter\u00a016.\u00a0Compile Time Checks</h2></div></div></div><p>\n     Also known as concept checking.\n   </p><p>In 1999, SGI added <span class=\"emphasis\"><em>concept checkers</em></span> to their implementation\n       of the STL:  code which checked the template parameters of\n@@ -37,4 +37,4 @@\n    support for template parameter constraints based on concepts in the core\n    language. This will obviate the need for the library-simulated concept\n    checking described above.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12pr03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a030.\u00a0Debug Mode</td></tr></table></div></body></html>\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03pr01.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a017.\u00a0Debug Mode</td></tr></table></div></body></html>"}, {"sha": "c9922a9b6bc6a948c742309f1dbf19f3d831bad9", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a041.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_demangling.html\" title=\"Chapter\u00a040.\u00a0Demangling\" /><link rel=\"next\" href=\"bk01pt12ch41s02.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a041.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a028.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_demangling.html\" title=\"Chapter\u00a027.\u00a0Demangling\" /><link rel=\"next\" href=\"bk01pt03ch28s02.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a028.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch41s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a041.\u00a0Concurrency\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a041.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch41s02.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch41s02.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch41s02.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch41s03.html\">Use</a></span></dt></dl></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"sect2\" title=\"Interface to Locks and Mutexes\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file &lt;ext/concurrence.h&gt; contains all the higher-level\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch28s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a028.\u00a0Concurrency\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a028.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch28s02.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch28s02.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch28s02.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch28s03.html\">Use</a></span></dt></dl></div><div class=\"sect1\" title=\"Design\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"sect2\" title=\"Interface to Locks and Mutexes\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file &lt;ext/concurrence.h&gt; contains all the higher-level\n constructs for playing with threads. In contrast to the atomics layer,\n the concurrence layer consists largely of types. All types are defined within <code class=\"code\">namespace __gnu_cxx</code>.\n </p><p>\n@@ -31,7 +31,7 @@\n unlocks it during destruction. This is an efficient way of locking\n critical sections, while retaining exception-safety.\n </p></div><div class=\"sect2\" title=\"Interface to Atomic Functions\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.atomics\"></a>Interface to Atomic Functions</h3></div></div></div><p>\n-Two functions and one type form the base of atomic support. \n+Two functions and one type form the base of atomic support.\n </p><p>The type <code class=\"code\">_Atomic_word</code> is a signed integral type\n supporting atomic operations.\n </p><p>\n@@ -56,7 +56,7 @@\n </p><p>Adds the second argument's value to the first argument. Has no return value.\n </p></li></ul></div><p>\n These functions forward to one of several specialized helper\n-functions, depending on the circumstances. For instance, \n+functions, depending on the circumstances. For instance,\n </p><p>\n <code class=\"code\">\n __exchange_and_add_dispatch\n@@ -67,7 +67,7 @@\n </p><p>Multi-thread version. Inlined if compiler-generated builtin atomics\n can be used, otherwise resolved at link time to a non-builtin code\n sequence.\n-</p></li><li class=\"listitem\"><p><code class=\"code\">__exchange_and_add_single</code> \n+</p></li><li class=\"listitem\"><p><code class=\"code\">__exchange_and_add_single</code>\n </p><p>Single threaded version. Inlined.</p></li></ul></div><p>However, only <code class=\"code\">__exchange_and_add_dispatch</code>\n and <code class=\"code\">__atomic_add_dispatch</code> should be used. These functions\n can be used in a portable manner, regardless of the specific\n@@ -79,13 +79,13 @@\n In addition, there are two macros\n </p><p>\n <code class=\"code\">\n-_GLIBCXX_READ_MEM_BARRIER \n+_GLIBCXX_READ_MEM_BARRIER\n </code>\n </p><p>\n <code class=\"code\">\n-_GLIBCXX_WRITE_MEM_BARRIER \n+_GLIBCXX_WRITE_MEM_BARRIER\n </code>\n </p><p>\n Which expand to the appropriate write and read barrier required by the\n host hardware and operating system.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch41s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a040.\u00a0Demangling\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>\n+</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch28s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a027.\u00a0Demangling\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>"}, {"sha": "79fe759fcd94a2cf5af70767c521080cd50bdbfc", "filename": "libstdc++-v3/doc/html/manual/ext_containers.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a034.\u00a0Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /><link rel=\"next\" href=\"bk01pt12ch34s02.html\" title=\"HP/SGI\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a034.\u00a0Containers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a021.\u00a0Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /><link rel=\"next\" href=\"bk01pt03ch21s02.html\" title=\"HP/SGI\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a021.\u00a0Containers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch34s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a034.\u00a0Containers\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers\"></a>Chapter\u00a034.\u00a0Containers</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_containers.html#manual.ext.containers.pbds\">Policy Based Data Structures</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch34s02.html\">HP/SGI</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch34s03.html\">Deprecated HP/SGI</a></span></dt></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch21s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a021.\u00a0Containers\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers\"></a>Chapter\u00a021.\u00a0Containers</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_containers.html#manual.ext.containers.pbds\">Policy Based Data Structures</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch21s02.html\">HP/SGI</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch21s03.html\">Deprecated HP/SGI</a></span></dt></dl></div><p>\n   </p><div class=\"sect1\" title=\"Policy Based Data Structures\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.pbds\"></a>Policy Based Data Structures</h2></div></div></div><p>\n       <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/ext/pb_ds/index.html\" target=\"_top\">More details here</a>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch34s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitmap_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0HP/SGI</td></tr></table></div></body></html>\n+    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch21s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitmap_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0HP/SGI</td></tr></table></div></body></html>"}, {"sha": "4a991d0313d0f8f709c9a80fa5042f91974b4c18", "filename": "libstdc++-v3/doc/html/manual/ext_demangling.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a040.\u00a0Demangling</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_io.html\" title=\"Chapter\u00a039.\u00a0Input and Output\" /><link rel=\"next\" href=\"ext_concurrency.html\" title=\"Chapter\u00a041.\u00a0Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a040.\u00a0Demangling</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a027.\u00a0Demangling</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_io.html\" title=\"Chapter\u00a026.\u00a0Input and Output\" /><link rel=\"next\" href=\"ext_concurrency.html\" title=\"Chapter\u00a028.\u00a0Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a027.\u00a0Demangling</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a040.\u00a0Demangling\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.demangle\"></a>Chapter\u00a040.\u00a0Demangling</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a027.\u00a0Demangling\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.demangle\"></a>Chapter\u00a027.\u00a0Demangling</h2></div></div></div><p>\n     Transforming C++ ABI identifiers (like RTTI symbols) into the\n     original C++ source identifiers is called\n     <span class=\"quote\">\u201c<span class=\"quote\">demangling.</span>\u201d</span>\n@@ -63,12 +63,12 @@\n    </p><pre class=\"screen\">\n    <code class=\"computeroutput\">\n       St13bad_exception       =&gt; std::bad_exception   : 0\n-      3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0 \n+      3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0\n    </code>\n    </pre><p>\n      The demangler interface is described in the source documentation\n      linked to above.  It is actually written in C, so you don't need to\n      be writing C++ in order to demangle C++.  (That also means we have to\n      use crummy memory management facilities, so don't forget to free()\n      the returned char array.)\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a039.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a041.\u00a0Concurrency</td></tr></table></div></body></html>\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a026.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a028.\u00a0Concurrency</td></tr></table></div></body></html>"}, {"sha": "0c67bf6a2e5b4f51ebfe5f17eb8e2084dd5104a2", "filename": "libstdc++-v3/doc/html/manual/ext_io.html", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a039.\u00a0Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_iterators.html\" title=\"Chapter\u00a038.\u00a0Iterators\" /><link rel=\"next\" href=\"ext_demangling.html\" title=\"Chapter\u00a040.\u00a0Demangling\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a039.\u00a0Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a026.\u00a0Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_iterators.html\" title=\"Chapter\u00a025.\u00a0Iterators\" /><link rel=\"next\" href=\"ext_demangling.html\" title=\"Chapter\u00a027.\u00a0Demangling\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a026.\u00a0Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a039.\u00a0Input and Output\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.io\"></a>Chapter\u00a039.\u00a0Input and Output</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a026.\u00a0Input and Output\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.io\"></a>Chapter\u00a026.\u00a0Input and Output</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></div><p>\n     Extensions allowing <code class=\"code\">filebuf</code>s to be constructed from\n     \"C\" types like  FILE*s and file descriptors.\n   </p><div class=\"sect1\" title=\"Derived filebufs\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.io.filebuf_derived\"></a>Derived filebufs</h2></div></div></div><p>The v2 library included non-standard extensions to construct\n@@ -13,38 +13,38 @@\n       IOStreams is via the <code class=\"code\">stdio_filebuf</code> class (see below),\n       but earlier releases provided slightly different mechanisms.\n    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>3.0.x <code class=\"code\">filebuf</code>s have another ctor with this signature:\n-        <code class=\"code\">basic_filebuf(__c_file_type*, ios_base::openmode, int_type);\n+\t<code class=\"code\">basic_filebuf(__c_file_type*, ios_base::openmode, int_type);\n \t</code>\n-         This comes in very handy in a number of places, such as\n-         attaching Unix sockets, pipes, and anything else which uses file\n-         descriptors, into the IOStream buffering classes.  The three\n-         arguments are as follows:\n-         </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p><code class=\"code\">__c_file_type*      F   </code>\n-              // the __c_file_type typedef usually boils down to stdio's FILE\n-          </p></li><li class=\"listitem\"><p><code class=\"code\">ios_base::openmode  M   </code>\n-              // same as all the other uses of openmode\n-          </p></li><li class=\"listitem\"><p><code class=\"code\">int_type            B   </code>\n-              // buffer size, defaults to BUFSIZ if not specified\n-          </p></li></ul></div><p>\n-         For those wanting to use file descriptors instead of FILE*'s, I\n-         invite you to contemplate the mysteries of C's <code class=\"code\">fdopen()</code>.\n+\t This comes in very handy in a number of places, such as\n+\t attaching Unix sockets, pipes, and anything else which uses file\n+\t descriptors, into the IOStream buffering classes.  The three\n+\t arguments are as follows:\n+\t </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p><code class=\"code\">__c_file_type*      F   </code>\n+\t      // the __c_file_type typedef usually boils down to stdio's FILE\n+\t  </p></li><li class=\"listitem\"><p><code class=\"code\">ios_base::openmode  M   </code>\n+\t      // same as all the other uses of openmode\n+\t  </p></li><li class=\"listitem\"><p><code class=\"code\">int_type            B   </code>\n+\t      // buffer size, defaults to BUFSIZ if not specified\n+\t  </p></li></ul></div><p>\n+\t For those wanting to use file descriptors instead of FILE*'s, I\n+\t invite you to contemplate the mysteries of C's <code class=\"code\">fdopen()</code>.\n      </p></li><li class=\"listitem\"><p>In library snapshot 3.0.95 and later, <code class=\"code\">filebuf</code>s bring\n-         back an old extension:  the <code class=\"code\">fd()</code> member function.  The\n-         integer returned from this function can be used for whatever file\n-         descriptors can be used for on your platform.  Naturally, the\n-         library cannot track what you do on your own with a file descriptor,\n-         so if you perform any I/O directly, don't expect the library to be\n-         aware of it.\n+\t back an old extension:  the <code class=\"code\">fd()</code> member function.  The\n+\t integer returned from this function can be used for whatever file\n+\t descriptors can be used for on your platform.  Naturally, the\n+\t library cannot track what you do on your own with a file descriptor,\n+\t so if you perform any I/O directly, don't expect the library to be\n+\t aware of it.\n      </p></li><li class=\"listitem\"><p>Beginning with 3.1, the extra <code class=\"code\">filebuf</code> constructor and\n-         the <code class=\"code\">fd()</code> function were removed from the standard\n-         filebuf.  Instead, <code class=\"code\">&lt;ext/stdio_filebuf.h&gt;</code> contains\n-         a derived class called\n-         <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00074.html\" target=\"_top\"><code class=\"code\">__gnu_cxx::stdio_filebuf</code></a>.\n-         This class can be constructed from a C <code class=\"code\">FILE*</code> or a file\n-         descriptor, and provides the <code class=\"code\">fd()</code> function.\n+\t the <code class=\"code\">fd()</code> function were removed from the standard\n+\t filebuf.  Instead, <code class=\"code\">&lt;ext/stdio_filebuf.h&gt;</code> contains\n+\t a derived class called\n+\t <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00074.html\" target=\"_top\"><code class=\"code\">__gnu_cxx::stdio_filebuf</code></a>.\n+\t This class can be constructed from a C <code class=\"code\">FILE*</code> or a file\n+\t descriptor, and provides the <code class=\"code\">fd()</code> function.\n      </p></li></ul></div><p>If you want to access a <code class=\"code\">filebuf</code>'s file descriptor to\n       implement file locking (e.g. using the <code class=\"code\">fcntl()</code> system\n       call) then you might be interested in Henry Suter's RWLock class.\n       \n    </p><p>\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a038.\u00a0Iterators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a040.\u00a0Demangling</td></tr></table></div></body></html>\n+    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a025.\u00a0Iterators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a027.\u00a0Demangling</td></tr></table></div></body></html>"}, {"sha": "5f5a53485472fb0726d3924eaa0aa18a045244c7", "filename": "libstdc++-v3/doc/html/manual/ext_iterators.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,14 +1,14 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a038.\u00a0Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_numerics.html\" title=\"Chapter\u00a037.\u00a0Numerics\" /><link rel=\"next\" href=\"ext_io.html\" title=\"Chapter\u00a039.\u00a0Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a038.\u00a0Iterators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a025.\u00a0Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_numerics.html\" title=\"Chapter\u00a024.\u00a0Numerics\" /><link rel=\"next\" href=\"ext_io.html\" title=\"Chapter\u00a026.\u00a0Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a025.\u00a0Iterators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a038.\u00a0Iterators\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.iterators\"></a>Chapter\u00a038.\u00a0Iterators</h2></div></div></div><p>24.3.2 describes <code class=\"code\">struct iterator</code>, which didn't exist in the\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a025.\u00a0Iterators\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.iterators\"></a>Chapter\u00a025.\u00a0Iterators</h2></div></div></div><p>24.3.2 describes <code class=\"code\">struct iterator</code>, which didn't exist in the\n    original HP STL implementation (the language wasn't rich enough at the\n    time).  For backwards compatibility, base classes are provided which\n    declare the same nested typedefs:\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>input_iterator</p></li><li class=\"listitem\"><p>output_iterator</p></li><li class=\"listitem\"><p>forward_iterator</p></li><li class=\"listitem\"><p>bidirectional_iterator</p></li><li class=\"listitem\"><p>random_access_iterator</p></li></ul></div><p>24.3.4 describes iterator operation <code class=\"code\">distance</code>, which takes\n    two iterators and returns a result.  It is extended by another signature\n    which takes two iterators and a reference to a result.  The result is\n    modified, and the function returns nothing.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a037.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a039.\u00a0Input and Output</td></tr></table></div></body></html>\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a024.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a026.\u00a0Input and Output</td></tr></table></div></body></html>"}, {"sha": "3316ec1d0eaa746fc59eae70eb1d045371a19ee4", "filename": "libstdc++-v3/doc/html/manual/ext_numerics.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a037.\u00a0Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_algorithms.html\" title=\"Chapter\u00a036.\u00a0Algorithms\" /><link rel=\"next\" href=\"ext_iterators.html\" title=\"Chapter\u00a038.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a037.\u00a0Numerics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a024.\u00a0Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_algorithms.html\" title=\"Chapter\u00a023.\u00a0Algorithms\" /><link rel=\"next\" href=\"ext_iterators.html\" title=\"Chapter\u00a025.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a024.\u00a0Numerics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a037.\u00a0Numerics\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.numerics\"></a>Chapter\u00a037.\u00a0Numerics</h2></div></div></div><p>26.4, the generalized numeric operations such as accumulate, are extended\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a024.\u00a0Numerics\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.numerics\"></a>Chapter\u00a024.\u00a0Numerics</h2></div></div></div><p>26.4, the generalized numeric operations such as accumulate, are extended\n    with the following functions:\n </p><pre class=\"programlisting\">\n    power (x, n);\n@@ -17,4 +17,4 @@\n    That is, it assigns value to *first, value + 1 to *(first + 1) and so\n    on.\"  Quoted from SGI documentation.\n </p><pre class=\"programlisting\">\n-   void iota(_ForwardIter first, _ForwardIter last, _Tp value);</pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a036.\u00a0Algorithms\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a038.\u00a0Iterators</td></tr></table></div></body></html>\n+   void iota(_ForwardIter first, _ForwardIter last, _Tp value);</pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a023.\u00a0Algorithms\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a025.\u00a0Iterators</td></tr></table></div></body></html>"}, {"sha": "3485222aa4b5adff5767f7e92084c91720c659f0", "filename": "libstdc++-v3/doc/html/manual/ext_utilities.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,19 +1,19 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a035.\u00a0Utilities</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch34s03.html\" title=\"Deprecated HP/SGI\" /><link rel=\"next\" href=\"ext_algorithms.html\" title=\"Chapter\u00a036.\u00a0Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a035.\u00a0Utilities</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a022.\u00a0Utilities</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt03ch21s03.html\" title=\"Deprecated HP/SGI\" /><link rel=\"next\" href=\"ext_algorithms.html\" title=\"Chapter\u00a023.\u00a0Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a022.\u00a0Utilities</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch21s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a035.\u00a0Utilities\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.util\"></a>Chapter\u00a035.\u00a0Utilities</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a022.\u00a0Utilities\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.util\"></a>Chapter\u00a022.\u00a0Utilities</h2></div></div></div><p>\n     The &lt;functional&gt; header contains many additional functors\n     and helper functions, extending section 20.3.  They are\n     implemented in the file stl_function.h:\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"code\">identity_element</code> for addition and multiplication. * \n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"code\">identity_element</code> for addition and multiplication. *\n   </p></li><li class=\"listitem\"><p>The functor <code class=\"code\">identity</code>, whose <code class=\"code\">operator()</code>\n-      returns the argument unchanged. * \n+      returns the argument unchanged. *\n   </p></li><li class=\"listitem\"><p>Composition functors <code class=\"code\">unary_function</code> and\n       <code class=\"code\">binary_function</code>, and their helpers <code class=\"code\">compose1</code>\n-      and <code class=\"code\">compose2</code>. * \n-    </p></li><li class=\"listitem\"><p><code class=\"code\">select1st</code> and <code class=\"code\">select2nd</code>, to strip pairs. * \n+      and <code class=\"code\">compose2</code>. *\n+    </p></li><li class=\"listitem\"><p><code class=\"code\">select1st</code> and <code class=\"code\">select2nd</code>, to strip pairs. *\n   </p></li><li class=\"listitem\"><p><code class=\"code\">project1st</code> and <code class=\"code\">project2nd</code>. * </p></li><li class=\"listitem\"><p>A set of functors/functions which always return the same result.  They\n       are <code class=\"code\">constant_void_fun</code>, <code class=\"code\">constant_binary_fun</code>,\n       <code class=\"code\">constant_unary_fun</code>, <code class=\"code\">constant0</code>,\n@@ -38,4 +38,4 @@\n </p><p>\n   The specialized algorithms of section 20.4.4 are extended with\n   <code class=\"code\">uninitialized_copy_n</code>. *\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Deprecated HP/SGI\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a036.\u00a0Algorithms</td></tr></table></div></body></html>\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch21s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Deprecated HP/SGI\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a023.\u00a0Algorithms</td></tr></table></div></body></html>"}, {"sha": "1046b4ba442be303daaa4f6c100f7c1195936e02", "filename": "libstdc++-v3/doc/html/manual/extensions.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0XII.\u00a0 Extensions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt11ch28s02.html\" title=\"Performance\" /><link rel=\"next\" href=\"bk01pt12pr03.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0III.\u00a0 Extensions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"facets.html\" title=\"Facets\" /><link rel=\"next\" href=\"bk01pt03pr01.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch28s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12pr03.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0XII.\u00a0 Extensions\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.ext\"></a>Part\u00a0XII.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03pr01.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0III.\u00a0 Extensions\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.ext\"></a>Part\u00a0III.\u00a0\n   Extensions\n-  <a id=\"id606344\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"preface\"><a href=\"bk01pt12pr03.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"ext_compile_checks.html\">29. Compile Time Checks</a></span></dt><dt><span class=\"chapter\"><a href=\"debug_mode.html\">30. Debug Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s03.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s03.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch30s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.methods\">Methods</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch30s04.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">31. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s05.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"profile_mode.html\">32. Profile Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s02.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s03.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s04.html\">Empirical Cost Model</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s05.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s06.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s06.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s06.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s07.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_allocators.html\">33. Allocators</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_allocators.html#manual.ext.allocator.mt\">mt_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_single\">Single Thread Example</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_multi\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bitmap_allocator.html\">bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.impl\">Implementation</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">34. Containers</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_containers.html#manual.ext.containers.pbds\">Policy Based Data Structures</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch34s02.html\">HP/SGI</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch34s03.html\">Deprecated HP/SGI</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">35. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">36. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">37. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">38. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">39. Input and Output</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">40. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">41. Concurrency</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch41s02.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch41s02.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch41s02.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch41s03.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch28s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12pr03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Performance\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n+  <a id=\"id433074\" class=\"indexterm\"></a>\n+</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"preface\"><a href=\"bk01pt03pr01.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"ext_compile_checks.html\">16. Compile Time Checks</a></span></dt><dt><span class=\"chapter\"><a href=\"debug_mode.html\">17. Debug Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s03.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s03.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch17s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.methods\">Methods</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch17s04.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s05.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"profile_mode.html\">19. Profile Mode</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s02.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s03.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s04.html\">Empirical Cost Model</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s05.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s06.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s06.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s06.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s07.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_allocators.html\">20. Allocators</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_allocators.html#manual.ext.allocator.mt\">mt_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_single\">Single Thread Example</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_allocators.html#allocator.mt.example_multi\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bitmap_allocator.html\">bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.impl\">Implementation</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">21. Containers</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_containers.html#manual.ext.containers.pbds\">Policy Based Data Structures</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch21s02.html\">HP/SGI</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch21s03.html\">Deprecated HP/SGI</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">22. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">23. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">24. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">25. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">26. Input and Output</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">27. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">28. Concurrency</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"sect2\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch28s02.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch28s02.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch28s02.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch28s03.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"facets.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03pr01.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Facets\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "3a8542aff2828183b84248c5f0539335e6ffda19", "filename": "libstdc++-v3/doc/html/manual/facets.html", "status": "modified", "additions": 699, "deletions": 24, "changes": 723, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffacets.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffacets.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffacets.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a015.\u00a0Facets aka Categories</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0 Localization\" /><link rel=\"prev\" href=\"locales.html\" title=\"Chapter\u00a014.\u00a0Locales\" /><link rel=\"next\" href=\"codecvt.html\" title=\"codecvt\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a015.\u00a0Facets aka Categories</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"locales.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VI.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Facets</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"localization.html\" title=\"Chapter\u00a08.\u00a0 Localization\" /><link rel=\"prev\" href=\"localization.html\" title=\"Chapter\u00a08.\u00a0 Localization\" /><link rel=\"next\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Facets</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a08.\u00a0\n   Localization\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"codecvt.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.localization.facet\"></a>Chapter\u00a015.\u00a0Facets aka Categories</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"facets.html#manual.localization.facet.ctype\">ctype</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"facets.html#facet.ctype.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"facets.html#facet.ctype.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"codecvt.html\">codecvt</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"messages.html\">messages</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.future\">Future</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"ctype\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.facet.ctype\"></a>ctype</h2></div></div></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" title=\"Specializations\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id602134\"></a>Specializations</h4></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers.html\">Next</a></td></tr></table><hr /></div><div class=\"section\" title=\"Facets\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.localization.facet\"></a>Facets</h2></div></div></div><div class=\"section\" title=\"ctype\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.localization.facet.ctype\"></a>ctype</h3></div></div></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.ctype.impl\"></a>Implementation</h4></div></div></div><div class=\"section\" title=\"Specializations\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id503472\"></a>Specializations</h5></div></div></div><p>\n For the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt; ,\n conversions are made between the internal character set (always UCS4\n on GNU/Linux) and whatever the currently selected locale for the\n@@ -28,50 +28,725 @@\n </p><p>\n Neither of these two required specializations deals with Unicode\n characters.\n-</p></div></div><div class=\"sect2\" title=\"Future\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-   How to deal with the global locale issue? \n-   </p></li><li class=\"listitem\"><p> \n+</p></div></div><div class=\"section\" title=\"Future\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.ctype.future\"></a>Future</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+   How to deal with the global locale issue?\n+   </p></li><li class=\"listitem\"><p>\n    How to deal with different types than char, wchar_t? </p></li><li class=\"listitem\"><p>\n-   Overlap between codecvt/ctype: narrow/widen \n-   </p></li><li class=\"listitem\"><p> \n+   Overlap between codecvt/ctype: narrow/widen\n+   </p></li><li class=\"listitem\"><p>\n        Mask typedef in codecvt_base, argument types in codecvt.  what\n-       is know about this type? \n-   </p></li><li class=\"listitem\"><p> \n+       is know about this type?\n+   </p></li><li class=\"listitem\"><p>\n    Why mask* argument in codecvt?\n    </p></li><li class=\"listitem\"><p>\n        Can this be made (more) generic? is there a simple way to\n        straighten out the configure-time mess that is a by-product of\n-       this class?  \n-   </p></li><li class=\"listitem\"><p> \n+       this class?\n+   </p></li><li class=\"listitem\"><p>\n        Get the ctype&lt;wchar_t&gt;::mask stuff under control. Need to\n        make some kind of static table, and not do lookup every time\n        somebody hits the do_is... functions. Too bad we can't just\n-       redefine mask for ctype&lt;wchar_t&gt; \n-   </p></li><li class=\"listitem\"><p> \n+       redefine mask for ctype&lt;wchar_t&gt;\n+   </p></li><li class=\"listitem\"><p>\n        Rename abstract base class. See if just smash-overriding is a\n        better approach. Clarify, add sanity to naming.\n-     </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id721212\"></a><p><span class=\"title\"><i>\n+     </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.ctype.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id379548\"></a><p><span class=\"title\"><i>\n       The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6  Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id611041\"></a><p><span class=\"title\"><i>\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6  Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id449311\"></a><p><span class=\"title\"><i>\n       Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id612309\"></a><p><span class=\"title\"><i>\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id416640\"></a><p><span class=\"title\"><i>\n       ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id612328\"></a><p><span class=\"title\"><i>\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id416658\"></a><p><span class=\"title\"><i>\n       ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\" title=\"The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\"><a id=\"id626861\"></a><p><span class=\"title\"><i>\n-      The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id497267\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.unix.org/version3/ieee_std.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\n+\t</em>\n+      </a>\n+    . </span><span class=\"copyright\">Copyright \u00a9 1999 \n+      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id381518\"></a><p><span class=\"title\"><i>\n+      The C++ Programming Language, Special Edition\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id503670\"></a><p><span class=\"title\"><i>\n+      Standard C++ IOStreams and Locales\n+    </i>. </span><span class=\"subtitle\">\n+      Advanced Programmer's Guide and Reference\n+    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley Longman\n+      . </span></span></p></div></div></div><div class=\"section\" title=\"codecvt\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.localization.facet.codecvt\"></a>codecvt</h3></div></div></div><p>\n+The standard class codecvt attempts to address conversions between\n+different character encoding schemes. In particular, the standard\n+attempts to detail conversions between the implementation-defined wide\n+characters (hereafter referred to as wchar_t) and the standard type\n+char that is so beloved in classic <span class=\"quote\">\u201c<span class=\"quote\">C</span>\u201d</span> (which can now be\n+referred to as narrow characters.)  This document attempts to describe\n+how the GNU libstdc++ implementation deals with the conversion between\n+wide and narrow characters, and also presents a framework for dealing\n+with the huge number of other encodings that iconv can convert,\n+including Unicode and UTF8. Design issues and requirements are\n+addressed, and examples of correct usage for both the required\n+specializations for wide and narrow characters and the\n+implementation-provided extended functionality are given.\n+</p><div class=\"section\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.req\"></a>Requirements</h4></div></div></div><p>\n+Around page 425 of the C++ Standard, this charming heading comes into view:\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+22.2.1.5 - Template class codecvt\n+</p></blockquote></div><p>\n+The text around the codecvt definition gives some clues:\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-1- The class codecvt&lt;internT,externT,stateT&gt; is for use when\n+converting from one codeset to another, such as from wide characters\n+to multibyte characters, between wide character encodings such as\n+Unicode and EUC.\n+</em></span>\n+</p></blockquote></div><p>\n+Hmm. So, in some unspecified way, Unicode encodings and\n+translations between other character sets should be handled by this\n+class.\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-2- The stateT argument selects the pair of codesets being mapped between.\n+</em></span>\n+</p></blockquote></div><p>\n+Ah ha! Another clue...\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-3- The instantiations required in the Table ??\n+(lib.locale.category), namely codecvt&lt;wchar_t,char,mbstate_t&gt; and\n+codecvt&lt;char,char,mbstate_t&gt;, convert the implementation-defined\n+native character set. codecvt&lt;char,char,mbstate_t&gt; implements a\n+degenerate conversion; it does not convert at\n+all. codecvt&lt;wchar_t,char,mbstate_t&gt; converts between the native\n+character sets for tiny and wide characters. Instantiations on\n+mbstate_t perform conversion between encodings known to the library\n+implementor.  Other encodings can be converted by specializing on a\n+user-defined stateT type. The stateT object can contain any state that\n+is useful to communicate to or from the specialized do_convert member.\n+</em></span>\n+</p></blockquote></div><p>\n+At this point, a couple points become clear:\n+</p><p>\n+One: The standard clearly implies that attempts to add non-required\n+(yet useful and widely used) conversions need to do so through the\n+third template parameter, stateT.</p><p>\n+Two: The required conversions, by specifying mbstate_t as the third\n+template parameter, imply an implementation strategy that is mostly\n+(or wholly) based on the underlying C library, and the functions\n+mcsrtombs and wcsrtombs in particular.</p></div><div class=\"section\" title=\"Design\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.design\"></a>Design</h4></div></div></div><div class=\"section\" title=\"wchar_t Size\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"codecvt.design.wchar_t_size\"></a><span class=\"type\">wchar_t</span> Size</h5></div></div></div><p>\n+      The simple implementation detail of wchar_t's size seems to\n+      repeatedly confound people. Many systems use a two byte,\n+      unsigned integral type to represent wide characters, and use an\n+      internal encoding of Unicode or UCS2. (See AIX, Microsoft NT,\n+      Java, others.) Other systems, use a four byte, unsigned integral\n+      type to represent wide characters, and use an internal encoding\n+      of UCS4. (GNU/Linux systems using glibc, in particular.) The C\n+      programming language (and thus C++) does not specify a specific\n+      size for the type wchar_t.\n+    </p><p>\n+      Thus, portable C++ code cannot assume a byte size (or endianness) either.\n+    </p></div><div class=\"section\" title=\"Support for Unicode\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"codecvt.design.unicode\"></a>Support for Unicode</h5></div></div></div><p>\n+    Probably the most frequently asked question about code conversion\n+    is: \"So dudes, what's the deal with Unicode strings?\"\n+    The dude part is optional, but apparently the usefulness of\n+    Unicode strings is pretty widely appreciated. Sadly, this specific\n+    encoding (And other useful encodings like UTF8, UCS4, ISO 8859-10,\n+    etc etc etc) are not mentioned in the C++ standard.\n+  </p><p>\n+    A couple of comments:\n+  </p><p>\n+    The thought that all one needs to convert between two arbitrary\n+    codesets is two types and some kind of state argument is\n+    unfortunate. In particular, encodings may be stateless. The naming\n+    of the third parameter as stateT is unfortunate, as what is really\n+    needed is some kind of generalized type that accounts for the\n+    issues that abstract encodings will need. The minimum information\n+    that is required includes:\n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+\tIdentifiers for each of the codesets involved in the\n+\tconversion. For example, using the iconv family of functions\n+\tfrom the Single Unix Specification (what used to be called\n+\tX/Open) hosted on the GNU/Linux operating system allows\n+\tbi-directional mapping between far more than the following\n+\ttantalizing possibilities:\n+      </p><p>\n+\t(An edited list taken from <code class=\"code\">`iconv --list`</code> on a\n+\tRed Hat 6.2/Intel system:\n+      </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n+8859_1, 8859_9, 10646-1:1993, 10646-1:1993/UCS4, ARABIC, ARABIC7,\n+ASCII, EUC-CN, EUC-JP, EUC-KR, EUC-TW, GREEK-CCIcode, GREEK, GREEK7-OLD,\n+GREEK7, GREEK8, HEBREW, ISO-8859-1, ISO-8859-2, ISO-8859-3,\n+ISO-8859-4, ISO-8859-5, ISO-8859-6, ISO-8859-7, ISO-8859-8,\n+ISO-8859-9, ISO-8859-10, ISO-8859-11, ISO-8859-13, ISO-8859-14,\n+ISO-8859-15, ISO-10646, ISO-10646/UCS2, ISO-10646/UCS4,\n+ISO-10646/UTF-8, ISO-10646/UTF8, SHIFT-JIS, SHIFT_JIS, UCS-2, UCS-4,\n+UCS2, UCS4, UNICODE, UNICODEBIG, UNICODELIcodeLE, US-ASCII, US, UTF-8,\n+UTF-16, UTF8, UTF16).\n+</pre></blockquote></div><p>\n+For iconv-based implementations, string literals for each of the\n+encodings (i.e. \"UCS-2\" and \"UTF-8\") are necessary,\n+although for other,\n+non-iconv implementations a table of enumerated values or some other\n+mechanism may be required.\n+</p></li><li class=\"listitem\"><p>\n+ Maximum length of the identifying string literal.\n+</p></li><li class=\"listitem\"><p>\n+ Some encodings require explicit endian-ness. As such, some kind\n+  of endian marker or other byte-order marker will be necessary. See\n+  \"Footnotes for C/C++ developers\" in Haible for more information on\n+  UCS-2/Unicode endian issues. (Summary: big endian seems most likely,\n+  however implementations, most notably Microsoft, vary.)\n+</p></li><li class=\"listitem\"><p>\n+ Types representing the conversion state, for conversions involving\n+  the machinery in the \"C\" library, or the conversion descriptor, for\n+  conversions using iconv (such as the type iconv_t.)  Note that the\n+  conversion descriptor encodes more information than a simple encoding\n+  state type.\n+</p></li><li class=\"listitem\"><p>\n+ Conversion descriptors for both directions of encoding. (i.e., both\n+  UCS-2 to UTF-8 and UTF-8 to UCS-2.)\n+</p></li><li class=\"listitem\"><p>\n+ Something to indicate if the conversion requested if valid.\n+</p></li><li class=\"listitem\"><p>\n+ Something to represent if the conversion descriptors are valid.\n+</p></li><li class=\"listitem\"><p>\n+ Some way to enforce strict type checking on the internal and\n+  external types. As part of this, the size of the internal and\n+  external types will need to be known.\n+</p></li></ul></div></div><div class=\"section\" title=\"Other Issues\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"codecvt.design.issues\"></a>Other Issues</h5></div></div></div><p>\n+In addition, multi-threaded and multi-locale environments also impact\n+the design and requirements for code conversions. In particular, they\n+affect the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt;\n+when implemented using standard \"C\" functions.\n+</p><p>\n+Three problems arise, one big, one of medium importance, and one small.\n+</p><p>\n+First, the small: mcsrtombs and wcsrtombs may not be multithread-safe\n+on all systems required by the GNU tools. For GNU/Linux and glibc,\n+this is not an issue.\n+</p><p>\n+Of medium concern, in the grand scope of things, is that the functions\n+used to implement this specialization work on null-terminated\n+strings. Buffers, especially file buffers, may not be null-terminated,\n+thus giving conversions that end prematurely or are otherwise\n+incorrect. Yikes!\n+</p><p>\n+The last, and fundamental problem, is the assumption of a global\n+locale for all the \"C\" functions referenced above. For something like\n+C++ iostreams (where codecvt is explicitly used) the notion of\n+multiple locales is fundamental. In practice, most users may not run\n+into this limitation. However, as a quality of implementation issue,\n+the GNU C++ library would like to offer a solution that allows\n+multiple locales and or simultaneous usage with computationally\n+correct results. In short, libstdc++ is trying to offer, as an\n+option, a high-quality implementation, damn the additional complexity!\n+</p><p>\n+For the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt; ,\n+conversions are made between the internal character set (always UCS4\n+on GNU/Linux) and whatever the currently selected locale for the\n+LC_CTYPE category implements.\n+</p></div></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.impl\"></a>Implementation</h4></div></div></div><p>\n+The two required specializations are implemented as follows:\n+</p><p>\n+<code class=\"code\">\n+codecvt&lt;char, char, mbstate_t&gt;\n+</code>\n+</p><p>\n+This is a degenerate (i.e., does nothing) specialization. Implementing\n+this was a piece of cake.\n+</p><p>\n+<code class=\"code\">\n+codecvt&lt;char, wchar_t, mbstate_t&gt;\n+</code>\n+</p><p>\n+This specialization, by specifying all the template parameters, pretty\n+much ties the hands of implementors. As such, the implementation is\n+straightforward, involving mcsrtombs for the conversions between char\n+to wchar_t and wcsrtombs for conversions between wchar_t and char.\n+</p><p>\n+Neither of these two required specializations deals with Unicode\n+characters. As such, libstdc++ implements a partial specialization\n+of the codecvt class with and iconv wrapper class, encoding_state as the\n+third template parameter.\n+</p><p>\n+This implementation should be standards conformant. First of all, the\n+standard explicitly points out that instantiations on the third\n+template parameter, stateT, are the proper way to implement\n+non-required conversions. Second of all, the standard says (in Chapter\n+17) that partial specializations of required classes are a-ok. Third\n+of all, the requirements for the stateT type elsewhere in the standard\n+(see 21.1.2 traits typedefs) only indicate that this type be copy\n+constructible.\n+</p><p>\n+As such, the type encoding_state is defined as a non-templatized, POD\n+type to be used as the third type of a codecvt instantiation. This\n+type is just a wrapper class for iconv, and provides an easy interface\n+to iconv functionality.\n+</p><p>\n+There are two constructors for encoding_state:\n+</p><p>\n+<code class=\"code\">\n+encoding_state() : __in_desc(0), __out_desc(0)\n+</code>\n+</p><p>\n+This default constructor sets the internal encoding to some default\n+(currently UCS4) and the external encoding to whatever is returned by\n+nl_langinfo(CODESET).\n+</p><p>\n+<code class=\"code\">\n+encoding_state(const char* __int, const char* __ext)\n+</code>\n+</p><p>\n+This constructor takes as parameters string literals that indicate the\n+desired internal and external encoding. There are no defaults for\n+either argument.\n+</p><p>\n+One of the issues with iconv is that the string literals identifying\n+conversions are not standardized. Because of this, the thought of\n+mandating and or enforcing some set of pre-determined valid\n+identifiers seems iffy: thus, a more practical (and non-migraine\n+inducing) strategy was implemented: end-users can specify any string\n+(subject to a pre-determined length qualifier, currently 32 bytes) for\n+encodings. It is up to the user to make sure that these strings are\n+valid on the target system.\n+</p><p>\n+<code class=\"code\">\n+void\n+_M_init()\n+</code>\n+</p><p>\n+Strangely enough, this member function attempts to open conversion\n+descriptors for a given encoding_state object. If the conversion\n+descriptors are not valid, the conversion descriptors returned will\n+not be valid and the resulting calls to the codecvt conversion\n+functions will return error.\n+</p><p>\n+<code class=\"code\">\n+bool\n+_M_good()\n+</code>\n+</p><p>\n+Provides a way to see if the given encoding_state object has been\n+properly initialized. If the string literals describing the desired\n+internal and external encoding are not valid, initialization will\n+fail, and this will return false. If the internal and external\n+encodings are valid, but iconv_open could not allocate conversion\n+descriptors, this will also return false. Otherwise, the object is\n+ready to convert and will return true.\n+</p><p>\n+<code class=\"code\">\n+encoding_state(const encoding_state&amp;)\n+</code>\n+</p><p>\n+As iconv allocates memory and sets up conversion descriptors, the copy\n+constructor can only copy the member data pertaining to the internal\n+and external code conversions, and not the conversion descriptors\n+themselves.\n+</p><p>\n+Definitions for all the required codecvt member functions are provided\n+for this specialization, and usage of codecvt&lt;internal character type,\n+external character type, encoding_state&gt; is consistent with other\n+codecvt usage.\n+</p></div><div class=\"section\" title=\"Use\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.use\"></a>Use</h4></div></div></div><p>A conversions involving string literal.</p><pre class=\"programlisting\">\n+  typedef codecvt_base::result                  result;\n+  typedef unsigned short                        unicode_t;\n+  typedef unicode_t                             int_type;\n+  typedef char                                  ext_type;\n+  typedef encoding_state                          state_type;\n+  typedef codecvt&lt;int_type, ext_type, state_type&gt; unicode_codecvt;\n+\n+  const ext_type*       e_lit = \"black pearl jasmine tea\";\n+  int                   size = strlen(e_lit);\n+  int_type              i_lit_base[24] =\n+  { 25088, 27648, 24832, 25344, 27392, 8192, 28672, 25856, 24832, 29184,\n+    27648, 8192, 27136, 24832, 29440, 27904, 26880, 28160, 25856, 8192, 29696,\n+    25856, 24832, 2560\n+  };\n+  const int_type*       i_lit = i_lit_base;\n+  const ext_type*       efrom_next;\n+  const int_type*       ifrom_next;\n+  ext_type*             e_arr = new ext_type[size + 1];\n+  ext_type*             eto_next;\n+  int_type*             i_arr = new int_type[size + 1];\n+  int_type*             ito_next;\n+\n+  // construct a locale object with the specialized facet.\n+  locale                loc(locale::classic(), new unicode_codecvt);\n+  // sanity check the constructed locale has the specialized facet.\n+  VERIFY( has_facet&lt;unicode_codecvt&gt;(loc) );\n+  const unicode_codecvt&amp; cvt = use_facet&lt;unicode_codecvt&gt;(loc);\n+  // convert between const char* and unicode strings\n+  unicode_codecvt::state_type state01(\"UNICODE\", \"ISO_8859-1\");\n+  initialize_state(state01);\n+  result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next,\n+\t\t     i_arr, i_arr + size, ito_next);\n+  VERIFY( r1 == codecvt_base::ok );\n+  VERIFY( !int_traits::compare(i_arr, i_lit, size) );\n+  VERIFY( efrom_next == e_lit + size );\n+  VERIFY( ito_next == i_arr + size );\n+</pre></div><div class=\"section\" title=\"Future\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.future\"></a>Future</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+   a. things that are sketchy, or remain unimplemented:\n+      do_encoding, max_length and length member functions\n+      are only weakly implemented. I have no idea how to do\n+      this correctly, and in a generic manner.  Nathan?\n+</p></li><li class=\"listitem\"><p>\n+   b. conversions involving std::string\n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n+      how should operators != and == work for string of\n+      different/same encoding?\n+      </p></li><li class=\"listitem\"><p>\n+      what is equal? A byte by byte comparison or an\n+      encoding then byte comparison?\n+      </p></li><li class=\"listitem\"><p>\n+      conversions between narrow, wide, and unicode strings\n+      </p></li></ul></div></li><li class=\"listitem\"><p>\n+   c. conversions involving std::filebuf and std::ostream\n+</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n+      how to initialize the state object in a\n+      standards-conformant manner?\n+      </p></li><li class=\"listitem\"><p>\n+      how to synchronize the \"C\" and \"C++\"\n+      conversion information?\n+      </p></li><li class=\"listitem\"><p>\n+      wchar_t/char internal buffers and conversions between\n+      internal/external buffers?\n+      </p></li></ul></div></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.codecvt.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id413506\"></a><p><span class=\"title\"><i>\n+      The GNU C Library\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">\n+      Chapters 6 Character Set Handling and 7 Locales and Internationalization\n+    . </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id410520\"></a><p><span class=\"title\"><i>\n+      Correspondence\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id410548\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 14882:1998 Programming languages - C++\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id479822\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 9899:1999 Programming languages - C\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id479841\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.opengroup.org/austin\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  System Interface Definitions, Issue 7 (IEEE Std. 1003.1-2008)\n+\t</em>\n+      </a>\n+    . </span><span class=\"copyright\">Copyright \u00a9 2008 \n+\tThe Open Group/The Institute of Electrical and Electronics\n+\tEngineers, Inc.\n+      . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id401535\"></a><p><span class=\"title\"><i>\n+      The C++ Programming Language, Special Edition\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id390266\"></a><p><span class=\"title\"><i>\n+      Standard C++ IOStreams and Locales\n+    </i>. </span><span class=\"subtitle\">\n+      Advanced Programmer's Guide and Reference\n+    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley Longman\n+      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id486188\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.lysator.liu.se/c/na1.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  A brief description of Normative Addendum 1\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id626888\"></a><p><span class=\"title\"><i>\n+    . </span><span class=\"author\"><span class=\"firstname\">Clive</span> <span class=\"surname\">Feather</span>. </span><span class=\"pagenums\">Extended Character Sets. </span></p></div><div class=\"biblioentry\"><a id=\"id420899\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://tldp.org/HOWTO/Unicode-HOWTO.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  The Unicode HOWTO\n+\t</em>\n+\t</a>\n+    . </span><span class=\"author\"><span class=\"firstname\">Bruno</span> <span class=\"surname\">Haible</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id404329\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.cl.cam.ac.uk/~mgk25/unicode.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  UTF-8 and Unicode FAQ for Unix/Linux\n+\t</em>\n+      </a>\n+    . </span><span class=\"author\"><span class=\"firstname\">Markus</span> <span class=\"surname\">Khun</span>. </span></p></div></div></div><div class=\"section\" title=\"messages\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.localization.facet.messages\"></a>messages</h3></div></div></div><p>\n+The std::messages facet implements message retrieval functionality\n+equivalent to Java's java.text.MessageFormat .using either GNU gettext\n+or IEEE 1003.1-200 functions.\n+</p><div class=\"section\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.req\"></a>Requirements</h4></div></div></div><p>\n+The std::messages facet is probably the most vaguely defined facet in\n+the standard library. It's assumed that this facility was built into\n+the standard library in order to convert string literals from one\n+locale to the other. For instance, converting the \"C\" locale's\n+<code class=\"code\">const char* c = \"please\"</code> to a German-localized <code class=\"code\">\"bitte\"</code>\n+during program execution.\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+22.2.7.1 - Template class messages [lib.locale.messages]\n+</p></blockquote></div><p>\n+This class has three public member functions, which directly\n+correspond to three protected virtual member functions.\n+</p><p>\n+The public member functions are:\n+</p><p>\n+<code class=\"code\">catalog open(const string&amp;, const locale&amp;) const</code>\n+</p><p>\n+<code class=\"code\">string_type get(catalog, int, int, const string_type&amp;) const</code>\n+</p><p>\n+<code class=\"code\">void close(catalog) const</code>\n+</p><p>\n+While the virtual functions are:\n+</p><p>\n+<code class=\"code\">catalog do_open(const string&amp;, const locale&amp;) const</code>\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-1- Returns: A value that may be passed to get() to retrieve a\n+message, from the message catalog identified by the string name\n+according to an implementation-defined mapping. The result can be used\n+until it is passed to close().  Returns a value less than 0 if no such\n+catalog can be opened.\n+</em></span>\n+</p></blockquote></div><p>\n+<code class=\"code\">string_type do_get(catalog, int, int, const string_type&amp;) const</code>\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-3- Requires: A catalog cat obtained from open() and not yet closed.\n+-4- Returns: A message identified by arguments set, msgid, and dfault,\n+according to an implementation-defined mapping. If no such message can\n+be found, returns dfault.\n+</em></span>\n+</p></blockquote></div><p>\n+<code class=\"code\">void do_close(catalog) const</code>\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+-5- Requires: A catalog cat obtained from open() and not yet closed.\n+-6- Effects: Releases unspecified resources associated with cat.\n+-7- Notes: The limit on such resources, if any, is implementation-defined.\n+</em></span>\n+</p></blockquote></div></div><div class=\"section\" title=\"Design\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.design\"></a>Design</h4></div></div></div><p>\n+A couple of notes on the standard.\n+</p><p>\n+First, why is <code class=\"code\">messages_base::catalog</code> specified as a typedef\n+to int? This makes sense for implementations that use\n+<code class=\"code\">catopen</code>, but not for others. Fortunately, it's not heavily\n+used and so only a minor irritant.\n+</p><p>\n+Second, by making the member functions <code class=\"code\">const</code>, it is\n+impossible to save state in them. Thus, storing away information used\n+in the 'open' member function for use in 'get' is impossible. This is\n+unfortunate.\n+</p><p>\n+The 'open' member function in particular seems to be oddly\n+designed. The signature seems quite peculiar. Why specify a <code class=\"code\">const\n+string&amp; </code> argument, for instance, instead of just <code class=\"code\">const\n+char*</code>? Or, why specify a <code class=\"code\">const locale&amp;</code> argument that is\n+to be used in the 'get' member function? How, exactly, is this locale\n+argument useful? What was the intent? It might make sense if a locale\n+argument was associated with a given default message string in the\n+'open' member function, for instance. Quite murky and unclear, on\n+reflection.\n+</p><p>\n+Lastly, it seems odd that messages, which explicitly require code\n+conversion, don't use the codecvt facet. Because the messages facet\n+has only one template parameter, it is assumed that ctype, and not\n+codecvt, is to be used to convert between character sets.\n+</p><p>\n+It is implicitly assumed that the locale for the default message\n+string in 'get' is in the \"C\" locale. Thus, all source code is assumed\n+to be written in English, so translations are always from \"en_US\" to\n+other, explicitly named locales.\n+</p></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.impl\"></a>Implementation</h4></div></div></div><div class=\"section\" title=\"Models\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"messages.impl.models\"></a>Models</h5></div></div></div><p>\n+    This is a relatively simple class, on the face of it. The standard\n+    specifies very little in concrete terms, so generic\n+    implementations that are conforming yet do very little are the\n+    norm. Adding functionality that would be useful to programmers and\n+    comparable to Java's java.text.MessageFormat takes a bit of work,\n+    and is highly dependent on the capabilities of the underlying\n+    operating system.\n+  </p><p>\n+    Three different mechanisms have been provided, selectable via\n+    configure flags:\n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+       generic\n+     </p><p>\n+       This model does very little, and is what is used by default.\n+     </p></li><li class=\"listitem\"><p>\n+       gnu\n+     </p><p>\n+       The gnu model is complete and fully tested. It's based on the\n+       GNU gettext package, which is part of glibc. It uses the\n+       functions <code class=\"code\">textdomain, bindtextdomain, gettext</code> to\n+       implement full functionality. Creating message catalogs is a\n+       relatively straight-forward process and is lightly documented\n+       below, and fully documented in gettext's distributed\n+       documentation.\n+     </p></li><li class=\"listitem\"><p>\n+       ieee_1003.1-200x\n+     </p><p>\n+       This is a complete, though untested, implementation based on\n+       the IEEE standard. The functions <code class=\"code\">catopen, catgets,\n+       catclose</code> are used to retrieve locale-specific messages\n+       given the appropriate message catalogs that have been\n+       constructed for their use. Note, the script <code class=\"code\">\n+       po2msg.sed</code> that is part of the gettext distribution can\n+       convert gettext catalogs into catalogs that\n+       <code class=\"code\">catopen</code> can use.\n+   </p></li></ul></div><p>\n+A new, standards-conformant non-virtual member function signature was\n+added for 'open' so that a directory could be specified with a given\n+message catalog. This simplifies calling conventions for the gnu\n+model.\n+</p></div><div class=\"section\" title=\"The GNU Model\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"messages.impl.gnu\"></a>The GNU Model</h5></div></div></div><p>\n+    The messages facet, because it is retrieving and converting\n+    between characters sets, depends on the ctype and perhaps the\n+    codecvt facet in a given locale. In addition, underlying \"C\"\n+    library locale support is necessary for more than just the\n+    <code class=\"code\">LC_MESSAGES</code> mask: <code class=\"code\">LC_CTYPE</code> is also\n+    necessary. To avoid any unpleasantness, all bits of the \"C\" mask\n+    (i.e. <code class=\"code\">LC_ALL</code>) are set before retrieving messages.\n+  </p><p>\n+    Making the message catalogs can be initially tricky, but become\n+    quite simple with practice. For complete info, see the gettext\n+    documentation. Here's an idea of what is required:\n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+       Make a source file with the required string literals that need\n+       to be translated. See <code class=\"code\">intl/string_literals.cc</code> for\n+       an example.\n+     </p></li><li class=\"listitem\"><p>\n+       Make initial catalog (see \"4 Making the PO Template File\" from\n+       the gettext docs).</p><p>\n+   <code class=\"code\"> xgettext --c++ --debug string_literals.cc -o libstdc++.pot </code>\n+   </p></li><li class=\"listitem\"><p>Make language and country-specific locale catalogs.</p><p>\n+   <code class=\"code\">cp libstdc++.pot fr_FR.po</code>\n+   </p><p>\n+   <code class=\"code\">cp libstdc++.pot de_DE.po</code>\n+   </p></li><li class=\"listitem\"><p>\n+       Edit localized catalogs in emacs so that strings are\n+       translated.\n+     </p><p>\n+   <code class=\"code\">emacs fr_FR.po</code>\n+   </p></li><li class=\"listitem\"><p>Make the binary mo files.</p><p>\n+   <code class=\"code\">msgfmt fr_FR.po -o fr_FR.mo</code>\n+   </p><p>\n+   <code class=\"code\">msgfmt de_DE.po -o de_DE.mo</code>\n+   </p></li><li class=\"listitem\"><p>Copy the binary files into the correct directory structure.</p><p>\n+   <code class=\"code\">cp fr_FR.mo (dir)/fr_FR/LC_MESSAGES/libstdc++.mo</code>\n+   </p><p>\n+   <code class=\"code\">cp de_DE.mo (dir)/de_DE/LC_MESSAGES/libstdc++.mo</code>\n+   </p></li><li class=\"listitem\"><p>Use the new message catalogs.</p><p>\n+   <code class=\"code\">locale loc_de(\"de_DE\");</code>\n+   </p><p>\n+   <code class=\"code\">\n+   use_facet&lt;messages&lt;char&gt; &gt;(loc_de).open(\"libstdc++\", locale(), dir);\n+   </code>\n+   </p></li></ul></div></div></div><div class=\"section\" title=\"Use\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.use\"></a>Use</h4></div></div></div><p>\n+   A simple example using the GNU model of message conversion.\n+ </p><pre class=\"programlisting\">\n+#include &lt;iostream&gt;\n+#include &lt;locale&gt;\n+using namespace std;\n+\n+void test01()\n+{\n+  typedef messages&lt;char&gt;::catalog catalog;\n+  const char* dir =\n+  \"/mnt/egcs/build/i686-pc-linux-gnu/libstdc++/po/share/locale\";\n+  const locale loc_de(\"de_DE\");\n+  const messages&lt;char&gt;&amp; mssg_de = use_facet&lt;messages&lt;char&gt; &gt;(loc_de);\n+\n+  catalog cat_de = mssg_de.open(\"libstdc++\", loc_de, dir);\n+  string s01 = mssg_de.get(cat_de, 0, 0, \"please\");\n+  string s02 = mssg_de.get(cat_de, 0, 0, \"thank you\");\n+  cout &lt;&lt; \"please in german:\" &lt;&lt; s01 &lt;&lt; '\\n';\n+  cout &lt;&lt; \"thank you in german:\" &lt;&lt; s02 &lt;&lt; '\\n';\n+  mssg_de.close(cat_de);\n+}\n+</pre></div><div class=\"section\" title=\"Future\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.future\"></a>Future</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+    Things that are sketchy, or remain unimplemented:\n+  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n+\t  _M_convert_from_char, _M_convert_to_char are in flux,\n+\t  depending on how the library ends up doing character set\n+\t  conversions. It might not be possible to do a real character\n+\t  set based conversion, due to the fact that the template\n+\t  parameter for messages is not enough to instantiate the\n+\t  codecvt facet (1 supplied, need at least 2 but would prefer\n+\t  3).\n+\t</p></li><li class=\"listitem\"><p>\n+\t  There are issues with gettext needing the global locale set\n+\t  to extract a message. This dependence on the global locale\n+\t  makes the current \"gnu\" model non MT-safe. Future versions\n+\t  of glibc, i.e. glibc 2.3.x will fix this, and the C++ library\n+\t  bits are already in place.\n+\t</p></li></ul></div></li><li class=\"listitem\"><p>\n+    Development versions of the GNU \"C\" library, glibc 2.3 will allow\n+    a more efficient, MT implementation of std::messages, and will\n+    allow the removal of the _M_name_messages data member. If this is\n+    done, it will change the library ABI. The C++ parts to support\n+    glibc 2.3 have already been coded, but are not in use: once this\n+    version of the \"C\" library is released, the marked parts of the\n+    messages implementation can be switched over to the new \"C\"\n+    library functionality.\n+  </p></li><li class=\"listitem\"><p>\n+    At some point in the near future, std::numpunct will probably use\n+    std::messages facilities to implement truename/falsename\n+    correctly. This is currently not done, but entries in\n+    libstdc++.pot have already been made for \"true\" and \"false\" string\n+    literals, so all that remains is the std::numpunct coding and the\n+    configure/make hassles to make the installed library search its\n+    own catalog. Currently the libstdc++.mo catalog is only searched\n+    for the testsuite cases involving messages members.\n+  </p></li><li class=\"listitem\"><p> The following member functions:</p><p>\n+   <code class=\"code\">\n+\tcatalog\n+\topen(const basic_string&lt;char&gt;&amp; __s, const locale&amp; __loc) const\n+   </code>\n+   </p><p>\n+   <code class=\"code\">\n+   catalog\n+   open(const basic_string&lt;char&gt;&amp;, const locale&amp;, const char*) const;\n+   </code>\n+   </p><p>\n+   Don't actually return a \"value less than 0 if no such catalog\n+   can be opened\" as required by the standard in the \"gnu\"\n+   model. As of this writing, it is unknown how to query to see\n+   if a specified message catalog exists using the gettext\n+   package.\n+   </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"facet.messages.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id400918\"></a><p><span class=\"title\"><i>\n+      The GNU C Library\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6 Character Set Handling, and 7 Locales and Internationalization\n+    . </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id508558\"></a><p><span class=\"title\"><i>\n+      Correspondence\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id417528\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 14882:1998 Programming languages - C++\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id417546\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 9899:1999 Programming languages - C\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id417565\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.opengroup.org/austin\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  System Interface Definitions, Issue 7 (IEEE Std. 1003.1-2008)\n+\t</em>\n+      </a>\n+    . </span><span class=\"copyright\">Copyright \u00a9 2008 \n+\tThe Open Group/The Institute of Electrical and Electronics\n+\tEngineers, Inc.\n+      . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id386723\"></a><p><span class=\"title\"><i>\n       The C++ Programming Language, Special Edition\n     </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n \tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id655841\"></a><p><span class=\"title\"><i>\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id403269\"></a><p><span class=\"title\"><i>\n       Standard C++ IOStreams and Locales\n     </i>. </span><span class=\"subtitle\">\n       Advanced Programmer's Guide and Reference\n     . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n \tAddison Wesley Longman\n-      . </span></span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"locales.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"localization.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"codecvt.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a014.\u00a0Locales\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0codecvt</td></tr></table></div></body></html>\n+      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id471633\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://java.sun.com/reference/api/index.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  API Specifications, Java Platform\n+\t</em>\n+      </a>\n+    . </span><span class=\"pagenums\">java.util.Properties, java.text.MessageFormat,\n+java.util.Locale, java.util.ResourceBundle\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id471656\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.gnu.org/software/gettext/\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  GNU gettext tools, version 0.10.38, Native Language Support\n+Library and Tools.\n+\t</em>\n+      </a>\n+    . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"localization.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a08.\u00a0\n+  Localization\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a09.\u00a0\n+  Containers\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "0795443b26d3f4cbd760c1c91723ec7053ca7d1e", "filename": "libstdc++-v3/doc/html/manual/fstreams.html", "status": "modified", "additions": 106, "deletions": 8, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffstreams.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffstreams.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffstreams.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a027.\u00a0File Based Streams</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0 Input and Output\" /><link rel=\"prev\" href=\"stringstreams.html\" title=\"Chapter\u00a026.\u00a0Memory Based Streams\" /><link rel=\"next\" href=\"bk01pt11ch27s02.html\" title=\"Binary Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a027.\u00a0File Based Streams</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"stringstreams.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>File Based Streams</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Chapter\u00a013.\u00a0 Input and Output\" /><link rel=\"prev\" href=\"stringstreams.html\" title=\"Memory Based Streams\" /><link rel=\"next\" href=\"io_and_c.html\" title=\"Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">File Based Streams</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"stringstreams.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0\n   Input and Output\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a027.\u00a0File Based Streams\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.filestreams\"></a>Chapter\u00a027.\u00a0File Based Streams</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"fstreams.html#manual.io.filestreams.copying_a_file\">Copying a File</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch27s02.html\">Binary Input and Output</a></span></dt></dl></div><div class=\"sect1\" title=\"Copying a File\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.filestreams.copying_a_file\"></a>Copying a File</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"File Based Streams\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.io.filestreams\"></a>File Based Streams</h2></div></div></div><div class=\"sect2\" title=\"Copying a File\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.io.filestreams.copying_a_file\"></a>Copying a File</h3></div></div></div><p>\n   </p><p>So you want to copy a file quickly and easily, and most important,\n       completely portably.  And since this is C++, you have an open\n       ifstream (call it IN) and an open ofstream (call it OUT):\n@@ -22,7 +22,7 @@\n       of \"output_file\" may surprise you.\n    </p><p>Seriously, go do it.  Get surprised, then come back.  It's worth it.\n    </p><p>The thing to remember is that the <code class=\"code\">basic_[io]stream</code> classes\n-      handle formatting, nothing else.  In particular, they break up on\n+      handle formatting, nothing else.  In chaptericular, they break up on\n       whitespace.  The actual reading, writing, and storing of data is\n       handled by the <code class=\"code\">basic_streambuf</code> family.  Fortunately, the\n       <code class=\"code\">operator&lt;&lt;</code> is overloaded to take an ostream and\n@@ -31,22 +31,120 @@\n    </p><p>Why a <span class=\"emphasis\"><em>pointer</em></span> to streambuf and not just a streambuf?  Well,\n       the [io]streams hold pointers (or references, depending on the\n       implementation) to their buffers, not the actual\n-      buffers.  This allows polymorphic behavior on the part of the buffers\n+      buffers.  This allows polymorphic behavior on the chapter of the buffers\n       as well as the streams themselves.  The pointer is easily retrieved\n       using the <code class=\"code\">rdbuf()</code> member function.  Therefore, the easiest\n       way to copy the file is:\n    </p><pre class=\"programlisting\">\n    OUT &lt;&lt; IN.rdbuf();</pre><p>So what <span class=\"emphasis\"><em>was</em></span> happening with OUT&lt;&lt;IN?  Undefined\n-      behavior, since that particular &lt;&lt; isn't defined by the Standard.\n+      behavior, since that chaptericular &lt;&lt; isn't defined by the Standard.\n       I have seen instances where it is implemented, but the character\n       extraction process removes all the whitespace, leaving you with no\n       blank lines and only \"Thequickbrownfox...\".  With\n       libraries that do not define that operator, IN (or one of IN's\n       member pointers) sometimes gets converted to a void*, and the output\n       file then contains a perfect text representation of a hexadecimal\n       address (quite a big surprise).  Others don't compile at all.\n-   </p><p>Also note that none of this is specific to o<span class=\"emphasis\"><em>*f*</em></span>streams. \n-      The operators shown above are all defined in the parent \n+   </p><p>Also note that none of this is specific to o<span class=\"emphasis\"><em>*f*</em></span>streams.\n+      The operators shown above are all defined in the parent\n       basic_ostream class and are therefore available with all possible\n       descendants.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"stringstreams.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a026.\u00a0Memory Based Streams\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Binary Input and Output</td></tr></table></div></body></html>\n+   </p></div><div class=\"sect2\" title=\"Binary Input and Output\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.io.filestreams.binary\"></a>Binary Input and Output</h3></div></div></div><p>\n+    </p><p>The first and most important thing to remember about binary I/O is\n+      that opening a file with <code class=\"code\">ios::binary</code> is not, repeat\n+      <span class=\"emphasis\"><em>not</em></span>, the only thing you have to do.  It is not a silver\n+      bullet, and will not allow you to use the <code class=\"code\">&lt;&lt;/&gt;&gt;</code>\n+      operators of the normal fstreams to do binary I/O.\n+   </p><p>Sorry.  Them's the breaks.\n+   </p><p>This isn't going to try and be a complete tutorial on reading and\n+      writing binary files (because \"binary\"\n+      covers a lot of ground), but we will try and clear\n+      up a couple of misconceptions and common errors.\n+   </p><p>First, <code class=\"code\">ios::binary</code> has exactly one defined effect, no more\n+      and no less.  Normal text mode has to be concerned with the newline\n+      characters, and the runtime system will translate between (for\n+      example) '\\n' and the appropriate end-of-line sequence (LF on Unix,\n+      CRLF on DOS, CR on Macintosh, etc).  (There are other things that\n+      normal mode does, but that's the most obvious.)  Opening a file in\n+      binary mode disables this conversion, so reading a CRLF sequence\n+      under Windows won't accidentally get mapped to a '\\n' character, etc.\n+      Binary mode is not supposed to suddenly give you a bitstream, and\n+      if it is doing so in your program then you've discovered a bug in\n+      your vendor's compiler (or some other chapter of the C++ implementation,\n+      possibly the runtime system).\n+   </p><p>Second, using <code class=\"code\">&lt;&lt;</code> to write and <code class=\"code\">&gt;&gt;</code> to\n+      read isn't going to work with the standard file stream classes, even\n+      if you use <code class=\"code\">skipws</code> during reading.  Why not?  Because\n+      ifstream and ofstream exist for the purpose of <span class=\"emphasis\"><em>formatting</em></span>,\n+      not reading and writing.  Their job is to interpret the data into\n+      text characters, and that's exactly what you don't want to happen\n+      during binary I/O.\n+   </p><p>Third, using the <code class=\"code\">get()</code> and <code class=\"code\">put()/write()</code> member\n+      functions still aren't guaranteed to help you.  These are\n+      \"unformatted\" I/O functions, but still character-based.\n+      (This may or may not be what you want, see below.)\n+   </p><p>Notice how all the problems here are due to the inappropriate use\n+      of <span class=\"emphasis\"><em>formatting</em></span> functions and classes to perform something\n+      which <span class=\"emphasis\"><em>requires</em></span> that formatting not be done?  There are a\n+      seemingly infinite number of solutions, and a few are listed here:\n+   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"quote\">\u201c<span class=\"quote\">Derive your own fstream-type classes and write your own\n+\t  &lt;&lt;/&gt;&gt; operators to do binary I/O on whatever data\n+\t  types you're using.</span>\u201d</span>\n+\t</p><p>\n+\t  This is a Bad Thing, because while\n+\t  the compiler would probably be just fine with it, other humans\n+\t  are going to be confused.  The overloaded bitshift operators\n+\t  have a well-defined meaning (formatting), and this breaks it.\n+\t</p></li><li class=\"listitem\"><p>\n+\t  <span class=\"quote\">\u201c<span class=\"quote\">Build the file structure in memory, then\n+\t  <code class=\"code\">mmap()</code> the file and copy the\n+\t  structure.\n+\t</span>\u201d</span>\n+\t</p><p>\n+\t  Well, this is easy to make work, and easy to break, and is\n+\t  pretty equivalent to using <code class=\"code\">::read()</code> and\n+\t  <code class=\"code\">::write()</code> directly, and makes no use of the\n+\t  iostream library at all...\n+\t  </p></li><li class=\"listitem\"><p>\n+\t  <span class=\"quote\">\u201c<span class=\"quote\">Use streambufs, that's what they're there for.</span>\u201d</span>\n+\t</p><p>\n+\t  While not trivial for the beginner, this is the best of all\n+\t  solutions.  The streambuf/filebuf layer is the layer that is\n+\t  responsible for actual I/O.  If you want to use the C++\n+\t  library for binary I/O, this is where you start.\n+\t</p></li></ul></div><p>How to go about using streambufs is a bit beyond the scope of this\n+      document (at least for now), but while streambufs go a long way,\n+      they still leave a couple of things up to you, the programmer.\n+      As an example, byte ordering is completely between you and the\n+      operating system, and you have to handle it yourself.\n+   </p><p>Deriving a streambuf or filebuf\n+      class from the standard ones, one that is specific to your data\n+      types (or an abstraction thereof) is probably a good idea, and\n+      lots of examples exist in journals and on Usenet.  Using the\n+      standard filebufs directly (either by declaring your own or by\n+      using the pointer returned from an fstream's <code class=\"code\">rdbuf()</code>)\n+      is certainly feasible as well.\n+   </p><p>One area that causes problems is trying to do bit-by-bit operations\n+      with filebufs.  C++ is no different from C in this respect:  I/O\n+      must be done at the byte level.  If you're trying to read or write\n+      a few bits at a time, you're going about it the wrong way.  You\n+      must read/write an integral number of bytes and then process the\n+      bytes.  (For example, the streambuf functions take and return\n+      variables of type <code class=\"code\">int_type</code>.)\n+   </p><p>Another area of problems is opening text files in binary mode.\n+      Generally, binary mode is intended for binary files, and opening\n+      text files in binary mode means that you now have to deal with all of\n+      those end-of-line and end-of-file problems that we mentioned before.\n+   </p><p>\n+      An instructive thread from comp.lang.c++.moderated delved off into\n+      this topic starting more or less at\n+      <a class=\"ulink\" href=\"http://groups.google.com/group/comp.std.c++/browse_thread/thread/f87b4abd7954a87/946a3eb9921e382d?q=comp.std.c%2B%2B+binary+iostream#946a3eb9921e382d\" target=\"_top\">this</a>\n+      post and continuing to the end of the thread. (The subject heading is \"binary iostreams\" on both comp.std.c++\n+      and comp.lang.c++.moderated.) Take special note of the replies by James Kanze and Dietmar K\u00fchl.\n+   </p><p>Briefly, the problems of byte ordering and type sizes mean that\n+      the unformatted functions like <code class=\"code\">ostream::put()</code> and\n+      <code class=\"code\">istream::get()</code> cannot safely be used to communicate\n+      between arbitrary programs, or across a network, or from one\n+      invocation of a program to another invocation of the same program\n+      on a different platform, etc.\n+   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"stringstreams.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Memory Based Streams\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "eca778565302f693d235f03fcfb6e4662c8efe59", "filename": "libstdc++-v3/doc/html/manual/functors.html", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffunctors.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffunctors.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffunctors.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a09.\u00a0Functors</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0 Utilities\" /><link rel=\"prev\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0 Utilities\" /><link rel=\"next\" href=\"pairs.html\" title=\"Chapter\u00a010.\u00a0Pairs\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a09.\u00a0Functors</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n-  Utilities\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"pairs.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a09.\u00a0Functors\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.functors\"></a>Chapter\u00a09.\u00a0Functors</h2></div></div></div><p>If you don't know what functors are, you're not alone.  Many people\n-      get slightly the wrong idea.  In the interest of not reinventing\n-      the wheel, we will refer you to the introduction to the functor\n-      concept written by SGI as part of their STL, in\n-      <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/functors.html\" target=\"_top\">their\n-      http://www.sgi.com/tech/stl/functors.html</a>.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"pairs.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0IV.\u00a0\n-  Utilities\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a010.\u00a0Pairs</td></tr></table></div></body></html>"}, {"sha": "0196e5a8decae153d81d6aca9be462c9ead15a13", "filename": "libstdc++-v3/doc/html/manual/fundamental_types.html", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffundamental_types.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffundamental_types.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ffundamental_types.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,43 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a04.\u00a0Types</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0 Support\" /><link rel=\"prev\" href=\"bk01pt02pr01.html\" title=\"\" /><link rel=\"next\" href=\"bk01pt02ch04s02.html\" title=\"Numeric Properties\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a04.\u00a0Types</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02pr01.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n-  Support\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a04.\u00a0Types\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.support.types\"></a>Chapter\u00a04.\u00a0Types</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"fundamental_types.html#manual.support.types.fundamental\">Fundamental Types</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt02ch04s02.html\">Numeric Properties</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt02ch04s03.html\">NULL</a></span></dt></dl></div><div class=\"sect1\" title=\"Fundamental Types\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.support.types.fundamental\"></a>Fundamental Types</h2></div></div></div><p>\n-      C++ has the following builtin types:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-\tchar\n-      </p></li><li class=\"listitem\"><p>\n-\tsigned char\n-      </p></li><li class=\"listitem\"><p>\n-\tunsigned char\n-      </p></li><li class=\"listitem\"><p>\n-\tsigned short\n-      </p></li><li class=\"listitem\"><p>\n-\tsigned int\n-      </p></li><li class=\"listitem\"><p>\n-\tsigned long\n-      </p></li><li class=\"listitem\"><p>\n-\tunsigned short\n-      </p></li><li class=\"listitem\"><p>\n-\tunsigned int\n-      </p></li><li class=\"listitem\"><p>\n-\tunsigned long\n-      </p></li><li class=\"listitem\"><p>\n-\tbool\n-      </p></li><li class=\"listitem\"><p>\n-\twchar_t\n-      </p></li><li class=\"listitem\"><p>\n-\tfloat\n-      </p></li><li class=\"listitem\"><p>\n-\tdouble\n-      </p></li><li class=\"listitem\"><p>\n-\tlong double\n-      </p></li></ul></div><p>\n-      These fundamental types are always available, without having to\n-      include a header file. These types are exactly the same in\n-      either C++ or in C.\n-    </p><p>\n-      Specializing parts of the library on these types is prohibited:\n-      instead, use a POD.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02pr01.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Numeric Properties</td></tr></table></div></body></html>"}, {"sha": "7047824afa3ed58b1d3dbaeb506bb1a2575e33b6", "filename": "libstdc++-v3/doc/html/manual/generalized_numeric_operations.html", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fgeneralized_numeric_operations.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fgeneralized_numeric_operations.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fgeneralized_numeric_operations.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a022.\u00a0Generalized Operations</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0 Numerics\" /><link rel=\"prev\" href=\"complex.html\" title=\"Chapter\u00a021.\u00a0Complex\" /><link rel=\"next\" href=\"numerics_and_c.html\" title=\"Chapter\u00a023.\u00a0Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a022.\u00a0Generalized Operations</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"complex.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Generalized Operations</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Chapter\u00a012.\u00a0 Numerics\" /><link rel=\"prev\" href=\"numerics.html\" title=\"Chapter\u00a012.\u00a0 Numerics\" /><link rel=\"next\" href=\"numerics_and_c.html\" title=\"Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Generalized Operations</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a012.\u00a0\n   Numerics\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a022.\u00a0Generalized Operations\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.generalized_ops\"></a>Chapter\u00a022.\u00a0Generalized Operations</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics_and_c.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Generalized Operations\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.numerics.generalized_ops\"></a>Generalized Operations</h2></div></div></div><p>\n   </p><p>There are four generalized functions in the &lt;numeric&gt; header\n       that follow the same conventions as those in &lt;algorithm&gt;.  Each\n       of them is overloaded:  one signature for common default operations,\n       and a second for fully general operations.  Their names are\n       self-explanatory to anyone who works with numerics on a regular basis:\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"code\">accumulate</code></p></li><li class=\"listitem\"><p><code class=\"code\">inner_product</code></p></li><li class=\"listitem\"><p><code class=\"code\">partial_sum</code></p></li><li class=\"listitem\"><p><code class=\"code\">adjacent_difference</code></p></li></ul></div><p>Here is a simple example of the two forms of <code class=\"code\">accumulate</code>.\n+   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"code\">accumulate</code></p></li><li class=\"listitem\"><p><code class=\"code\">inner_product</code></p></li><li class=\"listitem\"><p><code class=\"code\">chapterial_sum</code></p></li><li class=\"listitem\"><p><code class=\"code\">adjacent_difference</code></p></li></ul></div><p>Here is a simple example of the two forms of <code class=\"code\">accumulate</code>.\n    </p><pre class=\"programlisting\">\n    int   ar[50];\n    int   someval = somefunction();\n@@ -26,4 +26,7 @@\n       and multiplies all the members of the array; here we must obviously\n       use 1 as a starting value instead of 0.\n    </p><p>The other three functions have similar dual-signature forms.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"complex.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a021.\u00a0Complex\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a023.\u00a0Interacting with C</td></tr></table></div></body></html>\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"numerics_and_c.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a012.\u00a0\n+  Numerics\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "1512752fa7479aaffb42518bb71dd90b4d880972", "filename": "libstdc++-v3/doc/html/manual/internals.html", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Finternals.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Finternals.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Finternals.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -41,7 +41,7 @@\n OS portion of the triplet (the default), then nothing needs to be changed.\n    </p><p>The first file to create in this directory, should be called\n <code class=\"code\">os_defines.h</code>.  This file contains basic macro definitions\n-that are required to allow the C++ library to work with your C library. \n+that are required to allow the C++ library to work with your C library.\n    </p><p>Several libstdc++ source files unconditionally define the macro\n <code class=\"code\">_POSIX_SOURCE</code>.  On many systems, defining this macro causes\n large portions of the C library header files to be eliminated\n@@ -91,7 +91,7 @@\n it must be 0 while bootstrapping the compiler/rebuilding the library.\n    </p><p>Finally, you should bracket the entire file in an include-guard, like\n this:\n-   </p><pre class=\"programlisting\">     \n+   </p><pre class=\"programlisting\">\n \n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES\n@@ -131,7 +131,7 @@\n file gives the type of the integer, and the values of the various bit\n masks.  You will have to peer at your own <code class=\"code\">&lt;ctype.h&gt;</code> to figure out\n how to define the values required by this file.\n-   </p><p>The <code class=\"code\">ctype_base.h</code> header file does not need include guards. \n+   </p><p>The <code class=\"code\">ctype_base.h</code> header file does not need include guards.\n It should contain a single <code class=\"code\">struct</code> definition called\n <code class=\"code\">ctype_base</code>.  This <code class=\"code\">struct</code> should contain two type\n declarations, and one enumeration declaration, like this example, taken\n@@ -141,20 +141,20 @@\n      {\n        typedef unsigned int \tmask;\n        typedef int* \t\t__to_type;\n-     \n+\n        enum\n        {\n-         space = _ISspace,\n-         print = _ISprint,\n-         cntrl = _IScntrl,\n-         upper = _ISupper,\n-         lower = _ISlower,\n-         alpha = _ISalpha,\n-         digit = _ISdigit,\n-         punct = _ISpunct,\n-         xdigit = _ISxdigit,\n-         alnum = _ISalnum,\n-         graph = _ISgraph\n+\t space = _ISspace,\n+\t print = _ISprint,\n+\t cntrl = _IScntrl,\n+\t upper = _ISupper,\n+\t lower = _ISlower,\n+\t alpha = _ISalpha,\n+\t digit = _ISdigit,\n+\t punct = _ISpunct,\n+\t xdigit = _ISxdigit,\n+\t alnum = _ISalnum,\n+\t graph = _ISgraph\n        };\n      };\n </pre><p>The <code class=\"code\">mask</code> type is the type of the elements in the table.  If your\n@@ -176,14 +176,14 @@\n constructor.  Here is the IRIX example:\n    </p><pre class=\"programlisting\">\n ctype&lt;char&gt;::ctype(const mask* __table = 0, bool __del = false,\n-           size_t __refs = 0)\n+\t   size_t __refs = 0)\n        : _Ctype_nois&lt;char&gt;(__refs), _M_del(__table != 0 &amp;&amp; __del),\n-         _M_toupper(NULL),\n-         _M_tolower(NULL),\n-         _M_ctable(NULL),\n-         _M_table(!__table\n-                  ? (const mask*) (__libc_attr._ctype_tbl-&gt;_class + 1)\n-                  : __table)\n+\t _M_toupper(NULL),\n+\t _M_tolower(NULL),\n+\t _M_ctable(NULL),\n+\t _M_table(!__table\n+\t\t  ? (const mask*) (__libc_attr._ctype_tbl-&gt;_class + 1)\n+\t\t  : __table)\n        { }\n </pre><p>There are two parts of this that you might choose to alter. The first,\n and most important, is the line involving <code class=\"code\">__libc_attr</code>.  That is\n@@ -199,7 +199,7 @@\n      char\n      ctype&lt;char&gt;::do_toupper(char __c) const\n      { return _toupper(__c); }\n-     \n+\n      char\n      ctype&lt;char&gt;::do_tolower(char __c) const\n      { return _tolower(__c); }\n@@ -215,21 +215,21 @@\n      ctype&lt;char&gt;::do_toupper(char* __low, const char* __high) const\n      {\n        while (__low &lt; __high)\n-         {\n-           *__low = do_toupper(*__low);\n-           ++__low;\n-         }\n+\t {\n+\t   *__low = do_toupper(*__low);\n+\t   ++__low;\n+\t }\n        return __high;\n      }\n-     \n+\n      const char*\n      ctype&lt;char&gt;::do_tolower(char* __low, const char* __high) const\n      {\n        while (__low &lt; __high)\n-         {\n-           *__low = do_tolower(*__low);\n-           ++__low;\n-         }\n+\t {\n+\t   *__low = do_tolower(*__low);\n+\t   ++__low;\n+\t }\n        return __high;\n      }\n </pre><p>You must also provide the <code class=\"code\">ctype_inline.h</code> file, which\n@@ -244,7 +244,7 @@\n      ctype&lt;char&gt;::\n      is(mask __m, char __c) const throw()\n      { return (_M_table)[(unsigned char)(__c)] &amp; __m; }\n-</pre><p>The <code class=\"code\">_M_table</code> is the table passed in above, in the constructor. \n+</pre><p>The <code class=\"code\">_M_table</code> is the table passed in above, in the constructor.\n This is the table that contains the bitmasks for each character.  The\n implementation here should work on all systems.\n </p><p>The next function is:\n@@ -254,7 +254,7 @@\n      is(const char* __low, const char* __high, mask* __vec) const throw()\n      {\n        while (__low &lt; __high)\n-         *__vec++ = (_M_table)[(unsigned char)(*__low++)];\n+\t *__vec++ = (_M_table)[(unsigned char)(*__low++)];\n        return __high;\n      }\n </pre><p>This function is similar; it copies the masks for all the characters\n@@ -267,16 +267,16 @@\n      scan_is(mask __m, const char* __low, const char* __high) const throw()\n      {\n        while (__low &lt; __high &amp;&amp; !this-&gt;is(__m, *__low))\n-         ++__low;\n+\t ++__low;\n        return __low;\n      }\n-     \n+\n      const char*\n      ctype&lt;char&gt;::\n      scan_not(mask __m, const char* __low, const char* __high) const throw()\n      {\n        while (__low &lt; __high &amp;&amp; this-&gt;is(__m, *__low))\n-         ++__low;\n+\t ++__low;\n        return __low;\n      }\n </pre></div><div class=\"sect2\" title=\"Thread Safety\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"internals.thread_safety\"></a>Thread Safety</h3></div></div></div><p>The C++ library string functionality requires a couple of atomic\n@@ -312,7 +312,7 @@\n    </p><p>The type is <code class=\"code\">_Atomic_word</code>.  Here is the version used on IRIX:\n    </p><pre class=\"programlisting\">\n typedef long _Atomic_word;\n-</pre><p>This type must be a signed integral type supporting atomic operations. \n+</pre><p>This type must be a signed integral type supporting atomic operations.\n If you're using the OS approach, use the same type used by your system's\n primitives.  Otherwise, use the type for which your CPU provides atomic\n primitives.\n@@ -327,26 +327,26 @@\n        *__mem += __val;\n        return __result;\n      }\n-     \n+\n      static inline void\n      __attribute__ ((__unused__))\n      __atomic_add (_Atomic_word* __mem, int __val)\n      {\n        *__mem += __val;\n      }\n </pre></div><div class=\"sect2\" title=\"Numeric Limits\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"internals.numeric_limits\"></a>Numeric Limits</h3></div></div></div><p>The C++ library requires information about the fundamental data types,\n-such as the minimum and maximum representable values of each type. \n+such as the minimum and maximum representable values of each type.\n You can define each of these values individually, but it is usually\n easiest just to indicate how many bits are used in each of the data\n types and let the library do the rest.  For information about the\n macros to define, see the top of <code class=\"code\">include/bits/std_limits.h</code>.\n-</p><p>If you need to define any macros, you can do so in <code class=\"code\">os_defines.h</code>. \n+</p><p>If you need to define any macros, you can do so in <code class=\"code\">os_defines.h</code>.\n However, if all operating systems for your CPU are likely to use the\n same values, you can provide a CPU-specific file instead so that you\n-do not have to provide the same definitions for each operating system. \n+do not have to provide the same definitions for each operating system.\n To take that approach, create a new file called <code class=\"code\">cpu_limits.h</code> in\n your CPU configuration directory (see <a class=\"link\" href=\"internals.html#internals.cpu\" title=\"CPU\">CPU</a>).\n-   </p></div><div class=\"sect2\" title=\"Libtool\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"internals.libtool\"></a>Libtool</h3></div></div></div><p>The C++ library is compiled, archived and linked with libtool. \n+   </p></div><div class=\"sect2\" title=\"Libtool\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"internals.libtool\"></a>Libtool</h3></div></div></div><p>The C++ library is compiled, archived and linked with libtool.\n Explaining the full workings of libtool is beyond the scope of this\n document, but there are a few, particular bits that are necessary for\n porting."}, {"sha": "15091ef0834a58a2effd622de98a3b04ada4d49c", "filename": "libstdc++-v3/doc/html/manual/intro.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -5,5 +5,5 @@\n   \n </th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"spine.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"status.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0I.\u00a0 Introduction\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.intro\"></a>Part\u00a0I.\u00a0\n   Introduction\n-  <a id=\"id683991\" class=\"indexterm\"></a>\n+  <a id=\"id378500\" class=\"indexterm\"></a>\n </h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dt><span class=\"sect2\"><a href=\"status.html#status.iso.200x\">C++ 200x</a></span></dt><dt><span class=\"sect2\"><a href=\"status.html#status.iso.tr1\">C++ TR1</a></span></dt><dt><span class=\"sect2\"><a href=\"status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"license.html\">License</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"sect2\"><a href=\"license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"sect2\"><a href=\"bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect1\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"sect1\"><a href=\"make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"sect1\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"sect2\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"sect2\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"sect2\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"sect1\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"sect2\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"sect2\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"sect2\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect2\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"sect2\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"sect2\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dt><span class=\"sect2\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"sect2\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"sect2\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"sect2\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"sect2\"><a href=\"debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"spine.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"status.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">The GNU C++ Library\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a01.\u00a0Status</td></tr></table></div></body></html>"}, {"sha": "65f598db241ccdd8f33cd2cab46da2bca57da95c", "filename": "libstdc++-v3/doc/html/manual/io.html", "status": "modified", "additions": 116, "deletions": 4, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,121 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0XI.\u00a0 Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt10ch23s02.html\" title=\"C99\" /><link rel=\"next\" href=\"iostream_objects.html\" title=\"Chapter\u00a024.\u00a0Iostream Objects\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0XI.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a013.\u00a0 Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"numerics_and_c.html\" title=\"Interacting with C\" /><link rel=\"next\" href=\"streambufs.html\" title=\"Stream Buffers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a013.\u00a0\n   Input and Output\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch23s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iostream_objects.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0XI.\u00a0 Input and Output\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.io\"></a>Part\u00a0XI.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"numerics_and_c.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"streambufs.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a013.\u00a0 Input and Output\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.io\"></a>Chapter\u00a013.\u00a0\n   Input and Output\n-  <a id=\"id592157\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"iostream_objects.html\">24. Iostream Objects</a></span></dt><dt><span class=\"chapter\"><a href=\"streambufs.html\">25. Stream Buffers</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"streambufs.html#io.streambuf.derived\">Derived streambuf Classes</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch25s02.html\">Buffering</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"stringstreams.html\">26. Memory Based Streams</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"stringstreams.html#manual.io.memstreams.compat\">Compatibility With strstream</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"fstreams.html\">27. File Based Streams</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"fstreams.html#manual.io.filestreams.copying_a_file\">Copying a File</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch27s02.html\">Binary Input and Output</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"io_and_c.html\">28. Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"io_and_c.html#manual.io.c.FILE\">Using FILE* and file descriptors</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch28s02.html\">Performance</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch23s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iostream_objects.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">C99\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a024.\u00a0Iostream Objects</td></tr></table></div></body></html>\n+  <a id=\"id497027\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"io.html#std.io.objects\">Iostream Objects</a></span></dt><dt><span class=\"sect1\"><a href=\"streambufs.html\">Stream Buffers</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"streambufs.html#io.streambuf.derived\">Derived streambuf Classes</a></span></dt><dt><span class=\"sect2\"><a href=\"streambufs.html#io.streambuf.buffering\">Buffering</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"stringstreams.html\">Memory Based Streams</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"stringstreams.html#std.io.memstreams.compat\">Compatibility With strstream</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"fstreams.html\">File Based Streams</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"fstreams.html#std.io.filestreams.copying_a_file\">Copying a File</a></span></dt><dt><span class=\"sect2\"><a href=\"fstreams.html#std.io.filestreams.binary\">Binary Input and Output</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"io_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"io_and_c.html#std.io.c.FILE\">Using FILE* and file descriptors</a></span></dt><dt><span class=\"sect2\"><a href=\"io_and_c.html#std.io.c.sync\">Performance</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Iostream Objects\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.io.objects\"></a>Iostream Objects</h2></div></div></div><p>To minimize the time you have to wait on the compiler, it's good to\n+      only include the headers you really need.  Many people simply include\n+      &lt;iostream&gt; when they don't need to -- and that can <span class=\"emphasis\"><em>penalize\n+      your runtime as well.</em></span>  Here are some tips on which header to use\n+      for which situations, starting with the simplest.\n+   </p><p><span class=\"emphasis\"><em>&lt;iosfwd&gt;</em></span> should be included whenever you simply\n+      need the <span class=\"emphasis\"><em>name</em></span> of an I/O-related class, such as\n+      \"ofstream\" or \"basic_streambuf\".  Like the name\n+      implies, these are forward declarations.  (A word to all you fellow\n+      old school programmers:  trying to forward declare classes like\n+      \"class istream;\" won't work.  Look in the iosfwd header if\n+      you'd like to know why.)  For example,\n+   </p><pre class=\"programlisting\">\n+    #include &lt;iosfwd&gt;\n+\n+    class MyClass\n+    {\n+\t....\n+\tstd::ifstream&amp;   input_file;\n+    };\n+\n+    extern std::ostream&amp; operator&lt;&lt; (std::ostream&amp;, MyClass&amp;);\n+   </pre><p><span class=\"emphasis\"><em>&lt;ios&gt;</em></span> declares the base classes for the entire\n+      I/O stream hierarchy, std::ios_base and std::basic_ios&lt;charT&gt;, the\n+      counting types std::streamoff and std::streamsize, the file\n+      positioning type std::fpos, and the various manipulators like\n+      std::hex, std::fixed, std::noshowbase, and so forth.\n+   </p><p>The ios_base class is what holds the format flags, the state flags,\n+      and the functions which change them (setf(), width(), precision(),\n+      etc).  You can also store extra data and register callback functions\n+      through ios_base, but that has been historically underused.  Anything\n+      which doesn't depend on the type of characters stored is consolidated\n+      here.\n+   </p><p>The template class basic_ios is the highest template class in the\n+      hierarchy; it is the first one depending on the character type, and\n+      holds all general state associated with that type:  the pointer to the\n+      polymorphic stream buffer, the facet information, etc.\n+   </p><p><span class=\"emphasis\"><em>&lt;streambuf&gt;</em></span> declares the template class\n+      basic_streambuf, and two standard instantiations, streambuf and\n+      wstreambuf.  If you need to work with the vastly useful and capable\n+      stream buffer classes, e.g., to create a new form of storage\n+      transport, this header is the one to include.\n+   </p><p><span class=\"emphasis\"><em>&lt;istream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;ostream&gt;</em></span> are\n+      the headers to include when you are using the &gt;&gt;/&lt;&lt;\n+      interface, or any of the other abstract stream formatting functions.\n+      For example,\n+   </p><pre class=\"programlisting\">\n+    #include &lt;istream&gt;\n+\n+    std::ostream&amp; operator&lt;&lt; (std::ostream&amp; os, MyClass&amp; c)\n+    {\n+       return os &lt;&lt; c.data1() &lt;&lt; c.data2();\n+    }\n+   </pre><p>The std::istream and std::ostream classes are the abstract parents of\n+      the various concrete implementations.  If you are only using the\n+      interfaces, then you only need to use the appropriate interface header.\n+   </p><p><span class=\"emphasis\"><em>&lt;iomanip&gt;</em></span> provides \"extractors and inserters\n+      that alter information maintained by class ios_base and its derived\n+      classes,\" such as std::setprecision and std::setw.  If you need\n+      to write expressions like <code class=\"code\">os &lt;&lt; setw(3);</code> or\n+      <code class=\"code\">is &gt;&gt; setbase(8);</code>, you must include &lt;iomanip&gt;.\n+   </p><p><span class=\"emphasis\"><em>&lt;sstream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;fstream&gt;</em></span>\n+      declare the six stringstream and fstream classes.  As they are the\n+      standard concrete descendants of istream and ostream, you will already\n+      know about them.\n+   </p><p>Finally, <span class=\"emphasis\"><em>&lt;iostream&gt;</em></span> provides the eight standard\n+      global objects (cin, cout, etc).  To do this correctly, this header\n+      also provides the contents of the &lt;istream&gt; and &lt;ostream&gt;\n+      headers, but nothing else.  The contents of this header look like\n+   </p><pre class=\"programlisting\">\n+    #include &lt;ostream&gt;\n+    #include &lt;istream&gt;\n+\n+    namespace std\n+    {\n+\textern istream cin;\n+\textern ostream cout;\n+\t....\n+\n+\t// this is explained below\n+\t<span class=\"emphasis\"><em>static ios_base::Init __foo;</em></span>    // not its real name\n+    }\n+   </pre><p>Now, the runtime penalty mentioned previously:  the global objects\n+      must be initialized before any of your own code uses them; this is\n+      guaranteed by the standard.  Like any other global object, they must\n+      be initialized once and only once.  This is typically done with a\n+      construct like the one above, and the nested class ios_base::Init is\n+      specified in the standard for just this reason.\n+   </p><p>How does it work?  Because the header is included before any of your\n+      code, the <span class=\"emphasis\"><em>__foo</em></span> object is constructed before any of\n+      your objects.  (Global objects are built in the order in which they\n+      are declared, and destroyed in reverse order.)  The first time the\n+      constructor runs, the eight stream objects are set up.\n+   </p><p>The <code class=\"code\">static</code> keyword means that each object file compiled\n+      from a source file containing &lt;iostream&gt; will have its own\n+      private copy of <span class=\"emphasis\"><em>__foo</em></span>.  There is no specified order\n+      of construction across object files (it's one of those pesky NP\n+      problems that make life so interesting), so one copy in each object\n+      file means that the stream objects are guaranteed to be set up before\n+      any of your code which uses them could run, thereby meeting the\n+      requirements of the standard.\n+   </p><p>The penalty, of course, is that after the first copy of\n+      <span class=\"emphasis\"><em>__foo</em></span> is constructed, all the others are just wasted\n+      processor time.  The time spent is merely for an increment-and-test\n+      inside a function call, but over several dozen or hundreds of object\n+      files, that time can add up.  (It's not in a tight loop, either.)\n+   </p><p>The lesson?  Only include &lt;iostream&gt; when you need to use one of\n+      the standard objects in that source file; you'll pay less startup\n+      time.  Only include the header files you need to in general; your\n+      compile times will go down when there's less parsing work to do.\n+   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"numerics_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"streambufs.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Stream Buffers</td></tr></table></div></body></html>"}, {"sha": "f7a99e6ada05a5b1d1982d3c1eba64e1c67d21c8", "filename": "libstdc++-v3/doc/html/manual/io_and_c.html", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,11 +1,57 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a028.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0 Input and Output\" /><link rel=\"prev\" href=\"bk01pt11ch27s02.html\" title=\"Binary Input and Output\" /><link rel=\"next\" href=\"bk01pt11ch28s02.html\" title=\"Performance\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a028.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch27s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Chapter\u00a013.\u00a0 Input and Output\" /><link rel=\"prev\" href=\"fstreams.html\" title=\"File Based Streams\" /><link rel=\"next\" href=\"atomics.html\" title=\"Chapter\u00a014.\u00a0 Atomics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"fstreams.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a013.\u00a0\n   Input and Output\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch28s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a028.\u00a0Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.c\"></a>Chapter\u00a028.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"io_and_c.html#manual.io.c.FILE\">Using FILE* and file descriptors</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch28s02.html\">Performance</a></span></dt></dl></div><div class=\"sect1\" title=\"Using FILE* and file descriptors\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.c.FILE\"></a>Using FILE* and file descriptors</h2></div></div></div><p>\n-      See the <a class=\"link\" href=\"ext_io.html\" title=\"Chapter\u00a039.\u00a0Input and Output\">extensions</a> for using\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"atomics.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.io.c\"></a>Interacting with C</h2></div></div></div><div class=\"sect2\" title=\"Using FILE* and file descriptors\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.io.c.FILE\"></a>Using FILE* and file descriptors</h3></div></div></div><p>\n+      See the <a class=\"link\" href=\"ext_io.html\" title=\"Chapter\u00a026.\u00a0Input and Output\">extensions</a> for using\n       <span class=\"type\">FILE</span> and <span class=\"type\">file descriptors</span> with\n       <code class=\"classname\">ofstream</code> and\n       <code class=\"classname\">ifstream</code>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch27s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch28s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Binary Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Performance</td></tr></table></div></body></html>\n+    </p></div><div class=\"sect2\" title=\"Performance\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.io.c.sync\"></a>Performance</h3></div></div></div><p>\n+      Pathetic Performance? Ditch C.\n+    </p><p>It sounds like a flame on C, but it isn't.  Really.  Calm down.\n+      I'm just saying it to get your attention.\n+   </p><p>Because the C++ library includes the C library, both C-style and\n+      C++-style I/O have to work at the same time.  For example:\n+   </p><pre class=\"programlisting\">\n+     #include &lt;iostream&gt;\n+     #include &lt;cstdio&gt;\n+\n+     std::cout &lt;&lt; \"Hel\";\n+     std::printf (\"lo, worl\");\n+     std::cout &lt;&lt; \"d!\\n\";\n+   </pre><p>This must do what you think it does.\n+   </p><p>Alert members of the audience will immediately notice that buffering\n+      is going to make a hash of the output unless special steps are taken.\n+   </p><p>The special steps taken by libstdc++, at least for version 3.0,\n+      involve doing very little buffering for the standard streams, leaving\n+      most of the buffering to the underlying C library.  (This kind of\n+      thing is tricky to get right.)\n+      The upside is that correctness is ensured.  The downside is that\n+      writing through <code class=\"code\">cout</code> can quite easily lead to awful\n+      performance when the C++ I/O library is layered on top of the C I/O\n+      library (as it is for 3.0 by default).  Some patches have been applied\n+      which improve the situation for 3.1.\n+   </p><p>However, the C and C++ standard streams only need to be kept in sync\n+      when both libraries' facilities are in use.  If your program only uses\n+      C++ I/O, then there's no need to sync with the C streams.  The right\n+      thing to do in this case is to call\n+   </p><pre class=\"programlisting\">\n+     #include <span class=\"emphasis\"><em>any of the I/O headers such as ios, iostream, etc</em></span>\n+\n+     std::ios::sync_with_stdio(false);\n+   </pre><p>You must do this before performing any I/O via the C++ stream objects.\n+      Once you call this, the C++ streams will operate independently of the\n+      (unused) C streams.  For GCC 3.x, this means that <code class=\"code\">cout</code> and\n+      company will become fully buffered on their own.\n+   </p><p>Note, by the way, that the synchronization requirement only applies to\n+      the standard streams (<code class=\"code\">cin</code>, <code class=\"code\">cout</code>,\n+      <code class=\"code\">cerr</code>,\n+      <code class=\"code\">clog</code>, and their wide-character counterchapters).  File stream\n+      objects that you declare yourself have no such requirement and are fully\n+      buffered.\n+   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"fstreams.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"atomics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">File Based Streams\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a014.\u00a0\n+  Atomics\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "1133edec3ab556e80a08a907799157ed6c00f652", "filename": "libstdc++-v3/doc/html/manual/iostream_objects.html", "status": "removed", "additions": 0, "deletions": 119, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiostream_objects.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiostream_objects.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiostream_objects.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,119 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a024.\u00a0Iostream Objects</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0 Input and Output\" /><link rel=\"prev\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0 Input and Output\" /><link rel=\"next\" href=\"streambufs.html\" title=\"Chapter\u00a025.\u00a0Stream Buffers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a024.\u00a0Iostream Objects</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0\n-  Input and Output\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"streambufs.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a024.\u00a0Iostream Objects\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.objects\"></a>Chapter\u00a024.\u00a0Iostream Objects</h2></div></div></div><p>To minimize the time you have to wait on the compiler, it's good to\n-      only include the headers you really need.  Many people simply include\n-      &lt;iostream&gt; when they don't need to -- and that can <span class=\"emphasis\"><em>penalize\n-      your runtime as well.</em></span>  Here are some tips on which header to use\n-      for which situations, starting with the simplest.\n-   </p><p><span class=\"emphasis\"><em>&lt;iosfwd&gt;</em></span> should be included whenever you simply\n-      need the <span class=\"emphasis\"><em>name</em></span> of an I/O-related class, such as\n-      \"ofstream\" or \"basic_streambuf\".  Like the name\n-      implies, these are forward declarations.  (A word to all you fellow\n-      old school programmers:  trying to forward declare classes like\n-      \"class istream;\" won't work.  Look in the iosfwd header if\n-      you'd like to know why.)  For example,\n-   </p><pre class=\"programlisting\">\n-    #include &lt;iosfwd&gt;\n-\n-    class MyClass\n-    {\n-        ....\n-        std::ifstream&amp;   input_file;\n-    };\n-\n-    extern std::ostream&amp; operator&lt;&lt; (std::ostream&amp;, MyClass&amp;);\n-   </pre><p><span class=\"emphasis\"><em>&lt;ios&gt;</em></span> declares the base classes for the entire\n-      I/O stream hierarchy, std::ios_base and std::basic_ios&lt;charT&gt;, the\n-      counting types std::streamoff and std::streamsize, the file\n-      positioning type std::fpos, and the various manipulators like\n-      std::hex, std::fixed, std::noshowbase, and so forth.\n-   </p><p>The ios_base class is what holds the format flags, the state flags,\n-      and the functions which change them (setf(), width(), precision(),\n-      etc).  You can also store extra data and register callback functions\n-      through ios_base, but that has been historically underused.  Anything\n-      which doesn't depend on the type of characters stored is consolidated\n-      here.\n-   </p><p>The template class basic_ios is the highest template class in the\n-      hierarchy; it is the first one depending on the character type, and\n-      holds all general state associated with that type:  the pointer to the\n-      polymorphic stream buffer, the facet information, etc.\n-   </p><p><span class=\"emphasis\"><em>&lt;streambuf&gt;</em></span> declares the template class\n-      basic_streambuf, and two standard instantiations, streambuf and\n-      wstreambuf.  If you need to work with the vastly useful and capable\n-      stream buffer classes, e.g., to create a new form of storage\n-      transport, this header is the one to include.\n-   </p><p><span class=\"emphasis\"><em>&lt;istream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;ostream&gt;</em></span> are\n-      the headers to include when you are using the &gt;&gt;/&lt;&lt;\n-      interface, or any of the other abstract stream formatting functions.\n-      For example,\n-   </p><pre class=\"programlisting\">\n-    #include &lt;istream&gt;\n-\n-    std::ostream&amp; operator&lt;&lt; (std::ostream&amp; os, MyClass&amp; c)\n-    {\n-       return os &lt;&lt; c.data1() &lt;&lt; c.data2();\n-    }\n-   </pre><p>The std::istream and std::ostream classes are the abstract parents of\n-      the various concrete implementations.  If you are only using the\n-      interfaces, then you only need to use the appropriate interface header.\n-   </p><p><span class=\"emphasis\"><em>&lt;iomanip&gt;</em></span> provides \"extractors and inserters\n-      that alter information maintained by class ios_base and its derived\n-      classes,\" such as std::setprecision and std::setw.  If you need\n-      to write expressions like <code class=\"code\">os &lt;&lt; setw(3);</code> or\n-      <code class=\"code\">is &gt;&gt; setbase(8);</code>, you must include &lt;iomanip&gt;.\n-   </p><p><span class=\"emphasis\"><em>&lt;sstream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;fstream&gt;</em></span>\n-      declare the six stringstream and fstream classes.  As they are the\n-      standard concrete descendants of istream and ostream, you will already\n-      know about them.\n-   </p><p>Finally, <span class=\"emphasis\"><em>&lt;iostream&gt;</em></span> provides the eight standard\n-      global objects (cin, cout, etc).  To do this correctly, this header\n-      also provides the contents of the &lt;istream&gt; and &lt;ostream&gt;\n-      headers, but nothing else.  The contents of this header look like\n-   </p><pre class=\"programlisting\">\n-    #include &lt;ostream&gt;\n-    #include &lt;istream&gt;\n-\n-    namespace std\n-    {\n-        extern istream cin;\n-        extern ostream cout;\n-        ....\n-\n-        // this is explained below\n-        <span class=\"emphasis\"><em>static ios_base::Init __foo;</em></span>    // not its real name\n-    }\n-   </pre><p>Now, the runtime penalty mentioned previously:  the global objects\n-      must be initialized before any of your own code uses them; this is\n-      guaranteed by the standard.  Like any other global object, they must\n-      be initialized once and only once.  This is typically done with a\n-      construct like the one above, and the nested class ios_base::Init is \n-      specified in the standard for just this reason.\n-   </p><p>How does it work?  Because the header is included before any of your\n-      code, the <span class=\"emphasis\"><em>__foo</em></span> object is constructed before any of\n-      your objects.  (Global objects are built in the order in which they\n-      are declared, and destroyed in reverse order.)  The first time the\n-      constructor runs, the eight stream objects are set up.\n-   </p><p>The <code class=\"code\">static</code> keyword means that each object file compiled\n-      from a source file containing &lt;iostream&gt; will have its own\n-      private copy of <span class=\"emphasis\"><em>__foo</em></span>.  There is no specified order\n-      of construction across object files (it's one of those pesky NP\n-      problems that make life so interesting), so one copy in each object\n-      file means that the stream objects are guaranteed to be set up before\n-      any of your code which uses them could run, thereby meeting the\n-      requirements of the standard.\n-   </p><p>The penalty, of course, is that after the first copy of\n-      <span class=\"emphasis\"><em>__foo</em></span> is constructed, all the others are just wasted\n-      processor time.  The time spent is merely for an increment-and-test\n-      inside a function call, but over several dozen or hundreds of object\n-      files, that time can add up.  (It's not in a tight loop, either.)\n-   </p><p>The lesson?  Only include &lt;iostream&gt; when you need to use one of\n-      the standard objects in that source file; you'll pay less startup\n-      time.  Only include the header files you need to in general; your\n-      compile times will go down when there's less parsing work to do.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"streambufs.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0XI.\u00a0\n-  Input and Output\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a025.\u00a0Stream Buffers</td></tr></table></div></body></html>"}, {"sha": "6e29f5fcc9437b296ca710d7f66fec3e205b12e9", "filename": "libstdc++-v3/doc/html/manual/iterators.html", "status": "modified", "additions": 125, "deletions": 4, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiterators.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiterators.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fiterators.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,130 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0VIII.\u00a0 Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bitset.html\" title=\"bitset\" /><link rel=\"next\" href=\"bk01pt08ch19.html\" title=\"Chapter\u00a019.\u00a0Predefined\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0VIII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a010.\u00a0 Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"containers_and_c.html\" title=\"Interacting with C\" /><link rel=\"next\" href=\"algorithms.html\" title=\"Chapter\u00a011.\u00a0 Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a010.\u00a0\n   Iterators\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitset.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt08ch19.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0VIII.\u00a0 Iterators\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.iterators\"></a>Part\u00a0VIII.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"containers_and_c.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a010.\u00a0 Iterators\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.iterators\"></a>Chapter\u00a010.\u00a0\n   Iterators\n-  <a id=\"id678897\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"bk01pt08ch19.html\">19. Predefined</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"bk01pt08ch19.html#iterators.predefined.vs_pointers\">Iterators vs. Pointers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt08ch19s02.html\">One Past the End</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitset.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt08ch19.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitset\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a019.\u00a0Predefined</td></tr></table></div></body></html>\n+  <a id=\"id424800\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"iterators.html#std.iterators.predefined\">Predefined</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"iterators.html#iterators.predefined.vs_pointers\">Iterators vs. Pointers</a></span></dt><dt><span class=\"sect2\"><a href=\"iterators.html#iterators.predefined.end\">One Past the End</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Predefined\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.iterators.predefined\"></a>Predefined</h2></div></div></div><div class=\"sect2\" title=\"Iterators vs. Pointers\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"iterators.predefined.vs_pointers\"></a>Iterators vs. Pointers</h3></div></div></div><p>\n+     The following\n+FAQ <a class=\"link\" href=\"../faq.html#faq.iterator_as_pod\" title=\"7.1.\">entry</a> points out that\n+iterators are not implemented as pointers.  They are a generalization\n+of pointers, but they are implemented in libstdc++ as separate\n+classes.\n+   </p><p>\n+     Keeping that simple fact in mind as you design your code will\n+      prevent a whole lot of difficult-to-understand bugs.\n+   </p><p>\n+     You can think of it the other way 'round, even.  Since iterators\n+     are a generalization, that means\n+     that <span class=\"emphasis\"><em>pointers</em></span> are\n+      <span class=\"emphasis\"><em>iterators</em></span>, and that pointers can be used\n+     whenever an iterator would be.  All those functions in the\n+     Algorithms sect1 of the Standard will work just as well on plain\n+     arrays and their pointers.\n+   </p><p>\n+     That doesn't mean that when you pass in a pointer, it gets\n+      wrapped into some special delegating iterator-to-pointer class\n+      with a layer of overhead.  (If you think that's the case\n+      anywhere, you don't understand templates to begin with...)  Oh,\n+      no; if you pass in a pointer, then the compiler will instantiate\n+      that template using T* as a type, and good old high-speed\n+      pointer arithmetic as its operations, so the resulting code will\n+      be doing exactly the same things as it would be doing if you had\n+      hand-coded it yourself (for the 273rd time).\n+   </p><p>\n+     How much overhead <span class=\"emphasis\"><em>is</em></span> there when using an\n+      iterator class?  Very little.  Most of the layering classes\n+      contain nothing but typedefs, and typedefs are\n+      \"meta-information\" that simply tell the compiler some\n+      nicknames; they don't create code.  That information gets passed\n+      down through inheritance, so while the compiler has to do work\n+      looking up all the names, your runtime code does not.  (This has\n+      been a prime concern from the beginning.)\n+   </p></div><div class=\"sect2\" title=\"One Past the End\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"iterators.predefined.end\"></a>One Past the End</h3></div></div></div><p>This starts off sounding complicated, but is actually very easy,\n+      especially towards the end.  Trust me.\n+   </p><p>Beginners usually have a little trouble understand the whole\n+      'past-the-end' thing, until they remember their early algebra classes\n+      (see, they <span class=\"emphasis\"><em>told</em></span> you that stuff would come in handy!) and\n+      the concept of half-open ranges.\n+   </p><p>First, some history, and a reminder of some of the funkier rules in\n+      C and C++ for builtin arrays.  The following rules have always been\n+      true for both languages:\n+   </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>You can point anywhere in the array, <span class=\"emphasis\"><em>or to the first element\n+\t  past the end of the array</em></span>.  A pointer that points to one\n+\t  past the end of the array is guaranteed to be as unique as a\n+\t  pointer to somewhere inside the array, so that you can compare\n+\t  such pointers safely.\n+\t</p></li><li class=\"listitem\"><p>You can only dereference a pointer that points into an array.\n+\t  If your array pointer points outside the array -- even to just\n+\t  one past the end -- and you dereference it, Bad Things happen.\n+\t</p></li><li class=\"listitem\"><p>Strictly speaking, simply pointing anywhere else invokes\n+\t  undefined behavior.  Most programs won't puke until such a\n+\t  pointer is actually dereferenced, but the standards leave that\n+\t  up to the platform.\n+\t</p></li></ol></div><p>The reason this past-the-end addressing was allowed is to make it\n+      easy to write a loop to go over an entire array, e.g.,\n+      while (*d++ = *s++);.\n+   </p><p>So, when you think of two pointers delimiting an array, don't think\n+      of them as indexing 0 through n-1.  Think of them as <span class=\"emphasis\"><em>boundary\n+      markers</em></span>:\n+   </p><pre class=\"programlisting\">\n+\n+   beginning            end\n+     |                   |\n+     |                   |               This is bad.  Always having to\n+     |                   |               remember to add or subtract one.\n+     |                   |               Off-by-one bugs very common here.\n+     V                   V\n+\tarray of N elements\n+     |---|---|--...--|---|---|\n+     | 0 | 1 |  ...  |N-2|N-1|\n+     |---|---|--...--|---|---|\n+\n+     ^                       ^\n+     |                       |\n+     |                       |           This is good.  This is safe.  This\n+     |                       |           is guaranteed to work.  Just don't\n+     |                       |           dereference 'end'.\n+   beginning                end\n+\n+   </pre><p>See?  Everything between the boundary markers is chapter of the array.\n+      Simple.\n+   </p><p>Now think back to your junior-high school algebra course, when you\n+      were learning how to draw graphs.  Remember that a graph terminating\n+      with a solid dot meant, \"Everything up through this point,\"\n+      and a graph terminating with an open dot meant, \"Everything up\n+      to, but not including, this point,\" respectively called closed\n+      and open ranges?  Remember how closed ranges were written with\n+      brackets, <span class=\"emphasis\"><em>[a,b]</em></span>, and open ranges were written with parentheses,\n+      <span class=\"emphasis\"><em>(a,b)</em></span>?\n+   </p><p>The boundary markers for arrays describe a <span class=\"emphasis\"><em>half-open range</em></span>,\n+      starting with (and including) the first element, and ending with (but\n+      not including) the last element:  <span class=\"emphasis\"><em>[beginning,end)</em></span>.  See, I\n+      told you it would be simple in the end.\n+   </p><p>Iterators, and everything working with iterators, follows this same\n+      time-honored tradition.  A container's <code class=\"code\">begin()</code> method returns\n+      an iterator referring to the first element, and its <code class=\"code\">end()</code>\n+      method returns a past-the-end iterator, which is guaranteed to be\n+      unique and comparable against any other iterator pointing into the\n+      middle of the container.\n+   </p><p>Container constructors, container methods, and algorithms, all take\n+      pairs of iterators describing a range of values on which to operate.\n+      All of these ranges are half-open ranges, so you pass the beginning\n+      iterator as the starting parameter, and the one-past-the-end iterator\n+      as the finishing parameter.\n+   </p><p>This generalizes very well.  You can operate on sub-ranges quite\n+      easily this way; functions accepting a <span class=\"emphasis\"><em>[first,last)</em></span> range\n+      don't know or care whether they are the boundaries of an entire {array,\n+      sequence, container, whatever}, or whether they only enclose a few\n+      elements from the center.  This approach also makes zero-length\n+      sequences very simple to recognize:  if the two endpoints compare\n+      equal, then the {array, sequence, container, whatever} is empty.\n+   </p><p>Just don't dereference <code class=\"code\">end()</code>.\n+   </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"containers_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a011.\u00a0\n+  Algorithms\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "04c971a059b6115d5b2d669775be43163e557b76", "filename": "libstdc++-v3/doc/html/manual/license.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flicense.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flicense.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flicense.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -2,7 +2,7 @@\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n <html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"status.html\" title=\"Chapter\u00a01.\u00a0Status\" /><link rel=\"prev\" href=\"status.html\" title=\"Chapter\u00a01.\u00a0Status\" /><link rel=\"next\" href=\"bugs.html\" title=\"Bugs\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"status.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a01.\u00a0Status</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bugs.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"License\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.status.license\"></a>License</h2></div></div></div><p>\n     There are two licenses affecting GNU libstdc++: one for the code,\n-    and one for the documentation.  \n+    and one for the documentation.\n     </p><p>\n       There is a license section in the FAQ regarding common <a class=\"link\" href=\"../faq.html#faq.license\" title=\"License\">questions</a>. If you have more\n       questions, ask the FSF or the <a class=\"ulink\" href=\"http://gcc.gnu.org/lists.html\" target=\"_top\">gcc mailing list</a>.\n@@ -94,7 +94,7 @@\n       <a class=\"link\" href=\"appendix_gfdl.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\"> GNU Free Documentation\n       License version 1.2</a>.  There are no Front-Cover Texts, no\n       Back-Cover Texts, and no Invariant Sections.\n-    </p><p> \n+    </p><p>\n       For documentation generated by doxygen or other automated tools\n       via processing source code comments and markup, the original source\n       code license applies to the generated files. Thus, the doxygen"}, {"sha": "040f79f21035fb6dab0f4b65f1aa5925562f7976", "filename": "libstdc++-v3/doc/html/manual/locales.html", "status": "removed", "additions": 0, "deletions": 428, "changes": 428, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocales.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocales.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocales.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,428 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a014.\u00a0Locales</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0 Localization\" /><link rel=\"prev\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0 Localization\" /><link rel=\"next\" href=\"facets.html\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a014.\u00a0Locales</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VI.\u00a0\n-  Localization\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"facets.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a014.\u00a0Locales\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.localization.locales\"></a>Chapter\u00a014.\u00a0Locales</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"locales.html#manual.localization.locales.locale\">locale</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.future\">Future</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"locale\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.locales.locale\"></a>locale</h2></div></div></div><p>\n-Describes the basic locale object, including nested\n-classes id, facet, and the reference-counted implementation object,\n-class _Impl.\n-</p><div class=\"sect2\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.req\"></a>Requirements</h3></div></div></div><p>\n-Class locale is non-templatized and has two distinct types nested\n-inside of it:\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n-class facet\n-22.1.1.1.2 Class locale::facet\n-</em></span>\n-</p></blockquote></div><p>\n-Facets actually implement locale functionality. For instance, a facet\n-called numpunct is the data object that can be used to query for the\n-thousands separator in the locale.\n-</p><p>\n-Literally, a facet is strictly defined:\n-</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-      Containing the following public data member:\n-    </p><p>\n-      <code class=\"code\">static locale::id id;</code>\n-    </p></li><li class=\"listitem\"><p>\n-      Derived from another facet:\n-    </p><p>\n-      <code class=\"code\">class gnu_codecvt: public std::ctype&lt;user-defined-type&gt;</code>\n-    </p></li></ul></div><p>\n-Of interest in this class are the memory management options explicitly\n-specified as an argument to facet's constructor. Each constructor of a\n-facet class takes a std::size_t __refs argument: if __refs == 0, the\n-facet is deleted when the locale containing it is destroyed. If __refs\n-== 1, the facet is not destroyed, even when it is no longer\n-referenced.\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n-class id\n-22.1.1.1.3 - Class locale::id\n-</em></span>\n-</p></blockquote></div><p>\n-Provides an index for looking up specific facets.\n-</p></div><div class=\"sect2\" title=\"Design\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.design\"></a>Design</h3></div></div></div><p>\n-The major design challenge is fitting an object-orientated and\n-non-global locale design on top of POSIX and other relevant standards,\n-which include the Single Unix (nee X/Open.)\n-</p><p>\n-Because C and earlier versions of POSIX fall down so completely,\n-portability is an issue.\n-</p></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" title=\"Interacting with &quot;C&quot; locales\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locale.impl.c\"></a>Interacting with \"C\" locales</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p> \n-       <code class=\"code\">`locale -a`</code> displays available locales. \n-     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n-af_ZA\n-ar_AE\n-ar_AE.utf8\n-ar_BH\n-ar_BH.utf8\n-ar_DZ\n-ar_DZ.utf8\n-ar_EG\n-ar_EG.utf8\n-ar_IN\n-ar_IQ\n-ar_IQ.utf8\n-ar_JO\n-ar_JO.utf8\n-ar_KW\n-ar_KW.utf8\n-ar_LB\n-ar_LB.utf8\n-ar_LY\n-ar_LY.utf8\n-ar_MA\n-ar_MA.utf8\n-ar_OM\n-ar_OM.utf8\n-ar_QA\n-ar_QA.utf8\n-ar_SA\n-ar_SA.utf8\n-ar_SD\n-ar_SD.utf8\n-ar_SY\n-ar_SY.utf8\n-ar_TN\n-ar_TN.utf8\n-ar_YE\n-ar_YE.utf8\n-be_BY\n-be_BY.utf8\n-bg_BG\n-bg_BG.utf8\n-br_FR\n-bs_BA\n-C\n-ca_ES\n-ca_ES@euro\n-ca_ES.utf8\n-ca_ES.utf8@euro\n-cs_CZ\n-cs_CZ.utf8\n-cy_GB\n-da_DK\n-da_DK.iso885915\n-da_DK.utf8\n-de_AT\n-de_AT@euro\n-de_AT.utf8\n-de_AT.utf8@euro\n-de_BE\n-de_BE@euro\n-de_BE.utf8\n-de_BE.utf8@euro\n-de_CH\n-de_CH.utf8\n-de_DE\n-de_DE@euro\n-de_DE.utf8\n-de_DE.utf8@euro\n-de_LU\n-de_LU@euro\n-de_LU.utf8\n-de_LU.utf8@euro\n-el_GR\n-el_GR.utf8\n-en_AU\n-en_AU.utf8\n-en_BW\n-en_BW.utf8\n-en_CA\n-en_CA.utf8\n-en_DK\n-en_DK.utf8\n-en_GB\n-en_GB.iso885915\n-en_GB.utf8\n-en_HK\n-en_HK.utf8\n-en_IE\n-en_IE@euro\n-en_IE.utf8\n-en_IE.utf8@euro\n-en_IN\n-en_NZ\n-en_NZ.utf8\n-en_PH\n-en_PH.utf8\n-en_SG\n-en_SG.utf8\n-en_US\n-en_US.iso885915\n-en_US.utf8\n-en_ZA\n-en_ZA.utf8\n-en_ZW\n-en_ZW.utf8\n-es_AR\n-es_AR.utf8\n-es_BO\n-es_BO.utf8\n-es_CL\n-es_CL.utf8\n-es_CO\n-es_CO.utf8\n-es_CR\n-es_CR.utf8\n-es_DO\n-es_DO.utf8\n-es_EC\n-es_EC.utf8\n-es_ES\n-es_ES@euro\n-es_ES.utf8\n-es_ES.utf8@euro\n-es_GT\n-es_GT.utf8\n-es_HN\n-es_HN.utf8\n-es_MX\n-es_MX.utf8\n-es_NI\n-es_NI.utf8\n-es_PA\n-es_PA.utf8\n-es_PE\n-es_PE.utf8\n-es_PR\n-es_PR.utf8\n-es_PY\n-es_PY.utf8\n-es_SV\n-es_SV.utf8\n-es_US\n-es_US.utf8\n-es_UY\n-es_UY.utf8\n-es_VE\n-es_VE.utf8\n-et_EE\n-et_EE.utf8\n-eu_ES\n-eu_ES@euro\n-eu_ES.utf8\n-eu_ES.utf8@euro\n-fa_IR\n-fi_FI\n-fi_FI@euro\n-fi_FI.utf8\n-fi_FI.utf8@euro\n-fo_FO\n-fo_FO.utf8\n-fr_BE\n-fr_BE@euro\n-fr_BE.utf8\n-fr_BE.utf8@euro\n-fr_CA\n-fr_CA.utf8\n-fr_CH\n-fr_CH.utf8\n-fr_FR\n-fr_FR@euro\n-fr_FR.utf8\n-fr_FR.utf8@euro\n-fr_LU\n-fr_LU@euro\n-fr_LU.utf8\n-fr_LU.utf8@euro\n-ga_IE\n-ga_IE@euro\n-ga_IE.utf8\n-ga_IE.utf8@euro\n-gl_ES\n-gl_ES@euro\n-gl_ES.utf8\n-gl_ES.utf8@euro\n-gv_GB\n-gv_GB.utf8\n-he_IL\n-he_IL.utf8\n-hi_IN\n-hr_HR\n-hr_HR.utf8\n-hu_HU\n-hu_HU.utf8\n-id_ID\n-id_ID.utf8\n-is_IS\n-is_IS.utf8\n-it_CH\n-it_CH.utf8\n-it_IT\n-it_IT@euro\n-it_IT.utf8\n-it_IT.utf8@euro\n-iw_IL\n-iw_IL.utf8\n-ja_JP.eucjp\n-ja_JP.utf8\n-ka_GE\n-kl_GL\n-kl_GL.utf8\n-ko_KR.euckr\n-ko_KR.utf8\n-kw_GB\n-kw_GB.utf8\n-lt_LT\n-lt_LT.utf8\n-lv_LV\n-lv_LV.utf8\n-mi_NZ\n-mk_MK\n-mk_MK.utf8\n-mr_IN\n-ms_MY\n-ms_MY.utf8\n-mt_MT\n-mt_MT.utf8\n-nl_BE\n-nl_BE@euro\n-nl_BE.utf8\n-nl_BE.utf8@euro\n-nl_NL\n-nl_NL@euro\n-nl_NL.utf8\n-nl_NL.utf8@euro\n-nn_NO\n-nn_NO.utf8\n-no_NO\n-no_NO.utf8\n-oc_FR\n-pl_PL\n-pl_PL.utf8\n-POSIX\n-pt_BR\n-pt_BR.utf8\n-pt_PT\n-pt_PT@euro\n-pt_PT.utf8\n-pt_PT.utf8@euro\n-ro_RO\n-ro_RO.utf8\n-ru_RU\n-ru_RU.koi8r\n-ru_RU.utf8\n-ru_UA\n-ru_UA.utf8\n-se_NO\n-sk_SK\n-sk_SK.utf8\n-sl_SI\n-sl_SI.utf8\n-sq_AL\n-sq_AL.utf8\n-sr_YU\n-sr_YU@cyrillic\n-sr_YU.utf8\n-sr_YU.utf8@cyrillic\n-sv_FI\n-sv_FI@euro\n-sv_FI.utf8\n-sv_FI.utf8@euro\n-sv_SE\n-sv_SE.iso885915\n-sv_SE.utf8\n-ta_IN\n-te_IN\n-tg_TJ\n-th_TH\n-th_TH.utf8\n-tl_PH\n-tr_TR\n-tr_TR.utf8\n-uk_UA\n-uk_UA.utf8\n-ur_PK\n-uz_UZ\n-vi_VN\n-vi_VN.tcvn\n-wa_BE\n-wa_BE@euro\n-yi_US\n-zh_CN\n-zh_CN.gb18030\n-zh_CN.gbk\n-zh_CN.utf8\n-zh_HK\n-zh_HK.utf8\n-zh_TW\n-zh_TW.euctw\n-zh_TW.utf8\n-</pre></blockquote></div></li><li class=\"listitem\"><p> \n-       <code class=\"code\">`locale`</code> displays environmental variables that\n-       impact how locale(\"\") will be deduced.\n-     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n-LANG=en_US\n-LC_CTYPE=\"en_US\"\n-LC_NUMERIC=\"en_US\"\n-LC_TIME=\"en_US\"\n-LC_COLLATE=\"en_US\"\n-LC_MONETARY=\"en_US\"\n-LC_MESSAGES=\"en_US\"\n-LC_PAPER=\"en_US\"\n-LC_NAME=\"en_US\"\n-LC_ADDRESS=\"en_US\"\n-LC_TELEPHONE=\"en_US\"\n-LC_MEASUREMENT=\"en_US\"\n-LC_IDENTIFICATION=\"en_US\"\n-LC_ALL=\n-</pre></blockquote></div></li></ul></div><p>\n-From Josuttis, p. 697-698, which says, that \"there is only *one*\n-relation (of the C++ locale mechanism) to the C locale mechanism: the\n-global C locale is modified if a named C++ locale object is set as the\n-global locale\" (emphasis Paolo), that is:\n-</p><pre class=\"programlisting\">std::locale::global(std::locale(\"\"));</pre><p>affects the C functions as if the following call was made:</p><pre class=\"programlisting\">std::setlocale(LC_ALL, \"\");</pre><p>\n-  On the other hand, there is *no* vice versa, that is, calling\n-  setlocale has *no* whatsoever on the C++ locale mechanism, in\n-  particular on the working of locale(\"\"), which constructs the locale\n-  object from the environment of the running program, that is, in\n-  practice, the set of LC_ALL, LANG, etc. variable of the shell.\n-</p></div></div><div class=\"sect2\" title=\"Future\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-       Locale initialization: at what point does _S_classic, _S_global\n-       get initialized? Can named locales assume this initialization\n-       has already taken place? \n-     </p></li><li class=\"listitem\"><p> \n-       Document how named locales error check when filling data\n-       members. I.e., a fr_FR locale that doesn't have\n-       numpunct::truename(): does it use \"true\"? Or is it a blank\n-       string? What's the convention? \n-   </p></li><li class=\"listitem\"><p> \n-       Explain how locale aliasing happens. When does \"de_DE\" use \"de\"\n-       information? What is the rule for locales composed of just an\n-       ISO language code (say, \"de\") and locales with both an ISO\n-       language code and ISO country code (say, \"de_DE\"). \n-     </p></li><li class=\"listitem\"><p> \n-       What should non-required facet instantiations do?  If the\n-       generic implementation is provided, then how to end-users\n-       provide specializations? \n-   </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id645730\"></a><p><span class=\"title\"><i>\n-      The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6 Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id610693\"></a><p><span class=\"title\"><i>\n-      Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id638635\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id617195\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\" title=\"The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\"><a id=\"id617213\"></a><p><span class=\"title\"><i>\n-      The Open Group Base Specifications, Issue 6 (IEEE Std. 1003.1-2004)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.unix.org/version3/ieee_std.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id713713\"></a><p><span class=\"title\"><i>\n-      The C++ Programming Language, Special Edition\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id653680\"></a><p><span class=\"title\"><i>\n-      Standard C++ IOStreams and Locales\n-    </i>. </span><span class=\"subtitle\">\n-      Advanced Programmer's Guide and Reference\n-    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley Longman\n-      . </span></span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"localization.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"facets.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0VI.\u00a0\n-  Localization\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a015.\u00a0Facets aka Categories</td></tr></table></div></body></html>"}, {"sha": "a1f30163645acdca45aefb3554ed4d1dccfc519f", "filename": "libstdc++-v3/doc/html/manual/localization.html", "status": "modified", "additions": 434, "deletions": 4, "changes": 438, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocalization.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocalization.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Flocalization.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,439 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0VI.\u00a0 Localization</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt05ch13s06.html\" title=\"CString (MFC)\" /><link rel=\"next\" href=\"locales.html\" title=\"Chapter\u00a014.\u00a0Locales\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0VI.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a08.\u00a0 Localization</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"strings.html\" title=\"Chapter\u00a07.\u00a0 Strings\" /><link rel=\"next\" href=\"facets.html\" title=\"Facets\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a08.\u00a0\n   Localization\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s06.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"locales.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0VI.\u00a0 Localization\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.localization\"></a>Part\u00a0VI.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"strings.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"facets.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a08.\u00a0 Localization\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.localization\"></a>Chapter\u00a08.\u00a0\n   Localization\n-  <a id=\"id655346\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"locales.html\">14. Locales</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"locales.html#manual.localization.locales.locale\">locale</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"locales.html#locales.locale.future\">Future</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"facets.html\">15. Facets aka Categories</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"facets.html#manual.localization.facet.ctype\">ctype</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"facets.html#facet.ctype.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"facets.html#facet.ctype.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"codecvt.html\">codecvt</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"messages.html\">messages</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.future\">Future</a></span></dt></dl></dd></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt05ch13s06.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"locales.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">CString (MFC)\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a014.\u00a0Locales</td></tr></table></div></body></html>\n+  <a id=\"id443947\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"section\"><a href=\"localization.html#std.localization.locales\">Locales</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"localization.html#std.localization.locales.locale\">locale</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"facets.html\">Facets</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"facets.html#std.localization.facet.ctype\">ctype</a></span></dt><dt><span class=\"section\"><a href=\"facets.html#std.localization.facet.codecvt\">codecvt</a></span></dt><dt><span class=\"section\"><a href=\"facets.html#manual.localization.facet.messages\">messages</a></span></dt></dl></dd></dl></div><div class=\"section\" title=\"Locales\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.localization.locales\"></a>Locales</h2></div></div></div><div class=\"section\" title=\"locale\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.localization.locales.locale\"></a>locale</h3></div></div></div><p>\n+Describes the basic locale object, including nested\n+classes id, facet, and the reference-counted implementation object,\n+class _Impl.\n+</p><div class=\"section\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locales.locale.req\"></a>Requirements</h4></div></div></div><p>\n+Class locale is non-templatized and has two distinct types nested\n+inside of it:\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+class facet\n+22.1.1.1.2 Class locale::facet\n+</em></span>\n+</p></blockquote></div><p>\n+Facets actually implement locale functionality. For instance, a facet\n+called numpunct is the data object that can be used to query for the\n+thousands separator in the locale.\n+</p><p>\n+Literally, a facet is strictly defined:\n+</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+      Containing the following public data member:\n+    </p><p>\n+      <code class=\"code\">static locale::id id;</code>\n+    </p></li><li class=\"listitem\"><p>\n+      Derived from another facet:\n+    </p><p>\n+      <code class=\"code\">class gnu_codecvt: public std::ctype&lt;user-defined-type&gt;</code>\n+    </p></li></ul></div><p>\n+Of interest in this class are the memory management options explicitly\n+specified as an argument to facet's constructor. Each constructor of a\n+facet class takes a std::size_t __refs argument: if __refs == 0, the\n+facet is deleted when the locale containing it is destroyed. If __refs\n+== 1, the facet is not destroyed, even when it is no longer\n+referenced.\n+</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n+<span class=\"emphasis\"><em>\n+class id\n+22.1.1.1.3 - Class locale::id\n+</em></span>\n+</p></blockquote></div><p>\n+Provides an index for looking up specific facets.\n+</p></div><div class=\"section\" title=\"Design\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locales.locale.design\"></a>Design</h4></div></div></div><p>\n+The major design challenge is fitting an object-orientated and\n+non-global locale design on top of POSIX and other relevant standards,\n+which include the Single Unix (nee X/Open.)\n+</p><p>\n+Because C and earlier versions of POSIX fall down so completely,\n+portability is an issue.\n+</p></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locales.locale.impl\"></a>Implementation</h4></div></div></div><div class=\"section\" title=\"Interacting with &quot;C&quot; locales\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"locale.impl.c\"></a>Interacting with \"C\" locales</h5></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+       <code class=\"code\">`locale -a`</code> displays available locales.\n+     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n+af_ZA\n+ar_AE\n+ar_AE.utf8\n+ar_BH\n+ar_BH.utf8\n+ar_DZ\n+ar_DZ.utf8\n+ar_EG\n+ar_EG.utf8\n+ar_IN\n+ar_IQ\n+ar_IQ.utf8\n+ar_JO\n+ar_JO.utf8\n+ar_KW\n+ar_KW.utf8\n+ar_LB\n+ar_LB.utf8\n+ar_LY\n+ar_LY.utf8\n+ar_MA\n+ar_MA.utf8\n+ar_OM\n+ar_OM.utf8\n+ar_QA\n+ar_QA.utf8\n+ar_SA\n+ar_SA.utf8\n+ar_SD\n+ar_SD.utf8\n+ar_SY\n+ar_SY.utf8\n+ar_TN\n+ar_TN.utf8\n+ar_YE\n+ar_YE.utf8\n+be_BY\n+be_BY.utf8\n+bg_BG\n+bg_BG.utf8\n+br_FR\n+bs_BA\n+C\n+ca_ES\n+ca_ES@euro\n+ca_ES.utf8\n+ca_ES.utf8@euro\n+cs_CZ\n+cs_CZ.utf8\n+cy_GB\n+da_DK\n+da_DK.iso885915\n+da_DK.utf8\n+de_AT\n+de_AT@euro\n+de_AT.utf8\n+de_AT.utf8@euro\n+de_BE\n+de_BE@euro\n+de_BE.utf8\n+de_BE.utf8@euro\n+de_CH\n+de_CH.utf8\n+de_DE\n+de_DE@euro\n+de_DE.utf8\n+de_DE.utf8@euro\n+de_LU\n+de_LU@euro\n+de_LU.utf8\n+de_LU.utf8@euro\n+el_GR\n+el_GR.utf8\n+en_AU\n+en_AU.utf8\n+en_BW\n+en_BW.utf8\n+en_CA\n+en_CA.utf8\n+en_DK\n+en_DK.utf8\n+en_GB\n+en_GB.iso885915\n+en_GB.utf8\n+en_HK\n+en_HK.utf8\n+en_IE\n+en_IE@euro\n+en_IE.utf8\n+en_IE.utf8@euro\n+en_IN\n+en_NZ\n+en_NZ.utf8\n+en_PH\n+en_PH.utf8\n+en_SG\n+en_SG.utf8\n+en_US\n+en_US.iso885915\n+en_US.utf8\n+en_ZA\n+en_ZA.utf8\n+en_ZW\n+en_ZW.utf8\n+es_AR\n+es_AR.utf8\n+es_BO\n+es_BO.utf8\n+es_CL\n+es_CL.utf8\n+es_CO\n+es_CO.utf8\n+es_CR\n+es_CR.utf8\n+es_DO\n+es_DO.utf8\n+es_EC\n+es_EC.utf8\n+es_ES\n+es_ES@euro\n+es_ES.utf8\n+es_ES.utf8@euro\n+es_GT\n+es_GT.utf8\n+es_HN\n+es_HN.utf8\n+es_MX\n+es_MX.utf8\n+es_NI\n+es_NI.utf8\n+es_PA\n+es_PA.utf8\n+es_PE\n+es_PE.utf8\n+es_PR\n+es_PR.utf8\n+es_PY\n+es_PY.utf8\n+es_SV\n+es_SV.utf8\n+es_US\n+es_US.utf8\n+es_UY\n+es_UY.utf8\n+es_VE\n+es_VE.utf8\n+et_EE\n+et_EE.utf8\n+eu_ES\n+eu_ES@euro\n+eu_ES.utf8\n+eu_ES.utf8@euro\n+fa_IR\n+fi_FI\n+fi_FI@euro\n+fi_FI.utf8\n+fi_FI.utf8@euro\n+fo_FO\n+fo_FO.utf8\n+fr_BE\n+fr_BE@euro\n+fr_BE.utf8\n+fr_BE.utf8@euro\n+fr_CA\n+fr_CA.utf8\n+fr_CH\n+fr_CH.utf8\n+fr_FR\n+fr_FR@euro\n+fr_FR.utf8\n+fr_FR.utf8@euro\n+fr_LU\n+fr_LU@euro\n+fr_LU.utf8\n+fr_LU.utf8@euro\n+ga_IE\n+ga_IE@euro\n+ga_IE.utf8\n+ga_IE.utf8@euro\n+gl_ES\n+gl_ES@euro\n+gl_ES.utf8\n+gl_ES.utf8@euro\n+gv_GB\n+gv_GB.utf8\n+he_IL\n+he_IL.utf8\n+hi_IN\n+hr_HR\n+hr_HR.utf8\n+hu_HU\n+hu_HU.utf8\n+id_ID\n+id_ID.utf8\n+is_IS\n+is_IS.utf8\n+it_CH\n+it_CH.utf8\n+it_IT\n+it_IT@euro\n+it_IT.utf8\n+it_IT.utf8@euro\n+iw_IL\n+iw_IL.utf8\n+ja_JP.eucjp\n+ja_JP.utf8\n+ka_GE\n+kl_GL\n+kl_GL.utf8\n+ko_KR.euckr\n+ko_KR.utf8\n+kw_GB\n+kw_GB.utf8\n+lt_LT\n+lt_LT.utf8\n+lv_LV\n+lv_LV.utf8\n+mi_NZ\n+mk_MK\n+mk_MK.utf8\n+mr_IN\n+ms_MY\n+ms_MY.utf8\n+mt_MT\n+mt_MT.utf8\n+nl_BE\n+nl_BE@euro\n+nl_BE.utf8\n+nl_BE.utf8@euro\n+nl_NL\n+nl_NL@euro\n+nl_NL.utf8\n+nl_NL.utf8@euro\n+nn_NO\n+nn_NO.utf8\n+no_NO\n+no_NO.utf8\n+oc_FR\n+pl_PL\n+pl_PL.utf8\n+POSIX\n+pt_BR\n+pt_BR.utf8\n+pt_PT\n+pt_PT@euro\n+pt_PT.utf8\n+pt_PT.utf8@euro\n+ro_RO\n+ro_RO.utf8\n+ru_RU\n+ru_RU.koi8r\n+ru_RU.utf8\n+ru_UA\n+ru_UA.utf8\n+se_NO\n+sk_SK\n+sk_SK.utf8\n+sl_SI\n+sl_SI.utf8\n+sq_AL\n+sq_AL.utf8\n+sr_YU\n+sr_YU@cyrillic\n+sr_YU.utf8\n+sr_YU.utf8@cyrillic\n+sv_FI\n+sv_FI@euro\n+sv_FI.utf8\n+sv_FI.utf8@euro\n+sv_SE\n+sv_SE.iso885915\n+sv_SE.utf8\n+ta_IN\n+te_IN\n+tg_TJ\n+th_TH\n+th_TH.utf8\n+tl_PH\n+tr_TR\n+tr_TR.utf8\n+uk_UA\n+uk_UA.utf8\n+ur_PK\n+uz_UZ\n+vi_VN\n+vi_VN.tcvn\n+wa_BE\n+wa_BE@euro\n+yi_US\n+zh_CN\n+zh_CN.gb18030\n+zh_CN.gbk\n+zh_CN.utf8\n+zh_HK\n+zh_HK.utf8\n+zh_TW\n+zh_TW.euctw\n+zh_TW.utf8\n+</pre></blockquote></div></li><li class=\"listitem\"><p>\n+       <code class=\"code\">`locale`</code> displays environmental variables that\n+       impact how locale(\"\") will be deduced.\n+     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n+LANG=en_US\n+LC_CTYPE=\"en_US\"\n+LC_NUMERIC=\"en_US\"\n+LC_TIME=\"en_US\"\n+LC_COLLATE=\"en_US\"\n+LC_MONETARY=\"en_US\"\n+LC_MESSAGES=\"en_US\"\n+LC_PAPER=\"en_US\"\n+LC_NAME=\"en_US\"\n+LC_ADDRESS=\"en_US\"\n+LC_TELEPHONE=\"en_US\"\n+LC_MEASUREMENT=\"en_US\"\n+LC_IDENTIFICATION=\"en_US\"\n+LC_ALL=\n+</pre></blockquote></div></li></ul></div><p>\n+From Josuttis, p. 697-698, which says, that \"there is only *one*\n+relation (of the C++ locale mechanism) to the C locale mechanism: the\n+global C locale is modified if a named C++ locale object is set as the\n+global locale\" (emphasis Paolo), that is:\n+</p><pre class=\"programlisting\">std::locale::global(std::locale(\"\"));</pre><p>affects the C functions as if the following call was made:</p><pre class=\"programlisting\">std::setlocale(LC_ALL, \"\");</pre><p>\n+  On the other hand, there is *no* vice versa, that is, calling\n+  setlocale has *no* whatsoever on the C++ locale mechanism, in\n+  particular on the working of locale(\"\"), which constructs the locale\n+  object from the environment of the running program, that is, in\n+  practice, the set of LC_ALL, LANG, etc. variable of the shell.\n+</p></div></div><div class=\"section\" title=\"Future\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locales.locale.future\"></a>Future</h4></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n+       Locale initialization: at what point does _S_classic, _S_global\n+       get initialized? Can named locales assume this initialization\n+       has already taken place?\n+     </p></li><li class=\"listitem\"><p>\n+       Document how named locales error check when filling data\n+       members. I.e., a fr_FR locale that doesn't have\n+       numpunct::truename(): does it use \"true\"? Or is it a blank\n+       string? What's the convention?\n+   </p></li><li class=\"listitem\"><p>\n+       Explain how locale aliasing happens. When does \"de_DE\" use \"de\"\n+       information? What is the rule for locales composed of just an\n+       ISO language code (say, \"de\") and locales with both an ISO\n+       language code and ISO country code (say, \"de_DE\").\n+     </p></li><li class=\"listitem\"><p>\n+       What should non-required facet instantiations do?  If the\n+       generic implementation is provided, then how to end-users\n+       provide specializations?\n+   </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locales.locale.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id395802\"></a><p><span class=\"title\"><i>\n+      The GNU C Library\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">\n+      Chapters 6 Character Set Handling and 7 Locales and\n+      Internationalization\n+    . </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id400950\"></a><p><span class=\"title\"><i>\n+      Correspondence\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id404652\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 14882:1998 Programming languages - C++\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id404670\"></a><p><span class=\"title\"><i>\n+      ISO/IEC 9899:1999 Programming languages - C\n+    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id404688\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.opengroup.org/austin\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  System Interface Definitions, Issue 7 (IEEE Std. 1003.1-2008)\n+\t</em>\n+      </a>\n+    . </span><span class=\"copyright\">Copyright \u00a9 2008 \n+\tThe Open Group/The Institute of Electrical and Electronics\n+\tEngineers, Inc.\n+      . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id381600\"></a><p><span class=\"title\"><i>\n+      The C++ Programming Language, Special Edition\n+    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id492267\"></a><p><span class=\"title\"><i>\n+      Standard C++ IOStreams and Locales\n+    </i>. </span><span class=\"subtitle\">\n+      Advanced Programmer's Guide and Reference\n+    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tAddison Wesley Longman\n+      . </span></span></p></div></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"strings.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"facets.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a07.\u00a0\n+  Strings\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Facets</td></tr></table></div></body></html>"}, {"sha": "82ef8c7125fdd65903de1c756d5dccade379d3c8", "filename": "libstdc++-v3/doc/html/manual/memory.html", "status": "modified", "additions": 447, "deletions": 64, "changes": 511, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,23 +1,23 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a011.\u00a0Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0 Utilities\" /><link rel=\"prev\" href=\"pairs.html\" title=\"Chapter\u00a010.\u00a0Pairs\" /><link rel=\"next\" href=\"auto_ptr.html\" title=\"auto_ptr\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a011.\u00a0Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Chapter\u00a06.\u00a0 Utilities\" /><link rel=\"prev\" href=\"pairs.html\" title=\"Pairs\" /><link rel=\"next\" href=\"traits.html\" title=\"Traits\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a06.\u00a0\n   Utilities\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"auto_ptr.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a011.\u00a0Memory\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.memory\"></a>Chapter\u00a011.\u00a0Memory</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"memory.html#manual.util.memory.allocator\">Allocators</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"memory.html#allocator.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"memory.html#allocator.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"memory.html#allocator.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"memory.html#allocator.using\">Using a Specific Allocator</a></span></dt><dt><span class=\"sect2\"><a href=\"memory.html#allocator.custom\">Custom Allocators</a></span></dt><dt><span class=\"sect2\"><a href=\"memory.html#allocator.ext\">Extension Allocators</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"auto_ptr.html\">auto_ptr</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"auto_ptr.html#auto_ptr.limitations\">Limitations</a></span></dt><dt><span class=\"sect2\"><a href=\"auto_ptr.html#auto_ptr.using\">Use in Containers</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"shared_ptr.html\">shared_ptr</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.using\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.ack\">Acknowledgments</a></span></dt></dl></dd></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr></table><hr /></div><div class=\"section\" title=\"Memory\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.util.memory\"></a>Memory</h2></div></div></div><p>\n     Memory contains three general areas. First, function and operator\n     calls via <code class=\"function\">new</code> and <code class=\"function\">delete</code>\n     operator or member function calls.  Second, allocation via\n     <code class=\"classname\">allocator</code>. And finally, smart pointer and\n     intelligent pointer abstractions.\n-  </p><div class=\"sect1\" title=\"Allocators\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.util.memory.allocator\"></a>Allocators</h2></div></div></div><p>\n+  </p><div class=\"section\" title=\"Allocators\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.util.memory.allocator\"></a>Allocators</h3></div></div></div><p>\n  Memory management for Standard Library entities is encapsulated in a\n  class template called <code class=\"classname\">allocator</code>. The\n  <code class=\"classname\">allocator</code> abstraction is used throughout the\n  library in <code class=\"classname\">string</code>, container classes,\n  algorithms, and parts of iostreams. This class, and base classes of\n  it, are the superset of available free store (<span class=\"quote\">\u201c<span class=\"quote\">heap</span>\u201d</span>)\n  management classes.\n-</p><div class=\"sect2\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.req\"></a>Requirements</h3></div></div></div><p>\n+</p><div class=\"section\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.req\"></a>Requirements</h4></div></div></div><p>\n     The C++ standard only gives a few directives in this area:\n   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n        When you add elements to a container, and the container must\n@@ -32,9 +32,9 @@\n        container-of-T is <code class=\"classname\">allocator&lt;T&gt;</code>.\n        </p></li><li class=\"listitem\"><p>\n        The interface of the <code class=\"classname\">allocator&lt;T&gt;</code> class is\n-         extremely simple.  It has about 20 public declarations (nested\n-         typedefs, member functions, etc), but the two which concern us most\n-         are:\n+\t extremely simple.  It has about 20 public declarations (nested\n+\t typedefs, member functions, etc), but the two which concern us most\n+\t are:\n        </p><pre class=\"programlisting\">\n \t T*    allocate   (size_type n, const void* hint = 0);\n \t void  deallocate (T* p, size_type n);\n@@ -43,18 +43,18 @@\n \t functions is a <span class=\"emphasis\"><em>count</em></span> of the number of\n \t <span class=\"type\">T</span>'s to allocate space for, <span class=\"emphasis\"><em>not their\n \t total size</em></span>.\n-\t (This is a simplification; the real signatures use nested typedefs.)  \n+\t (This is a simplification; the real signatures use nested typedefs.)\n        </p></li><li class=\"listitem\"><p>\n \t The storage is obtained by calling <code class=\"function\">::operator\n \t new</code>, but it is unspecified when or how\n-\t often this function is called.  The use of the \n+\t often this function is called.  The use of the\n \t <code class=\"varname\">hint</code> is unspecified, but intended as an\n \t aid to locality if an implementation so\n \t desires. <code class=\"constant\">[20.4.1.1]/6</code>\n-       </p></li></ul></div><p> \n+       </p></li></ul></div><p>\n      Complete details can be found in the C++ standard, look in\n      <code class=\"constant\">[20.4 Memory]</code>.\n-   </p></div><div class=\"sect2\" title=\"Design Issues\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.design_issues\"></a>Design Issues</h3></div></div></div><p>\n+   </p></div><div class=\"section\" title=\"Design Issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.design_issues\"></a>Design Issues</h4></div></div></div><p>\n     The easiest way of fulfilling the requirements is to call\n     <code class=\"function\">operator new</code> each time a container needs\n     memory, and to call <code class=\"function\">operator delete</code> each time\n@@ -67,7 +67,7 @@\n     while <code class=\"classname\">__gnu_cxx::malloc_allocator</code>\n     implements much the same thing, only with the C language functions\n     <code class=\"function\">std::malloc</code> and <code class=\"function\">free</code>.\n-  </p><p> \n+  </p><p>\n     Another approach is to use intelligence within the allocator\n     class to cache allocations. This extra machinery can take a variety\n     of forms: a bitmap index, an index into an exponentially increasing\n@@ -93,33 +93,33 @@\n     or loading and unloading shared objects in memory. As such, using\n     caching allocators on systems that do not support\n     <code class=\"function\">abi::__cxa_atexit</code> is not recommended.\n-  </p></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" title=\"Interface Design\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id630442\"></a>Interface Design</h4></div></div></div><p>\n+  </p></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.impl\"></a>Implementation</h4></div></div></div><div class=\"section\" title=\"Interface Design\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id444984\"></a>Interface Design</h5></div></div></div><p>\n      The only allocator interface that\n      is supported is the standard C++ interface. As such, all STL\n      containers have been adjusted, and all external allocators have\n-     been modified to support this change.   \n-   </p><p> \n+     been modified to support this change.\n+   </p><p>\n      The class <code class=\"classname\">allocator</code> just has typedef,\n    constructor, and rebind members. It inherits from one of the\n    high-speed extension allocators, covered below. Thus, all\n    allocation and deallocation depends on the base class.\n-   </p><p> \n+   </p><p>\n      The base class that <code class=\"classname\">allocator</code> is derived from\n      may not be user-configurable.\n-</p></div><div class=\"sect3\" title=\"Selecting Default Allocation Policy\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id637894\"></a>Selecting Default Allocation Policy</h4></div></div></div><p> \n+</p></div><div class=\"section\" title=\"Selecting Default Allocation Policy\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id399970\"></a>Selecting Default Allocation Policy</h5></div></div></div><p>\n      It's difficult to pick an allocation strategy that will provide\n    maximum utility, without excessively penalizing some behavior. In\n    fact, it's difficult just deciding which typical actions to measure\n    for speed.\n-   </p><p> \n+   </p><p>\n      Three synthetic benchmarks have been created that provide data\n      that is used to compare different C++ allocators. These tests are:\n    </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n-       Insertion. \n+       Insertion.\n        </p><p>\n        Over multiple iterations, various STL container\n      objects have elements inserted to some maximum amount. A variety\n-     of allocators are tested.  \n+     of allocators are tested.\n      Test source for <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/sequence.cc?view=markup\" target=\"_top\">sequence</a>\n      and <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/associative.cc?view=markup\" target=\"_top\">associative</a>\n      containers.\n@@ -128,36 +128,36 @@\n        </p><p>\n        This test shows the ability of the allocator to reclaim memory\n      on a per-thread basis, as well as measuring thread contention\n-     for memory resources. \n-     Test source \n+     for memory resources.\n+     Test source\n     <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert_erase/associative.cc?view=markup\" target=\"_top\">here</a>.\n        </p></li><li class=\"listitem\"><p>\n \t A threaded producer/consumer model.\n        </p><p>\n        Test source for\n      <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc++-v3/testsuite/performance/23_containers/producer_consumer/sequence.cc?view=markup\" target=\"_top\">sequence</a>\n-     and \n+     and\n      <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc++-v3/testsuite/performance/23_containers/producer_consumer/associative.cc?view=markup\" target=\"_top\">associative</a>\n      containers.\n      </p></li></ol></div><p>\n      The current default choice for\n      <code class=\"classname\">allocator</code> is\n      <code class=\"classname\">__gnu_cxx::new_allocator</code>.\n-   </p></div><div class=\"sect3\" title=\"Disabling Memory Caching\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id629596\"></a>Disabling Memory Caching</h4></div></div></div><p> \n+   </p></div><div class=\"section\" title=\"Disabling Memory Caching\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id392037\"></a>Disabling Memory Caching</h5></div></div></div><p>\n       In use, <code class=\"classname\">allocator</code> may allocate and\n       deallocate using implementation-specified strategies and\n       heuristics. Because of this, every call to an allocator object's\n       <code class=\"function\">allocate</code> member function may not actually\n       call the global operator new. This situation is also duplicated\n       for calls to the <code class=\"function\">deallocate</code> member\n       function.\n-    </p><p> \n-     This can be confusing. \n-   </p><p> \n+    </p><p>\n+     This can be confusing.\n+   </p><p>\n      In particular, this can make debugging memory errors more\n      difficult, especially when using third party tools like valgrind or\n      debug versions of <code class=\"function\">new</code>.\n-   </p><p> \n+   </p><p>\n      There are various ways to solve this problem. One would be to use\n      a custom allocator that just called operators\n      <code class=\"function\">new</code> and <code class=\"function\">delete</code>\n@@ -179,7 +179,7 @@\n      environment, it likely means that you linked against objects\n      built against the older library (objects which might still using the\n      cached allocations...).\n-  </p></div></div><div class=\"sect2\" title=\"Using a Specific Allocator\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.using\"></a>Using a Specific Allocator</h3></div></div></div><p>\n+  </p></div></div><div class=\"section\" title=\"Using a Specific Allocator\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.using\"></a>Using a Specific Allocator</h4></div></div></div><p>\n      You can specify different memory management schemes on a\n      per-container basis, by overriding the default\n      <span class=\"type\">Allocator</span> template parameter.  For example, an easy\n@@ -190,16 +190,16 @@\n       Likewise, a debugging form of whichever allocator is currently in use:\n     </p><pre class=\"programlisting\">\n     std::deque &lt;int, __gnu_cxx::debug_allocator&lt;std::allocator&lt;int&gt; &gt; &gt;  debug_deque;\n-      </pre></div><div class=\"sect2\" title=\"Custom Allocators\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.custom\"></a>Custom Allocators</h3></div></div></div><p> \n+      </pre></div><div class=\"section\" title=\"Custom Allocators\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.custom\"></a>Custom Allocators</h4></div></div></div><p>\n     Writing a portable C++ allocator would dictate that the interface\n     would look much like the one specified for\n     <code class=\"classname\">allocator</code>. Additional member functions, but\n     not subtractions, would be permissible.\n-  </p><p> \n+  </p><p>\n      Probably the best place to start would be to copy one of the\n-   extension allocators: say a simple one like \n+   extension allocators: say a simple one like\n    <code class=\"classname\">new_allocator</code>.\n-   </p></div><div class=\"sect2\" title=\"Extension Allocators\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.ext\"></a>Extension Allocators</h3></div></div></div><p> \n+   </p></div><div class=\"section\" title=\"Extension Allocators\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.ext\"></a>Extension Allocators</h4></div></div></div><p>\n     Several other allocators are provided as part of this\n     implementation.  The location of the extension allocators and their\n     names have changed, but in all cases, functionality is\n@@ -237,7 +237,7 @@\n \t startup. For usage examples, please consult the testsuite.\n        </p></li><li class=\"listitem\"><p>\n        <code class=\"classname\">debug_allocator</code>\n-       </p><p> \n+       </p><p>\n \t A wrapper around an arbitrary allocator A.  It passes on\n \t slightly increased size requests to A, and uses the extra\n \t memory to store size information.  When a pointer is passed\n@@ -246,13 +246,13 @@\n \t guarantee they match.\n        </p></li><li class=\"listitem\"><p>\n \t<code class=\"classname\">throw_allocator</code>\n-\t</p><p> \n+\t</p><p>\n \t  Includes memory tracking and marking abilities as well as hooks for\n \t  throwing exceptions at configurable intervals (including random,\n-\t  all, none). \n+\t  all, none).\n \t</p></li><li class=\"listitem\"><p>\n        <code class=\"classname\">__pool_alloc</code>\n-       </p><p> \n+       </p><p>\n \t A high-performance, single pool allocator.  The reusable\n \t memory is shared among identical instantiations of this type.\n \t It calls through <code class=\"function\">::operator new</code> to\n@@ -261,7 +261,7 @@\n \t size, then the pool is bypassed, and the allocate/deallocate\n \t request is passed to <code class=\"function\">::operator new</code>\n \t directly.\n-       </p><p> \n+       </p><p>\n \t Older versions of this class take a boolean template\n \t parameter, called <code class=\"varname\">thr</code>, and an integer template\n \t parameter, called <code class=\"varname\">inst</code>.\n@@ -308,39 +308,422 @@\n \t A high-performance allocator that uses a bit-map to keep track\n \t of the used and unused memory locations. It has its own\n \t documentation, found <a class=\"link\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\">here</a>.\n-       </p></li></ol></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id616986\"></a><p><span class=\"title\"><i>\n-    ISO/IEC 14882:1998 Programming languages - C++  \n+       </p></li></ol></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id449438\"></a><p><span class=\"title\"><i>\n+    ISO/IEC 14882:1998 Programming languages - C++\n     </i>. </span>\n       isoc++_1998\n-    <span class=\"pagenums\">20.4 Memory. </span></p></div><div class=\"biblioentry\" title=\"The Standard Librarian: What Are Allocators Good\"><a id=\"id617001\"></a><p><span class=\"title\"><i>The Standard Librarian: What Are Allocators Good\n-    </i>. </span>\n-      austernm\n-    <span class=\"author\"><span class=\"firstname\">Matt</span> <span class=\"surname\">Austern</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tC/C++ Users Journal\t\n-      . </span></span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.cuj.com/documents/s=8000/cujcexp1812austern/\" target=\"_top\">\n+    <span class=\"pagenums\">20.4 Memory. </span></p></div><div class=\"biblioentry\"><a id=\"id449453\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.drdobbs.com/cpp/184403759\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  The Standard Librarian: What Are Allocators Good For?\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The Hoard Memory Allocator\"><a id=\"id658988\"></a><p><span class=\"title\"><i>The Hoard Memory Allocator</i>. </span>\n-      emeryb\n-    <span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span><span class=\"biblioid\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Matt</span> <span class=\"surname\">Austern</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tC/C++ Users Journal\n+      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id396647\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.cs.umass.edu/~emery/hoard/\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  The Hoard Memory Allocator\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Reconsidering Custom Memory Allocation\"><a id=\"id620190\"></a><p><span class=\"title\"><i>Reconsidering Custom Memory Allocation</i>. </span>\n-      bergerzorn\n-    <span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span><span class=\"author\"><span class=\"firstname\">Ben</span> <span class=\"surname\">Zorn</span>. </span><span class=\"author\"><span class=\"firstname\">Kathryn</span> <span class=\"surname\">McKinley</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 OOPSLA. </span><span class=\"biblioid\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span></p></div><div class=\"biblioentry\"><a id=\"id410436\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.cs.umass.edu/~emery/pubs/berger-oopsla2002.pdf\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Reconsidering Custom Memory Allocation\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Allocator Types\"><a id=\"id598997\"></a><p><span class=\"title\"><i>Allocator Types</i>. </span>\n-      kreftlanger\n-    <span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tC/C++ Users Journal\t\n-      . </span></span><span class=\"biblioid\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span><span class=\"author\"><span class=\"firstname\">Ben</span> <span class=\"surname\">Zorn</span>. </span><span class=\"author\"><span class=\"firstname\">Kathryn</span> <span class=\"surname\">McKinley</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 OOPSLA. </span></p></div><div class=\"biblioentry\"><a id=\"id507492\"></a><p><span class=\"biblioid\">\n       <a class=\"ulink\" href=\"http://www.angelikalanger.com/Articles/C++Report/Allocators/Allocators.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Allocator Types\n+\t</em>\n       </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language\"><a id=\"id683391\"></a><p><span class=\"title\"><i>The C++ Programming Language</i>. </span>\n-      tcpl\n-    <span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 . </span><span class=\"pagenums\">19.4 Allocators. </span><span class=\"publisher\"><span class=\"publishername\">\n+    . </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n+\tC/C++ Users Journal\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language\"><a id=\"id394630\"></a><p><span class=\"title\"><i>The C++ Programming Language</i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 . </span><span class=\"pagenums\">19.4 Allocators. </span><span class=\"publisher\"><span class=\"publishername\">\n \tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Yalloc: A Recycling C++ Allocator\"><a id=\"id704594\"></a><p><span class=\"title\"><i>Yalloc: A Recycling C++ Allocator</i>. </span>\n-      yenf\n-    <span class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Yen</span>. </span><span class=\"copyright\">Copyright \u00a9  . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"auto_ptr.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a010.\u00a0Pairs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0auto_ptr</td></tr></table></div></body></html>\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"Yalloc: A Recycling C++ Allocator\"><a id=\"id444446\"></a><p><span class=\"title\"><i>Yalloc: A Recycling C++ Allocator</i>. </span><span class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Yen</span>. </span></p></div></div></div><div class=\"section\" title=\"auto_ptr\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.util.memory.auto_ptr\"></a>auto_ptr</h3></div></div></div><div class=\"section\" title=\"Limitations\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"auto_ptr.limitations\"></a>Limitations</h4></div></div></div><p>Explaining all of the fun and delicious things that can\n+   happen with misuse of the <code class=\"classname\">auto_ptr</code> class\n+   template (called <acronym class=\"acronym\">AP</acronym> here) would take some\n+   time. Suffice it to say that the use of <acronym class=\"acronym\">AP</acronym>\n+   safely in the presence of copying has some subtleties.\n+   </p><p>\n+     The AP class is a really\n+      nifty idea for a smart pointer, but it is one of the dumbest of\n+      all the smart pointers -- and that's fine.\n+   </p><p>\n+     AP is not meant to be a supersmart solution to all resource\n+      leaks everywhere.  Neither is it meant to be an effective form\n+      of garbage collection (although it can help, a little bit).\n+      And it can <span class=\"emphasis\"><em>not</em></span>be used for arrays!\n+   </p><p>\n+     <acronym class=\"acronym\">AP</acronym> is meant to prevent nasty leaks in the\n+     presence of exceptions.  That's <span class=\"emphasis\"><em>all</em></span>.  This\n+     code is AP-friendly:\n+   </p><pre class=\"programlisting\">\n+    // Not a recommend naming scheme, but good for web-based FAQs.\n+    typedef std::auto_ptr&lt;MyClass&gt;  APMC;\n+\n+    extern function_taking_MyClass_pointer (MyClass*);\n+    extern some_throwable_function ();\n+\n+    void func (int data)\n+    {\n+\tAPMC  ap (new MyClass(data));\n+\n+\tsome_throwable_function();   // this will throw an exception\n+\n+\tfunction_taking_MyClass_pointer (ap.get());\n+    }\n+   </pre><p>When an exception gets thrown, the instance of MyClass that's\n+      been created on the heap will be <code class=\"function\">delete</code>'d as the stack is\n+      unwound past <code class=\"function\">func()</code>.\n+   </p><p>Changing that code as follows is not <acronym class=\"acronym\">AP</acronym>-friendly:\n+   </p><pre class=\"programlisting\">\n+\tAPMC  ap (new MyClass[22]);\n+   </pre><p>You will get the same problems as you would without the use\n+      of <acronym class=\"acronym\">AP</acronym>:\n+   </p><pre class=\"programlisting\">\n+\tchar*  array = new char[10];       // array new...\n+\t...\n+\tdelete array;                      // ...but single-object delete\n+   </pre><p>\n+     AP cannot tell whether the pointer you've passed at creation points\n+      to one or many things.  If it points to many things, you are about\n+      to die.  AP is trivial to write, however, so you could write your\n+      own <code class=\"code\">auto_array_ptr</code> for that situation (in fact, this has\n+      been done many times; check the mailing lists, Usenet, Boost, etc).\n+   </p></div><div class=\"section\" title=\"Use in Containers\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"auto_ptr.using\"></a>Use in Containers</h4></div></div></div><p>\n+  </p><p>All of the <a class=\"link\" href=\"containers.html\" title=\"Chapter\u00a09.\u00a0 Containers\">containers</a>\n+      described in the standard library require their contained types\n+      to have, among other things, a copy constructor like this:\n+  </p><pre class=\"programlisting\">\n+    struct My_Type\n+    {\n+\tMy_Type (My_Type const&amp;);\n+    };\n+   </pre><p>\n+     Note the const keyword; the object being copied shouldn't change.\n+     The template class <code class=\"code\">auto_ptr</code> (called AP here) does not\n+     meet this requirement.  Creating a new AP by copying an existing\n+     one transfers ownership of the pointed-to object, which means that\n+     the AP being copied must change, which in turn means that the\n+     copy ctors of AP do not take const objects.\n+   </p><p>\n+     The resulting rule is simple: <span class=\"emphasis\"><em>Never ever use a\n+     container of auto_ptr objects</em></span>. The standard says that\n+     <span class=\"quote\">\u201c<span class=\"quote\">undefined</span>\u201d</span> behavior is the result, but it is\n+     guaranteed to be messy.\n+   </p><p>\n+     To prevent you from doing this to yourself, the\n+      <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\">concept checks</a> built\n+      in to this implementation will issue an error if you try to\n+      compile code like this:\n+   </p><pre class=\"programlisting\">\n+    #include &lt;vector&gt;\n+    #include &lt;memory&gt;\n+\n+    void f()\n+    {\n+\tstd::vector&lt; std::auto_ptr&lt;int&gt; &gt;   vec_ap_int;\n+    }\n+   </pre><p>\n+Should you try this with the checks enabled, you will see an error.\n+   </p></div></div><div class=\"section\" title=\"shared_ptr\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.util.memory.shared_ptr\"></a>shared_ptr</h3></div></div></div><p>\n+The shared_ptr class template stores a pointer, usually obtained via new,\n+and implements shared ownership semantics.\n+</p><div class=\"section\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.req\"></a>Requirements</h4></div></div></div><p>\n+  </p><p>\n+    The standard deliberately doesn't require a reference-counted\n+    implementation, allowing other techniques such as a\n+    circular-linked-list.\n+  </p><p>\n+    At the time of writing the C++0x working paper doesn't mention how\n+    threads affect shared_ptr, but it is likely to follow the existing\n+    practice set by <code class=\"classname\">boost::shared_ptr</code>.  The\n+    shared_ptr in libstdc++ is derived from Boost's, so the same rules\n+    apply.\n+  </p><p>\n+  </p></div><div class=\"section\" title=\"Design Issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.design_issues\"></a>Design Issues</h4></div></div></div><p>\n+The <code class=\"classname\">shared_ptr</code> code is kindly donated to GCC by the Boost\n+project and the original authors of the code. The basic design and\n+algorithms are from Boost, the notes below describe details specific to\n+the GCC implementation. Names have been uglified in this implementation,\n+but the design should be recognisable to anyone familiar with the Boost\n+1.32 shared_ptr.\n+  </p><p>\n+The basic design is an abstract base class, <code class=\"code\">_Sp_counted_base</code> that\n+does the reference-counting and calls virtual functions when the count\n+drops to zero.\n+Derived classes override those functions to destroy resources in a context\n+where the correct dynamic type is known. This is an application of the\n+technique known as type erasure.\n+  </p></div><div class=\"section\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.impl\"></a>Implementation</h4></div></div></div><div class=\"section\" title=\"Class Hierarchy\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id412343\"></a>Class Hierarchy</h5></div></div></div><p>\n+A <code class=\"classname\">shared_ptr&lt;T&gt;</code> contains a pointer of\n+type <span class=\"type\">T*</span> and an object of type\n+<code class=\"classname\">__shared_count</code>. The shared_count contains a\n+pointer of type <span class=\"type\">_Sp_counted_base*</span> which points to the\n+object that maintains the reference-counts and destroys the managed\n+resource.\n+    </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_base&lt;Lp&gt;</code></span></dt><dd><p>\n+The base of the hierarchy is parameterized on the lock policy alone.\n+_Sp_counted_base doesn't depend on the type of pointer being managed,\n+it only maintains the reference counts and calls virtual functions when\n+the counts drop to zero. The managed object is destroyed when the last\n+strong reference is dropped, but the _Sp_counted_base itself must exist\n+until the last weak reference is dropped.\n+    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_base_impl&lt;Ptr, Deleter, Lp&gt;</code></span></dt><dd><p>\n+Inherits from _Sp_counted_base and stores a pointer of type <span class=\"type\">Ptr</span>\n+and a deleter of type <code class=\"code\">Deleter</code>.  <code class=\"code\">_Sp_deleter</code> is\n+used when the user doesn't supply a custom deleter. Unlike Boost's, this\n+default deleter is not \"checked\" because GCC already issues a warning if\n+<code class=\"function\">delete</code> is used with an incomplete type.\n+This is the only derived type used by <code class=\"classname\">shared_ptr&lt;Ptr&gt;</code>\n+and it is never used by <code class=\"classname\">shared_ptr</code>, which uses one of\n+the following types, depending on how the shared_ptr is constructed.\n+    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_ptr&lt;Ptr, Lp&gt;</code></span></dt><dd><p>\n+Inherits from _Sp_counted_base and stores a pointer of type <span class=\"type\">Ptr</span>,\n+which is passed to <code class=\"function\">delete</code> when the last reference is dropped.\n+This is the simplest form and is used when there is no custom deleter or\n+allocator.\n+    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_deleter&lt;Ptr, Deleter, Alloc&gt;</code></span></dt><dd><p>\n+Inherits from _Sp_counted_ptr and adds support for custom deleter and\n+allocator. Empty Base Optimization is used for the allocator. This class\n+is used even when the user only provides a custom deleter, in which case\n+<code class=\"classname\">allocator</code> is used as the allocator.\n+    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_ptr_inplace&lt;Tp, Alloc, Lp&gt;</code></span></dt><dd><p>\n+Used by <code class=\"code\">allocate_shared</code> and <code class=\"code\">make_shared</code>.\n+Contains aligned storage to hold an object of type <span class=\"type\">Tp</span>,\n+which is constructed in-place with placement <code class=\"function\">new</code>.\n+Has a variadic template constructor allowing any number of arguments to\n+be forwarded to <span class=\"type\">Tp</span>'s constructor.\n+Unlike the other <code class=\"classname\">_Sp_counted_*</code> classes, this one is parameterized on the\n+type of object, not the type of pointer; this is purely a convenience\n+that simplifies the implementation slightly.\n+    </p></dd></dl></div></div><div class=\"section\" title=\"Thread Safety\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id401193\"></a>Thread Safety</h5></div></div></div><p>\n+The interface of <code class=\"classname\">tr1::shared_ptr</code> was extended for C++0x\n+with support for rvalue-references and the other features from\n+N2351. As with other libstdc++ headers shared by TR1 and C++0x,\n+boost_shared_ptr.h uses conditional compilation, based on the macros\n+<code class=\"constant\">_GLIBCXX_INCLUDE_AS_CXX0X</code> and\n+<code class=\"constant\">_GLIBCXX_INCLUDE_AS_TR1</code>, to enable and disable\n+features.\n+    </p><p>\n+C++0x-only features are: rvalue-ref/move support, allocator support,\n+aliasing constructor, make_shared &amp; allocate_shared. Additionally,\n+the constructors taking <code class=\"classname\">auto_ptr</code> parameters are\n+deprecated in C++0x mode.\n+    </p><p>\n+The\n+<a class=\"ulink\" href=\"http://boost.org/libs/smart_ptr/shared_ptr.htm#ThreadSafety\" target=\"_top\">Thread\n+Safety</a> section of the Boost shared_ptr documentation says \"shared_ptr\n+objects offer the same level of thread safety as built-in types.\"\n+The implementation must ensure that concurrent updates to separate shared_ptr\n+instances are correct even when those instances share a reference count e.g.\n+</p><pre class=\"programlisting\">\n+shared_ptr&lt;A&gt; a(new A);\n+shared_ptr&lt;A&gt; b(a);\n+\n+// Thread 1     // Thread 2\n+   a.reset();      b.reset();\n+</pre><p>\n+The dynamically-allocated object must be destroyed by exactly one of the\n+threads. Weak references make things even more interesting.\n+The shared state used to implement shared_ptr must be transparent to the\n+user and invariants must be preserved at all times.\n+The key pieces of shared state are the strong and weak reference counts.\n+Updates to these need to be atomic and visible to all threads to ensure\n+correct cleanup of the managed resource (which is, after all, shared_ptr's\n+job!)\n+On multi-processor systems memory synchronisation may be needed so that\n+reference-count updates and the destruction of the managed resource are\n+race-free.\n+</p><p>\n+The function <code class=\"function\">_Sp_counted_base::_M_add_ref_lock()</code>, called when\n+obtaining a shared_ptr from a weak_ptr, has to test if the managed\n+resource still exists and either increment the reference count or throw\n+<code class=\"classname\">bad_weak_ptr</code>.\n+In a multi-threaded program there is a potential race condition if the last\n+reference is dropped (and the managed resource destroyed) between testing\n+the reference count and incrementing it, which could result in a shared_ptr\n+pointing to invalid memory.\n+</p><p>\n+The Boost shared_ptr (as used in GCC) features a clever lock-free\n+algorithm to avoid the race condition, but this relies on the\n+processor supporting an atomic <span class=\"emphasis\"><em>Compare-And-Swap</em></span>\n+instruction. For other platforms there are fall-backs using mutex\n+locks.  Boost (as of version 1.35) includes several different\n+implementations and the preprocessor selects one based on the\n+compiler, standard library, platform etc. For the version of\n+shared_ptr in libstdc++ the compiler and library are fixed, which\n+makes things much simpler: we have an atomic CAS or we don't, see Lock\n+Policy below for details.\n+</p></div><div class=\"section\" title=\"Selecting Lock Policy\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id394558\"></a>Selecting Lock Policy</h5></div></div></div><p>\n+    </p><p>\n+There is a single <code class=\"classname\">_Sp_counted_base</code> class,\n+which is a template parameterized on the enum\n+<span class=\"type\">__gnu_cxx::_Lock_policy</span>.  The entire family of classes is\n+parameterized on the lock policy, right up to\n+<code class=\"classname\">__shared_ptr</code>, <code class=\"classname\">__weak_ptr</code> and\n+<code class=\"classname\">__enable_shared_from_this</code>. The actual\n+<code class=\"classname\">std::shared_ptr</code> class inherits from\n+<code class=\"classname\">__shared_ptr</code> with the lock policy parameter\n+selected automatically based on the thread model and platform that\n+libstdc++ is configured for, so that the best available template\n+specialization will be used. This design is necessary because it would\n+not be conforming for <code class=\"classname\">shared_ptr</code> to have an\n+extra template parameter, even if it had a default value.  The\n+available policies are:\n+    </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n+       <span class=\"type\">_S_Atomic</span>\n+       </p><p>\n+Selected when GCC supports a builtin atomic compare-and-swap operation\n+on the target processor (see <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\" target=\"_top\">Atomic\n+Builtins</a>.)  The reference counts are maintained using a lock-free\n+algorithm and GCC's atomic builtins, which provide the required memory\n+synchronisation.\n+       </p></li><li class=\"listitem\"><p>\n+       <span class=\"type\">_S_Mutex</span>\n+       </p><p>\n+The _Sp_counted_base specialization for this policy contains a mutex,\n+which is locked in add_ref_lock(). This policy is used when GCC's atomic\n+builtins aren't available so explicit memory barriers are needed in places.\n+       </p></li><li class=\"listitem\"><p>\n+       <span class=\"type\">_S_Single</span>\n+       </p><p>\n+This policy uses a non-reentrant add_ref_lock() with no locking. It is\n+used when libstdc++ is built without <code class=\"literal\">--enable-threads</code>.\n+       </p></li></ol></div><p>\n+       For all three policies, reference count increments and\n+       decrements are done via the functions in\n+       <code class=\"filename\">ext/atomicity.h</code>, which detect if the program\n+       is multi-threaded.  If only one thread of execution exists in\n+       the program then less expensive non-atomic operations are used.\n+     </p></div><div class=\"section\" title=\"Dual C++0x and TR1 Implementation\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id382919\"></a>Dual C++0x and TR1 Implementation</h5></div></div></div><p>\n+The classes derived from <code class=\"classname\">_Sp_counted_base</code> (see Class Hierarchy\n+below) and <code class=\"classname\">__shared_count</code> are implemented separately for C++0x\n+and TR1, in <code class=\"filename\">bits/boost_sp_shared_count.h</code> and\n+<code class=\"filename\">tr1/boost_sp_shared_count.h</code> respectively.  All other classes\n+including <code class=\"classname\">_Sp_counted_base</code> are shared by both implementations.\n+</p><p>\n+The TR1 implementation is considered relatively stable, so is unlikely to\n+change unless bug fixes require it.  If the code that is common to both\n+C++0x and TR1 modes needs to diverge further then it might be necessary to\n+duplicate additional classes and only make changes to the C++0x versions.\n+</p></div><div class=\"section\" title=\"Related functions and classes\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id479578\"></a>Related functions and classes</h5></div></div></div><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"code\">dynamic_pointer_cast</code>, <code class=\"code\">static_pointer_cast</code>,\n+<code class=\"code\">const_pointer_cast</code></span></dt><dd><p>\n+As noted in N2351, these functions can be implemented non-intrusively using\n+the alias constructor.  However the aliasing constructor is only available\n+in C++0x mode, so in TR1 mode these casts rely on three non-standard\n+constructors in shared_ptr and __shared_ptr.\n+In C++0x mode these constructors and the related tag types are not needed.\n+    </p></dd><dt><span class=\"term\"><code class=\"code\">enable_shared_from_this</code></span></dt><dd><p>\n+The clever overload to detect a base class of type\n+<code class=\"code\">enable_shared_from_this</code> comes straight from Boost.\n+There is an extra overload for <code class=\"code\">__enable_shared_from_this</code> to\n+work smoothly with <code class=\"code\">__shared_ptr&lt;Tp, Lp&gt;</code> using any lock\n+policy.\n+    </p></dd><dt><span class=\"term\"><code class=\"code\">make_shared</code>, <code class=\"code\">allocate_shared</code></span></dt><dd><p>\n+<code class=\"code\">make_shared</code> simply forwards to <code class=\"code\">allocate_shared</code>\n+with <code class=\"code\">std::allocator</code> as the allocator.\n+Although these functions can be implemented non-intrusively using the\n+alias constructor, if they have access to the implementation then it is\n+possible to save storage and reduce the number of heap allocations. The\n+newly constructed object and the _Sp_counted_* can be allocated in a single\n+block and the standard says implementations are \"encouraged, but not required,\"\n+to do so. This implementation provides additional non-standard constructors\n+(selected with the type <code class=\"code\">_Sp_make_shared_tag</code>) which create an\n+object of type <code class=\"code\">_Sp_counted_ptr_inplace</code> to hold the new object.\n+The returned <code class=\"code\">shared_ptr&lt;A&gt;</code> needs to know the address of the\n+new <code class=\"code\">A</code> object embedded in the <code class=\"code\">_Sp_counted_ptr_inplace</code>,\n+but it has no way to access it.\n+This implementation uses a \"covert channel\" to return the address of the\n+embedded object when <code class=\"code\">get_deleter&lt;_Sp_make_shared_tag&gt;()</code>\n+is called.  Users should not try to use this.\n+As well as the extra constructors, this implementation also needs some\n+members of _Sp_counted_deleter to be protected where they could otherwise\n+be private.\n+    </p></dd></dl></div></div></div><div class=\"section\" title=\"Use\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.using\"></a>Use</h4></div></div></div><div class=\"section\" title=\"Examples\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id386678\"></a>Examples</h5></div></div></div><p>\n+      Examples of use can be found in the testsuite, under\n+      <code class=\"filename\">testsuite/tr1/2_general_utilities/shared_ptr</code>.\n+    </p></div><div class=\"section\" title=\"Unresolved Issues\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"id386695\"></a>Unresolved Issues</h5></div></div></div><p>\n+      The resolution to C++ Standard Library issue <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#674\" target=\"_top\">674</a>,\n+      \"shared_ptr interface changes for consistency with N1856\" will\n+      need to be implemented after it is accepted into the working\n+      paper. Issue <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#743\" target=\"_top\">743</a>\n+      might also require changes.\n+    </p><p>\n+      The <span class=\"type\">_S_single</span> policy uses atomics when used in MT\n+      code, because it uses the same dispatcher functions that check\n+      <code class=\"function\">__gthread_active_p()</code>. This could be\n+      addressed by providing template specialisations for some members\n+      of <code class=\"classname\">_Sp_counted_base&lt;_S_single&gt;</code>.\n+    </p><p>\n+      Unlike Boost, this implementation does not use separate classes\n+      for the pointer+deleter and pointer+deleter+allocator cases in\n+      C++0x mode, combining both into _Sp_counted_deleter and using\n+      <code class=\"classname\">allocator</code> when the user doesn't specify\n+      an allocator.  If it was found to be beneficial an additional\n+      class could easily be added.  With the current implementation,\n+      the _Sp_counted_deleter and __shared_count constructors taking a\n+      custom deleter but no allocator are technically redundant and\n+      could be removed, changing callers to always specify an\n+      allocator. If a separate pointer+deleter class was added the\n+      __shared_count constructor would be needed, so it has been kept\n+      for now.\n+    </p><p>\n+      The hack used to get the address of the managed object from\n+      <code class=\"function\">_Sp_counted_ptr_inplace::_M_get_deleter()</code>\n+      is accessible to users. This could be prevented if\n+      <code class=\"function\">get_deleter&lt;_Sp_make_shared_tag&gt;()</code>\n+      always returned NULL, since the hack only needs to work at a\n+      lower level, not in the public API. This wouldn't be difficult,\n+      but hasn't been done since there is no danger of accidental\n+      misuse: users already know they are relying on unsupported\n+      features if they refer to implementation details such as\n+      _Sp_make_shared_tag.\n+    </p><p>\n+      tr1::_Sp_deleter could be a private member of tr1::__shared_count but it\n+      would alter the ABI.\n+    </p><p>\n+      Exposing the alias constructor in TR1 mode could simplify the\n+      *_pointer_cast functions.  Constructor could be private in TR1\n+      mode, with the cast functions as friends.\n+    </p></div></div><div class=\"section\" title=\"Acknowledgments\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.ack\"></a>Acknowledgments</h4></div></div></div><p>\n+    The original authors of the Boost shared_ptr, which is really nice\n+    code to work with, Peter Dimov in particular for his help and\n+    invaluable advice on thread safety.  Phillip Jordan and Paolo\n+    Carlini for the lock policy implementation.\n+  </p></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"shared_ptr.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\"><a id=\"id411149\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2351.htm\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Improving shared_ptr for C++0x, Revision 2\n+\t</em>\n+      </a>\n+    . </span><span class=\"subtitle\">\n+      N2351\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id413900\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2456.html\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  C++ Standard Library Active Issues List\n+\t</em>\n+      </a>\n+    . </span><span class=\"subtitle\">\n+      N2456\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id470749\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2461.pdf\" target=\"_top\">\n+\t<em class=\"citetitle\">\n+\t  Working Draft, Standard for Programming Language C++\n+\t</em>\n+      </a>\n+    . </span><span class=\"subtitle\">\n+      N2461\n+    . </span></p></div><div class=\"biblioentry\"><a id=\"id470771\"></a><p><span class=\"biblioid\">\n+      <a class=\"ulink\" href=\"http://boost.org/libs/smart_ptr/shared_ptr.htm\" target=\"_top\">shared_ptr\n+\t<em class=\"citetitle\">\n+\t  Boost C++ Libraries documentation, shared_ptr\n+\t</em>\n+      </a>\n+    . </span><span class=\"subtitle\">\n+      N2461\n+    . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Pairs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Traits</td></tr></table></div></body></html>"}, {"sha": "bd663dbf7423dd6c422e799944df0ce7426c4537", "filename": "libstdc++-v3/doc/html/manual/messages.html", "status": "removed", "additions": 0, "deletions": 284, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmessages.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,284 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>messages</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      messages&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"facets.html\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\" /><link rel=\"prev\" href=\"codecvt.html\" title=\"codecvt\" /><link rel=\"next\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">messages</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"codecvt.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a015.\u00a0Facets aka Categories</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"messages\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.facet.messages\"></a>messages</h2></div></div></div><p>\n-The std::messages facet implements message retrieval functionality\n-equivalent to Java's java.text.MessageFormat .using either GNU gettext\n-or IEEE 1003.1-200 functions.\n-</p><div class=\"sect2\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.req\"></a>Requirements</h3></div></div></div><p>\n-The std::messages facet is probably the most vaguely defined facet in\n-the standard library. It's assumed that this facility was built into\n-the standard library in order to convert string literals from one\n-locale to the other. For instance, converting the \"C\" locale's\n-<code class=\"code\">const char* c = \"please\"</code> to a German-localized <code class=\"code\">\"bitte\"</code>\n-during program execution.\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-22.2.7.1 - Template class messages [lib.locale.messages]\n-</p></blockquote></div><p>\n-This class has three public member functions, which directly\n-correspond to three protected virtual member functions. \n-</p><p>\n-The public member functions are:\n-</p><p>\n-<code class=\"code\">catalog open(const string&amp;, const locale&amp;) const</code>\n-</p><p>\n-<code class=\"code\">string_type get(catalog, int, int, const string_type&amp;) const</code>\n-</p><p>\n-<code class=\"code\">void close(catalog) const</code>\n-</p><p>\n-While the virtual functions are:\n-</p><p>\n-<code class=\"code\">catalog do_open(const string&amp;, const locale&amp;) const</code>\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--1- Returns: A value that may be passed to get() to retrieve a\n-message, from the message catalog identified by the string name\n-according to an implementation-defined mapping. The result can be used\n-until it is passed to close().  Returns a value less than 0 if no such\n-catalog can be opened.\n-</em></span>\n-</p></blockquote></div><p>\n-<code class=\"code\">string_type do_get(catalog, int, int, const string_type&amp;) const</code>\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--3- Requires: A catalog cat obtained from open() and not yet closed. \n--4- Returns: A message identified by arguments set, msgid, and dfault,\n-according to an implementation-defined mapping. If no such message can\n-be found, returns dfault.\n-</em></span>\n-</p></blockquote></div><p>\n-<code class=\"code\">void do_close(catalog) const</code>\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n--5- Requires: A catalog cat obtained from open() and not yet closed. \n--6- Effects: Releases unspecified resources associated with cat. \n--7- Notes: The limit on such resources, if any, is implementation-defined. \n-</em></span>\n-</p></blockquote></div></div><div class=\"sect2\" title=\"Design\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.design\"></a>Design</h3></div></div></div><p>\n-A couple of notes on the standard. \n-</p><p>\n-First, why is <code class=\"code\">messages_base::catalog</code> specified as a typedef\n-to int? This makes sense for implementations that use\n-<code class=\"code\">catopen</code>, but not for others. Fortunately, it's not heavily\n-used and so only a minor irritant. \n-</p><p>\n-Second, by making the member functions <code class=\"code\">const</code>, it is\n-impossible to save state in them. Thus, storing away information used\n-in the 'open' member function for use in 'get' is impossible. This is\n-unfortunate.\n-</p><p>\n-The 'open' member function in particular seems to be oddly\n-designed. The signature seems quite peculiar. Why specify a <code class=\"code\">const\n-string&amp; </code> argument, for instance, instead of just <code class=\"code\">const\n-char*</code>? Or, why specify a <code class=\"code\">const locale&amp;</code> argument that is\n-to be used in the 'get' member function? How, exactly, is this locale\n-argument useful? What was the intent? It might make sense if a locale\n-argument was associated with a given default message string in the\n-'open' member function, for instance. Quite murky and unclear, on\n-reflection.\n-</p><p>\n-Lastly, it seems odd that messages, which explicitly require code\n-conversion, don't use the codecvt facet. Because the messages facet\n-has only one template parameter, it is assumed that ctype, and not\n-codecvt, is to be used to convert between character sets. \n-</p><p>\n-It is implicitly assumed that the locale for the default message\n-string in 'get' is in the \"C\" locale. Thus, all source code is assumed\n-to be written in English, so translations are always from \"en_US\" to\n-other, explicitly named locales.\n-</p></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" title=\"Models\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"messages.impl.models\"></a>Models</h4></div></div></div><p>\n-    This is a relatively simple class, on the face of it. The standard\n-    specifies very little in concrete terms, so generic\n-    implementations that are conforming yet do very little are the\n-    norm. Adding functionality that would be useful to programmers and\n-    comparable to Java's java.text.MessageFormat takes a bit of work,\n-    and is highly dependent on the capabilities of the underlying\n-    operating system.\n-  </p><p>\n-    Three different mechanisms have been provided, selectable via\n-    configure flags:\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-       generic\n-     </p><p>\n-       This model does very little, and is what is used by default.   \n-     </p></li><li class=\"listitem\"><p> \n-       gnu\n-     </p><p>\n-       The gnu model is complete and fully tested. It's based on the\n-       GNU gettext package, which is part of glibc. It uses the\n-       functions <code class=\"code\">textdomain, bindtextdomain, gettext</code> to\n-       implement full functionality. Creating message catalogs is a\n-       relatively straight-forward process and is lightly documented\n-       below, and fully documented in gettext's distributed\n-       documentation.\n-     </p></li><li class=\"listitem\"><p> \n-       ieee_1003.1-200x\n-     </p><p>\n-       This is a complete, though untested, implementation based on\n-       the IEEE standard. The functions <code class=\"code\">catopen, catgets,\n-       catclose</code> are used to retrieve locale-specific messages\n-       given the appropriate message catalogs that have been\n-       constructed for their use. Note, the script <code class=\"code\">\n-       po2msg.sed</code> that is part of the gettext distribution can\n-       convert gettext catalogs into catalogs that\n-       <code class=\"code\">catopen</code> can use.\n-   </p></li></ul></div><p>\n-A new, standards-conformant non-virtual member function signature was\n-added for 'open' so that a directory could be specified with a given\n-message catalog. This simplifies calling conventions for the gnu\n-model.\n-</p></div><div class=\"sect3\" title=\"The GNU Model\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"messages.impl.gnu\"></a>The GNU Model</h4></div></div></div><p>\n-    The messages facet, because it is retrieving and converting\n-    between characters sets, depends on the ctype and perhaps the\n-    codecvt facet in a given locale. In addition, underlying \"C\"\n-    library locale support is necessary for more than just the\n-    <code class=\"code\">LC_MESSAGES</code> mask: <code class=\"code\">LC_CTYPE</code> is also\n-    necessary. To avoid any unpleasantness, all bits of the \"C\" mask\n-    (i.e. <code class=\"code\">LC_ALL</code>) are set before retrieving messages.\n-  </p><p>\n-    Making the message catalogs can be initially tricky, but become\n-    quite simple with practice. For complete info, see the gettext\n-    documentation. Here's an idea of what is required:\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-       Make a source file with the required string literals that need\n-       to be translated. See <code class=\"code\">intl/string_literals.cc</code> for\n-       an example.\n-     </p></li><li class=\"listitem\"><p> \n-       Make initial catalog (see \"4 Making the PO Template File\" from\n-       the gettext docs).</p><p>\n-   <code class=\"code\"> xgettext --c++ --debug string_literals.cc -o libstdc++.pot </code>\n-   </p></li><li class=\"listitem\"><p>Make language and country-specific locale catalogs.</p><p>\n-   <code class=\"code\">cp libstdc++.pot fr_FR.po</code>\n-   </p><p>\n-   <code class=\"code\">cp libstdc++.pot de_DE.po</code>\n-   </p></li><li class=\"listitem\"><p>\n-       Edit localized catalogs in emacs so that strings are\n-       translated.\n-     </p><p>\n-   <code class=\"code\">emacs fr_FR.po</code>\n-   </p></li><li class=\"listitem\"><p>Make the binary mo files.</p><p>\n-   <code class=\"code\">msgfmt fr_FR.po -o fr_FR.mo</code>\n-   </p><p>\n-   <code class=\"code\">msgfmt de_DE.po -o de_DE.mo</code>\n-   </p></li><li class=\"listitem\"><p>Copy the binary files into the correct directory structure.</p><p>\n-   <code class=\"code\">cp fr_FR.mo (dir)/fr_FR/LC_MESSAGES/libstdc++.mo</code>\n-   </p><p>\n-   <code class=\"code\">cp de_DE.mo (dir)/de_DE/LC_MESSAGES/libstdc++.mo</code>\n-   </p></li><li class=\"listitem\"><p>Use the new message catalogs.</p><p>\n-   <code class=\"code\">locale loc_de(\"de_DE\");</code>\n-   </p><p>\n-   <code class=\"code\">\n-   use_facet&lt;messages&lt;char&gt; &gt;(loc_de).open(\"libstdc++\", locale(), dir);\n-   </code>\n-   </p></li></ul></div></div></div><div class=\"sect2\" title=\"Use\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.use\"></a>Use</h3></div></div></div><p>\n-   A simple example using the GNU model of message conversion.\n- </p><pre class=\"programlisting\">\n-#include &lt;iostream&gt;\n-#include &lt;locale&gt;\n-using namespace std;\n-\n-void test01()\n-{\n-  typedef messages&lt;char&gt;::catalog catalog;\n-  const char* dir =\n-  \"/mnt/egcs/build/i686-pc-linux-gnu/libstdc++/po/share/locale\";  \n-  const locale loc_de(\"de_DE\");\n-  const messages&lt;char&gt;&amp; mssg_de = use_facet&lt;messages&lt;char&gt; &gt;(loc_de); \n-\n-  catalog cat_de = mssg_de.open(\"libstdc++\", loc_de, dir);\n-  string s01 = mssg_de.get(cat_de, 0, 0, \"please\");\n-  string s02 = mssg_de.get(cat_de, 0, 0, \"thank you\");\n-  cout &lt;&lt; \"please in german:\" &lt;&lt; s01 &lt;&lt; '\\n';\n-  cout &lt;&lt; \"thank you in german:\" &lt;&lt; s02 &lt;&lt; '\\n';\n-  mssg_de.close(cat_de);\n-}\n-</pre></div><div class=\"sect2\" title=\"Future\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-    Things that are sketchy, or remain unimplemented:\n-  </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>\n-\t  _M_convert_from_char, _M_convert_to_char are in flux,\n-\t  depending on how the library ends up doing character set\n-\t  conversions. It might not be possible to do a real character\n-\t  set based conversion, due to the fact that the template\n-\t  parameter for messages is not enough to instantiate the\n-\t  codecvt facet (1 supplied, need at least 2 but would prefer\n-\t  3).\n-\t</p></li><li class=\"listitem\"><p> \n-\t  There are issues with gettext needing the global locale set\n-\t  to extract a message. This dependence on the global locale\n-\t  makes the current \"gnu\" model non MT-safe. Future versions\n-\t  of glibc, i.e. glibc 2.3.x will fix this, and the C++ library\n-\t  bits are already in place.\n-\t</p></li></ul></div></li><li class=\"listitem\"><p>  \n-    Development versions of the GNU \"C\" library, glibc 2.3 will allow\n-    a more efficient, MT implementation of std::messages, and will\n-    allow the removal of the _M_name_messages data member. If this is\n-    done, it will change the library ABI. The C++ parts to support\n-    glibc 2.3 have already been coded, but are not in use: once this\n-    version of the \"C\" library is released, the marked parts of the\n-    messages implementation can be switched over to the new \"C\"\n-    library functionality.\n-  </p></li><li class=\"listitem\"><p>\n-    At some point in the near future, std::numpunct will probably use\n-    std::messages facilities to implement truename/falsename\n-    correctly. This is currently not done, but entries in\n-    libstdc++.pot have already been made for \"true\" and \"false\" string\n-    literals, so all that remains is the std::numpunct coding and the\n-    configure/make hassles to make the installed library search its\n-    own catalog. Currently the libstdc++.mo catalog is only searched\n-    for the testsuite cases involving messages members.\n-  </p></li><li class=\"listitem\"><p> The following member functions:</p><p>\n-   <code class=\"code\">\n-        catalog \n-        open(const basic_string&lt;char&gt;&amp; __s, const locale&amp; __loc) const\n-   </code>\n-   </p><p>\n-   <code class=\"code\">\n-   catalog \n-   open(const basic_string&lt;char&gt;&amp;, const locale&amp;, const char*) const;\n-   </code>\n-   </p><p>\n-   Don't actually return a \"value less than 0 if no such catalog\n-   can be opened\" as required by the standard in the \"gnu\"\n-   model. As of this writing, it is unknown how to query to see\n-   if a specified message catalog exists using the gettext\n-   package.\n-   </p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.messages.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"The GNU C Library\"><a id=\"id612063\"></a><p><span class=\"title\"><i>\n-      The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6 Character Set Handling, and 7 Locales and Internationalization\n-    . </span></p></div><div class=\"biblioentry\" title=\"Correspondence\"><a id=\"id633252\"></a><p><span class=\"title\"><i>\n-      Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 14882:1998 Programming languages - C++\"><a id=\"id720940\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\" title=\"ISO/IEC 9899:1999 Programming languages - C\"><a id=\"id720958\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\" title=\"System Interface Definitions, Issue 6 (IEEE Std. 1003.1-200x)\"><a id=\"id626200\"></a><p><span class=\"title\"><i>\n-      System Interface Definitions, Issue 6 (IEEE Std. 1003.1-200x)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.opengroup.org/austin/\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"The C++ Programming Language, Special Edition\"><a id=\"id626228\"></a><p><span class=\"title\"><i>\n-      The C++ Programming Language, Special Edition\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Standard C++ IOStreams and Locales\"><a id=\"id706351\"></a><p><span class=\"title\"><i>\n-      Standard C++ IOStreams and Locales\n-    </i>. </span><span class=\"subtitle\">\n-      Advanced Programmer's Guide and Reference\n-    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley Longman\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"Java 2 Platform, Standard Edition, v 1.3.1 API Specification\"><a id=\"id655088\"></a><p><span class=\"title\"><i>\n-      Java 2 Platform, Standard Edition, v 1.3.1 API Specification\n-    </i>. </span><span class=\"pagenums\">java.util.Properties, java.text.MessageFormat,\n-java.util.Locale, java.util.ResourceBundle. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://java.sun.com/reference/api/index.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"GNU gettext tools, version 0.10.38, Native Language Support Library and Tools.\"><a id=\"id680363\"></a><p><span class=\"title\"><i>\n-       GNU gettext tools, version 0.10.38, Native Language Support\n-Library and Tools.\n-    </i>. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.gnu.org/software/gettext/\" target=\"_top\">\n-      </a>\n-    . </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"codecvt.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"facets.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">codecvt\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0VII.\u00a0\n-  Containers\n-  \n-</td></tr></table></div></body></html>"}, {"sha": "de57145c948f1aaad244440f449c6d57e282115a", "filename": "libstdc++-v3/doc/html/manual/numerics.html", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,30 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Part\u00a0X.\u00a0 Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01pt09ch20.html\" title=\"Chapter\u00a020.\u00a0Mutating\" /><link rel=\"next\" href=\"complex.html\" title=\"Chapter\u00a021.\u00a0Complex\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Part\u00a0X.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a012.\u00a0 Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02.html\" title=\"Part\u00a0II.\u00a0 Standard Contents\" /><link rel=\"prev\" href=\"algorithms.html\" title=\"Chapter\u00a011.\u00a0 Algorithms\" /><link rel=\"next\" href=\"generalized_numeric_operations.html\" title=\"Generalized Operations\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a012.\u00a0\n   Numerics\n   \n-</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt09ch20.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"complex.html\">Next</a></td></tr></table><hr /></div><div class=\"part\" title=\"Part\u00a0X.\u00a0 Numerics\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.numerics\"></a>Part\u00a0X.\u00a0\n+</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0\n+  Standard Contents\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"generalized_numeric_operations.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a012.\u00a0 Numerics\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"std.numerics\"></a>Chapter\u00a012.\u00a0\n   Numerics\n-  <a id=\"id622280\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"chapter\"><a href=\"complex.html\">21. Complex</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"complex.html#numerics.complex.processing\">complex Processing</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"generalized_numeric_operations.html\">22. Generalized Operations</a></span></dt><dt><span class=\"chapter\"><a href=\"numerics_and_c.html\">23. Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect1\"><a href=\"numerics_and_c.html#numerics.c.array\">Numerics vs. Arrays</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt10ch23s02.html\">C99</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt09ch20.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"complex.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a020.\u00a0Mutating\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a021.\u00a0Complex</td></tr></table></div></body></html>\n+  <a id=\"id376552\" class=\"indexterm\"></a>\n+</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"numerics.html#std.numerics.complex\">Complex</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"numerics.html#numerics.complex.processing\">complex Processing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"generalized_numeric_operations.html\">Generalized Operations</a></span></dt><dt><span class=\"sect1\"><a href=\"numerics_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"numerics_and_c.html#numerics.c.array\">Numerics vs. Arrays</a></span></dt><dt><span class=\"sect2\"><a href=\"numerics_and_c.html#numerics.c.c99\">C99</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"Complex\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.numerics.complex\"></a>Complex</h2></div></div></div><p>\n+  </p><div class=\"sect2\" title=\"complex Processing\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"numerics.complex.processing\"></a>complex Processing</h3></div></div></div><p>\n+    </p><p>Using <code class=\"code\">complex&lt;&gt;</code> becomes even more comple- er, sorry,\n+      <span class=\"emphasis\"><em>complicated</em></span>, with the not-quite-gratuitously-incompatible\n+      addition of complex types to the C language.  David Tribble has\n+      compiled a list of C++98 and C99 conflict points; his description of\n+      C's new type versus those of C++ and how to get them playing together\n+      nicely is\n+<a class=\"ulink\" href=\"http://david.tribble.com/text/cdiffs.htm#C99-complex\" target=\"_top\">here</a>.\n+   </p><p><code class=\"code\">complex&lt;&gt;</code> is intended to be instantiated with a\n+      floating-point type.  As long as you meet that and some other basic\n+      requirements, then the resulting instantiation has all of the usual\n+      math operators defined, as well as definitions of <code class=\"code\">op&lt;&lt;</code>\n+      and <code class=\"code\">op&gt;&gt;</code> that work with iostreams: <code class=\"code\">op&lt;&lt;</code>\n+      prints <code class=\"code\">(u,v)</code> and <code class=\"code\">op&gt;&gt;</code> can read <code class=\"code\">u</code>,\n+      <code class=\"code\">(u)</code>, and <code class=\"code\">(u,v)</code>.\n+   </p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"generalized_numeric_operations.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a011.\u00a0\n+  Algorithms\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Generalized Operations</td></tr></table></div></body></html>"}, {"sha": "5102af670f32c9524fd8445faac87257606a09e6", "filename": "libstdc++-v3/doc/html/manual/numerics_and_c.html", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics_and_c.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics_and_c.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fnumerics_and_c.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a023.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0 Numerics\" /><link rel=\"prev\" href=\"generalized_numeric_operations.html\" title=\"Chapter\u00a022.\u00a0Generalized Operations\" /><link rel=\"next\" href=\"bk01pt10ch23s02.html\" title=\"C99\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a023.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"generalized_numeric_operations.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Chapter\u00a012.\u00a0 Numerics\" /><link rel=\"prev\" href=\"generalized_numeric_operations.html\" title=\"Generalized Operations\" /><link rel=\"next\" href=\"io.html\" title=\"Chapter\u00a013.\u00a0 Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"generalized_numeric_operations.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a012.\u00a0\n   Numerics\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a023.\u00a0Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.c\"></a>Chapter\u00a023.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"numerics_and_c.html#numerics.c.array\">Numerics vs. Arrays</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt10ch23s02.html\">C99</a></span></dt></dl></div><div class=\"sect1\" title=\"Numerics vs. Arrays\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"numerics.c.array\"></a>Numerics vs. Arrays</h2></div></div></div><p>One of the major reasons why FORTRAN can chew through numbers so well\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"Interacting with C\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.numerics.c\"></a>Interacting with C</h2></div></div></div><div class=\"sect2\" title=\"Numerics vs. Arrays\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"numerics.c.array\"></a>Numerics vs. Arrays</h3></div></div></div><p>One of the major reasons why FORTRAN can chew through numbers so well\n       is that it is defined to be free of pointer aliasing, an assumption\n       that C89 is not allowed to make, and neither is C++98.  C99 adds a new\n       keyword, <code class=\"code\">restrict</code>, to apply to individual pointers.  The\n@@ -18,4 +18,20 @@\n       speaking this is only one of the five template classes, and they are\n       designed to be familiar to people who have worked with the BLAS\n       libraries before.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"generalized_numeric_operations.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a022.\u00a0Generalized Operations\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0C99</td></tr></table></div></body></html>\n+   </p></div><div class=\"sect2\" title=\"C99\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"numerics.c.c99\"></a>C99</h3></div></div></div><p>In addition to the other topics on this page, we'll note here some\n+      of the C99 features that appear in libstdc++.\n+   </p><p>The C99 features depend on the <code class=\"code\">--enable-c99</code> configure flag.\n+      This flag is already on by default, but it can be disabled by the\n+      user.  Also, the configuration machinery will disable it if the\n+      necessary support for C99 (e.g., header files) cannot be found.\n+   </p><p>As of GCC 3.0, C99 support includes classification functions\n+      such as <code class=\"code\">isnormal</code>, <code class=\"code\">isgreater</code>,\n+      <code class=\"code\">isnan</code>, etc.\n+      The functions used for 'long long' support such as <code class=\"code\">strtoll</code>\n+      are supported, as is the <code class=\"code\">lldiv_t</code> typedef.  Also supported\n+      are the wide character functions using 'long long', like\n+      <code class=\"code\">wcstoll</code>.\n+   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"generalized_numeric_operations.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Generalized Operations\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a013.\u00a0\n+  Input and Output\n+  \n+</td></tr></table></div></body></html>"}, {"sha": "719c987df2081a5d05cf8b30f7555c5bdde6767a", "filename": "libstdc++-v3/doc/html/manual/pairs.html", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpairs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpairs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpairs.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a010.\u00a0Pairs</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0 Utilities\" /><link rel=\"prev\" href=\"functors.html\" title=\"Chapter\u00a09.\u00a0Functors\" /><link rel=\"next\" href=\"memory.html\" title=\"Chapter\u00a011.\u00a0Memory\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a010.\u00a0Pairs</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"functors.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Pairs</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Chapter\u00a06.\u00a0 Utilities\" /><link rel=\"prev\" href=\"utilities.html\" title=\"Chapter\u00a06.\u00a0 Utilities\" /><link rel=\"next\" href=\"memory.html\" title=\"Memory\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Pairs</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a06.\u00a0\n   Utilities\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"memory.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a010.\u00a0Pairs\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.pairs\"></a>Chapter\u00a010.\u00a0Pairs</h2></div></div></div><p>The <code class=\"code\">pair&lt;T1,T2&gt;</code> is a simple and handy way to\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"memory.html\">Next</a></td></tr></table><hr /></div><div class=\"section\" title=\"Pairs\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.util.pairs\"></a>Pairs</h2></div></div></div><p>The <code class=\"code\">pair&lt;T1,T2&gt;</code> is a simple and handy way to\n       carry around a pair of objects.  One is of type T1, and another of\n       type T2; they may be the same type, but you don't get anything\n       extra if they are.  The two members can be accessed directly, as\n@@ -31,12 +31,15 @@\n       is defined as evaluating to:\n    </p><pre class=\"programlisting\">\n     x.first  &lt;  y.first  ||\n-        ( !(y.first  &lt;  x.first)  &amp;&amp;  x.second  &lt;  y.second )\n+\t( !(y.first  &lt;  x.first)  &amp;&amp;  x.second  &lt;  y.second )\n    </pre><p>The other operators are not defined using the <code class=\"code\">rel_ops</code>\n       functions above, but their semantics are the same.\n    </p><p>Finally, there is a template function called <code class=\"function\">make_pair</code>\n       that takes two references-to-const objects and returns an\n       instance of a pair instantiated on their respective types:\n    </p><pre class=\"programlisting\">\n     pair&lt;int,MyClass&gt; p = make_pair(4,myobject);\n-   </pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"functors.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"memory.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a09.\u00a0Functors\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a011.\u00a0Memory</td></tr></table></div></body></html>\n+   </pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"memory.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a06.\u00a0\n+  Utilities\n+  \n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Memory</td></tr></table></div></body></html>"}, {"sha": "b8993b5c9d2aa2a37a9e8576e2ee5bec683374f2", "filename": "libstdc++-v3/doc/html/manual/parallel_mode.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a031.\u00a0Parallel Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch30s04.html\" title=\"Design\" /><link rel=\"next\" href=\"bk01pt12ch31s02.html\" title=\"Semantics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a018.\u00a0Parallel Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt03ch17s04.html\" title=\"Design\" /><link rel=\"next\" href=\"bk01pt03ch18s02.html\" title=\"Semantics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a031.\u00a0Parallel Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.parallel_mode\"></a>Chapter\u00a031.\u00a0Parallel Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s03.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch31s04.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch31s05.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></div><p> The libstdc++ parallel mode is an experimental parallel\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a018.\u00a0Parallel Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.parallel_mode\"></a>Chapter\u00a018.\u00a0Parallel Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s02.html\">Semantics</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s03.html\">Using</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s03.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s04.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch18s04.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch18s05.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></div><p> The libstdc++ parallel mode is an experimental parallel\n implementation of many algorithms the C++ Standard Library.\n </p><p>\n Several of the standard algorithms, for instance\n@@ -13,12 +13,12 @@\n specific compiler flag.\n </p><div class=\"sect1\" title=\"Intro\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.intro\"></a>Intro</h2></div></div></div><p>The following library components in the include\n <code class=\"filename\">numeric</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"function\">std::accumulate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::adjacent_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::inner_product</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sum</code></p></li></ul></div><p>The following library components in the include\n-<code class=\"filename\">algorithm</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"function\">std::adjacent_find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::equal</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_first_of</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::for_each</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::lexicographical_compare</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::mismatch</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::transform</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::max_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::merge</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::min_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::nth_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partition</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::random_shuffle</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_union</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_intersection</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_symmetric_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::stable_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::unique_copy</code></p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"parallel_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\" title=\"Parallelization of Bulk Operations for STL Dictionaries\"><a id=\"id654235\"></a><p><span class=\"title\"><i>\n+<code class=\"filename\">algorithm</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><code class=\"function\">std::adjacent_find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::equal</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_first_of</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::for_each</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::lexicographical_compare</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::mismatch</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::transform</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::max_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::merge</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::min_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::nth_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partition</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::random_shuffle</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_union</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_intersection</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_symmetric_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::stable_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::unique_copy</code></p></li></ul></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"parallel_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\" title=\"Parallelization of Bulk Operations for STL Dictionaries\"><a id=\"id492586\"></a><p><span class=\"title\"><i>\n       Parallelization of Bulk Operations for STL Dictionaries\n     </i>. </span><span class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span>. </span><span class=\"author\"><span class=\"firstname\">Leonor</span> <span class=\"surname\">Frias</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 . </span><span class=\"publisher\"><span class=\"publishername\">\n \tWorkshop on Highly Parallel Processing on a Chip (HPPC) 2007. (LNCS)\n-      . </span></span></p></div><div class=\"biblioentry\" title=\"The Multi-Core Standard Template Library\"><a id=\"id673060\"></a><p><span class=\"title\"><i>\n+      . </span></span></p></div><div class=\"biblioentry\" title=\"The Multi-Core Standard Template Library\"><a id=\"id492633\"></a><p><span class=\"title\"><i>\n       The Multi-Core Standard Template Library\n     </i>. </span><span class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span>. </span><span class=\"author\"><span class=\"firstname\">Peter</span> <span class=\"surname\">Sanders</span>. </span><span class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Putze</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 . </span><span class=\"publisher\"><span class=\"publishername\">\n \t Euro-Par 2007: Parallel Processing. (LNCS 4641)\n-      . </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch30s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Semantics</td></tr></table></div></body></html>\n+      . </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch17s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch18s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Semantics</td></tr></table></div></body></html>"}, {"sha": "8fc828ef1e38b2f7f9291c252ab3290f612fd93d", "filename": "libstdc++-v3/doc/html/manual/profile_mode.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fprofile_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fprofile_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fprofile_mode.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -1,23 +1,23 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a032.\u00a0Profile Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch31s05.html\" title=\"Testing\" /><link rel=\"next\" href=\"bk01pt12ch32s02.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a032.\u00a0Profile Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a019.\u00a0Profile Mode</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      profile&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bk01pt03ch18s05.html\" title=\"Testing\" /><link rel=\"next\" href=\"bk01pt03ch19s02.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a019.\u00a0Profile Mode</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a032.\u00a0Profile Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.profile_mode\"></a>Chapter\u00a032.\u00a0Profile Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s02.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s02.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s03.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s04.html\">Empirical Cost Model</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s05.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s05.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s06.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s06.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s06.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch32s07.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32s07.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></div><div class=\"sect1\" title=\"Intro\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.intro\"></a>Intro</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a019.\u00a0Profile Mode\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.profile_mode\"></a>Chapter\u00a019.\u00a0Profile Mode</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"sect2\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s02.html\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s02.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s03.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s04.html\">Empirical Cost Model</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s05.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s05.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s06.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s06.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s06.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt03ch19s07.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt03ch19s07.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></div><div class=\"sect1\" title=\"Intro\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.profile_mode.intro\"></a>Intro</h2></div></div></div><p>\n   <span class=\"emphasis\"><em>Goal: </em></span>Give performance improvement advice based on\n   recognition of suboptimal usage patterns of the standard library.\n   </p><p>\n   <span class=\"emphasis\"><em>Method: </em></span>Wrap the standard library code.  Insert\n   calls to an instrumentation library to record the internal state of\n   various components at interesting entry/exit points to/from the standard\n   library.  Process trace, recognize suboptimal patterns, give advice.\n-  For details, see \n+  For details, see\n   <a class=\"ulink\" href=\"http://dx.doi.org/10.1109/CGO.2009.36\" target=\"_top\">paper presented at\n    CGO 2009</a>.\n   </p><p>\n   <span class=\"emphasis\"><em>Strengths: </em></span>\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>\n-  Unintrusive solution.  The application code does not require any \n+  Unintrusive solution.  The application code does not require any\n   modification.\n   </p></li><li class=\"listitem\"><p> The advice is call context sensitive, thus capable of\n   identifying precisely interesting dynamic performance behavior.\n@@ -75,7 +75,7 @@\n   The warning message.  For some warnings, this is static text, e.g.,\n   \"change vector to list\".  For other warnings, such as the one above,\n   the message contains numeric advice, e.g., the suggested initial size\n-  of the hashtable.\n+  of the vector.\n   </p></li></ul></div><p>\n   </p><p>Three files are generated.  <code class=\"code\">libstdcxx-profile.txt</code>\n    contains human readable advice.  <code class=\"code\">libstdcxx-profile.raw</code>\n@@ -108,7 +108,7 @@\n    path for the output files.\n    </p></li><li class=\"listitem\"><p>_GLIBCXX_PROFILE_MAX_WARN_COUNT: set it to the maximum\n    number of warnings desired.  The default value is 10.</p></li><li class=\"listitem\"><p>\n-   <code class=\"code\">_GLIBCXX_PROFILE_MAX_STACK_DEPTH</code>: if set to 0, \n+   <code class=\"code\">_GLIBCXX_PROFILE_MAX_STACK_DEPTH</code>: if set to 0,\n    the advice will\n    be collected and reported for the program as a whole, and not for each\n    call context.\n@@ -124,10 +124,10 @@\n    live containers are deleted.  The default is 128 MB.\n    </p></li><li class=\"listitem\"><p>\n    <code class=\"code\">_GLIBCXX_PROFILE_NO_THREADS</code>:\n-   Make the library not use threads.  If thread local storage (TLS) is not \n+   Make the library not use threads.  If thread local storage (TLS) is not\n    available, you will get a preprocessor error asking you to set\n    -D_GLIBCXX_PROFILE_NO_THREADS if your program is single-threaded.\n-   Multithreded execution without TLS is not supported.\n+   Multithreaded execution without TLS is not supported.\n    (Environment variable not supported.)\n    </p></li><li class=\"listitem\"><p>\n    <code class=\"code\">_GLIBCXX_HAVE_EXECINFO_H</code>:\n@@ -138,9 +138,9 @@\n    call context.\n    (Environment variable not supported.)\n    </p></li></ul></div><p>\n-  </p></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"profile_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\" title=\"Perflint: A Context Sensitive Performance Advisor for C++ Programs\"><a id=\"id631630\"></a><p><span class=\"title\"><i>\n+  </p></div></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"profile_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\" title=\"Perflint: A Context Sensitive Performance Advisor for C++ Programs\"><a id=\"id508157\"></a><p><span class=\"title\"><i>\n       Perflint: A Context Sensitive Performance Advisor for C++ Programs\n     </i>. </span><span class=\"author\"><span class=\"firstname\">Lixia</span> <span class=\"surname\">Liu</span>. </span><span class=\"author\"><span class=\"firstname\">Silvius</span> <span class=\"surname\">Rus</span>. </span><span class=\"copyright\">Copyright \u00a9 2009 . </span><span class=\"publisher\"><span class=\"publishername\">\n \tProceedings of the 2009 International Symposium on Code Generation\n-        and Optimization\n-      . </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch32s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>\n+\tand Optimization\n+      . </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt03ch18s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch19s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>"}, {"sha": "fd3ff148e54c72d89bd5fdeb4d46e5d81d99da82", "filename": "libstdc++-v3/doc/html/manual/sequences.html", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsequences.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsequences.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsequences.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,43 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a016.\u00a0Sequences</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\" /><link rel=\"prev\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0 Containers\" /><link rel=\"next\" href=\"vector.html\" title=\"vector\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a016.\u00a0Sequences</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0\n-  Containers\n-  \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"vector.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" title=\"Chapter\u00a016.\u00a0Sequences\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.sequences\"></a>Chapter\u00a016.\u00a0Sequences</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"sequences.html#containers.sequences.list\">list</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"sequences.html#sequences.list.size\">list::size() is O(n)</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"vector.html\">vector</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"vector.html#sequences.vector.management\">Space Overhead Management</a></span></dt></dl></dd></dl></div><div class=\"sect1\" title=\"list\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.sequences.list\"></a>list</h2></div></div></div><div class=\"sect2\" title=\"list::size() is O(n)\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"sequences.list.size\"></a>list::size() is O(n)</h3></div></div></div><p>\n-     Yes it is, and that's okay.  This is a decision that we preserved\n-     when we imported SGI's STL implementation.  The following is\n-     quoted from <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/FAQ.html\" target=\"_top\">their FAQ</a>:\n-   </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-       The size() member function, for list and slist, takes time\n-       proportional to the number of elements in the list.  This was a\n-       deliberate tradeoff.  The only way to get a constant-time\n-       size() for linked lists would be to maintain an extra member\n-       variable containing the list's size.  This would require taking\n-       extra time to update that variable (it would make splice() a\n-       linear time operation, for example), and it would also make the\n-       list larger.  Many list algorithms don't require that extra\n-       word (algorithms that do require it might do better with\n-       vectors than with lists), and, when it is necessary to maintain\n-       an explicit size count, it's something that users can do\n-       themselves.\n-     </p><p>\n-       This choice is permitted by the C++ standard. The standard says\n-       that size() <span class=\"quote\">\u201c<span class=\"quote\">should</span>\u201d</span> be constant time, and\n-       <span class=\"quote\">\u201c<span class=\"quote\">should</span>\u201d</span> does not mean the same thing as\n-       <span class=\"quote\">\u201c<span class=\"quote\">shall</span>\u201d</span>.  This is the officially recommended ISO\n-       wording for saying that an implementation is supposed to do\n-       something unless there is a good reason not to.\n-      </p><p>\n-\tOne implication of linear time size(): you should never write\n-      </p><pre class=\"programlisting\">\n-         if (L.size() == 0)\n-             ...\n-\t </pre><p>\n-         Instead, you should write\n-\t </p><pre class=\"programlisting\">\n-         if (L.empty())\n-             ...\n-\t </pre></blockquote></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"vector.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0VII.\u00a0\n-  Containers\n-  \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0vector</td></tr></table></div></body></html>"}, {"sha": "23de8cc52198df923d712199eca7693fd237b01b", "filename": "libstdc++-v3/doc/html/manual/setup.html", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsetup.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsetup.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsetup.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -23,7 +23,7 @@\n   Because libstdc++ is part of GCC, the primary source for\n    installation instructions is\n    <a class=\"ulink\" href=\"http://gcc.gnu.org/install/\" target=\"_top\">the GCC install page</a>.\n-   In particular, list of prerequisite software needed to build the library \n+   In particular, list of prerequisite software needed to build the library\n    <a class=\"ulink\" href=\"http://gcc.gnu.org/install/prerequisites.html\" target=\"_top\">\n    starts with those requirements.</a> The same pages also list\n    the tools you will need if you wish to modify the source.\n@@ -40,7 +40,11 @@\n       The configure process will automatically detect and use these\n       features if the underlying support is present.\n    </p><p>\n-   Finally, a few system-specific requirements: \n+     To generate the API documentation from the sources you will need\n+     Doxygen, see <a class=\"link\" href=\"documentation_style.html\" title=\"Documentation Style\">Documentation\n+     Style</a> in the appendix for full details.\n+   </p><p>\n+   Finally, a few system-specific requirements:\n    </p><div class=\"variablelist\"><dl><dt><span class=\"term\">linux</span></dt><dd><p>\n \t  If gcc 3.1.0 or later on is being used on linux, an attempt\n \t  will be made to use \"C\" library functionality necessary for\n@@ -90,12 +94,12 @@\n       </p><p>\n \tTo install support for locales, do only one of the following:\n       </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>install all locales</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>with RedHat Linux:\n-\t      </p><p> <code class=\"code\"> export LC_ALL=C </code> \n-\t      </p><p> <code class=\"code\"> rpm -e glibc-common --nodeps </code> \n-\t      </p><p> \n+\t      </p><p> <code class=\"code\"> export LC_ALL=C </code>\n+\t      </p><p> <code class=\"code\"> rpm -e glibc-common --nodeps </code>\n+\t      </p><p>\n \t\t<code class=\"code\"> rpm -i --define \"_install_langs all\"\n-\t\t glibc-common-2.2.5-34.i386.rpm \n-\t\t</code> \n+\t\t glibc-common-2.2.5-34.i386.rpm\n+\t\t</code>\n \t      </p></li><li class=\"listitem\"><p>\n \t       Instructions for other operating systems solicited.\n \t     </p></li></ul></div></li><li class=\"listitem\"><p>install just the necessary locales</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"circle\"><li class=\"listitem\"><p>with Debian Linux:</p><p> Add the above list, as shown, to the file"}, {"sha": "59666b93b16a14bdb7ee02bf6288a0bc8b3cd111", "filename": "libstdc++-v3/doc/html/manual/shared_ptr.html", "status": "removed", "additions": 0, "deletions": 304, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fshared_ptr.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fshared_ptr.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fshared_ptr.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79", "patch": "@@ -1,304 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>shared_ptr</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.75.2\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      shared_ptr&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"memory.html\" title=\"Chapter\u00a011.\u00a0Memory\" /><link rel=\"prev\" href=\"auto_ptr.html\" title=\"auto_ptr\" /><link rel=\"next\" href=\"traits.html\" title=\"Chapter\u00a012.\u00a0Traits\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">shared_ptr</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"auto_ptr.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a011.\u00a0Memory</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" title=\"shared_ptr\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.util.memory.shared_ptr\"></a>shared_ptr</h2></div></div></div><p>\n-The shared_ptr class template stores a pointer, usually obtained via new,\n-and implements shared ownership semantics.\n-</p><div class=\"sect2\" title=\"Requirements\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.req\"></a>Requirements</h3></div></div></div><p>\n-  </p><p>\n-    The standard deliberately doesn't require a reference-counted\n-    implementation, allowing other techniques such as a\n-    circular-linked-list.\n-  </p><p>\n-    At the time of writing the C++0x working paper doesn't mention how\n-    threads affect shared_ptr, but it is likely to follow the existing\n-    practice set by <code class=\"classname\">boost::shared_ptr</code>.  The\n-    shared_ptr in libstdc++ is derived from Boost's, so the same rules\n-    apply.\n-  </p><p> \n-  </p></div><div class=\"sect2\" title=\"Design Issues\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.design_issues\"></a>Design Issues</h3></div></div></div><p>\n-The <code class=\"classname\">shared_ptr</code> code is kindly donated to GCC by the Boost\n-project and the original authors of the code. The basic design and\n-algorithms are from Boost, the notes below describe details specific to\n-the GCC implementation. Names have been uglified in this implementation,\n-but the design should be recognisable to anyone familiar with the Boost\n-1.32 shared_ptr.\n-  </p><p>\n-The basic design is an abstract base class, <code class=\"code\">_Sp_counted_base</code> that\n-does the reference-counting and calls virtual functions when the count\n-drops to zero.\n-Derived classes override those functions to destroy resources in a context\n-where the correct dynamic type is known. This is an application of the\n-technique known as type erasure.\n-  </p></div><div class=\"sect2\" title=\"Implementation\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" title=\"Class Hierarchy\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id628890\"></a>Class Hierarchy</h4></div></div></div><p>\n-A <code class=\"classname\">shared_ptr&lt;T&gt;</code> contains a pointer of\n-type <span class=\"type\">T*</span> and an object of type\n-<code class=\"classname\">__shared_count</code>. The shared_count contains a\n-pointer of type <span class=\"type\">_Sp_counted_base*</span> which points to the\n-object that maintains the reference-counts and destroys the managed\n-resource.\n-    </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_base&lt;Lp&gt;</code></span></dt><dd><p>\n-The base of the hierarchy is parameterized on the lock policy alone.\n-_Sp_counted_base doesn't depend on the type of pointer being managed,\n-it only maintains the reference counts and calls virtual functions when\n-the counts drop to zero. The managed object is destroyed when the last\n-strong reference is dropped, but the _Sp_counted_base itself must exist\n-until the last weak reference is dropped.\n-    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_base_impl&lt;Ptr, Deleter, Lp&gt;</code></span></dt><dd><p>\n-Inherits from _Sp_counted_base and stores a pointer of type <span class=\"type\">Ptr</span>\n-and a deleter of type <code class=\"code\">Deleter</code>.  <code class=\"code\">_Sp_deleter</code> is\n-used when the user doesn't supply a custom deleter. Unlike Boost's, this\n-default deleter is not \"checked\" because GCC already issues a warning if\n-<code class=\"function\">delete</code> is used with an incomplete type.\n-This is the only derived type used by <code class=\"classname\">shared_ptr&lt;Ptr&gt;</code>\n-and it is never used by <code class=\"classname\">shared_ptr</code>, which uses one of\n-the following types, depending on how the shared_ptr is constructed.\n-    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_ptr&lt;Ptr, Lp&gt;</code></span></dt><dd><p>\n-Inherits from _Sp_counted_base and stores a pointer of type <span class=\"type\">Ptr</span>,\n-which is passed to <code class=\"function\">delete</code> when the last reference is dropped.\n-This is the simplest form and is used when there is no custom deleter or\n-allocator.\n-    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_deleter&lt;Ptr, Deleter, Alloc&gt;</code></span></dt><dd><p>\n-Inherits from _Sp_counted_ptr and adds support for custom deleter and\n-allocator. Empty Base Optimization is used for the allocator. This class\n-is used even when the user only provides a custom deleter, in which case\n-<code class=\"classname\">allocator</code> is used as the allocator.\n-    </p></dd><dt><span class=\"term\"><code class=\"classname\">_Sp_counted_ptr_inplace&lt;Tp, Alloc, Lp&gt;</code></span></dt><dd><p>\n-Used by <code class=\"code\">allocate_shared</code> and <code class=\"code\">make_shared</code>.\n-Contains aligned storage to hold an object of type <span class=\"type\">Tp</span>,\n-which is constructed in-place with placement <code class=\"function\">new</code>.\n-Has a variadic template constructor allowing any number of arguments to\n-be forwarded to <span class=\"type\">Tp</span>'s constructor.\n-Unlike the other <code class=\"classname\">_Sp_counted_*</code> classes, this one is parameterized on the\n-type of object, not the type of pointer; this is purely a convenience\n-that simplifies the implementation slightly.\n-    </p></dd></dl></div></div><div class=\"sect3\" title=\"Thread Safety\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id612958\"></a>Thread Safety</h4></div></div></div><p>\n-The interface of <code class=\"classname\">tr1::shared_ptr</code> was extended for C++0x\n-with support for rvalue-references and the other features from\n-N2351. As with other libstdc++ headers shared by TR1 and C++0x,\n-boost_shared_ptr.h uses conditional compilation, based on the macros\n-<code class=\"constant\">_GLIBCXX_INCLUDE_AS_CXX0X</code> and\n-<code class=\"constant\">_GLIBCXX_INCLUDE_AS_TR1</code>, to enable and disable\n-features.\n-    </p><p>\n-C++0x-only features are: rvalue-ref/move support, allocator support,\n-aliasing constructor, make_shared &amp; allocate_shared. Additionally,\n-the constructors taking <code class=\"classname\">auto_ptr</code> parameters are\n-deprecated in C++0x mode.\n-    </p><p>\n-The \n-<a class=\"ulink\" href=\"http://boost.org/libs/smart_ptr/shared_ptr.htm#ThreadSafety\" target=\"_top\">Thread\n-Safety</a> section of the Boost shared_ptr documentation says \"shared_ptr\n-objects offer the same level of thread safety as built-in types.\"\n-The implementation must ensure that concurrent updates to separate shared_ptr\n-instances are correct even when those instances share a reference count e.g.\n-</p><pre class=\"programlisting\">\n-shared_ptr&lt;A&gt; a(new A);\n-shared_ptr&lt;A&gt; b(a);\n-\n-// Thread 1     // Thread 2\n-   a.reset();      b.reset();\n-</pre><p>\n-The dynamically-allocated object must be destroyed by exactly one of the\n-threads. Weak references make things even more interesting.\n-The shared state used to implement shared_ptr must be transparent to the\n-user and invariants must be preserved at all times.\n-The key pieces of shared state are the strong and weak reference counts.\n-Updates to these need to be atomic and visible to all threads to ensure\n-correct cleanup of the managed resource (which is, after all, shared_ptr's\n-job!)\n-On multi-processor systems memory synchronisation may be needed so that\n-reference-count updates and the destruction of the managed resource are\n-race-free.\n-</p><p>\n-The function <code class=\"function\">_Sp_counted_base::_M_add_ref_lock()</code>, called when\n-obtaining a shared_ptr from a weak_ptr, has to test if the managed\n-resource still exists and either increment the reference count or throw\n-<code class=\"classname\">bad_weak_ptr</code>.\n-In a multi-threaded program there is a potential race condition if the last\n-reference is dropped (and the managed resource destroyed) between testing\n-the reference count and incrementing it, which could result in a shared_ptr\n-pointing to invalid memory.\n-</p><p>\n-The Boost shared_ptr (as used in GCC) features a clever lock-free\n-algorithm to avoid the race condition, but this relies on the\n-processor supporting an atomic <span class=\"emphasis\"><em>Compare-And-Swap</em></span>\n-instruction. For other platforms there are fall-backs using mutex\n-locks.  Boost (as of version 1.35) includes several different\n-implementations and the preprocessor selects one based on the\n-compiler, standard library, platform etc. For the version of\n-shared_ptr in libstdc++ the compiler and library are fixed, which\n-makes things much simpler: we have an atomic CAS or we don't, see Lock\n-Policy below for details.\n-</p></div><div class=\"sect3\" title=\"Selecting Lock Policy\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id637767\"></a>Selecting Lock Policy</h4></div></div></div><p> \n-    </p><p>\n-There is a single <code class=\"classname\">_Sp_counted_base</code> class,\n-which is a template parameterized on the enum\n-<span class=\"type\">__gnu_cxx::_Lock_policy</span>.  The entire family of classes is\n-parameterized on the lock policy, right up to\n-<code class=\"classname\">__shared_ptr</code>, <code class=\"classname\">__weak_ptr</code> and\n-<code class=\"classname\">__enable_shared_from_this</code>. The actual\n-<code class=\"classname\">std::shared_ptr</code> class inherits from\n-<code class=\"classname\">__shared_ptr</code> with the lock policy parameter\n-selected automatically based on the thread model and platform that\n-libstdc++ is configured for, so that the best available template\n-specialization will be used. This design is necessary because it would\n-not be conforming for <code class=\"classname\">shared_ptr</code> to have an\n-extra template parameter, even if it had a default value.  The\n-available policies are:\n-    </p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n-       <span class=\"type\">_S_Atomic</span>\n-       </p><p>\n-Selected when GCC supports a builtin atomic compare-and-swap operation\n-on the target processor (see <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\" target=\"_top\">Atomic\n-Builtins</a>.)  The reference counts are maintained using a lock-free\n-algorithm and GCC's atomic builtins, which provide the required memory\n-synchronisation.\n-       </p></li><li class=\"listitem\"><p>\n-       <span class=\"type\">_S_Mutex</span>\n-       </p><p>\n-The _Sp_counted_base specialization for this policy contains a mutex,\n-which is locked in add_ref_lock(). This policy is used when GCC's atomic\n-builtins aren't available so explicit memory barriers are needed in places.\n-       </p></li><li class=\"listitem\"><p>\n-       <span class=\"type\">_S_Single</span>\n-       </p><p>\n-This policy uses a non-reentrant add_ref_lock() with no locking. It is\n-used when libstdc++ is built without <code class=\"literal\">--enable-threads</code>.\n-       </p></li></ol></div><p>\n-       For all three policies, reference count increments and\n-       decrements are done via the functions in\n-       <code class=\"filename\">ext/atomicity.h</code>, which detect if the program\n-       is multi-threaded.  If only one thread of execution exists in\n-       the program then less expensive non-atomic operations are used.\n-     </p></div><div class=\"sect3\" title=\"Dual C++0x and TR1 Implementation\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id618991\"></a>Dual C++0x and TR1 Implementation</h4></div></div></div><p>\n-The classes derived from <code class=\"classname\">_Sp_counted_base</code> (see Class Hierarchy\n-below) and <code class=\"classname\">__shared_count</code> are implemented separately for C++0x\n-and TR1, in <code class=\"filename\">bits/boost_sp_shared_count.h</code> and\n-<code class=\"filename\">tr1/boost_sp_shared_count.h</code> respectively.  All other classes\n-including <code class=\"classname\">_Sp_counted_base</code> are shared by both implementations.\n-</p><p>\n-The TR1 implementation is considered relatively stable, so is unlikely to\n-change unless bug fixes require it.  If the code that is common to both\n-C++0x and TR1 modes needs to diverge further then it might be necessary to \n-duplicate additional classes and only make changes to the C++0x versions.\n-</p></div><div class=\"sect3\" title=\"Related functions and classes\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id589355\"></a>Related functions and classes</h4></div></div></div><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"code\">dynamic_pointer_cast</code>, <code class=\"code\">static_pointer_cast</code>,\n-<code class=\"code\">const_pointer_cast</code></span></dt><dd><p>\n-As noted in N2351, these functions can be implemented non-intrusively using\n-the alias constructor.  However the aliasing constructor is only available\n-in C++0x mode, so in TR1 mode these casts rely on three non-standard\n-constructors in shared_ptr and __shared_ptr.\n-In C++0x mode these constructors and the related tag types are not needed.\n-    </p></dd><dt><span class=\"term\"><code class=\"code\">enable_shared_from_this</code></span></dt><dd><p>\n-The clever overload to detect a base class of type\n-<code class=\"code\">enable_shared_from_this</code> comes straight from Boost.\n-There is an extra overload for <code class=\"code\">__enable_shared_from_this</code> to \n-work smoothly with <code class=\"code\">__shared_ptr&lt;Tp, Lp&gt;</code> using any lock\n-policy.\n-    </p></dd><dt><span class=\"term\"><code class=\"code\">make_shared</code>, <code class=\"code\">allocate_shared</code></span></dt><dd><p>\n-<code class=\"code\">make_shared</code> simply forwards to <code class=\"code\">allocate_shared</code>\n-with <code class=\"code\">std::allocator</code> as the allocator.\n-Although these functions can be implemented non-intrusively using the\n-alias constructor, if they have access to the implementation then it is\n-possible to save storage and reduce the number of heap allocations. The\n-newly constructed object and the _Sp_counted_* can be allocated in a single\n-block and the standard says implementations are \"encouraged, but not required,\"\n-to do so. This implementation provides additional non-standard constructors\n-(selected with the type <code class=\"code\">_Sp_make_shared_tag</code>) which create an\n-object of type <code class=\"code\">_Sp_counted_ptr_inplace</code> to hold the new object.\n-The returned <code class=\"code\">shared_ptr&lt;A&gt;</code> needs to know the address of the\n-new <code class=\"code\">A</code> object embedded in the <code class=\"code\">_Sp_counted_ptr_inplace</code>,\n-but it has no way to access it.\n-This implementation uses a \"covert channel\" to return the address of the\n-embedded object when <code class=\"code\">get_deleter&lt;_Sp_make_shared_tag&gt;()</code>\n-is called.  Users should not try to use this.\n-As well as the extra constructors, this implementation also needs some\n-members of _Sp_counted_deleter to be protected where they could otherwise\n-be private.\n-    </p></dd></dl></div></div></div><div class=\"sect2\" title=\"Use\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.using\"></a>Use</h3></div></div></div><div class=\"sect3\" title=\"Examples\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id619880\"></a>Examples</h4></div></div></div><p> \n-      Examples of use can be found in the testsuite, under\n-      <code class=\"filename\">testsuite/tr1/2_general_utilities/shared_ptr</code>.\n-    </p></div><div class=\"sect3\" title=\"Unresolved Issues\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id653780\"></a>Unresolved Issues</h4></div></div></div><p> \n-      The resolution to C++ Standard Library issue <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#674\" target=\"_top\">674</a>,\n-      \"shared_ptr interface changes for consistency with N1856\" will\n-      need to be implemented after it is accepted into the working\n-      paper. Issue <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#743\" target=\"_top\">743</a>\n-      might also require changes.\n-    </p><p>\n-      The <span class=\"type\">_S_single</span> policy uses atomics when used in MT\n-      code, because it uses the same dispatcher functions that check\n-      <code class=\"function\">__gthread_active_p()</code>. This could be\n-      addressed by providing template specialisations for some members\n-      of <code class=\"classname\">_Sp_counted_base&lt;_S_single&gt;</code>.\n-    </p><p>\n-      Unlike Boost, this implementation does not use separate classes\n-      for the pointer+deleter and pointer+deleter+allocator cases in\n-      C++0x mode, combining both into _Sp_counted_deleter and using\n-      <code class=\"classname\">allocator</code> when the user doesn't specify\n-      an allocator.  If it was found to be beneficial an additional\n-      class could easily be added.  With the current implementation,\n-      the _Sp_counted_deleter and __shared_count constructors taking a\n-      custom deleter but no allocator are technically redundant and\n-      could be removed, changing callers to always specify an\n-      allocator. If a separate pointer+deleter class was added the\n-      __shared_count constructor would be needed, so it has been kept\n-      for now.\n-    </p><p>\n-      The hack used to get the address of the managed object from\n-      <code class=\"function\">_Sp_counted_ptr_inplace::_M_get_deleter()</code>\n-      is accessible to users. This could be prevented if\n-      <code class=\"function\">get_deleter&lt;_Sp_make_shared_tag&gt;()</code>\n-      always returned NULL, since the hack only needs to work at a\n-      lower level, not in the public API. This wouldn't be difficult,\n-      but hasn't been done since there is no danger of accidental\n-      misuse: users already know they are relying on unsupported\n-      features if they refer to implementation details such as\n-      _Sp_make_shared_tag.\n-    </p><p>\n-      tr1::_Sp_deleter could be a private member of tr1::__shared_count but it\n-      would alter the ABI.\n-    </p><p>\n-      Exposing the alias constructor in TR1 mode could simplify the\n-      *_pointer_cast functions.  Constructor could be private in TR1\n-      mode, with the cast functions as friends.\n-    </p></div></div><div class=\"sect2\" title=\"Acknowledgments\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.ack\"></a>Acknowledgments</h3></div></div></div><p> \n-    The original authors of the Boost shared_ptr, which is really nice\n-    code to work with, Peter Dimov in particular for his help and\n-    invaluable advice on thread safety.  Phillip Jordan and Paolo\n-    Carlini for the lock policy implementation.\n-  </p></div><div class=\"bibliography\" title=\"Bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"shared_ptr.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\" title=\"Improving shared_ptr for C++0x, Revision 2\"><a id=\"id678655\"></a><p>[<abbr class=\"abbrev\">\n-      n2351\n-    </abbr>] <span class=\"title\"><i>\n-      Improving shared_ptr for C++0x, Revision 2\n-    </i>. </span><span class=\"subtitle\">\n-      N2351\n-    . </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2351.htm\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"C++ Standard Library Active Issues List (Revision R52)\"><a id=\"id678679\"></a><p>[<abbr class=\"abbrev\">\n-      n2456\n-    </abbr>] <span class=\"title\"><i>\n-      C++ Standard Library Active Issues List (Revision R52)\n-    </i>. </span><span class=\"subtitle\">\n-      N2456\n-    . </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2456.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Working Draft, Standard for Programming Language C++\"><a id=\"id661793\"></a><p>[<abbr class=\"abbrev\">\n-      n2461\n-    </abbr>] <span class=\"title\"><i>\n-      Working Draft, Standard for Programming Language C++\n-    </i>. </span><span class=\"subtitle\">\n-      N2461\n-    . </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2461.pdf\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\" title=\"Boost C++ Libraries documentation - shared_ptr class template\"><a id=\"id612415\"></a><p>[<abbr class=\"abbrev\">\n-      boostshared_ptr\n-    </abbr>] <span class=\"title\"><i>\n-      Boost C++ Libraries documentation - shared_ptr class template\n-    </i>. </span><span class=\"subtitle\">\n-      N2461\n-    . </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://boost.org/libs/smart_ptr/shared_ptr.htm\" target=\"_top\">shared_ptr\n-      </a>\n-    . </span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"auto_ptr.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"memory.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">auto_ptr\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a012.\u00a0Traits</td></tr></table></div></body></html>"}, {"sha": "dc4e49067ff8641fb9317901ef88d992870c964f", "filename": "libstdc++-v3/doc/html/manual/source_code_style.html", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_code_style.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_code_style.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_code_style.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -60,7 +60,7 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0these\u00a0names\u00a0as\u00a0operators\u00a0have\u00a0been\u00a0fixed.]<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0full\u00a0set\u00a0of\u00a0__*\u00a0identifiers\u00a0(combined\u00a0from\u00a0gcc/cp/lex.c\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gcc/cplus-dem.c)\u00a0that\u00a0are\u00a0either\u00a0old\u00a0or\u00a0new,\u00a0but\u00a0are\u00a0definitely\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gcc/cplus-dem.c)\u00a0that\u00a0are\u00a0either\u00a0old\u00a0or\u00a0new,\u00a0but\u00a0are\u00a0definitely<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recognized\u00a0by\u00a0the\u00a0demangler,\u00a0is:<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aa<br />\n@@ -225,8 +225,8 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0*p\u00a0=\u00a0\"flop\";\u00a0\u00a0//\u00a0wrong<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0&amp;c\u00a0=\u00a0*p;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0wrong<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0In\u00a0C++,\u00a0definitions\u00a0are\u00a0mixed\u00a0with\u00a0executable\u00a0code.\u00a0Here,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0In\u00a0C++,\u00a0definitions\u00a0are\u00a0mixed\u00a0with\u00a0executable\u00a0code.\u00a0Here,<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0p\u00a0is\u00a0being\u00a0initialized,\u00a0not\u00a0*p.\u00a0This\u00a0is\u00a0near-universal<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0practice\u00a0among\u00a0C++\u00a0programmers;\u00a0it\u00a0is\u00a0normal\u00a0for\u00a0C\u00a0hackers<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to\u00a0switch\u00a0spontaneously\u00a0as\u00a0they\u00a0gain\u00a0experience.<br />\n@@ -235,9 +235,9 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator==(type)<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator\u00a0==\u00a0(type)\u00a0\u00a0//\u00a0wrong<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0The\u00a0==\u00a0is\u00a0part\u00a0of\u00a0the\u00a0function\u00a0name.\u00a0Separating<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0makes\u00a0the\u00a0declaration\u00a0look\u00a0like\u00a0an\u00a0expression.\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0makes\u00a0the\u00a0declaration\u00a0look\u00a0like\u00a0an\u00a0expression.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a003.\u00a0Function\u00a0names\u00a0and\u00a0parentheses<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0mangle()<br />\n@@ -246,22 +246,22 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0no\u00a0space\u00a0before\u00a0parentheses\u00a0(except\u00a0after\u00a0a\u00a0control-flow<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0keyword)\u00a0is\u00a0near-universal\u00a0practice\u00a0for\u00a0C++.\u00a0It\u00a0identifies\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parentheses\u00a0as\u00a0the\u00a0function-call\u00a0operator\u00a0or\u00a0declarator,\u00a0as\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parentheses\u00a0as\u00a0the\u00a0function-call\u00a0operator\u00a0or\u00a0declarator,\u00a0as<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0opposed\u00a0to\u00a0an\u00a0expression\u00a0or\u00a0other\u00a0overloaded\u00a0use\u00a0of\u00a0parentheses.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a004.\u00a0Template\u00a0function\u00a0indentation<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0T&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template_function(args)<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;class\u00a0T&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0template_function(args)\u00a0{};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0In\u00a0class\u00a0definitions,\u00a0without\u00a0indentation\u00a0whitespace\u00a0is<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0needed\u00a0both\u00a0above\u00a0and\u00a0below\u00a0the\u00a0declaration\u00a0to\u00a0distinguish<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0visually\u00a0from\u00a0other\u00a0members.\u00a0(Also,\u00a0re:\u00a0\"typename\"<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rather\u00a0than\u00a0\"class\".)\u00a0\u00a0T\u00a0often\u00a0could\u00a0be\u00a0int,\u00a0which\u00a0is\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rather\u00a0than\u00a0\"class\".)\u00a0\u00a0T\u00a0often\u00a0could\u00a0be\u00a0int,\u00a0which\u00a0is<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0not\u00a0a\u00a0class.\u00a0(\"class\",\u00a0here,\u00a0is\u00a0an\u00a0anachronism.)<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a005.\u00a0Template\u00a0class\u00a0indentation<br />\n@@ -299,34 +299,34 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a007.\u00a0Member\u00a0initialization\u00a0lists<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0one\u00a0line,\u00a0separate\u00a0from\u00a0class\u00a0name.<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a008.\u00a0Try/Catch\u00a0blocks<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0catch\u00a0(...)<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0catch(...)\u00a0{\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0catch(...)\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a009.\u00a0Member\u00a0functions\u00a0declarations\u00a0and\u00a0definitions<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Keywords\u00a0such\u00a0as\u00a0extern,\u00a0static,\u00a0export,\u00a0explicit,\u00a0inline,\u00a0etc<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0go\u00a0on\u00a0the\u00a0line\u00a0above\u00a0the\u00a0function\u00a0name.\u00a0Thus<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0int\u00a0\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0int<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foo()<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0int\u00a0foo()<br />\n@@ -369,7 +369,7 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0foo;<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a013.\u00a0Spacing\u00a0WRT\u00a0return\u00a0statements.<br />\n@@ -428,17 +428,17 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Name\u00a0patterns:<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0nonstandard\u00a0names\u00a0appearing\u00a0in\u00a0Standard\u00a0headers,\u00a0we\u00a0are\u00a0constrained\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0nonstandard\u00a0names\u00a0appearing\u00a0in\u00a0Standard\u00a0headers,\u00a0we\u00a0are\u00a0constrained<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to\u00a0use\u00a0names\u00a0that\u00a0begin\u00a0with\u00a0underscores.\u00a0This\u00a0is\u00a0called\u00a0\"uglification\".<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0convention\u00a0is:<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Local\u00a0and\u00a0argument\u00a0names:\u00a0\u00a0__[a-z].*<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0__count\u00a0\u00a0__ix\u00a0\u00a0__s1\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0__count\u00a0\u00a0__ix\u00a0\u00a0__s1<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Type\u00a0names\u00a0and\u00a0template\u00a0formal-argument\u00a0names:\u00a0_[A-Z][^_].*<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0_Helper\u00a0\u00a0_CharT\u00a0\u00a0_N\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0_Helper\u00a0\u00a0_CharT\u00a0\u00a0_N<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Member\u00a0data\u00a0and\u00a0function\u00a0names:\u00a0_M_.*<br />\n <br />\n@@ -448,7 +448,7 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0_S_max_elements\u00a0\u00a0_S_default_value<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Don't\u00a0use\u00a0names\u00a0in\u00a0the\u00a0same\u00a0scope\u00a0that\u00a0differ\u00a0only\u00a0in\u00a0the\u00a0prefix,\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Don't\u00a0use\u00a0names\u00a0in\u00a0the\u00a0same\u00a0scope\u00a0that\u00a0differ\u00a0only\u00a0in\u00a0the\u00a0prefix,<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0e.g.\u00a0_S_top\u00a0and\u00a0_M_top.\u00a0See\u00a0BADNAMES\u00a0for\u00a0a\u00a0list\u00a0of\u00a0forbidden\u00a0names.<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(The\u00a0most\u00a0tempting\u00a0of\u00a0these\u00a0seem\u00a0to\u00a0be\u00a0and\u00a0\"_T\"\u00a0and\u00a0\"__sz\".)<br />\n <br />\n@@ -458,7 +458,7 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--------------------------<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[BY\u00a0EXAMPLE]<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#ifndef\u00a0\u00a0_HEADER_<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#define\u00a0\u00a0_HEADER_\u00a01<br />\n <br />\n@@ -471,37 +471,37 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble(const\u00a0gribble&amp;);<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0explicit\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0explicit<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble(int\u00a0__howmany);<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble&amp;\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble&amp;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator=(const\u00a0gribble&amp;);<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0~gribble()\u00a0throw\u00a0();<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Start\u00a0with\u00a0a\u00a0capital\u00a0letter,\u00a0end\u00a0with\u00a0a\u00a0period.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0void\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0void<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public_member(const\u00a0char*\u00a0__arg)\u00a0const;<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0In-class\u00a0function\u00a0definitions\u00a0should\u00a0be\u00a0restricted\u00a0to\u00a0one-liners.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0one_line()\u00a0{\u00a0return\u00a00\u00a0}<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0two_lines(const\u00a0char*\u00a0arg)\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0two_lines(const\u00a0char*\u00a0arg)<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0return\u00a0strchr(arg,\u00a0'a');\u00a0}<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0three_lines();\u00a0\u00a0//\u00a0inline,\u00a0but\u00a0defined\u00a0below.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Note\u00a0indentation.<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0_Formal_argument&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public_template()\u00a0const\u00a0throw();<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0_Iterator&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0other_template();<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private:<br />\n@@ -512,13 +512,13 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_Helper*\u00a0_M_helper;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0_M_private_function();<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enum\u00a0_Enum\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_one,\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_two\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enum\u00a0_Enum<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_one,<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_two<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static\u00a0void\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static\u00a0void<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_initialize_library();<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n <br />\n@@ -548,20 +548,20 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#endif\u00a0/*\u00a0_HEADER_\u00a0*/<br />\n <br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0T&gt;\u00a0\u00a0//\u00a0notice:\u00a0\"typename\",\u00a0not\u00a0\"class\",\u00a0no\u00a0space<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0long_return_value_type&lt;with_many,\u00a0args&gt;\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0long_return_value_type&lt;with_many,\u00a0args&gt;<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function_name(char*\u00a0pointer,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\"char\u00a0*pointer\"\u00a0is\u00a0wrong.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char*\u00a0argument,\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char*\u00a0argument,<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const\u00a0Reference&amp;\u00a0ref)<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0int\u00a0a_local;\u00a0\u00a0/*\u00a0wrong;\u00a0see\u00a0below.\u00a0*/<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(test)\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nested\u00a0code\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(test)<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nested\u00a0code<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0a_local\u00a0=\u00a00;\u00a0\u00a0//\u00a0declare\u00a0variable\u00a0at\u00a0first\u00a0use.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0char\u00a0a,\u00a0b,\u00a0*p;\u00a0\u00a0\u00a0/*\u00a0wrong\u00a0*/<br />\n@@ -574,12 +574,12 @@\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0...<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n+<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::three_lines()<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0doesn't\u00a0fit\u00a0in\u00a0one\u00a0line.<br />"}, {"sha": "4cb92481af79db243bbff73640ebbcd4780e17a2", "filename": "libstdc++-v3/doc/html/manual/source_organization.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html?ref=18246cedb54858482e28e44693f7459528f2714e", "patch": "@@ -20,26 +20,26 @@\n <br />\n \u00a0\u00a0\u00a0\u00a0include/std<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Files\u00a0meant\u00a0to\u00a0be\u00a0found\u00a0by\u00a0#include\u00a0&lt;name&gt;\u00a0directives\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0standard-conforming\u00a0user\u00a0programs.\u00a0\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0standard-conforming\u00a0user\u00a0programs.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0include/c<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0directly\u00a0include\u00a0standard\u00a0C\u00a0headers.\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0directly\u00a0include\u00a0standard\u00a0C\u00a0headers.<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[NB:\u00a0this\u00a0can\u00a0be\u00a0enabled\u00a0via\u00a0--enable-cheaders=c]<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0include/c_global\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0include/c_global<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0include\u00a0standard\u00a0C\u00a0headers\u00a0in<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0global\u00a0namespace,\u00a0and\u00a0put\u00a0select\u00a0names\u00a0into\u00a0the\u00a0std::<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace.\u00a0\u00a0[NB:\u00a0this\u00a0is\u00a0the\u00a0default,\u00a0and\u00a0is\u00a0the\u00a0same\u00a0as<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--enable-cheaders=c_global]<br />\n <br />\n-\u00a0\u00a0\u00a0\u00a0include/c_std\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0include/c_std<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0include\u00a0standard\u00a0C\u00a0headers<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0already\u00a0in\u00a0namespace\u00a0std,\u00a0and\u00a0put\u00a0select\u00a0names\u00a0into\u00a0the\u00a0std::<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace.\u00a0\u00a0[NB:\u00a0this\u00a0is\u00a0the\u00a0same\u00a0as\u00a0--enable-cheaders=c_std]<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0include/bits<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Files\u00a0included\u00a0by\u00a0standard\u00a0headers\u00a0and\u00a0by\u00a0other\u00a0files\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0bits\u00a0directory.\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0bits\u00a0directory.<br />\n <br />\n \u00a0\u00a0\u00a0\u00a0include/backward<br />\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0provided\u00a0for\u00a0backward\u00a0compatibility,\u00a0such\u00a0as\u00a0&lt;iostream.h&gt;.<br />\n@@ -58,7 +58,7 @@\n \u00a0\u00a0\u00a0\u00a0installed.<br />\n <br />\n \u00a0\u00a0testsuites/[backward,\u00a0demangle,\u00a0ext,\u00a0performance,\u00a0thread,\u00a017_*\u00a0to\u00a027_*]<br />\n-\u00a0\u00a0\u00a0\u00a0Test\u00a0programs\u00a0are\u00a0here,\u00a0and\u00a0may\u00a0be\u00a0used\u00a0to\u00a0begin\u00a0to\u00a0exercise\u00a0the\u00a0<br />\n+\u00a0\u00a0\u00a0\u00a0Test\u00a0programs\u00a0are\u00a0here,\u00a0and\u00a0may\u00a0be\u00a0used\u00a0to\u00a0begin\u00a0to\u00a0exercise\u00a0the<br />\n \u00a0\u00a0\u00a0\u00a0library.\u00a0\u00a0Support\u00a0for\u00a0\"make\u00a0check\"\u00a0and\u00a0\"make\u00a0check-install\"\u00a0is<br />\n \u00a0\u00a0\u00a0\u00a0complete,\u00a0and\u00a0runs\u00a0through\u00a0all\u00a0the\u00a0subdirectories\u00a0here\u00a0when\u00a0this<br />\n \u00a0\u00a0\u00a0\u00a0command\u00a0is\u00a0issued\u00a0from\u00a0the\u00a0build\u00a0directory.\u00a0\u00a0Please\u00a0note\u00a0that<br />"}, {"sha": "bbc038e09bd42896c21c0b6d75faeac3f11a952e", "filename": "libstdc++-v3/doc/html/manual/spine.html", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fspine.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fspine.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fspine.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "2dd8c691a681bbf65b203b34e70db3c802cbf5ed", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "277339d6e27ec13e874e6019c1ef31cb13153300", "filename": "libstdc++-v3/doc/html/manual/streambufs.html", "status": "modified", "additions": 80, "deletions": 3, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstreambufs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstreambufs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstreambufs.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "d1dfd3b2f71f5e5eae8f6c768cc654929ee46c2a", "filename": "libstdc++-v3/doc/html/manual/strings.html", "status": "modified", "additions": 361, "deletions": 4, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstrings.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstrings.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstrings.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "6e6b77eb4e88ea7fe53665bd4c3a4262146dc1d1", "filename": "libstdc++-v3/doc/html/manual/stringstreams.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstringstreams.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstringstreams.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstringstreams.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "de3237b4b76997e18cd1a160446864076471daef", "filename": "libstdc++-v3/doc/html/manual/support.html", "status": "modified", "additions": 125, "deletions": 4, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsupport.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsupport.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsupport.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "ab0bf5e19b692d2b658cd3e457b3f8bfb5afa830", "filename": "libstdc++-v3/doc/html/manual/termination.html", "status": "modified", "additions": 90, "deletions": 14, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftermination.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftermination.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftermination.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "9065845c34cf6335f1439874b0d4a7c25cd19d51", "filename": "libstdc++-v3/doc/html/manual/test.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "62356dec625f31696c3743ce6f47c90165a74705", "filename": "libstdc++-v3/doc/html/manual/traits.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftraits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftraits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftraits.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "51dd333bab47bd18f1ba938112d1f8008a069d17", "filename": "libstdc++-v3/doc/html/manual/using.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "f18aec31d8f0e4719ab7b77fbdca65009d1835e8", "filename": "libstdc++-v3/doc/html/manual/using_concurrency.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "38e193130291efe1a44a146ab446917129cdde43", "filename": "libstdc++-v3/doc/html/manual/using_dynamic_or_shared.html", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "dc8c4daec8bb6ce62c7f5bd278096bb97b1edaff", "filename": "libstdc++-v3/doc/html/manual/using_exceptions.html", "status": "modified", "additions": 50, "deletions": 41, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_exceptions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_exceptions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_exceptions.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "155d82874bc686b24c94a2a13701152f217b9071", "filename": "libstdc++-v3/doc/html/manual/using_headers.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "ded3c5a4c35abae76fee8fd3cb6a2d134dd74916", "filename": "libstdc++-v3/doc/html/manual/using_macros.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "9a801d7a6b386c86f59aabd062625ddf07b7b2b4", "filename": "libstdc++-v3/doc/html/manual/utilities.html", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Futilities.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Futilities.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Futilities.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "8f5543859438f3ad011f3934c5368595a5447439", "filename": "libstdc++-v3/doc/html/manual/vector.html", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fvector.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fvector.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fvector.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79"}, {"sha": "540e5a775779eb214456f2fd4e3da6f7903596c3", "filename": "libstdc++-v3/doc/html/manual/verbose_termination.html", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fverbose_termination.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fverbose_termination.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fverbose_termination.html?ref=bc58d7e1bd3aebc1fa0ad81c9ee6b2eddfd89c79"}, {"sha": "585f7cdf1ea7ca733a3014141d3845bfa40a89f3", "filename": "libstdc++-v3/doc/html/spine.html", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fspine.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fspine.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fspine.html?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "22d2e6290107d4df7a33f9d6e4784224866db336", "filename": "libstdc++-v3/doc/xml/faq.xml", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "393b7f509c3ea99e45b886d4f1fe2ef43f1c578c", "filename": "libstdc++-v3/doc/xml/manual/appendix_contributing.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "d7a162c056a98e9a0255ecb6bd63c04e801935b3", "filename": "libstdc++-v3/doc/xml/manual/prerequisites.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "8eb9b49a1be3837703967d2f5f6eb7ac473aca6b", "filename": "libstdc++-v3/doc/xml/manual/strings.xml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml?ref=18246cedb54858482e28e44693f7459528f2714e"}, {"sha": "bb6077c4e197d2b130c4fd3f1143dc9f273537e2", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18246cedb54858482e28e44693f7459528f2714e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=18246cedb54858482e28e44693f7459528f2714e"}]}