{"sha": "c59ffc4195b245eecb574418f13f27b1f13d654e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5ZmZjNDE5NWIyNDVlZWNiNTc0NDE4ZjEzZjI3YjFmMTNkNjU0ZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-30T16:36:19Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-30T16:36:19Z"}, "message": "hwint.c: New.\n\n\t* hwint.c:  New.  Extracted from toplev.c.\n\t* hwint.h (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n\tMove from toplev.h.\n\t* toplev.c (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n\tMove to hwint.c.\n\t* toplev.h (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n\tMove to hwint.h.\n\t* builtins.c, combine.c, config/i386/winnt.c, double-int.c,\n\texplow.c, expmed.c, fold-const.c, ggc-page.c, ggc-zone.c, ifcvt.c,\n\tipa-struct-reorg.c, ira-color.c, matrix-reorg.c, omp-low.c,\n\treal.c, recog.c, reload.c, rtlanal.c, simplify-rtx.c,\n\tstor-layout.c, tree-dfa.c, tree-ssa-alias.c,\n\ttree-ssa-loop-niter.c, tree-vect-data-refs.c,\n\ttree-vect-loop-manip.c, tree-vect-loop.c, tree-vect-stmts.c,\n\ttree-vrp.c: Don't include toplev.h.\n\t* genattrtab.c, genconditions.c, genemit.c, genextract.c,\n\tgenoutput.c, genpeep.c, genpreds.c, genrecog.c: Don't include\n\ttoplev.h in generated output.\n\t* Makefile.in (OBJS-common): Add hwint.o.\n\tDependencies for above files changed to remove toplev.h.\n\t(hwint.o): New.\n\t(insn-attrtab.o, insn-emit.o, insn-extract.o, insn-output.o,\n\tinsn-peep.o, insn-preds.o, insn-recog.o): Don't depend on\n\ttoplev.h.\n\t* config/i386/t-cygming (winnt.o): Don't depend on toplev.h.\n\t* config/i386/t-interix (winnt.o): Don't depend on toplev.h.\n\nfortran:\n\t* trans-common.c: Don't include toplev.h.\n\njava:\n\t* boehm.c: Don't include toplev.h.\n\t* Make-lang.in (java/boehm.o): Don't depend on toplev.h.\n\nlto:\n\t* lto-object.c: Don't include toplev.h.\n\t* Make-lang.in (lto/lto-object.o): Don't depend on toplev.h.\n\nFrom-SVN: r167301", "tree": {"sha": "c381c35f0952d6ecccac229a039bf3585647cf4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c381c35f0952d6ecccac229a039bf3585647cf4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c59ffc4195b245eecb574418f13f27b1f13d654e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59ffc4195b245eecb574418f13f27b1f13d654e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59ffc4195b245eecb574418f13f27b1f13d654e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59ffc4195b245eecb574418f13f27b1f13d654e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b55141a954febb2c069b237166d7478827d336c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b55141a954febb2c069b237166d7478827d336c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b55141a954febb2c069b237166d7478827d336c"}], "stats": {"total": 492, "additions": 262, "deletions": 230}, "files": [{"sha": "cda7a12de903e85bbc26eea07e3d137aee88a9a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,3 +1,32 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* hwint.c:  New.  Extracted from toplev.c.\n+\t* hwint.h (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n+\tMove from toplev.h.\n+\t* toplev.c (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n+\tMove to hwint.c.\n+\t* toplev.h (clz_hwi, ctz_hwi, ffs_hwi, exact_log2, floor_log2):\n+\tMove to hwint.h.\n+\t* builtins.c, combine.c, config/i386/winnt.c, double-int.c,\n+\texplow.c, expmed.c, fold-const.c, ggc-page.c, ggc-zone.c, ifcvt.c,\n+\tipa-struct-reorg.c, ira-color.c, matrix-reorg.c, omp-low.c,\n+\treal.c, recog.c, reload.c, rtlanal.c, simplify-rtx.c,\n+\tstor-layout.c, tree-dfa.c, tree-ssa-alias.c,\n+\ttree-ssa-loop-niter.c, tree-vect-data-refs.c,\n+\ttree-vect-loop-manip.c, tree-vect-loop.c, tree-vect-stmts.c,\n+\ttree-vrp.c: Don't include toplev.h.\n+\t* genattrtab.c, genconditions.c, genemit.c, genextract.c,\n+\tgenoutput.c, genpeep.c, genpreds.c, genrecog.c: Don't include\n+\ttoplev.h in generated output.\n+\t* Makefile.in (OBJS-common): Add hwint.o.\n+\tDependencies for above files changed to remove toplev.h.\n+\t(hwint.o): New.\n+\t(insn-attrtab.o, insn-emit.o, insn-extract.o, insn-output.o,\n+\tinsn-peep.o, insn-preds.o, insn-recog.o): Don't depend on\n+\ttoplev.h.\n+\t* config/i386/t-cygming (winnt.o): Don't depend on toplev.h.\n+\t* config/i386/t-interix (winnt.o): Don't depend on toplev.h.\n+\n 2010-11-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46717"}, {"sha": "0852220a3646e56fe574bd0b626edfb2d7a9082b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 35, "deletions": 32, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1263,6 +1263,7 @@ OBJS-common = \\\n \tgtype-desc.o \\\n \thaifa-sched.o \\\n \thooks.o \\\n+\thwint.o \\\n \tifcvt.o \\\n \timplicit-zee.o \\\n \tinit-regs.o \\\n@@ -2276,11 +2277,11 @@ ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n \t$(HOSTHOOKS_DEF_H) $(VEC_H) $(PLUGIN_H) $(GGC_INTERNAL_H) $(TIMEVAR_H)\n \n ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-\t$(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) \\\n+\t$(FLAGS_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) \\\n \t$(TREE_FLOW_H) $(PLUGIN_H) $(GGC_INTERNAL_H)\n \n ggc-zone.o: ggc-zone.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-\t$(TREE_H) $(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n+\t$(TREE_H) $(FLAGS_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n \t$(PARAMS_H) $(BITMAP_H) $(PLUGIN_H) $(GGC_INTERNAL_H)\n \n ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n@@ -2362,7 +2363,7 @@ print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n+   $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n@@ -2491,7 +2492,7 @@ tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) toplev.h intl.h tree-pretty-print.h \\\n+   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) intl.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n@@ -2531,7 +2532,7 @@ tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n-   tree-pretty-print.h toplev.h\n+   tree-pretty-print.h\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n@@ -2559,7 +2560,7 @@ tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n    $(BASIC_BLOCK_H) $(GGC_H) intl.h tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n@@ -2613,7 +2614,7 @@ tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(GIMPLE_H) $(VEC_H) \\\n    $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h \\\n-   tree-pretty-print.h toplev.h\n+   tree-pretty-print.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n@@ -2648,7 +2649,7 @@ gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) tree-iterator.h\n omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2740,11 +2741,11 @@ graphite-sese-to-poly.o: graphite-sese-to-poly.c $(CONFIG_H) \\\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n+   $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n    gimple-pretty-print.h $(TARGET_H)\n tree-vect-loop-manip.o: tree-vect-loop-manip.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2760,12 +2761,12 @@ tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n tree-vect-stmts.o: tree-vect-stmts.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   $(EXPR_H) $(RECOG_H) $(OPTABS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H) \\\n+   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H) \\\n    langhooks.h tree-pretty-print.h gimple-pretty-print.h\n tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n-   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) toplev.h \\\n+   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    tree-pretty-print.h gimple-pretty-print.h\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2817,7 +2818,7 @@ tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n+   $(TREE_H) $(FLAGS_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n    $(GIMPLE_H) realmpfr.h $(TREE_FLOW_H)\n diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2862,6 +2863,8 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n \n+hwint.o : hwint.c $(CONFIG_H) $(SYSTEM_H)\n+\n passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) $(INSN_ATTR_H) output.h \\\n    $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n@@ -2937,7 +2940,7 @@ dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(GIMPLE_H) $(FLAGS_H) $(TARGET_H) $(FUNCTION_H) $(REGS_H) \\\n    $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n-   hard-reg-set.h toplev.h $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n+   hard-reg-set.h $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) $(LIBFUNCS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    tree-mudflap.h realmpfr.h $(BUILTINS_DEF) $(MACHMODE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) value-prof.h\n@@ -2948,11 +2951,11 @@ calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(DBGCNT_H) $(TREE_FLOW_H)\n expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H) \\\n    expmed.h\n explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n+   $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n    $(TARGET_H) output.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(LIBFUNCS_H) \\\n@@ -2990,7 +2993,7 @@ emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h $(TREE_PASS_H) gt-emit-rtl.h \\\n    $(DF_H) $(PARAMS_H) $(TARGET_H)\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) dfp.h realmpfr.h\n+   $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) dfp.h realmpfr.h\n realmpfr.o : realmpfr.c realmpfr.h $(CONFIG_H) $(SYSTEM_H) $(REAL_H)\n dfp.o : dfp.c dfp.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(TREE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) $(DECNUM_H)\n@@ -3008,7 +3011,7 @@ jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(PREDICT_H) $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n+   $(RECOG_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n@@ -3049,7 +3052,7 @@ ipa-split.o : ipa-split.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H)\n matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(TREE_INLINE_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h langhooks.h $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n+   tree-flow-inline.h langhooks.h $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n    $(CFGLOOP_H) tree-iterator.h $(TREE_PASS_H) $(OPTS_H) $(TREE_DATA_REF_H) \\\n@@ -3081,7 +3084,7 @@ ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) tree-pretty-print.h\n ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(GIMPLE_H) tree-inline.h \\\n-   $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) \\\n    $(FLAGS_H) debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n    $(TREE_PASS_H) $(OPTS_H) $(IPA_TYPE_ESCAPE_H) $(TREE_DUMP_H) \\\n@@ -3294,7 +3297,7 @@ et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) hard-reg-set.h \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n    insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) \\\n@@ -3308,7 +3311,7 @@ vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n-   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h toplev.h $(DIAGNOSTIC_CORE_H)\n+   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h $(DIAGNOSTIC_CORE_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H)  $(TM_P_H) \\\n@@ -3365,7 +3368,7 @@ ira-conflicts.o: ira-conflicts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(DF_H) sparseset.h addresses.h $(IRA_INT_H)\n ira-color.o: ira-color.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) reload.h $(PARAMS_H) \\\n+   $(EXPR_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) reload.h $(PARAMS_H) \\\n    $(DF_H) $(SPLAY_TREE_H) $(IRA_INT_H)\n ira-emit.o: ira-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) hard-reg-set.h \\\n@@ -3449,7 +3452,7 @@ recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) output.h reload.h \\\n    addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n-   $(DF_H) $(DBGCNT_H) $(TARGET_H) toplev.h $(DIAGNOSTIC_CORE_H)\n+   $(DF_H) $(DBGCNT_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n@@ -3489,7 +3492,7 @@ regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n    addresses.h reload.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n+   $(REGS_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n    $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n@@ -3565,18 +3568,18 @@ s-mddeps: $(md_file) $(MD_INCLUDES) build/genmddeps$(build_exeext)\n # Header dependencies for generated source files.\n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n-  insn-config.h toplev.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n+  insn-config.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n insn-automata.o : insn-automata.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n   insn-config.h toplev.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H) $(EMIT_RTL_H)\n insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n   $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) \t\t\\\n   dfp.h $(FLAGS_H) output.h insn-config.h hard-reg-set.h $(RECOG_H)\t\\\n-  $(RESOURCE_H) reload.h toplev.h $(DIAGNOSTIC_CORE_H) $(REGS_H) tm-constrs.h $(GGC_H)\t\\\n+  $(RESOURCE_H) reload.h $(DIAGNOSTIC_CORE_H) $(REGS_H) tm-constrs.h $(GGC_H)\t\\\n   $(BASIC_BLOCK_H) $(INTEGRATE_H)\n insn-enums.o : insn-enums.c $(CONFIG_H) $(SYSTEM_H) insn-constants.h\n insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) toplev.h $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H)\n+  $(TM_H) $(RTL_H) $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H)\n insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t$(TM_H) \\\n   $(MACHMODE_H)\n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n@@ -3585,18 +3588,18 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(GGC_H) $(REGS_H) conditions.h\t\t\t\\\n   hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h\t\\\n-  $(RECOG_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\\\n+  $(RECOG_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\\\n   $(TARGET_H) tm-constrs.h\n insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n   insn-config.h $(RTL_H) $(TM_P_H) $(REGS_H) output.h \t\t\t\\\n-  $(RECOG_H) $(EXCEPT_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) tm-constrs.h\n+  $(RECOG_H) $(EXCEPT_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) tm-constrs.h\n insn-preds.o : insn-preds.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) $(TREE_H) insn-config.h $(RECOG_H) output.h\t\t\\\n   $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H)\t\\\n-  toplev.h $(DIAGNOSTIC_CORE_H) reload.h $(REGS_H) tm-constrs.h\n+  $(DIAGNOSTIC_CORE_H) reload.h $(REGS_H) tm-constrs.h\n insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) insn-config.h $(RECOG_H) output.h $(FLAGS_H)\t\t\\\n-  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) toplev.h $(DIAGNOSTIC_CORE_H)\t\\\n+  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) $(DIAGNOSTIC_CORE_H)\t\\\n   reload.h $(REGS_H) tm-constrs.h\n \n # For each of the files generated by running a generator program over"}, {"sha": "5c0938266c59a9ba8da3ab7703627fff426887ab", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"output.h\"\n #include \"typeclass.h\"\n-#include \"toplev.h\"\n #include \"predict.h\"\n #include \"tm_p.h\"\n #include \"target.h\""}, {"sha": "d9d68384a2a65e4912149a55ca5bbb8c682d33e6", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -93,7 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n #include \"optabs.h\"\n #include \"insn-codes.h\""}, {"sha": "6d54e4971a6f6ec18df389d65bfe3e66da2d2f95", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -30,7 +30,7 @@ LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/w32api/include\n \n winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H) $(LTO_STREAMER_H)\n+  $(TM_P_H) $(HASHTAB_H) $(GGC_H) $(LTO_STREAMER_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt.c\n "}, {"sha": "e7b016f1e7a002a7b50a8e2a0f55015f137ffd84", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -3,6 +3,6 @@ LIB1ASMFUNCS = _chkstk _chkstk_ms\n \n winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n+  $(TM_P_H) $(HASHTAB_H) $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/winnt.c"}, {"sha": "16110a71508d38dac3d3726a74293fc4eace2411", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"langhooks.h\"\n #include \"ggc.h\""}, {"sha": "834eaf9d6c27be3bfa65fafeb0c53d3d0bffbd77", "filename": "gcc/double-int.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fdouble-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fdouble-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t\t/* For SHIFT_COUNT_TRUNCATED.  */\n #include \"tree.h\"\n-#include \"toplev.h\"\n \n /* We know that A1 + B1 = SUM1, using 2's complement arithmetic and ignoring\n    overflow.  Suppose A, B and SUM have the same respective signs as A1, B1,"}, {"sha": "836f244b3a17e71db0f79bd00cab093784b5e375", "filename": "gcc/explow.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\""}, {"sha": "24aedccde9eac26e7153e18409d5dc515f2ee640", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\""}, {"sha": "07b59d89a32af2d1c8a3b619b2b6823c3a16dff2", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\""}, {"sha": "4f2d7c11d4583522af04cd960278c0df600cf8f6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,3 +1,7 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* trans-common.c: Don't include toplev.h.\n+\n 2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gfortran.h (alloca): Don't include definitions."}, {"sha": "ad4ef066d89a89d826c12615a088ba37310e8a3a", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -98,7 +98,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"toplev.h\"\t/* For exact_log2.  */\n #include \"output.h\"\t/* For decl_default_tls_model.  */\n #include \"gfortran.h\"\n #include \"trans.h\""}, {"sha": "497660428c352d97eaa455fa137ccc5f7d872c3c", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -4920,8 +4920,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n-  printf (\"#include \\\"diagnostic-core.h\\\"\\n\"\n-          \"#include \\\"toplev.h\\\"\\n\");\n+  printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"\\n\");"}, {"sha": "6caa7ef77806057808352efea1f0289ae493229f", "filename": "gcc/genconditions.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,5 +1,5 @@\n /* Process machine description and calculate constant conditions.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2010\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -87,7 +87,6 @@ write_header (void)\n #include \\\"hard-reg-set.h\\\"\\n\\\n #include \\\"resource.h\\\"\\n\\\n #include \\\"diagnostic-core.h\\\"\\n\\\n-#include \\\"toplev.h\\\"\\n\\\n #include \\\"reload.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\");\n "}, {"sha": "6b1ae7d8608833ec118627d8d96555f4bd54e393", "filename": "gcc/genemit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -863,7 +863,6 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"resource.h\\\"\\n\");\n   printf (\"#include \\\"reload.h\\\"\\n\");\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n-  printf (\"#include \\\"toplev.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\");\n   printf (\"#include \\\"ggc.h\\\"\\n\");"}, {"sha": "09e7cde838018ef5baf70343485db4f90dbefe29", "filename": "gcc/genextract.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,6 +1,6 @@\n /* Generate code from machine description to extract operands from insn as rtl.\n    Copyright (C) 1987, 1991, 1992, 1993, 1997, 1998, 1999, 2000, 2003,\n-   2004, 2005, 2007, 2008\n+   2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -366,7 +366,6 @@ print_header (void)\n #include \\\"insn-config.h\\\"\\n\\\n #include \\\"recog.h\\\"\\n\\\n #include \\\"diagnostic-core.h\\\"\\n\\\n-#include \\\"toplev.h\\\"\\n\\\n \\n\\\n /* This variable is used as the \\\"location\\\" of any missing operand\\n\\\n    whose numbers are skipped by a given pattern.  */\\n\\"}, {"sha": "d03222f4b21308f535532749805d0a7b6cf9fd06", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,6 +1,6 @@\n /* Generate code from to output assembler insns as recognized from rtl.\n    Copyright (C) 1987, 1988, 1992, 1994, 1995, 1997, 1998, 1999, 2000, 2002,\n-   2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -241,7 +241,6 @@ output_prologue (void)\n   printf (\"#include \\\"insn-attr.h\\\"\\n\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\\n\");\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n-  printf (\"#include \\\"toplev.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"target.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\");"}, {"sha": "ac08d80d5562aca0e2fb427e8cef014b4578752a", "filename": "gcc/genpeep.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,6 +1,6 @@\n /* Generate code from machine description to perform peephole optimizations.\n    Copyright (C) 1987, 1989, 1992, 1997, 1998, 1999, 2000, 2003, 2004,\n-   2007  Free Software Foundation, Inc.\n+   2007, 2010  Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -377,7 +377,6 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"except.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n-  printf (\"#include \\\"toplev.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\\n\");\n "}, {"sha": "fba43727fac53c39d6ed20ac0a53ff2eb9b8093e", "filename": "gcc/genpreds.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -2,7 +2,7 @@\n    - prototype declarations for operand predicates (tm-preds.h)\n    - function definitions of operand predicates, if defined new-style\n      (insn-preds.c)\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1338,7 +1338,6 @@ write_insn_preds_c (void)\n #include \\\"hard-reg-set.h\\\"\\n\\\n #include \\\"resource.h\\\"\\n\\\n #include \\\"diagnostic-core.h\\\"\\n\\\n-#include \\\"toplev.h\\\"\\n\\\n #include \\\"reload.h\\\"\\n\\\n #include \\\"regs.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\");"}, {"sha": "74dd0a72d590c7ec371985751a1c2a571e6a9f82", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,6 +1,6 @@\n /* Generate code from machine description to recognize rtl as insns.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -2449,7 +2449,6 @@ write_header (void)\n #include \\\"hard-reg-set.h\\\"\\n\\\n #include \\\"resource.h\\\"\\n\\\n #include \\\"diagnostic-core.h\\\"\\n\\\n-#include \\\"toplev.h\\\"\\n\\\n #include \\\"reload.h\\\"\\n\\\n #include \\\"regs.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\\"}, {"sha": "2c14adb5701ca57e8ba97af34213c950c82417a0", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"toplev.h\" /* exact_log2 */\n #include \"diagnostic-core.h\"\n #include \"flags.h\"\n #include \"ggc.h\""}, {"sha": "d0c1d79f53d9ba256904ff118cced85b0b1ed7de", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"ggc.h\"\n #include \"ggc-internal.h\""}, {"sha": "85c1326bdde89d187556d428fac2f42cfed95ed7", "filename": "gcc/hwint.c", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fhwint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fhwint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -0,0 +1,100 @@\n+/* Operations on HOST_WIDE_INT.\n+   Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+\n+#if GCC_VERSION < 3004\n+\n+/* The functions clz_hwi, ctz_hwi, ffs_hwi, floor_log2 and exact_log2\n+   are defined as inline functions in hwint.h if GCC_VERSION >= 3004.\n+   The definitions here are used for older versions of GCC and non-GCC\n+   bootstrap compilers.  */\n+\n+/* Given X, an unsigned number, return the largest int Y such that 2**Y <= X.\n+   If X is 0, return -1.  */\n+\n+int\n+floor_log2 (unsigned HOST_WIDE_INT x)\n+{\n+  int t = 0;\n+\n+  if (x == 0)\n+    return -1;\n+\n+  if (HOST_BITS_PER_WIDE_INT > 64)\n+    if (x >= (unsigned HOST_WIDE_INT) 1 << (t + 64))\n+      t += 64;\n+  if (HOST_BITS_PER_WIDE_INT > 32)\n+    if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 32))\n+      t += 32;\n+  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 16))\n+    t += 16;\n+  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 8))\n+    t += 8;\n+  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 4))\n+    t += 4;\n+  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 2))\n+    t += 2;\n+  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 1))\n+    t += 1;\n+\n+  return t;\n+}\n+\n+/* Return the logarithm of X, base 2, considering X unsigned,\n+   if X is a power of 2.  Otherwise, returns -1.  */\n+\n+int\n+exact_log2 (unsigned HOST_WIDE_INT x)\n+{\n+  if (x != (x & -x))\n+    return -1;\n+  return floor_log2 (x);\n+}\n+\n+/* Given X, an unsigned number, return the number of least significant bits\n+   that are zero.  When X == 0, the result is the word size.  */\n+\n+int\n+ctz_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  return x ? floor_log2 (x & -x) : HOST_BITS_PER_WIDE_INT;\n+}\n+\n+/* Similarly for most significant bits.  */\n+\n+int\n+clz_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  return HOST_BITS_PER_WIDE_INT - 1 - floor_log2(x);\n+}\n+\n+/* Similar to ctz_hwi, except that the least significant bit is numbered\n+   starting from 1, and X == 0 yields 0.  */\n+\n+int\n+ffs_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  return 1 + floor_log2 (x & -x);\n+}\n+\n+#endif /* GCC_VERSION < 3004 */"}, {"sha": "8bd7c5e7bdc2138925517e4a52c14b1531f11e86", "filename": "gcc/hwint.h", "status": "modified", "additions": 72, "deletions": 1, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,5 +1,6 @@\n /* HOST_WIDE_INT definitions for the GNU compiler.\n-   Copyright (C) 1998, 2002, 2004, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2004, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -157,4 +158,74 @@ extern char sizeof_long_long_must_be_8[sizeof(long long) == 8 ? 1 : -1];\n #  define HOST_BITS_PER_WIDEST_FAST_INT HOST_BITS_PER_LONG\n #endif\n \n+/* Inline functions operating on HOST_WIDE_INT.  */\n+#if GCC_VERSION < 3004\n+\n+extern int clz_hwi (unsigned HOST_WIDE_INT x);\n+extern int ctz_hwi (unsigned HOST_WIDE_INT x);\n+extern int ffs_hwi (unsigned HOST_WIDE_INT x);\n+\n+/* Return log2, or -1 if not exact.  */\n+extern int exact_log2                  (unsigned HOST_WIDE_INT);\n+\n+/* Return floor of log2, with -1 for zero.  */\n+extern int floor_log2                  (unsigned HOST_WIDE_INT);\n+\n+#else /* GCC_VERSION >= 3004 */\n+\n+/* For convenience, define 0 -> word_size.  */\n+static inline int\n+clz_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  if (x == 0)\n+    return HOST_BITS_PER_WIDE_INT;\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+  return __builtin_clzl (x);\n+# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n+  return __builtin_clzll (x);\n+# else\n+  return __builtin_clz (x);\n+# endif\n+}\n+\n+static inline int\n+ctz_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  if (x == 0)\n+    return HOST_BITS_PER_WIDE_INT;\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+  return __builtin_ctzl (x);\n+# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n+  return __builtin_ctzll (x);\n+# else\n+  return __builtin_ctz (x);\n+# endif\n+}\n+\n+static inline int\n+ffs_hwi (unsigned HOST_WIDE_INT x)\n+{\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+  return __builtin_ffsl (x);\n+# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n+  return __builtin_ffsll (x);\n+# else\n+  return __builtin_ffs (x);\n+# endif\n+}\n+\n+static inline int\n+floor_log2 (unsigned HOST_WIDE_INT x)\n+{\n+  return HOST_BITS_PER_WIDE_INT - 1 - clz_hwi (x);\n+}\n+\n+static inline int\n+exact_log2 (unsigned HOST_WIDE_INT x)\n+{\n+  return x == (x & -x) && x ? ctz_hwi (x) : -1;\n+}\n+\n+#endif /* GCC_VERSION >= 3004 */\n+\n #endif /* ! GCC_HWINT_H */"}, {"sha": "e5a88352df72dd28d3365219022edeb858abe373", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -36,7 +36,6 @@\n #include \"output.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"cfgloop.h\"\n #include \"target.h\""}, {"sha": "ae18da2cda299eea9244f30e2aa40bb46066d864", "filename": "gcc/ipa-struct-reorg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fipa-struct-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fipa-struct-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-struct-reorg.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"pointer-set.h\"\n #include \"hashtab.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"debug.h\"\n #include \"target.h\""}, {"sha": "9c5f4b722972f2967a2b4e6db0cf740873093971", "filename": "gcc/ira-color.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"reload.h\"\n #include \"params.h\"\n #include \"df.h\""}, {"sha": "2629d200f2d367ce02cfbd69a2d608802ce5ca2a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* boehm.c: Don't include toplev.h.\n+\t* Make-lang.in (java/boehm.o): Don't depend on toplev.h.\n+\n 2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n \n \t* expr.c, lang.c, mangle.c, mangle_name.c, typeck.c,"}, {"sha": "3e3d2c993177bd84599d0332ea9db24ee5021916", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -271,7 +271,7 @@ java/jcf-dump.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(JAVA_TREE_H) \\\n   java/jcf-dump.c java/jcf-reader.c java/jcf.h java/javaop.h java/javaop.def \\\n   version.h $(GGC_H) intl.h java/zipfile.h\n java/boehm.o: java/boehm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(TREE_H) $(JAVA_TREE_H) java/parse.h toplev.h\n+  $(TREE_H) $(JAVA_TREE_H) java/parse.h\n java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) $(GGC_H) $(FLAGS_H) $(OPTABS_H) $(EXPR_H) langhooks.h \\\n   gt-java-builtins.h"}, {"sha": "f4a9af61939a87bf62a233b8475cdf9f77761f68", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -33,7 +33,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"parse.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n static void mark_reference_fields (tree, double_int *, unsigned int,\n \t\t\t\t   int *, int *, int *, HOST_WIDE_INT *);"}, {"sha": "236f8d9ee9d7bc3607985d1c4986e9dab9e0a363", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lto-object.c: Don't include toplev.h.\n+\t* Make-lang.in (lto/lto-object.o): Don't depend on toplev.h.\n+\n 2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (lto/lto-object.o): Depend on toplev.h instead of"}, {"sha": "16b0f35e2adba7879c6b948253d300e60695d961", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -87,7 +87,7 @@ lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(OPTS_H) \\\n \t$(COMMON_H) debug.h $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n \t$(LTO_TAGS_H) $(LTO_STREAMER_H) $(SPLAY_TREE_H) gt-lto-lto.h $(PARAMS_H)\n lto/lto-object.o: lto/lto-object.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(DIAGNOSTIC_CORE_H) toplev.h $(LTO_H) $(TM_H) $(LTO_STREAMER_H) \\\n+\t$(DIAGNOSTIC_CORE_H) $(LTO_H) $(TM_H) $(LTO_STREAMER_H) \\\n \t../include/simple-object.h\n \n # LTO testing is done as part of C/C++/Fortran etc. testing."}, {"sha": "3be58dec3809d6cd0bc36d545e5d9b9f36467395", "filename": "gcc/lto/lto-object.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2Flto-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Flto%2Flto-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-object.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"lto.h\"\n #include \"tm.h\"\n #include \"lto-streamer.h\""}, {"sha": "c3031430e83086a2b645545e356af9be9d61bcaf", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -120,7 +120,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow-inline.h\"\n #include \"langhooks.h\"\n #include \"hashtab.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"ggc.h\"\n #include \"debug.h\""}, {"sha": "c3f217818bcb5c70cd0b2969b4279f2ca731800f", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\"\n-#include \"toplev.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"except.h\""}, {"sha": "4318586110aebf429e640bff68f78f325a3d1de3", "filename": "gcc/real.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -1,6 +1,6 @@\n /* real.c - software floating point emulation.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n-   2003, 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Stephen L. Moshier (moshier@world.std.com).\n    Re-written by Richard Henderson <rth@redhat.com>\n \n@@ -26,7 +26,6 @@\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"real.h\"\n #include \"realmpfr.h\"\n #include \"tm_p.h\""}, {"sha": "8fb96a0ed837b015e1af79b9a95835b0268a6226", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n-#include \"toplev.h\" /* exact_log2 may be used by targets */\n \n #ifndef STACK_PUSH_CODE\n #ifdef STACK_GROWS_DOWNWARD"}, {"sha": "aa9e68e59b6ed988c18d3f42fba53221e0b3e4a5", "filename": "gcc/reload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -111,7 +111,6 @@ a register with any other reload.  */\n #include \"params.h\"\n #include \"target.h\"\n #include \"ira.h\"\n-#include \"toplev.h\" /* exact_log2 may be used by targets */\n \n /* True if X is a constant that can be forced into the constant pool.  */\n #define CONST_POOL_OK_P(X)\t\t\t\\"}, {"sha": "3c0167ec6eff14f976f73f2fbecc00069e558bdb", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "ce4eab45b922808bf4601a3f4a172e864c451053", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"function.h\"\n #include \"expr.h\"\n-#include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"output.h\"\n #include \"ggc.h\""}, {"sha": "9056d7e27c9546d0cdf24d8d79e1e89893538c39", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "3050f0730e3aef93aa9b433541b40b6894ce5d6e", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -354,82 +354,6 @@ set_random_seed (const char *val)\n   return old;\n }\n \n-#if GCC_VERSION < 3004\n-\n-/* The functions clz_hwi, ctz_hwi, ffs_hwi, floor_log2 and exact_log2\n-   are defined as inline functions in toplev.h if GCC_VERSION >= 3004.\n-   The definitions here are used for older versions of gcc.  */\n-\n-/* Given X, an unsigned number, return the largest int Y such that 2**Y <= X.\n-   If X is 0, return -1.  */\n-\n-int\n-floor_log2 (unsigned HOST_WIDE_INT x)\n-{\n-  int t = 0;\n-\n-  if (x == 0)\n-    return -1;\n-\n-  if (HOST_BITS_PER_WIDE_INT > 64)\n-    if (x >= (unsigned HOST_WIDE_INT) 1 << (t + 64))\n-      t += 64;\n-  if (HOST_BITS_PER_WIDE_INT > 32)\n-    if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 32))\n-      t += 32;\n-  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 16))\n-    t += 16;\n-  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 8))\n-    t += 8;\n-  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 4))\n-    t += 4;\n-  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 2))\n-    t += 2;\n-  if (x >= ((unsigned HOST_WIDE_INT) 1) << (t + 1))\n-    t += 1;\n-\n-  return t;\n-}\n-\n-/* Return the logarithm of X, base 2, considering X unsigned,\n-   if X is a power of 2.  Otherwise, returns -1.  */\n-\n-int\n-exact_log2 (unsigned HOST_WIDE_INT x)\n-{\n-  if (x != (x & -x))\n-    return -1;\n-  return floor_log2 (x);\n-}\n-\n-/* Given X, an unsigned number, return the number of least significant bits\n-   that are zero.  When X == 0, the result is the word size.  */\n-\n-int\n-ctz_hwi (unsigned HOST_WIDE_INT x)\n-{\n-  return x ? floor_log2 (x & -x) : HOST_BITS_PER_WIDE_INT;\n-}\n-\n-/* Similarly for most significant bits.  */\n-\n-int\n-clz_hwi (unsigned HOST_WIDE_INT x)\n-{\n-  return HOST_BITS_PER_WIDE_INT - 1 - floor_log2(x);\n-}\n-\n-/* Similar to ctz_hwi, except that the least significant bit is numbered\n-   starting from 1, and X == 0 yields 0.  */\n-\n-int\n-ffs_hwi (unsigned HOST_WIDE_INT x)\n-{\n-  return 1 + floor_log2 (x & -x);\n-}\n-\n-#endif /* GCC_VERSION < 3004 */\n-\n /* Handler for fatal signals, such as SIGSEGV.  These are transformed\n    into ICE messages, which is much more user friendly.  In case the\n    error printer crashes, reset the signal to prevent infinite recursion.  */"}, {"sha": "925e35777e694b0cd208dd9871565353f9aa05f0", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -88,76 +88,6 @@ extern const char * default_pch_valid_p (const void *, size_t);\n /* The hashtable, so that the C front ends can pass it to cpplib.  */\n extern struct ht *ident_hash;\n \n-/* Inline versions of the above for speed.  */\n-#if GCC_VERSION < 3004\n-\n-extern int clz_hwi (unsigned HOST_WIDE_INT x);\n-extern int ctz_hwi (unsigned HOST_WIDE_INT x);\n-extern int ffs_hwi (unsigned HOST_WIDE_INT x);\n-\n-/* Return log2, or -1 if not exact.  */\n-extern int exact_log2                  (unsigned HOST_WIDE_INT);\n-\n-/* Return floor of log2, with -1 for zero.  */\n-extern int floor_log2                  (unsigned HOST_WIDE_INT);\n-\n-#else /* GCC_VERSION >= 3004 */\n-\n-/* For convenience, define 0 -> word_size.  */\n-static inline int\n-clz_hwi (unsigned HOST_WIDE_INT x)\n-{\n-  if (x == 0)\n-    return HOST_BITS_PER_WIDE_INT;\n-# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n-  return __builtin_clzl (x);\n-# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n-  return __builtin_clzll (x);\n-# else\n-  return __builtin_clz (x);\n-# endif\n-}\n-\n-static inline int\n-ctz_hwi (unsigned HOST_WIDE_INT x)\n-{\n-  if (x == 0)\n-    return HOST_BITS_PER_WIDE_INT;\n-# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n-  return __builtin_ctzl (x);\n-# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n-  return __builtin_ctzll (x);\n-# else\n-  return __builtin_ctz (x);\n-# endif\n-}\n-\n-static inline int\n-ffs_hwi (unsigned HOST_WIDE_INT x)\n-{\n-# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n-  return __builtin_ffsl (x);\n-# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n-  return __builtin_ffsll (x);\n-# else\n-  return __builtin_ffs (x);\n-# endif\n-}\n-\n-static inline int\n-floor_log2 (unsigned HOST_WIDE_INT x)\n-{\n-  return HOST_BITS_PER_WIDE_INT - 1 - clz_hwi (x);\n-}\n-\n-static inline int\n-exact_log2 (unsigned HOST_WIDE_INT x)\n-{\n-  return x == (x & -x) && x ? ctz_hwi (x) : -1;\n-}\n-\n-#endif /* GCC_VERSION >= 3004 */\n-\n /* Functions used to get and set GCC's notion of in what directory\n    compilation was started.  */\n "}, {"sha": "05a682b0a4ba012483403e85285e3ce060413388", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"pointer-set.h\"\n #include \"tree.h\""}, {"sha": "d990a0227e01213d8131aea2e33d0e62cd3cac56", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-dump.h\""}, {"sha": "ee85f6fe00631f619ab8c7d38619a072a654f55d", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-inline.h\"\n #include \"gmp.h\"\n "}, {"sha": "2c92c37bcce509f21299e0e1b148a3543aef7688", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n /* Need to include rtl.h, expr.h, etc. for optabs.  */\n #include \"expr.h\""}, {"sha": "6ecd3042ee3f3a590b8ab51c609883ac90a29aa9", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"cfglayout.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\"\n #include \"langhooks.h\""}, {"sha": "87d5ae80596cda0c19f4a0e4debc9300f1f212bc", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optabs.h\"\n #include \"params.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\""}, {"sha": "b1650d2ee590f2c793a706d179234d3de4a14ad1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-vectorizer.h\"\n #include \"langhooks.h\"\n "}, {"sha": "b07f121f77d65aee5acc960618a817e36990b4a8", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ffc4195b245eecb574418f13f27b1f13d654e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=c59ffc4195b245eecb574418f13f27b1f13d654e", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"cfgloop.h\"\n #include \"tree-scalar-evolution.h\""}]}