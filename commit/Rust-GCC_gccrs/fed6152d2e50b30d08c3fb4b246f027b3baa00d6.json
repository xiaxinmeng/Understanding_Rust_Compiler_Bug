{"sha": "fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVkNjE1MmQyZTUwYjMwZDA4YzNmYjRiMjQ2ZjAyN2IzYmFhMDBkNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2008-06-09T01:56:08Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2008-06-09T01:56:08Z"}, "message": "df-scan.c (struct df_scan_problem_data): Remove the mw_link_pool alloc pool.\n\n2008-06-08  Steven Bosscher  <stevenb.gcc@gmail.com>\n\n\t* df-scan.c (struct df_scan_problem_data): Remove the\n\tmw_link_pool alloc pool.\n\t(df_scan_free_internal): Don't free it.\n\t(df_scan_alloc): Don't allocate it.\n\t* df.h (struct df_link): Update comment.\n\nFrom-SVN: r136576", "tree": {"sha": "5fe353dc2f26597874408385ad7576f1258cde26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fe353dc2f26597874408385ad7576f1258cde26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/comments", "author": null, "committer": null, "parents": [{"sha": "1a4322553b2f7617c4b147be0de3463a3ef698f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4322553b2f7617c4b147be0de3463a3ef698f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4322553b2f7617c4b147be0de3463a3ef698f3"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "bbc057f3110f0d05d4377940e6282976c9956821", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "patch": "@@ -1,3 +1,11 @@\n+2008-06-08  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\t* df-scan.c (struct df_scan_problem_data): Remove the\n+\tmw_link_pool alloc pool.\n+\t(df_scan_free_internal): Don't free it.\n+\t(df_scan_alloc): Don't allocate it.\n+\t* df.h (struct df_link): Update comment.\n+\n 2008-06-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* except.h: Correct checks for when SJLJ exceptions must be used."}, {"sha": "6a34bf77300abc6cc37ad19c176ec7f4ec1bb893", "filename": "gcc/df-scan.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "patch": "@@ -166,7 +166,6 @@ struct df_scan_problem_data\n   alloc_pool insn_pool;\n   alloc_pool reg_pool;\n   alloc_pool mw_reg_pool;\n-  alloc_pool mw_link_pool;\n   bitmap_obstack reg_bitmaps;\n   bitmap_obstack insn_bitmaps;\n };\n@@ -221,7 +220,6 @@ df_scan_free_internal (void)\n   free_alloc_pool (problem_data->insn_pool);\n   free_alloc_pool (problem_data->reg_pool);\n   free_alloc_pool (problem_data->mw_reg_pool);\n-  free_alloc_pool (problem_data->mw_link_pool);\n   bitmap_obstack_release (&problem_data->reg_bitmaps);\n   bitmap_obstack_release (&problem_data->insn_bitmaps);\n   free (df_scan->problem_data);\n@@ -312,9 +310,6 @@ df_scan_alloc (bitmap all_blocks ATTRIBUTE_UNUSED)\n   problem_data->mw_reg_pool \n     = create_alloc_pool (\"df_scan_mw_reg pool\", \n \t\t\t sizeof (struct df_mw_hardreg), block_size);\n-  problem_data->mw_link_pool \n-    = create_alloc_pool (\"df_scan_mw_link pool\", \n-\t\t\t sizeof (struct df_link), block_size);\n \n   bitmap_obstack_initialize (&problem_data->reg_bitmaps);\n   bitmap_obstack_initialize (&problem_data->insn_bitmaps);"}, {"sha": "bd4d7ff7aca7cb8212a950d9aa133cc536be262b", "filename": "gcc/df.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed6152d2e50b30d08c3fb4b246f027b3baa00d6/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=fed6152d2e50b30d08c3fb4b246f027b3baa00d6", "patch": "@@ -409,9 +409,8 @@ struct df_ref_extract\n   enum machine_mode mode;\n };\n \n-/* These links are used for two purposes:\n-   1) def-use or use-def chains. \n-   2) Multiword hard registers that underly a single hardware register.  */\n+/* These links are used for ref-ref chains.  Currently only DEF-USE and\n+   USE-DEF chains can be built by DF.  */\n struct df_link\n {\n   struct df_ref *ref;"}]}