{"sha": "659ba632e440280e8d61e1ae870e917765db5ae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5YmE2MzJlNDQwMjgwZThkNjFlMWFlODcwZTkxNzc2NWRiNWFlNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@torsion.usersys.redhat.com", "date": "2020-11-06T22:38:00Z"}, "committer": {"name": "Jeff Law", "email": "law@torsion.usersys.redhat.com", "date": "2020-11-06T22:38:00Z"}, "message": "Fix stack pointer handling in ms_hook_prologue functions for i386 target.\n\ngcc/\n\tPR target/91489\n\t* config/i386/i386.md (simple_return): Also check\n\tfor ms_hook_prologue function attribute.\n\t* config/i386/i386.c (ix86_can_use_return_insn_p):\n\tAlso check for ms_hook_prologue function attribute.\n\t* config/i386/i386-protos.h (ix86_function_ms_hook_prologue): Declare.\n\ngcc/testsuite\n\tPR target/91489\n\t* gcc.target/i386/ms_hook_prologue.c: Expand testcase\n\tto reproduce PR target/91489 issue.", "tree": {"sha": "e26a7bc6f985ac3236c89b7d1d5252cde0094fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26a7bc6f985ac3236c89b7d1d5252cde0094fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/659ba632e440280e8d61e1ae870e917765db5ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659ba632e440280e8d61e1ae870e917765db5ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659ba632e440280e8d61e1ae870e917765db5ae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659ba632e440280e8d61e1ae870e917765db5ae5/comments", "author": null, "committer": null, "parents": [{"sha": "e5502ae72f784470019de5850017ad0c87ffacef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5502ae72f784470019de5850017ad0c87ffacef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5502ae72f784470019de5850017ad0c87ffacef"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "b70d598ce204ca373b8faf2e76d6fb1f998a6c75", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=659ba632e440280e8d61e1ae870e917765db5ae5", "patch": "@@ -26,6 +26,7 @@ extern bool ix86_handle_option (struct gcc_options *opts,\n /* Functions in i386.c */\n extern bool ix86_target_stack_probe (void);\n extern bool ix86_can_use_return_insn_p (void);\n+extern bool ix86_function_ms_hook_prologue (const_tree fn);\n extern void ix86_setup_frame_addresses (void);\n extern bool ix86_rip_relative_addr_p (struct ix86_address *parts);\n "}, {"sha": "4396f64e7cb3a1e06bcfd3338cb2034cd88c8142", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=659ba632e440280e8d61e1ae870e917765db5ae5", "patch": "@@ -5494,6 +5494,9 @@ symbolic_reference_mentioned_p (rtx op)\n bool\n ix86_can_use_return_insn_p (void)\n {\n+  if (ix86_function_ms_hook_prologue (current_function_decl))\n+    return false;\n+\n   if (ix86_function_naked (current_function_decl))\n     return false;\n "}, {"sha": "979e49d47232f67766e38da01a0759a664e823b9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=659ba632e440280e8d61e1ae870e917765db5ae5", "patch": "@@ -13662,10 +13662,13 @@\n ;; static chain pointer - the first instruction has to be pushl %esi\n ;; and it can't be moved around, as we use alternate entry points\n ;; in that case.\n+;; Also disallow for ms_hook_prologue functions which have frame\n+;; pointer set up in function label which is correctly handled in\n+;; ix86_expand_{prologue|epligoue}() only.\n \n (define_expand \"simple_return\"\n   [(simple_return)]\n-  \"!TARGET_SEH && !ix86_static_chain_on_stack\"\n+  \"!TARGET_SEH && !ix86_static_chain_on_stack && !ix86_function_ms_hook_prologue (cfun->decl)\"\n {\n   if (crtl->args.pops_args)\n     {"}, {"sha": "12e54c0e4ad15e18d6727ddd2285eb80db068900", "filename": "gcc/testsuite/gcc.target/i386/ms_hook_prologue.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fms_hook_prologue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659ba632e440280e8d61e1ae870e917765db5ae5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fms_hook_prologue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fms_hook_prologue.c?ref=659ba632e440280e8d61e1ae870e917765db5ae5", "patch": "@@ -4,6 +4,8 @@\n /* { dg-require-effective-target ms_hook_prologue } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n+#include <stdio.h>\n+\n int __attribute__ ((__ms_hook_prologue__)) foo ()\n {\n   unsigned char *ptr = (unsigned char *) foo;\n@@ -32,7 +34,16 @@ int __attribute__ ((__ms_hook_prologue__)) foo ()\n   return 0;\n }\n \n+unsigned int __attribute__ ((noinline, __ms_hook_prologue__)) test_func()\n+{\n+  static int value;\n+\n+  if (value++) puts(\"\");\n+\n+  return 0;\n+}\n+\n int main ()\n {\n-  return foo();\n+  return foo() || test_func();\n }"}]}