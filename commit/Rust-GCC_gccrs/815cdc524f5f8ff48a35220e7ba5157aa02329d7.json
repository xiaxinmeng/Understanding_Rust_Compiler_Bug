{"sha": "815cdc524f5f8ff48a35220e7ba5157aa02329d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE1Y2RjNTI0ZjVmOGZmNDhhMzUyMjBlN2JhNTE1N2FhMDIzMjlkNw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-01-22T09:30:07Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-01-22T09:30:07Z"}, "message": "Use alternate crs if cr0 not available\n\nFrom-SVN: r24821", "tree": {"sha": "813a6d004c376494f5d1187fed4e4ca0536a731d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/813a6d004c376494f5d1187fed4e4ca0536a731d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/815cdc524f5f8ff48a35220e7ba5157aa02329d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815cdc524f5f8ff48a35220e7ba5157aa02329d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815cdc524f5f8ff48a35220e7ba5157aa02329d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815cdc524f5f8ff48a35220e7ba5157aa02329d7/comments", "author": null, "committer": null, "parents": [{"sha": "d062c304793f90b02d54f3bfa44584c829bfdb66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d062c304793f90b02d54f3bfa44584c829bfdb66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d062c304793f90b02d54f3bfa44584c829bfdb66"}], "stats": {"total": 5335, "additions": 4173, "deletions": 1162}, "files": [{"sha": "4bced4aca13e8c5a7d3b377866daa540a1dbb262", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=815cdc524f5f8ff48a35220e7ba5157aa02329d7", "patch": "@@ -1,3 +1,28 @@\n+1999-01-22  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.h (CR0_REGNO_P): New macro to test if cr0.\n+\t(CR_REGNO_NOT_CR0_P): New macro to test if cr, but not cr0.\n+\t(PREDICATE_CODES): Add cc_reg_not_cr0_operand.\n+\t(cc_reg_not_cr0_operand): Add declaration.\n+\n+\t* rs6000.c (cc_reg_not_cr0_operand): Return true if register is a\n+\tpseudo register, or a control register that is not CR0.\n+\n+\t* rs6000.md (all combiner patterns building . instructions): For\n+\tall `.' instructions that do something and set cr0, add an\n+\talternative that does the operation, and then sets a different\n+\tflag, in order to avoid using the costly mcrf instruction and also\n+\tallow cr0 to be clobbered in asm statements.  Also fix a few\n+\tpatterns that used the wrong register.\n+\n+\t* rs6000.h (rs6000_cpu_select): Make string, names be const char *.\n+\t(rs6000_debug_name): Make const char *, not char *.\n+\n+\t* sysv4.h (rs6000_{abi,sdata}_name): Make const char *.\n+\t\n+\t* rs6000.c (rs6000_{debug,abi,sdata}_name): Make const char *.\n+\t(rs6000_select): Use const char * in casts.\n+\n Fri Jan 22 07:43:01 1999  Jeffrey A Law  (law@cygnus.com)\n \t\n \t* Makefile.in (gcc_tooldir): Move before first reference."}, {"sha": "113e48152a6ba3d3b6541a75fceb91f7e6a71352", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=815cdc524f5f8ff48a35220e7ba5157aa02329d7", "patch": "@@ -54,10 +54,10 @@ extern int profile_block_flag;\n enum processor_type rs6000_cpu;\n struct rs6000_cpu_select rs6000_select[3] =\n {\n-  /* switch\tname,\t\t\ttune\tarch */\n-  { (char *)0,\t\"--with-cpu=\",\t\t1,\t1 },\n-  { (char *)0,\t\"-mcpu=\",\t\t1,\t1 },\n-  { (char *)0,\t\"-mtune=\",\t\t1,\t0 },\n+  /* switch\t\tname,\t\t\ttune\tarch */\n+  { (const char *)0,\t\"--with-cpu=\",\t\t1,\t1 },\n+  { (const char *)0,\t\"-mcpu=\",\t\t1,\t1 },\n+  { (const char *)0,\t\"-mtune=\",\t\t1,\t0 },\n };\n \n /* Set to non-zero by \"fix\" operation to indicate that itrunc and\n@@ -84,13 +84,13 @@ int rs6000_pic_labelno;\n int rs6000_pic_func_labelno;\n \n /* Which abi to adhere to */\n-char *rs6000_abi_name = RS6000_ABI_NAME;\n+const char *rs6000_abi_name = RS6000_ABI_NAME;\n \n /* Semantics of the small data area */\n enum rs6000_sdata_type rs6000_sdata = SDATA_DATA;\n \n /* Which small data model to use */\n-char *rs6000_sdata_name = (char *)0;\n+const char *rs6000_sdata_name = (char *)0;\n #endif\n \n /* Whether a System V.4 varargs area was created.  */\n@@ -105,7 +105,7 @@ int rs6000_fpmem_offset;\n int rs6000_fpmem_size;\n \n /* Debug flags */\n-char *rs6000_debug_name;\n+const char *rs6000_debug_name;\n int rs6000_debug_stack;\t\t/* debug stack applications */\n int rs6000_debug_arg;\t\t/* debug argument handling */\n \n@@ -559,6 +559,20 @@ cc_reg_operand (op, mode)\n \t      || CR_REGNO_P (REGNO (op))));\n }\n \n+/* Returns 1 if OP is either a pseudo-register or a register denoting a\n+   CR field that isn't CR0.  */\n+\n+int\n+cc_reg_not_cr0_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  return (register_operand (op, mode)\n+\t  && (GET_CODE (op) != REG\n+\t      || REGNO (op) >= FIRST_PSEUDO_REGISTER\n+\t      || CR_REGNO_NOT_CR0_P (REGNO (op))));\n+}\n+\n /* Returns 1 if OP is either a constant integer valid for a D-field or a\n    non-special register.  If a register, it must be in the proper mode unless\n    MODE is VOIDmode.  */"}, {"sha": "ab830d85b7696678b041b29191922b8f00221bbe", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=815cdc524f5f8ff48a35220e7ba5157aa02329d7", "patch": "@@ -461,16 +461,16 @@ extern enum processor_type rs6000_cpu;\n /* rs6000_select[0] is reserved for the default cpu defined via --with-cpu */\n struct rs6000_cpu_select\n {\n-  char *string;\n-  char *name;\n+  const char *string;\n+  const char *name;\n   int set_tune_p;\n   int set_arch_p;\n };\n \n extern struct rs6000_cpu_select rs6000_select[];\n \n /* Debug support */\n-extern char *rs6000_debug_name;\t\t/* Name for -mdebug-xxxx option */\n+extern const char *rs6000_debug_name;\t\t/* Name for -mdebug-xxxx option */\n extern int rs6000_debug_stack;\t\t/* debug stack applications */\n extern int rs6000_debug_arg;\t\t/* debug argument handling */\n \n@@ -765,6 +765,12 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n /* True if register is a condition register.  */\n #define CR_REGNO_P(N) ((N) >= 68 && (N) <= 75)\n \n+/* True if register is condition register 0.  */\n+#define CR0_REGNO_P(N) ((N) == 68)\n+\n+/* True if register is a condition register, but not cr0.  */\n+#define CR_REGNO_NOT_CR0_P(N) ((N) >= 69 && (N) <= 75)\n+\n /* True if register is an integer register.  */\n #define INT_REGNO_P(N) ((N) <= 31 || (N) == 67)\n \n@@ -3208,6 +3214,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   {\"non_short_cint_operand\", {CONST_INT}},\t\t\t\\\n   {\"gpc_reg_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"cc_reg_operand\", {SUBREG, REG}},\t\t\t\t\\\n+  {\"cc_reg_not_cr0_operand\", {SUBREG, REG}},\t\t\t\\\n   {\"reg_or_short_operand\", {SUBREG, REG, CONST_INT}}, \t\t\\\n   {\"reg_or_neg_short_operand\", {SUBREG, REG, CONST_INT}},\t\\\n   {\"reg_or_u_short_operand\", {SUBREG, REG, CONST_INT}}, \t\\\n@@ -3272,6 +3279,7 @@ extern int u_short_cint_operand ();\n extern int non_short_cint_operand ();\n extern int gpc_reg_operand ();\n extern int cc_reg_operand ();\n+extern int cc_reg_not_cr0_operand ();\n extern int reg_or_short_operand ();\n extern int reg_or_neg_short_operand ();\n extern int reg_or_u_short_operand ();"}, {"sha": "fc8c8c9ccd4418bfa224788a5693a23239367cbc", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4113, "deletions": 1149, "changes": 5262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=815cdc524f5f8ff48a35220e7ba5157aa02329d7"}, {"sha": "e945e80d197388b2eea1766cbdf43c69d241c61e", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815cdc524f5f8ff48a35220e7ba5157aa02329d7/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=815cdc524f5f8ff48a35220e7ba5157aa02329d7", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -107,8 +107,8 @@ extern enum rs6000_sdata_type rs6000_sdata;\n #define RS6000_ABI_NAME \"sysv\"\n \n /* Strings provided by SUBTARGET_OPTIONS */\n-extern char *rs6000_abi_name;\n-extern char *rs6000_sdata_name;\n+extern const char *rs6000_abi_name;\n+extern const char *rs6000_sdata_name;\n \n #define SUBTARGET_OPTIONS\t\t\t\t\t\t\\\n   { \"call-\",  &rs6000_abi_name},\t\t\t\t\t\\"}]}