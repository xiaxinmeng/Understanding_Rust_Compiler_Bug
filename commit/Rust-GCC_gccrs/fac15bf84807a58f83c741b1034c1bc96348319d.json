{"sha": "fac15bf84807a58f83c741b1034c1bc96348319d", "node_id": "C_kwDOANBUbNoAKGZhYzE1YmY4NDgwN2E1OGY4M2M3NDFiMTAzNGMxYmM5NjM0ODMxOWQ", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-02-17T18:59:51Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-02-17T18:59:51Z"}, "message": "rs6000: Workaround for new ifcvt behavior [PR104335].\n\nSince r12-6747-gaa8cfe785953a0 ifcvt passes a \"cc comparison\"\ni.e. the representation of the result of a comparison to the\nbackend.  rs6000_emit_int_cmove () is not prepared to handle this.\nTherefore, this patch makes it return false in such a case.\n\n\tPR target/104335\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.cc (rs6000_emit_int_cmove): Return false\n\tif the expected comparison's first operand is of mode MODE_CC.", "tree": {"sha": "e3311a0966d4562eaa82a4a81ba7d2d918c7e7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3311a0966d4562eaa82a4a81ba7d2d918c7e7c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac15bf84807a58f83c741b1034c1bc96348319d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac15bf84807a58f83c741b1034c1bc96348319d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac15bf84807a58f83c741b1034c1bc96348319d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac15bf84807a58f83c741b1034c1bc96348319d/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a118c209fcbb73c3439ca70fb233a5dc87daf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a118c209fcbb73c3439ca70fb233a5dc87daf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a118c209fcbb73c3439ca70fb233a5dc87daf7"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "32a13cdaf1fd9fd4991ee50a9391df6584d520a4", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac15bf84807a58f83c741b1034c1bc96348319d/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac15bf84807a58f83c741b1034c1bc96348319d/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=fac15bf84807a58f83c741b1034c1bc96348319d", "patch": "@@ -16215,6 +16215,12 @@ rs6000_emit_int_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n   if (mode != SImode && (!TARGET_POWERPC64 || mode != DImode))\n     return false;\n \n+  /* PR104335: We now need to expect CC-mode \"comparisons\"\n+     coming from ifcvt.  The following code expects proper\n+     comparisons so better abort here.  */\n+  if (GET_MODE_CLASS (GET_MODE (XEXP (op, 0))) == MODE_CC)\n+    return false;\n+\n   /* We still have to do the compare, because isel doesn't do a\n      compare, it just looks at the CRx bits set by a previous compare\n      instruction.  */"}]}