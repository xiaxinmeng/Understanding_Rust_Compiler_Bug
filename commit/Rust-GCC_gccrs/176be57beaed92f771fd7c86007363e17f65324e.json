{"sha": "176be57beaed92f771fd7c86007363e17f65324e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2YmU1N2JlYWVkOTJmNzcxZmQ3Yzg2MDA3MzYzZTE3ZjY1MzI0ZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-07-12T09:29:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-07-12T09:29:26Z"}, "message": "expr.c (expand_java_return): RETURN_EXPR has void type.\n\n2007-07-12  Richard Guenther  <rguenther@suse.de>\n\n\t* expr.c (expand_java_return): RETURN_EXPR has void type.\n\t(build_jni_stub): Likewise.  Use a comparison against zero\n\tfor null-pointer test in COND_EXPR.\n\t(build_field_ref): Build POINTER_PLUS_EXPR with correct\n\ttype.  Convert result instead.\n\t(build_invokevirtual): Likewise.\n\nFrom-SVN: r126574", "tree": {"sha": "65d095d6a08cf82cda8ea486135787036289c7f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d095d6a08cf82cda8ea486135787036289c7f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/176be57beaed92f771fd7c86007363e17f65324e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176be57beaed92f771fd7c86007363e17f65324e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/176be57beaed92f771fd7c86007363e17f65324e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176be57beaed92f771fd7c86007363e17f65324e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "e05b4df365f031f94b4f042d674876c0874b9a31", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/176be57beaed92f771fd7c86007363e17f65324e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/176be57beaed92f771fd7c86007363e17f65324e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=176be57beaed92f771fd7c86007363e17f65324e", "patch": "@@ -1,3 +1,12 @@\n+2007-07-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* expr.c (expand_java_return): RETURN_EXPR has void type.\n+\t(build_jni_stub): Likewise.  Use a comparison against zero\n+\tfor null-pointer test in COND_EXPR.\n+\t(build_field_ref): Build POINTER_PLUS_EXPR with correct\n+\ttype.  Convert result instead.\n+\t(build_invokevirtual): Likewise.\n+\n 2007-07-09  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR 32617"}, {"sha": "81bf8bd085c89ac314a739ffe52c3eb440cada2f", "filename": "gcc/java/expr.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/176be57beaed92f771fd7c86007363e17f65324e/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/176be57beaed92f771fd7c86007363e17f65324e/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=176be57beaed92f771fd7c86007363e17f65324e", "patch": "@@ -1286,7 +1286,7 @@ expand_java_return (tree type)\n \tretval = build1(NOP_EXPR, TREE_TYPE(res), retval);\n       \n       TREE_SIDE_EFFECTS (retval) = 1;\n-      java_add_stmt (build1 (RETURN_EXPR, TREE_TYPE (retval), retval));\n+      java_add_stmt (build1 (RETURN_EXPR, void_type_node, retval));\n     }\n }\n \n@@ -1744,8 +1744,10 @@ build_field_ref (tree self_value, tree self_class, tree name)\n \t  self_value = java_check_reference (self_value, check);\n \t  address \n \t    = fold_build2 (POINTER_PLUS_EXPR, \n-\t\t\t   build_pointer_type (TREE_TYPE (field_decl)),\n+\t\t\t   TREE_TYPE (self_value),\n \t\t\t   self_value, field_offset);\n+\t  address = fold_convert (build_pointer_type (TREE_TYPE (field_decl)),\n+\t\t\t\t  address);\n \t  return fold_build1 (INDIRECT_REF, TREE_TYPE (field_decl), address);\n \t}\n \n@@ -2332,13 +2334,16 @@ build_invokevirtual (tree dtable, tree method, tree special)\n \t\t\t\t   size_int (TARGET_VTABLE_USES_DESCRIPTORS));\n     }\n \n-  func = fold_build2 (POINTER_PLUS_EXPR, nativecode_ptr_ptr_type_node, dtable,\n+  func = fold_build2 (POINTER_PLUS_EXPR, TREE_TYPE (dtable), dtable,\n \t\t      convert (sizetype, method_index));\n \n   if (TARGET_VTABLE_USES_DESCRIPTORS)\n     func = build1 (NOP_EXPR, nativecode_ptr_type_node, func);\n   else\n-    func = build1 (INDIRECT_REF, nativecode_ptr_type_node, func);\n+    {\n+      func = fold_convert (nativecode_ptr_ptr_type_node, func);\n+      func = build1 (INDIRECT_REF, nativecode_ptr_type_node, func);\n+    }\n \n   return func;\n }\n@@ -2715,7 +2720,9 @@ build_jni_stub (tree method)\n   jni_func_type = build_pointer_type (tem);\n \n   jnifunc = build3 (COND_EXPR, ptr_type_node,\n-\t\t    meth_var, meth_var,\n+\t\t    build2 (NE_EXPR, boolean_type_node,\n+\t\t\t    meth_var, build_int_cst (TREE_TYPE (meth_var), 0)),\n+\t\t    meth_var,\n \t\t    build2 (MODIFY_EXPR, ptr_type_node, meth_var,\n \t\t\t    build_call_nary (ptr_type_node,\n \t\t\t\t\t     build_address_of\n@@ -2777,7 +2784,7 @@ build_jni_stub (tree method)\n     }\n \n   body = build2 (COMPOUND_EXPR, void_type_node, body,\n-\t\t build1 (RETURN_EXPR, res_type, res_var));\n+\t\t build1 (RETURN_EXPR, void_type_node, res_var));\n   TREE_SIDE_EFFECTS (body) = 1;\n   \n   /* Prepend class initialization for static methods reachable from"}]}