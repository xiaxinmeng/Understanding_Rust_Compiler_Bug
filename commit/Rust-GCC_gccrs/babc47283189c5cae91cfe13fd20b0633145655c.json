{"sha": "babc47283189c5cae91cfe13fd20b0633145655c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiYzQ3MjgzMTg5YzVjYWU5MWNmZTEzZmQyMGIwNjMzMTQ1NjU1Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-06-21T15:27:29Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-06-21T15:27:29Z"}, "message": "sol2.h (TARGET_OS_CPP_BUILTINS): Define __STDC_VERSION__=199901L, _XOPEN_SOURCE=600 for C++.\n\n\tgcc:\n\t* config/sol2.h (TARGET_OS_CPP_BUILTINS): Define\n\t__STDC_VERSION__=199901L, _XOPEN_SOURCE=600 for C++.\n\n\tfixincludes:\n\t* inclhack.def (solaris__restrict, solaris_complex_cxx): New fixes\n\t* fixincl.x: Regenerate.\n\t* tests/base/complex.h [SOLARIS_COMPLEX_CXX_CHECK]: New test.\n\t* tests/base/sys/feature_tests.h: New file.\n\n\tlibstdc++-v3:\n\t* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:\n\tAdd *-*-solaris2.1[0-9]* to dg-xfail-if, dg-excess-errors.\n\nFrom-SVN: r161089", "tree": {"sha": "edfae00a397941520330c85dfbe0358fbc178307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edfae00a397941520330c85dfbe0358fbc178307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/babc47283189c5cae91cfe13fd20b0633145655c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babc47283189c5cae91cfe13fd20b0633145655c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/babc47283189c5cae91cfe13fd20b0633145655c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babc47283189c5cae91cfe13fd20b0633145655c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "602a7ec025a239f80d9857fc4c80dfd8b961910e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602a7ec025a239f80d9857fc4c80dfd8b961910e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/602a7ec025a239f80d9857fc4c80dfd8b961910e"}], "stats": {"total": 182, "additions": 174, "deletions": 8}, "files": [{"sha": "11c4e695ea1ff19e2579acf530c78ecca8ccde05", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -1,3 +1,10 @@\n+2010-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* inclhack.def (solaris__restrict, solaris_complex_cxx): New fixes\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/complex.h [SOLARIS_COMPLEX_CXX_CHECK]: New test.\n+\t* tests/base/sys/feature_tests.h: New file.\n+\n 2010-06-03  Joern Rennecke <joern.rennecke@embecosm.com>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "88ad8434020a44c8632dd095f5ceecc8c9518a66", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 91, "deletions": 5, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday April  7, 2010 at 05:11:50 PM MEST\n+ * It has been AutoGen-ed  Friday May  7, 2010 at 02:41:29 PM MEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Apr  7 17:11:50 MEST 2010\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri May  7 14:41:29 MEST 2010\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 205 fixup descriptions.\n+ * This file contains 207 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -6114,6 +6114,47 @@ static const char* apzRs6000_ParamPatch[] = {\n     \"rename(const char *_old, const char *_new)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris___Restrict fix\n+ */\n+tSCC zSolaris___RestrictName[] =\n+     \"solaris___restrict\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris___RestrictList[] =\n+  \"sys/feature_tests.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzSolaris___RestrictMachs[] = {\n+        \"*-*-solaris2*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris___RestrictSelect0[] =\n+       \"#define[ \\t]*_RESTRICT_KYWD[ \\t]*restrict\";\n+\n+#define    SOLARIS___RESTRICT_TEST_CT  1\n+static tTestDesc aSolaris___RestrictTests[] = {\n+  { TT_EGREP,    zSolaris___RestrictSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris___Restrict\n+ */\n+static const char* apzSolaris___RestrictPatch[] = {\n+    \"format\",\n+    \"#ifdef __cplusplus\\n\\\n+#define\\t_RESTRICT_KYWD\\t__restrict\\n\\\n+#else\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Complex fix\n@@ -6153,6 +6194,39 @@ static const char* apzSolaris_ComplexPatch[] = { sed_cmd_z,\n     \"-e\", \"s/#define[ \\t]I[ \\t]\\\\{1,\\\\}_Imaginary_I/#define\\tI\\t\\t_Complex_I/\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Complex_Cxx fix\n+ */\n+tSCC zSolaris_Complex_CxxName[] =\n+     \"solaris_complex_cxx\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_Complex_CxxList[] =\n+  \"complex.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzSolaris_Complex_CxxMachs[] = {\n+        \"*-*-solaris2.*\",\n+        (const char*)NULL };\n+#define SOLARIS_COMPLEX_CXX_TEST_CT  0\n+#define aSolaris_Complex_CxxTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Complex_Cxx\n+ */\n+static const char* apzSolaris_Complex_CxxPatch[] = { sed_cmd_z,\n+    \"-e\", \"/#if[ \\t]*!defined(__cplusplus)/c#ifdef\\t__cplusplus\\\\\\n\\\n+extern \\\"C\\\" {\\\\\\n\\\n+#endif\",\n+    \"-e\", \"/#endif[ \\t]*\\\\/\\\\* !defined(__cplusplus) \\\\*\\\\//c#ifdef\\t__cplusplus\\\\\\n\\\n+}\\\\\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Math_1 fix\n@@ -8358,9 +8432,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          245\n+#define REGEX_COUNT          246\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            205\n+#define FIX_COUNT            207\n \n /*\n  *  Enumerate the fixes\n@@ -8516,7 +8590,9 @@ typedef enum {\n     RS6000_DOUBLE_FIXIDX,\n     RS6000_FCHMOD_FIXIDX,\n     RS6000_PARAM_FIXIDX,\n+    SOLARIS___RESTRICT_FIXIDX,\n     SOLARIS_COMPLEX_FIXIDX,\n+    SOLARIS_COMPLEX_CXX_FIXIDX,\n     SOLARIS_MATH_1_FIXIDX,\n     SOLARIS_MATH_2_FIXIDX,\n     SOLARIS_MATH_3_FIXIDX,\n@@ -9324,11 +9400,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      RS6000_PARAM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aRs6000_ParamTests,   apzRs6000_ParamPatch, 0 },\n \n+  {  zSolaris___RestrictName,    zSolaris___RestrictList,\n+     apzSolaris___RestrictMachs,\n+     SOLARIS___RESTRICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris___RestrictTests,   apzSolaris___RestrictPatch, 0 },\n+\n   {  zSolaris_ComplexName,    zSolaris_ComplexList,\n      apzSolaris_ComplexMachs,\n      SOLARIS_COMPLEX_TEST_CT, FD_MACH_ONLY,\n      aSolaris_ComplexTests,   apzSolaris_ComplexPatch, 0 },\n \n+  {  zSolaris_Complex_CxxName,    zSolaris_Complex_CxxList,\n+     apzSolaris_Complex_CxxMachs,\n+     SOLARIS_COMPLEX_CXX_TEST_CT, FD_MACH_ONLY,\n+     aSolaris_Complex_CxxTests,   apzSolaris_Complex_CxxPatch, 0 },\n+\n   {  zSolaris_Math_1Name,    zSolaris_Math_1List,\n      apzSolaris_Math_1Machs,\n      SOLARIS_MATH_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "16f36a1e74abd6d7f7084f35eca70ea2ae5e9202", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -3248,6 +3248,23 @@ fix = {\n };\n \n \n+/*\n+ *  Solaris 10+ <sys/feature_tests.h> defines _RESTRICT_KYWD as restrict\n+ *  for C99.  This is wrong for C++, which needs many C99 features, but\n+ *  only supports __restrict.\n+ */\n+fix = {\n+    hackname  = solaris___restrict;\n+    files     = sys/feature_tests.h;\n+    select    = \"#define[ \\t]*_RESTRICT_KYWD[ \\t]*restrict\";\n+    mach      = \"*-*-solaris2*\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __cplusplus\\n#define\\t_RESTRICT_KYWD\\t__restrict\\n\"\n+    \t        \"#else\\n%0\\n#endif\";\n+    test_text = \"#define\t_RESTRICT_KYWD\trestrict\";\n+};\n+\n+\n /*\n  * Solaris 10+ complex.h defines _Complex_I and _Imaginary_I in terms of\n  * themselves, which are Sun Studio compiler intrinsics.  Remove _Imaginary_I\n@@ -3272,6 +3289,23 @@ fix = {\n };\n \n \n+/*\n+ * Solaris 10+ <complex.h> is wrapped in #ifndef __cplusplus.  Wrap in\n+ * extern \"C\" instead so libstdc++ can use it.\n+ */\n+fix = {\n+    hackname  = solaris_complex_cxx;\n+    mach      = \"*-*-solaris2.*\";\n+    files     = complex.h;\n+    sed\t      = \"/#if[ \\t]*!defined(__cplusplus)/c\"\n+    \t\t\"#ifdef\\t__cplusplus\\\\\\nextern \\\"C\\\" {\\\\\\n#endif\";\n+    sed\t      = \"/#endif[ \\t]*\\\\/\\\\* !defined(__cplusplus) \\\\*\\\\//c\"\n+\t\t\"#ifdef\\t__cplusplus\\\\\\n}\\\\\\n#endif\";\n+    test_text = \"#if !defined(__cplusplus)\\n\"\n+\t\t\"#endif\t/* !defined(__cplusplus) */\";\n+};\n+\n+\n /*\n  * Sun Solaris 10 defines several C99 math macros in terms of\n  * builtins specific to the Studio compiler, in particular not"}, {"sha": "b3fe27aca2eabe265a1141841a02b73af967f957", "filename": "fixincludes/tests/base/complex.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ftests%2Fbase%2Fcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ftests%2Fbase%2Fcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcomplex.h?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -33,3 +33,13 @@\n #undef\tI\n #define\tI\t\t_Complex_I\n #endif  /* SOLARIS_COMPLEX_CHECK */\n+\n+\n+#if defined( SOLARIS_COMPLEX_CXX_CHECK )\n+#ifdef\t__cplusplus\n+extern \"C\" {\n+#endif\n+#ifdef\t__cplusplus\n+}\n+#endif\n+#endif  /* SOLARIS_COMPLEX_CXX_CHECK */"}, {"sha": "3bb803c288d9ce0061c7ff6fd427738b89477b14", "filename": "fixincludes/tests/base/sys/feature_tests.h", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ftests%2Fbase%2Fsys%2Ffeature_tests.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/fixincludes%2Ftests%2Fbase%2Fsys%2Ffeature_tests.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Ffeature_tests.h?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -0,0 +1,18 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/sys/feature_tests.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( SOLARIS___RESTRICT_CHECK )\n+#ifdef __cplusplus\n+#define\t_RESTRICT_KYWD\t__restrict\n+#else\n+#define\t_RESTRICT_KYWD\trestrict\n+#endif\n+#endif  /* SOLARIS___RESTRICT_CHECK */"}, {"sha": "68bb4f0aa61bfb2fd8d496e5228ea9c42222e6d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -1,3 +1,8 @@\n+2010-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sol2.h (TARGET_OS_CPP_BUILTINS): Define\n+\t__STDC_VERSION__=199901L, _XOPEN_SOURCE=600 for C++.\n+\n 2010-06-21  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.h (PTRDIFF_TYPE): Define."}, {"sha": "7b7ce2bfbab2a2a458d43d03f8808cd5ee0e8b94", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -99,7 +99,8 @@ along with GCC; see the file COPYING3.  If not see\n \t   library.  */\t\t\t\t\t\\\n \tif (c_dialect_cxx ())\t\t\t\t\\\n \t  {\t\t\t\t\t\t\\\n-\t    builtin_define (\"_XOPEN_SOURCE=500\");\t\\\n+\t    builtin_define (\"__STDC_VERSION__=199901L\");\\\n+\t    builtin_define (\"_XOPEN_SOURCE=600\");\t\\\n \t    builtin_define (\"_LARGEFILE_SOURCE=1\");\t\\\n \t    builtin_define (\"_LARGEFILE64_SOURCE=1\");\t\\\n \t    builtin_define (\"__EXTENSIONS__\");\t\t\\"}, {"sha": "332c22f28acd7cb137d54af06e3b01d6617c74c9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -1,3 +1,8 @@\n+2010-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:\n+\tAdd *-*-solaris2.1[0-9]* to dg-xfail-if, dg-excess-errors.\n+\n 2010-06-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Kai-Uwe Bux  <bux@kubux.net>\n "}, {"sha": "716dda51b1efb93ac1c5d64d69bfb97d57bec4c7", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babc47283189c5cae91cfe13fd20b0633145655c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babc47283189c5cae91cfe13fd20b0633145655c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc?ref=babc47283189c5cae91cfe13fd20b0633145655c", "patch": "@@ -20,8 +20,8 @@\n // { dg-do compile }\n // { dg-add-options no_pch }\n \n-// { dg-xfail-if \"\" { { *-*-linux* *-*-darwin* hppa*-*-hpux* } || { uclibc || newlib } } { \"*\" } { \"\" } }\n-// { dg-excess-errors \"\" { target { { *-*-linux* *-*-darwin* hppa*-*-hpux* } || { uclibc || newlib } } } }\n+// { dg-xfail-if \"\" { { *-*-linux* *-*-darwin* *-*-solaris2.1[0-9]* hppa*-*-hpux* } || { uclibc || newlib } } { \"*\" } { \"\" } }\n+// { dg-excess-errors \"\" { target { { *-*-linux* *-*-darwin* *-*-solaris2.1[0-9]* hppa*-*-hpux* } || { uclibc || newlib } } } }\n \n #include <math.h>\n "}]}