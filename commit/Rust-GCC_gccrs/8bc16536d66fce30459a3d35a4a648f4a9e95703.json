{"sha": "8bc16536d66fce30459a3d35a4a648f4a9e95703", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjMTY1MzZkNjZmY2UzMDQ1OWEzZDM1YTRhNjQ4ZjRhOWU5NTcwMw==", "commit": {"author": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2013-08-20T20:43:16Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2013-08-20T20:43:16Z"}, "message": "Fix logging to not use /tmp or the current directory...\n\nFix logging to not use /tmp or the current directory; get\nthe location for writing log files from an environment\nvariable; use secure getenv whenever possible.\n\nFrom-SVN: r201890", "tree": {"sha": "6edb95b379595c8ad4d073f2353e858eaa4d6488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6edb95b379595c8ad4d073f2353e858eaa4d6488"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bc16536d66fce30459a3d35a4a648f4a9e95703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc16536d66fce30459a3d35a4a648f4a9e95703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc16536d66fce30459a3d35a4a648f4a9e95703", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc16536d66fce30459a3d35a4a648f4a9e95703/comments", "author": null, "committer": null, "parents": [{"sha": "ddfee90670e69a72c4446d02e7b3936f4d74d147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddfee90670e69a72c4446d02e7b3936f4d74d147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddfee90670e69a72c4446d02e7b3936f4d74d147"}], "stats": {"total": 3983, "additions": 2434, "deletions": 1549}, "files": [{"sha": "567bd81e5b62a74b9ea84ff4872c532c9901b440", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703", "patch": "@@ -30,7 +30,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n # May be used by toolexeclibdir.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n-DEFS = \n+DEFS = @DEFS@\n AM_CPPFLAGS = -I$(top_srcdir)/../include\n AM_CFLAGS = $(XCFLAGS)\n AM_CCASFLAGS = $(XCFLAGS)"}, {"sha": "a1b71bfabcd1af446b7d6aae12af1981bfbdeefe", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703", "patch": "@@ -148,7 +148,7 @@ CXXCPP = @CXXCPP@\n CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n-DEFS = \n+DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@"}, {"sha": "6c50457fd227a4ab204e8de141e235717b4f791a", "filename": "libvtv/configure", "status": "modified", "additions": 2385, "deletions": 1536, "changes": 3921, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703"}, {"sha": "60350dfccc364c10d7788c603dc3bb2bed4d9609", "filename": "libvtv/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703", "patch": "@@ -91,6 +91,12 @@ esac\n AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n \n+AC_GNU_SOURCE\n+AC_CHECK_FUNCS([__secure_getenv])\n+\n+AC_GNU_SOURCE\n+AC_CHECK_FUNCS([secure_getenv])\n+\n # Check for programs.\n m4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\n m4_define([_AC_ARG_VAR_PRECIOUS],[])"}, {"sha": "1af000d8eb59301b41601898cb2363daf3bffcc0", "filename": "libvtv/vtv_rts.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fvtv_rts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fvtv_rts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_rts.cc?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703", "patch": "@@ -396,7 +396,7 @@ log_memory_protection_data (char *message)\n   static int log_fd = -1;\n \n   if (log_fd == -1)\n-    log_fd = __vtv_open_log (\"vtv_memory_protection_data_%d.log\");\n+    log_fd = __vtv_open_log (\"vtv_memory_protection_data.log\");\n \n   __vtv_add_to_log (log_fd, \"%s\", message);\n }"}, {"sha": "9cf4b08dc246287b5bfc55e0f8aed6e8d62e6217", "filename": "libvtv/vtv_utils.cc", "status": "modified", "additions": 40, "deletions": 10, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fvtv_utils.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc16536d66fce30459a3d35a4a648f4a9e95703/libvtv%2Fvtv_utils.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_utils.cc?ref=8bc16536d66fce30459a3d35a4a648f4a9e95703", "patch": "@@ -31,31 +31,61 @@\n #include <fcntl.h>\n #include <stdarg.h>\n #include <stdio.h>\n+#include <stdlib.h>\n #include <string.h>\n #include <execinfo.h>\n #include <unistd.h>\n #include <errno.h>\n \n #include \"vtv_utils.h\"\n \n-/* This is the directory into which all vtable verication log files\n-   get written.  */\n-static const char * const logs_dir = \"/tmp/vtv_logs\";\n-static int vtv_failures_log_fd = -1;\n-\n+#ifndef HAVE_SECURE_GETENV\n+#  ifdef HAVE___SECURE_GETENV\n+#    define secure_getenv __secure_getenv\n+#  else\n+#    define secure_getenv getenv\n+#  endif\n+#endif\n \n+static int vtv_failures_log_fd = -1;\n \n /* This function takes the NAME of a log file to open, attempts to\n    open it in the logs_dir directory, and returns the resulting file\n-   decriptor.  */\n+   descriptor.\n+\n+   This function first checks to see if the user has specifed (via\n+   the environment variable VTV_LOGS_DIR) a directory to use for the\n+   vtable verification logs.  If that fails, the function will open\n+   the logs in the current directory.\n+*/\n \n int\n __vtv_open_log (const char *name)\n {\n-  char log_name[256];\n-  snprintf (log_name, sizeof (log_name), \"%s/%s\", logs_dir, name);\n-  mkdir (logs_dir, S_IRWXU);\n-  int fd = open (log_name, O_WRONLY | O_APPEND | O_CREAT, S_IRWXU);\n+  char log_name[1024];\n+  char log_dir[512];\n+  uid_t user_id = getuid ();\n+  pid_t process_id = getpid ();\n+  char *logs_prefix;\n+  bool logs_dir_specified = false;\n+  int fd = -1;\n+\n+  logs_prefix = secure_getenv (\"VTV_LOGS_DIR\");\n+  if (logs_prefix && strlen (logs_prefix) > 0)\n+    {\n+      logs_dir_specified = true;\n+      mkdir (logs_prefix, S_IRWXU);\n+      snprintf (log_dir, sizeof (log_dir), \"%s/vtv_logs\", logs_prefix);\n+      mkdir (log_dir, S_IRWXU);\n+\n+      snprintf (log_name, sizeof (log_name), \"%s/%d_%d_%s\", log_dir,\n+\t\t(unsigned) user_id, (unsigned) process_id, name);\n+      fd = open (log_name, O_WRONLY | O_APPEND | O_CREAT | O_NOFOLLOW,\n+\t\t S_IRWXU);\n+    }\n+  else\n+    fd = dup (2);\n+\n   if (fd == -1)\n     __vtv_add_to_log (2, \"Cannot open log file %s %s\\n\", name,\n                     strerror (errno));"}]}