{"sha": "563092615ab6961f349792662c099d7484c728c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzMDkyNjE1YWI2OTYxZjM0OTc5MjY2MmMwOTlkNzQ4NGM3MjhjOA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-11-15T04:55:12Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-11-15T04:55:12Z"}, "message": "gcc.c (version_compare_spec_function): Use fatal() rather than abort().\n\n\t* gcc.c (version_compare_spec_function): Use fatal() rather than\n\tabort().\n\n\t* config/rs6000/darwin.h (DARWIN_CRT2_SPEC): New.\n\t(SUBTARGET_EXTRA_SPECS): Define %(darwin_crt2).\n\t* config/i386/darwin.h (SUBTARGET_EXTRA_SPECS): Define %(darwin_crt2)\n\tas empty.\n\t* config/darwin.h (STARTFILE_SPEC): Use %(darwin_crt2) to possibly\n\tlink in crt2.o.\n\t\n\t* config/darwin.h (REAL_LIBGCC_SPEC): Link in shared libgcc depending\n\ton -mmacosx-version-min setting.\n\nFrom-SVN: r106935", "tree": {"sha": "292390e5e3676cfcd404ea933f97d2045a1faea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292390e5e3676cfcd404ea933f97d2045a1faea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/563092615ab6961f349792662c099d7484c728c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563092615ab6961f349792662c099d7484c728c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563092615ab6961f349792662c099d7484c728c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563092615ab6961f349792662c099d7484c728c8/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9193863e4e5dab6abf00b8150bed4fbedd2d8641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9193863e4e5dab6abf00b8150bed4fbedd2d8641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9193863e4e5dab6abf00b8150bed4fbedd2d8641"}], "stats": {"total": 69, "additions": 49, "deletions": 20}, "files": [{"sha": "1447c7342f056de4cb9a7a9e86445a8259109248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563092615ab6961f349792662c099d7484c728c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563092615ab6961f349792662c099d7484c728c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=563092615ab6961f349792662c099d7484c728c8", "patch": "@@ -1,3 +1,18 @@\n+2005-11-14  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.c (version_compare_spec_function): Use fatal() rather than\n+\tabort().\n+\n+\t* config/rs6000/darwin.h (DARWIN_CRT2_SPEC): New.\n+\t(SUBTARGET_EXTRA_SPECS): Define %(darwin_crt2).\n+\t* config/i386/darwin.h (SUBTARGET_EXTRA_SPECS): Define %(darwin_crt2)\n+\tas empty.\n+\t* config/darwin.h (STARTFILE_SPEC): Use %(darwin_crt2) to possibly\n+\tlink in crt2.o.\n+\t\n+\t* config/darwin.h (REAL_LIBGCC_SPEC): Link in shared libgcc depending\n+\ton -mmacosx-version-min setting.\n+\n 2005-11-14  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 24840"}, {"sha": "5b17c34859b538acd52c75ec7953daf8ab73fee2", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=563092615ab6961f349792662c099d7484c728c8", "patch": "@@ -302,35 +302,43 @@ Boston, MA 02110-1301, USA.  */\n \n #define LIB_SPEC \"%{!static:-lSystem}\"\n \n-/* -dynamiclib implies -shared-libgcc just like -shared would on linux.  \n-   Support -mmacosx-version-min by supplying different (stub) libgcc_s.dylib\n-   libraries to link against.  */\n+/* Support -mmacosx-version-min by supplying different (stub) libgcc_s.dylib\n+   libraries to link against, and by not linking against libgcc_s on\n+   earlier-than-10.3.9.\n+\n+   Note that by default, -lgcc_eh is not linked against!  This is\n+   because in a future version of Darwin the EH frame information may\n+   be in a new format, or the fallback routine might be changed; if\n+   you want to explicitly link against the static version of those\n+   routines, because you know you don't need to unwind through system\n+   libraries, you need to explicitly say -static-libgcc.  \n+   \n+   If it is linked against, it has to be before -lgcc, because it may\n+   need symbols from -lgcc.  */\n #undef REAL_LIBGCC_SPEC\n-#define REAL_LIBGCC_SPEC\t\t\t\t\t\t\\\n-   \"%{static|static-libgcc:-lgcc -lgcc_eh;\t\t\t\t\\\n-      :%{shared-libgcc|Zdynamiclib\t\t\t\t\t\\\n-         :%:version-compare(!> 10.5 mmacosx-version-min= -lgcc_s.10.4)\t\\\n-          %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_s.10.5)\t\\\n-          -lgcc;\t\t\t\t\t\t\t\\\n-         :-lgcc -lgcc_eh}}\"\n-\n+#define REAL_LIBGCC_SPEC\t\t\t\t\t\t   \\\n+   \"%{static-libgcc|static: -lgcc_eh -lgcc;\t\t\t\t   \\\n+      shared-libgcc|fexceptions:\t\t\t\t\t   \\\n+       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_s.10.4)\t   \\\n+       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_s.10.5)\t   \\\n+       -lgcc;\t\t\t\t\t\t\t\t   \\\n+      :%:version-compare(>< 10.3.9 10.5 mmacosx-version-min= -lgcc_s.10.4) \\\n+       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_s.10.5)\t   \\\n+       -lgcc}\"\n+\t\t\t \n /* We specify crt0.o as -lcrt0.o so that ld will search the library path.  */\n-/* We don't want anything to do with crt2.o in the 64-bit case;\n-   testing the PowerPC-specific -m64 flag here is a little irregular,\n-   but it's overkill to make copies of this spec for each target\n-   arch.  */\n \n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC  \\\n   \"%{!Zdynamiclib:%{Zbundle:%{!static:-lbundle1.o}} \\\n      %{!Zbundle:%{pg:%{static:-lgcrt0.o} \\\n                      %{!static:%{object:-lgcrt0.o} \\\n                                %{!object:%{preload:-lgcrt0.o} \\\n-                                 %{!preload:-lgcrt1.o %{!m64: crt2.o%s}}}}} \\\n+                                 %{!preload:-lgcrt1.o %(darwin_crt2)}}}} \\\n                 %{!pg:%{static:-lcrt0.o} \\\n                       %{!static:%{object:-lcrt0.o} \\\n                                 %{!object:%{preload:-lcrt0.o} \\\n-                                  %{!preload:-lcrt1.o %{!m64: crt2.o%s}}}}}}}\"\n+                                  %{!preload:-lcrt1.o %(darwin_crt2)}}}}}}\"\n \n /* The native Darwin linker doesn't necessarily place files in the order\n    that they're specified on the link line.  Thus, it is pointless"}, {"sha": "899723398554a0b713a2fa2aecacb85dd4999a9b", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=563092615ab6961f349792662c099d7484c728c8", "patch": "@@ -50,6 +50,7 @@ Boston, MA 02110-1301, USA.  */\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\\\n   { \"darwin_arch\", \"i386\" },\t\t\t\t\t\\\n+  { \"darwin_crt2\", \"\" },\t\t\t\t\t\\\n   { \"darwin_subarch\", \"i386\" },\n \n /* Use the following macro for any Darwin/x86-specific command-line option"}, {"sha": "d1635ff38f000c1efdc014abd3c421b22dacf37d", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563092615ab6961f349792662c099d7484c728c8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=563092615ab6961f349792662c099d7484c728c8", "patch": "@@ -124,9 +124,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n    mcpu=G5:ppc970;\t\t\t\t\\\n    :ppc}}\"\n \n+/* crt2.o is at least partially required for 10.3.x and earlier.  */\n+#define DARWIN_CRT2_SPEC \\\n+  \"%{!m64:%:version-compare(!> 10.4 mmacosx-version-min= crt2.o%s)}\"\n+\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\\\n   { \"darwin_arch\", \"%{m64:ppc64;:ppc}\" },\t\\\n+  { \"darwin_crt2\", DARWIN_CRT2_SPEC },\t\t\\\n   { \"darwin_subarch\", DARWIN_SUBARCH_SPEC },\n \n /* Output a .machine directive.  */"}, {"sha": "a644d088671f54856117ffcf61547d8ee31595f5", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563092615ab6961f349792662c099d7484c728c8/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563092615ab6961f349792662c099d7484c728c8/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=563092615ab6961f349792662c099d7484c728c8", "patch": "@@ -7699,13 +7699,13 @@ version_compare_spec_function (int argc, const char **argv)\n   bool result;\n \n   if (argc < 3)\n-    abort ();\n+    fatal (\"too few arguments to %%:version-compare\");\n   if (argv[0][0] == '\\0')\n     abort ();\n   if ((argv[0][1] == '<' || argv[0][1] == '>') && argv[0][0] != '!')\n     nargs = 2;\n   if (argc != nargs + 3)\n-    abort ();\n+    fatal (\"too many arguments to %%:version-compare\");\n \n   switch_len = strlen (argv[nargs + 1]);\n   for (i = 0; i < n_switches; i++)\n@@ -7746,7 +7746,7 @@ version_compare_spec_function (int argc, const char **argv)\n       break;\n \n     default:\n-      abort ();\n+      fatal (\"unknown operator %qs in %%:version-compare\", argv[0]);\n     }\n   if (! result)\n     return NULL;"}]}