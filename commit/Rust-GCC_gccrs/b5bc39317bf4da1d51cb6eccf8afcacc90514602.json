{"sha": "b5bc39317bf4da1d51cb6eccf8afcacc90514602", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViYzM5MzE3YmY0ZGExZDUxY2I2ZWNjZjhhZmNhY2M5MDUxNDYwMg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-03-05T01:54:00Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-08-30T19:58:25Z"}, "message": "rs6000: Darwin builtin support\n\n2021-03-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/darwin.h (SUBTARGET_INIT_BUILTINS): Use the new\n\tdecl when new_builtins_are_live.\n\t* config/rs6000/rs6000-builtin-new.def (__builtin_cfstring): New\n\tbuilt-in.", "tree": {"sha": "1aebc7d40350da6153fad93722ae1f9cc1c3cd47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aebc7d40350da6153fad93722ae1f9cc1c3cd47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bc39317bf4da1d51cb6eccf8afcacc90514602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bc39317bf4da1d51cb6eccf8afcacc90514602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bc39317bf4da1d51cb6eccf8afcacc90514602", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bc39317bf4da1d51cb6eccf8afcacc90514602/comments", "author": null, "committer": null, "parents": [{"sha": "a6fe949d570f1957aa1caba572e20f2c0760f89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe949d570f1957aa1caba572e20f2c0760f89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fe949d570f1957aa1caba572e20f2c0760f89a"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "6abf8e84f547da80fc3ce6733688b07de954548e", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bc39317bf4da1d51cb6eccf8afcacc90514602/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bc39317bf4da1d51cb6eccf8afcacc90514602/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=b5bc39317bf4da1d51cb6eccf8afcacc90514602", "patch": "@@ -504,8 +504,12 @@\n #define SUBTARGET_INIT_BUILTINS\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   darwin_patch_builtins ();\t\t\t\t\t\t\\\n-  rs6000_builtin_decls[(unsigned) (RS6000_BUILTIN_CFSTRING)]\t\t\\\n-    = darwin_init_cfstring_builtins ((unsigned) (RS6000_BUILTIN_CFSTRING)); \\\n+  if (new_builtins_are_live)\t\t\t\t\t\t\\\n+    rs6000_builtin_decls_x[(unsigned) (RS6000_BIF_CFSTRING)]\t\t\\\n+      = darwin_init_cfstring_builtins ((unsigned) (RS6000_BIF_CFSTRING)); \\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    rs6000_builtin_decls[(unsigned) (RS6000_BUILTIN_CFSTRING)]\t\t\\\n+      = darwin_init_cfstring_builtins ((unsigned) (RS6000_BUILTIN_CFSTRING)); \\\n } while(0)\n \n /* So far, there is no rs6000_fold_builtin, if one is introduced, then"}, {"sha": "6a28d5189f8514095f352ba77b45251c80f07466", "filename": "gcc/config/rs6000/rs6000-builtin-new.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bc39317bf4da1d51cb6eccf8afcacc90514602/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bc39317bf4da1d51cb6eccf8afcacc90514602/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def?ref=b5bc39317bf4da1d51cb6eccf8afcacc90514602", "patch": "@@ -187,6 +187,12 @@\n ; Builtins that have been around since time immemorial or are just\n ; considered available everywhere.\n [always]\n+; __builtin_cfstring is for Darwin, which will replace the decl we\n+; create here with another one during subtarget processing.  We just\n+; need to ensure it has a slot in the builtin enumeration.\n+  void __builtin_cfstring ();\n+    CFSTRING nothing {}\n+\n   void __builtin_cpu_init ();\n     CPU_INIT nothing {cpu}\n "}]}