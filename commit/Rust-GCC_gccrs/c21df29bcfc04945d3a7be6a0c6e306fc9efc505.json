{"sha": "c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxZGYyOWJjZmMwNDk0NWQzYTdiZTZhMGM2ZTMwNmZjOWVmYzUwNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2014-11-19T13:30:34Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2014-11-19T13:30:34Z"}, "message": "Make TARGET_STATIC_CHAIN allow a function type\n\nAs opposed to always being a decl.  This is a prerequisite\nto allowing the static chain to be loaded for indirect calls.\n\n        * targhooks.c (default_static_chain): Remove check for\n        DECL_STATIC_CHAIN.\n        * config/moxie/moxie.c (moxie_static_chain): Likewise.\n        * config/i386/i386.c (ix86_static_chain): Allow decl or type\n        as the first argument.\n        * config/xtensa/xtensa.c (xtensa_static_chain): Change the name\n        of the unused first parameter.\n        * doc/tm.texi (TARGET_STATIC_CHAIN): Document the first parameter\n        may be a type.\n        * target.def (static_chain): Likewise.\n\nFrom-SVN: r217769", "tree": {"sha": "ad9460795e6afe6279fd142b74f0096d38d6fcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad9460795e6afe6279fd142b74f0096d38d6fcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/comments", "author": null, "committer": null, "parents": [{"sha": "45b70a7372142320ffcd73d98a5ddc7862ac283c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b70a7372142320ffcd73d98a5ddc7862ac283c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b70a7372142320ffcd73d98a5ddc7862ac283c"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "9a9cf7bc6ed38926130eb135cce46f3dd5eb3733", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -1,3 +1,16 @@\n+2014-11-19  Richard Henderson  <rth@redhat.com>\n+\n+\t* targhooks.c (default_static_chain): Remove check for\n+\tDECL_STATIC_CHAIN.\n+\t* config/moxie/moxie.c (moxie_static_chain): Likewise.\n+\t* config/i386/i386.c (ix86_static_chain): Allow decl or type\n+\tas the first argument.\n+\t* config/xtensa/xtensa.c (xtensa_static_chain): Change the name\n+\tof the unused first parameter.\n+\t* doc/tm.texi (TARGET_STATIC_CHAIN): Document the first parameter\n+\tmay be a type.\n+\t* target.def (static_chain): Likewise.\n+\n 2014-11-19  Renlin Li  <renlin.li@arm.com>\n \n     * config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_FP_FAST,"}, {"sha": "3b41de2e4f6480d262ca57e6d9fd5b283657e3ee", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -27356,27 +27356,34 @@ ix86_minimum_alignment (tree exp, machine_mode mode,\n    This is a register, unless all free registers are used by arguments.  */\n \n static rtx\n-ix86_static_chain (const_tree fndecl, bool incoming_p)\n+ix86_static_chain (const_tree fndecl_or_type, bool incoming_p)\n {\n   unsigned regno;\n \n-  if (!DECL_STATIC_CHAIN (fndecl))\n-    return NULL;\n-\n   if (TARGET_64BIT)\n     {\n       /* We always use R10 in 64-bit mode.  */\n       regno = R10_REG;\n     }\n   else\n     {\n-      tree fntype;\n+      const_tree fntype, fndecl;\n       unsigned int ccvt;\n \n       /* By default in 32-bit mode we use ECX to pass the static chain.  */\n       regno = CX_REG;\n \n-      fntype = TREE_TYPE (fndecl);\n+      if (TREE_CODE (fndecl_or_type) == FUNCTION_DECL)\n+\t{\n+          fntype = TREE_TYPE (fndecl_or_type);\n+\t  fndecl = fndecl_or_type;\n+\t}\n+      else\n+\t{\n+\t  fntype = fndecl_or_type;\n+\t  fndecl = NULL;\n+\t}\n+\n       ccvt = ix86_get_callcvt (fntype);\n       if ((ccvt & IX86_CALLCVT_FASTCALL) != 0)\n \t{"}, {"sha": "148d26be1f59253f8143ee2d6d75c322630e0b5c", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -528,13 +528,10 @@ moxie_arg_partial_bytes (cumulative_args_t cum_v,\n /* Worker function for TARGET_STATIC_CHAIN.  */\n \n static rtx\n-moxie_static_chain (const_tree fndecl, bool incoming_p)\n+moxie_static_chain (const_tree ARG_UNUSED (fndecl_or_type), bool incoming_p)\n {\n   rtx addr, mem;\n \n-  if (!DECL_STATIC_CHAIN (fndecl))\n-    return NULL;\n-\n   if (incoming_p)\n     addr = plus_constant (Pmode, arg_pointer_rtx, 2 * UNITS_PER_WORD);\n   else"}, {"sha": "a0025a51331540d9b62707365bf67970dcac847f", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -3626,7 +3626,7 @@ xtensa_function_value_regno_p (const unsigned int regno)\n    expressions that denote where they are stored.  */\n \n static rtx\n-xtensa_static_chain (const_tree ARG_UNUSED (fndecl), bool incoming_p)\n+xtensa_static_chain (const_tree ARG_UNUSED (fndecl_or_type), bool incoming_p)\n {\n   rtx base = incoming_p ? arg_pointer_rtx : stack_pointer_rtx;\n   return gen_frame_mem (Pmode, plus_constant (Pmode, base,"}, {"sha": "5b9da4776a1baa3e10e8af15592105ba749bc9c0", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -3462,7 +3462,7 @@ If the static chain is passed in memory, these macros should not be\n defined; instead, the @code{TARGET_STATIC_CHAIN} hook should be used.\n @end defmac\n \n-@deftypefn {Target Hook} rtx TARGET_STATIC_CHAIN (const_tree @var{fndecl}, bool @var{incoming_p})\n+@deftypefn {Target Hook} rtx TARGET_STATIC_CHAIN (const_tree @var{fndecl_or_type}, bool @var{incoming_p})\n This hook replaces the use of @code{STATIC_CHAIN_REGNUM} et al for\n targets that may use different static chain locations for different\n nested functions.  This may be required if the target has function"}, {"sha": "dc48ae6912e920198516f6580f161fc3bfcd9a10", "filename": "gcc/target.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -4516,8 +4516,8 @@ false for naked functions.  The default implementation always returns true.\",\n  bool, (void),\n  hook_bool_void_true)\n \n-/* Return an rtx for the static chain for FNDECL.  If INCOMING_P is true,\n-       then it should be for the callee; otherwise for the caller.  */\n+/* Return an rtx for the static chain for FNDECL_OR_TYPE.  If INCOMING_P\n+   is true, then it should be for the callee; otherwise for the caller.  */\n DEFHOOK\n (static_chain,\n  \"This hook replaces the use of @code{STATIC_CHAIN_REGNUM} et al for\\n\\\n@@ -4539,7 +4539,7 @@ will be at an offset from the frame pointer.\\n\\\n The variables @code{stack_pointer_rtx}, @code{frame_pointer_rtx}, and\\n\\\n @code{arg_pointer_rtx} will have been initialized and should be used\\n\\\n to refer to those items.\",\n- rtx, (const_tree fndecl, bool incoming_p),\n+ rtx, (const_tree fndecl_or_type, bool incoming_p),\n  default_static_chain)\n \n /* Fill in the trampoline at MEM with a call to FNDECL and a"}, {"sha": "42fd82e692b111cb6199c6648124df6c7aaa0a88", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21df29bcfc04945d3a7be6a0c6e306fc9efc505/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=c21df29bcfc04945d3a7be6a0c6e306fc9efc505", "patch": "@@ -841,11 +841,8 @@ default_internal_arg_pointer (void)\n }\n \n rtx\n-default_static_chain (const_tree fndecl, bool incoming_p)\n+default_static_chain (const_tree ARG_UNUSED (fndecl_or_type), bool incoming_p)\n {\n-  if (!DECL_STATIC_CHAIN (fndecl))\n-    return NULL;\n-\n   if (incoming_p)\n     {\n #ifdef STATIC_CHAIN_INCOMING_REGNUM"}]}