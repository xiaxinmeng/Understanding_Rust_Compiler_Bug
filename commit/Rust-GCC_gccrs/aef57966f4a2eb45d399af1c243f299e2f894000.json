{"sha": "aef57966f4a2eb45d399af1c243f299e2f894000", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmNTc5NjZmNGEyZWI0NWQzOTlhZjFjMjQzZjI5OWUyZjg5NDAwMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-07-28T09:30:41Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-07-28T09:30:41Z"}, "message": "[RS6000] rs6000_output_mi_thunk tidy\n\nSince svn r123193 (git 327202e27a) the comment about scratch regs was\nno longer correct, and I think gen_sibcall could have been used even\nthen.\n\n\t* gcc/config/rs6000/rs6000-call.c (rs6000_output_mi_thunk): Use\n\tgen_sibcall.\n\nFrom-SVN: r273855", "tree": {"sha": "3fccd9ff423654aee047857fbbb76528e0538f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fccd9ff423654aee047857fbbb76528e0538f5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef57966f4a2eb45d399af1c243f299e2f894000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef57966f4a2eb45d399af1c243f299e2f894000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef57966f4a2eb45d399af1c243f299e2f894000", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef57966f4a2eb45d399af1c243f299e2f894000/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "295ac7c79ebe8ec1dec799c748c49e44fd6b4b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295ac7c79ebe8ec1dec799c748c49e44fd6b4b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295ac7c79ebe8ec1dec799c748c49e44fd6b4b47"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "21ca5a8d69e1b3abc7924008dd0742ec0e76a4ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef57966f4a2eb45d399af1c243f299e2f894000/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef57966f4a2eb45d399af1c243f299e2f894000/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aef57966f4a2eb45d399af1c243f299e2f894000", "patch": "@@ -1,3 +1,8 @@\n+2019-07-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* gcc/config/rs6000/rs6000-call.c (rs6000_output_mi_thunk): Use\n+\tgen_sibcall.\n+\n 2019-07-28  Alan Modra  <amodra@gmail.com>\n \n \tPR target/91135"}, {"sha": "832eda7cbadec5f499aab94bc68fc6ad684c8faa", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef57966f4a2eb45d399af1c243f299e2f894000/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef57966f4a2eb45d399af1c243f299e2f894000/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=aef57966f4a2eb45d399af1c243f299e2f894000", "patch": "@@ -8099,20 +8099,7 @@ rs6000_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n   funexp = XEXP (DECL_RTL (function), 0);\n   funexp = gen_rtx_MEM (FUNCTION_MODE, funexp);\n \n-#if TARGET_MACHO\n-  if (MACHOPIC_INDIRECT)\n-    funexp = machopic_indirect_call_target (funexp);\n-#endif\n-\n-  /* gen_sibcall expects reload to convert scratch pseudo to LR so we must\n-     generate sibcall RTL explicitly.  */\n-  insn = emit_call_insn (\n-\t   gen_rtx_PARALLEL (VOIDmode,\n-\t     gen_rtvec (3,\n-\t\t\tgen_rtx_CALL (VOIDmode,\n-\t\t\t\t      funexp, const0_rtx),\n-\t\t\tgen_rtx_USE (VOIDmode, const0_rtx),\n-\t\t\tsimple_return_rtx)));\n+  insn = emit_call_insn (gen_sibcall (funexp, const0_rtx, const0_rtx));\n   SIBLING_CALL_P (insn) = 1;\n   emit_barrier ();\n "}]}