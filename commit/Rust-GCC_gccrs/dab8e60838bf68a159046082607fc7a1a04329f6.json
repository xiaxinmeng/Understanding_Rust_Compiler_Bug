{"sha": "dab8e60838bf68a159046082607fc7a1a04329f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFiOGU2MDgzOGJmNjhhMTU5MDQ2MDgyNjA3ZmM3YTFhMDQzMjlmNg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-12T18:40:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:03Z"}, "message": "[Ada] Typo corrections and minor reformatting\n\n2020-06-02  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb, par-ch4.adb, par-util.adb, scans.ads, scng.adb,\n\tsem_attr.adb, sem_ch4.adb, sinfo.ads: Typo corrections and minor\n\treformatting.", "tree": {"sha": "64f8251a06fb746f5b9d60bc716f9641ec2ad5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64f8251a06fb746f5b9d60bc716f9641ec2ad5cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dab8e60838bf68a159046082607fc7a1a04329f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab8e60838bf68a159046082607fc7a1a04329f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dab8e60838bf68a159046082607fc7a1a04329f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab8e60838bf68a159046082607fc7a1a04329f6/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb3fc196adab7147ebc146b946135197104e423d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3fc196adab7147ebc146b946135197104e423d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3fc196adab7147ebc146b946135197104e423d"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "d658f0b3c987db75ecaa1c7b99bd7ee93a25d0eb", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -5476,18 +5476,18 @@ package body Exp_Attr is\n             Typ     : constant Entity_Id := Etype (N);\n             New_Loop : Node_Id;\n \n-         --  If the prefix is an aggregwte, its unique component is sn\n-         --  Iterated_Element, and we create a loop out of its itertor.\n+         --  If the prefix is an aggregate, its unique component is an\n+         --  Iterated_Element, and we create a loop out of its iterator.\n \n          begin\n             if Nkind (Prefix (N)) = N_Aggregate then\n                declare\n                   Stream  : constant Node_Id :=\n-                     First (Component_Associations (Prefix (N)));\n+                              First (Component_Associations (Prefix (N)));\n                   Id      : constant Node_Id := Defining_Identifier (Stream);\n                   Expr    : constant Node_Id := Expression (Stream);\n                   Ch      : constant Node_Id :=\n-                               First (Discrete_Choices (Stream));\n+                              First (Discrete_Choices (Stream));\n                begin\n                   New_Loop := Make_Loop_Statement (Loc,\n                     Iteration_Scheme =>\n@@ -5509,9 +5509,9 @@ package body Exp_Attr is\n                               Relocate_Node (Expr))))));\n                end;\n             else\n-               --  If the prefix is a name we construct an element iterwtor\n-               --  over it. Its expansion will verify that it is an array\n-               --  or a container with the proper aspects.\n+               --  If the prefix is a name, we construct an element iterator\n+               --  over it. Its expansion will verify that it is an array or\n+               --  a container with the proper aspects.\n \n                declare\n                   Iter : Node_Id;"}, {"sha": "f67e392bd259a4374b7ff758fdf5a17be8c52f79", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -1385,7 +1385,7 @@ package body Ch4 is\n       if Token = Tok_Left_Bracket and then Ada_Version >= Ada_2020 then\n          Scan;\n \n-         --  Special case for null aggregate in Ada2020.\n+         --  Special case for null aggregate in Ada 2020\n \n          if Token = Tok_Right_Bracket then\n             Scan;   --  past ]"}, {"sha": "700f9469febaac9f6b89f9eb07fd5a5c0a9649c2", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -276,7 +276,7 @@ package body Util is\n \n       --  If we have a right paren, then that is taken as ending the list\n       --  i.e. no comma is present.\n-      --  Ditto for a right bracket in Ada2020.\n+      --  Ditto for a right bracket in Ada 2020.\n \n       elsif Token = Tok_Right_Paren\n         or else (Token = Tok_Right_Bracket and then Ada_Version >= Ada_2020)"}, {"sha": "1cb853693a46a93d0140cc836de835cfaf6c525a", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -87,7 +87,7 @@ package Scans is\n       --  exception-name\". This degrades error recovery slightly, and perhaps\n       --  we could do better, but not worth the effort.\n \n-      --  Ada2020 introduces square brackets as delimiters for array and\n+      --  Ada 2020 introduces square brackets as delimiters for array and\n       --  container aggregates.\n \n       Tok_Raise,           -- RAISE"}, {"sha": "35e1e47e0fee98eb0eed341af589cab3efb7e61b", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -2181,8 +2181,8 @@ package body Scng is\n \n             return;\n \n-         --  Right bracket or right brace, treated as right paren\n-         --  but proper aggregate delimiter in Ada_2020\n+         --  Right bracket or right brace, treated as right paren but proper\n+         --  aggregate delimiter in Ada 2020.\n \n          when ']' | '}' =>\n             if Ada_Version >= Ada_2020 then"}, {"sha": "8f875cd5355d4bbf8f0d90b21eb722afbee9e1ff", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -5513,10 +5513,10 @@ package body Sem_Attr is\n                --  Prefix is a name, as for other attributes.\n \n                --  If the object is a function we asume that it is not\n-               --  overloaded. AI12-242 does not suggest an name resulution\n-               --  rule for that case, but can suppose that the expected\n-               --  type of the reduction is the expected type of the\n-               --  component of the prefix.\n+               --  overloaded. AI12-242 does not suggest a name resolution\n+               --  rule for that case, but we can suppose that the expected\n+               --  type of the reduction is the expected type of the component\n+               --  of the prefix.\n \n                Analyze_And_Resolve (Stream);\n                Typ := Etype (Stream);"}, {"sha": "6391d830e71c3ccda64a459bd7ba666ffd691fc3", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -8290,8 +8290,8 @@ package body Sem_Ch4 is\n       --  the Controlled types. The code below is motivated by containers that\n       --  are derived from other types with a Reference aspect.\n       --  Note as well that we need to examine the base type, given that\n-      --  the container object may be a constrained subtype or itype which\n-      --  does not have an explicit declaration,\n+      --  the container object may be a constrained subtype or itype that\n+      --  does not have an explicit declaration.\n \n       elsif Is_Derived_Type (C_Type)\n         and then Etype (First_Formal (Entity (Func_Name))) /= Pref_Typ"}, {"sha": "55ed10bc4bb7207615c0ce90a2307122371727be", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab8e60838bf68a159046082607fc7a1a04329f6/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=dab8e60838bf68a159046082607fc7a1a04329f6", "patch": "@@ -1838,7 +1838,7 @@ package Sinfo is\n    --      Test_Case\n \n    --  Is_Homogeneous_Aggregate (Flag14)\n-   --    A flag set on an Ada2020 aggregate that uses square brackets as\n+   --    A flag set on an Ada 2020 aggregate that uses square brackets as\n    --    delimiters, and thus denotes an array or container aggregate, or\n    --    the prefix of a reduction attribute.\n "}]}