{"sha": "ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1NGQ0NmJjOTQyNjMwZjBmNzZmMDkzZDdjYzRkMmU5YjViN2M3MA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-05T04:12:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-05T04:12:33Z"}, "message": "Jeffrey A Law  (law@cygnus.com)\n\n        * flow.c (merge_blocks): Avoid assing BASIC_BLOCK for non-existent\n        blocks.\n\nFrom-SVN: r29820", "tree": {"sha": "e938b1bf8cd1edd56264dd5552b35bcede67242b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e938b1bf8cd1edd56264dd5552b35bcede67242b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70/comments", "author": null, "committer": null, "parents": [{"sha": "375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "38dfc2433c9c4b3953e307922bb7aeb7c3c16ce9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "patch": "@@ -1,3 +1,8 @@\n+Mon Oct  4 21:12:02 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* flow.c (merge_blocks): Avoid assing BASIC_BLOCK for non-existent\n+\tblocks.\n+\n Mon Oct  4 21:01:39 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* toplev.c (dbr_sched_time): Unconditional."}, {"sha": "f883d80c520e73ff5f047a6200bc428e8aa0bf98", "filename": "gcc/flow.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "patch": "@@ -2191,18 +2191,25 @@ merge_blocks (e, b, c)\n \n       /* If B does not have an incoming fallthru, and the exception regions\n \t match, then it can be moved immediately before C without introducing\n-\t or modifying jumps.  */\n+\t or modifying jumps.\n+\n+\t C can not be the first block, so we do not have to worry about\n+\t accessing a non-existent block.  */\n       d = BASIC_BLOCK (c->index - 1);\n       if (! b_has_incoming_fallthru\n \t  && d->eh_end == b->eh_beg\n \t  && b->eh_end == c->eh_beg)\n \treturn merge_blocks_move_predecessor_nojumps (b, c);\n \n       /* Otherwise, we're going to try to move C after B.  Make sure the\n-\t exception regions match.  */\n-      d = BASIC_BLOCK (b->index + 1);\n+\t exception regions match.\n+\n+\t If B is the last basic block, then we must not try to access the\n+\t block structure for block B + 1.  Luckily in that case we do not\n+\t need to worry about matching exception regions.  */\n+      d = (b->index + 1 < n_basic_blocks ? BASIC_BLOCK (b->index + 1) : NULL);\n       if (b->eh_end == c->eh_beg\n-\t  && c->eh_end == d->eh_beg)\n+\t  && (d == NULL || c->eh_end == d->eh_beg))\n \t{\n \t  /* If C does not have an outgoing fallthru, then it can be moved\n \t     immediately after B without introducing or modifying jumps.  */"}]}