{"sha": "88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkMDM4MTFmODllNmUwYjFmNjNiZGM3ZjYxZDkzODA2NDViMWFkZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-07-13T20:49:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-07-13T20:49:34Z"}, "message": "cgraphunit.c (cgraph_varpool_analyze_pending_decls): Call align_variable.\n\n\n\t* cgraphunit.c (cgraph_varpool_analyze_pending_decls): Call align_variable.\n\t* output.h (align_variable): Declare.\n\t* varasm.c (align_variable): Export.\n\t* value-prof.c (tree_value_profile_transformations): Recompute iterator\n\twhen basic block changed.\n\nFrom-SVN: r115421", "tree": {"sha": "df24029698d70c331756451ec077b8551bb844f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df24029698d70c331756451ec077b8551bb844f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/comments", "author": null, "committer": null, "parents": [{"sha": "56dbe89df5a64529d4dffff48e2ed38d4c90aba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56dbe89df5a64529d4dffff48e2ed38d4c90aba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56dbe89df5a64529d4dffff48e2ed38d4c90aba7"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "72167faf510a5969508fca29876171a285f096b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -1,3 +1,12 @@\n+2006-07-13  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphunit.c (cgraph_varpool_analyze_pending_decls): Call\n+\talign_variable.\n+\t* output.h (align_variable): Declare.\n+\t* varasm.c (align_variable): Export.\n+\t* value-prof.c (tree_value_profile_transformations): Recompute iterator\n+\twhen basic block changed.\n+\n 2006-07-13  Nick Clifton  <nickc@redhat.com>\n \n \t* config/sh/sh.c (sh_reorg): Ignore deleted insns whilst"}, {"sha": "d02ead5fcff1167908979e85d037e5aac02483e4", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -281,6 +281,10 @@ cgraph_varpool_analyze_pending_decls (void)\n \n       cgraph_varpool_first_unanalyzed_node = cgraph_varpool_first_unanalyzed_node->next_needed;\n \n+      /* Compute the alignment early so function body expanders are\n+\t already informed about increased alignment.  */\n+      align_variable (decl, 0);\n+\n       if (DECL_INITIAL (decl))\n \t{\n \t  visited_nodes = pointer_set_create ();"}, {"sha": "6d518c45803e3643aa65ef4b3be839e7b9635afa", "filename": "gcc/output.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -200,6 +200,10 @@ extern void assemble_end_function (tree, const char *);\n    initial value (that will be done by the caller).  */\n extern void assemble_variable (tree, int, int, int);\n \n+/* Compute the alignment of variable specified by DECL.\n+   DONT_OUTPUT_DATA is from assemble_variable.  */\n+extern void align_variable (tree decl, bool dont_output_data);\n+\n /* Output something to declare an external symbol to the assembler.\n    (Most assemblers don't need this, so we normally output nothing.)\n    Do nothing if DECL is not external.  */"}, {"sha": "b133204f32cde9d9bca777210785ad989408fb0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -1,3 +1,7 @@\n+2006-07-13  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.target/i386/memcpy-1.c: New.\n+\n 2006-07-12  Geoffrey Keating  <geoffk@apple.com>\n \n \t* g++.dg/ext/visibility/fvisibility-inlines-hidden-2.C: New."}, {"sha": "edd0c7b49aaa2e3e0560997bc667e1c685874ccd", "filename": "gcc/testsuite/gcc.target/i386/memcpy-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-O2 -march=pentiumpro -minline-all-stringops\" } */\n+/* { dg-final { scan-assembler \"rep\" } } */\n+/* { dg-final { scan-assembler \"movs\" } } */\n+/* { dg-final { scan-assembler-not \"test\" } } */\n+/* { dg-final { scan-assembler \"\\.L?:\" } } */\n+\n+/* A and B are aligned, but we used to lose track of it.\n+   Ensure that memcpy is inlined and alignment prologue is missing.  */\n+\n+char a[900];\n+char b[900];\n+t()\n+{\n+  __builtin_memcpy (a,b,900);\n+}"}, {"sha": "e273a40f9c903b507c2f18a779bab54ab752e795", "filename": "gcc/value-prof.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -147,7 +147,11 @@ tree_value_profile_transformations (void)\n \t    {\n \t      changed = true;\n \t      /* Original statement may no longer be in the same block. */\n-\t      bb = bb_for_stmt (stmt);\n+\t      if (bb != bb_for_stmt (stmt))\n+\t\t{\n+\t          bb = bb_for_stmt (stmt);\n+\t\t  bsi = bsi_for_stmt (stmt);\n+\t\t}\n \t    }\n \n \t  /* Free extra storage from compute_value_histograms.  */"}, {"sha": "9dcc3b442cf4a9489853de9c1811dea0ab8d426f", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d03811f89e6e0b1f63bdc7f61d9380645b1adf/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=88d03811f89e6e0b1f63bdc7f61d9380645b1adf", "patch": "@@ -834,7 +834,7 @@ bss_initializer_p (tree decl)\n /* Compute the alignment of variable specified by DECL.\n    DONT_OUTPUT_DATA is from assemble_variable.  */\n \n-static void\n+void\n align_variable (tree decl, bool dont_output_data)\n {\n   unsigned int align = DECL_ALIGN (decl);"}]}