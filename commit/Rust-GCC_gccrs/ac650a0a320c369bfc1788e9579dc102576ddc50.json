{"sha": "ac650a0a320c369bfc1788e9579dc102576ddc50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2NTBhMGEzMjBjMzY5YmZjMTc4OGU5NTc5ZGMxMDI1NzZkZGM1MA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@pbothner.com", "date": "2003-08-21T15:57:51Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-08-21T15:57:51Z"}, "message": "cppfiles.c (stack_file): Correctly pass return_at_eof parameter to cpp_push_buffer.\n\n\n\t* cppfiles.c (stack_file):  Correctly pass return_at_eof parameter\n\tto cpp_push_buffer.\n\t* cpplex.c (_cpp_get_fresh_line):  Don't buffer->prev - handled\n\tby return_at_eof check.  Always call _cpp_pop_buffer at end.\n\nFrom-SVN: r70646", "tree": {"sha": "7c7e63abe1ff8a2d9797fc58544a1e41ad0c12f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c7e63abe1ff8a2d9797fc58544a1e41ad0c12f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac650a0a320c369bfc1788e9579dc102576ddc50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac650a0a320c369bfc1788e9579dc102576ddc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac650a0a320c369bfc1788e9579dc102576ddc50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac650a0a320c369bfc1788e9579dc102576ddc50/comments", "author": null, "committer": null, "parents": [{"sha": "17fdfd9fc3a58d0fd9332b36c694508a1e076ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fdfd9fc3a58d0fd9332b36c694508a1e076ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fdfd9fc3a58d0fd9332b36c694508a1e076ae5"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d572aa4efaf312efdee6f99a906559ffb23b7e6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,3 +1,10 @@\n+2003-08-21  Per Bothner  <bothner@pbothner.com>\n+\n+\t* cppfiles.c (stack_file):  Correctly pass return_at_eof parameter\n+\tto cpp_push_buffer.\n+\t* cpplex.c (_cpp_get_fresh_line):  Don't buffer->prev - handled\n+\tby return_at_eof check.  Always call _cpp_pop_buffer at end.\n+\n 2003-08-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR target/11805"}, {"sha": "a4edd5da33b7993cc280aa7f16b7b573fdef5911", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -615,7 +615,8 @@ stack_file (cpp_reader *pfile, _cpp_file *file, bool import)\n \n   /* Stack the buffer.  */\n   buffer = cpp_push_buffer (pfile, file->buffer, file->st.st_size,\n-\t\t\t    CPP_OPTION (pfile, preprocessed), 0);\n+\t\t\t    CPP_OPTION (pfile, preprocessed),\n+\t\t\t    ! pfile->buffer);\n   buffer->file = file;\n \n   /* Initialize controlling macro state.  */"}, {"sha": "1c00bdd0c8e1c3147ad942cd12fe2f5a22a4bbc4", "filename": "gcc/cpplex.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -719,9 +719,6 @@ _cpp_get_fresh_line (cpp_reader *pfile)\n \t\t\t       \"no newline at end of file\");\n \t}\n  \n-      if (!buffer->prev)\n-\treturn false;\n-\n       if (buffer->return_at_eof)\n \t{\n \t  _cpp_pop_buffer (pfile);"}]}