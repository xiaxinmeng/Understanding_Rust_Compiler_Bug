{"sha": "6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYzZDFhNWU2NmIyMDhmOWU2NTk5MzMxOTQwZmYwY2M4OGRmNGFhMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-04-30T21:07:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-04-30T21:07:45Z"}, "message": "Fix spurious semicolons\n\ngcc/ChangeLog:\n\t* builtins.c (fold_builtin_1): Remove spurious second\n\tsemicolon.\n\t* cgraph.h (symtab_node::get_availability): Likewise.\n\t* opts.c (common_handle_option): Remove spurious second semicolon.\n\t* tree-ssa-loop-ivopts.c (extract_cond_operands): Likewise.\n\t* tree-ssa-loop-niter.c (derive_constant_upper_bound_ops): Likewise.\n\ngcc/cp/ChangeLog:\n\t* cp-tree.h (ARGUMENT_PACK_SELECT_ARG): Remove spurious\n\ttrailing semicolon.\n\ngcc/fortran/ChangeLog:\n\t* options.c (gfc_init_options): Remove spurious second\n\tsemicolon.\n\t* trans-stmt.c (gfc_trans_allocate): Likewise.\n\nFrom-SVN: r222658", "tree": {"sha": "c2994536b19add4767d9c801bca711e83ae43a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2994536b19add4767d9c801bca711e83ae43a23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f576c83fb197b74767c536583107b457aead8ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f576c83fb197b74767c536583107b457aead8ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f576c83fb197b74767c536583107b457aead8ef"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "d9241b12f16fccdb5e06e3c02daaed08069108c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -1,3 +1,12 @@\n+2015-04-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* builtins.c (fold_builtin_1): Remove spurious second\n+\tsemicolon.\n+\t* cgraph.h (symtab_node::get_availability): Likewise.\n+\t* opts.c (common_handle_option): Remove spurious second semicolon.\n+\t* tree-ssa-loop-ivopts.c (extract_cond_operands): Likewise.\n+\t* tree-ssa-loop-niter.c (derive_constant_upper_bound_ops): Likewise.\n+\n 2015-04-30  Caroline Tice  <cmtice@google.com>\n \n         PR 65929"}, {"sha": "523cddb9acc5e663f4e043256b34b0bad67fba94", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -9964,7 +9964,7 @@ fold_builtin_1 (location_t loc, tree fndecl, tree arg0)\n     CASE_FLT_FN (BUILT_IN_CREAL):\n       if (validate_arg (arg0, COMPLEX_TYPE)\n \t&& TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE)\n-\treturn non_lvalue_loc (loc, fold_build1_loc (loc, REALPART_EXPR, type, arg0));;\n+\treturn non_lvalue_loc (loc, fold_build1_loc (loc, REALPART_EXPR, type, arg0));\n     break;\n \n     CASE_FLT_FN (BUILT_IN_CIMAG):"}, {"sha": "108cc801c6eb05ffccf3b1e938d7ec79e4b4f03b", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -2992,7 +2992,7 @@ symtab_node::get_availability (void)\n   if (is_a <cgraph_node *> (this))\n     return dyn_cast <cgraph_node *> (this)->get_availability ();\n   else\n-    return dyn_cast <varpool_node *> (this)->get_availability ();;\n+    return dyn_cast <varpool_node *> (this)->get_availability ();\n }\n \n /* Call calback on symtab node and aliases associated to this node."}, {"sha": "14279fe91fc5419f61f0e269a91187fea461f996", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -1,3 +1,8 @@\n+2015-04-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cp-tree.h (ARGUMENT_PACK_SELECT_ARG): Remove spurious\n+\ttrailing semicolon.\n+\n 2015-04-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50800"}, {"sha": "e0fbf5e7c4228c064efd5934c1b2f493bd738d88", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -3073,7 +3073,7 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n    ARGUMENT_PACK_SELECT represents. */\n #define ARGUMENT_PACK_SELECT_ARG(NODE)\t\t\t\t\t\\\n   TREE_VEC_ELT (ARGUMENT_PACK_ARGS (ARGUMENT_PACK_SELECT_FROM_PACK (NODE)), \\\n-\t        ARGUMENT_PACK_SELECT_INDEX (NODE));\n+\t        ARGUMENT_PACK_SELECT_INDEX (NODE))\n \n /* In a FUNCTION_DECL, the saved language-specific per-function data.  */\n #define DECL_SAVED_FUNCTION_DATA(NODE)\t\t\t\\"}, {"sha": "76cf93652611ee5e30736f6c7e6fc8609349e167", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -1,3 +1,9 @@\n+2015-04-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* options.c (gfc_init_options): Remove spurious second\n+\tsemicolon.\n+\t* trans-stmt.c (gfc_trans_allocate): Likewise.\n+\n 2015-04-28  Andre Vehreschild  <vehre@gmx.de>\n \n \t* interface.c (gfc_compare_types): Check for unlimited"}, {"sha": "5a35803beef3dc2935a9f6eca9878634f367a57c", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -115,7 +115,7 @@ gfc_init_options (unsigned int decoded_options_count,\n      enabled by default in Fortran.  Ideally, we should express this\n      in .opt, but that is not supported yet.  */\n   if (!global_options_set.x_cpp_warn_missing_include_dirs)\n-    global_options.x_cpp_warn_missing_include_dirs = 1;;\n+    global_options.x_cpp_warn_missing_include_dirs = 1;\n \n   set_default_std_flags ();\n "}, {"sha": "814bddecedcb25ab772fec35c800f1130d985e38", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -5504,7 +5504,7 @@ gfc_trans_allocate (gfc_code * code)\n \t    memsz = TYPE_SIZE_UNIT (gfc_typenode_for_spec (&code->ext.alloc.ts));\n \t  else\n \t    /* Handle size computation of the type declared to alloc.  */\n-\t    memsz = TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (se.expr)));;\n+\t    memsz = TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (se.expr)));\n \n \t  /* Allocate - for non-pointers with re-alloc checking.  */\n \t  if (gfc_expr_attr (expr).allocatable)"}, {"sha": "fed5d12063b9630be09c42569eb3b38144b8f303", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -1386,7 +1386,7 @@ common_handle_option (struct gcc_options *opts,\n \tunsigned int i;\n \n \tif (lang_mask == CL_DRIVER)\n-\t  break;;\n+\t  break;\n \n \tundoc_mask = ((opts->x_verbose_flag | opts->x_extra_warnings)\n \t\t      ? 0"}, {"sha": "44219d259e1dde67b9e888f051af4efef86d2683", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -1481,9 +1481,9 @@ extract_cond_operands (struct ivopts_data *data, gimple stmt,\n \n end:\n   if (control_var)\n-    *control_var = op0;;\n+    *control_var = op0;\n   if (iv_var)\n-    *iv_var = iv0;;\n+    *iv_var = iv0;\n   if (bound)\n     *bound = op1;\n   if (iv_bound)"}, {"sha": "042f8dff2f17c87e190b6ea02d64a2b4c78d3008", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3d1a5e66b208f9e6599331940ff0cc88df4aa0/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=6f3d1a5e66b208f9e6599331940ff0cc88df4aa0", "patch": "@@ -2565,7 +2565,7 @@ derive_constant_upper_bound_ops (tree type, tree op0,\n \t  cst = -cst;\n \t  /* Avoid CST == 0x80000...  */\n \t  if (wi::neg_p (cst))\n-\t    return max;;\n+\t    return max;\n \n \t  /* OP0 + CST.  We need to check that\n \t     BND <= MAX (type) - CST.  */"}]}