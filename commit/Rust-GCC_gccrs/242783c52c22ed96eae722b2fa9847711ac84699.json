{"sha": "242783c52c22ed96eae722b2fa9847711ac84699", "node_id": "C_kwDOANBUbNoAKDI0Mjc4M2M1MmMyMmVkOTZlYWU3MjJiMmZhOTg0NzcxMWFjODQ2OTk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-28T09:58:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-28T09:58:43Z"}, "message": "i386: Fix handling of SUBREGs in divv2sf3 [PR103842]\n\nregister_operand predicate allows not just REGs, but also SUBREGs of REGs,\nand for the latter lowpart_subreg might FAIL when trying to create paradoxical\nSUBREG in some cases.  For the input operand fixed by force_reg on it first,\nfor the output operand handled by always dividing into a fresh V4SFmode temporary\nand emit_move_insn into the destination afterwards, that is also beneficial for\ncombine.\n\n2021-12-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/103842\n\t* config/i386/mmx.md (divv2sf3): Use force_reg on op1.  Always perform\n\tdivv4sf3 into a pseudo and emit_move_insn into operands[0].\n\n\t* g++.dg/opt/pr103842.C: New test.", "tree": {"sha": "abe462b5c634f297590c066b2bfdf180021e898c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abe462b5c634f297590c066b2bfdf180021e898c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/242783c52c22ed96eae722b2fa9847711ac84699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242783c52c22ed96eae722b2fa9847711ac84699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/242783c52c22ed96eae722b2fa9847711ac84699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242783c52c22ed96eae722b2fa9847711ac84699/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "472568f5d89eddbfcaff3887dab2a6c4c7fb8d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472568f5d89eddbfcaff3887dab2a6c4c7fb8d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472568f5d89eddbfcaff3887dab2a6c4c7fb8d84"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "e394cbaa3f334fe6b29bbe36b4c563fe099f83db", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242783c52c22ed96eae722b2fa9847711ac84699/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242783c52c22ed96eae722b2fa9847711ac84699/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=242783c52c22ed96eae722b2fa9847711ac84699", "patch": "@@ -529,17 +529,19 @@\n \t\t  (match_operand:V2SF 2 \"register_operand\")))]\n   \"TARGET_MMX_WITH_SSE\"\n {\n-  rtx op0 = lowpart_subreg (V4SFmode, operands[0],\n-\t\t\t    GET_MODE (operands[0]));\n-  rtx op1 = lowpart_subreg (V4SFmode, operands[1],\n-\t\t\t    GET_MODE (operands[1]));\n+  rtx op1 = lowpart_subreg (V4SFmode, force_reg (V2SFmode, operands[1]),\n+\t\t\t    V2SFmode);\n   rtx op2 = gen_rtx_VEC_CONCAT (V4SFmode, operands[2],\n \t\t\t\tforce_reg (V2SFmode, CONST1_RTX (V2SFmode)));\n   rtx tmp = gen_reg_rtx (V4SFmode);\n \n   emit_insn (gen_rtx_SET (tmp, op2));\n \n+  rtx op0 = gen_reg_rtx (V4SFmode);\n+\n   emit_insn (gen_divv4sf3 (op0, op1, tmp));\n+\n+  emit_move_insn (operands[0], lowpart_subreg (V2SFmode, op0, V4SFmode));\n   DONE;\n })\n "}, {"sha": "4fbafe332c28a77d96ab7675d28aae253cbf3525", "filename": "gcc/testsuite/g++.dg/opt/pr103842.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242783c52c22ed96eae722b2fa9847711ac84699/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103842.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242783c52c22ed96eae722b2fa9847711ac84699/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103842.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103842.C?ref=242783c52c22ed96eae722b2fa9847711ac84699", "patch": "@@ -0,0 +1,31 @@\n+// PR target/103842\n+// { dg-do compile }\n+// { dg-options \"-O3 -std=c++14\" }\n+\n+void foo (float *);\n+struct M {\n+  float x[3][3];\n+  float *operator[](int i) { return x[i]; }\n+  M();\n+  M(float f, float g) {\n+    x[1][0] = x[1][1] = x[1][2] = f;\n+    x[2][0] = g;\n+  }\n+  void bar();\n+  M baz() {\n+    M s(x[1][2] - x[1][2], x[1][1] - x[1][1]);\n+    float r = s[2][0];\n+    if (r)\n+      for (int i = 0; i < 3; ++i)\n+\tfor (int j = 0; j < 3; ++j)\n+\t  s[i][j] /= r;\n+    for (int i = 0;;) {\n+      float *t = s[i];\n+      foo(t);\n+    }\n+  }\n+};\n+void qux() {\n+  M m, i = m.baz(), j = i;\n+  j.bar();\n+}"}]}