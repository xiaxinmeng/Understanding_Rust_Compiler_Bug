{"sha": "7c097ee994bfda54e6aed4c57562a1f346ef2575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MwOTdlZTk5NGJmZGE1NGU2YWVkNGM1NzU2MmExZjM0NmVmMjU3NQ==", "commit": {"author": {"name": "Hans Boehm", "email": "boehm@acm.org", "date": "2000-09-05T11:37:52Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-09-05T11:37:52Z"}, "message": "boehm.c (mark_reference_fields): Set marking bits for all words in a multiple-word record.\n\n2000-08-07  Hans Boehm  <boehm@acm.org>\n\n        * boehm.c (mark_reference_fields): Set marking bits for all words in\n        a multiple-word record.\n        (get_boehm_type_descriptor): Use the procedure marking descriptor\n\tfor java.lang.Class.\n\nFrom-SVN: r36159", "tree": {"sha": "02336ca7e9e894a302632c3e3e905a326b2182e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02336ca7e9e894a302632c3e3e905a326b2182e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c097ee994bfda54e6aed4c57562a1f346ef2575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c097ee994bfda54e6aed4c57562a1f346ef2575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c097ee994bfda54e6aed4c57562a1f346ef2575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c097ee994bfda54e6aed4c57562a1f346ef2575/comments", "author": {"login": "hboehm", "id": 1000362, "node_id": "MDQ6VXNlcjEwMDAzNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1000362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hboehm", "html_url": "https://github.com/hboehm", "followers_url": "https://api.github.com/users/hboehm/followers", "following_url": "https://api.github.com/users/hboehm/following{/other_user}", "gists_url": "https://api.github.com/users/hboehm/gists{/gist_id}", "starred_url": "https://api.github.com/users/hboehm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hboehm/subscriptions", "organizations_url": "https://api.github.com/users/hboehm/orgs", "repos_url": "https://api.github.com/users/hboehm/repos", "events_url": "https://api.github.com/users/hboehm/events{/privacy}", "received_events_url": "https://api.github.com/users/hboehm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "820112852a897e77e04d5015e8718433630b1e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820112852a897e77e04d5015e8718433630b1e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820112852a897e77e04d5015e8718433630b1e33"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "58d8a7476762c64318167f8fcdb15a3477eeea4f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c097ee994bfda54e6aed4c57562a1f346ef2575/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c097ee994bfda54e6aed4c57562a1f346ef2575/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7c097ee994bfda54e6aed4c57562a1f346ef2575", "patch": "@@ -1,3 +1,10 @@\n+2000-08-07  Hans Boehm  <boehm@acm.org>\n+\n+\t* boehm.c (mark_reference_fields): Set marking bits for all words in\n+\ta multiple-word record.\n+\t(get_boehm_type_descriptor): Use the procedure marking descriptor for\n+\tjava.lang.Class.\n+\t\n 2000-08-31  Mike Stump  <mrs@wrs.com>\n \n \t* Make-lang.in (jc1$(exeext), gcjh$(exeext), jv-scan$(exeext),"}, {"sha": "f758c9d4fcb661de44d4e695023e12a94b6adc07", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c097ee994bfda54e6aed4c57562a1f346ef2575/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c097ee994bfda54e6aed4c57562a1f346ef2575/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=7c097ee994bfda54e6aed4c57562a1f346ef2575", "patch": "@@ -95,29 +95,41 @@ mark_reference_fields (field, low, high, ubit,\n   for (; field != NULL_TREE; field = TREE_CHAIN (field))\n     {\n       HOST_WIDE_INT offset;\n+      HOST_WIDE_INT size_bytes;\n \n       if (FIELD_STATIC (field))\n \tcontinue;\n \n       offset = int_byte_position (field);\n+      size_bytes = int_size_in_bytes (TREE_TYPE (field));\n       if (JREFERENCE_TYPE_P (TREE_TYPE (field))\n \t  /* An `object' of type gnu.gcj.RawData is actually non-Java\n \t     data.  */\n \t  && TREE_TYPE (field) != rawdata_ptr_type_node)\n \t{\n \t  unsigned int count;\n+\t  unsigned int size_words;\n+\t  unsigned int i;\n \n \t  /* If this reference slot appears to overlay a slot we think\n \t     we already covered, then we are doomed.  */\n \t  if (offset <= *last_view_index)\n \t    abort ();\n \n \t  count = offset * BITS_PER_UNIT / POINTER_SIZE;\n+\t  size_words = size_bytes * BITS_PER_UNIT / POINTER_SIZE;\n \n \t  *last_set_index = count;\n-\t  /* First word in object corresponds to most significant byte\n-\t     of bitmap.  */\n-\t  set_bit (low, high, ubit - count - 1);\n+\t     \n+\t  /* First word in object corresponds to most significant byte of \n+\t     bitmap. \n+\t     \n+\t     In the case of a multiple-word record, we set pointer \n+\t     bits for all words in the record. This is conservative, but the \n+\t     size_words != 1 case is impossible in regular java code. */\n+\t  for (i = 0; i < size_words; ++i)\n+\t    set_bit (low, high, ubit - count - i - 1);\n+\n \t  if (count > ubit - 2)\n \t    *pointer_after_end = 1;\n \n@@ -173,6 +185,9 @@ get_boehm_type_descriptor (tree type)\n   /* Warning avoidance.  */\n   ubit = (unsigned int) bit;\n \n+  if (type == class_type_node)\n+    return PROCEDURE_OBJECT_DESCRIPTOR;\n+\n   field = TYPE_FIELDS (type);\n   mark_reference_fields (field, &low, &high, ubit,\n \t\t\t &pointer_after_end, &all_bits_set,"}]}