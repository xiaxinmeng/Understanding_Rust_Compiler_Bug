{"sha": "22a2af9556ba56f66109830ee63b0ee7544ecc74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhMmFmOTU1NmJhNTZmNjYxMDk4MzBlZTYzYjBlZTc1NDRlY2M3NA==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@kit.edu", "date": "2010-06-08T16:50:05Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2010-06-08T16:50:05Z"}, "message": "2010-06-08  Johannes Singler  <singler@kit.edu>\n\n        * include/parallel/find.h\n        (__find_template(.., growing_blocks_tag)): Make block size\n        proportional to current position.\n        * include/parallel/settings.h (_Settings): Introduce new tuning\n        parameter find_scale_factor to the end of the struct, defaults to\n        0.01f.\n\nFrom-SVN: r160439", "tree": {"sha": "292394d327426ced3f1194144ec11d2ca40ffb61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292394d327426ced3f1194144ec11d2ca40ffb61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a2af9556ba56f66109830ee63b0ee7544ecc74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a2af9556ba56f66109830ee63b0ee7544ecc74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a2af9556ba56f66109830ee63b0ee7544ecc74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a2af9556ba56f66109830ee63b0ee7544ecc74/comments", "author": null, "committer": null, "parents": [{"sha": "29a551b3b4cf567c6aedada344cc9108975e95fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a551b3b4cf567c6aedada344cc9108975e95fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a551b3b4cf567c6aedada344cc9108975e95fa"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "aa2e5bda671ccca829d96b8f055824499957614e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=22a2af9556ba56f66109830ee63b0ee7544ecc74", "patch": "@@ -1,3 +1,12 @@\n+2010-06-08  Johannes Singler  <singler@kit.edu>\n+\n+        * include/parallel/find.h\n+        (__find_template(.., growing_blocks_tag)): Make block size\n+        proportional to current position.\n+        * include/parallel/settings.h (_Settings): Introduce new tuning\n+        parameter find_scale_factor to the end of the struct, defaults to\n+        0.01f.\n+\n 2010-06-08  Johannes Singler  <singler@kit.edu>\n \n         * include/parallel/partial_sum.h"}, {"sha": "eb37d8aace18d80cec3f52f5cb113af8de643387", "filename": "libstdc++-v3/include/parallel/find.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h?ref=22a2af9556ba56f66109830ee63b0ee7544ecc74", "patch": "@@ -168,9 +168,7 @@ namespace __gnu_parallel\n    *  @param __selector _Functionality (e. g. std::find_if(), std::equal(),...)\n    *  @return Place of finding in both sequences.\n    *  @see __gnu_parallel::_Settings::find_sequential_search_size\n-   *  @see __gnu_parallel::_Settings::find_initial_block_size\n-   *  @see __gnu_parallel::_Settings::find_maximum_block_size\n-   *  @see __gnu_parallel::_Settings::find_increasing_factor\n+   *  @see __gnu_parallel::_Settings::find_scale_factor\n    *\n    *  There are two main differences between the growing blocks and\n    *  the constant-size blocks variants.\n@@ -218,6 +216,8 @@ namespace __gnu_parallel\n       omp_lock_t __result_lock;\n       omp_init_lock(&__result_lock);\n \n+      const float __scale_factor = __s.find_scale_factor;\n+\n       _ThreadIndex __num_threads = __get_max_threads();\n #     pragma omp parallel shared(__result) num_threads(__num_threads)\n       {\n@@ -227,7 +227,8 @@ namespace __gnu_parallel\n \t// Not within first __k elements -> start parallel.\n \t_ThreadIndex __iam = omp_get_thread_num();\n \n-\t_DifferenceType __block_size = __s.find_initial_block_size;\n+\t_DifferenceType __block_size =\n+\t  std::max<_DifferenceType>(1, __scale_factor * __next_block_start);\n \t_DifferenceType __start = __fetch_and_add<_DifferenceType>\n \t  (&__next_block_start, __block_size);\n \n@@ -265,15 +266,14 @@ namespace __gnu_parallel\n \t\tomp_unset_lock(&__result_lock);\n \t      }\n \n-\t    __block_size = std::min<_DifferenceType>\n-\t      (__block_size * __s.find_increasing_factor,\n-\t       __s.find_maximum_block_size);\n+\t    _DifferenceType __block_size =\n+\t     std::max<_DifferenceType>(1, __scale_factor * __next_block_start);\n \n \t    // Get new block, update pointer to next block.\n \t    __start = __fetch_and_add<_DifferenceType>(&__next_block_start,\n \t\t\t\t\t\t       __block_size);\n-\t    __stop = (__length < (__start + __block_size)\n-\t\t      ? __length : (__start + __block_size));\n+\t    __stop =\n+\t      std::min<_DifferenceType>(__length, __start + __block_size);\n \t  }\n       } //parallel\n "}, {"sha": "5d00b02694446d3eca7881c1a93c0eaa0cb0d9bd", "filename": "libstdc++-v3/include/parallel/settings.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a2af9556ba56f66109830ee63b0ee7544ecc74/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h?ref=22a2af9556ba56f66109830ee63b0ee7544ecc74", "patch": "@@ -272,6 +272,9 @@ namespace __gnu_parallel\n     /// Minimal input size for search and search_n.\n     _SequenceIndex              search_minimal_n;\n \n+    /// Block size scale-down factor with respect to current position.\n+    float                       find_scale_factor;\n+\n     /// Get the global settings.\n     _GLIBCXX_CONST static const _Settings&\n     get() throw();\n@@ -331,7 +334,8 @@ namespace __gnu_parallel\n             TLB_size(128),\n             cache_line_size(64),\n             qsb_steals(0),\n-            search_minimal_n(1000)\n+            search_minimal_n(1000),\n+            find_scale_factor(0.01f)\n     { }\n   };\n }"}]}