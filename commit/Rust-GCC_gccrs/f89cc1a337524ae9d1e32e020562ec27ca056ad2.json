{"sha": "f89cc1a337524ae9d1e32e020562ec27ca056ad2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5Y2MxYTMzNzUyNGFlOWQxZTMyZTAyMDU2MmVjMjdjYTA1NmFkMg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-19T13:45:07Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-19T13:45:07Z"}, "message": "re PR fortran/42545 (type extension: parent component has wrong accessibility)\n\ngcc/fortran/\n2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42545\n\t* resolve.c (resolve_fl_derived): Set the accessibility of the parent\n\tcomponent for extended types.\n\t* symbol.c (gfc_find_component): Remove a wrongly-worded error message\n\tand take care of parent component accessibility.\n\ngcc/testsuite/\n2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42545\n\t* gfortran.dg/extends_6.f03: Modified an error message.\n\t* gfortran.dg/extends_10.f03: New test.\n\t* gfortran.dg/private_type_6.f03: Modified an error message.\n\t* gfortran.dg/structure_constructor_8.f03: Ditto.\n\nFrom-SVN: r156040", "tree": {"sha": "862f8561a7cde35057e44f9c5f3509db7dee40ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/862f8561a7cde35057e44f9c5f3509db7dee40ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f89cc1a337524ae9d1e32e020562ec27ca056ad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89cc1a337524ae9d1e32e020562ec27ca056ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89cc1a337524ae9d1e32e020562ec27ca056ad2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89cc1a337524ae9d1e32e020562ec27ca056ad2/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6600130faf0a670610f412c88dd3614be5886c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6600130faf0a670610f412c88dd3614be5886c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6600130faf0a670610f412c88dd3614be5886c0"}], "stats": {"total": 78, "additions": 64, "deletions": 14}, "files": [{"sha": "d8e54e1ab9e79fbd7a0c82ebc2c498c810ce2367", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -1,3 +1,11 @@\n+2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42545\n+\t* resolve.c (resolve_fl_derived): Set the accessibility of the parent\n+\tcomponent for extended types.\n+\t* symbol.c (gfc_find_component): Remove a wrongly-worded error message\n+\tand take care of parent component accessibility.\n+\n 2010-01-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42677"}, {"sha": "8f32d1a3b6640c73d6f697367b64468f3536a317", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -10494,6 +10494,12 @@ resolve_fl_derived (gfc_symbol *sym)\n \t  && resolve_typespec_used (&c->ts, &c->loc, c->name) == FAILURE)\n \treturn FAILURE;\n \n+      /* If this type is an extension, set the accessibility of the parent\n+\t component.  */\n+      if (super_type && c == sym->components\n+\t  && strcmp (super_type->name, c->name) == 0)\n+\tc->attr.access = super_type->attr.access;\n+      \n       /* If this type is an extension, see if this component has the same name\n \t as an inherited type-bound procedure.  */\n       if (super_type"}, {"sha": "e363c5e27038ba24f712b56042045f83aa039902", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -1958,23 +1958,17 @@ gfc_find_component (gfc_symbol *sym, const char *name,\n \n   else if (sym->attr.use_assoc && !noaccess)\n     {\n-      if (p->attr.access == ACCESS_PRIVATE)\n+      bool is_parent_comp = sym->attr.extension && (p == sym->components);\n+      if (p->attr.access == ACCESS_PRIVATE ||\n+\t  (p->attr.access != ACCESS_PUBLIC\n+\t   && sym->component_access == ACCESS_PRIVATE\n+\t   && !is_parent_comp))\n \t{\n \t  if (!silent)\n \t    gfc_error (\"Component '%s' at %C is a PRIVATE component of '%s'\",\n \t\t       name, sym->name);\n \t  return NULL;\n \t}\n-\t\n-      /* If there were components given and all components are private, error\n-\t out at this place.  */\n-      if (p->attr.access != ACCESS_PUBLIC && sym->component_access == ACCESS_PRIVATE)\n-\t{\n-\t  if (!silent)\n-\t    gfc_error (\"All components of '%s' are PRIVATE in structure\"\n-\t\t       \" constructor at %C\", sym->name);\n-\t  return NULL;\n-\t}\n     }\n \n   return p;"}, {"sha": "8b7c5eed9bb02b7b3e999a14e271d335d103fc68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -1,3 +1,11 @@\n+2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42545\n+\t* gfortran.dg/extends_6.f03: Modified an error message.\n+\t* gfortran.dg/extends_10.f03: New test.\n+\t* gfortran.dg/private_type_6.f03: Modified an error message.\n+\t* gfortran.dg/structure_constructor_8.f03: Ditto.\n+\n 2010-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/42719"}, {"sha": "fbcaa7efc3f6e12f34b058862d8cd2e97c1b10a0", "filename": "gcc/testsuite/gfortran.dg/extends_10.f03", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_10.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_10.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_10.f03?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+!\n+! PR 42545: type extension: parent component has wrong accessibility\n+!\n+! Reported by Reinhold Bader <bader@lrz.de>\n+\n+module mo\n+  implicit none\n+  type :: t1\n+    integer :: i = 1\n+  end type\n+  type, extends(t1) :: t2\n+    private\n+    real :: x = 2.0\n+  end type\n+  type :: u1\n+    integer :: j = 1\n+  end type\n+  type, extends(u1) :: u2\n+    real :: y = 2.0\n+  end type\n+  private :: u1\n+end module\n+\n+program pr\n+  use mo\n+  implicit none\n+  type(t2) :: a\n+  type(u2) :: b\n+  print *,a%t1%i\n+  print *,b%u1%j  ! { dg-error \"is a PRIVATE component of\" }\n+end program\n+\n+! { dg-final { cleanup-modules \"mo\" } }"}, {"sha": "a50a9b751b1f07a66f483a2e3720822438242826", "filename": "gcc/testsuite/gfortran.dg/extends_6.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_6.f03?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -30,7 +30,7 @@ end module m\n   end type two\n \n   o_dt%day = 5  ! VALID but failed in first version of EXTENDS patch\n-  o_dt%yr  = 5  ! { dg-error \"All components of 'date' are PRIVATE\" }\n+  o_dt%yr  = 5  ! { dg-error \"is a PRIVATE component of\" }\n \n   t = two(one = one(4), i = 5, r=4.4) ! { dg-error \"has already been set\" }\n "}, {"sha": "4af3f704f98c786920d730f4ddb7bec48483cdfa", "filename": "gcc/testsuite/gfortran.dg/private_type_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -18,7 +18,7 @@ program foo_test\n   implicit none\n   TYPE(footype) :: foo\n   TYPE(bartype) :: foo2\n-  foo  = footype(1) ! { dg-error \"All components of 'footype' are PRIVATE\" }\n+  foo  = footype(1) ! { dg-error \"is a PRIVATE component\" }\n   foo2 = bartype(1,2) ! { dg-error \"is a PRIVATE component\" }\n   foo2%dummy2 = 5 ! { dg-error \"is a PRIVATE component\" }\n end program foo_test"}, {"sha": "b86d0ecccaf0e7f895f99c7b2ef159f36f3beeb8", "filename": "gcc/testsuite/gfortran.dg/structure_constructor_8.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_8.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89cc1a337524ae9d1e32e020562ec27ca056ad2/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_8.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_8.f03?ref=f89cc1a337524ae9d1e32e020562ec27ca056ad2", "patch": "@@ -51,7 +51,7 @@ PROGRAM test\n   struct1 = haspriv_t (b = 2, a = 1) ! { dg-error \"is a PRIVATE component\" }\n \n   ! This should fail as all components are private\n-  struct2 = allpriv_t (5) ! { dg-error \"of 'allpriv_t' are PRIVATE\" }\n+  struct2 = allpriv_t (5) ! { dg-error \"is a PRIVATE component\" }\n \n   ! This should fail as the type itself is private, and the expression should\n   ! be deduced as call to an undefined function."}]}