{"sha": "1c3af63eaeae50ab4ae9e11b8d363fe092707b55", "node_id": "C_kwDOANBUbNoAKDFjM2FmNjNlYWVhZTUwYWI0YWU5ZTExYjhkMzYzZmUwOTI3MDdiNTU", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-23T17:48:41Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-24T11:19:23Z"}, "message": "Add missing range mapping lang item", "tree": {"sha": "3792f56e5e11b79c340180e991ec0a64244572f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3792f56e5e11b79c340180e991ec0a64244572f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3af63eaeae50ab4ae9e11b8d363fe092707b55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3af63eaeae50ab4ae9e11b8d363fe092707b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3af63eaeae50ab4ae9e11b8d363fe092707b55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3af63eaeae50ab4ae9e11b8d363fe092707b55/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac17ed5f5ed5351571382c3ae7f82a42951e0dc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac17ed5f5ed5351571382c3ae7f82a42951e0dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac17ed5f5ed5351571382c3ae7f82a42951e0dc5"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "40187ab42f1cf421a23a4d6b9b33a1f88e535cf3", "filename": "gcc/rust/util/rust-lang-item.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3af63eaeae50ab4ae9e11b8d363fe092707b55/gcc%2Frust%2Futil%2Frust-lang-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3af63eaeae50ab4ae9e11b8d363fe092707b55/gcc%2Frust%2Futil%2Frust-lang-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-lang-item.h?ref=1c3af63eaeae50ab4ae9e11b8d363fe092707b55", "patch": "@@ -165,6 +165,10 @@ class RustLangItem\n       {\n \treturn ItemType::DEREF_MUT;\n       }\n+    else if (item.compare (\"RangeFull\") == 0)\n+      {\n+\treturn ItemType::RANGE_FULL;\n+      }\n     else if (item.compare (\"Range\") == 0)\n       {\n \treturn ItemType::RANGE;"}]}