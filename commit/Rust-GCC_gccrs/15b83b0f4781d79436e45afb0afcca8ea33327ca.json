{"sha": "15b83b0f4781d79436e45afb0afcca8ea33327ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTViODNiMGY0NzgxZDc5NDM2ZTQ1YWZiMGFmY2NhOGVhMzMzMjdjYQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2009-11-26T21:46:45Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2009-11-26T21:46:45Z"}, "message": "cfgexpand (n_stack_vars_conflict): New static variable.\n\n\t* cfgexpand (n_stack_vars_conflict): New static variable.\n\t(triangular_index): Reduce likelyhood of overflow by performing\n\tthe division before the multiplication.\n\t(resize_stack_vars_conflict): Call fatal_error if overflow\n\toccurred in triangular_index.  Update n_stack_vars_conflict.\n\nFrom-SVN: r154689", "tree": {"sha": "a9aa8b9c7a24e7daac7f1cb68dc03d61d2c3775a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9aa8b9c7a24e7daac7f1cb68dc03d61d2c3775a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15b83b0f4781d79436e45afb0afcca8ea33327ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b83b0f4781d79436e45afb0afcca8ea33327ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b83b0f4781d79436e45afb0afcca8ea33327ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b83b0f4781d79436e45afb0afcca8ea33327ca/comments", "author": null, "committer": null, "parents": [{"sha": "a96caf80851972e5f4e3e48a368f7e9d9bf450d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96caf80851972e5f4e3e48a368f7e9d9bf450d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96caf80851972e5f4e3e48a368f7e9d9bf450d2"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "845f268dd149961e13965326afb8de4f6fe36492", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b83b0f4781d79436e45afb0afcca8ea33327ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b83b0f4781d79436e45afb0afcca8ea33327ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15b83b0f4781d79436e45afb0afcca8ea33327ca", "patch": "@@ -1,5 +1,11 @@\n 2009-11-26  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n+\t* cfgexpand (n_stack_vars_conflict): New static variable.\n+\t(triangular_index): Reduce likelyhood of overflow by performing\n+\tthe division before the multiplication.\n+\t(resize_stack_vars_conflict): Call fatal_error if overflow\n+\toccurred in triangular_index.  Update n_stack_vars_conflict.\n+\n \tPR rtl-opt/38582\n \t* regrename.c (struct du_chain): Remove member earlyclobber.\n \t(scan_rtx_reg): Don't set it.  Remove argument earlyclobber,"}, {"sha": "d3637a02548fa70e2099dd8654f9c555881ab136", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b83b0f4781d79436e45afb0afcca8ea33327ca/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b83b0f4781d79436e45afb0afcca8ea33327ca/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=15b83b0f4781d79436e45afb0afcca8ea33327ca", "patch": "@@ -217,6 +217,7 @@ static size_t *stack_vars_sorted;\n    is lower triangular.  */\n static bool *stack_vars_conflict;\n static size_t stack_vars_conflict_alloc;\n+static size_t n_stack_vars_conflict;\n \n /* The phase of the stack frame.  This is the known misalignment of\n    virtual_stack_vars_rtx from PREFERRED_STACK_BOUNDARY.  That is,\n@@ -335,7 +336,11 @@ triangular_index (size_t i, size_t j)\n       size_t t;\n       t = i, i = j, j = t;\n     }\n-  return (i * (i + 1)) / 2 + j;\n+\n+  if (i & 1)\n+    return ((i + 1) / 2) * i + j;\n+  else\n+    return (i / 2) * (i + 1) + j;\n }\n \n /* Ensure that STACK_VARS_CONFLICT is large enough for N objects.  */\n@@ -346,12 +351,17 @@ resize_stack_vars_conflict (size_t n)\n   size_t size = triangular_index (n-1, n-1) + 1;\n \n   if (size <= stack_vars_conflict_alloc)\n-    return;\n+    {\n+      if (n > n_stack_vars_conflict)\n+\tfatal_error (\"program is too large to be compiled on this machine\");\n+      return;\n+    }\n \n   stack_vars_conflict = XRESIZEVEC (bool, stack_vars_conflict, size);\n   memset (stack_vars_conflict + stack_vars_conflict_alloc, 0,\n \t  (size - stack_vars_conflict_alloc) * sizeof (bool));\n   stack_vars_conflict_alloc = size;\n+  n_stack_vars_conflict = n;\n }\n \n /* Make the decls associated with luid's X and Y conflict.  */"}]}