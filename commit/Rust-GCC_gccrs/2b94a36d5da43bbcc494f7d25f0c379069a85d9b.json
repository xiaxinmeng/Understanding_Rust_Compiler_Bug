{"sha": "2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5NGEzNmQ1ZGE0M2JiY2M0OTRmN2QyNWYwYzM3OTA2OWE4NWQ5Yg==", "commit": {"author": {"name": "Chenghua Xu", "email": "paul.hua.gm@gmail.com", "date": "2018-11-07T08:47:21Z"}, "committer": {"name": "Chenghua Xu", "email": "paulhua@gcc.gnu.org", "date": "2018-11-07T08:47:21Z"}, "message": "Add support for Loongson 3A1000 processor.\n\ngcc/\n\t* config/mips/loongson3a.md: Rename to ...\n\t* config/mips/gs464.md: ... here.\n\t* config/mips/mips-cpus.def: Define gs464; Add loongson3a\n\tas an alias of gs464 processor.\n\t* config/mips/mips-tables.opt: Regenerate.\n\t* config/mips/mips.c (mips_issue_rate): Use PROCESSOR_GS464\n\tinstead of PROCESSOR_LOONGSON_3A.\n\t(mips_multipass_dfa_lookahead): Use TUNE_GS464 instead of\n\tTUNE_LOONGSON_3A.\n\t(mips_option_override): Enable MMI and EXT for gs464.\n\t* config/mips/mips.h: Rename TARGET_LOONGSON_3A to TARGET_GS464;\n\tRename TUNE_LOONGSON_3A to TUNE_GS464.\n\t(MIPS_ISA_LEVEL_SPEC): Infer mips64r2 from gs464.\n\t(ISA_HAS_ODD_SPREG, ISA_AVOID_DIV_HILO, ISA_HAS_FUSED_MADD4,\n\tISA_HAS_UNFUSED_MADD4): Use TARGET_GS464 instead of\n\tTARGET_LOONGSON_3A.\n\t* config/mips/mips.md: Include gs464.md instead of loongson3a.md.\n\t(processor): Add gs464;\n\t* doc/invoke.texi: Add gs464 to supported architectures.\n\nFrom-SVN: r265865", "tree": {"sha": "30cd7d3298671a10673f4f552f4264a128157756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30cd7d3298671a10673f4f552f4264a128157756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/comments", "author": {"login": "ChenghuaXu", "id": 87753117, "node_id": "MDQ6VXNlcjg3NzUzMTE3", "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenghuaXu", "html_url": "https://github.com/ChenghuaXu", "followers_url": "https://api.github.com/users/ChenghuaXu/followers", "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}", "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions", "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs", "repos_url": "https://api.github.com/users/ChenghuaXu/repos", "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6319811c1af2f2a36a83d2079eb986154060e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6319811c1af2f2a36a83d2079eb986154060e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6319811c1af2f2a36a83d2079eb986154060e60"}], "stats": {"total": 347, "additions": 187, "deletions": 160}, "files": [{"sha": "4247c670fe13b3fe1a665b39f1e295360b5a7082", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -1,3 +1,25 @@\n+2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* config/mips/loongson3a.md: Rename to ...\n+\t* config/mips/gs464.md: ... here.\n+\t* config/mips/mips-cpus.def: Define gs464; Add loongson3a\n+\tas an alias of gs464 processor.\n+\t* config/mips/mips-tables.opt: Regenerate.\n+\t* config/mips/mips.c (mips_issue_rate): Use PROCESSOR_GS464\n+\tinstead of PROCESSOR_LOONGSON_3A.\n+\t(mips_multipass_dfa_lookahead): Use TUNE_GS464 instead of\n+\tTUNE_LOONGSON_3A.\n+\t(mips_option_override): Enable MMI and EXT for gs464.\n+\t* config/mips/mips.h: Rename TARGET_LOONGSON_3A to TARGET_GS464;\n+\tRename TUNE_LOONGSON_3A to TUNE_GS464.\n+\t(MIPS_ISA_LEVEL_SPEC): Infer mips64r2 from gs464.\n+\t(ISA_HAS_ODD_SPREG, ISA_AVOID_DIV_HILO, ISA_HAS_FUSED_MADD4,\n+\tISA_HAS_UNFUSED_MADD4): Use TARGET_GS464 instead of\n+\tTARGET_LOONGSON_3A.\n+\t* config/mips/mips.md: Include gs464.md instead of loongson3a.md.\n+\t(processor): Add gs464;\n+\t* doc/invoke.texi: Add gs464 to supported architectures.\n+\n 2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* config/mips/mips-protos.h"}, {"sha": "82efb66786fb595be1716d4c6e1bca520c49d3d8", "filename": "gcc/config/mips/gs464.md", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fgs464.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fgs464.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgs464.md?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -0,0 +1,137 @@\n+;; Pipeline model for Loongson gs464 cores.\n+\n+;; Copyright (C) 2011-2018 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; Uncomment the following line to output automata for debugging.\n+;; (automata_option \"v\")\n+\n+;; Automaton for integer instructions.\n+(define_automaton \"gs464_a_alu\")\n+\n+;; Automaton for floating-point instructions.\n+(define_automaton \"gs464_a_falu\")\n+\n+;; Automaton for memory operations.\n+(define_automaton \"gs464_a_mem\")\n+\n+;; Describe the resources.\n+\n+(define_cpu_unit \"gs464_alu1\" \"gs464_a_alu\")\n+(define_cpu_unit \"gs464_alu2\" \"gs464_a_alu\")\n+(define_cpu_unit \"gs464_mem\" \"gs464_a_mem\")\n+(define_cpu_unit \"gs464_falu1\" \"gs464_a_falu\")\n+(define_cpu_unit \"gs464_falu2\" \"gs464_a_falu\")\n+\n+;; Describe instruction reservations.\n+\n+(define_insn_reservation \"gs464_arith\" 1\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"arith,clz,const,logical,\n+\t\t\tmove,nop,shift,signext,slt\"))\n+  \"gs464_alu1 | gs464_alu2\")\n+\n+(define_insn_reservation \"gs464_branch\" 1\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"branch,jump,call,condmove,trap\"))\n+  \"gs464_alu1\")\n+\n+(define_insn_reservation \"gs464_mfhilo\" 1\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"mfhi,mflo,mthi,mtlo\"))\n+  \"gs464_alu2\")\n+\n+;; Operation imul3nc is fully pipelined.\n+(define_insn_reservation \"gs464_imul3nc\" 5\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"imul3nc\"))\n+  \"gs464_alu2\")\n+\n+(define_insn_reservation \"gs464_imul\" 7\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"gs464_alu2 * 7\")\n+\n+(define_insn_reservation \"gs464_idiv_si\" 12\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"gs464_alu2 * 12\")\n+\n+(define_insn_reservation \"gs464_idiv_di\" 25\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"gs464_alu2 * 25\")\n+\n+(define_insn_reservation \"gs464_load\" 3\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"load\"))\n+  \"gs464_mem\")\n+\n+(define_insn_reservation \"gs464_fpload\" 4\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"load,mfc,mtc\"))\n+  \"gs464_mem\")\n+\n+(define_insn_reservation \"gs464_prefetch\" 0\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"prefetch,prefetchx\"))\n+  \"gs464_mem\")\n+\n+(define_insn_reservation \"gs464_store\" 0\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n+  \"gs464_mem\")\n+\n+;; All the fp operations can be executed in FALU1.  Only fp add,\n+;; sub, mul, madd can be executed in FALU2.  Try FALU2 firstly.\n+(define_insn_reservation \"gs464_fadd\" 6\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"fadd,fmul,fmadd\"))\n+  \"gs464_falu2 | gs464_falu1\")\n+\n+(define_insn_reservation \"gs464_fcmp\" 2\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"fabs,fcmp,fmove,fneg\"))\n+  \"gs464_falu1\")\n+\n+(define_insn_reservation \"gs464_fcvt\" 4\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"fcvt\"))\n+  \"gs464_falu1\")\n+\n+(define_insn_reservation \"gs464_fdiv_sf\" 12\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"gs464_falu1 * 12\")\n+\n+(define_insn_reservation \"gs464_fdiv_df\" 19\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"gs464_falu1 * 19\")\n+\n+;; Force single-dispatch for unknown or multi.\n+(define_insn_reservation \"gs464_unknown\" 1\n+  (and (eq_attr \"cpu\" \"gs464\")\n+       (eq_attr \"type\" \"unknown,multi,atomic,syncloop\"))\n+  \"gs464_alu1 + gs464_alu2 + gs464_falu1 + gs464_falu2 + gs464_mem\")\n+\n+;; End of DFA-based pipeline description for gs464"}, {"sha": "2ebde6824cd49e2e959ca77eb0a122791acc1476", "filename": "gcc/config/mips/loongson3a.md", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Floongson3a.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Floongson3a.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Floongson3a.md?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -1,137 +0,0 @@\n-;; Pipeline model for Loongson-3A cores.\n-\n-;; Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-;;\n-;; This file is part of GCC.\n-;;\n-;; GCC is free software; you can redistribute it and/or modify it\n-;; under the terms of the GNU General Public License as published\n-;; by the Free Software Foundation; either version 3, or (at your\n-;; option) any later version.\n-;;\n-;; GCC is distributed in the hope that it will be useful, but WITHOUT\n-;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-;; License for more details.\n-;;\n-;; You should have received a copy of the GNU General Public License\n-;; along with GCC; see the file COPYING3.  If not see\n-;; <http://www.gnu.org/licenses/>.\n-\n-;; Uncomment the following line to output automata for debugging.\n-;; (automata_option \"v\")\n-\n-;; Automaton for integer instructions.\n-(define_automaton \"ls3a_a_alu\")\n-\n-;; Automaton for floating-point instructions.\n-(define_automaton \"ls3a_a_falu\")\n-\n-;; Automaton for memory operations.\n-(define_automaton \"ls3a_a_mem\")\n-\n-;; Describe the resources.\n-\n-(define_cpu_unit \"ls3a_alu1\" \"ls3a_a_alu\")\n-(define_cpu_unit \"ls3a_alu2\" \"ls3a_a_alu\")\n-(define_cpu_unit \"ls3a_mem\" \"ls3a_a_mem\")\n-(define_cpu_unit \"ls3a_falu1\" \"ls3a_a_falu\")\n-(define_cpu_unit \"ls3a_falu2\" \"ls3a_a_falu\")\n-\n-;; Describe instruction reservations.\n-\n-(define_insn_reservation \"ls3a_arith\" 1\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"arith,clz,const,logical,\n-                        move,nop,shift,signext,slt\"))\n-  \"ls3a_alu1 | ls3a_alu2\")\n-\n-(define_insn_reservation \"ls3a_branch\" 1\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"branch,jump,call,condmove,trap\"))\n-  \"ls3a_alu1\")\n-\n-(define_insn_reservation \"ls3a_mfhilo\" 1\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"mfhi,mflo,mthi,mtlo\"))\n-  \"ls3a_alu2\")\n-\n-;; Operation imul3nc is fully pipelined.\n-(define_insn_reservation \"ls3a_imul3nc\" 5\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"imul3nc\"))\n-  \"ls3a_alu2\")\n- \n-(define_insn_reservation \"ls3a_imul\" 7\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"imul,imadd\"))\n-  \"ls3a_alu2 * 7\")\n- \n-(define_insn_reservation \"ls3a_idiv_si\" 12\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (and (eq_attr \"type\" \"idiv\")\n-            (eq_attr \"mode\" \"SI\")))\n-  \"ls3a_alu2 * 12\")\n-\n-(define_insn_reservation \"ls3a_idiv_di\" 25\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (and (eq_attr \"type\" \"idiv\")\n-            (eq_attr \"mode\" \"DI\")))\n-  \"ls3a_alu2 * 25\")\n-\n-(define_insn_reservation \"ls3a_load\" 3\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"load\"))\n-  \"ls3a_mem\")\n- \n-(define_insn_reservation \"ls3a_fpload\" 4\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"load,mfc,mtc\"))\n-  \"ls3a_mem\")\n-\n-(define_insn_reservation \"ls3a_prefetch\" 0\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"prefetch,prefetchx\"))\n-  \"ls3a_mem\")\n- \n-(define_insn_reservation \"ls3a_store\" 0\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n-  \"ls3a_mem\")\n-\n-;; All the fp operations can be executed in FALU1.  Only fp add,\n-;; sub, mul, madd can be executed in FALU2.  Try FALU2 firstly.\n-(define_insn_reservation \"ls3a_fadd\" 6\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"fadd,fmul,fmadd\"))\n-  \"ls3a_falu2 | ls3a_falu1\")\n-\n-(define_insn_reservation \"ls3a_fcmp\" 2\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"fabs,fcmp,fmove,fneg\"))\n-  \"ls3a_falu1\")\n-\n-(define_insn_reservation \"ls3a_fcvt\" 4\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"fcvt\"))\n-  \"ls3a_falu1\")\n-\n-(define_insn_reservation \"ls3a_fdiv_sf\" 12\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n-            (eq_attr \"mode\" \"SF\")))\n-  \"ls3a_falu1 * 12\")\n- \n-(define_insn_reservation \"ls3a_fdiv_df\" 19\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n-            (eq_attr \"mode\" \"DF\")))\n-  \"ls3a_falu1 * 19\")\n-\n-;; Force single-dispatch for unknown or multi.\n-(define_insn_reservation \"ls3a_unknown\" 1\n-  (and (eq_attr \"cpu\" \"loongson_3a\")\n-       (eq_attr \"type\" \"unknown,multi,atomic,syncloop\"))\n-  \"ls3a_alu1 + ls3a_alu2 + ls3a_falu1 + ls3a_falu2 + ls3a_mem\")\n-\n-;; End of DFA-based pipeline description for loongson_3a"}, {"sha": "eabe045cf39b0fd8ad1f6ab43548e3778a1c248a", "filename": "gcc/config/mips/mips-cpus.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-cpus.def?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -162,7 +162,8 @@ MIPS_CPU (\"sr71000\", PROCESSOR_SR71000, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"xlr\", PROCESSOR_XLR, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n \n /* MIPS64 Release 2 processors.  */\n-MIPS_CPU (\"loongson3a\", PROCESSOR_LOONGSON_3A, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"loongson3a\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"gs464\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon+\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon2\", PROCESSOR_OCTEON2, 65, PTF_AVOID_BRANCHLIKELY_SPEED)"}, {"sha": "3114fce7c70d928becd37581f3cf9fff5f4b331f", "filename": "gcc/config/mips/mips-tables.opt", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-tables.opt?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -679,26 +679,29 @@ EnumValue\n Enum(mips_arch_opt_value) String(loongson3a) Value(96) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon) Value(97) Canonical\n+Enum(mips_arch_opt_value) String(gs464) Value(97) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon+) Value(98) Canonical\n+Enum(mips_arch_opt_value) String(octeon) Value(98) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon2) Value(99) Canonical\n+Enum(mips_arch_opt_value) String(octeon+) Value(99) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon3) Value(100) Canonical\n+Enum(mips_arch_opt_value) String(octeon2) Value(100) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(xlp) Value(101) Canonical\n+Enum(mips_arch_opt_value) String(octeon3) Value(101) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(i6400) Value(102) Canonical\n+Enum(mips_arch_opt_value) String(xlp) Value(102) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(i6500) Value(103) Canonical\n+Enum(mips_arch_opt_value) String(i6400) Value(103) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(p6600) Value(104) Canonical\n+Enum(mips_arch_opt_value) String(i6500) Value(104) Canonical\n+\n+EnumValue\n+Enum(mips_arch_opt_value) String(p6600) Value(105) Canonical\n "}, {"sha": "e6dd379569482f296435fda4df415020da3d7b30", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -836,7 +836,7 @@ static const struct mips_rtx_cost_data\n   { /* Loongson-2F */\n     DEFAULT_COSTS\n   },\n-  { /* Loongson-3A */\n+  { /* Loongson gs464.  */\n     DEFAULT_COSTS\n   },\n   { /* M4k */\n@@ -14614,7 +14614,7 @@ mips_issue_rate (void)\n \n     case PROCESSOR_LOONGSON_2E:\n     case PROCESSOR_LOONGSON_2F:\n-    case PROCESSOR_LOONGSON_3A:\n+    case PROCESSOR_GS464:\n     case PROCESSOR_P5600:\n     case PROCESSOR_P6600:\n       return 4;\n@@ -14746,7 +14746,7 @@ mips_multipass_dfa_lookahead (void)\n   if (TUNE_SB1)\n     return 4;\n \n-  if (TUNE_LOONGSON_2EF || TUNE_LOONGSON_3A)\n+  if (TUNE_LOONGSON_2EF || TUNE_GS464)\n     return 4;\n \n   if (TUNE_OCTEON)"}, {"sha": "9666107077e33ddd80434b19e885b1d04558dfc4", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -266,7 +266,7 @@ struct mips_cpu_info {\n #define TARGET_LOONGSON_2E          (mips_arch == PROCESSOR_LOONGSON_2E)\n #define TARGET_LOONGSON_2F          (mips_arch == PROCESSOR_LOONGSON_2F)\n #define TARGET_LOONGSON_2EF         (TARGET_LOONGSON_2E || TARGET_LOONGSON_2F)\n-#define TARGET_LOONGSON_3A          (mips_arch == PROCESSOR_LOONGSON_3A)\n+#define TARGET_GS464\t\t    (mips_arch == PROCESSOR_GS464)\n #define TARGET_MIPS3900             (mips_arch == PROCESSOR_R3900)\n #define TARGET_MIPS4000             (mips_arch == PROCESSOR_R4000)\n #define TARGET_MIPS4120             (mips_arch == PROCESSOR_R4120)\n@@ -298,7 +298,7 @@ struct mips_cpu_info {\n \t\t\t\t     || mips_tune == PROCESSOR_74KF3_2)\n #define TUNE_LOONGSON_2EF           (mips_tune == PROCESSOR_LOONGSON_2E\t\\\n \t\t\t\t     || mips_tune == PROCESSOR_LOONGSON_2F)\n-#define TUNE_LOONGSON_3A            (mips_tune == PROCESSOR_LOONGSON_3A)\n+#define TUNE_GS464\t\t    (mips_tune == PROCESSOR_GS464)\n #define TUNE_MIPS3000               (mips_tune == PROCESSOR_R3000)\n #define TUNE_MIPS3900               (mips_tune == PROCESSOR_R3900)\n #define TUNE_MIPS4000               (mips_tune == PROCESSOR_R4000)\n@@ -792,7 +792,8 @@ struct mips_cpu_info {\n      %{march=mips32r6: -mips32r6} \\\n      %{march=mips64|march=5k*|march=20k*|march=sb1*|march=sr71000 \\\n        |march=xlr: -mips64} \\\n-     %{march=mips64r2|march=loongson3a|march=octeon|march=xlp: -mips64r2} \\\n+     %{march=mips64r2|march=loongson3a|march=gs464|march=octeon\t\\\n+       |march=xlp: -mips64r2} \\\n      %{march=mips64r3: -mips64r3} \\\n      %{march=mips64r5: -mips64r5} \\\n      %{march=mips64r6|march=i6400|march=i6500|march=p6600: -mips64r6}}\"\n@@ -909,7 +910,7 @@ struct mips_cpu_info {\n \n #define MIPS_ASE_LOONGSON_EXT_SPEC\t\t\t\t\t\t\\\n   \"%{!mno-loongson-ext:\t\t\t\t\t\t\t\t\\\n-     %{march=loongson3a: -mloongson-ext}}\"\n+     %{march=loongson3a|march=gs464: -mloongson-ext}}\"\n \n #define DRIVER_SELF_SPECS \\\n   MIPS_ISA_LEVEL_SPEC,\t  \\\n@@ -962,7 +963,7 @@ struct mips_cpu_info {\n \n /* ISA has 32 single-precision registers.  */\n #define ISA_HAS_ODD_SPREG\t((mips_isa_rev >= 1\t\t\t\\\n-\t\t\t\t  && !TARGET_LOONGSON_3A)\t\t\\\n+\t\t\t\t  && !TARGET_GS464)\t\t\t\\\n \t\t\t\t || TARGET_FLOAT64\t\t\t\\\n \t\t\t\t || TARGET_MIPS5900)\n \n@@ -1005,7 +1006,7 @@ struct mips_cpu_info {\n    because the former are faster and can also have the effect of reducing\n    code size.  */\n #define ISA_AVOID_DIV_HILO\t((TARGET_LOONGSON_2EF\t\t\t\\\n-\t\t\t\t  || TARGET_LOONGSON_3A)\t\t\\\n+\t\t\t\t  || TARGET_GS464)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA supports instructions DDIV and DDIVU. */\n@@ -1098,14 +1099,14 @@ struct mips_cpu_info {\n    'd = [+-] (a * b [+-] c)'.  */\n #define ISA_HAS_FUSED_MADD4\t(mips_madd4\t\t\t\t\\\n \t\t\t\t && (TARGET_MIPS8000\t\t\t\\\n-\t\t\t\t     || TARGET_LOONGSON_3A))\n+\t\t\t\t     || TARGET_GS464))\n \n /* ISA has 4 operand unfused madd instructions of the form\n    'd = [+-] (a * b [+-] c)'.  */\n #define ISA_HAS_UNFUSED_MADD4\t(mips_madd4\t\t\t\t\\\n \t\t\t\t && ISA_HAS_FP4\t\t\t\t\\\n \t\t\t\t && !TARGET_MIPS8000\t\t\t\\\n-\t\t\t\t && !TARGET_LOONGSON_3A)\n+\t\t\t\t && !TARGET_GS464)\n \n /* ISA has 3 operand r6 fused madd instructions of the form\n    'c = c [+-] (a * b)'.  */"}, {"sha": "d347a253ff14d2ad60884065f693d1c01b83db4e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -37,7 +37,7 @@\n   74kf3_2\n   loongson_2e\n   loongson_2f\n-  loongson_3a\n+  gs464\n   m4k\n   octeon\n   octeon2\n@@ -1173,7 +1173,7 @@\n (include \"9000.md\")\n (include \"10000.md\")\n (include \"loongson2ef.md\")\n-(include \"loongson3a.md\")\n+(include \"gs464.md\")\n (include \"octeon.md\")\n (include \"sb1.md\")\n (include \"sr71k.md\")"}, {"sha": "b300169804b8f02f8b19a6bec1582813e22f364c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b94a36d5da43bbcc494f7d25f0c379069a85d9b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2b94a36d5da43bbcc494f7d25f0c379069a85d9b", "patch": "@@ -20798,7 +20798,7 @@ The processor names are:\n @samp{1004kc}, @samp{1004kf2_1}, @samp{1004kf1_1},\n @samp{i6400}, @samp{i6500},\n @samp{interaptiv},\n-@samp{loongson2e}, @samp{loongson2f}, @samp{loongson3a},\n+@samp{loongson2e}, @samp{loongson2f}, @samp{loongson3a}, @samp{gs464},\n @samp{m4k},\n @samp{m14k}, @samp{m14kc}, @samp{m14ke}, @samp{m14kec},\n @samp{m5100}, @samp{m5101},"}]}