{"sha": "a8cdcc1f433a256358738a6536f6d9ce7f3c04c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThjZGNjMWY0MzNhMjU2MzU4NzM4YTY1MzZmNmQ5Y2U3ZjNjMDRjMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-18T21:35:07Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-18T21:35:07Z"}, "message": "(macarg1): Count newline at end of C++ comment.\n\nFrom-SVN: r8664", "tree": {"sha": "263750155830814b8cdf0bf97bb9f26a79c122b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/263750155830814b8cdf0bf97bb9f26a79c122b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3/comments", "author": null, "committer": null, "parents": [{"sha": "6589083a69c0eceed19d4cc4c3b417b2703b5a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6589083a69c0eceed19d4cc4c3b417b2703b5a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6589083a69c0eceed19d4cc4c3b417b2703b5a07"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "d960c7c4e77faad1b60e4433d6b92c2caa7b9dff", "filename": "gcc/cccp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cdcc1f433a256358738a6536f6d9ce7f3c04c3/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=a8cdcc1f433a256358738a6536f6d9ce7f3c04c3", "patch": "@@ -8314,6 +8314,8 @@ macarg1 (start, limit, depthptr, newlines, comments, rest_args)\n \t  if (*bp == '\\n') ++*newlines;\n \t  bp++;\n \t}\n+\t/* Now count the newline that we are about to skip.  */\n+\t++*newlines;\n \tbreak;\n       }\n       if (bp[1] != '*' || bp + 1 >= limit)"}]}