{"sha": "37d7333eae1b52c1b24ef34fe2d74093cadfe1d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdkNzMzM2VhZTFiNTJjMWIyNGVmMzRmZTJkNzQwOTNjYWRmZTFkNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-08T00:03:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-08T00:03:41Z"}, "message": "pa.h (target_switches): Add \"-mtrailing-colon\"\n\n\t* pa.h (target_switches): Add \"-mtrailing-colon\"\n\t(ASM_OUTPUT_LABEL): If TARGET_TRAILING_COLON then emit\n\ta colon after the label.\n\t(ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n\t(ASM_OUTPUT_COMMON): Likewise.\n\t(ASM_OUTPUT_LOCAL): Likewise.\n\nFrom-SVN: r3154", "tree": {"sha": "5e4e70e1debb5a8986ad239c4668f36ab1b9cf8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e4e70e1debb5a8986ad239c4668f36ab1b9cf8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6/comments", "author": null, "committer": null, "parents": [{"sha": "957f7fb8d877bc5a2e3e495a3bddd29d8d1c4cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957f7fb8d877bc5a2e3e495a3bddd29d8d1c4cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957f7fb8d877bc5a2e3e495a3bddd29d8d1c4cea"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "91d506083bf78cbbbe9230a2d049994964c06a27", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d7333eae1b52c1b24ef34fe2d74093cadfe1d6/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=37d7333eae1b52c1b24ef34fe2d74093cadfe1d6", "patch": "@@ -74,6 +74,11 @@ extern int target_flags;\n \n #define TARGET_DISABLE_INDEXING (target_flags & 32)\n \n+/* Force a colon to be tacked onto the end of local and global\n+   labels.  An option because the HP assembler croaks on them.   */\n+\n+#define TARGET_TRAILING_COLON (target_flags & 64)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -91,6 +96,7 @@ extern int target_flags;\n    {\"no-shared-libs\", -8},\\\n    {\"long-calls\", 16},\t\\\n    {\"disable-indexing\", 32},\\\n+   {\"trailing-colon\", 64},\\\n    { \"\", TARGET_DEFAULT}}\n \n #ifndef TARGET_DEFAULT\n@@ -1542,7 +1548,10 @@ bss_section ()\t\t\t\t\t\t\t\t\\\n    such as the label on a static function or variable NAME.  */\n \n #define ASM_OUTPUT_LABEL(FILE, NAME)\t\\\n-  do { assemble_name (FILE, NAME); fputc ('\\n', FILE); } while (0)\n+  do { assemble_name (FILE, NAME); \t\\\n+       if (TARGET_TRAILING_COLON)\t\\\n+\t fputc (':', FILE);\t\t\\\n+       fputc ('\\n', FILE); } while (0)\n \n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n@@ -1596,7 +1605,11 @@ bss_section ()\t\t\t\t\t\t\t\t\\\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s$%04d\\n\", PREFIX, NUM)\n+  {fprintf (FILE, \"%s$%04d\", PREFIX, NUM);\t\t\\\n+   if (TARGET_TRAILING_COLON)\t\t\t\t\\\n+     fputs (\":\\n\", FILE);\t\t\t\t\\\n+   else\t\t\t\t\t\t\t\\\n+     fputs (\":\\n\", FILE);}\n \n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n@@ -1697,19 +1710,23 @@ bss_section ()\t\t\t\t\t\t\t\t\\\n \n \n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n-( bss_section (),\t\t\t\t\t\\\n-  assemble_name ((FILE), (NAME)),\t\t\t\\\n-  fputs (\"\\t.comm \", (FILE)),\t\t\t\t\\\n-  fprintf ((FILE), \"%d\\n\", (ROUNDED)))\n+{ bss_section ();\t\t\t\t\t\\\n+  assemble_name ((FILE), (NAME));\t\t\t\\\n+  if (TARGET_TRAILING_COLON) \t\t\t\t\\\n+    fputc (':', (FILE));\t\t\t\t\\\n+  fputs (\"\\t.comm \", (FILE));\t\t\t\t\\\n+  fprintf ((FILE), \"%d\\n\", (ROUNDED));}\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */\n \n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n-( bss_section (),\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t.align %d\\n\", (SIZE) <= 4 ? 4 : 8),\t\\\n-  assemble_name ((FILE), (NAME)),\t\t\t\t\\\n-  fprintf ((FILE), \"\\n\\t.block %d\\n\", (ROUNDED)))\n+{ bss_section ();\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t.align %d\\n\", (SIZE) <= 4 ? 4 : 8);\t\\\n+  assemble_name ((FILE), (NAME));\t\t\t\t\\\n+  if (TARGET_TRAILING_COLON) \t\t\t\t\\\n+    fputc (':', (FILE));\t\t\t\t\\\n+  fprintf ((FILE), \"\\n\\t.block %d\\n\", (ROUNDED));}\n \n /* Store in OUTPUT a string (made with alloca) containing\n    an assembler-name for a local static variable named NAME."}]}