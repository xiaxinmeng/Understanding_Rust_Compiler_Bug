{"sha": "9a0f9fb8ba2140fb365b9c771c733401de929ff2", "node_id": "C_kwDOANBUbNoAKDlhMGY5ZmI4YmEyMTQwZmIzNjViOWM3NzFjNzMzNDAxZGU5MjlmZjI", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-23T15:59:20Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-02-24T14:43:01Z"}, "message": "ast: Add proper visitors for ExternalTypeItem\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-item.h: Add non-const `get_visibility` to ExternalTypeItem.\n\t* ast/rust-ast-dump.cc (Dump::visit): Add implementation for ExternalTypeItem.\n\t* expand/rust-attribute-visitor.cc (AttrVisitor::visit): Likewise.", "tree": {"sha": "160a9a66c37ca9b88130b98525750a94ffad816f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/160a9a66c37ca9b88130b98525750a94ffad816f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a0f9fb8ba2140fb365b9c771c733401de929ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0f9fb8ba2140fb365b9c771c733401de929ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a0f9fb8ba2140fb365b9c771c733401de929ff2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0f9fb8ba2140fb365b9c771c733401de929ff2/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "782d6d062dddb6821ff492b316c7cb02eb6aff52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782d6d062dddb6821ff492b316c7cb02eb6aff52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/782d6d062dddb6821ff492b316c7cb02eb6aff52"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "1cfcebbab9df0239e3b51f987142e695f8b5c163", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=9a0f9fb8ba2140fb365b9c771c733401de929ff2", "patch": "@@ -1434,7 +1434,11 @@ Dump::visit (TraitImpl &impl)\n \n void\n Dump::visit (ExternalTypeItem &type)\n-{}\n+{\n+  visit (type.get_visibility ());\n+\n+  stream << \"type \" << type.get_identifier () << ';';\n+}\n \n void\n Dump::visit (ExternalStaticItem &)"}, {"sha": "ab7d323607b802b1cd41e7c4071129c2c1509ec9", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=9a0f9fb8ba2140fb365b9c771c733401de929ff2", "patch": "@@ -3971,6 +3971,7 @@ class ExternalTypeItem : public ExternalItem\n \n   Identifier get_identifier () const { return item_name; }\n \n+  Visibility &get_visibility () { return visibility; }\n   const Visibility &get_visibility () const { return visibility; }\n \n protected:"}, {"sha": "ce93986003d7856f8cdb969abee3ca09bbbeeacc", "filename": "gcc/rust/expand/rust-attribute-visitor.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a0f9fb8ba2140fb365b9c771c733401de929ff2/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc?ref=9a0f9fb8ba2140fb365b9c771c733401de929ff2", "patch": "@@ -2738,7 +2738,14 @@ AttrVisitor::visit (AST::TraitImpl &impl)\n void\n AttrVisitor::visit (AST::ExternalTypeItem &item)\n {\n-  // TODO: ARTHUR\n+  expander.expand_cfg_attrs (item.get_outer_attrs ());\n+\n+  if (expander.fails_cfg_with_expand (item.get_outer_attrs ()))\n+    item.mark_for_strip ();\n+\n+  // TODO: Can we do anything like expand a macro here?\n+  // extern \"C\" { type ffi_ty!(); }\n+  // ?\n }\n \n void"}]}