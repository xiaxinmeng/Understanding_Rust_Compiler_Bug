{"sha": "d1773f58f3a03e6c764373635fa079fa7526cfcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE3NzNmNThmM2EwM2U2Yzc2NDM3MzYzNWZhMDc5ZmE3NTI2Y2ZjZg==", "commit": {"author": {"name": "Yunde Zhong", "email": "zhongyunde@huawei.com", "date": "2020-08-03T14:05:02Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-03T14:05:02Z"}, "message": "regrename: Avoid disrupting SMS schedule [PR95696]\n\nSMS is performed before reload, and each insn in SMS schedule uses\npseudo-register.  After reload, regrename pass try to adjust the hard\nregisters with def/use chain created by build_def_use.  For now, regrename\npass isn't aware of VLIW bundles created by SMS, it may updated a register\nwhich may not be really unused, which will causes invalid VLIW bundles.\nBefore the final schedule, we recheck the validation of VLIW bundles and\nreschedule the conflicted insns to avoid the above issue.  Rescheduling\nthe conflicted insns will destroy SMS schedule of the kernel loop, which\nwould be harmful to performance.\n\n2020-08-03  Yunde Zhong  <zhongyunde@huawei.com>\n\ngcc/\n\tPR rtl-optimization/95696\n\t* regrename.c (regrename_analyze): New param include_all_block_p\n\twith default value TRUE.  If set to false, avoid disrupting SMS\n\tschedule.\n\t* regrename.h (regrename_analyze): Adjust prototype.", "tree": {"sha": "5d1b1ca140623035346cc4bc0a356569629b74ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d1b1ca140623035346cc4bc0a356569629b74ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1773f58f3a03e6c764373635fa079fa7526cfcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1773f58f3a03e6c764373635fa079fa7526cfcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1773f58f3a03e6c764373635fa079fa7526cfcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1773f58f3a03e6c764373635fa079fa7526cfcf/comments", "author": {"login": "vfdff", "id": 6094516, "node_id": "MDQ6VXNlcjYwOTQ1MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6094516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vfdff", "html_url": "https://github.com/vfdff", "followers_url": "https://api.github.com/users/vfdff/followers", "following_url": "https://api.github.com/users/vfdff/following{/other_user}", "gists_url": "https://api.github.com/users/vfdff/gists{/gist_id}", "starred_url": "https://api.github.com/users/vfdff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vfdff/subscriptions", "organizations_url": "https://api.github.com/users/vfdff/orgs", "repos_url": "https://api.github.com/users/vfdff/repos", "events_url": "https://api.github.com/users/vfdff/events{/privacy}", "received_events_url": "https://api.github.com/users/vfdff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b32c5d0b72fda2588b4e170e75a9c64e4bf266c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32c5d0b72fda2588b4e170e75a9c64e4bf266c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32c5d0b72fda2588b4e170e75a9c64e4bf266c7"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "ebe74c50d0a743a21e15455214ba42e65558da2a", "filename": "gcc/regrename.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1773f58f3a03e6c764373635fa079fa7526cfcf/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1773f58f3a03e6c764373635fa079fa7526cfcf/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=d1773f58f3a03e6c764373635fa079fa7526cfcf", "patch": "@@ -695,10 +695,12 @@ merge_chains (du_head_p c1, du_head_p c2)\n   c1->cannot_rename |= c2->cannot_rename;\n }\n \n-/* Analyze the current function and build chains for renaming.  */\n+/* Analyze the current function and build chains for renaming.\n+   If INCLUDE_ALL_BLOCKS_P is set to true, process all blocks,\n+   ignoring BB_DISABLE_SCHEDULE.  The default value is true.  */\n \n void\n-regrename_analyze (bitmap bb_mask)\n+regrename_analyze (bitmap bb_mask, bool include_all_block_p)\n {\n   class bb_rename_info *rename_info;\n   int i;\n@@ -748,6 +750,14 @@ regrename_analyze (bitmap bb_mask)\n       if (dump_file)\n \tfprintf (dump_file, \"\\nprocessing block %d:\\n\", bb1->index);\n \n+      if (!include_all_block_p && (bb1->flags & BB_DISABLE_SCHEDULE) != 0)\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"avoid disrupting the sms schedule of bb %d\\n\",\n+\t\t     bb1->index);\n+\t  continue;\n+\t}\n+\n       init_rename_info (this_info, bb1);\n \n       success = build_def_use (bb1);\n@@ -1962,7 +1972,7 @@ regrename_optimize (void)\n \n   regrename_init (false);\n \n-  regrename_analyze (NULL);\n+  regrename_analyze (NULL, false);\n \n   rename_chains ();\n "}, {"sha": "10a3aa14e5d76f0d03b4a986b45e4c4587b95f03", "filename": "gcc/regrename.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1773f58f3a03e6c764373635fa079fa7526cfcf/gcc%2Fregrename.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1773f58f3a03e6c764373635fa079fa7526cfcf/gcc%2Fregrename.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.h?ref=d1773f58f3a03e6c764373635fa079fa7526cfcf", "patch": "@@ -100,7 +100,7 @@ extern vec<insn_rr_info> insn_rr;\n \n extern void regrename_init (bool);\n extern void regrename_finish (void);\n-extern void regrename_analyze (bitmap);\n+extern void regrename_analyze (bitmap, bool = true);\n extern du_head_p regrename_chain_from_id (unsigned int);\n extern int find_rename_reg (du_head_p, enum reg_class, HARD_REG_SET *, int,\n \t\t\t    bool);"}]}