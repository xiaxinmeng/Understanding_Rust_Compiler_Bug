{"sha": "7c225e88059d5c628b0f5449fd400f57223d9d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyMjVlODgwNTlkNWM2MjhiMGY1NDQ5ZmQ0MDBmNTcyMjNkOWQzNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-24T21:44:03Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-24T21:44:03Z"}, "message": "(branch_true, branch_false, inverse_branch_true,\n\ninverse_branch_false, beq, bne, bgt, blt, ble, bge, bgtu, bltu,\nbgeu, bleu, casesi): Express tests of the T bit as comparisons\nagainst zero, rather thann one.\n\nFrom-SVN: r12561", "tree": {"sha": "7dc238689a4a540de6b9feb8b4e1cd2734078e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc238689a4a540de6b9feb8b4e1cd2734078e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c225e88059d5c628b0f5449fd400f57223d9d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c225e88059d5c628b0f5449fd400f57223d9d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c225e88059d5c628b0f5449fd400f57223d9d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c225e88059d5c628b0f5449fd400f57223d9d37/comments", "author": null, "committer": null, "parents": [{"sha": "fe25fea3f817e507caec0b3b9f41b318aae2a1ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe25fea3f817e507caec0b3b9f41b318aae2a1ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe25fea3f817e507caec0b3b9f41b318aae2a1ee"}], "stats": {"total": 36, "additions": 16, "deletions": 20}, "files": [{"sha": "91fa45832142f49f1de4f95e71f5ee8a6d2b3eb4", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c225e88059d5c628b0f5449fd400f57223d9d37/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c225e88059d5c628b0f5449fd400f57223d9d37/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7c225e88059d5c628b0f5449fd400f57223d9d37", "patch": "@@ -1483,36 +1483,32 @@\n ;; Define the real conditional branch instructions.\n ;; ------------------------------------------------------------------------\n \n-;; ??? Branches should compare T-bit against zero not one, so that they will\n-;; be in canonical form.  get_condition in loop.c for instance will fail\n-;; with these patterns.\n-\n (define_insn \"branch_true\"\n-  [(set (pc) (if_then_else (eq (reg:SI 18) (const_int 1))\n+  [(set (pc) (if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))\n \t\t\t   (pc)))]\n   \"\"\n   \"* return output_branch (1, insn, operands);\"\n   [(set_attr \"type\" \"cbranch\")])\n \n (define_insn \"branch_false\"\n-  [(set (pc) (if_then_else (ne (reg:SI 18) (const_int 1))\n+  [(set (pc) (if_then_else (eq (reg:SI 18) (const_int 0))\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))\n \t\t\t   (pc)))]\n   \"\"\n   \"* return output_branch (0, insn, operands);\"\n   [(set_attr \"type\" \"cbranch\")])\n \n (define_insn \"inverse_branch_true\"\n-  [(set (pc) (if_then_else (eq (reg:SI 18) (const_int 1))\n+  [(set (pc) (if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n   \"* return output_branch (0, insn, operands);\"\n   [(set_attr \"type\" \"cbranch\")])\n \n (define_insn \"inverse_branch_false\"\n-  [(set (pc) (if_then_else (ne (reg:SI 18) (const_int 1))\n+  [(set (pc) (if_then_else (eq (reg:SI 18) (const_int 0))\n    \t\t\t   (pc)\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1524,7 +1520,7 @@\n (define_expand \"beq\"\n   [(set (reg:SI 18) (eq:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n@@ -1535,7 +1531,7 @@\n (define_expand \"bne\"\n   [(set (reg:SI 18) (eq:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1544,7 +1540,7 @@\n (define_expand \"bgt\"\n   [(set (reg:SI 18) (gt:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n@@ -1553,7 +1549,7 @@\n (define_expand \"blt\"\n   [(set (reg:SI 18) (ge:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1573,7 +1569,7 @@\n (define_expand \"ble\"\n   [(set (reg:SI 18) (gt:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1582,7 +1578,7 @@\n (define_expand \"bge\"\n   [(set (reg:SI 18) (ge:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n@@ -1602,7 +1598,7 @@\n (define_expand \"bgtu\"\n   [(set (reg:SI 18) (gtu:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n@@ -1611,7 +1607,7 @@\n (define_expand \"bltu\"\n   [(set (reg:SI 18) (geu:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t\t  (if_then_else (eq (reg:SI 18) (const_int 1))\n+\t\t  (if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t\t\t(pc)\n \t\t\t\t(label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1620,7 +1616,7 @@\n (define_expand \"bgeu\"\n   [(set (reg:SI 18) (geu:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n@@ -1629,7 +1625,7 @@\n (define_expand \"bleu\"\n   [(set (reg:SI 18) (gtu:SI (match_dup 1) (match_dup 2)))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18) (const_int 1))\n+\t(if_then_else (ne (reg:SI 18) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n@@ -1776,8 +1772,8 @@\n \t(gtu:SI (match_dup 5)\n \t\t(match_operand:SI 2 \"arith_reg_operand\" \"\")))\n    (set (pc)\n-\t(if_then_else (eq (reg:SI 18)\n-\t\t\t  (const_int 1))\n+\t(if_then_else (ne (reg:SI 18)\n+\t\t\t  (const_int 0))\n \t\t      (label_ref (match_operand 4 \"\" \"\"))\n \t\t      (pc)))\n    (set (match_dup 6) (match_dup 5))"}]}