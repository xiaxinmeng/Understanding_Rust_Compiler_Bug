{"sha": "7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhM2EzYzc1OTY0ZGZlZjQ1ZWFhNzcxZmM5MTRlYzE1YTZhYWRhOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-17T13:17:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-17T13:17:30Z"}, "message": "re PR tree-optimization/82563 ([graphite] ICE in check_loop_closed_ssa_def, at tree-ssa-loop-manip.c:709)\n\n2017-10-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82563\n\t* graphite-isl-ast-to-gimple.c (generate_entry_out_of_ssa_copies):\n\tNew function.\n\t(graphite_regenerate_ast_isl): Call it.\n\t* graphite-scop-detection.c (build_scops): Remove entry edge split.\n\n\t* gcc.dg/graphite/pr82563.c: New testcase.\n\nFrom-SVN: r253809", "tree": {"sha": "9cfe98c1013f2ad06a2f89e70d58aba168cde7f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cfe98c1013f2ad06a2f89e70d58aba168cde7f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "933ab0e61c668a41bcd8f5ab7a8963481e7eb5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933ab0e61c668a41bcd8f5ab7a8963481e7eb5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933ab0e61c668a41bcd8f5ab7a8963481e7eb5ec"}], "stats": {"total": 73, "additions": 69, "deletions": 4}, "files": [{"sha": "4107557527283ced69e67df3d4181ef749992865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "patch": "@@ -1,3 +1,11 @@\n+2017-10-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82563\n+\t* graphite-isl-ast-to-gimple.c (generate_entry_out_of_ssa_copies):\n+\tNew function.\n+\t(graphite_regenerate_ast_isl): Call it.\n+\t* graphite-scop-detection.c (build_scops): Remove entry edge split.\n+\n 2017-10-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/82549"}, {"sha": "959d31dbb2c59c909b3d9dd3556c261023c21398", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "patch": "@@ -1501,6 +1501,35 @@ copy_internal_parameters (sese_info_p region, sese_info_p to_region)\n     }\n }\n \n+/* Generate out-of-SSA copies for the entry edge FALSE_ENTRY/TRUE_ENTRY\n+   in REGION.  */\n+\n+static void\n+generate_entry_out_of_ssa_copies (edge false_entry,\n+\t\t\t\t  edge true_entry,\n+\t\t\t\t  sese_info_p region)\n+{\n+  gimple_stmt_iterator gsi_tgt = gsi_start_bb (true_entry->dest);\n+  for (gphi_iterator psi = gsi_start_phis (false_entry->dest);\n+       !gsi_end_p (psi); gsi_next (&psi))\n+    {\n+      gphi *phi = psi.phi ();\n+      tree res = gimple_phi_result (phi);\n+      if (virtual_operand_p (res))\n+\tcontinue;\n+      /* When there's no out-of-SSA var registered do not bother\n+         to create one.  */\n+      vec <tree> *renames = region->rename_map->get (res);\n+      if (! renames || renames->is_empty ())\n+\tcontinue;\n+      tree new_phi_def = (*renames)[0];\n+      gassign *ass = gimple_build_assign (new_phi_def,\n+\t\t\t\t\t  PHI_ARG_DEF_FROM_EDGE (phi,\n+\t\t\t\t\t\t\t\t false_entry));\n+      gsi_insert_after (&gsi_tgt, ass, GSI_NEW_STMT);\n+    }\n+}\n+\n /* GIMPLE Loop Generator: generates loops in GIMPLE form for the given SCOP.\n    Return true if code generation succeeded.  */\n \n@@ -1548,6 +1577,9 @@ graphite_regenerate_ast_isl (scop_p scop)\n   t.translate_isl_ast (context_loop, root_node, e, ip);\n   if (! t.codegen_error_p ())\n     {\n+      generate_entry_out_of_ssa_copies (if_region->false_region->region.entry,\n+\t\t\t\t\tif_region->true_region->region.entry,\n+\t\t\t\t\tregion);\n       sese_insert_phis_for_liveouts (region,\n \t\t\t\t     if_region->region->region.exit->src,\n \t\t\t\t     if_region->false_region->region.exit,"}, {"sha": "ce6ab9545275061afffaa78938328855dc532aae", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "patch": "@@ -1708,10 +1708,6 @@ build_scops (vec<scop_p> *scops)\n   sese_l *s;\n   FOR_EACH_VEC_ELT (scops_l, i, s)\n     {\n-      /* For our out-of-SSA we need a block on s->entry, similar to how\n-         we include the LCSSA block in the region.  */\n-      s->entry = single_pred_edge (split_edge (s->entry));\n-\n       scop_p scop = new_scop (s->entry, s->exit);\n \n       /* Record all basic blocks and their conditions in REGION.  */"}, {"sha": "bd817f7c0c6b7f7bbf70678ffc4f9df32bcd5ea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "patch": "@@ -1,3 +1,8 @@\n+2017-10-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82563\n+\t* gcc.dg/graphite/pr82563.c: New testcase.\n+\n 2017-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67831"}, {"sha": "cd492fa79c88ee1aec2d6e8279d4c5d2977c3d33", "filename": "gcc/testsuite/gcc.dg/graphite/pr82563.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82563.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea3a3c75964dfef45eaa771fc914ec15a6aada9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82563.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82563.c?ref=7ea3a3c75964dfef45eaa771fc914ec15a6aada9", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -floop-nest-optimize\" } */\n+\n+int tj, cw, xf;\n+\n+void\n+zp (int *ei)\n+{\n+  for (;;)\n+    {\n+      int hd = 0;\n+\n+      if (cw != 0 && xf != 0)\n+\t{\n+\t  for (hd = 0; hd < 3; ++hd)\n+\t    cw = (tj != 0) ? 0 : *ei;\n+\t  for (;;)\n+\t    ;\n+\t}\n+\n+      while (tj != 0)\n+\ttj = (__UINTPTR_TYPE__)&hd;\n+    }\n+}"}]}