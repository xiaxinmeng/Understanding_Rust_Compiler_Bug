{"sha": "5989388cdfa7b757a9aab117f4dcabea147050a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk4OTM4OGNkZmE3Yjc1N2E5YWFiMTE3ZjRkY2FiZWExNDcwNTBhOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-07-19T16:16:18Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-07-19T16:16:18Z"}, "message": "selftest.c: gracefully handle NULL in assert_streq\n\ngcc/ChangeLog:\n\t* selftest.c (selftest::assert_streq): Handle NULL values of\n\tval_actual and val_expected.\n\nFrom-SVN: r238479", "tree": {"sha": "e4ee0d5c05e2de2cefd1981773a0be5e1d7da5a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ee0d5c05e2de2cefd1981773a0be5e1d7da5a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5989388cdfa7b757a9aab117f4dcabea147050a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5989388cdfa7b757a9aab117f4dcabea147050a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5989388cdfa7b757a9aab117f4dcabea147050a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5989388cdfa7b757a9aab117f4dcabea147050a8/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "985a47b29755eb080355712e98c76daeeccba659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985a47b29755eb080355712e98c76daeeccba659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/985a47b29755eb080355712e98c76daeeccba659"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "4d4cd9b44e847d58fb590dda60c457aa54aabb64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5989388cdfa7b757a9aab117f4dcabea147050a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5989388cdfa7b757a9aab117f4dcabea147050a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5989388cdfa7b757a9aab117f4dcabea147050a8", "patch": "@@ -1,3 +1,8 @@\n+2016-07-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* selftest.c (selftest::assert_streq): Handle NULL values of\n+\tval_actual and val_expected.\n+\n 2016-07-19  Martin Jambor  <mjambor@suse.cz>\n \n         PR fortran/71688"}, {"sha": "76a4c4149479b041acd134dd8a47fde03b9f8737", "filename": "gcc/selftest.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5989388cdfa7b757a9aab117f4dcabea147050a8/gcc%2Fselftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5989388cdfa7b757a9aab117f4dcabea147050a8/gcc%2Fselftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.c?ref=5989388cdfa7b757a9aab117f4dcabea147050a8", "patch": "@@ -60,13 +60,25 @@ selftest::fail_formatted (const location &loc, const char *fmt, ...)\n   abort ();\n }\n \n-/* Implementation detail of ASSERT_STREQ.  */\n+/* Implementation detail of ASSERT_STREQ.\n+   Compare val_expected and val_actual with strcmp.  They ought\n+   to be non-NULL; fail gracefully if either are NULL.  */\n \n void\n selftest::assert_streq (const location &loc,\n \t\t\tconst char *desc_expected, const char *desc_actual,\n \t\t\tconst char *val_expected, const char *val_actual)\n {\n+  /* If val_expected is NULL, the test is buggy.  Fail gracefully.  */\n+  if (val_expected == NULL)\n+    ::selftest::fail_formatted\n+\t(loc, \"ASSERT_STREQ (%s, %s) expected=NULL\",\n+\t desc_expected, desc_actual);\n+  /* If val_actual is NULL, fail with a custom error message.  */\n+  if (val_actual == NULL)\n+    ::selftest::fail_formatted\n+\t(loc, \"ASSERT_STREQ (%s, %s) expected=\\\"%s\\\" actual=NULL\",\n+\t desc_expected, desc_actual, val_expected);\n   if (0 == strcmp (val_expected, val_actual))\n     ::selftest::pass (loc, \"ASSERT_STREQ\");\n   else"}]}