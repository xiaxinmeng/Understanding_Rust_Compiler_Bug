{"sha": "fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM3ZmNkYTEyYmQxNmMyYzc1MTVkOWQxZDEzNTBjMzU0NzkxNmU1Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-07-14T16:22:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-07-14T16:22:06Z"}, "message": "passes.c (rest_of_decl_compilation): Do not call\n\n        * passes.c (rest_of_decl_compilation): Do not call\n        * assemble_variable for functions.\n        * varasm.c (assemble_variable): Remove early exit for functions;\n        assert that we're given a variable.\n\nFrom-SVN: r162184", "tree": {"sha": "874b2a508d9c0b1ec4eb686294037a1d6c7610d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/874b2a508d9c0b1ec4eb686294037a1d6c7610d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/comments", "author": null, "committer": null, "parents": [{"sha": "eab3f92e9569d18a1dc9f9080bf91fc365143f65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab3f92e9569d18a1dc9f9080bf91fc365143f65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab3f92e9569d18a1dc9f9080bf91fc365143f65"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "c836f49ebc765861507d8b7db9f516c61b7522e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "patch": "@@ -1,3 +1,10 @@\n+2010-07-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* passes.c (rest_of_decl_compilation): Do not call assemble_variable\n+\tfor functions.\n+\t* varasm.c (assemble_variable): Remove early exit for functions;\n+\tassert that we're given a variable.\n+\n 2010-07-14  Jie Zhang  <jie@codesourcery.com>\n \n \t* config/arm/cortex-a8.md (cortex_a8_alu): Don't use"}, {"sha": "72e9b5aaa32af331e27510698b6fc23d64899736", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "patch": "@@ -194,8 +194,6 @@ rest_of_decl_compilation (tree decl,\n \t    ;\n \t  else if (TREE_CODE (decl) != FUNCTION_DECL)\n \t    varpool_finalize_decl (decl);\n-\t  else\n-\t    assemble_variable (decl, top_level, at_end, 0);\n \t}\n \n #ifdef ASM_FINISH_DECLARE_OBJECT"}, {"sha": "55218c4a96e202854ea5345b47c78639dea0c66c", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc7fcda12bd16c2c7515d9d1d1350c3547916e5c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=fc7fcda12bd16c2c7515d9d1d1350c3547916e5c", "patch": "@@ -2150,6 +2150,9 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n   rtx decl_rtl, symbol;\n   section *sect;\n \n+  /* This function is supposed to handle VARIABLES.  Ensure we have one.  */\n+  gcc_assert (TREE_CODE (decl) == VAR_DECL);\n+\n   if (! targetm.have_tls\n       && TREE_CODE (decl) == VAR_DECL\n       && DECL_THREAD_LOCAL_P (decl))\n@@ -2188,12 +2191,6 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n   if (DECL_EXTERNAL (decl))\n     return;\n \n-  /* Output no assembler code for a function declaration.\n-     Only definitions of functions output anything.  */\n-\n-  if (TREE_CODE (decl) == FUNCTION_DECL)\n-    return;\n-\n   /* Do nothing for global register variables.  */\n   if (DECL_RTL_SET_P (decl) && REG_P (DECL_RTL (decl)))\n     {"}]}