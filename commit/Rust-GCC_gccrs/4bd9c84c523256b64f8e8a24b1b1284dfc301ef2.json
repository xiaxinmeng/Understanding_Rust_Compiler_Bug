{"sha": "4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJkOWM4NGM1MjMyNTZiNjRmOGU4YTI0YjFiMTI4NGRmYzMwMWVmMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-11-21T18:38:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-11-21T18:38:18Z"}, "message": "Improve -Wmaybe-uninitialized documentation\n\n\t* doc/invoke.texi (-Wmaybe-uninitialized): Rephrase for clarity.\n\nFrom-SVN: r255022", "tree": {"sha": "2be36654a6995bd5baad37ba4ad84349d2e141f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2be36654a6995bd5baad37ba4ad84349d2e141f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af4ebf5985ef2aaac13862654044d84a3cd7ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af4ebf5985ef2aaac13862654044d84a3cd7ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af4ebf5985ef2aaac13862654044d84a3cd7ae4"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "36c55ebe709a99ebf58b8e0d6bae3bd192d2783c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "patch": "@@ -1,3 +1,7 @@\n+2017-11-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/invoke.texi (-Wmaybe-uninitialized): Rephrase for clarity.\n+\n 2017-11-21  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* doc/generic.texi: Document POINTER_DIFF_EXPR, update"}, {"sha": "47323e5b0da27e9badbd76fe43dd8dee3c79e8df", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd9c84c523256b64f8e8a24b1b1284dfc301ef2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4bd9c84c523256b64f8e8a24b1b1284dfc301ef2", "patch": "@@ -4974,14 +4974,18 @@ void store (int *i)\n @item -Wmaybe-uninitialized\n @opindex Wmaybe-uninitialized\n @opindex Wno-maybe-uninitialized\n-For an automatic variable, if there exists a path from the function\n-entry to a use of the variable that is initialized, but there exist\n+For an automatic (i.e.@ local) variable, if there exists a path from the\n+function entry to a use of the variable that is initialized, but there exist\n some other paths for which the variable is not initialized, the compiler\n emits a warning if it cannot prove the uninitialized paths are not\n-executed at run time. These warnings are made optional because GCC is\n-not smart enough to see all the reasons why the code might be correct\n-in spite of appearing to have an error.  Here is one example of how\n-this can happen:\n+executed at run time.\n+\n+These warnings are only possible in optimizing compilation, because otherwise\n+GCC does not keep track of the state of variables.\n+\n+These warnings are made optional because GCC may not be able to determine when\n+the code is correct in spite of appearing to have an error.  Here is one\n+example of how this can happen:\n \n @smallexample\n @group\n@@ -5008,9 +5012,7 @@ similar code.\n \n @cindex @code{longjmp} warnings\n This option also warns when a non-volatile automatic variable might be\n-changed by a call to @code{longjmp}.  These warnings as well are possible\n-only in optimizing compilation.\n-\n+changed by a call to @code{longjmp}.\n The compiler sees only the calls to @code{setjmp}.  It cannot know\n where @code{longjmp} will be called; in fact, a signal handler could\n call it at any point in the code.  As a result, you may get a warning"}]}