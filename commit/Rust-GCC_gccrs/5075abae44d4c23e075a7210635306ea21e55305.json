{"sha": "5075abae44d4c23e075a7210635306ea21e55305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3NWFiYWU0NGQ0YzIzZTA3NWE3MjEwNjM1MzA2ZWEyMWU1NTMwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-12-21T13:13:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-12-21T13:13:15Z"}, "message": "re PR middle-end/30262 (ICE with nested fn accessed var in asm \"m\" constraint)\n\n\tPR middle-end/30262\n\tPR middle-end/30263\n\t* tree-nested.c (walk_asm_expr): New function.\n\t(walk_stmts): Use it for ASM_EXPR.\n\n\t* gcc.c-torture/execute/20061220-1.c: New test.\n\t* gcc.dg/gomp/asm-1.c: New test.\n\nFrom-SVN: r120106", "tree": {"sha": "69466bf4e0591fc2f8589b38412c0b9a5d416980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69466bf4e0591fc2f8589b38412c0b9a5d416980"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5075abae44d4c23e075a7210635306ea21e55305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5075abae44d4c23e075a7210635306ea21e55305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5075abae44d4c23e075a7210635306ea21e55305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5075abae44d4c23e075a7210635306ea21e55305/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a4cd49c06a5bc003ce6282c4c613575185ac118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4cd49c06a5bc003ce6282c4c613575185ac118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4cd49c06a5bc003ce6282c4c613575185ac118"}], "stats": {"total": 147, "additions": 147, "deletions": 0}, "files": [{"sha": "8d85e15725619f2e4afedea073b061213b9c463c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5075abae44d4c23e075a7210635306ea21e55305/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5075abae44d4c23e075a7210635306ea21e55305/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5075abae44d4c23e075a7210635306ea21e55305", "patch": "@@ -1,5 +1,10 @@\n 2006-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/30262\n+\tPR middle-end/30263\n+\t* tree-nested.c (walk_asm_expr): New function.\n+\t(walk_stmts): Use it for ASM_EXPR.\n+\n \tPR target/30230\n \t* config/ia64/ia64.c (ia64_add_bundle_selector_before): New function.\n \t(bundling): Use it."}, {"sha": "c5739dea6cbb52fe65dc84e9be7666202fd01459", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5075abae44d4c23e075a7210635306ea21e55305", "patch": "@@ -1,5 +1,11 @@\n 2006-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/30262\n+\t* gcc.c-torture/execute/20061220-1.c: New test.\n+\n+\tPR middle-end/30263\n+\t* gcc.dg/gomp/asm-1.c: New test.\n+\n \tPR target/30230\n \t* g++.dg/eh/ia64-2.C: New test.\n "}, {"sha": "188f92cfc8edf2b7c85f2219ac18231dbfe5ce24", "filename": "gcc/testsuite/gcc.c-torture/execute/20061220-1.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c?ref=5075abae44d4c23e075a7210635306ea21e55305", "patch": "@@ -0,0 +1,72 @@\n+/* PR middle-end/30262 */\n+extern void abort (void);\n+\n+int\n+foo (void)\n+{\n+  unsigned int x = 0;\n+\n+  void nested (void)\n+  {\n+    x = 254;\n+  }\n+\n+  nested ();\n+  asm volatile (\"\" :: \"r\" (x));\n+  asm volatile (\"\" :: \"m\" (x));\n+  asm volatile (\"\" :: \"mr\" (x));\n+  asm volatile (\"\" : \"=r\" (x) : \"0\" (x));\n+  asm volatile (\"\" : \"=m\" (x) : \"m\" (x));\n+  return x;\n+}\n+\n+int\n+bar (void)\n+{\n+  unsigned int x = 0;\n+\n+  void nested (void)\n+  {\n+    asm volatile (\"\" :: \"r\" (x));\n+    asm volatile (\"\" :: \"m\" (x));\n+    asm volatile (\"\" :: \"mr\" (x));\n+    x += 4;\n+    asm volatile (\"\" : \"=r\" (x) : \"0\" (x));\n+    asm volatile (\"\" : \"=m\" (x) : \"m\" (x));\n+  }\n+\n+  nested ();\n+  return x;\n+}\n+\n+int\n+baz (void)\n+{\n+  unsigned int x = 0;\n+\n+  void nested (void)\n+  {\n+    void nested2 (void)\n+    {\n+      asm volatile (\"\" :: \"r\" (x));\n+      asm volatile (\"\" :: \"m\" (x));\n+      asm volatile (\"\" :: \"mr\" (x));\n+      x += 4;\n+      asm volatile (\"\" : \"=r\" (x) : \"0\" (x));\n+      asm volatile (\"\" : \"=m\" (x) : \"m\" (x));\n+    }\n+    nested2 ();\n+    nested2 ();\n+  }\n+\n+  nested ();\n+  return x;\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo () != 254 || bar () != 4 || baz () != 8)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "ced31f3b113072dd30f966f54ff240e6e1e3c3b4", "filename": "gcc/testsuite/gcc.dg/gomp/asm-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fasm-1.c?ref=5075abae44d4c23e075a7210635306ea21e55305", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/30263 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fopenmp\" } */\n+\n+void\n+foo (void)\n+{\n+  int s0, s1 = 5, s2 = 6;\n+  int p0, p1, p2;\n+  int f0 = 4, f1 = 5, f2 = 6;\n+#pragma omp parallel shared (s0, s1, s2) private (p0, p1, p2) \\\n+\t    firstprivate (f0, f1, f2)\n+  {\n+    asm (\"\" : \"=m\" (p0) : \"m\" (p1), \"mr\" (p2));\n+    if (omp_get_thread_num () == 0)\n+      asm (\"\" : \"=m\" (s0) : \"m\" (s1), \"mr\" (s2));\n+    asm (\"\" : \"=m\" (f0) : \"m\" (f1), \"mr\" (f2));\n+  }\n+}"}, {"sha": "166debb22c003ee7a0e109b1de5c8075207817d0", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5075abae44d4c23e075a7210635306ea21e55305/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=5075abae44d4c23e075a7210635306ea21e55305", "patch": "@@ -546,6 +546,47 @@ get_nl_goto_field (struct nesting_info *info)\n   return field;\n }\n \f\n+/* Helper function for walk_stmts.  Walk output operands of an ASM_EXPR.  */\n+\n+static void\n+walk_asm_expr (struct walk_stmt_info *wi, tree stmt)\n+{\n+  int noutputs = list_length (ASM_OUTPUTS (stmt));\n+  const char **oconstraints\n+    = (const char **) alloca ((noutputs) * sizeof (const char *));\n+  int i;\n+  tree link;\n+  const char *constraint;\n+  bool allows_mem, allows_reg, is_inout;\n+\n+  wi->is_lhs = true;\n+  for (i=0, link = ASM_OUTPUTS (stmt); link; ++i, link = TREE_CHAIN (link))\n+    {\n+      constraint = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (link)));\n+      oconstraints[i] = constraint;\n+      parse_output_constraint (&constraint, i, 0, 0, &allows_mem,\n+\t\t\t       &allows_reg, &is_inout);\n+\n+      wi->val_only = (allows_reg || !allows_mem);\n+      walk_tree (&TREE_VALUE (link), wi->callback, wi, NULL);\n+    }\n+\n+  for (link = ASM_INPUTS (stmt); link; link = TREE_CHAIN (link))\n+    {\n+      constraint = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (link)));\n+      parse_input_constraint (&constraint, 0, 0, noutputs, 0,\n+\t\t\t      oconstraints, &allows_mem, &allows_reg);\n+\n+      wi->val_only = (allows_reg || !allows_mem);\n+      /* Although input \"m\" is not really a LHS, we need a lvalue.  */\n+      wi->is_lhs = !wi->val_only;\n+      walk_tree (&TREE_VALUE (link), wi->callback, wi, NULL);\n+    }\n+\n+  wi->is_lhs = false;\n+  wi->val_only = true;\n+}\n+\n /* Iterate over all sub-statements of *TP calling walk_tree with\n    WI->CALLBACK for every sub-expression in each statement found.  */\n \n@@ -628,6 +669,10 @@ walk_stmts (struct walk_stmt_info *wi, tree *tp)\n       wi->is_lhs = false;\n       break;\n \n+    case ASM_EXPR:\n+      walk_asm_expr (wi, *tp);\n+      break;\n+\n     default:\n       wi->val_only = true;\n       walk_tree (tp, wi->callback, wi, NULL);"}]}