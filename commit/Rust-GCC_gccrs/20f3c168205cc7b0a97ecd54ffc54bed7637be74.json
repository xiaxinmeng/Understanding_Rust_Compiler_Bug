{"sha": "20f3c168205cc7b0a97ecd54ffc54bed7637be74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmM2MxNjgyMDVjYzdiMGE5N2VjZDU0ZmZjNTRiZWQ3NjM3YmU3NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-13T06:56:57Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-13T15:16:56Z"}, "message": "Remove m32r{,le}-*-linux* support from GCC\n\nm32r support never made it to glibc and the support for the Linux kernel\nwas removed with 4.18. It does not remove much but no reason to keep\naround a port which never worked or one which the support in other\nprojects is gone.\n\nOK? Checked to make sure m32r-linux and m32rle-linux were rejected\nwhen building.\n\ncontrib/ChangeLog:\n\n\t* config-list.mk: Remove m32r-linux and m32rle-linux\n\tfrom the list.\n\ngcc/ChangeLog:\n\n\t* config.gcc: Add m32r-*-linux* and m32rle-*-linux*\n\tto the Unsupported targets list.\n\tRemove support for m32r-*-linux* and m32rle-*-linux*.\n\t* config/m32r/linux.h: Removed.\n\t* config/m32r/t-linux: Removed.\n\nlibgcc/ChangeLog:\n\n\t* config.host: Remove m32r-*-linux* and m32rle-*-linux*.\n\t* config/m32r/libgcc-glibc.ver: Removed.\n\t* config/m32r/t-linux: Removed.", "tree": {"sha": "e753b3049c75fdd85a14ebc995c7a832747efa9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e753b3049c75fdd85a14ebc995c7a832747efa9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f3c168205cc7b0a97ecd54ffc54bed7637be74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f3c168205cc7b0a97ecd54ffc54bed7637be74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f3c168205cc7b0a97ecd54ffc54bed7637be74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f3c168205cc7b0a97ecd54ffc54bed7637be74/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c"}], "stats": {"total": 190, "additions": 3, "deletions": 187}, "files": [{"sha": "031e4db99081c5ed36afee816f8a43dfbc74b4ab", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f3c168205cc7b0a97ecd54ffc54bed7637be74/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f3c168205cc7b0a97ecd54ffc54bed7637be74/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=20f3c168205cc7b0a97ecd54ffc54bed7637be74", "patch": "@@ -57,7 +57,7 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   i686-cygwinOPT-enable-threads=yes i686-mingw32crt ia64-elf \\\n   ia64-freebsd6 ia64-linux ia64-hpux ia64-hp-vms iq2000-elf lm32-elf \\\n   lm32-rtems lm32-uclinux m32c-rtems m32c-elf m32r-elf m32rle-elf \\\n-  m32r-linux m32rle-linux m68k-elf m68k-netbsdelf \\\n+  m68k-elf m68k-netbsdelf \\\n   m68k-openbsd m68k-uclinux m68k-linux m68k-rtems \\\n   mcore-elf microblaze-linux microblaze-elf \\\n   mips-netbsd \\"}, {"sha": "d9d6ec31bbbab62f22ab833462585e69347e405f", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f3c168205cc7b0a97ecd54ffc54bed7637be74/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f3c168205cc7b0a97ecd54ffc54bed7637be74/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=20f3c168205cc7b0a97ecd54ffc54bed7637be74", "patch": "@@ -277,6 +277,8 @@ case ${target} in\n  | crisv32-*-*\t\t\t\t\\\n  | i[34567]86-go32-*\t\t\t\\\n  | i[34567]86-*-go32*\t\t\t\\\n+ | m32r-*-linux*\t\t\t\\\n+ | m32rle-*-linux*\t\t\t\\\n  | m68k-*-uclinuxoldabi*\t\t\\\n  | mips64orion*-*-rtems*\t\t\\\n  | pdp11-*-bsd\t\t\t\t\\\n@@ -2302,22 +2304,6 @@ m32r-*-elf*)\n m32rle-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h m32r/little.h ${tm_file}\"\n \t;;\n-m32r-*-linux*)\n-\ttm_file=\"elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n-\ttmake_file=\"${tmake_file} m32r/t-linux t-slibgcc\"\n-\tgnu_ld=yes\n-\tif test x$enable_threads = xyes; then\n-\t\tthread_file='posix'\n-\tfi\n- \t;;\n-m32rle-*-linux*)\n-\ttm_file=\"elfos.h gnu-user.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n-\ttmake_file=\"${tmake_file} m32r/t-linux t-slibgcc\"\n-\tgnu_ld=yes\n-\tif test x$enable_threads = xyes; then\n-\t\tthread_file='posix'\n-\tfi\n-\t;;\n m68k-*-elf* | fido-*-elf*)\n \tcase ${target} in\n \tfido-*-elf*)"}, {"sha": "4fdebbc75177640fe599d29adf35b5413fe1aff3", "filename": "gcc/config/m32r/linux.h", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/gcc%2Fconfig%2Fm32r%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/gcc%2Fconfig%2Fm32r%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Flinux.h?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -1,91 +0,0 @@\n-/* Definitions for Renesas M32R running Linux-based GNU systems using ELF.\n-   Copyright (C) 2003-2021 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#undef  SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n- \n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-  \n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE \"long int\"\n-   \n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD\n-    \n-/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n-   for the special GCC options -static and -shared, which allow us to\n-   link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time.\n-\n-   When the -shared link option is used a final link is not being\n-   done.  */\n-\n-#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n-\n-#undef\tLINK_SPEC\n-#if TARGET_LITTLE_ENDIAN\n-#define LINK_SPEC \"%(link_cpu) -m m32rlelf_linux %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!static: \\\n-      %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n-      %{static:-static}}\"\n-#else\n-#define LINK_SPEC \"%(link_cpu) -m m32relf_linux %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!static: \\\n-      %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n-      %{static:-static}}\"\n-#endif\n-\n-#undef\tLIB_SPEC\n-#define LIB_SPEC \\\n-  \"%{pthread:-lpthread} \\\n-   %{shared: -lc} \\\n-   %{!shared: \\\n-       %{mieee-fp:-lieee} \\\n-       %{profile:-lc_p} %{!profile: -lc}}\"\n-\n-#undef  STARTFILE_SPEC\n-#if defined HAVE_LD_PIE\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#else\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: \\\n-     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n-   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-#endif\n-\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n-  \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n-\n-#undef  SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC \"\\\n-   %{posix:-D_POSIX_SOURCE} \\\n-   %{pthread:-D_REENTRANT -D_PTHREADS} \\\n-\"\n-                                                                                \n-#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n-\n-#define TARGET_ASM_FILE_END file_end_indicate_exec_stack"}, {"sha": "3384b8a4887ff32cd6f7a86282f875bddeecaf04", "filename": "gcc/config/m32r/t-linux", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/gcc%2Fconfig%2Fm32r%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/gcc%2Fconfig%2Fm32r%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Ft-linux?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -1,20 +0,0 @@\n-# Copyright (C) 2003-2021 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Don't install \"assert.h\" in gcc. We use the one in glibc.\n-INSTALL_ASSERT_H ="}, {"sha": "432a3e1e38e5df57445e627534b1a92ea0657dec", "filename": "libgcc/config.host", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f3c168205cc7b0a97ecd54ffc54bed7637be74/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f3c168205cc7b0a97ecd54ffc54bed7637be74/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=20f3c168205cc7b0a97ecd54ffc54bed7637be74", "patch": "@@ -926,12 +926,6 @@ m32r-*-elf*)\n m32rle-*-elf*)\n \ttmake_file=t-fdpbit\n \t;;\n-m32r-*-linux*)\n-\ttmake_file=\"$tmake_file m32r/t-linux t-fdpbit\"\n- \t;;\n-m32rle-*-linux*)\n-\ttmake_file=\"$tmake_file m32r/t-linux t-fdpbit\"\n-\t;;\n m68k-*-elf* | fido-*-elf)\n \ttmake_file=\"$tmake_file m68k/t-floatlib\"\n \t;;"}, {"sha": "cb52aa1c3006f4fd72bbc8b914b02bf07a93a7f6", "filename": "libgcc/config/m32r/libgcc-glibc.ver", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -1,48 +0,0 @@\n-# Copyright (C) 2004-2021 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# In order to work around the very problems that force us to now generally\n-# create a libgcc.so, glibc reexported a number of routines from libgcc.a.\n-# By now choosing the same version tags for these specific routines, we\n-# maintain enough binary compatibility to allow future versions of glibc\n-# to defer implementation of these routines to libgcc.so via DT_AUXILIARY.\n-\n-# Note that we cannot use the default libgcc-glibc.ver file on sh,\n-# because GLIBC_2.0 does not exist on this architecture, as the first \n-# ever glibc release on the platform was GLIBC_2.3.\n-\n-%exclude {\n-  __register_frame\n-  __register_frame_table\n-  __deregister_frame\n-  __register_frame_info\n-  __deregister_frame_info\n-  __frame_state_for\n-  __register_frame_info_table\n-}\n-\n-%inherit GCC_3.0 GLIBC_2.3\n-GLIBC_2.3 {\n-  __register_frame\n-  __register_frame_table\n-  __deregister_frame\n-  __register_frame_info\n-  __deregister_frame_info\n-  __frame_state_for\n-  __register_frame_info_table\n-}"}, {"sha": "5223b731ff7de108830fbbbd3017c753bfdea1d2", "filename": "libgcc/config/m32r/t-linux", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/libgcc%2Fconfig%2Fm32r%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/libgcc%2Fconfig%2Fm32r%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Ft-linux?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -1,5 +0,0 @@\n-# Turn off the SDA while compiling libgcc2.  There are no headers for it\n-# and we want maximal upward compatibility here.\n-HOST_LIBGCC2_CFLAGS += -G 0\n-\n-SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/m32r/libgcc-glibc.ver"}]}