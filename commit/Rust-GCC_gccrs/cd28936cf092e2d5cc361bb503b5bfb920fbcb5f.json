{"sha": "cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyODkzNmNmMDkyZTJkNWNjMzYxYmI1MDNiNWJmYjkyMGZiY2I1Zg==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1999-06-07T11:10:29Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1999-06-07T11:10:29Z"}, "message": "lex.c (real_yylex): Replace unused bytes from bad multibyte char.\n\n1999-06-07  Dave Brolley  <brolley@cygnus.com>\n\t* lex.c (real_yylex): Replace unused bytes from bad multibyte char.\n\t* input.c (putback_buffer): New structure type.\n\t(putback): Replaces putback_char member.\n\t(putback): Replaces putback_char static variable.\n\t(feed_input): Use putback.\n\t(end_input): Use putback.\n\t(sub_getch): Use putback.\n\t(put_back): Use putback.\n\nFrom-SVN: r27392", "tree": {"sha": "9b1e048e6c8b332ec15d9e1061c0e6ff0db21715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b1e048e6c8b332ec15d9e1061c0e6ff0db21715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/comments", "author": null, "committer": null, "parents": [{"sha": "e7553be55ad4e48cfbd36b896947104d763b5696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7553be55ad4e48cfbd36b896947104d763b5696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7553be55ad4e48cfbd36b896947104d763b5696"}], "stats": {"total": 89, "additions": 61, "deletions": 28}, "files": [{"sha": "e89dfdff1a237a92031b43a771ef179559294228", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "patch": "@@ -1,3 +1,14 @@\n+1999-06-07  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* lex.c (real_yylex): Replace unused bytes from bad multibyte char.\n+\t* input.c (putback_buffer): New structure type.\n+\t(putback): Replaces putback_char member.\n+\t(putback): Replaces putback_char static variable.\n+\t(feed_input): Use putback.\n+\t(end_input): Use putback.\n+\t(sub_getch): Use putback.\n+\t(put_back): Use putback.\n+\n 1999-06-05  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (grokdeclarator): Fix typo in last change."}, {"sha": "b7fb9e2db3724a2ba2547e0129d7a65db091c4fd", "filename": "gcc/cp/input.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finput.c?ref=cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "patch": "@@ -33,6 +33,12 @@ Boston, MA 02111-1307, USA.  */\n \n extern FILE *finput;\n \n+struct putback_buffer {\n+  char *buffer;\n+  int   buffer_size;\n+  int   index;\n+};\n+\n struct input_source {\n   /* saved string */\n   char *str;\n@@ -45,7 +51,7 @@ struct input_source {\n   char *filename;\n   int lineno;\n   struct pending_input *input;\n-  int putback_char;\n+  struct putback_buffer putback;\n };\n \n static struct input_source *input, *free_inputs;\n@@ -98,7 +104,7 @@ free_input (inp)\n   free_inputs = inp;\n }\n \n-static int putback_char = -1;\n+static struct putback_buffer putback = {NULL, 0, -1};\n \n /* Some of these external functions are declared inline in case this file\n    is included in lex.c.  */\n@@ -122,8 +128,10 @@ feed_input (str, len)\n   inp->filename = input_filename;\n   inp->lineno = lineno;\n   inp->input = save_pending_input ();\n-  inp->putback_char = putback_char;\n-  putback_char = -1;\n+  inp->putback = putback;\n+  putback.buffer = NULL;\n+  putback.buffer_size = 0;\n+  putback.index = -1;\n   input = inp;\n }\n \n@@ -141,25 +149,25 @@ end_input ()\n   lineno = inp->lineno;\n   /* Get interface/implementation back in sync.  */\n   extract_interface_info ();\n-  putback_char = inp->putback_char;\n+  putback = inp->putback;\n   restore_pending_input (inp->input);\n   free_input (inp);\n }\n \n static inline int\n sub_getch ()\n {\n-  if (putback_char != -1)\n+  if (putback.index != -1)\n     {\n-      int ch = putback_char;\n-      putback_char = -1;\n+      int ch = putback.buffer[putback.index];\n+      --putback.index;\n       return ch;\n     }\n   if (input)\n     {\n       if (input->offset >= input->length)\n \t{\n-\t  my_friendly_assert (putback_char == -1, 223);\n+\t  my_friendly_assert (putback.index == -1, 223);\n \t  ++(input->offset);\n \t  if (input->offset - input->length < 64)\n \t    return EOF;\n@@ -180,8 +188,13 @@ put_back (ch)\n {\n   if (ch != EOF)\n     {\n-      my_friendly_assert (putback_char == -1, 224);\n-      putback_char = ch;\n+      if (putback.index == putback.buffer_size - 1)\n+\t{\n+\t  putback.buffer_size += 16;\n+\t  putback.buffer = xrealloc (putback.buffer, putback.buffer_size);\n+\t}\n+      my_friendly_assert (putback.buffer != NULL, 224);\n+      putback.buffer[++putback.index] = ch;\n     }\n }\n "}, {"sha": "1ab5df3a3041bd60175caf765d8d1466a0d159dc", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "patch": "@@ -4074,12 +4074,17 @@ real_yylex ()\n \t\telse\n \t\t  {\n \t\t    if (char_len == -1)\n-\t\t      warning (\"Ignoring invalid multibyte character\");\n-\t\t    if (wide_flag)\n-\t\t      c = wc;\n+\t\t      {\n+\t\t\twarning (\"Ignoring invalid multibyte character\");\n+\t\t\t/* Replace all but the first byte.  */\n+\t\t\tfor (--i; i > 1; --i)\n+\t\t\t  put_back (token_buffer[i]);\n+\t\t\twc = token_buffer[1];\n+\t\t      }\n #ifdef MAP_CHARACTER\n-\t\t    else\n-\t\t      c = MAP_CHARACTER (c);\n+\t\t      c = MAP_CHARACTER (wc);\n+#else\n+\t\t      c = wc;\n #endif\n \t\t  }\n #else /* ! MULTIBYTE_CHARS */\n@@ -4203,20 +4208,24 @@ real_yylex ()\n \t\t    c = getch ();\n \t\t  }\n \t\tif (char_len == -1)\n-\t\t  warning (\"Ignoring invalid multibyte character\");\n-\t\telse\n \t\t  {\n-\t\t    /* mbtowc sometimes needs an extra char before accepting */\n-\t\t    if (char_len <= i)\n-\t\t      put_back (c);\n-\t\t    if (! wide_flag)\n-\t\t      {\n-\t\t\tp += (i + 1);\n-\t\t\tc = getch ();\n-\t\t\tcontinue;\n-\t\t      }\n-\t\t    c = wc;\n+\t\t    warning (\"Ignoring invalid multibyte character\");\n+\t\t    /* Replace all except the first byte.  */\n+\t\t    put_back (c);\n+\t\t    for (--i; i > 0; --i)\n+\t\t      put_back (p[i]);\n+\t\t    char_len = 1;\n+\t\t  }\n+\t\t/* mbtowc sometimes needs an extra char before accepting */\n+\t\tif (char_len <= i)\n+\t\t  put_back (c);\n+\t\tif (! wide_flag)\n+\t\t  {\n+\t\t    p += (i + 1);\n+\t\t    c = getch ();\n+\t\t    continue;\n \t\t  }\n+\t\tc = wc;\n #endif /* MULTIBYTE_CHARS */\n \t      }\n "}]}