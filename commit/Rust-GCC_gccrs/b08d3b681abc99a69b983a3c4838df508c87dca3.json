{"sha": "b08d3b681abc99a69b983a3c4838df508c87dca3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4ZDNiNjgxYWJjOTlhNjliOTgzYTNjNDgzOGRmNTA4Yzg3ZGNhMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-03-27T18:22:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-03-27T18:22:38Z"}, "message": "containers.xml (associative.bitset.size_variable): Fix bad s/part/chapter/ substitutions.\n\n\t* doc/xml/manual/containers.xml (associative.bitset.size_variable):\n\tFix bad s/part/chapter/ substitutions.\n\t* doc/xml/manual/io.xml (std.io): Likewise.\n\t* doc/xml/manual/numerics.xml (std.numerics.generalized_ops): Likewise.\n\t* doc/xml/manual/strings.xml (strings.string.Cstring): Likewise.\n\nFrom-SVN: r208874", "tree": {"sha": "58e153cf4df9e0a2a6dd0fb054dfe5baaf854e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58e153cf4df9e0a2a6dd0fb054dfe5baaf854e1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b08d3b681abc99a69b983a3c4838df508c87dca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08d3b681abc99a69b983a3c4838df508c87dca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08d3b681abc99a69b983a3c4838df508c87dca3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08d3b681abc99a69b983a3c4838df508c87dca3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f8b5e0cda99d73bb5c44324d37cbb8495b5c6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8b5e0cda99d73bb5c44324d37cbb8495b5c6fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f8b5e0cda99d73bb5c44324d37cbb8495b5c6fd"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "cc927da961ff5aa48c55c0f35d4177f08a37374b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b08d3b681abc99a69b983a3c4838df508c87dca3", "patch": "@@ -9,6 +9,12 @@\n \tLikewise.\n \t* doc/xml/manual/test.xml (test.organization.layout): Likewise.\n \n+\t* doc/xml/manual/containers.xml (associative.bitset.size_variable):\n+\tFix bad s/part/chapter/ substitutions.\n+\t* doc/xml/manual/io.xml (std.io): Likewise.\n+\t* doc/xml/manual/numerics.xml (std.numerics.generalized_ops): Likewise.\n+\t* doc/xml/manual/strings.xml (strings.string.Cstring): Likewise.\n+\n 2014-03-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/60612"}, {"sha": "9fea0f7ea1c072e92381c4d8a076c15112b28ddb", "filename": "libstdc++-v3/doc/xml/manual/containers.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml?ref=b08d3b681abc99a69b983a3c4838df508c87dca3", "patch": "@@ -232,7 +232,7 @@\n    <para>\n      There are a couple of ways to handle this kind of thing.  Please\n      consider all of them before passing judgement.  They include, in\n-     no chaptericular order:\n+     no particular order:\n    </para>\n       <itemizedlist>\n \t<listitem><para>A very large N in <code>bitset&lt;N&gt;</code>.</para></listitem>"}, {"sha": "5ae93b90041f7cdd06bf0301bc0a104b37a83636", "filename": "libstdc++-v3/doc/xml/manual/io.xml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fio.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fio.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fio.xml?ref=b08d3b681abc99a69b983a3c4838df508c87dca3", "patch": "@@ -424,7 +424,7 @@\n    <para>Seriously, go do it.  Get surprised, then come back.  It's worth it.\n    </para>\n    <para>The thing to remember is that the <code>basic_[io]stream</code> classes\n-      handle formatting, nothing else.  In chaptericular, they break up on\n+      handle formatting, nothing else.  In particular, they break up on\n       whitespace.  The actual reading, writing, and storing of data is\n       handled by the <code>basic_streambuf</code> family.  Fortunately, the\n       <code>operator&lt;&lt;</code> is overloaded to take an ostream and\n@@ -442,7 +442,7 @@\n    <programlisting>\n    OUT &lt;&lt; IN.rdbuf();</programlisting>\n    <para>So what <emphasis>was</emphasis> happening with OUT&lt;&lt;IN?  Undefined\n-      behavior, since that chaptericular &lt;&lt; isn't defined by the Standard.\n+      behavior, since that particular &lt;&lt; isn't defined by the Standard.\n       I have seen instances where it is implemented, but the character\n       extraction process removes all the whitespace, leaving you with no\n       blank lines and only \"Thequickbrownfox...\".  With\n@@ -659,7 +659,7 @@\n    <para>Note, by the way, that the synchronization requirement only applies to\n       the standard streams (<code>cin</code>, <code>cout</code>,\n       <code>cerr</code>,\n-      <code>clog</code>, and their wide-character counterchapters).  File stream\n+      <code>clog</code>, and their wide-character counterparts).  File stream\n       objects that you declare yourself have no such requirement and are fully\n       buffered.\n    </para>"}, {"sha": "cc2615390f2710de404c20670bf6b1f86100102f", "filename": "libstdc++-v3/doc/xml/manual/numerics.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fnumerics.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fnumerics.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fnumerics.xml?ref=b08d3b681abc99a69b983a3c4838df508c87dca3", "patch": "@@ -65,7 +65,7 @@\n    <itemizedlist>\n       <listitem><para><code>accumulate</code></para></listitem>\n       <listitem><para><code>inner_product</code></para></listitem>\n-      <listitem><para><code>chapterial_sum</code></para></listitem>\n+      <listitem><para><code>partial_sum</code></para></listitem>\n       <listitem><para><code>adjacent_difference</code></para></listitem>\n    </itemizedlist>\n    <para>Here is a simple example of the two forms of <code>accumulate</code>."}, {"sha": "6a94fa22cb4905824dbeff406ce1d53d13eac273", "filename": "libstdc++-v3/doc/xml/manual/strings.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08d3b681abc99a69b983a3c4838df508c87dca3/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstrings.xml?ref=b08d3b681abc99a69b983a3c4838df508c87dca3", "patch": "@@ -462,7 +462,7 @@ stringtok(Container &amp;container, string const &amp;in,\n \t     <emphasis>if the implementors do it correctly</emphasis>.  The libstdc++\n \t     implementors did it correctly.  Other vendors might not.\n \t </para></listitem>\n-\t <listitem><para>While chapters of the SGI STL are used in libstdc++, their\n+\t <listitem><para>While parts of the SGI STL are used in libstdc++, their\n \t     string class is not.  The SGI <code>string</code> is essentially\n \t     <code>vector&lt;char&gt;</code> and does not do any reference\n \t     counting like libstdc++'s does.  (It is O(n), though.)"}]}