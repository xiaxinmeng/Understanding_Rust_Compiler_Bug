{"sha": "257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU3YWVjYjRhNTc2NzBhNWQwYWE3YjAyM2ZhY2E0NDM4YTdjMWFlMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-26T09:26:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-26T09:26:11Z"}, "message": "Use macros to define built-in operator lists\n\nNo functional change.  This should be a slight readability improvement\non its own, but becomes more important with the next patch.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* match.pd: Use macros to define built-in operator lists.\n\nFrom-SVN: r229310", "tree": {"sha": "2be413e448ef1d0aa450acb4f66ce44367f2669d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2be413e448ef1d0aa450acb4f66ce44367f2669d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257aecb4a57670a5d0aa7b023faca4438a7c1ae1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0eb72c5dd6e33130b32ed212950e246c9e2e6479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb72c5dd6e33130b32ed212950e246c9e2e6479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb72c5dd6e33130b32ed212950e246c9e2e6479"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "b8fd463084762ff525c743653eb114eaa8fc71a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/257aecb4a57670a5d0aa7b023faca4438a7c1ae1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/257aecb4a57670a5d0aa7b023faca4438a7c1ae1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "patch": "@@ -1,3 +1,7 @@\n+2015-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* match.pd: Use macros to define built-in operator lists.\n+\n 2015-10-20  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "e790d5b2f94779cb8680ef37f5e27742b0be1d79", "filename": "gcc/match.pd", "status": "modified", "additions": 34, "deletions": 33, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/257aecb4a57670a5d0aa7b023faca4438a7c1ae1/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/257aecb4a57670a5d0aa7b023faca4438a7c1ae1/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=257aecb4a57670a5d0aa7b023faca4438a7c1ae1", "patch": "@@ -47,39 +47,40 @@ along with GCC; see the file COPYING3.  If not see\n (define_operator_list simple_comparison         lt   le   eq ne ge   gt)\n (define_operator_list swapped_simple_comparison gt   ge   eq ne le   lt)\n \n-(define_operator_list LOG BUILT_IN_LOGF BUILT_IN_LOG BUILT_IN_LOGL)\n-(define_operator_list EXP BUILT_IN_EXPF BUILT_IN_EXP BUILT_IN_EXPL)\n-(define_operator_list LOG2 BUILT_IN_LOG2F BUILT_IN_LOG2 BUILT_IN_LOG2L)\n-(define_operator_list EXP2 BUILT_IN_EXP2F BUILT_IN_EXP2 BUILT_IN_EXP2L)\n-(define_operator_list LOG10 BUILT_IN_LOG10F BUILT_IN_LOG10 BUILT_IN_LOG10L)\n-(define_operator_list EXP10 BUILT_IN_EXP10F BUILT_IN_EXP10 BUILT_IN_EXP10L)\n-(define_operator_list POW BUILT_IN_POWF BUILT_IN_POW BUILT_IN_POWL)\n-(define_operator_list POW10 BUILT_IN_POW10F BUILT_IN_POW10 BUILT_IN_POW10L)\n-(define_operator_list SQRT BUILT_IN_SQRTF BUILT_IN_SQRT BUILT_IN_SQRTL)\n-(define_operator_list CBRT BUILT_IN_CBRTF BUILT_IN_CBRT BUILT_IN_CBRTL)\n-(define_operator_list SIN BUILT_IN_SINF BUILT_IN_SIN BUILT_IN_SINL)\n-(define_operator_list COS BUILT_IN_COSF BUILT_IN_COS BUILT_IN_COSL)\n-(define_operator_list TAN BUILT_IN_TANF BUILT_IN_TAN BUILT_IN_TANL)\n-(define_operator_list ATAN BUILT_IN_ATANF BUILT_IN_ATAN BUILT_IN_ATANL)\n-(define_operator_list COSH BUILT_IN_COSHF BUILT_IN_COSH BUILT_IN_COSHL)\n-(define_operator_list CEXP BUILT_IN_CEXPF BUILT_IN_CEXP BUILT_IN_CEXPL)\n-(define_operator_list CEXPI BUILT_IN_CEXPIF BUILT_IN_CEXPI BUILT_IN_CEXPIL)\n-(define_operator_list CPROJ BUILT_IN_CPROJF BUILT_IN_CPROJ BUILT_IN_CPROJL)\n-(define_operator_list CCOS BUILT_IN_CCOSF BUILT_IN_CCOS BUILT_IN_CCOSL)\n-(define_operator_list CCOSH BUILT_IN_CCOSHF BUILT_IN_CCOSH BUILT_IN_CCOSHL)\n-(define_operator_list HYPOT BUILT_IN_HYPOTF BUILT_IN_HYPOT BUILT_IN_HYPOTL)\n-(define_operator_list COPYSIGN BUILT_IN_COPYSIGNF\n-\t\t\t       BUILT_IN_COPYSIGN\n-\t\t\t       BUILT_IN_COPYSIGNL)\n-(define_operator_list CABS BUILT_IN_CABSF BUILT_IN_CABS BUILT_IN_CABSL)\n-(define_operator_list TRUNC BUILT_IN_TRUNCF BUILT_IN_TRUNC BUILT_IN_TRUNCL)\n-(define_operator_list FLOOR BUILT_IN_FLOORF BUILT_IN_FLOOR BUILT_IN_FLOORL)\n-(define_operator_list CEIL BUILT_IN_CEILF BUILT_IN_CEIL BUILT_IN_CEILL)\n-(define_operator_list ROUND BUILT_IN_ROUNDF BUILT_IN_ROUND BUILT_IN_ROUNDL)\n-(define_operator_list NEARBYINT BUILT_IN_NEARBYINTF\n-\t\t\t\tBUILT_IN_NEARBYINT\n-\t\t\t\tBUILT_IN_NEARBYINTL)\n-(define_operator_list RINT BUILT_IN_RINTF BUILT_IN_RINT BUILT_IN_RINTL)\n+/* Define an operand list for math function FN, with float, double and\n+   long double variants (in that order).  */\n+#define DEFINE_MATH_FN(FN) \\\n+  (define_operator_list FN BUILT_IN_##FN##F BUILT_IN_##FN BUILT_IN_##FN##L)\n+\n+DEFINE_MATH_FN (LOG)\n+DEFINE_MATH_FN (EXP)\n+DEFINE_MATH_FN (LOG2)\n+DEFINE_MATH_FN (EXP2)\n+DEFINE_MATH_FN (LOG10)\n+DEFINE_MATH_FN (EXP10)\n+DEFINE_MATH_FN (POW)\n+DEFINE_MATH_FN (POW10)\n+DEFINE_MATH_FN (SQRT)\n+DEFINE_MATH_FN (CBRT)\n+DEFINE_MATH_FN (SIN)\n+DEFINE_MATH_FN (COS)\n+DEFINE_MATH_FN (TAN)\n+DEFINE_MATH_FN (ATAN)\n+DEFINE_MATH_FN (COSH)\n+DEFINE_MATH_FN (CEXP)\n+DEFINE_MATH_FN (CEXPI)\n+DEFINE_MATH_FN (CPROJ)\n+DEFINE_MATH_FN (CCOS)\n+DEFINE_MATH_FN (CCOSH)\n+DEFINE_MATH_FN (HYPOT)\n+DEFINE_MATH_FN (COPYSIGN)\n+DEFINE_MATH_FN (CABS)\n+DEFINE_MATH_FN (TRUNC)\n+DEFINE_MATH_FN (FLOOR)\n+DEFINE_MATH_FN (CEIL)\n+DEFINE_MATH_FN (ROUND)\n+DEFINE_MATH_FN (NEARBYINT)\n+DEFINE_MATH_FN (RINT)\n \n /* Simplifications of operations with one constant operand and\n    simplifications to constants or single values.  */"}]}