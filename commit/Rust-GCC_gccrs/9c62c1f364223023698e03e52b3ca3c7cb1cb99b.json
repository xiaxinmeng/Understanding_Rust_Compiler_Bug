{"sha": "9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM2MmMxZjM2NDIyMzAyMzY5OGUwM2U1MmIzY2EzYzdjYjFjYjk5Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-05-23T21:21:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-05-23T21:21:18Z"}, "message": "PR c++/70735 - generic lambda and local static variable\n\n\t* pt.c (tsubst_copy): Just return a local variable from\n\tnon-template context.  Don't call rest_of_decl_compilation for\n\tduplicated static locals.\n\t(tsubst_decl): Set DECL_CONTEXT of local static from another\n\tfunction.\n\nFrom-SVN: r236615", "tree": {"sha": "c660ce4b1de04232fc91bb3ff74573ae91bf2bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c660ce4b1de04232fc91bb3ff74573ae91bf2bd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26d6ae55d88dddc2f2f99d9ac7bf11935307b4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d6ae55d88dddc2f2f99d9ac7bf11935307b4ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d6ae55d88dddc2f2f99d9ac7bf11935307b4ec"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "232acc6772b6f1646e48b632eef1ea688863daf9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "patch": "@@ -1,3 +1,12 @@\n+2016-05-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70735\n+\t* pt.c (tsubst_copy): Just return a local variable from\n+\tnon-template context.  Don't call rest_of_decl_compilation for\n+\tduplicated static locals.\n+\t(tsubst_decl): Set DECL_CONTEXT of local static from another\n+\tfunction.\n+\n 2016-05-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70972"}, {"sha": "3e07fb0b6e0a32fcfd86079f0882238ab17dcd28", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "patch": "@@ -12281,6 +12281,14 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t    local_p = true;\n \t    /* Subsequent calls to pushdecl will fill this in.  */\n \t    ctx = NULL_TREE;\n+\t    /* Unless this is a reference to a static variable from an\n+\t       enclosing function, in which case we need to fill it in now.  */\n+\t    if (TREE_STATIC (t))\n+\t      {\n+\t\ttree fn = tsubst (DECL_CONTEXT (t), args, complain, in_decl);\n+\t\tif (fn != current_function_decl)\n+\t\t  ctx = fn;\n+\t      }\n \t    spec = retrieve_local_specialization (t);\n \t  }\n \t/* If we already have the specialization we need, there is\n@@ -13992,7 +14000,8 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     case FUNCTION_DECL:\n       if (DECL_LANG_SPECIFIC (t) && DECL_TEMPLATE_INFO (t))\n \tr = tsubst (t, args, complain, in_decl);\n-      else if (local_variable_p (t))\n+      else if (local_variable_p (t)\n+\t       && uses_template_parms (DECL_CONTEXT (t)))\n \t{\n \t  r = retrieve_local_specialization (t);\n \t  if (r == NULL_TREE)\n@@ -14036,14 +14045,9 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\t  gcc_assert (cp_unevaluated_operand || TREE_STATIC (r)\n \t\t\t      || decl_constant_var_p (r)\n \t\t\t      || errorcount || sorrycount);\n-\t\t  if (!processing_template_decl)\n-\t\t    {\n-\t\t      if (TREE_STATIC (r))\n-\t\t\trest_of_decl_compilation (r, toplevel_bindings_p (),\n-\t\t\t\t\t\t  at_eof);\n-\t\t      else\n-\t\t\tr = process_outer_var_ref (r, complain);\n-\t\t    }\n+\t\t  if (!processing_template_decl\n+\t\t      && !TREE_STATIC (r))\n+\t\t    r = process_outer_var_ref (r, complain);\n \t\t}\n \t      /* Remember this for subsequent uses.  */\n \t      if (local_specializations)"}, {"sha": "a1667a2de473128610fc38c0d81f8342eb741dbc", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-static1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static1.C?ref=9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/70735\n+// { dg-do run { target c++1y } }\n+\n+int main()\n+{\n+  static int a;\n+  auto f = [](auto) { return a; };\n+  if (f(0) != 0)\n+    __builtin_abort();\n+  a = 1;\n+  if (f(0) != 1)\n+    __builtin_abort();\n+}"}, {"sha": "51bf75f20ba8893e7fa2858fa0848930255c9f00", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-static2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c62c1f364223023698e03e52b3ca3c7cb1cb99b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-static2.C?ref=9c62c1f364223023698e03e52b3ca3c7cb1cb99b", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/70735\n+// { dg-do run { target c++1y } }\n+\n+template <class T>\n+static void g()\n+{\n+  static int a;\n+  auto f = [](auto) { return a; };\n+  if (f(0) != 0)\n+    __builtin_abort();\n+  a = 1;\n+  if (f(0) != 1)\n+    __builtin_abort();\n+}\n+\n+int main()\n+{\n+  g<int>();\n+}"}]}