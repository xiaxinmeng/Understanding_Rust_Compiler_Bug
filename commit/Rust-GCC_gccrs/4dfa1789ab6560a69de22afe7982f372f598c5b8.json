{"sha": "4dfa1789ab6560a69de22afe7982f372f598c5b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmYTE3ODlhYjY1NjBhNjlkZTIyYWZlNzk4MmYzNzJmNTk4YzViOA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-10-27T09:16:29Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-06T13:00:14Z"}, "message": "Remove 'gfortran.dg/goacc/loop-5.f95'\n\nWhat it's testing is adequately covered in other\n'gfortran.dg/goacc/loop-2-*-tile.f95' testcases.\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/loop-5.f95: Remove.", "tree": {"sha": "3c51ee6011ee88dc61f592472f66ff65dc893ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c51ee6011ee88dc61f592472f66ff65dc893ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dfa1789ab6560a69de22afe7982f372f598c5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa1789ab6560a69de22afe7982f372f598c5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfa1789ab6560a69de22afe7982f372f598c5b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa1789ab6560a69de22afe7982f372f598c5b8/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f176773bc27580570be505938439458a3a9d41d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f176773bc27580570be505938439458a3a9d41d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f176773bc27580570be505938439458a3a9d41d5"}], "stats": {"total": 357, "additions": 0, "deletions": 357}, "files": [{"sha": "d059cf7f3777294559c7420dcfb5929a8b9ac1f2", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-5.f95", "status": "removed", "additions": 0, "deletions": 357, "changes": 357, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f176773bc27580570be505938439458a3a9d41d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-5.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f176773bc27580570be505938439458a3a9d41d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-5.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-5.f95?ref=f176773bc27580570be505938439458a3a9d41d5", "patch": "@@ -1,357 +0,0 @@\n-program test\n-  implicit none\n-  integer :: i, j\n-\n-  !$acc kernels\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(num:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-      !$acc loop vector\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-\n-    !$acc loop worker\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(num:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker\n-    DO i = 1,10\n-      !$acc loop vector\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop gang worker\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(length:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker vector\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop tile(1)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(2)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(6-2)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(6+2)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*, 1)\n-    DO i = 1,10\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop vector tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector gang tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-  !$acc end kernels\n-\n-\n-  !$acc parallel\n-    !$acc loop tile(1)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(2)\n-    DO i = 1,10\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop vector tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector gang tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker tile(*)\n-    DO i = 1,10\n-    ENDDO\n-  !$acc end parallel\n-\n-  !$acc kernels loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(num:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(static:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(static:*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang\n-  DO i = 1,10\n-    !$acc kernels loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-\n-  !$acc kernels loop worker\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker(num:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker\n-  DO i = 1,10\n-    !$acc kernels loop worker ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop gang worker\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector(length:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector\n-  DO i = 1,10\n-    !$acc kernels loop vector ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop worker ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop gang vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker vector\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop auto\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop tile(1)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile(*, 1)\n-  DO i = 1,10\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop tile(-1) ! { dg-warning \"must be positive\" }\n-  do i = 1,10\n-  enddo\n-  !$acc kernels loop vector tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector gang tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(static:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(static:*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang\n-  DO i = 1,10\n-    !$acc parallel loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-\n-  !$acc parallel loop worker\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker\n-  DO i = 1,10\n-    !$acc parallel loop worker ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop gang worker\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop vector\n-  DO i = 1,10\n-    !$acc parallel loop vector ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop worker ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop gang ! { dg-error \"OpenACC construct inside of non-OpenACC region\" }\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop gang vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker vector\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop auto\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop tile(1)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile(*, 1)\n-  DO i = 1,10\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop tile(-1) ! { dg-warning \"must be positive\" }\n-  do i = 1,10\n-  enddo\n-  !$acc parallel loop vector tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector gang tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang worker tile(*)\n-  DO i = 1,10\n-  ENDDO\n-end"}]}