{"sha": "2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIwNTJjZTJmNWExYzg0Y2E5ZWZkZWQ0ZGY5MzA4NjY5YjllMjVlNQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-05-31T17:19:11Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-05-31T17:19:11Z"}, "message": "re PR fortran/18109 (ICE with explicit array of strings)\n\n2005-05-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/18109\n\tPR fortran/18283\n\tPR fortran/19107\n\t* fortran/trans-array.c (gfc_conv_expr_descriptor): Obtain the\n\tstring length from the expression typespec character length value\n\tand set temp_ss->stringlength and backend_decl. Obtain the\n\ttree expression from gfc_conv_expr rather than gfc_conv_expr_val.\n\tDereference the expression to obtain the character.\n\t* fortran/trans-expr.c (gfc_conv_component_ref): Remove the\n\tdereference of scalar character pointer structure components.\n\t* fortran/trans-expr.c (gfc_trans_subarray_assign): Obtain the\n\tstring length for the structure component from the component\n\texpression.\n\nFrom-SVN: r100400", "tree": {"sha": "9a856e4a4daa847c9ca97e91ae29830d2728f4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a856e4a4daa847c9ca97e91ae29830d2728f4b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/comments", "author": null, "committer": null, "parents": [{"sha": "d763bb10051498ab4bafe220b644f2aa414de381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d763bb10051498ab4bafe220b644f2aa414de381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d763bb10051498ab4bafe220b644f2aa414de381"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "6ea04202d5a16cf1759711926cf9e1af00b60b53", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "patch": "@@ -1,3 +1,19 @@\n+2005-05-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/18109\n+\tPR fortran/18283\n+\tPR fortran/19107\n+\t* fortran/trans-array.c (gfc_conv_expr_descriptor): Obtain the\n+\tstring length from the expression typespec character length value\n+\tand set temp_ss->stringlength and backend_decl. Obtain the\n+\ttree expression from gfc_conv_expr rather than gfc_conv_expr_val.\n+\tDereference the expression to obtain the character.\n+\t* fortran/trans-expr.c (gfc_conv_component_ref): Remove the\n+\tdereference of scalar character pointer structure components.\n+\t* fortran/trans-expr.c (gfc_trans_subarray_assign): Obtain the\n+\tstring length for the structure component from the component\n+\texpression.\n+\n 2005-05-30  Roger Sayle  <roger@eyesopen.com>\n \n \t* gfortran.h (GFC_STD_LEGACY): New \"standard\" macro.  Reindent."}, {"sha": "fabbef99dc991ae53b4279eb978e70bc5ac3b871", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "patch": "@@ -3616,12 +3616,23 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n       loop.temp_ss = gfc_get_ss ();\n       loop.temp_ss->type = GFC_SS_TEMP;\n       loop.temp_ss->next = gfc_ss_terminator;\n-      loop.temp_ss->data.temp.type = gfc_typenode_for_spec (&expr->ts);\n+      if (expr->ts.type == BT_CHARACTER)\n+\t{\n+\t  gcc_assert (expr->ts.cl && expr->ts.cl->length\n+\t\t      && expr->ts.cl->length->expr_type == EXPR_CONSTANT);\n+\t  loop.temp_ss->string_length = gfc_conv_mpz_to_tree\n+\t\t\t(expr->ts.cl->length->value.integer,\n+\t\t\t expr->ts.cl->length->ts.kind);\n+\t  expr->ts.cl->backend_decl = loop.temp_ss->string_length;\n+\t}\n+        loop.temp_ss->data.temp.type = gfc_typenode_for_spec (&expr->ts);\n \n       /* ... which can hold our string, if present.  */\n       if (expr->ts.type == BT_CHARACTER)\n-\tse->string_length = loop.temp_ss->string_length\n-\t  = TYPE_SIZE_UNIT (loop.temp_ss->data.temp.type);\n+\t{\n+\t  loop.temp_ss->string_length = TYPE_SIZE_UNIT (loop.temp_ss->data.temp.type);\n+\t  se->string_length = loop.temp_ss->string_length;\n+\t}\n       else\n \tloop.temp_ss->string_length = NULL;\n       loop.temp_ss->data.temp.dimen = loop.dimen;\n@@ -3653,7 +3664,13 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n       rse.ss = ss;\n \n       gfc_conv_scalarized_array_ref (&lse, NULL);\n-      gfc_conv_expr_val (&rse, expr);\n+      if (expr->ts.type == BT_CHARACTER)\n+\t{\n+\t  gfc_conv_expr (&rse, expr);\n+\t  rse.expr = gfc_build_indirect_ref (rse.expr);\n+\t}\n+      else\n+        gfc_conv_expr_val (&rse, expr);\n \n       gfc_add_block_to_block (&block, &rse.pre);\n       gfc_add_block_to_block (&block, &lse.pre);"}, {"sha": "3d7dc726f38a8aa53ea44d69fc43a94284efded1", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b052ce2f5a1c84ca9efded4df9308669b9e25e5/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=2b052ce2f5a1c84ca9efded4df9308669b9e25e5", "patch": "@@ -281,7 +281,7 @@ gfc_conv_component_ref (gfc_se * se, gfc_ref * ref)\n       se->string_length = tmp;\n     }\n \n-  if (c->pointer && c->dimension == 0)\n+  if (c->pointer && c->dimension == 0 && c->ts.type != BT_CHARACTER)\n     se->expr = gfc_build_indirect_ref (se->expr);\n }\n \n@@ -1671,6 +1671,9 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n   gfc_start_scalarized_body (&loop, &body);\n \n   gfc_conv_tmp_array_ref (&lse);\n+  if (cm->ts.type == BT_CHARACTER)\n+    lse.string_length = cm->ts.cl->backend_decl;\n+\n   gfc_conv_expr (&rse, expr);\n \n   tmp = gfc_trans_scalar_assign (&lse, &rse, cm->ts.type);"}]}