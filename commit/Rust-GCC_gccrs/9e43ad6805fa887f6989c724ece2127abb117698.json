{"sha": "9e43ad6805fa887f6989c724ece2127abb117698", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0M2FkNjgwNWZhODg3ZjY5ODljNzI0ZWNlMjEyN2FiYjExNzY5OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-03-21T20:09:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-03-21T20:09:45Z"}, "message": "alpha.c (alpha_pad_noreturn): Do not emit an unop between a call and its CALL_ARG_LOCATION note.\n\n\t* config/alpha/alpha.c (alpha_pad_noreturn): Do not emit an unop\n\tbetween a call and its CALL_ARG_LOCATION note.\n\nFrom-SVN: r171266", "tree": {"sha": "c19953dd9a862240f5583f14786e9eecaa928360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c19953dd9a862240f5583f14786e9eecaa928360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e43ad6805fa887f6989c724ece2127abb117698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e43ad6805fa887f6989c724ece2127abb117698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e43ad6805fa887f6989c724ece2127abb117698", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e43ad6805fa887f6989c724ece2127abb117698/comments", "author": null, "committer": null, "parents": [{"sha": "5513ecd55e97b14db554b2e94d3f95ab175b4404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5513ecd55e97b14db554b2e94d3f95ab175b4404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5513ecd55e97b14db554b2e94d3f95ab175b4404"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "851ccfd3d7d311bb14fe07617fdc567875188000", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e43ad6805fa887f6989c724ece2127abb117698/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e43ad6805fa887f6989c724ece2127abb117698/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e43ad6805fa887f6989c724ece2127abb117698", "patch": "@@ -1,3 +1,8 @@\n+2011-03-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_pad_noreturn): Do not emit an unop\n+\tbetween a call and its CALL_ARG_LOCATION note.\n+\n 2011-03-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_vla_decl): Set TREE_THIS_NOTRAP flag.\n@@ -68,13 +73,11 @@\n \t* config/sol2.h (CPP_SUBTARGET_SPEC): Remove -threads support.\n \t(LIB_SPEC): Likewise.\n \t* config/sol2.opt (threads): Remove.\n-\t* config.gcc (i[34567]86-*-solaris2*): Remove solaris threads\n-\tsupport.\n+\t* config.gcc (i[34567]86-*-solaris2*): Remove solaris threads support.\n \t(sparc*-*-solaris2*): Likewise.\n \t* configure.ac (enable_threads): Enable solaris support.\n \t* configure: Regenerate.\n-\t* doc/invoke.texi (Option Summary, Solaris 2 Options): Remove\n-\t-threads.\n+\t* doc/invoke.texi (Option Summary, Solaris 2 Options): Remove -threads.\n \t* doc/install.texi (Configuration, --enable-threads=lib): Remove\n \tsolaris.\n \n@@ -131,13 +134,10 @@\n 2011-03-21  Kai Tietz  <ktietz@redhat.com>\n \n \tPR target/12171\n-\t* doc/plugins.texi: Adjust documentation\n-\tfor plugin register_callback.\n-\t* tree.h (attribute_spec): Add new member\n-\taffects_type_identity.\n-\t- Zitierten Text anzeigen -\n-\t* attribs.c (empty_attribute_table): Adjust\n-\tattribute_spec initializers.\n+\t* doc/plugins.texi: Adjust documentation for plugin register_callback.\n+\t* tree.h (attribute_spec): Add new member affects_type_identity.\n+\t* attribs.c (empty_attribute_table): Adjust attribute_spec\n+\tinitializers.\n \t* config/alpha/alpha.c: Likewise.\n \t* config/arc/arc.c: Likewise.\n \t* config/arm/arm.c: Likewise.\n@@ -235,8 +235,7 @@\n 2011-03-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_chunkify_start): Prevent literal pool\n-\tsplitting between a call and its corresponding CALL_ARG_LOCATION\n-\tnote.\n+\tsplitting between a call and its corresponding CALL_ARG_LOCATION note.\n \n 2011-03-18  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n@@ -974,10 +973,10 @@\n \n 2011-03-08  Georg-Johann Lay  <avr@gjlay.de>\n \n-       * config/avr/avr.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n-       * config/avr/avr.c (TARGET_REGISTER_MOVE_COST,\n-       TARGET_MEMORY_MOVE_COST): Define.\n-       (avr_register_move_cost, avr_memory_move_cost): New Functions.\n+\t* config/avr/avr.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n+\t* config/avr/avr.c (TARGET_REGISTER_MOVE_COST)\n+\t(TARGET_MEMORY_MOVE_COST): Define.\n+\t(avr_register_move_cost, avr_memory_move_cost): New Functions.\n \n 2011-03-08  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "c9bafeb29031929f351a5fcea76988fec47532de", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e43ad6805fa887f6989c724ece2127abb117698/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e43ad6805fa887f6989c724ece2127abb117698/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=9e43ad6805fa887f6989c724ece2127abb117698", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on the DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -9645,10 +9645,20 @@ alpha_pad_noreturn (void)\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {\n-      if (!CALL_P (insn)\n-\t  || !find_reg_note (insn, REG_NORETURN, NULL_RTX))\n+      if (! (CALL_P (insn)\n+\t     && find_reg_note (insn, REG_NORETURN, NULL_RTX)))\n         continue;\n \n+      /* Make sure we do not split a call and its corresponding\n+\t CALL_ARG_LOCATION note.  */\n+      if (CALL_P (insn))\n+\t{\n+\t  next = NEXT_INSN (insn);\n+\t  if (next && NOTE_P (next)\n+\t      && NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION)\n+\t    insn = next;\n+\t}\n+\n       next = next_active_insn (insn);\n \n       if (next)"}]}