{"sha": "b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNiYjBlYjljMGE4OWM5ZWMxOTdmMmYwYTdjMmU2YThkM2YwMDRhZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-02-07T02:14:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-02-07T02:14:58Z"}, "message": "parser.c (synthesize_implicit_template_parm): Use grow_tree_vec.\n\n\n\t* parser.c (synthesize_implicit_template_parm): Use grow_tree_vec.\n\t* ggc.h (ggc_internal_cleared_alloc): New macro.\n\t* vec.h (vec_safe_copy): Handle memory stats.\n\t* omp-low.c (simd_clone_struct_alloc): Use ggc_internal_cleared_alloc.\n\t* target-globals.c (save_target_globals): Likewise.\n\nFrom-SVN: r207588", "tree": {"sha": "c97833ceb01a286f01ced7b954c325c8d001d804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c97833ceb01a286f01ced7b954c325c8d001d804"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/comments", "author": null, "committer": null, "parents": [{"sha": "e2f0f5f70455606bf951e22457184e6bf18d580f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f0f5f70455606bf951e22457184e6bf18d580f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2f0f5f70455606bf951e22457184e6bf18d580f"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "73a9bd7df50f4dc69a5338b40631d5ede0a8d438", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -1,4 +1,11 @@\n-2014-02-06  Jakub Jelinek  <jakub@redhat.com>\n+2014-02-06  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ggc.h (ggc_internal_cleared_alloc): New macro.\n+\t* vec.h (vec_safe_copy): Handle memory stats.\n+\t* omp-low.c (simd_clone_struct_alloc): Use ggc_internal_cleared_alloc.\n+\t* target-globals.c (save_target_globals): Likewise.\n+\n+2014-02-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR target/60077\n \t* expr.c (emit_move_resolve_push): Export; be bit more selective"}, {"sha": "6bb1115fad604fde4ce5f13d0cb00ec7f9cef64b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -1,3 +1,7 @@\n+2014-02-05  Jan Hubicka  <hubicka@ucw.cz\n+\n+\t* parser.c (synthesize_implicit_template_parm): Use grow_tree_vec.\n+\n 2014-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/58703"}, {"sha": "f0722d6bf7bc031433b137d2943f7a45ca935053", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -31957,7 +31957,7 @@ synthesize_implicit_template_parm  (cp_parser *parser)\n     {\n       tree& new_parms = INNERMOST_TEMPLATE_PARMS (current_template_parms);\n       int new_parm_idx = TREE_VEC_LENGTH (new_parms);\n-      new_parms = grow_tree_vec_stat (new_parms, new_parm_idx + 1);\n+      new_parms = grow_tree_vec (new_parms, new_parm_idx + 1);\n       TREE_VEC_ELT (new_parms, new_parm_idx) = parser->implicit_template_parms;\n     }\n "}, {"sha": "55f3fe9b0bc5dd85c08fdf2290cbf121ac910335", "filename": "gcc/ggc.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -146,6 +146,7 @@ extern size_t ggc_round_alloc_size (size_t requested_size);\n /* Allocates cleared memory.  */\n extern void *ggc_internal_cleared_alloc_stat (size_t MEM_STAT_DECL)\n   ATTRIBUTE_MALLOC;\n+#define ggc_internal_cleared_alloc(s) ggc_internal_cleared_alloc_stat (s MEM_STAT_INFO)\n \n /* Resize a block.  */\n extern void *ggc_realloc_stat (void *, size_t MEM_STAT_DECL);"}, {"sha": "2c35751a957aded84c7e0ee597728e5f5335feec", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -10649,7 +10649,7 @@ simd_clone_struct_alloc (int nargs)\n   size_t len = (sizeof (struct cgraph_simd_clone)\n \t\t+ nargs * sizeof (struct cgraph_simd_clone_arg));\n   clone_info = (struct cgraph_simd_clone *)\n-\t       ggc_internal_cleared_alloc_stat (len PASS_MEM_STAT);\n+\t       ggc_internal_cleared_alloc (len);\n   return clone_info;\n }\n "}, {"sha": "7cf95aeeddfe98037ba8631e2d0b3142980b7755", "filename": "gcc/target-globals.c", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Ftarget-globals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Ftarget-globals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.c?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -79,29 +79,21 @@ save_target_globals (void)\n     struct target_lower_subreg lower_subreg;\n   } *p;\n   p = (struct target_globals_extra *)\n-      ggc_internal_cleared_alloc_stat (sizeof (struct target_globals_extra)\n-\t\t\t\t       PASS_MEM_STAT);\n+      ggc_internal_cleared_alloc (sizeof (struct target_globals_extra));\n   g = (struct target_globals *) p;\n   g->flag_state = &p->flag_state;\n-  g->regs = ggc_internal_cleared_alloc_stat (sizeof (struct target_regs)\n-\t\t\t\t\t     PASS_MEM_STAT);\n+  g->regs = ggc_internal_cleared_alloc (sizeof (struct target_regs));\n   g->rtl = ggc_alloc_cleared_target_rtl ();\n   g->hard_regs\n-    = ggc_internal_cleared_alloc_stat (sizeof (struct target_hard_regs)\n-\t\t\t\t       PASS_MEM_STAT);\n-  g->reload = ggc_internal_cleared_alloc_stat (sizeof (struct target_reload)\n-\t\t\t\t\t       PASS_MEM_STAT);\n-  g->expmed =  ggc_internal_cleared_alloc_stat (sizeof (struct target_expmed)\n-\t\t\t\t\t\tPASS_MEM_STAT);\n+    = ggc_internal_cleared_alloc (sizeof (struct target_hard_regs));\n+  g->reload = ggc_internal_cleared_alloc (sizeof (struct target_reload));\n+  g->expmed =  ggc_internal_cleared_alloc (sizeof (struct target_expmed));\n   g->optabs = &p->optabs;\n   g->libfuncs = ggc_alloc_cleared_target_libfuncs ();\n   g->cfgloop = &p->cfgloop;\n-  g->ira = ggc_internal_cleared_alloc_stat (sizeof (struct target_ira)\n-\t\t\t\t\t    PASS_MEM_STAT);\n-  g->ira_int = ggc_internal_cleared_alloc_stat (sizeof (struct target_ira_int)\n-\t\t\t\t\t\tPASS_MEM_STAT);\n-  g->lra_int = ggc_internal_cleared_alloc_stat (sizeof (struct target_lra_int)\n-\t\t\t\t\t\tPASS_MEM_STAT);\n+  g->ira = ggc_internal_cleared_alloc (sizeof (struct target_ira));\n+  g->ira_int = ggc_internal_cleared_alloc (sizeof (struct target_ira_int));\n+  g->lra_int = ggc_internal_cleared_alloc (sizeof (struct target_lra_int));\n   g->builtins = &p->builtins;\n   g->gcse = &p->gcse;\n   g->bb_reorder = &p->bb_reorder;"}, {"sha": "cb4ba632869c3f4b4c6569209afbcd36be6eac01", "filename": "gcc/vec.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=b3bb0eb9c0a89c9ec197f2f0a7c2e6a8d3f004af", "patch": "@@ -679,9 +679,9 @@ vec_safe_truncate (vec<T, A, vl_embed> *v, unsigned size)\n /* If SRC is not NULL, return a pointer to a copy of it.  */\n template<typename T, typename A>\n inline vec<T, A, vl_embed> *\n-vec_safe_copy (vec<T, A, vl_embed> *src)\n+vec_safe_copy (vec<T, A, vl_embed> *src CXX_MEM_STAT_INFO)\n {\n-  return src ? src->copy () : NULL;\n+  return src ? src->copy (ALONE_PASS_MEM_STAT) : NULL;\n }\n \n /* Copy the elements from SRC to the end of DST as if by memcpy."}]}