{"sha": "752efdc0a5442ca09df1a54a48602a8a47166162", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyZWZkYzBhNTQ0MmNhMDlkZjFhNTRhNDg2MDJhOGE0NzE2NjE2Mg==", "commit": {"author": {"name": "Dennis Glatting", "email": "dennisg@gnu.org", "date": "1991-11-29T20:02:01Z"}, "committer": {"name": "Dennis Glatting", "email": "dennisg@gnu.org", "date": "1991-11-29T20:02:01Z"}, "message": "fixed several const decls.  bozo.\n\nFrom-SVN: r80", "tree": {"sha": "3e7531d6c5a3972019f0497fdb043e788aaf8358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e7531d6c5a3972019f0497fdb043e788aaf8358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/752efdc0a5442ca09df1a54a48602a8a47166162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752efdc0a5442ca09df1a54a48602a8a47166162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/752efdc0a5442ca09df1a54a48602a8a47166162", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752efdc0a5442ca09df1a54a48602a8a47166162/comments", "author": null, "committer": null, "parents": [{"sha": "3f2f181378f50ec0b0ca9a746448493b14d3f17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2f181378f50ec0b0ca9a746448493b14d3f17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2f181378f50ec0b0ca9a746448493b14d3f17b"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "2406200268f4e75212a87ed4d5b03bbdc979edbe", "filename": "gcc/objc/objc.h", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752efdc0a5442ca09df1a54a48602a8a47166162/gcc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752efdc0a5442ca09df1a54a48602a8a47166162/gcc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc.h?ref=752efdc0a5442ca09df1a54a48602a8a47166162", "patch": "@@ -19,10 +19,14 @@\n  * along with this program; if not, write to the Free Software\n  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n  * \n-  $Header: /usr/user/dennis_glatting/ObjC/c-runtime/include/RCS/ObjC.h,v 0.4 1991/11/19 12:37:49 dennisg Exp dennisg $\n+  $Header: /usr/user/dennis_glatting/ObjC/c-runtime/include/RCS/ObjC.h,v 0.5 1991/11/29 00:24:14 dennisg Exp dennisg $\n   $Author: dennisg $\n-  $Date: 1991/11/19 12:37:49 $\n+  $Date: 1991/11/29 00:24:14 $\n   $Log: ObjC.h,v $\n+ * Revision 0.5  1991/11/29  00:24:14  dennisg\n+ * many changes including posing, things to make the compiler\n+ * happier, structure changes, and things to make it play better.\n+ *\n  * Revision 0.4  1991/11/19  12:37:49  dennisg\n  * changed typedef and struct decls.\n  * the run-time was changed and those decls changed too.\n@@ -179,12 +183,12 @@ typedef struct objc_symtab {\n  *  module structure of the executable. \n  */\n typedef struct objc_module {\n-  u_long    version;                            /* Compiler revision. */\n-  u_long    size;                               /* sizeof(Module). */\n-  char*     name;                               /* Name of the file where the \n+  u_long    \tversion;                        \t/* Compiler revision. */\n+  u_long    \tsize;                            \t/* sizeof(Module). */\n+  const char*\tname;                           \t/* Name of the file where the \n                                                   module was generated.   The \n                                                   name includes the path. */\n-  Symtab_t  symtab;                             /* Pointer to the Symtab of\n+  Symtab_t  \tsymtab;                          \t/* Pointer to the Symtab of\n                                                   the module.  The Symtab\n                                                   holds an array of pointers to \n                                                   the classes and categories \n@@ -205,13 +209,13 @@ typedef struct objc_ivar_list {\n                                                   variable defined in the\n                                                   class. */\n   struct objc_ivar {\n-    char* ivar_name;                            /* Name of the instance\n+    const char* ivar_name;                     \t/* Name of the instance\n                                                   variable as entered in the\n                                                   class definition. */\n-    char* ivar_type;                            /* Description of the Ivar's\n+    const char* ivar_type;                     \t/* Description of the Ivar's\n                                                   type.  Useful for \n                                                   debuggers. */\n-    int   ivar_offset;                          /* Byte offset from the base \n+    int   \t\t\tivar_offset;                  \t/* Byte offset from the base \n                                                   address of the instance \n                                                   structure to the variable. */\n \n@@ -237,16 +241,16 @@ typedef struct objc_method_list {\n   int             method_count;               /* Number of methods defined in \n                                                 this structure. */\n   struct objc_method {\n-    SEL   method_name;                        /* This variable is the method's \n+    SEL   \t\t\tmethod_name;                \t/* This variable is the method's \n                                                 name.  It is a char*. \n                                                   The unique integer passed to \n                                                 objc_msgSend() is a char* too.  \n                                                 It is compared against \n                                                 method_name using strcmp(). */\n-    char* method_types;                       /* Description of the method's\n+    const char*\tmethod_types;                 /* Description of the method's\n                                                 parameter list.  Useful for\n                                                 debuggers. */\n-    IMP   method_imp;                         /* Address of the method in the \n+    IMP   \t\t\tmethod_imp;                   /* Address of the method in the \n                                                 executable. */\n   } method_list[1];                           /* Variable length \n                                                 structure. */\n@@ -275,7 +279,7 @@ typedef struct objc_metaClass {\n   struct objc_metaClass*\tsuper_class;        /* Pointer to meta class's\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuper class. NULL for \n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject. */\n-  char*         \t\t\t\t\tname;               /* Name of the meta class. */\n+  const char*         \t\tname;               /* Name of the meta class. */\n   long         \t\t\t\t\t \tversion;            /* Unknown. */\n   long          \t\t\t\t\tinfo;               /* Bit mask.  See class masks \n                                                 defined above. */\n@@ -312,7 +316,7 @@ typedef struct objc_class {\n   struct objc_class*\tsuper_class;            /* Pointer to the super \n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass. NULL for class \n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject. */\n-  char*         \t\t\tname;                   /* Name of the class. */\n+  const char*         name;                   /* Name of the class. */\n   long          \t\t\tversion;                /* Unknown. */\n   long          \t\t\tinfo;                   /* Bit mask.  See class masks \n                                                 defined above. */\n@@ -345,10 +349,10 @@ typedef struct objc_class {\n  *  factory methods.  \n  */\n typedef struct objc_category {\n-  char*         category_name;                /* Name of the category.  Name\n+  const char*   category_name;                /* Name of the category.  Name\n                                                 contained in the () of the\n                                                 category definition. */\n-  char*         class_name;                   /* Name of the class to which\n+  const char*   class_name;                   /* Name of the class to which\n                                                 the category belongs. */\n   MethodList_t  instance_methods;             /* Linked list of instance\n                                                 methods defined in the \n@@ -377,4 +381,5 @@ typedef struct objc_super {\n }\n #endif\n \n+\n #endif"}]}