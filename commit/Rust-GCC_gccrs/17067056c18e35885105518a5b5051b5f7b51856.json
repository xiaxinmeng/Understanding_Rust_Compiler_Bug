{"sha": "17067056c18e35885105518a5b5051b5f7b51856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwNjcwNTZjMThlMzU4ODUxMDU1MThhNWI1MDUxYjVmN2I1MTg1Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-02T13:52:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-02T13:52:03Z"}, "message": "re PR tree-optimization/88651 (tree-data-ref.c:3764:26: runtime error: signed integer overflow: 9223372036854775802 - -6 cannot be represented in type 'long int')\n\n2019-01-02  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/88651\n\t* tree-data-ref.c (analyze_subscript_affine_affine): Use\n\twidest_ints when mangling max_stmt_execution results.\n\nFrom-SVN: r267512", "tree": {"sha": "0f70b8cf5d68726879dd16ea45bcfb1f4d14bc87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f70b8cf5d68726879dd16ea45bcfb1f4d14bc87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17067056c18e35885105518a5b5051b5f7b51856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17067056c18e35885105518a5b5051b5f7b51856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17067056c18e35885105518a5b5051b5f7b51856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17067056c18e35885105518a5b5051b5f7b51856/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcff404e031f2fd18eb7eda0f5edbb996868fd42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcff404e031f2fd18eb7eda0f5edbb996868fd42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcff404e031f2fd18eb7eda0f5edbb996868fd42"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "b39771c621ba2d1615e72ea664f981b15587b8cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17067056c18e35885105518a5b5051b5f7b51856/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17067056c18e35885105518a5b5051b5f7b51856/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17067056c18e35885105518a5b5051b5f7b51856", "patch": "@@ -1,3 +1,9 @@\n+2019-01-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/88651\n+\t* tree-data-ref.c (analyze_subscript_affine_affine): Use\n+\twidest_ints when mangling max_stmt_execution results.\n+\n 2019-01-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88621"}, {"sha": "7d1f03c66af693360ef64d70293848e96ccff656", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17067056c18e35885105518a5b5051b5f7b51856/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17067056c18e35885105518a5b5051b5f7b51856/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=17067056c18e35885105518a5b5051b5f7b51856", "patch": "@@ -3761,10 +3761,6 @@ analyze_subscript_affine_affine (tree chrec_a,\n \n \t      if (niter > 0)\n \t\t{\n-\t\t  HOST_WIDE_INT tau2 = MIN (FLOOR_DIV (niter_a - i0, i1),\n-\t\t\t\t\t    FLOOR_DIV (niter_b - j0, j1));\n-\t\t  HOST_WIDE_INT last_conflict = tau2 - (x1 - i0)/i1;\n-\n \t\t  /* If the overlap occurs outside of the bounds of the\n \t\t     loop, there is no dependence.  */\n \t\t  if (x1 >= niter_a || y1 >= niter_b)\n@@ -3774,8 +3770,20 @@ analyze_subscript_affine_affine (tree chrec_a,\n \t\t      *last_conflicts = integer_zero_node;\n \t\t      goto end_analyze_subs_aa;\n \t\t    }\n+\n+\t\t  /* max stmt executions can get quite large, avoid\n+\t\t     overflows by using wide ints here.  */\n+\t\t  widest_int tau2\n+\t\t    = wi::smin (wi::sdiv_floor (wi::sub (niter_a, i0), i1),\n+\t\t\t\twi::sdiv_floor (wi::sub (niter_b, j0), j1));\n+\t\t  widest_int last_conflict = wi::sub (tau2, (x1 - i0)/i1);\n+\t\t  if (wi::min_precision (last_conflict, SIGNED)\n+\t\t      <= TYPE_PRECISION (integer_type_node))\n+\t\t    *last_conflicts\n+\t\t       = build_int_cst (integer_type_node,\n+\t\t\t\t\tlast_conflict.to_shwi ());\n \t\t  else\n-\t\t    *last_conflicts = build_int_cst (NULL_TREE, last_conflict);\n+\t\t    *last_conflicts = chrec_dont_know;\n \t\t}\n \t      else\n \t\t*last_conflicts = chrec_dont_know;"}]}