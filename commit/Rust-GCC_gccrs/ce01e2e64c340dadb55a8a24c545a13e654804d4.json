{"sha": "ce01e2e64c340dadb55a8a24c545a13e654804d4", "node_id": "C_kwDOANBUbNoAKGNlMDFlMmU2NGMzNDBkYWRiNTVhOGEyNGM1NDVhMTNlNjU0ODA0ZDQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-22T10:58:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-23T15:07:38Z"}, "message": "libstdc++: std::system_category should know meaning of zero [PR102425]\n\nAlthough 0 is not an errno value, it should still be recognized as\ncorresponding to a value belonging to the generic_category().\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/102425\n\t* src/c++11/system_error.cc\n\t(system_error_category::default_error_condition): Add 0 to\n\tswitch.\n\t* testsuite/19_diagnostics/error_category/102425.cc: New test.", "tree": {"sha": "176a81b25388f926aa7f7285bbea977ff7c80478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/176a81b25388f926aa7f7285bbea977ff7c80478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce01e2e64c340dadb55a8a24c545a13e654804d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce01e2e64c340dadb55a8a24c545a13e654804d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce01e2e64c340dadb55a8a24c545a13e654804d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce01e2e64c340dadb55a8a24c545a13e654804d4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a05b23cc2e53c38e8321ddb5d2cbe40737e506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a05b23cc2e53c38e8321ddb5d2cbe40737e506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a05b23cc2e53c38e8321ddb5d2cbe40737e506"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "6c79202eb0ee03416b862c262f51d207f604b6b4", "filename": "libstdc++-v3/src/c++11/system_error.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce01e2e64c340dadb55a8a24c545a13e654804d4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce01e2e64c340dadb55a8a24c545a13e654804d4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc?ref=ce01e2e64c340dadb55a8a24c545a13e654804d4", "patch": "@@ -70,6 +70,8 @@ namespace\n     virtual std::error_condition\n     default_error_condition(int ev) const noexcept\n     {\n+      // Use generic category for all known POSIX errno values (including zero)\n+      // and system category otherwise.\n       switch (ev)\n       {\n       // List of errno macros from [cerrno.syn].\n@@ -310,6 +312,7 @@ namespace\n #ifdef EXDEV\n       case EXDEV:\n #endif\n+      case 0:\n         return std::error_condition(ev, std::generic_category());\n \n       /* Additional system-dependent mappings from non-standard error codes"}, {"sha": "069b5e284e1cb246e9641215d0cbfa5abe3e5bbb", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/102425.cc", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce01e2e64c340dadb55a8a24c545a13e654804d4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2F102425.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce01e2e64c340dadb55a8a24c545a13e654804d4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2F102425.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2F102425.cc?ref=ce01e2e64c340dadb55a8a24c545a13e654804d4", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do run { target c++11 } }\n+#include <system_error>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  // PR libstdc++/102425\n+  VERIFY( std::error_code() == std::error_condition() );\n+\n+  auto zero = std::system_category().default_error_condition(0);\n+  // This is the condition that the equality above relies on:\n+  VERIFY( zero.category() == std::generic_category() );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}