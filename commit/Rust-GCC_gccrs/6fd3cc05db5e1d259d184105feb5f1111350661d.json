{"sha": "6fd3cc05db5e1d259d184105feb5f1111350661d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkM2NjMDVkYjVlMWQyNTlkMTg0MTA1ZmViNWYxMTExMzUwNjYxZA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2004-07-17T12:42:46Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-07-17T12:42:46Z"}, "message": "Box.java: Put FIXME comment above class declaration.\n\n2004-07-17  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/swing/Box.java: Put FIXME comment above class declaration.\n\t* javax/swing/JButton.java: Remove illegal L&F HTML from comments.\n\t* javax/swing/JCheckBox.java: Likewise.\n\t* javax/swing/JDialog.java: Likewise.\n\t* javax/swing/JRadioButton.java: Likewise.\n\t* javax/swing/JToggleButton.java: Likewise.\n\t* javax/swing/UIManager.java: Likewise.\n\t* javax/swing/border/TitledBorder.java: Likewise.\n\t* javax/swing/plaf/basic/BasicLabelUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java: Likewise.\n\t* javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicProgressBarUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicScrollBarUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicSeparatorUI.java: Likewise.\n\t* javax/swing/text/JTextComponent.java: Likewise.\n\nFrom-SVN: r84866", "tree": {"sha": "79e85efe13a1e8b733e8e4cd5ab1c2f750a9834d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79e85efe13a1e8b733e8e4cd5ab1c2f750a9834d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fd3cc05db5e1d259d184105feb5f1111350661d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd3cc05db5e1d259d184105feb5f1111350661d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd3cc05db5e1d259d184105feb5f1111350661d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd3cc05db5e1d259d184105feb5f1111350661d/comments", "author": null, "committer": null, "parents": [{"sha": "649067c3624a25712b0668f0c48060cca0faf030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649067c3624a25712b0668f0c48060cca0faf030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649067c3624a25712b0668f0c48060cca0faf030"}], "stats": {"total": 95, "additions": 57, "deletions": 38}, "files": [{"sha": "375f109b6fc23be047fc6c84d29811707e8b8842", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -1,3 +1,21 @@\n+2004-07-17  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/swing/Box.java: Put FIXME comment above class declaration.\n+\t* javax/swing/JButton.java: Remove illegal L&F HTML from comments.\n+\t* javax/swing/JCheckBox.java: Likewise.\n+\t* javax/swing/JDialog.java: Likewise.\n+\t* javax/swing/JRadioButton.java: Likewise.\n+\t* javax/swing/JToggleButton.java: Likewise.\n+\t* javax/swing/UIManager.java: Likewise.\n+\t* javax/swing/border/TitledBorder.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicLabelUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicProgressBarUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicSeparatorUI.java: Likewise.\n+\t* javax/swing/text/JTextComponent.java: Likewise.\n+\n 2004-07-17  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/net/DatagramPacket.java (setAddress): Removed check for"}, {"sha": "4e33874785980d3ef1bcd3a05ad16714e5a7b061", "filename": "libjava/javax/swing/Box.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -55,9 +55,8 @@ public class Box extends JComponent implements Accessible\n {\n   private static final long serialVersionUID = 1525417495883046342L;\n   \n-  protected class AccessibleBox \n   // FIXME: disable to make libjava compile; visibility rules are broken\n-  // extends Container.AccessibleAWTContainer\n+  protected class AccessibleBox // extends Container.AccessibleAWTContainer\n   {\n     private static final long serialVersionUID = -7775079816389931944L;\n   \n@@ -75,9 +74,8 @@ public static class Filler extends JComponent implements Accessible\n   {\n     private static final long serialVersionUID = -1204263191910183998L;\n   \n-    protected class AccessibleBoxFiller \n     // FIXME: disable to make libjava compile; visibility rules are broken\n-    // extends Component.AccessibleAWTComponent\n+    protected class AccessibleBoxFiller // extends Component.AccessibleAWTComponent\n     {\n       private static final long serialVersionUID = 164963348357479321L;\n       "}, {"sha": "cb44992f3be32e7028801ce881063522171bb940", "filename": "libjava/javax/swing/JButton.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJButton.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -98,7 +98,8 @@ public AccessibleContext getAccessibleContext()\n   \n     public String getUIClassID()\n     {\n-\t//Returns a string that specifies the name of the L&F class that renders this component.  \n+\t//Returns a string that specifies the name of the Look and Feel\n+\t//class that renders this component.  \n \treturn \"ButtonUI\";\n     }\n   "}, {"sha": "b4620593ed4359f0515b1af6d824171ae3d2a6e7", "filename": "libjava/javax/swing/JCheckBox.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -85,7 +85,8 @@ public AccessibleContext getAccessibleContext()\n   \n     public String getUIClassID()\n     {\n-\t//Returns a string that specifies the name of the L&F class that renders this component.  \n+\t//Returns a string that specifies the name of the Look and Feel\n+\t//class that renders this component.  \n \treturn \"CheckBoxUI\";\n     }\n   "}, {"sha": "d331580182826d8ce8189b956c0f8a2c06496e4a", "filename": "libjava/javax/swing/JDialog.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDialog.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -76,7 +76,7 @@ public class JDialog extends Dialog implements Accessible, WindowConstants,\n   /** The default action taken when closed. */\n   private int close_action = HIDE_ON_CLOSE;\n   \n-  /** Whether JDialogs are decorated by the L&F. */\n+  /** Whether JDialogs are decorated by the Look and Feel. */\n   private static boolean decorated = false;\n \n   /**\n@@ -237,7 +237,7 @@ protected void dialogInit()\n    * This method returns whether JDialogs will have their\n    * window decorations provided by the Look and Feel.\n    *\n-   * @return Whether the window decorations are L&F provided.\n+   * @return Whether the window decorations are Look and Feel provided.\n    */\n   public static boolean isDefaultLookAndFeelDecorated()\n   {\n@@ -249,7 +249,7 @@ public static boolean isDefaultLookAndFeelDecorated()\n    * window decorations provided by the Look and Feel.\n    *\n    * @param defaultLookAndFeelDecorated Whether the window\n-   * decorations are L&F provided.\n+   * decorations are Look and Feel provided.\n    */\n   public static void setDefaultLookAndFeelDecorated(boolean defaultLookAndFeelDecorated)\n   {"}, {"sha": "54582f6001ae72867a2eabe70c0d2638d0a1925a", "filename": "libjava/javax/swing/JRadioButton.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButton.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -80,7 +80,8 @@ public AccessibleContext getAccessibleContext()\n   \n     public String getUIClassID()\n     {\n-\t//Returns a string that specifies the name of the L&F class that renders this component.  \n+\t//Returns a string that specifies the name of the Look and Feel\n+\t//class that renders this component.  \n \treturn \"RadioButtonUI\";\n     }\n   "}, {"sha": "67371da0f1438c4cb45c4976f6d7f9b2718bf73b", "filename": "libjava/javax/swing/JToggleButton.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToggleButton.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -115,8 +115,8 @@ public AccessibleContext getAccessibleContext()\n   }\n   \n   /**\n-   * Returns a string that specifies the name of the L&amp;F class that renders\n-   * this component.\n+   * Returns a string that specifies the name of the Look and Feel\n+   * class that renders this component.\n    */\n   public String getUIClassID()\n   {"}, {"sha": "0310ed640e4d70618f29fa685f194664f5de7fa1", "filename": "libjava/javax/swing/UIManager.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FUIManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2FUIManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIManager.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -1,5 +1,5 @@\n /* UIManager.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -194,7 +194,7 @@ public static Dimension getDimension(Object key)\n    *\n    * @param key an Object that specifies the font. Typically,\n    *        this is a String such as\n-   *        <code>&quot;TitledBorder.font&quot;</code>.\n+   *        <code>TitledBorder.font</code>.\n    */\n   public static Font getFont(Object key)\n   {\n@@ -253,7 +253,7 @@ public static String getSystemLookAndFeelClassName()\n   }\n \n   public static ComponentUI getUI(JComponent target)\n-    // Returns the L&F object that renders the target component. \n+    // Returns the Look and Feel object that renders the target component. \n   {\n     ComponentUI ui = getDefaults().getUI(target);\n     //System.out.println(\"GET-UI-> \" + ui + \", for \" + target);"}, {"sha": "b257ce1c7adf894b86678963d65c10775e799b4f", "filename": "libjava/javax/swing/border/TitledBorder.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fborder%2FTitledBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fborder%2FTitledBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FTitledBorder.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -252,7 +252,7 @@\n    * The border underneath the title. If this value is\n    * <code>null</code>, the border will be retrieved from the {@link\n    * javax.swing.UIManager}&#x2019;s defaults table using the key\n-   * <code>&quot;TitledBorder.border&quot;</code>.\n+   * <code>TitledBorder.border</code>.\n    */\n   protected Border border;\n \n@@ -279,7 +279,7 @@\n    * The font for displaying the title text. If this value is\n    * <code>null</code>, the font will be retrieved from the {@link\n    * javax.swing.UIManager}&#x2019;s defaults table using the key\n-   * <code>&quot;TitledBorder.font&quot;</code>.\n+   * <code>TitledBorder.font</code>.\n    */\n   protected Font titleFont;\n \n@@ -288,7 +288,7 @@\n    * The color for displaying the title text. If this value is\n    * <code>null</code>, the color will be retrieved from the {@link\n    * javax.swing.UIManager}&#x2019;s defaults table using the key\n-   * <code>&quot;TitledBorder.titleColor&quot;</code>.\n+   * <code>TitledBorder.titleColor</code>.\n    */\n   protected Color titleColor;\n \n@@ -717,11 +717,11 @@ public String getTitle()\n    * Retrieves the border underneath the title. If no border has been\n    * set, or if it has been set to<code>null</code>, the current\n    * {@link javax.swing.LookAndFeel} will be asked for a border\n-   * using the key <code>&quot;TitledBorder.border&quot;</code>.\n+   * using the key <code>TitledBorder.border</code>.\n    *\n    * @return a border, or <code>null</code> if the current LookAndFeel\n    *         does not provide a border for the key\n-   *         <code>&quot;TitledBorder.border&quot;</code>.\n+   *         <code>TitledBorder.border</code>.\n    *\n    * @see javax.swing.UIManager#getBorder(Object)\n    */\n@@ -766,11 +766,11 @@ public int getTitleJustification()\n    * Retrieves the font for displaying the title text. If no font has\n    * been set, or if it has been set to<code>null</code>, the current\n    * {@link javax.swing.LookAndFeel} will be asked for a font\n-   * using the key <code>&quot;TitledBorder.font&quot;</code>.\n+   * using the key <code>TitledBorder.font</code>.\n    *\n    * @return a font, or <code>null</code> if the current LookAndFeel\n    *         does not provide a font for the key\n-   *         <code>&quot;TitledBorder.font&quot;</code>.\n+   *         <code>TitledBorder.font</code>.\n    *\n    * @see javax.swing.UIManager#getFont(Object)\n    */\n@@ -787,11 +787,11 @@ public Font getTitleFont()\n    * Retrieves the color for displaying the title text. If no color has\n    * been set, or if it has been set to<code>null</code>, the current\n    * {@link javax.swing.LookAndFeel} will be asked for a color\n-   * using the key <code>&quot;TitledBorder.titleColor&quot;</code>.\n+   * using the key <code>TitledBorder.titleColor</code>.\n    *\n    * @return a color, or <code>null</code> if the current LookAndFeel\n    *         does not provide a color for the key\n-   *         <code>&quot;TitledBorder.titleColor&quot;</code>.\n+   *         <code>TitledBorder.titleColor</code>.\n    *\n    * @see javax.swing.UIManager#getColor(Object)\n    */\n@@ -1088,7 +1088,7 @@ private Measurements getMeasurements(Component c)\n \n \n     /**\n-     * The border that constitues the &quot;interior&quot; border\n+     * The border that constitues the interior border\n      * underneath the title text.\n      */\n     Border border;"}, {"sha": "46d012ddd58b9e5acfadc35812e496e26cc80b53", "filename": "libjava/javax/swing/plaf/basic/BasicLabelUI.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -59,7 +59,7 @@\n \n /**\n  * This is the Basic Look and Feel class for the JLabel.  One BasicLabelUI\n- * object is used to paint all JLabels that utilize the Basic L&F.\n+ * object is used to paint all JLabels that utilize the Basic Look and Feel.\n  */\n public class BasicLabelUI extends LabelUI implements PropertyChangeListener\n {\n@@ -81,7 +81,7 @@ public BasicLabelUI()\n    *\n    * @param c The {@link JComponent} that a UI is being created for.\n    *\n-   * @return A label UI for the Basic L&F.\n+   * @return A label UI for the Basic Look and Feel.\n    */\n   public static ComponentUI createUI(JComponent c)\n   {"}, {"sha": "314ab5f665c4bc03df97865087043fe06cbc351d", "filename": "libjava/javax/swing/plaf/basic/BasicLookAndFeel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -1,5 +1,5 @@\n /* BasicLookAndFeel.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -228,7 +228,7 @@ protected void initComponentDefaults(UIDefaults defaults)\n   {\n     Object[] uiDefaults;\n     \n-    // The JDK's default L&F happens to use these three purple shades\n+    // The default Look and Feel happens to use these three purple shades\n     // extensively.\n     Color lightPurple = new Color(0xCC, 0xCC, 0xFF);\n     Color midPurple = new Color(0x99, 0x99, 0xCC);"}, {"sha": "caa5f8ddd342b56c9c6ab8b5c9fb24b5cc8f4fb0", "filename": "libjava/javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuSeparatorUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuSeparatorUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuSeparatorUI.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -53,7 +53,7 @@\n \n \n /**\n- * The Basic L&F UI delegate for JPopupMenu.Separator.\n+ * The Basic Look and Feel UI delegate for JPopupMenu.Separator.\n  */\n public class BasicPopupMenuSeparatorUI extends BasicSeparatorUI\n {"}, {"sha": "fa84267efa295d7db326fc5a8bd1270fc515de6d", "filename": "libjava/javax/swing/plaf/basic/BasicProgressBarUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -139,7 +139,7 @@ public void actionPerformed(ActionEvent e)\n   // The total number of frames must be an even number.\n   // The total number of frames is calculated from\n   // the cycleTime and repaintInterval given by\n-  // the basic L&F's defaults.\n+  // the basic Look and Feel defaults.\n   //\n   // +-----------------------------------------------+\n   // | frame0 | frame1 | frame2 | frame 3 | frame 4  |"}, {"sha": "478ecc08d42aa34f1508a34cee6a57f67dff1f8d", "filename": "libjava/javax/swing/plaf/basic/BasicScrollBarUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -571,7 +571,7 @@ public void addLayoutComponent(String name, Component child)\n \n   /**\n    * This method configures the scrollbar's colors. This can be \n-   * done by looking up the standard colors from the L&F defaults.\n+   * done by looking up the standard colors from the Look and Feel defaults.\n    */\n   protected void configureScrollBarColors()\n   {\n@@ -891,7 +891,7 @@ protected void installComponents()\n \n   /**\n    * This method installs the defaults for the scrollbar specified\n-   * by the Basic L&F.\n+   * by the Basic Look and Feel.\n    */\n   protected void installDefaults()\n   {\n@@ -1257,7 +1257,7 @@ protected void uninstallComponents()\n \n   /**\n    * This method uninstalls any defaults that this\n-   * scrollbar acquired from the Basic L&F defaults.\n+   * scrollbar acquired from the Basic Look and Feel defaults.\n    */\n   protected void uninstallDefaults()\n   {"}, {"sha": "9149cb85d80c32dbac5874f6c1bcc2a032016462", "filename": "libjava/javax/swing/plaf/basic/BasicSeparatorUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSeparatorUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSeparatorUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSeparatorUI.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -51,7 +51,7 @@\n import javax.swing.SwingUtilities;\n \n /**\n- * The Basic L&F UI delegate for JSeparator.\n+ * The Basic Look and Feel UI delegate for JSeparator.\n  */\n public class BasicSeparatorUI extends SeparatorUI\n {\n@@ -113,7 +113,7 @@ public void uninstallUI(JComponent c)\n \n   /**\n    * This method installs the defaults that are given by\n-   * the Basic L&F.\n+   * the Basic Look and Feel.\n    *\n    * @param s The JSeparator that is being installed.\n    */\n@@ -128,7 +128,7 @@ protected void installDefaults(JSeparator s)\n \n   /**\n    * This method removes the defaults that were given\n-   * by the Basic L&F.\n+   * by the Basic Look and Feel.\n    *\n    * @param s The JSeparator that is being uninstalled.\n    */"}, {"sha": "d5227d03e0888c956f8c56a5eafe4783ee262f6f", "filename": "libjava/javax/swing/text/JTextComponent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd3cc05db5e1d259d184105feb5f1111350661d/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java?ref=6fd3cc05db5e1d259d184105feb5f1111350661d", "patch": "@@ -371,7 +371,7 @@ public String getText(int offset, int length)\n   }\n \n   /**\n-   * Returns a string that specifies the name of the l&amp;f class\n+   * Returns a string that specifies the name of the Look and Feel class\n    * that renders this component.\n    *\n    * @return the string \"TextComponentUI\""}]}