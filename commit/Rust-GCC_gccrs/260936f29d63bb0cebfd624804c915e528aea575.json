{"sha": "260936f29d63bb0cebfd624804c915e528aea575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwOTM2ZjI5ZDYzYmIwY2ViZmQ2MjQ4MDRjOTE1ZTUyOGFlYTU3NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-13T19:07:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-13T19:07:21Z"}, "message": "Clarify __atomic_compare_exchange effects\n\n\t* doc/extend.texi (__atomic Builtins): Clarify compare_exchange\n\teffects.\n\nFrom-SVN: r232341", "tree": {"sha": "71bba69fcc54ed2e710937d7b5b9304f6c25f93f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71bba69fcc54ed2e710937d7b5b9304f6c25f93f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260936f29d63bb0cebfd624804c915e528aea575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260936f29d63bb0cebfd624804c915e528aea575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260936f29d63bb0cebfd624804c915e528aea575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260936f29d63bb0cebfd624804c915e528aea575/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "398d6febaf20997eedb94bec295e50bd7fc6ed82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/398d6febaf20997eedb94bec295e50bd7fc6ed82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/398d6febaf20997eedb94bec295e50bd7fc6ed82"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "a759568a64bca6c3c000b8b3f4833cca208f24f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260936f29d63bb0cebfd624804c915e528aea575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260936f29d63bb0cebfd624804c915e528aea575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=260936f29d63bb0cebfd624804c915e528aea575", "patch": "@@ -1,3 +1,8 @@\n+2016-01-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/extend.texi (__atomic Builtins): Clarify compare_exchange\n+\teffects.\n+\n 2016-01-13  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/68964"}, {"sha": "b85c34cf9a9c9c9ef56c09854f5958452d7ece0c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260936f29d63bb0cebfd624804c915e528aea575/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260936f29d63bb0cebfd624804c915e528aea575/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=260936f29d63bb0cebfd624804c915e528aea575", "patch": "@@ -9559,17 +9559,18 @@ This compares the contents of @code{*@var{ptr}} with the contents of\n @code{*@var{expected}}. If equal, the operation is a @emph{read-modify-write}\n operation that writes @var{desired} into @code{*@var{ptr}}.  If they are not\n equal, the operation is a @emph{read} and the current contents of\n-@code{*@var{ptr}} is written into @code{*@var{expected}}.  @var{weak} is true\n-for weak compare_exchange, and false for the strong variation.  Many targets \n+@code{*@var{ptr}} are written into @code{*@var{expected}}.  @var{weak} is true\n+for weak compare_exchange, which may fail spuriously, and false for\n+the strong variation, which never fails spuriously.  Many targets\n only offer the strong variation and ignore the parameter.  When in doubt, use\n the strong variation.\n \n-True is returned if @var{desired} is written into\n-@code{*@var{ptr}} and the operation is considered to conform to the\n+If @var{desired} is written into @code{*@var{ptr}} then true is returned\n+and memory is affected according to the\n memory order specified by @var{success_memorder}.  There are no\n restrictions on what memory order can be used here.\n \n-False is returned otherwise, and the operation is considered to conform\n+Otherwise, false is returned and memory is affected according\n to @var{failure_memorder}. This memory order cannot be\n @code{__ATOMIC_RELEASE} nor @code{__ATOMIC_ACQ_REL}.  It also cannot be a\n stronger order than that specified by @var{success_memorder}.\n@@ -9678,7 +9679,7 @@ alignment.  A value of 0 indicates typical alignment should be used.  The\n compiler may also ignore this parameter.\n \n @smallexample\n-if (_atomic_always_lock_free (sizeof (long long), 0))\n+if (__atomic_always_lock_free (sizeof (long long), 0))\n @end smallexample\n \n @end deftypefn"}]}