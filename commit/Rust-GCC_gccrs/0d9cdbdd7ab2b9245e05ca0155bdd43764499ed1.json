{"sha": "0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ5Y2RiZGQ3YWIyYjkyNDVlMDVjYTAxNTViZGQ0Mzc2NDQ5OWVkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-13T18:32:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-13T18:32:11Z"}, "message": "re PR c++/70627 (internal compiler error: verify_type failed)\n\n\tPR c++/70627\n\n\t* decl.c (start_enum): Don't change an existing ENUM_UNDERLYING_TYPE.\n\nFrom-SVN: r234956", "tree": {"sha": "e1812eb505d19076a7fca56c2949f95b96ff7043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1812eb505d19076a7fca56c2949f95b96ff7043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85115fb63266f4ae1979f2f5c4d79a7a2ff51a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85115fb63266f4ae1979f2f5c4d79a7a2ff51a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85115fb63266f4ae1979f2f5c4d79a7a2ff51a70"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "837a58c338f1a4e014fbf3ecdd7cd536753f58d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "patch": "@@ -1,3 +1,8 @@\n+2016-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70627\n+\t* decl.c (start_enum): Don't change an existing ENUM_UNDERLYING_TYPE.\n+\n 2016-04-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70635"}, {"sha": "380bc79ea53292266ded6e6225315136159a7b0d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "patch": "@@ -13253,7 +13253,10 @@ start_enum (tree name, tree enumtype, tree underlying_type,\n \n   if (underlying_type)\n     {\n-      if (CP_INTEGRAL_TYPE_P (underlying_type))\n+      if (ENUM_UNDERLYING_TYPE (enumtype))\n+\t/* We already checked that it matches, don't change it to a different\n+\t   typedef variant.  */;\n+      else if (CP_INTEGRAL_TYPE_P (underlying_type))\n         {\n \t  copy_type_enum (enumtype, underlying_type);\n           ENUM_UNDERLYING_TYPE (enumtype) = underlying_type;"}, {"sha": "3cb2d6d8186582519f29e5876c09eb6246a25fd0", "filename": "gcc/testsuite/g++.dg/cpp0x/enum_base3.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base3.C?ref=0d9cdbdd7ab2b9245e05ca0155bdd43764499ed1", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/70627\n+// { dg-do compile { target c++11 } }\n+\n+struct D;\n+struct A\n+{\n+  D *operator->();\n+};\n+struct B\n+{\n+  template <typename... T> void foo (T &&...) {}\n+};\n+typedef unsigned char G;\n+enum class H : G;\n+struct C\n+{\n+};\n+struct D : C\n+{\n+  B foo () const { B a; a.foo (d); }\n+  H d;\n+};\n+struct F : C\n+{\n+  void foo ();\n+  A f;\n+};\n+enum class H : unsigned char;\n+void F::foo () { B b = f->foo (); }"}]}