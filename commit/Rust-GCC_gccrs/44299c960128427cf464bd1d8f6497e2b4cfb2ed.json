{"sha": "44299c960128427cf464bd1d8f6497e2b4cfb2ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyOTljOTYwMTI4NDI3Y2Y0NjRiZDFkOGY2NDk3ZTJiNGNmYjJlZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-09-03T11:35:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-09-03T11:35:18Z"}, "message": "re PR ada/37328 (ACATS la14021 ICE in gimple_assign_set_rhs1, at gimple.h:1747)\n\n2008-09-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37328\n\t* tree-sra.c (sra_build_assignment): Gimplify properly.\n\t(generate_copy_inout): Take the correct stmt as definition,\n\tremove bogus assert.\n\nFrom-SVN: r139931", "tree": {"sha": "69bf05bdf7a0fda3d7c71f5cdd8fa56a543de1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69bf05bdf7a0fda3d7c71f5cdd8fa56a543de1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44299c960128427cf464bd1d8f6497e2b4cfb2ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44299c960128427cf464bd1d8f6497e2b4cfb2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44299c960128427cf464bd1d8f6497e2b4cfb2ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44299c960128427cf464bd1d8f6497e2b4cfb2ed/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "829dbae513bcc5b66f2665df71864314e2ffd4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829dbae513bcc5b66f2665df71864314e2ffd4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829dbae513bcc5b66f2665df71864314e2ffd4af"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5e491e9752f3042c4f94af93001180a98df3410a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44299c960128427cf464bd1d8f6497e2b4cfb2ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44299c960128427cf464bd1d8f6497e2b4cfb2ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44299c960128427cf464bd1d8f6497e2b4cfb2ed", "patch": "@@ -1,3 +1,10 @@\n+2008-09-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37328\n+\t* tree-sra.c (sra_build_assignment): Gimplify properly.\n+\t(generate_copy_inout): Take the correct stmt as definition,\n+\tremove bogus assert.\n+\n 2008-09-03  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.c (bfin_expand_prologue): Honour no_stack_limit"}, {"sha": "01f90844bd0d2b7bd3348779b725cdc679816c26", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44299c960128427cf464bd1d8f6497e2b4cfb2ed/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44299c960128427cf464bd1d8f6497e2b4cfb2ed/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=44299c960128427cf464bd1d8f6497e2b4cfb2ed", "patch": "@@ -2144,7 +2144,7 @@ static gimple_seq\n sra_build_assignment (tree dst, tree src)\n {\n   gimple stmt;\n-  gimple_seq seq = NULL;\n+  gimple_seq seq = NULL, seq2 = NULL;\n   /* Turning BIT_FIELD_REFs into bit operations enables other passes\n      to do a much better job at optimizing the code.\n      From dst = BIT_FIELD_REF <var, sz, off> we produce\n@@ -2308,6 +2308,8 @@ sra_build_assignment (tree dst, tree src)\n \t   && !useless_type_conversion_p (TREE_TYPE (dst), TREE_TYPE (src)))\n     src = fold_convert (TREE_TYPE (dst), src);\n \n+  src = force_gimple_operand (src, &seq2, false, NULL_TREE);\n+  gimple_seq_add_seq (&seq, seq2);\n   stmt = gimple_build_assign (dst, src);\n   gimple_seq_add_stmt (&seq, stmt);\n   return seq;\n@@ -2597,8 +2599,7 @@ generate_copy_inout (struct sra_elt *elt, bool copy_out, tree expr,\n \n       t = build2 (COMPLEX_EXPR, elt->type, r, i);\n       tmp_seq = sra_build_bf_assignment (expr, t);\n-      gcc_assert (gimple_seq_singleton_p (tmp_seq));\n-      SSA_NAME_DEF_STMT (expr) = gimple_seq_first_stmt (tmp_seq);\n+      SSA_NAME_DEF_STMT (expr) = gimple_seq_last_stmt (tmp_seq);\n       gimple_seq_add_seq (seq_p, tmp_seq);\n     }\n   else if (elt->replacement)"}]}