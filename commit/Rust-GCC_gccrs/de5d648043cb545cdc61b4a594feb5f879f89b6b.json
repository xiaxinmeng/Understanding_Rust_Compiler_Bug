{"sha": "de5d648043cb545cdc61b4a594feb5f879f89b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1ZDY0ODA0M2NiNTQ1Y2RjNjFiNGE1OTRmZWI1Zjg3OWY4OWI2Yg==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-04-20T17:31:24Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-04-21T17:54:43Z"}, "message": "Fix dg-ice handling in rust testsuite\n\nFix the pruning regex to also match ICE message and allow for dg-ice use.\nAdd the test from #382 as a sample example.\nShould help #308", "tree": {"sha": "c01dd30cd1c32171f0a8bc6c20d970aabb4d0804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c01dd30cd1c32171f0a8bc6c20d970aabb4d0804"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de5d648043cb545cdc61b4a594feb5f879f89b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5d648043cb545cdc61b4a594feb5f879f89b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5d648043cb545cdc61b4a594feb5f879f89b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5d648043cb545cdc61b4a594feb5f879f89b6b/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498758a1c238a539b364ac2c632742a9b64ab4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498758a1c238a539b364ac2c632742a9b64ab4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498758a1c238a539b364ac2c632742a9b64ab4a5"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "528380b3e7da01ddee76023855274b24fa4e020f", "filename": "gcc/testsuite/lib/rust.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5d648043cb545cdc61b4a594feb5f879f89b6b/gcc%2Ftestsuite%2Flib%2Frust.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5d648043cb545cdc61b4a594feb5f879f89b6b/gcc%2Ftestsuite%2Flib%2Frust.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust.exp?ref=de5d648043cb545cdc61b4a594feb5f879f89b6b", "patch": "@@ -181,7 +181,7 @@ proc rust_target_compile { source dest type options } {\n     ## FIXME: until the compiler is made less verbose, we need to prune its output almost completely.\n     # Only keep lines containing certain diagnostics so that we can check these.\n     global additional_prunes\n-    lappend additional_prunes \"^((?!(error: |warning: )).)*$\"\n+    lappend additional_prunes \"^((?!(error: |warning: |\\[Ii\\]nternal compiler error: )).)*$\"\n \n     return [target_compile $source $dest $type $options]\n }"}, {"sha": "632be9486ec4700c419b1df1054c98ee3053c5a4", "filename": "gcc/testsuite/rust.test/xfail_compile/unsafe.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5d648043cb545cdc61b4a594feb5f879f89b6b/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funsafe.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5d648043cb545cdc61b4a594feb5f879f89b6b/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funsafe.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funsafe.rs?ref=de5d648043cb545cdc61b4a594feb5f879f89b6b", "patch": "@@ -0,0 +1,4 @@\n+fn main() { // { dg-ice \"#382\" }\n+    unsafe {\n+    }\n+}"}]}