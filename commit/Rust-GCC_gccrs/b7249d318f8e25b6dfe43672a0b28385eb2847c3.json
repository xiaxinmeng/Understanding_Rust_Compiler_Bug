{"sha": "b7249d318f8e25b6dfe43672a0b28385eb2847c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcyNDlkMzE4ZjhlMjViNmRmZTQzNjcyYTBiMjgzODVlYjI4NDdjMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-07-24T11:03:30Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-07-24T11:03:30Z"}, "message": "target-supports.exp (check_effective_target_arm_nothumb): Also check for __arm__.\n\n* lib/target-supports.exp (check_effective_target_arm_nothumb):\nAlso check for __arm__.\n\nFrom-SVN: r212978", "tree": {"sha": "7d3f2ec25017662e20e5a2bef42687b3bf00968e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d3f2ec25017662e20e5a2bef42687b3bf00968e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7249d318f8e25b6dfe43672a0b28385eb2847c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7249d318f8e25b6dfe43672a0b28385eb2847c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7249d318f8e25b6dfe43672a0b28385eb2847c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7249d318f8e25b6dfe43672a0b28385eb2847c3/comments", "author": null, "committer": null, "parents": [{"sha": "8f454e9f8a19248cbbe33c039934494d67c1feaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f454e9f8a19248cbbe33c039934494d67c1feaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f454e9f8a19248cbbe33c039934494d67c1feaa"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "85df44fab80fcbf3564c6a74ab5e2b13466ba6f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7249d318f8e25b6dfe43672a0b28385eb2847c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7249d318f8e25b6dfe43672a0b28385eb2847c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7249d318f8e25b6dfe43672a0b28385eb2847c3", "patch": "@@ -1,3 +1,8 @@\n+2014-07-24  Andreas Schwab  <schwab@suse.de>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_nothumb):\n+\tAlso check for __arm__.\n+\n 2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* gcc.target/aarch64/test_frame_12.c: Match optimized instruction\n@@ -33,7 +38,7 @@\n 2014-07-23  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/bounds-2.c (fn4): Adjust to check the array size\n-\tin the structure. \n+\tin the structure.\n \n 2014-07-23  Jiong Wang  <jiong.wang@arm.com>\n "}, {"sha": "ade3cad1b90a3a2b816abe33e5e9a7dcbddf6e43", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7249d318f8e25b6dfe43672a0b28385eb2847c3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7249d318f8e25b6dfe43672a0b28385eb2847c3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=b7249d318f8e25b6dfe43672a0b28385eb2847c3", "patch": "@@ -2262,7 +2262,7 @@ proc check_effective_target_aarch64_little_endian { } {\n     }]\n }\n \n-# Return 1 is this is an arm target using 32-bit instructions\n+# Return 1 if this is an arm target using 32-bit instructions\n proc check_effective_target_arm32 { } {\n     return [check_no_compiler_messages arm32 assembly {\n \t#if !defined(__arm__) || (defined(__thumb__) && !defined(__thumb2__))\n@@ -2271,10 +2271,10 @@ proc check_effective_target_arm32 { } {\n     }]\n }\n \n-# Return 1 is this is an arm target not using Thumb\n+# Return 1 if this is an arm target not using Thumb\n proc check_effective_target_arm_nothumb { } {\n     return [check_no_compiler_messages arm_nothumb assembly {\n-\t#if (defined(__thumb__) || defined(__thumb2__))\n+\t#if !defined(__arm__) || (defined(__thumb__) || defined(__thumb2__))\n \t#error FOO\n \t#endif\n     }]"}]}