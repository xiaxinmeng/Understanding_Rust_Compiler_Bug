{"sha": "41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEzMDZjMGE4OWE1MzljOTdlOGVlZTA4Njc4MTZlYTNhZTVhYjViNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-08-21T14:47:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:47:32Z"}, "message": "[Ada] Spurious ambiguity error on call returning an access type\n\nIf F is a function with a single defaulted parameter that returns an\naccess_to_array type, then F (I) may designate either the return type or\nan indexing of the result of the call, after implicit dereferencing.  If\nthe component type C of the array type AR is accces AR this is ambiguous\nin a context whose expected type is C. If F is parameterless the call is\nnot ambiguous.\n\n2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Call): Resolve correctly a parameterless\n\tcall that returns an access type whose designated type is the\n\tcomponent type of an array, when the function has no defaulted\n\tparameters.\n\ngcc/testsuite/\n\n\t* gnat.dg/access5.adb, gnat.dg/access5.ads: New testcase.\n\nFrom-SVN: r263726", "tree": {"sha": "349efba350e47ed7e58a62f6175bfb4c3a63ae94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/349efba350e47ed7e58a62f6175bfb4c3a63ae94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "298e0c6bf77b2e218bd5f8a386ecfdd4e7c9ab52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298e0c6bf77b2e218bd5f8a386ecfdd4e7c9ab52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/298e0c6bf77b2e218bd5f8a386ecfdd4e7c9ab52"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "5ac14639231de32b2adf50141e364cb63345ffc0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "patch": "@@ -1,3 +1,10 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Resolve correctly a parameterless\n+\tcall that returns an access type whose designated type is the\n+\tcomponent type of an array, when the function has no defaulted\n+\tparameters.\n+\n 2018-08-21  Yannick Moy  <moy@adacore.com>\n \n \t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:"}, {"sha": "5a1a9f7d4e3515cefb01891621163d6503a54f77", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "patch": "@@ -6128,7 +6128,18 @@ package body Sem_Res is\n             Ret_Type   : constant Entity_Id := Etype (Nam);\n \n          begin\n-            if Is_Access_Type (Ret_Type)\n+            --  If this is a parameterless call there is no ambiguity\n+            --  and the call has the type of the function.\n+\n+            if No (First_Actual (N)) then\n+               Set_Etype (N, Etype (Nam));\n+               if Present (First_Formal (Nam)) then\n+                  Resolve_Actuals (N, Nam);\n+               end if;\n+               Build_Call_Marker (N);\n+\n+            elsif Is_Access_Type (Ret_Type)\n+\n               and then Ret_Type = Component_Type (Designated_Type (Ret_Type))\n             then\n                Error_Msg_N"}, {"sha": "eccca9b0349de9bec4b7b66aed1c8817358a0423", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/access5.adb, gnat.dg/access5.ads: New testcase.\n+\n 2018-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/rep_clause7.adb: New testcase."}, {"sha": "1369ea0c459f31c10d359901d41dcfe63e917430", "filename": "gcc/testsuite/gnat.dg/access5.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.adb?ref=41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Access5 is\n+  procedure Dummy is null;\n+end;"}, {"sha": "81ab3b34f1f233ec801da5337c10f236a629a53e", "filename": "gcc/testsuite/gnat.dg/access5.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41306c0a89a539c97e8eee0867816ea3ae5ab5b7/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess5.ads?ref=41306c0a89a539c97e8eee0867816ea3ae5ab5b7", "patch": "@@ -0,0 +1,10 @@\n+package Access5 is\n+  type Vec;\n+  type Ptr is access all Vec;\n+  type Vec is array (1..3) of Ptr;\n+  function F return Ptr;\n+  pragma Import (Ada, F);\n+  Tail : Vec := (F, F, F);\n+\n+  procedure Dummy;\n+end;"}]}