{"sha": "f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0ZTk3ODdlYTk4YTlhOGQ1OTZiZThjYTc4ZWI3NGE3ZjlmODYzYw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-09-18T08:32:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:32:42Z"}, "message": "[Ada] Code cleanup of alignment representation clauses in dispatch tables\n\nThis patch does not modify the functionality of the compiler; it avoids\ngenerating non-required alignment representation clauses for dispatch\ntables.\n\n2019-09-18  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_disp.adb (Make_DT, Make_Secondary_DT): Remove generation\n\tof alignment representation clause for the following tables:\n\tPredef_Prims, Iface_DT, TSD, ITable, DT.\n\nFrom-SVN: r275853", "tree": {"sha": "64b8c3b301d62bc57797317379c98fd37496d108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64b8c3b301d62bc57797317379c98fd37496d108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50a7395372ba8a082fc0514a16a3f381ec1e49e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a7395372ba8a082fc0514a16a3f381ec1e49e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a7395372ba8a082fc0514a16a3f381ec1e49e7"}], "stats": {"total": 105, "additions": 7, "deletions": 98}, "files": [{"sha": "dee361079c4548f87f3f6e8eb6538f5ad02b9501", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "patch": "@@ -1,3 +1,9 @@\n+2019-09-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT, Make_Secondary_DT): Remove generation\n+\tof alignment representation clause for the following tables:\n+\tPredef_Prims, Iface_DT, TSD, ITable, DT.\n+\n 2019-09-18  Steve Baird  <baird@adacore.com>\n \n \t* sem_eval.adb (Expr_Value): Do not fail \"the type of a null"}, {"sha": "84caa923d8e90d445e5ccc91db3d392a8eb9d824", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 98, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04e9787ea98a9a8d596be8ca78eb74a7f9f863c/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=f04e9787ea98a9a8d596be8ca78eb74a7f9f863c", "patch": "@@ -4041,7 +4041,6 @@ package body Exp_Disp is\n          --                     predef-prim-op-thunk-2'address,\n          --                     ...\n          --                     predef-prim-op-thunk-n'address);\n-         --   for Predef_Prims'Alignment use Address'Alignment\n \n          --  Create the thunks associated with the predefined primitives and\n          --  save their entity to fill the aggregate.\n@@ -4125,16 +4124,6 @@ package body Exp_Disp is\n                 Object_Definition   => New_Occurrence_Of\n                                          (Defining_Identifier (Decl), Loc),\n                 Expression => New_Node));\n-\n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (Predef_Prims, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n          end;\n \n          --  Generate\n@@ -4143,6 +4132,7 @@ package body Exp_Disp is\n          --          (OSD_Table => (1 => <value>,\n          --                           ...\n          --                         N => <value>));\n+         --   for OSD'Alignment use Address'Alignment;\n \n          --   Iface_DT : Dispatch_Table (Nb_Prims) :=\n          --               ([ Signature   => <sig-value> ],\n@@ -4154,7 +4144,6 @@ package body Exp_Disp is\n          --                                  prim-op-2'address,\n          --                                  ...\n          --                                  prim-op-n'address));\n-         --   for Iface_DT'Alignment use Address'Alignment;\n \n          --  Stage 3: Initialize the discriminant and the record components\n \n@@ -4454,17 +4443,6 @@ package body Exp_Disp is\n                Make_Aggregate (Loc,\n                  Expressions => DT_Aggr_List)));\n \n-         Append_To (Result,\n-           Make_Attribute_Definition_Clause (Loc,\n-             Name       => New_Occurrence_Of (Iface_DT, Loc),\n-             Chars      => Name_Alignment,\n-\n-             Expression =>\n-               Make_Attribute_Reference (Loc,\n-                 Prefix         =>\n-                   New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                 Attribute_Name => Name_Alignment)));\n-\n          if Exporting_Table then\n             Export_DT (Typ, Iface_DT, Suffix_Index);\n \n@@ -4946,7 +4924,6 @@ package body Exp_Disp is\n \n          --  Generate:\n          --    DT     : No_Dispatch_Table_Wrapper;\n-         --    for DT'Alignment use Address'Alignment;\n          --    DT_Ptr : Tag := !Tag (DT.NDT_Prims_Ptr'Address);\n \n          if not Has_DT (Typ) then\n@@ -4959,16 +4936,6 @@ package body Exp_Disp is\n                   New_Occurrence_Of\n                     (RTE (RE_No_Dispatch_Table_Wrapper), Loc)));\n \n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (DT, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n-\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => DT_Ptr,\n@@ -5008,7 +4975,6 @@ package body Exp_Disp is\n \n          --  Generate:\n          --    DT : Dispatch_Table_Wrapper (Nb_Prim);\n-         --    for DT'Alignment use Address'Alignment;\n          --    DT_Ptr : Tag := !Tag (DT.Prims_Ptr'Address);\n \n          else\n@@ -5036,16 +5002,6 @@ package body Exp_Disp is\n                       Make_Index_Or_Discriminant_Constraint (Loc,\n                         Constraints => DT_Constr_List))));\n \n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (DT, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n-\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => DT_Ptr,\n@@ -5161,7 +5117,6 @@ package body Exp_Disp is\n       --            Tags_Table         => (0 => null,\n       --                                   1 => Parent'Tag\n       --                                   ...);\n-      --   for TSD'Alignment use Address'Alignment\n \n       TSD_Aggr_List := New_List;\n \n@@ -5699,16 +5654,6 @@ package body Exp_Disp is\n                          Make_Integer_Literal (Loc, Num_Ifaces),\n                          Make_Aggregate (Loc, TSD_Ifaces_List)))));\n \n-               Append_To (Result,\n-                 Make_Attribute_Definition_Clause (Loc,\n-                   Name       => New_Occurrence_Of (ITable, Loc),\n-                   Chars      => Name_Alignment,\n-                   Expression =>\n-                     Make_Attribute_Reference (Loc,\n-                       Prefix         =>\n-                         New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                       Attribute_Name => Name_Alignment)));\n-\n                Iface_Table_Node :=\n                  Make_Attribute_Reference (Loc,\n                    Prefix         => New_Occurrence_Of (ITable, Loc),\n@@ -5859,16 +5804,6 @@ package body Exp_Disp is\n \n       Set_Is_True_Constant (TSD, Building_Static_DT (Typ));\n \n-      Append_To (Result,\n-        Make_Attribute_Definition_Clause (Loc,\n-          Name       => New_Occurrence_Of (TSD, Loc),\n-          Chars      => Name_Alignment,\n-          Expression =>\n-            Make_Attribute_Reference (Loc,\n-              Prefix         =>\n-                New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-              Attribute_Name => Name_Alignment)));\n-\n       --  Initialize or declare the dispatch table object\n \n       if not Has_DT (Typ) then\n@@ -5906,7 +5841,6 @@ package body Exp_Disp is\n          --   DT : aliased constant No_Dispatch_Table :=\n          --          (NDT_TSD       => TSD'Address;\n          --           NDT_Prims_Ptr => 0);\n-         --   for DT'Alignment use Address'Alignment;\n \n          else\n             Append_To (Result,\n@@ -5918,16 +5852,6 @@ package body Exp_Disp is\n                   New_Occurrence_Of (RTE (RE_No_Dispatch_Table_Wrapper), Loc),\n                 Expression          => Make_Aggregate (Loc, DT_Aggr_List)));\n \n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (DT, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n-\n             Export_DT (Typ, DT);\n          end if;\n \n@@ -5940,7 +5864,6 @@ package body Exp_Disp is\n       --                     predef-prim-op-2'address,\n       --                     ...\n       --                     predef-prim-op-n'address);\n-      --   for Predef_Prims'Alignment use Address'Alignment\n \n       --   DT : Dispatch_Table (Nb_Prims) :=\n       --          (Signature => <sig-value>,\n@@ -6025,16 +5948,6 @@ package body Exp_Disp is\n             --  Remember aggregates initializing dispatch tables\n \n             Append_Elmt (New_Node, DT_Aggr);\n-\n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (Predef_Prims, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n          end;\n \n          --  Stage 1: Initialize the discriminant and the record components\n@@ -6221,16 +6134,6 @@ package body Exp_Disp is\n                                       Constraints => DT_Constr_List)),\n                 Expression          => Make_Aggregate (Loc, DT_Aggr_List)));\n \n-            Append_To (Result,\n-              Make_Attribute_Definition_Clause (Loc,\n-                Name       => New_Occurrence_Of (DT, Loc),\n-                Chars      => Name_Alignment,\n-                Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         =>\n-                      New_Occurrence_Of (RTE (RE_Integer_Address), Loc),\n-                    Attribute_Name => Name_Alignment)));\n-\n             Export_DT (Typ, DT);\n          end if;\n       end if;"}]}