{"sha": "0ac2a8ee7a7281c50655d815cc06d0b5a583b43f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFjMmE4ZWU3YTcyODFjNTA2NTVkODE1Y2MwNmQwYjVhNTgzYjQzZg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-04-29T02:16:48Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-04-29T02:16:48Z"}, "message": "(INCLUDES): Move definition to same place as parent makefile.\n\n(ALLOCA): Define.\n(OLDAR_FLAGS): Delete.\n(OLDCC): Define.\n(CLIB): Define.\n(SUBDIR_USE_ALLOCA): Don't use ALLOCA if compiling with gcc.\n\nFrom-SVN: r7178", "tree": {"sha": "aa5b1fbce93e6bce630afa9d355c4739b24fb7ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa5b1fbce93e6bce630afa9d355c4739b24fb7ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f/comments", "author": null, "committer": null, "parents": [{"sha": "187ce4326e2715159b92a18220e3c2482ed423e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187ce4326e2715159b92a18220e3c2482ed423e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187ce4326e2715159b92a18220e3c2482ed423e7"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "b2e8bbf7f4db590c3ebedaaf50b4c30fa37c2518", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac2a8ee7a7281c50655d815cc06d0b5a583b43f/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=0ac2a8ee7a7281c50655d815cc06d0b5a583b43f", "patch": "@@ -36,7 +36,7 @@\n # Variables that exist for you to override.\n # See below for how to change them for certain systems.\n \n-INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config\n+ALLOCA =\n \n # Various ways of specifying flags for compilations:  \n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n@@ -59,7 +59,6 @@ BISONFLAGS =\n LEX = flex\n LEXFLAGS =\n AR = ar\n-OLDAR_FLAGS = qc\n AR_FLAGS = rc\n SHELL = /bin/sh\n MAKEINFO = makeinfo\n@@ -70,6 +69,10 @@ TEXI2DVI = texi2dvi\n # to compile all the gen* files first by hand to avoid erroneous results.\n P =\n \n+# This is used in the definition of SUBDIR_USE_ALLOCA.\n+# ??? Perhaps it would be better if it just looked for *gcc*.\n+OLDCC = cc\n+\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n@@ -88,6 +91,9 @@ tmake_file= ... `configure' substitutes actual t- file name here.\n # Directory where sources are, from where we are.\n srcdir = .\n \n+# Additional system libraries to link with.\n+CLIB=\n+\n # Change this to a null string if obstacks are installed in the\n # system library.\n OBSTACK=obstack.o\n@@ -123,14 +129,22 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n # Likewise.\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n+# Even if ALLOCA is set, don't use it if compiling with GCC.\n+\n SUBDIR_OBSTACK = `if [ x$(OBSTACK) != x ]; then echo ../$(OBSTACK); else true; fi`\n-SUBDIR_USE_ALLOCA = `if [ x$(USE_ALLOCA) != x ]; then echo ../$(USE_ALLOCA); else true; fi`\n+SUBDIR_USE_ALLOCA = `case \"${CC}\" in \"${OLDCC}\") if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi ;; esac`\n SUBDIR_MALLOC = `if [ x$(MALLOC) != x ]; then echo ../$(MALLOC); else true; fi`\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n LIBS = $(SUBDIR_OBSTACK) $(SUBDIR_USE_ALLOCA) $(SUBDIR_MALLOC) $(CLIB)\n \n+# Specify the directories to be searched for header files.\n+# Both . and srcdir are used, in that order,\n+# so that tm.h and config.h will be found in the compilation\n+# subdirectory rather than in the source directory.\n+INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config\n+\n # Always use -I$(srcdir)/config when compiling.\n .c.o:\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}]}