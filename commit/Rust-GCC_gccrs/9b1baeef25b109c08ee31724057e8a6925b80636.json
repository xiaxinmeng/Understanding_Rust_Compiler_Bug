{"sha": "9b1baeef25b109c08ee31724057e8a6925b80636", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxYmFlZWYyNWIxMDljMDhlZTMxNzI0MDU3ZThhNjkyNWI4MDYzNg==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2012-12-07T21:26:20Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2012-12-07T21:26:20Z"}, "message": "discr38.adb: Don't use ^M line endings.\n\n2012-12-07  Mike Stump  <mikestump@comcast.net>\n\n\t    * gnat.dg/discr38.adb: Don't use ^M line endings.\n\t    gnat.dg/loop_optimization13.adb: Likewise.\n\t    gnat.dg/loop_optimization13.ads: Likewise.\n\t    gnat.dg/discr36_pkg.adb: Likewise.\n\t    gnat.dg/discr36_pkg.ads: Likewise.\n\t    gnat.dg/loop_optimization11_pkg.ads: Likewise.\n\t    gnat.dg/discr36.ads: Likewise.\n\t    gnat.dg/loop_optimization11.adb: Likewise.\n\nFrom-SVN: r194309", "tree": {"sha": "06387fd645e0c2dcf47832a941a2ecc2e3c984a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06387fd645e0c2dcf47832a941a2ecc2e3c984a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b1baeef25b109c08ee31724057e8a6925b80636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1baeef25b109c08ee31724057e8a6925b80636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b1baeef25b109c08ee31724057e8a6925b80636", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1baeef25b109c08ee31724057e8a6925b80636/comments", "author": null, "committer": null, "parents": [{"sha": "9011b0f6b7523f9b9d24c5e93ec7d1d08abeb8ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9011b0f6b7523f9b9d24c5e93ec7d1d08abeb8ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9011b0f6b7523f9b9d24c5e93ec7d1d08abeb8ae"}], "stats": {"total": 285, "additions": 148, "deletions": 137}, "files": [{"sha": "6958948bb710e632e3cbe1a45a2337a4a3cee8a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,3 +1,14 @@\n+2012-12-07  Mike Stump  <mikestump@comcast.net>\n+\n+\t* gnat.dg/discr38.adb: Don't use ^M line endings.\n+\tgnat.dg/loop_optimization13.adb: Likewise.\n+\tgnat.dg/loop_optimization13.ads: Likewise.\n+\tgnat.dg/discr36_pkg.adb: Likewise.\n+\tgnat.dg/discr36_pkg.ads: Likewise.\n+\tgnat.dg/loop_optimization11_pkg.ads: Likewise.\n+\tgnat.dg/discr36.ads: Likewise.\n+\tgnat.dg/loop_optimization11.adb: Likewise.\n+\n 2012-12-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55141"}, {"sha": "586a9740dce362151961627601805f07b42fded8", "filename": "gcc/testsuite/gnat.dg/discr36.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36.ads?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,12 +1,12 @@\n-package Discr36 is\r\n-\r\n-  type R (D : Boolean := True) is record\r\n-    case D is\r\n-      when True  => I : Integer;\r\n-      when False => null;\r\n-    end case;\r\n-  end record;\r\n-\r\n-  function N return Natural;\r\n-\r\n-end Discr36;\r\n+package Discr36 is\n+\n+  type R (D : Boolean := True) is record\n+    case D is\n+      when True  => I : Integer;\n+      when False => null;\n+    end case;\n+  end record;\n+\n+  function N return Natural;\n+\n+end Discr36;"}, {"sha": "82f6f621ac65e537453bd22a3b011aaf5064d6cc", "filename": "gcc/testsuite/gnat.dg/discr36_pkg.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.adb?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,10 +1,10 @@\n-package body Discr36_Pkg is\r\n-\r\n-  function Func return T is\r\n-    Ret : T;\r\n-    pragma Warnings (Off, Ret);\r\n-  begin\r\n-    return Ret;\r\n-  end;\r\n-\r\n-end Discr36_Pkg;\r\n+package body Discr36_Pkg is\n+\n+  function Func return T is\n+    Ret : T;\n+    pragma Warnings (Off, Ret);\n+  begin\n+    return Ret;\n+  end;\n+\n+end Discr36_Pkg;"}, {"sha": "8d0adfc20e33358da34d3c9cf082b541f922868e", "filename": "gcc/testsuite/gnat.dg/discr36_pkg.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr36_pkg.ads?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,7 +1,7 @@\n-package Discr36_Pkg is\r\n-\r\n-  generic\r\n-    type T is private;\r\n-  function Func return T;\r\n-\r\n-end Discr36_Pkg;\r\n+package Discr36_Pkg is\n+\n+  generic\n+    type T is private;\n+  function Func return T;\n+\n+end Discr36_Pkg;"}, {"sha": "948493f74be62b91a024eec4e3f41e4903925843", "filename": "gcc/testsuite/gnat.dg/discr38.adb", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,40 +1,40 @@\n--- { dg-do compile }\r\n-\r\n-procedure Discr38 is\r\n-\r\n-   type Enum is (OK,\r\n-                 NOT_CONNECTED,\r\n-                 DISCONNECTED,\r\n-                 REQUEST_Q_EMPTY,\r\n-                 SERVER_UNAVAILABLE,\r\n-                 BUFFER_TOO_SMALL,\r\n-                 NO_FREE_SLOT,\r\n-                 RAISE_EXCEPTION,\r\n-                 REQUEST_CANCELLED,\r\n-                 REQUEST_IN_PROGRESS,\r\n-                 SERVER_BUSY,\r\n-                 BLOCK_ACKNOWLEDGE);\r\n-\r\n-   type R (Status : Enum := OK) is record\r\n-      Status_Block : Integer;\r\n-      case Status is\r\n-      when RAISE_EXCEPTION =>\r\n-         I : Integer;\r\n-      when OK =>\r\n-         Length : Natural;\r\n-         Data   : Integer;\r\n-      when others =>\r\n-         null;\r\n-      end case;\r\n-   end record;\r\n-   for R use record\r\n-      Status        at  0 range 0 .. 7;\r\n-      Status_Block  at  4 range 0 .. 31;\r\n-      Length        at  8 range 0 .. 31;\r\n-   end record;\r\n-\r\n-   Nil : constant R := (OK, 1, 0, 1);\r\n-\r\n-begin\r\n-   null;\r\n-end;\r\n+-- { dg-do compile }\n+\n+procedure Discr38 is\n+\n+   type Enum is (OK,\n+                 NOT_CONNECTED,\n+                 DISCONNECTED,\n+                 REQUEST_Q_EMPTY,\n+                 SERVER_UNAVAILABLE,\n+                 BUFFER_TOO_SMALL,\n+                 NO_FREE_SLOT,\n+                 RAISE_EXCEPTION,\n+                 REQUEST_CANCELLED,\n+                 REQUEST_IN_PROGRESS,\n+                 SERVER_BUSY,\n+                 BLOCK_ACKNOWLEDGE);\n+\n+   type R (Status : Enum := OK) is record\n+      Status_Block : Integer;\n+      case Status is\n+      when RAISE_EXCEPTION =>\n+         I : Integer;\n+      when OK =>\n+         Length : Natural;\n+         Data   : Integer;\n+      when others =>\n+         null;\n+      end case;\n+   end record;\n+   for R use record\n+      Status        at  0 range 0 .. 7;\n+      Status_Block  at  4 range 0 .. 31;\n+      Length        at  8 range 0 .. 31;\n+   end record;\n+\n+   Nil : constant R := (OK, 1, 0, 1);\n+\n+begin\n+   null;\n+end;"}, {"sha": "435d466a9c485094fadea6167f90163fa3b88e71", "filename": "gcc/testsuite/gnat.dg/loop_optimization11.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,19 +1,19 @@\n--- { dg-do compile }\r\n--- { dg-options \"-O\" }\r\n-\r\n-with Loop_Optimization11_Pkg; use Loop_Optimization11_Pkg;\r\n-\r\n-procedure Loop_Optimization11 is\r\n-   Arr : array (Prot, Mem) of Integer := (others => (others => 0));\r\n-begin\r\n-   Put_Line (Img (0) & \" \");\r\n-   for I in Arr'Range (1) loop\r\n-      for J in Arr'Range (2) loop\r\n-         declare\r\n-            Elem : Integer renames Arr (I, J);\r\n-         begin\r\n-            Put_Line (Img (Elem));\r\n-         end;\r\n-      end loop;\r\n-   end loop;\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+with Loop_Optimization11_Pkg; use Loop_Optimization11_Pkg;\n+\n+procedure Loop_Optimization11 is\n+   Arr : array (Prot, Mem) of Integer := (others => (others => 0));\n+begin\n+   Put_Line (Img (0) & \" \");\n+   for I in Arr'Range (1) loop\n+      for J in Arr'Range (2) loop\n+         declare\n+            Elem : Integer renames Arr (I, J);\n+         begin\n+            Put_Line (Img (Elem));\n+         end;\n+      end loop;\n+   end loop;\n+end;"}, {"sha": "21dfde3807b2f33ffd97fc5464adeb22a50aaacc", "filename": "gcc/testsuite/gnat.dg/loop_optimization11_pkg.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,11 +1,11 @@\n-package Loop_Optimization11_Pkg is\r\n-\r\n-   function Img (X : Integer) return String;\r\n-\r\n-   procedure Put_Line (Data : String);\r\n-\r\n-   type Prot is (Execute, Execute_Read, Execute_Read_Write);\r\n-\r\n-   type Mem is (Mem_Image, Mem_Mapped, Mem_Private, Unknown);\r\n-\r\n-end Loop_Optimization11_Pkg;\r\n+package Loop_Optimization11_Pkg is\n+\n+   function Img (X : Integer) return String;\n+\n+   procedure Put_Line (Data : String);\n+\n+   type Prot is (Execute, Execute_Read, Execute_Read_Write);\n+\n+   type Mem is (Mem_Image, Mem_Mapped, Mem_Private, Unknown);\n+\n+end Loop_Optimization11_Pkg;"}, {"sha": "7000172e90b2b962a55ef4cf25d63b75af15fc1a", "filename": "gcc/testsuite/gnat.dg/loop_optimization13.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.adb?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,21 +1,21 @@\n--- { dg-do compile }\r\n--- { dg-options \"-O\" }\r\n-\r\n-with Loop_Optimization13_Pkg; use Loop_Optimization13_Pkg;\r\n-\r\n-package body Loop_Optimization13 is\r\n-\r\n-   function F (A : Rec) return Rec is\r\n-      N : constant Integer := A.V'Length / L;\r\n-      Res : Rec\r\n-        := (True, new Complex_Vector' (0 .. A.V'Length / L - 1 => (0.0, 0.0)));\r\n-   begin\r\n-      for I in 0 .. L - 1 loop\r\n-         for J in 0 .. N - 1 loop\r\n-            Res.V (J) := Res.V (J) + A.V (I * N + J);\r\n-         end loop;\r\n-      end loop;\r\n-      return Res;\r\n-   end;\r\n-\r\n-end Loop_Optimization13;\r\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+with Loop_Optimization13_Pkg; use Loop_Optimization13_Pkg;\n+\n+package body Loop_Optimization13 is\n+\n+   function F (A : Rec) return Rec is\n+      N : constant Integer := A.V'Length / L;\n+      Res : Rec\n+        := (True, new Complex_Vector' (0 .. A.V'Length / L - 1 => (0.0, 0.0)));\n+   begin\n+      for I in 0 .. L - 1 loop\n+         for J in 0 .. N - 1 loop\n+            Res.V (J) := Res.V (J) + A.V (I * N + J);\n+         end loop;\n+      end loop;\n+      return Res;\n+   end;\n+\n+end Loop_Optimization13;"}, {"sha": "327dcaedcb24d8f7ba7c53c53e2195bbb44f18e2", "filename": "gcc/testsuite/gnat.dg/loop_optimization13.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1baeef25b109c08ee31724057e8a6925b80636/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization13.ads?ref=9b1baeef25b109c08ee31724057e8a6925b80636", "patch": "@@ -1,17 +1,17 @@\n-with Ada.Numerics.Complex_Types; use Ada.Numerics.Complex_Types;\r\n-\r\n-package Loop_Optimization13 is\r\n-\r\n-   type Complex_Vector is array (Integer range <>) of Complex;\r\n-   type Complex_Vector_Ptr is access Complex_Vector;\r\n-\r\n-   type Rec (Kind : Boolean := False) is record\r\n-      case Kind is\r\n-         when True => V : Complex_Vector_Ptr;\r\n-         when False => null;\r\n-      end case;\r\n-   end record;\r\n-\r\n-   function F (A : Rec) return Rec;\r\n-\r\n-end Loop_Optimization13;\r\n+with Ada.Numerics.Complex_Types; use Ada.Numerics.Complex_Types;\n+\n+package Loop_Optimization13 is\n+\n+   type Complex_Vector is array (Integer range <>) of Complex;\n+   type Complex_Vector_Ptr is access Complex_Vector;\n+\n+   type Rec (Kind : Boolean := False) is record\n+      case Kind is\n+         when True => V : Complex_Vector_Ptr;\n+         when False => null;\n+      end case;\n+   end record;\n+\n+   function F (A : Rec) return Rec;\n+\n+end Loop_Optimization13;"}]}