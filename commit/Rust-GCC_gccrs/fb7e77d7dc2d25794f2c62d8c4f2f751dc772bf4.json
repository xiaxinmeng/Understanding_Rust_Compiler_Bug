{"sha": "fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI3ZTc3ZDdkYzJkMjU3OTRmMmM2MmQ4YzRmMmY3NTFkYzc3MmJmNA==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2001-07-09T20:21:48Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2001-07-09T20:21:48Z"}, "message": "expr.h: Adjust prototypes for have_add2_insn, have_sub2_insn.\n\n2001-07-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* expr.h: Adjust prototypes for have_add2_insn, have_sub2_insn.\n\t* optabs.c (have_add2_insn): Check whether the add insn chosen\n\treally accepts the operands.  (have_sub2_insn): Ditto for sub insn.\n\t* reload1.c (reload_cse_move2add): Adjust calls of have_add2_insn.\n\nFrom-SVN: r43874", "tree": {"sha": "f132186c449f146f89d29ae60d9f337ae0f18f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f132186c449f146f89d29ae60d9f337ae0f18f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/comments", "author": null, "committer": null, "parents": [{"sha": "44cec3004a3519037c88ae0d464f9790ac998053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44cec3004a3519037c88ae0d464f9790ac998053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44cec3004a3519037c88ae0d464f9790ac998053"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "12165fad5cebeb5d6f9b046fce7484af66a1d172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "patch": "@@ -1,3 +1,11 @@\n+2001-07-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* expr.h: Adjust prototypes for have_add2_insn, have_sub2_insn.\n+\t* optabs.c (have_add2_insn): Check whether the add insn chosen\n+\treally accepts the operands.  (have_sub2_insn): Ditto for sub insn.\n+\t* reload1.c (reload_cse_move2add): Adjust calls of have_add2_insn.\n+\n+*************** extern rtx gen_add2_insn PARAMS ((rtx, r\n Mon Jul  9 13:26:40 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (OBJS): Add ssa-ccp.o"}, {"sha": "cf2cb268ef350f8cc418d45573cc7fa798f4cebb", "filename": "gcc/expr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "patch": "@@ -841,8 +841,8 @@ int can_conditionally_move_p PARAMS ((enum machine_mode mode));\n extern rtx gen_add2_insn PARAMS ((rtx, rtx));\n extern rtx gen_sub2_insn PARAMS ((rtx, rtx));\n extern rtx gen_move_insn PARAMS ((rtx, rtx));\n-extern int have_add2_insn PARAMS ((enum machine_mode));\n-extern int have_sub2_insn PARAMS ((enum machine_mode));\n+extern int have_add2_insn PARAMS ((rtx, rtx));\n+extern int have_sub2_insn PARAMS ((rtx, rtx));\n \n /* Return the INSN_CODE to use for an extend operation.  */\n extern enum insn_code can_extend_p PARAMS ((enum machine_mode,"}, {"sha": "57c87fad16d19132a72b47d02e8b21dfb2c8589e", "filename": "gcc/optabs.c", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "patch": "@@ -3765,10 +3765,28 @@ gen_add2_insn (x, y)\n }\n \n int\n-have_add2_insn (mode)\n-     enum machine_mode mode;\n+have_add2_insn (x, y)\n+     rtx x, y;\n {\n-  return add_optab->handlers[(int) mode].insn_code != CODE_FOR_nothing;\n+  int icode;\n+\n+  if (GET_MODE (x) == VOIDmode)\n+    abort ();\n+\n+  icode = (int) add_optab->handlers[(int) GET_MODE (x)].insn_code; \n+\n+  if (icode == CODE_FOR_nothing)\n+    return 0;\n+\n+  if (! ((*insn_data[icode].operand[0].predicate)\n+\t (x, insn_data[icode].operand[0].mode))\n+      || ! ((*insn_data[icode].operand[1].predicate)\n+\t    (x, insn_data[icode].operand[1].mode))\n+      || ! ((*insn_data[icode].operand[2].predicate)\n+\t    (y, insn_data[icode].operand[2].mode)))\n+    return 0;\n+\n+  return 1;\n }\n \n /* Generate and return an insn body to subtract Y from X.  */\n@@ -3791,10 +3809,28 @@ gen_sub2_insn (x, y)\n }\n \n int\n-have_sub2_insn (mode)\n-     enum machine_mode mode;\n+have_sub2_insn (x, y)\n+     rtx x, y;\n {\n-  return sub_optab->handlers[(int) mode].insn_code != CODE_FOR_nothing;\n+  int icode;\n+\n+  if (GET_MODE (x) == VOIDmode)\n+    abort ();\n+\n+  icode = (int) sub_optab->handlers[(int) GET_MODE (x)].insn_code; \n+\n+  if (icode == CODE_FOR_nothing)\n+    return 0;\n+\n+  if (! ((*insn_data[icode].operand[0].predicate)\n+\t (x, insn_data[icode].operand[0].mode))\n+      || ! ((*insn_data[icode].operand[1].predicate)\n+\t    (x, insn_data[icode].operand[1].mode))\n+      || ! ((*insn_data[icode].operand[2].predicate)\n+\t    (y, insn_data[icode].operand[2].mode)))\n+    return 0;\n+\n+  return 1;\n }\n \n /* Generate the body of an instruction to copy Y into X."}, {"sha": "c6a5c238548e43c4d3e77e54236b8849cdcdc319", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=fb7e77d7dc2d25794f2c62d8c4f2f751dc772bf4", "patch": "@@ -9161,7 +9161,7 @@ reload_cse_move2add (first)\n \t\t  if (new_src == const0_rtx)\n \t\t    success = validate_change (insn, &SET_SRC (pat), reg, 0);\n \t\t  else if (rtx_cost (new_src, PLUS) < rtx_cost (src, SET)\n-\t\t\t   && have_add2_insn (GET_MODE (reg)))\n+\t\t\t   && have_add2_insn (reg, new_src))\n \t\t    success = validate_change (insn, &PATTERN (insn),\n \t\t\t\t\t       gen_add2_insn (reg, new_src), 0);\n \t\t  reg_set_luid[regno] = move2add_luid;\n@@ -9212,7 +9212,7 @@ reload_cse_move2add (first)\n \t\t\t  = validate_change (next, &SET_SRC (set), reg, 0);\n \t\t      else if ((rtx_cost (new_src, PLUS)\n \t\t\t\t< COSTS_N_INSNS (1) + rtx_cost (src3, SET))\n-\t\t\t       && have_add2_insn (GET_MODE (reg)))\n+\t\t\t       && have_add2_insn (reg, new_src))\n \t\t\tsuccess\n \t\t\t  = validate_change (next, &PATTERN (next),\n \t\t\t\t\t     gen_add2_insn (reg, new_src), 0);"}]}