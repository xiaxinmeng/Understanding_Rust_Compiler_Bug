{"sha": "d3568529c79953043c49af2e0ab7171f05955769", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1Njg1MjljNzk5NTMwNDNjNDlhZjJlMGFiNzE3MWYwNTk1NTc2OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-06-23T23:19:54Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-06-23T23:19:54Z"}, "message": "(TREE_SYMBOL_REFERENCED): New macro.\n\nFrom-SVN: r7549", "tree": {"sha": "752cbc6dfd8de9005cde9bc808eed7b20e2e141d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/752cbc6dfd8de9005cde9bc808eed7b20e2e141d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3568529c79953043c49af2e0ab7171f05955769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3568529c79953043c49af2e0ab7171f05955769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3568529c79953043c49af2e0ab7171f05955769", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3568529c79953043c49af2e0ab7171f05955769/comments", "author": null, "committer": null, "parents": [{"sha": "425c176f742d2629288b9f3211310cf3f806d051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425c176f742d2629288b9f3211310cf3f806d051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425c176f742d2629288b9f3211310cf3f806d051"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "616dedf65eb511d1e2234a8732c7880bf3f2c229", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3568529c79953043c49af2e0ab7171f05955769/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3568529c79953043c49af2e0ab7171f05955769/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d3568529c79953043c49af2e0ab7171f05955769", "patch": "@@ -269,6 +269,10 @@ struct tree_common\n    requires a diagnostic when overflows occur in constant expressions.  */\n #define TREE_CONSTANT_OVERFLOW(NODE) ((NODE)->common.static_flag)\n \n+/* In an IDENTIFIER_NODE, this means that assemble_name was called with\n+   this string as an argument.  */\n+#define TREE_SYMBOL_REFERENCED(NODE) ((NODE)->common.static_flag)\n+\n /* In an INTEGER_CST, REAL_CST, of COMPLEX_CST, this means there was an\n    overflow in folding, and no warning has been issued for this subexpression.\n    TREE_OVERFLOW implies TREE_CONSTANT_OVERFLOW, but not vice versa.  */"}]}