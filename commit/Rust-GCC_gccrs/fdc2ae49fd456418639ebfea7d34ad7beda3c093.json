{"sha": "fdc2ae49fd456418639ebfea7d34ad7beda3c093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjMmFlNDlmZDQ1NjQxODYzOWViZmVhN2QzNGFkN2JlZGEzYzA5Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-12-25T07:28:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-12-25T07:28:01Z"}, "message": "pt.c (check_default_tmpl_args): Uses the parameter source location in the diagnostic.\n\n\t* pt.c (check_default_tmpl_args): Uses the parameter source\n\tlocation in the diagnostic.\n\t(convert_template_argument): Just return if parm is error_mark_node.\n\nFrom-SVN: r219067", "tree": {"sha": "dca5cf6b66e075778a790f779f7d532c0c4b6b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dca5cf6b66e075778a790f779f7d532c0c4b6b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdc2ae49fd456418639ebfea7d34ad7beda3c093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc2ae49fd456418639ebfea7d34ad7beda3c093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc2ae49fd456418639ebfea7d34ad7beda3c093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc2ae49fd456418639ebfea7d34ad7beda3c093/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17e87c1ca5476117c64c69a9777226af70dd4394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e87c1ca5476117c64c69a9777226af70dd4394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e87c1ca5476117c64c69a9777226af70dd4394"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "bd5dd4955956295c27a02272bd751e7075092ed3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -1,5 +1,9 @@\n 2014-12-25  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (check_default_tmpl_args): Uses the parameter source\n+\tlocation in the diagnostic.\n+\t(convert_template_argument): Just return if parm is error_mark_node.\n+\n \tPR c++/63522\n \t* parser.c (cp_parser_type_parameter): Call\n \tcheck_for_bare_parameter_packs on default argument."}, {"sha": "21d0d3aa4e9cd78f90158c4001abea745030a8ae", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -4578,13 +4578,8 @@ check_default_tmpl_args (tree decl, tree parms, bool is_primary,\n \t\t     parameter pack, at the end of the template\n \t\t     parameter list.  */\n \n-\t\t  if (TREE_CODE (TREE_VALUE (parm)) == PARM_DECL)\n-\t\t    error (\"parameter pack %qE must be at the end of the\"\n-\t\t\t   \" template parameter list\", TREE_VALUE (parm));\n-\t\t  else\n-\t\t    error (\"parameter pack %qT must be at the end of the\"\n-\t\t\t   \" template parameter list\", \n-\t\t\t   TREE_TYPE (TREE_VALUE (parm)));\n+\t\t  error (\"parameter pack %q+D must be at the end of the\"\n+\t\t\t \" template parameter list\", TREE_VALUE (parm));\n \n \t\t  TREE_VALUE (TREE_VEC_ELT (inner_parms, i)) \n \t\t    = error_mark_node;\n@@ -6524,6 +6519,9 @@ convert_template_argument (tree parm,\n   tree val;\n   int is_type, requires_type, is_tmpl_type, requires_tmpl_type;\n \n+  if (parm == error_mark_node)\n+    return error_mark_node;\n+\n   if (TREE_CODE (arg) == TREE_LIST\n       && TREE_CODE (TREE_VALUE (arg)) == OFFSET_REF)\n     {"}, {"sha": "2048077c36a6144fe3bf2d9defc99a4514fe6b93", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31432.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31432.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31432.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31432.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -4,5 +4,5 @@ template<typename..., typename> struct A // { dg-error \"parameter pack\" }\n  static int i;\n };\n \n-A<int, int> a; // { dg-error \"mismatch|expected|invalid type\" }\n-A<char,int> b; // { dg-error \"mismatch|expected|invalid type\" }\n+A<int, int> a;\n+A<char,int> b;"}, {"sha": "b4c737c603c86b4fb7cc716be72015fe757aa8b1", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31442.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31442.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31442.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31442.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -6,4 +6,4 @@ struct B\n   template <template <typename...> class C> B(C<int>);\n };\n \n-B b = A<int>(); // { dg-error \"mismatch|expected\" }\n+B b = A<int>();"}, {"sha": "fafa4eed313a4bdbf9e8ddb0339601b3ba1b8443", "filename": "gcc/testsuite/g++.dg/cpp0x/pr32115.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32115.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32115.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32115.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -1,4 +1,4 @@\n // { dg-do compile { target c++11 } }\n template<typename ...T, int = 0> struct A {}; // { dg-error \"end of\" }\n \n-A<int> a; // { dg-error \"mismatch|expected|invalid\" }\n+A<int> a;"}, {"sha": "e62d62cc1b6442f3a9e52294a37f8f1515daa461", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic40.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic40.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -1,3 +1,3 @@\n // { dg-do compile { target c++11 } }\n-template<typename... Values, typename T>\n-struct backward_tuple {}; // { dg-error \"end\" }\n+template<typename... Values, typename T> // { dg-error \"end\" }\n+struct backward_tuple {};"}, {"sha": "9b80fd125da17b4846ab56756f3bbc862ae79a0f", "filename": "gcc/testsuite/g++.dg/template/crash55.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash55.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -3,4 +3,4 @@\n template<typename class T, T = T()> // { dg-error \"nested-name-specifier|two or more|valid type\" }\n struct A {};\n \n-template<int> void foo(A<int>);     // { dg-error \"mismatch|constant|template argument\" }\n+template<int> void foo(A<int>);\t// { dg-error \"cast|argument\" \"\" { target c++98_only } }"}, {"sha": "ad05e6aceb16f2ae6b65e49f3d71fe32dcbc43e8", "filename": "gcc/testsuite/g++.dg/template/crash57.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc2ae49fd456418639ebfea7d34ad7beda3c093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash57.C?ref=fdc2ae49fd456418639ebfea7d34ad7beda3c093", "patch": "@@ -7,4 +7,4 @@ template<typename> struct B\n     template<int(> struct C;    // { dg-error \"token\" }\n };\n \n-A<char> a;                      // { dg-error \"type/value mismatch|constant|declaration\" }\n+A<char> a;"}]}