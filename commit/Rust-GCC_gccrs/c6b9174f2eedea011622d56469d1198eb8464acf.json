{"sha": "c6b9174f2eedea011622d56469d1198eb8464acf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiOTE3NGYyZWVkZWEwMTE2MjJkNTY0NjlkMTE5OGViODQ2NGFjZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-02-27T17:44:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-02-27T17:44:41Z"}, "message": "Set the default 32bit/64bit archs if needed.\n\n2010-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config.gcc: Set the default 32bit/64bit archs if 64bit ISA is\n\trequired and i[34567]86-*-* targets don't support 64bit ISA.\n\nFrom-SVN: r157110", "tree": {"sha": "7cf4abb182df775f42a56541b3d0cd53002d03b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cf4abb182df775f42a56541b3d0cd53002d03b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b9174f2eedea011622d56469d1198eb8464acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b9174f2eedea011622d56469d1198eb8464acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b9174f2eedea011622d56469d1198eb8464acf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b9174f2eedea011622d56469d1198eb8464acf/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cea2d589bd22a51d35f5c138fd847a58f9e15e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea2d589bd22a51d35f5c138fd847a58f9e15e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea2d589bd22a51d35f5c138fd847a58f9e15e9a"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "f6cdb86c94628003c4c75a5d17821f1a7a30854f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9174f2eedea011622d56469d1198eb8464acf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9174f2eedea011622d56469d1198eb8464acf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6b9174f2eedea011622d56469d1198eb8464acf", "patch": "@@ -1,3 +1,8 @@\n+2010-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config.gcc: Set the default 32bit/64bit archs if 64bit ISA is\n+\trequired and i[34567]86-*-* targets don't support 64bit ISA.\n+\n 2010-02-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/43096"}, {"sha": "0d4687873e310b6320c807ebeb6727a2d486c498", "filename": "gcc/config.gcc", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9174f2eedea011622d56469d1198eb8464acf/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9174f2eedea011622d56469d1198eb8464acf/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c6b9174f2eedea011622d56469d1198eb8464acf", "patch": "@@ -199,6 +199,7 @@ gnu_ld=\"$gnu_ld_flag\"\n default_use_cxa_atexit=no\n target_gtfiles=\n need_64bit_hwint=\n+need_64bit_isa=\n \n # Don't carry these over build->host->target.  Please.\n xm_file=\n@@ -1083,6 +1084,7 @@ hppa[12]*-*-hpux11*)\n \t;;\n i[34567]86-*-darwin*)\n \tneed_64bit_hwint=yes\n+\tneed_64bit_isa=yes\n \n \t# This is so that '.../configure && make' doesn't fail due to\n \t# config.guess deciding that the configuration is i386-*-darwin* and\n@@ -1148,6 +1150,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n \t\t\ttmake_file=\"${tmake_file} i386/t-linux64\"\n \t\t\tneed_64bit_hwint=yes\n+\t\t\tneed_64bit_isa=yes\n \t\t\tcase X\"${with_cpu}\" in\n \t\t\tXgeneric|Xatom|Xcore2|Xnocona|Xx86-64|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n \t\t\t\t;;\n@@ -1266,6 +1269,7 @@ i[34567]86-*-solaris2*)\n \t\t# depends on a runtime test and is thus performed in\n \t\t# libgcc/configure.ac instead.\n \t\tneed_64bit_hwint=yes\n+\t\tneed_64bit_isa=yes\n \t\tuse_gcc_stdint=wrap\n \t\tcase X\"${with_cpu}\" in\n \t\tXgeneric|Xatom|Xcore2|Xnocona|Xx86-64|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n@@ -1335,6 +1339,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \tcase ${target} in\n \t\tx86_64-*-* | *-w64-*)\n \t\t\tneed_64bit_hwint=yes\n+\t\t\tneed_64bit_isa=yes\n \t\t\t;;\n \t\t*)\n \t\t\t;;\n@@ -2626,19 +2631,23 @@ esac\n arch=\n cpu=\n arch_without_sse2=no\n+arch_without_64bit=no\n case ${target} in\n   i386-*-*)\n     arch=i386\n     cpu=i386\n     arch_without_sse2=yes\n+    arch_without_64bit=yes\n     ;;\n   i486-*-*)\n     arch=i486\n     cpu=i486\n     arch_without_sse2=yes\n+    arch_without_64bit=yes\n     ;;\n   i586-*-*)\n     arch_without_sse2=yes\n+    arch_without_64bit=yes\n     case ${target_noncanonical} in\n       k6_2-*)\n \tarch=k6-2\n@@ -2680,6 +2689,7 @@ case ${target} in\n \tarch=athlon-4\n \tcpu=athlon-4\n \tarch_without_sse2=yes\n+\tarch_without_64bit=yes\n \t;;\n       athlon_tbird-*|athlon-*)\n \tarch=athlon\n@@ -2734,6 +2744,7 @@ case ${target} in\n \tarch=pentiumpro\n \tcpu=generic\n \tarch_without_sse2=yes\n+\tarch_without_64bit=yes\n \t;;\n     esac\n     ;;\n@@ -2878,9 +2889,21 @@ if test x$with_arch = x ; then\n \t  with_arch_32=$arch\n \tfi\n \tif test x$with_arch_64 = x; then\n-\t  with_arch_64=$arch\n+\t  if test $arch_without_64bit = yes; then\n+\t    # Set the default 64bit arch to x86-64 if the default arch\n+\t    # doesn't support 64bit.\n+\t    with_arch_64=x86-64\n+\t  else\n+\t    with_arch_64=$arch\n+\t  fi\n \tfi\n \twith_arch=\n+      elif test $arch_without_64bit$need_64bit_isa = yesyes; then\n+\t# Set the default 64bit arch to x86-64 if the default arch\n+\t# doesn't support 64bit and we need 64bit ISA.\n+\twith_arch_32=$arch\n+\twith_arch_64=x86-64\n+\twith_arch=\n       fi\n       ;;\n   esac"}]}