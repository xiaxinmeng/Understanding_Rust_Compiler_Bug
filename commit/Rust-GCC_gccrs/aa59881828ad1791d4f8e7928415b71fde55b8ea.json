{"sha": "aa59881828ad1791d4f8e7928415b71fde55b8ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1OTg4MTgyOGFkMTc5MWQ0ZjhlNzkyODQxNWI3MWZkZTU1YjhlYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-27T09:45:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-27T09:45:25Z"}, "message": "class.c: Remove static pending_hard_virtuals.\n\n\t* class.c: Remove static pending_hard_virtuals.\n \t(add_virtual_function): Take pointers to pending_virtuals\n\tand pending_hard_virtuals.\n\t(finish_struct_1): Pass them.  Declare pending_hard_virtuals.\n\nFrom-SVN: r16787", "tree": {"sha": "b962c4a419322b81aa4729d5e2509595fc30c65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b962c4a419322b81aa4729d5e2509595fc30c65b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa59881828ad1791d4f8e7928415b71fde55b8ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa59881828ad1791d4f8e7928415b71fde55b8ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa59881828ad1791d4f8e7928415b71fde55b8ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa59881828ad1791d4f8e7928415b71fde55b8ea/comments", "author": null, "committer": null, "parents": [{"sha": "0632562c8a0c7075e01f445de1ed9886e72091dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0632562c8a0c7075e01f445de1ed9886e72091dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0632562c8a0c7075e01f445de1ed9886e72091dd"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "a62a3981d9b14fba25494de7926c98a179609760", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa59881828ad1791d4f8e7928415b71fde55b8ea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa59881828ad1791d4f8e7928415b71fde55b8ea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa59881828ad1791d4f8e7928415b71fde55b8ea", "patch": "@@ -1,3 +1,10 @@\n+Thu Nov 27 00:59:46 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c: Remove static pending_hard_virtuals.\n+ \t(add_virtual_function): Take pointers to pending_virtuals\n+\tand pending_hard_virtuals.\n+\t(finish_struct_1): Pass them.  Declare pending_hard_virtuals.\n+\n Wed Nov 26 20:28:49 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (import_export_vtable): If we support one_only but not"}, {"sha": "d021fae7dbd0d7d918fc416345a8be46ef29bb3f", "filename": "gcc/cp/class.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa59881828ad1791d4f8e7928415b71fde55b8ea/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa59881828ad1791d4f8e7928415b71fde55b8ea/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=aa59881828ad1791d4f8e7928415b71fde55b8ea", "patch": "@@ -103,7 +103,7 @@ static void grow_method PROTO((tree, tree *));\n static void finish_vtbls PROTO((tree, int, tree));\n static void modify_vtable_entry PROTO((tree, tree, tree));\n static tree get_vtable_entry_n PROTO((tree, unsigned HOST_WIDE_INT));\n-static tree add_virtual_function PROTO((tree, int *, tree, tree));\n+static void add_virtual_function PROTO((tree *, tree *, int *, tree, tree));\n static tree delete_duplicate_fields_1 PROTO((tree, tree));\n static void delete_duplicate_fields PROTO((tree));\n static void finish_struct_bits PROTO((tree, int));\n@@ -416,11 +416,6 @@ build_vbase_path (code, type, expr, path, alias_this)\n \n /* Virtual function things.  */\n \n-/* Virtual functions to be dealt with after laying out our base\n-   classes.  We do all overrides after we layout virtual base classes.  */\n-\n-static tree pending_hard_virtuals;\n-\n /* Build an entry in the virtual function table.\n    DELTA is the offset for the `this' pointer.\n    PFN is an ADDR_EXPR containing a pointer to the virtual function.\n@@ -953,13 +948,16 @@ get_vtable_entry_n (virtuals, n)\n    vtable for the type, and we build upon the PENDING_VIRTUALS list\n    and return it.  */\n \n-static tree\n-add_virtual_function (pending_virtuals, has_virtual, fndecl, t)\n-     tree pending_virtuals;\n+static void\n+add_virtual_function (pv, phv, has_virtual, fndecl, t)\n+     tree *pv, *phv;\n      int *has_virtual;\n      tree fndecl;\n      tree t; /* Structure type.  */\n {\n+  tree pending_virtuals = *pv;\n+  tree pending_hard_virtuals = *phv;\n+\n   /* FUNCTION_TYPEs and OFFSET_TYPEs no longer freely\n      convert to void *.  Make such a conversion here.  */\n   tree vfn = build1 (ADDR_EXPR, vfunc_ptr_type_node, fndecl);\n@@ -1023,7 +1021,8 @@ add_virtual_function (pending_virtuals, has_virtual, fndecl, t)\n          Deal with this after we have laid out our virtual base classes.  */\n       pending_hard_virtuals = temp_tree_cons (fndecl, vfn, pending_hard_virtuals);\n     }\n-  return pending_virtuals;\n+  *pv = pending_virtuals;\n+  *phv = pending_hard_virtuals;\n }\n \f\n /* Obstack on which to build the vector of class methods.  */\n@@ -3109,6 +3108,7 @@ finish_struct_1 (t, warn_anon)\n   int has_virtual;\n   int max_has_virtual;\n   tree pending_virtuals = NULL_TREE;\n+  tree pending_hard_virtuals = NULL_TREE;\n   tree abstract_virtuals = NULL_TREE;\n   tree vfield;\n   tree vfields;\n@@ -3275,8 +3275,8 @@ finish_struct_1 (t, warn_anon)\n       if (DECL_VINDEX (x)\n \t  || (all_virtual == 1 && ! DECL_CONSTRUCTOR_P (x)))\n \t{\n-\t  pending_virtuals = add_virtual_function (pending_virtuals,\n-\t\t\t\t\t\t   &has_virtual, x, t);\n+\t  add_virtual_function (&pending_virtuals, &pending_hard_virtuals,\n+\t\t\t\t&has_virtual, x, t);\n \t  if (DECL_ABSTRACT_VIRTUAL_P (x))\n \t    abstract_virtuals = tree_cons (NULL_TREE, x, abstract_virtuals);\n #if 0\n@@ -3663,8 +3663,8 @@ finish_struct_1 (t, warn_anon)\n \t  fn_fields = dtor;\n \n \t  if (DECL_VINDEX (dtor))\n-\t    pending_virtuals = add_virtual_function (pending_virtuals,\n-\t\t\t\t\t\t     &has_virtual, dtor, t);\n+\t    add_virtual_function (&pending_virtuals, &pending_hard_virtuals,\n+\t\t\t\t  &has_virtual, dtor, t);\n \t  nonprivate_method = 1;\n \t}\n     }"}]}