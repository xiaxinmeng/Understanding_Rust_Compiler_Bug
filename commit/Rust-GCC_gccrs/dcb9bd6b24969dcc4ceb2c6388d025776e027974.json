{"sha": "dcb9bd6b24969dcc4ceb2c6388d025776e027974", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiOWJkNmIyNDk2OWRjYzRjZWIyYzYzODhkMDI1Nzc2ZTAyNzk3NA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-08-16T17:09:13Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-08-16T17:09:13Z"}, "message": "altivec-17.c: New test.\n\n2004-08-16  Janis Johnson  <janis187@us.ibm.com>\n\n\t* gcc.dg/altivec-17.c: New test.\n\t* gcc.dg/altivec-18.c: New test.\n\nFrom-SVN: r86067", "tree": {"sha": "a5a7153f4e314250a66e644729844437993d6f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5a7153f4e314250a66e644729844437993d6f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcb9bd6b24969dcc4ceb2c6388d025776e027974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb9bd6b24969dcc4ceb2c6388d025776e027974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb9bd6b24969dcc4ceb2c6388d025776e027974", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb9bd6b24969dcc4ceb2c6388d025776e027974/comments", "author": null, "committer": null, "parents": [{"sha": "4e6e4e4c1ac12b80dbe4b5541a83f4ced4958985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6e4e4c1ac12b80dbe4b5541a83f4ced4958985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e6e4e4c1ac12b80dbe4b5541a83f4ced4958985"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "b7d51b16f37da363fc70a6512ba588a5b9deaf09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcb9bd6b24969dcc4ceb2c6388d025776e027974", "patch": "@@ -1,3 +1,8 @@\n+2004-08-16  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/altivec-17.c: New test.\n+\t* gcc.dg/altivec-18.c: New test.\n+\n 2004-08-16  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/6749"}, {"sha": "463062ef0866bee6c52a01110fd7c47abddab6b5", "filename": "gcc/testsuite/gcc.dg/altivec-17.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-17.c?ref=dcb9bd6b24969dcc4ceb2c6388d025776e027974", "patch": "@@ -0,0 +1,11 @@\n+/* Verify a statement in the GCC Manual that GCC allows the use of a\n+   typedef name as a vector type specifier.  */\n+\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"-maltivec\" } { \"\" } } */\n+/* { dg-options \"-maltivec -mabi=altivec\" } */\n+\n+typedef unsigned int ui;\n+typedef signed char sc;\n+__vector ui vui;\n+__vector sc vsc;"}, {"sha": "af5687e0a6bab912a40cf86c2e78f8ed677172fd", "filename": "gcc/testsuite/gcc.dg/altivec-18.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb9bd6b24969dcc4ceb2c6388d025776e027974/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-18.c?ref=dcb9bd6b24969dcc4ceb2c6388d025776e027974", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"-maltivec\" } { \"\" } } */\n+/* { dg-options \"-maltivec -mabi=altivec\" } */\n+/* { dg-final { scan-assembler \"vcmpgtub\" } } */\n+/* { dg-final { scan-assembler \"vcmpgtsh\" } } */\n+/* { dg-final { scan-assembler \"vcmpgtsw\" } } */\n+\n+/* Verify a statement in the GCC Manual that vector type specifiers can\n+   omit \"signed\" or \"unsigned\", with the default being \"signed\" for int\n+   and short, and \"unsigned\" for char.  */\n+\n+#include <altivec.h>\n+\n+extern vector char vc1, vc2;\n+extern vector short vs1, vs2;\n+extern vector int vi1, vi2;\n+\n+int signedness (void)\n+{\n+    return vec_all_le (vc1, vc2) \n+           && vec_all_le (vs1, vs2)\n+           && vec_all_le (vi1, vi2);\n+}"}]}