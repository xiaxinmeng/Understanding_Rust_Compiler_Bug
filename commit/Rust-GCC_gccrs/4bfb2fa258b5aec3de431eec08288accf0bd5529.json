{"sha": "4bfb2fa258b5aec3de431eec08288accf0bd5529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmYjJmYTI1OGI1YWVjM2RlNDMxZWVjMDgyODhhY2NmMGJkNTUyOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-01-29T11:08:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-01-29T11:08:59Z"}, "message": "re PR middle-end/58742 (pointer arithmetic simplification)\n\n2014-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/58742\n\t* tree-ssa-forwprop.c (associate_plusminus): Return true\n\tif we changed sth, defer EH cleanup to ...\n\t(ssa_forward_propagate_and_combine): ... here.  Call simplify_mult.\n\t(simplify_mult): New function.\n\nFrom-SVN: r207232", "tree": {"sha": "e500de9b76caaa9de2e3b1a7441d2929b980d847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e500de9b76caaa9de2e3b1a7441d2929b980d847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bfb2fa258b5aec3de431eec08288accf0bd5529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb2fa258b5aec3de431eec08288accf0bd5529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfb2fa258b5aec3de431eec08288accf0bd5529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb2fa258b5aec3de431eec08288accf0bd5529/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09b22f48d435d158761a02117facec4daa7395fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b22f48d435d158761a02117facec4daa7395fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b22f48d435d158761a02117facec4daa7395fb"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "c72c2536fc480a7fa9a43ebe9f1c518d63e73e81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb2fa258b5aec3de431eec08288accf0bd5529/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb2fa258b5aec3de431eec08288accf0bd5529/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bfb2fa258b5aec3de431eec08288accf0bd5529", "patch": "@@ -1,3 +1,11 @@\n+2014-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58742\n+\t* tree-ssa-forwprop.c (associate_plusminus): Return true\n+\tif we changed sth, defer EH cleanup to ...\n+\t(ssa_forward_propagate_and_combine): ... here.  Call simplify_mult.\n+\t(simplify_mult): New function.\n+\n 2014-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/59917"}, {"sha": "41285d3a19ff77c880e2d4bb19a5cd550b459480", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 63, "deletions": 4, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb2fa258b5aec3de431eec08288accf0bd5529/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb2fa258b5aec3de431eec08288accf0bd5529/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=4bfb2fa258b5aec3de431eec08288accf0bd5529", "patch": "@@ -2792,9 +2792,7 @@ associate_plusminus (gimple_stmt_iterator *gsi)\n     {\n       fold_stmt_inplace (gsi);\n       update_stmt (stmt);\n-      if (maybe_clean_or_replace_eh_stmt (stmt, stmt)\n-\t  && gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n-\treturn true;\n+      return true;\n     }\n \n   return false;\n@@ -3425,6 +3423,53 @@ simplify_vector_constructor (gimple_stmt_iterator *gsi)\n   return true;\n }\n \n+/* Simplify multiplications.\n+   Return true if a transformation applied, otherwise return false.  */\n+\n+static bool\n+simplify_mult (gimple_stmt_iterator *gsi)\n+{\n+  gimple stmt = gsi_stmt (*gsi);\n+  tree arg1 = gimple_assign_rhs1 (stmt);\n+  tree arg2 = gimple_assign_rhs2 (stmt);\n+\n+  if (TREE_CODE (arg1) != SSA_NAME)\n+    return false;\n+\n+  gimple def_stmt = SSA_NAME_DEF_STMT (arg1);\n+  if (!is_gimple_assign (def_stmt))\n+    return false;\n+\n+  /* Look through a sign-changing conversion.  */\n+  if (CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (def_stmt)))\n+    {\n+      if (TYPE_PRECISION (TREE_TYPE (gimple_assign_lhs (def_stmt)))\n+\t  != TYPE_PRECISION (TREE_TYPE (gimple_assign_rhs1 (def_stmt)))\n+\t  || TREE_CODE (gimple_assign_rhs1 (def_stmt)) != SSA_NAME)\n+\treturn false;\n+      def_stmt = SSA_NAME_DEF_STMT (gimple_assign_rhs1 (def_stmt));\n+      if (!is_gimple_assign (def_stmt))\n+\treturn false;\n+    }\n+\n+  if (gimple_assign_rhs_code (def_stmt) == EXACT_DIV_EXPR)\n+    {\n+      if (operand_equal_p (gimple_assign_rhs2 (def_stmt), arg2, 0))\n+\t{\n+\t  tree res = gimple_assign_rhs1 (def_stmt);\n+\t  if (useless_type_conversion_p (TREE_TYPE (arg1), TREE_TYPE (res)))\n+\t    gimple_assign_set_rhs_with_ops (gsi, TREE_CODE (res), res,\n+\t\t\t\t\t    NULL_TREE);\n+\t  else\n+\t    gimple_assign_set_rhs_with_ops (gsi, NOP_EXPR, res, NULL_TREE);\n+\t  gcc_assert (gsi_stmt (*gsi) == stmt);\n+\t  update_stmt (stmt);\n+\t  return true;\n+\t}\n+    }\n+\n+  return false;\n+}\n /* Main entry point for the forward propagation and statement combine\n    optimizer.  */\n \n@@ -3576,9 +3621,23 @@ ssa_forward_propagate_and_combine (void)\n \t\t\t || code == BIT_IOR_EXPR\n \t\t\t || code == BIT_XOR_EXPR)\n \t\t  changed = simplify_bitwise_binary (&gsi);\n+\t\telse if (code == MULT_EXPR)\n+\t\t  {\n+\t\t    changed = simplify_mult (&gsi);\n+\t\t    if (changed\n+\t\t\t&& maybe_clean_or_replace_eh_stmt (stmt, stmt)\n+\t\t\t&& gimple_purge_dead_eh_edges (bb))\n+\t\t      cfg_changed = true;\n+\t\t  }\n \t\telse if (code == PLUS_EXPR\n \t\t\t || code == MINUS_EXPR)\n-\t\t  changed = associate_plusminus (&gsi);\n+\t\t  {\n+\t\t    changed = associate_plusminus (&gsi);\n+\t\t    if (changed\n+\t\t\t&& maybe_clean_or_replace_eh_stmt (stmt, stmt)\n+\t\t\t&& gimple_purge_dead_eh_edges (bb))\n+\t\t      cfg_changed = true;\n+\t\t  }\n \t\telse if (code == POINTER_PLUS_EXPR)\n \t\t  changed = associate_pointerplus (&gsi);\n \t\telse if (CONVERT_EXPR_CODE_P (code)"}]}