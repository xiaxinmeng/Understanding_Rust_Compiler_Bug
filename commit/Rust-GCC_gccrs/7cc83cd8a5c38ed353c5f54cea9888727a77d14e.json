{"sha": "7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NjODNjZDhhNWMzOGVkMzUzYzVmNTRjZWE5ODg4NzI3YTc3ZDE0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:26:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:26:40Z"}, "message": "[multiple changes]\n\n2011-08-29  Steve Baird  <baird@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Op_Expon): Suppress N_Op_Expon node expansion\n\tfor CodePeer and ALFA modes.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Collect_Interps): Within an instance, collect a homonym\n\tthat comes from an enclosing scope if it is not the renaming of an\n\tactual, to handle properly a spurious ambiguity in an instance.\n\nFrom-SVN: r178158", "tree": {"sha": "346341548f7130d647af93fb48735fb72298d137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346341548f7130d647af93fb48735fb72298d137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/comments", "author": null, "committer": null, "parents": [{"sha": "76af4137543b2654c2aeb91c4987590fff8546db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af4137543b2654c2aeb91c4987590fff8546db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76af4137543b2654c2aeb91c4987590fff8546db"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "9dc41919b662b081c591e31335d072a5c6fb0b44", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "patch": "@@ -1,3 +1,14 @@\n+2011-08-29  Steve Baird  <baird@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Expon): Suppress N_Op_Expon node expansion\n+\tfor CodePeer and ALFA modes.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Collect_Interps): Within an instance, collect a homonym\n+\tthat comes from an enclosing scope if it is not the renaming of an\n+\tactual, to handle properly a spurious ambiguity in an instance.\n+\n 2011-08-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch13.adb (Alignment_Check_For_Esize_Change): Rename to..."}, {"sha": "230e76e9e67c571f510fa786a1c659e4b1c01992", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "patch": "@@ -6200,6 +6200,11 @@ package body Exp_Ch4 is\n       --  shifts etc. We also do this transformation if the result type is\n       --  different from the base type.\n \n+      if CodePeer_Mode or ALFA_Mode then\n+         --  CodePeer and GNATprove want to see the unexpanded N_Op_Expon node\n+         return;\n+      end if;\n+\n       if Is_Private_Type (Etype (Base))\n            or else\n          Is_Private_Type (Typ)"}, {"sha": "c4d42a305ef87f403caff1c6a04ca3a7b4f7ef7a", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc83cd8a5c38ed353c5f54cea9888727a77d14e/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "patch": "@@ -621,10 +621,15 @@ package body Sem_Type is\n \n                      --  A homograph in the same scope can occur within an\n                      --  instantiation, the resulting ambiguity has to be\n-                     --  resolved later.\n+                     --  resolved later. The homographs may both be local\n+                     --  functions or actuals, or may be declared at different\n+                     --  levels within the instance. The renaming of an actual\n+                     --  within the instance must not be included.\n \n-                     if Scope (H) = Scope (Ent)\n+                     if (Scope (H) = Scope (Ent)\n+                           or else Scope (H) = Scope (Scope (Ent)))\n                         and then In_Instance\n+                        and then H /= Renamed_Entity (Ent)\n                         and then not Is_Inherited_Operation (H)\n                      then\n                         All_Interp.Table (All_Interp.Last) :="}]}