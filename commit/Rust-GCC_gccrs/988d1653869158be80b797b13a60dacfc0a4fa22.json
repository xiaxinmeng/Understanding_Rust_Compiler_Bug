{"sha": "988d1653869158be80b797b13a60dacfc0a4fa22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg4ZDE2NTM4NjkxNThiZTgwYjc5N2IxM2E2MGRhY2ZjMGE0ZmEyMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-03-08T18:24:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-03-08T18:24:22Z"}, "message": "Makefile.in (cgraph.o): Depend on gt-cgraph.h and varray.h.\n\n\t* Makefile.in (cgraph.o): Depend on gt-cgraph.h and varray.h.\n\t* gt-cgraph.h: New GC file.\n\t* cgraph.c (known_fns): New static variable.\n\t(cgraph_node): Add the decl into varray.\n\nFrom-SVN: r63998", "tree": {"sha": "924b2a2b8d25bda315a461b330cfaa8c18cad7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924b2a2b8d25bda315a461b330cfaa8c18cad7c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/988d1653869158be80b797b13a60dacfc0a4fa22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988d1653869158be80b797b13a60dacfc0a4fa22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988d1653869158be80b797b13a60dacfc0a4fa22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988d1653869158be80b797b13a60dacfc0a4fa22/comments", "author": null, "committer": null, "parents": [{"sha": "73ba39fc86a4697b0c25fcf7cb52a577a356fb0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ba39fc86a4697b0c25fcf7cb52a577a356fb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73ba39fc86a4697b0c25fcf7cb52a577a356fb0a"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "0d7daa027d845685cfcf50e2bc6ec78ec2e1d89a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=988d1653869158be80b797b13a60dacfc0a4fa22", "patch": "@@ -1,3 +1,10 @@\n+Sat Mar  8 19:22:30 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Makefile.in (cgraph.o): Depend on gt-cgraph.h and varray.h.\n+\t* gt-cgraph.h: New GC file.\n+\t* cgraph.c (known_fns): New static variable.\n+\t(cgraph_node): Add the decl into varray.\n+\n 2003-03-08  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.md (\"*movcc_expanded\"): Add missing alternatives."}, {"sha": "c11e554fa2f35e2b76bfe0e080b555472df7c2ac", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=988d1653869158be80b797b13a60dacfc0a4fa22", "patch": "@@ -1539,7 +1539,7 @@ simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RT\n    $(REGS_H) hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h $(GGC_H) $(OBSTACK_H) $(TM_P_H) $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h\n+   langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h gt-cgraph.h\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n@@ -1929,7 +1929,7 @@ GTFILES = $(srcdir)/location.h $(srcdir)/coretypes.h $(srcdir)/cpplib.h \\\n   $(srcdir)/varray.h $(srcdir)/ssa.h $(srcdir)/insn-addr.h $(srcdir)/cselib.h \\\n   $(srcdir)/basic-block.h $(srcdir)/location.h \\\n   $(srcdir)/c-common.h $(srcdir)/c-tree.h \\\n-  $(srcdir)/alias.c $(srcdir)/bitmap.c $(srcdir)/cselib.c \\\n+  $(srcdir)/alias.c $(srcdir)/bitmap.c $(srcdir)/cselib.c $(srcdir)/cgraph.c \\\n   $(srcdir)/dbxout.c $(srcdir)/dwarf2out.c $(srcdir)/dwarf2asm.c \\\n   $(srcdir)/emit-rtl.c $(srcdir)/except.c $(srcdir)/explow.c $(srcdir)/expr.c \\\n   $(srcdir)/fold-const.c $(srcdir)/function.c \\\n@@ -1946,7 +1946,7 @@ GTFILES_FILES_FILES = @all_gtfiles_files_files@\n GTFILES_LANG_DIR_NAMES = @subdirs@\n GTFILES_SRCDIR = @srcdir@\n \n-gtype-desc.h gtype-desc.c gt-except.h gt-function.h : s-gtype; @true\n+gt-cgraph.h gtype-desc.h gtype-desc.c gt-except.h gt-function.h : s-gtype; @true\n gt-integrate.h gt-stmt.h gt-tree.h gt-varasm.h gt-emit-rtl.h : s-gtype; @true\n gt-explow.h gt-stor-layout.h gt-regclass.h gt-lists.h : s-gtype; @true\n gt-alias.h gt-cselib.h gt-fold-const.h gt-gcse.h gt-profile.h : s-gtype; @true"}, {"sha": "fd638bc14fb572f79e336acaf0360e3064b7d123", "filename": "gcc/cgraph.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988d1653869158be80b797b13a60dacfc0a4fa22/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=988d1653869158be80b797b13a60dacfc0a4fa22", "patch": "@@ -33,6 +33,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"debug.h\"\n #include \"target.h\"\n #include \"cgraph.h\"\n+#include \"varray.h\"\n+\n+/* The known declarations must not get garbage collected.  Callgraph\n+   datastructures should not get saved via PCH code since this would\n+   make it difficult to extend into intra-module optimizer later.  So\n+   we store only the references into the array to prevent gabrage\n+   collector from deleting live data.  */\n+static GTY(()) varray_type known_fns;\n \n /* Hash table used to convert declarations into nodes.  */\n static htab_t cgraph_hash = 0;\n@@ -82,8 +90,14 @@ cgraph_node (decl)\n   struct cgraph_node *node;\n   struct cgraph_node **slot;\n \n+  if (TREE_CODE (decl) != FUNCTION_DECL)\n+    abort ();\n+\n   if (!cgraph_hash)\n-    cgraph_hash = htab_create (10, hash_node, eq_node, NULL);\n+    {\n+      cgraph_hash = htab_create (10, hash_node, eq_node, NULL);\n+      VARRAY_TREE_INIT (known_fns, 32, \"known_fns\");\n+    }\n \n   slot =\n     (struct cgraph_node **) htab_find_slot_with_hash (cgraph_hash, decl,\n@@ -107,6 +121,7 @@ cgraph_node (decl)\n       node->next_nested = node->origin->nested;\n       node->origin->nested = node;\n     }\n+  VARRAY_PUSH_TREE (known_fns, decl);\n   return node;\n }\n \n@@ -290,3 +305,5 @@ dump_cgraph (f)\n       fprintf (f, \"\\n\");\n     }\n }\n+\n+#include \"gt-cgraph.h\""}]}