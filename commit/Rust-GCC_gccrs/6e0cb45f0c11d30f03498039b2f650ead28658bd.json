{"sha": "6e0cb45f0c11d30f03498039b2f650ead28658bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwY2I0NWYwYzExZDMwZjAzNDk4MDM5YjJmNjUwZWFkMjg2NThiZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-01T07:47:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-01T07:47:19Z"}, "message": "sqrt.c: New test.\n\n\t* gcc.target/alpha/sqrt.c: New test.\n\nFrom-SVN: r254289", "tree": {"sha": "c17f968b496094ca78f0d0c6add78cc02c6c0be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c17f968b496094ca78f0d0c6add78cc02c6c0be3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e0cb45f0c11d30f03498039b2f650ead28658bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0cb45f0c11d30f03498039b2f650ead28658bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0cb45f0c11d30f03498039b2f650ead28658bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0cb45f0c11d30f03498039b2f650ead28658bd/comments", "author": null, "committer": null, "parents": [{"sha": "78fd4c51f4d05692b35ec9be7162d2827f5e6ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fd4c51f4d05692b35ec9be7162d2827f5e6ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78fd4c51f4d05692b35ec9be7162d2827f5e6ba5"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "a8143ade842d650711d179b6dc3d0d9cf432983e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0cb45f0c11d30f03498039b2f650ead28658bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0cb45f0c11d30f03498039b2f650ead28658bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e0cb45f0c11d30f03498039b2f650ead28658bd", "patch": "@@ -1,8 +1,12 @@\n+2017-11-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/alpha/sqrt.c: New test.\n+\n 2017-10-31  Daniel Santos  <daniel.santos@pobox.com>\n \n-\tgcc.target/i386/pr82002-1.c: New test.\n-\tgcc.target/i386/pr82002-2a.c: New xfail test.\n-\tgcc.target/i386/pr82002-2b.c: New xfail test.\n+\t* gcc.target/i386/pr82002-1.c: New test.\n+\t* gcc.target/i386/pr82002-2a.c: New xfail test.\n+\t* gcc.target/i386/pr82002-2b.c: New xfail test.\n \n 2017-10-31  Martin Jambor  <mjambor@suse.cz>\n \n@@ -16,8 +20,7 @@\n \n 2017-10-31  David Malcolm  <dmalcolm@redhat.com>\n \n-\t* g++.dg/cpp0x/auto21.C: Update dg-error to reflect addition of\n-\tquotes.\n+\t* g++.dg/cpp0x/auto21.C: Update dg-error to reflect addition of quotes.\n \t* g++.dg/cpp0x/missing-initializer_list-include.C: Likewise.\n \n 2017-10-31  David Malcolm  <dmalcolm@redhat.com>\n@@ -35,8 +38,7 @@\n 2017-10-31  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/gcov/ternary.C: New test.\n-\t* g++.dg/gcov/gcov-threads-1.C (main): Update expected line\n-\tcount.\n+\t* g++.dg/gcov/gcov-threads-1.C (main): Update expected line count.\n \t* lib/gcov.exp: Support new format for intermediate file format.\n \n 2017-11-01  Julia Koval  <julia.koval@intel.com>"}, {"sha": "a3c8b243ae41625f2130614fc1f529090388caa7", "filename": "gcc/testsuite/gcc.target/alpha/sqrt.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0cb45f0c11d30f03498039b2f650ead28658bd/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fsqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0cb45f0c11d30f03498039b2f650ead28658bd/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fsqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fsqrt.c?ref=6e0cb45f0c11d30f03498039b2f650ead28658bd", "patch": "@@ -0,0 +1,25 @@\n+/* glibc bug, https://sourceware.org/ml/libc-alpha/2017-04/msg00256.html\n+   When using software completions, we have to prevent assembler to match\n+   input and output operands of sqrtt/sqrtf insn.  Fixed in glibc 2.26.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-builtin-sqrt -mieee\" } */\n+\n+double sqrt (double);\n+\n+static double\n+float64frombits (unsigned long b)\n+{\n+  union { unsigned long __b; double __d; } u = { .__b = b };\n+  return u.__d;\n+}\n+\n+int\n+main (void)\n+{\n+  double a = float64frombits (2);\n+\n+  if (sqrt (a) != 3.1434555694052576e-162)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}