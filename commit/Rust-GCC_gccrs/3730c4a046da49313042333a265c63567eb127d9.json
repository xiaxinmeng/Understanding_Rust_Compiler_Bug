{"sha": "3730c4a046da49313042333a265c63567eb127d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczMGM0YTA0NmRhNDkzMTMwNDIzMzNhMjY1YzYzNTY3ZWIxMjdkOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:44:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:44:20Z"}, "message": "[multiple changes]\n\n2014-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_elab.adb: Minor code reorganization (use Nkind_In).\n\t* stringt.adb: Remove temporary pragma Warnings (Off).\n\t* stringt.ads: Add pragma Elaborate_Body to ensure initialization\n\tof Null_String_Id.\n\n2014-02-20  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-chtgbk.adb (Replace): Use correct offset when calculating bucket\n\tindex.\n\nFrom-SVN: r207944", "tree": {"sha": "c809b0fc5e80f025c1b6a274026543400d90f5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c809b0fc5e80f025c1b6a274026543400d90f5ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3730c4a046da49313042333a265c63567eb127d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3730c4a046da49313042333a265c63567eb127d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3730c4a046da49313042333a265c63567eb127d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3730c4a046da49313042333a265c63567eb127d9/comments", "author": null, "committer": null, "parents": [{"sha": "0c7e0c3254341de04e877a58c44aba23203cf04a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c7e0c3254341de04e877a58c44aba23203cf04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c7e0c3254341de04e877a58c44aba23203cf04a"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "9d12879767ed7d888cc20b550d7632c0fb5946b1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3730c4a046da49313042333a265c63567eb127d9", "patch": "@@ -1,3 +1,15 @@\n+2014-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_elab.adb: Minor code reorganization (use Nkind_In).\n+\t* stringt.adb: Remove temporary pragma Warnings (Off).\n+\t* stringt.ads: Add pragma Elaborate_Body to ensure initialization\n+\tof Null_String_Id.\n+\n+2014-02-20  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-chtgbk.adb (Replace): Use correct offset when calculating bucket\n+\tindex.\n+\n 2014-02-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch5.adb (Analyze_Iterator_Specification): Initialize"}, {"sha": "5f6bfa0910651bc6789fe394810daf5763686d88", "filename": "gcc/ada/a-chtgbk.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fa-chtgbk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fa-chtgbk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgbk.adb?ref=3730c4a046da49313042333a265c63567eb127d9", "patch": "@@ -275,14 +275,21 @@ package body Ada.Containers.Hash_Tables.Generic_Bounded_Keys is\n       --  Per AI05-0022, the container implementation is required to detect\n       --  element tampering by a generic actual subprogram.\n \n+      --  The following block appears to be vestigial -- this should be done\n+      --  using Checked_Index instead. Also, we might have to move the actual\n+      --  tampering checks to the top of the subprogram, in order to prevent\n+      --  infinite recursion when calling Hash. (This is similar to how Insert\n+      --  and Delete are implemented.) This implies that we will have to defer\n+      --  the computation of New_Index until after the tampering check. ???\n+\n       declare\n          B : Natural renames HT.Busy;\n          L : Natural renames HT.Lock;\n       begin\n          B := B + 1;\n          L := L + 1;\n \n-         Old_Indx := Hash (NN (Node)) mod HT.Buckets'Length;\n+         Old_Indx := HT.Buckets'First + Hash (NN (Node)) mod HT.Buckets'Length;\n \n          B := B - 1;\n          L := L - 1;"}, {"sha": "9b8a3b2464e038a91b8ce897f0c7998822b4dce7", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=3730c4a046da49313042333a265c63567eb127d9", "patch": "@@ -1553,11 +1553,9 @@ package body Sem_Elab is\n       --  then there is nothing to do (we do not know what is being assigned),\n       --  but otherwise this is an assignment to the prefix.\n \n-      if Nkind (N) = N_Indexed_Component\n-           or else\n-         Nkind (N) = N_Selected_Component\n-           or else\n-         Nkind (N) = N_Slice\n+      if Nkind_In (N, N_Indexed_Component,\n+                      N_Selected_Component,\n+                      N_Slice)\n       then\n          if not Is_Access_Type (Etype (Prefix (N))) then\n             Check_Elab_Assign (Prefix (N));"}, {"sha": "6afba04f3defefd0e52ef91b897dbf4fbc6718f1", "filename": "gcc/ada/stringt.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fstringt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fstringt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.adb?ref=3730c4a046da49313042333a265c63567eb127d9", "patch": "@@ -474,8 +474,6 @@ package body Stringt is\n \n --  Setup the null string\n \n-pragma Warnings (Off); -- kill strange warning from code below ???\n-\n begin\n    Start_String;\n    Null_String_Id := End_String;"}, {"sha": "92b74e2c049e7e46a2afbff3895aad7dcb9c1f78", "filename": "gcc/ada/stringt.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fstringt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3730c4a046da49313042333a265c63567eb127d9/gcc%2Fada%2Fstringt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.ads?ref=3730c4a046da49313042333a265c63567eb127d9", "patch": "@@ -33,6 +33,8 @@ with System; use System;\n with Types;  use Types;\n \n package Stringt is\n+   pragma Elaborate_Body;\n+   --  This is to make sure Null_String_Id is properly initialized\n \n --  This package contains routines for handling the strings table which is\n --  used to store string constants encountered in the source, and also those"}]}