{"sha": "02a8575c0cc6cc0004afaee095185775cd61f080", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhODU3NWMwY2M2Y2MwMDA0YWZhZWUwOTUxODU3NzVjZDYxZjA4MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-06-18T16:08:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-06-18T16:08:17Z"}, "message": "Handle constexpr conversion from and then to the same type.\n\n\t* constexpr.c (cxx_eval_constant_expression): Handle conversion from\n\tand then to the same type.\n\nFrom-SVN: r272429", "tree": {"sha": "c77eb4a74973d6b6da551ab8c349b008f1d8de29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77eb4a74973d6b6da551ab8c349b008f1d8de29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a8575c0cc6cc0004afaee095185775cd61f080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a8575c0cc6cc0004afaee095185775cd61f080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a8575c0cc6cc0004afaee095185775cd61f080", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a8575c0cc6cc0004afaee095185775cd61f080/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3da7d774259904b351febd2c2de4eb15cd262ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da7d774259904b351febd2c2de4eb15cd262ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da7d774259904b351febd2c2de4eb15cd262ff5"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "4f26dc3423f154d2c6f86f983abdd9820c832c7c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a8575c0cc6cc0004afaee095185775cd61f080/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a8575c0cc6cc0004afaee095185775cd61f080/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=02a8575c0cc6cc0004afaee095185775cd61f080", "patch": "@@ -1,3 +1,8 @@\n+2019-06-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_constant_expression): Handle conversion from\n+\tand then to the same type.\n+\n 2019-06-18  Jason Merrill  <jason@redhat.com>\n \n \t* constexpr.c (unshare_constructor): Add MEM_STAT_DECL."}, {"sha": "0f68a0c9fcac73ba1b6a479336ee0f35da8d009a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a8575c0cc6cc0004afaee095185775cd61f080/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a8575c0cc6cc0004afaee095185775cd61f080/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=02a8575c0cc6cc0004afaee095185775cd61f080", "patch": "@@ -5034,6 +5034,10 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \tif (*non_constant_p)\n \t  return t;\n \ttree type = TREE_TYPE (t);\n+\n+\tif (VOID_TYPE_P (type))\n+\t  return void_node;\n+\n \tif (TREE_CODE (op) == PTRMEM_CST\n \t    && !TYPE_PTRMEM_P (type))\n \t  op = cplus_expand_constant (op);\n@@ -5094,14 +5098,18 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t     conversion.  */\n \t  return fold (t);\n \n+\ttree sop;\n+\n \t/* Handle an array's bounds having been deduced after we built\n \t   the wrapping expression.  */\n \tif (same_type_ignoring_tlq_and_bounds_p (type, TREE_TYPE (op)))\n \t  r = op;\n+\telse if (sop = tree_strip_nop_conversions (op),\n+\t\t sop != op && (same_type_ignoring_tlq_and_bounds_p\n+\t\t\t       (type, TREE_TYPE (sop))))\n+\t  r = sop;\n \telse if (tcode == UNARY_PLUS_EXPR)\n \t  r = fold_convert (TREE_TYPE (t), op);\n-\telse if (VOID_TYPE_P (type))\n-\t  r = void_node;\n \telse\n \t  r = fold_build1 (tcode, type, op);\n "}]}