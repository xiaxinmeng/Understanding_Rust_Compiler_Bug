{"sha": "abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJmZjhlMDY5MWE1YjU2MGM0NjgwY2FjMGRkZjZlNmY2MTg0OWJjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-29T00:08:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-29T00:08:53Z"}, "message": "class.c (instantiate_type): Don't just return a known type if it's wrong.\n\n\t* class.c (instantiate_type): Don't just return a known type if\n \tit's wrong.\n\t* class.c (instantiate_type): Remove handling of FUNCTION_DECL\n\tsince that code could never be reached.\n\t* error.c (dump_decl): Avoid aborting in the midst of printing an\n\terror message about an illegal template declaration.\n\t* parse.y (structsp): Print an error message, rather than crashing,\n\twhen a class-head does not name a class.\n\t* pt.c (convert_nontype_argument):  Allow REAL_TYPE and COMPLEX_TYPE\n\ttemplate arguments as a g++ extension.\n\t* cp-tree.def (ALIGNOF_EXPR): New tree code.\n\t* decl2.c (grok_alignof): If processing_template_decl, just store\n\tthe expression.\n\t* typeck.c (c_alignof): Likewise.\n\t* decl2.c (build_expr_from_tree): Handle ALIGNOF_EXPR.\n\t* error.c (dump_expr): Likewise.\n\t* pt.c (tsubst_copy): Likewise.\n\t* tree.c (cp_tree_equal): Likewise.\n\t* pt.c (uses_template_parms): Correctly determine whether or not a\n\tSIZEOF_EXPR/ALIGNOF_EXPR uses template parameters so that constant\n\tfolding can be done.\n\nFrom-SVN: r17545", "tree": {"sha": "57fb4c8fa376c32ea452e23fa89d13704ca6602e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57fb4c8fa376c32ea452e23fa89d13704ca6602e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/comments", "author": null, "committer": null, "parents": [{"sha": "76d31c63736a0a5a0560fccf5d400c5a5b8a20b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d31c63736a0a5a0560fccf5d400c5a5b8a20b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d31c63736a0a5a0560fccf5d400c5a5b8a20b9"}], "stats": {"total": 851, "additions": 461, "deletions": 390}, "files": [{"sha": "6d033b7a3b03880238ae7e2b3b87a8feb528ff69", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -1,5 +1,34 @@\n+Wed Jan 28 23:14:44 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c (instantiate_type): Don't just return a known type if\n+ \tit's wrong.\n+\n Wed Jan 28 11:04:07 1998  Mark Mitchell  <mmitchell@usa.net>\n \n+\t* class.c (instantiate_type): Remove handling of FUNCTION_DECL\n+\tsince that code could never be reached.\n+\t\n+\t* error.c (dump_decl): Avoid aborting in the midst of printing an\n+\terror message about an illegal template declaration.\n+\n+\t* parse.y (structsp): Print an error message, rather than crashing,\n+\twhen a class-head does not name a class.\n+\n+\t* pt.c (convert_nontype_argument):  Allow REAL_TYPE and COMPLEX_TYPE\n+\ttemplate arguments as a g++ extension.\n+\t\n+\t* cp-tree.def (ALIGNOF_EXPR): New tree code.\n+\t* decl2.c (grok_alignof): If processing_template_decl, just store\n+\tthe expression.\n+\t* typeck.c (c_alignof): Likewise.\n+\t* decl2.c (build_expr_from_tree): Handle ALIGNOF_EXPR.\n+\t* error.c (dump_expr): Likewise.\n+\t* pt.c (tsubst_copy): Likewise.\n+\t* tree.c (cp_tree_equal): Likewise.\n+\t* pt.c (uses_template_parms): Correctly determine whether or not a\n+\tSIZEOF_EXPR/ALIGNOF_EXPR uses template parameters so that constant\n+\tfolding can be done.\n+\t\n \t* cp-tree.h (grok_enum_decls): Remove type parameter.\n \t* decl.c (grok_enum_decls): Likewise.\n \t* decl2.c (grok_x_components): Call grok_enum_decls"}, {"sha": "0e042ee2b5861f403b9559c5351b16c4366c406a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -4979,7 +4979,14 @@ instantiate_type (lhstype, rhs, complain)\n     }\n \n   if (TREE_TYPE (rhs) != NULL_TREE && ! (type_unknown_p (rhs)))\n-    return rhs;\n+    {\n+      if (comptypes (lhstype, TREE_TYPE (rhs), 1))\n+\treturn rhs;\n+      if (complain)\n+\tcp_error (\"argument of type `%T' does not match `%T'\",\n+\t\t  TREE_TYPE (rhs), lhstype);\n+      return error_mark_node;\n+    }\n \n   rhs = copy_node (rhs);\n \n@@ -5425,16 +5432,6 @@ instantiate_type (lhstype, rhs, complain)\n     case ERROR_MARK:\n       return error_mark_node;\n \n-    case FUNCTION_DECL:\n-      if (!comptypes (lhstype, TREE_TYPE (rhs), 1))\n-\t{\n-\t  if (complain)\n-\t    cp_error (\"%D is not of type %T\", rhs, lhstype);\n-\t  return error_mark_node;\n-\t}\n-      else\n-\treturn rhs;\n-\n     default:\n       my_friendly_abort (185);\n       return error_mark_node;"}, {"sha": "ab126fa707206797b8acaf475404d0f8bccea309", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -142,6 +142,7 @@ DEFTREECODE (CONST_CAST_EXPR, \"const_cast_expr\", '1', 1)\n DEFTREECODE (STATIC_CAST_EXPR, \"static_cast_expr\", '1', 1)\n DEFTREECODE (DYNAMIC_CAST_EXPR, \"dynamic_cast_expr\", '1', 1)\n DEFTREECODE (SIZEOF_EXPR, \"sizeof_expr\", '1', 1)\n+DEFTREECODE (ALIGNOF_EXPR, \"alignof_expr\", '1', 1)\n DEFTREECODE (ARROW_EXPR, \"arrow_expr\", 'e', 1)\n DEFTREECODE (DOTSTAR_EXPR, \"dotstar_expr\", 'e', 2)\n DEFTREECODE (TYPEID_EXPR, \"typeid_expr\", 'e', 1)"}, {"sha": "beae07ad047299fdffb5bee4b0a7bdd8c535684e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -1119,6 +1119,9 @@ grok_alignof (expr)\n   tree best, t;\n   int bestalign;\n \n+  if (processing_template_decl)\n+    return build_min (ALIGNOF_EXPR, sizetype, expr);\n+\n   if (TREE_CODE (expr) == COMPONENT_REF\n       && DECL_BIT_FIELD (TREE_OPERAND (expr, 1)))\n     error (\"`__alignof__' applied to a bit-field\");\n@@ -3505,11 +3508,12 @@ build_expr_from_tree (t)\n \t\t\t      build_expr_from_tree (TREE_OPERAND (t, 1)));\n \n     case SIZEOF_EXPR:\n+    case ALIGNOF_EXPR:\n       {\n \ttree r = build_expr_from_tree (TREE_OPERAND (t, 0));\n \tif (TREE_CODE_CLASS (TREE_CODE (r)) != 't')\n \t  r = TREE_TYPE (r);\n-\treturn c_sizeof (r);\n+\treturn TREE_CODE (t) == SIZEOF_EXPR ? c_sizeof (r) : c_alignof (r);\n       }\n \n     case MODOP_EXPR:"}, {"sha": "d21e722d959dd6db33881582d97196fc20467248", "filename": "gcc/cp/error.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -812,7 +812,8 @@ dump_decl (t, v)\n \t    break;\n \n \t  default:\n-\t    my_friendly_abort (353);\n+\t    /* This case can occur with some illegal code.  */\n+\t    dump_type (TREE_TYPE (t), v);\n \t  }\n       }\n       break;\n@@ -1586,7 +1587,14 @@ dump_expr (t, nop)\n       break;\n \n     case SIZEOF_EXPR:\n-      OB_PUTS (\"sizeof (\");\n+    case ALIGNOF_EXPR:\n+      if (TREE_CODE (t) == SIZEOF_EXPR)\n+\tOB_PUTS (\"sizeof (\");\n+      else \n+\t{\n+\t  my_friendly_assert (TREE_CODE (t) == ALIGNOF_EXPR, 0);\n+\t  OB_PUTS (\"__alignof__ (\");\n+\t}\n       if (TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (t, 0))) == 't')\n \tdump_type (TREE_OPERAND (t, 0), 0);\n       else"}, {"sha": "d9b4f301baa4fcfdab3d91e24dec814c107be4e8", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 377, "deletions": 369, "changes": 746, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -659,46 +659,46 @@ static const short yyrline[] = { 0,\n   2190,  2196,  2198,  2201,  2204,  2207,  2213,  2216,  2219,  2221,\n   2223,  2225,  2229,  2235,  2243,  2245,  2249,  2251,  2256,  2259,\n   2262,  2264,  2266,  2270,  2274,  2279,  2283,  2286,  2291,  2295,\n-  2298,  2301,  2305,  2341,  2347,  2356,  2368,  2370,  2373,  2375,\n-  2380,  2382,  2384,  2386,  2388,  2392,  2397,  2402,  2408,  2413,\n-  2418,  2420,  2424,  2429,  2432,  2439,  2467,  2473,  2475,  2478,\n-  2481,  2483,  2487,  2489,  2493,  2519,  2548,  2551,  2552,  2573,\n-  2596,  2598,  2602,  2628,  2637,  2726,  2733,  2736,  2744,  2755,\n-  2764,  2768,  2783,  2786,  2791,  2793,  2795,  2797,  2799,  2801,\n-  2806,  2812,  2814,  2817,  2820,  2822,  2833,  2838,  2841,  2843,\n-  2848,  2851,  2852,  2863,  2866,  2867,  2878,  2880,  2883,  2885,\n-  2888,  2895,  2903,  2910,  2916,  2922,  2930,  2934,  2939,  2943,\n-  2946,  2955,  2957,  2961,  2964,  2969,  2973,  2978,  2988,  2991,\n-  2995,  2999,  3007,  3012,  3018,  3021,  3023,  3025,  3031,  3034,\n-  3036,  3038,  3040,  3044,  3047,  3068,  3078,  3080,  3081,  3085,\n-  3090,  3093,  3095,  3097,  3099,  3103,  3109,  3112,  3114,  3116,\n-  3118,  3122,  3125,  3128,  3130,  3132,  3134,  3138,  3141,  3144,\n-  3146,  3148,  3150,  3157,  3168,  3172,  3177,  3181,  3186,  3188,\n-  3192,  3195,  3197,  3201,  3203,  3204,  3207,  3209,  3215,  3230,\n-  3236,  3242,  3256,  3258,  3262,  3278,  3284,  3299,  3306,  3312,\n-  3314,  3315,  3316,  3324,  3333,  3334,  3338,  3341,  3347,  3353,\n-  3356,  3358,  3360,  3362,  3366,  3370,  3374,  3377,  3382,  3385,\n-  3387,  3389,  3391,  3393,  3395,  3397,  3399,  3403,  3407,  3411,\n-  3415,  3416,  3418,  3420,  3422,  3424,  3426,  3428,  3430,  3432,\n-  3440,  3442,  3443,  3444,  3447,  3455,  3460,  3467,  3469,  3474,\n-  3476,  3479,  3493,  3496,  3499,  3508,  3520,  3531,  3551,  3561,\n-  3564,  3572,  3584,  3587,  3590,  3593,  3609,  3612,  3623,  3624,\n-  3628,  3643,  3662,  3674,  3688,  3702,  3715,  3734,  3752,  3771,\n-  3779,  3800,  3818,  3831,  3832,  3835,  3835,  3838,  3838,  3841,\n-  3841,  3847,  3853,  3856,  3861,  3868,  3877,  3886,  3895,  3903,\n-  3916,  3918,  3922,  3924,  3927,  3934,  3937,  3945,  3961,  3972,\n-  3984,  3986,  3989,  3999,  4009,  4020,  4022,  4024,  4027,  4044,\n-  4050,  4058,  4060,  4062,  4066,  4069,  4070,  4078,  4082,  4086,\n-  4089,  4090,  4096,  4099,  4102,  4104,  4108,  4113,  4116,  4126,\n-  4131,  4132,  4140,  4146,  4151,  4155,  4160,  4164,  4168,  4172,\n-  4177,  4188,  4202,  4206,  4209,  4211,  4215,  4219,  4222,  4225,\n-  4227,  4231,  4233,  4240,  4247,  4250,  4253,  4257,  4261,  4267,\n-  4271,  4276,  4278,  4281,  4286,  4292,  4303,  4306,  4308,  4312,\n-  4317,  4319,  4326,  4329,  4331,  4333,  4339,  4344,  4347,  4349,\n-  4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,  4369,\n-  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,  4389,\n-  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,  4409,\n-  4412,  4414\n+  2298,  2301,  2305,  2341,  2347,  2356,  2376,  2378,  2381,  2383,\n+  2388,  2390,  2392,  2394,  2396,  2400,  2405,  2410,  2416,  2421,\n+  2426,  2428,  2432,  2437,  2440,  2447,  2475,  2481,  2483,  2486,\n+  2489,  2491,  2495,  2497,  2501,  2527,  2556,  2559,  2560,  2581,\n+  2604,  2606,  2610,  2636,  2645,  2734,  2741,  2744,  2752,  2763,\n+  2772,  2776,  2791,  2794,  2799,  2801,  2803,  2805,  2807,  2809,\n+  2814,  2820,  2822,  2825,  2828,  2830,  2841,  2846,  2849,  2851,\n+  2856,  2859,  2860,  2871,  2874,  2875,  2886,  2888,  2891,  2893,\n+  2896,  2903,  2911,  2918,  2924,  2930,  2938,  2942,  2947,  2951,\n+  2954,  2963,  2965,  2969,  2972,  2977,  2981,  2986,  2996,  2999,\n+  3003,  3007,  3015,  3020,  3026,  3029,  3031,  3033,  3039,  3042,\n+  3044,  3046,  3048,  3052,  3055,  3076,  3086,  3088,  3089,  3093,\n+  3098,  3101,  3103,  3105,  3107,  3111,  3117,  3120,  3122,  3124,\n+  3126,  3130,  3133,  3136,  3138,  3140,  3142,  3146,  3149,  3152,\n+  3154,  3156,  3158,  3165,  3176,  3180,  3185,  3189,  3194,  3196,\n+  3200,  3203,  3205,  3209,  3211,  3212,  3215,  3217,  3223,  3238,\n+  3244,  3250,  3264,  3266,  3270,  3286,  3292,  3307,  3314,  3320,\n+  3322,  3323,  3324,  3332,  3341,  3342,  3346,  3349,  3355,  3361,\n+  3364,  3366,  3368,  3370,  3374,  3378,  3382,  3385,  3390,  3393,\n+  3395,  3397,  3399,  3401,  3403,  3405,  3407,  3411,  3415,  3419,\n+  3423,  3424,  3426,  3428,  3430,  3432,  3434,  3436,  3438,  3440,\n+  3448,  3450,  3451,  3452,  3455,  3463,  3468,  3475,  3477,  3482,\n+  3484,  3487,  3501,  3504,  3507,  3516,  3528,  3539,  3559,  3569,\n+  3572,  3580,  3592,  3595,  3598,  3601,  3617,  3620,  3631,  3632,\n+  3636,  3651,  3670,  3682,  3696,  3710,  3723,  3742,  3760,  3779,\n+  3787,  3808,  3826,  3839,  3840,  3843,  3843,  3846,  3846,  3849,\n+  3849,  3855,  3861,  3864,  3869,  3876,  3885,  3894,  3903,  3911,\n+  3924,  3926,  3930,  3932,  3935,  3942,  3945,  3953,  3969,  3980,\n+  3992,  3994,  3997,  4007,  4017,  4028,  4030,  4032,  4035,  4052,\n+  4058,  4066,  4068,  4070,  4074,  4077,  4078,  4086,  4090,  4094,\n+  4097,  4098,  4104,  4107,  4110,  4112,  4116,  4121,  4124,  4134,\n+  4139,  4140,  4148,  4154,  4159,  4163,  4168,  4172,  4176,  4180,\n+  4185,  4196,  4210,  4214,  4217,  4219,  4223,  4227,  4230,  4233,\n+  4235,  4239,  4241,  4248,  4255,  4258,  4261,  4265,  4269,  4275,\n+  4279,  4284,  4286,  4289,  4294,  4300,  4311,  4314,  4316,  4320,\n+  4325,  4327,  4334,  4337,  4339,  4341,  4347,  4352,  4355,  4357,\n+  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,\n+  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,\n+  4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,\n+  4420,  4422\n };\n #endif\n \n@@ -6233,91 +6233,99 @@ case 455:\n case 456:\n #line 2357 \"parse.y\"\n {\n-\t\t  yyval.ftype.t = yyvsp[0].ttype;\n \t\t  yyval.ftype.new_type_flag = 0;\n-\t\t  /* struct B: public A; is not accepted by the WP grammar.  */\n-\t\t  if (TYPE_BINFO_BASETYPES (yyval.ftype.t) && !TYPE_SIZE (yyval.ftype.t)\n-\t\t      && ! TYPE_BEING_DEFINED (yyval.ftype.t))\n-\t\t    cp_error (\"base clause without member specification for `%#T'\",\n-\t\t\t      yyval.ftype.t);\n+\t\t  if (TYPE_BINFO (yyvsp[0].ttype) == NULL_TREE)\n+\t\t    {\n+\t\t      cp_error (\"%T is not a class type\", yyvsp[0].ttype);\n+\t\t      yyval.ftype.t = error_mark_node;\n+\t\t    } \n+\t\t  else\n+\t\t    {\n+\t\t      yyval.ftype.t = yyvsp[0].ttype;\n+\t\t      /* struct B: public A; is not accepted by the WP grammar.  */\n+\t\t      if (TYPE_BINFO_BASETYPES (yyval.ftype.t) && !TYPE_SIZE (yyval.ftype.t)\n+\t\t\t  && ! TYPE_BEING_DEFINED (yyval.ftype.t))\n+\t\t\tcp_error (\"base clause without member specification for `%#T'\",\n+\t\t\t\t  yyval.ftype.t);\n+\t\t    }\n \t\t;\n     break;}\n case 460:\n-#line 2376 \"parse.y\"\n+#line 2384 \"parse.y\"\n { if (pedantic && !in_system_header)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 462:\n-#line 2383 \"parse.y\"\n+#line 2391 \"parse.y\"\n { error (\"storage class specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 463:\n-#line 2385 \"parse.y\"\n+#line 2393 \"parse.y\"\n { error (\"type specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 464:\n-#line 2387 \"parse.y\"\n+#line 2395 \"parse.y\"\n { error (\"type qualifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 465:\n-#line 2389 \"parse.y\"\n+#line 2397 \"parse.y\"\n { error (\"no body nor ';' separates two class, struct or union declarations\"); ;\n     break;}\n case 466:\n-#line 2394 \"parse.y\"\n+#line 2402 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 467:\n-#line 2399 \"parse.y\"\n+#line 2407 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 468:\n-#line 2404 \"parse.y\"\n+#line 2412 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 469:\n-#line 2409 \"parse.y\"\n+#line 2417 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-3].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 470:\n-#line 2414 \"parse.y\"\n+#line 2422 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 471:\n-#line 2419 \"parse.y\"\n+#line 2427 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 472:\n-#line 2421 \"parse.y\"\n+#line 2429 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 473:\n-#line 2426 \"parse.y\"\n+#line 2434 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, NULL_TREE, 0); ;\n     break;}\n case 474:\n-#line 2431 \"parse.y\"\n+#line 2439 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, NULL_TREE, 1); ;\n     break;}\n case 475:\n-#line 2434 \"parse.y\"\n+#line 2442 \"parse.y\"\n { \n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t  if (yyvsp[0].ttype)\n                     xref_basetypes (current_aggr, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); \n \t\t;\n     break;}\n case 476:\n-#line 2440 \"parse.y\"\n+#line 2448 \"parse.y\"\n { \n \t\t  yyval.ttype = TREE_TYPE (yyvsp[-1].ttype);\n \t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n@@ -6345,28 +6353,28 @@ case 476:\n \t\t;\n     break;}\n case 477:\n-#line 2469 \"parse.y\"\n+#line 2477 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), NULL_TREE, 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 480:\n-#line 2480 \"parse.y\"\n+#line 2488 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 481:\n-#line 2482 \"parse.y\"\n+#line 2490 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 482:\n-#line 2484 \"parse.y\"\n+#line 2492 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 484:\n-#line 2490 \"parse.y\"\n+#line 2498 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 485:\n-#line 2495 \"parse.y\"\n+#line 2503 \"parse.y\"\n {\n \t\t  tree type = TREE_TYPE (yyvsp[0].ttype);\n \t\t  if (! is_aggr_type (type, 1))\n@@ -6393,7 +6401,7 @@ case 485:\n \t\t;\n     break;}\n case 486:\n-#line 2520 \"parse.y\"\n+#line 2528 \"parse.y\"\n {\n \t\t  tree type = TREE_TYPE (yyvsp[0].ttype);\n \t\t  if (current_aggr == signature_type_node)\n@@ -6422,11 +6430,11 @@ case 486:\n \t\t;\n     break;}\n case 487:\n-#line 2550 \"parse.y\"\n+#line 2558 \"parse.y\"\n { yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 489:\n-#line 2553 \"parse.y\"\n+#line 2561 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6449,7 +6457,7 @@ case 489:\n \t\t;\n     break;}\n case 490:\n-#line 2574 \"parse.y\"\n+#line 2582 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6472,13 +6480,13 @@ case 490:\n \t\t;\n     break;}\n case 492:\n-#line 2599 \"parse.y\"\n+#line 2607 \"parse.y\"\n { if (yyval.ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    sorry (\"non-virtual access\");\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 493:\n-#line 2603 \"parse.y\"\n+#line 2611 \"parse.y\"\n { int err = 0;\n \t\t  if (yyvsp[-1].ttype == access_protected_node)\n \t\t    {\n@@ -6506,7 +6514,7 @@ case 493:\n \t\t;\n     break;}\n case 494:\n-#line 2629 \"parse.y\"\n+#line 2637 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    sorry (\"non-virtual access\");\n \t\t  if (yyval.ttype == access_public_node)\n@@ -6515,7 +6523,7 @@ case 494:\n \t\t    yyval.ttype = access_private_virtual_node; ;\n     break;}\n case 495:\n-#line 2639 \"parse.y\"\n+#line 2647 \"parse.y\"\n { tree t = yyvsp[-1].ttype;\n \t\t  push_obstacks_nochange ();\n \t\t  end_temporary_allocation ();\n@@ -6603,17 +6611,17 @@ case 495:\n \t\t;\n     break;}\n case 496:\n-#line 2728 \"parse.y\"\n+#line 2736 \"parse.y\"\n {\n \t\t    yyval.ttype = build_self_reference ();\n \t\t;\n     break;}\n case 497:\n-#line 2735 \"parse.y\"\n+#line 2743 \"parse.y\"\n { if (yyval.ttype) yyval.ttype = build_tree_list (access_public_node, yyval.ttype); ;\n     break;}\n case 498:\n-#line 2737 \"parse.y\"\n+#line 2745 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    yyval.ttype = build_tree_list (access_public_node, yyvsp[0].ttype);\n@@ -6623,7 +6631,7 @@ case 498:\n \t\t;\n     break;}\n case 499:\n-#line 2745 \"parse.y\"\n+#line 2753 \"parse.y\"\n {\n \t\t  tree visspec = yyvsp[-2].ttype;\n \n@@ -6636,19 +6644,19 @@ case 499:\n \t\t;\n     break;}\n case 500:\n-#line 2756 \"parse.y\"\n+#line 2764 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access specifier not allowed in signature\");\n \t\t;\n     break;}\n case 501:\n-#line 2766 \"parse.y\"\n+#line 2774 \"parse.y\"\n { if (yyval.ttype == void_type_node) yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 502:\n-#line 2769 \"parse.y\"\n+#line 2777 \"parse.y\"\n { /* In pushdecl, we created a reverse list of names\n \t\t     in this binding level.  Make sure that the chain\n \t\t     of what we're trying to add isn't the item itself\n@@ -6663,91 +6671,91 @@ case 502:\n \t\t;\n     break;}\n case 503:\n-#line 2785 \"parse.y\"\n+#line 2793 \"parse.y\"\n { ;\n     break;}\n case 504:\n-#line 2787 \"parse.y\"\n+#line 2795 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 505:\n-#line 2792 \"parse.y\"\n+#line 2800 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 506:\n-#line 2794 \"parse.y\"\n+#line 2802 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 507:\n-#line 2796 \"parse.y\"\n+#line 2804 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 508:\n-#line 2798 \"parse.y\"\n+#line 2806 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 509:\n-#line 2800 \"parse.y\"\n+#line 2808 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 510:\n-#line 2802 \"parse.y\"\n+#line 2810 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 511:\n-#line 2811 \"parse.y\"\n+#line 2819 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 512:\n-#line 2813 \"parse.y\"\n+#line 2821 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 513:\n-#line 2815 \"parse.y\"\n+#line 2823 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 514:\n-#line 2818 \"parse.y\"\n+#line 2826 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 515:\n-#line 2821 \"parse.y\"\n+#line 2829 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 516:\n-#line 2823 \"parse.y\"\n+#line 2831 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 517:\n-#line 2834 \"parse.y\"\n+#line 2842 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 518:\n-#line 2839 \"parse.y\"\n+#line 2847 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 519:\n-#line 2842 \"parse.y\"\n+#line 2850 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 520:\n-#line 2844 \"parse.y\"\n+#line 2852 \"parse.y\"\n { yyval.ttype = finish_member_template_decl (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 521:\n-#line 2850 \"parse.y\"\n+#line 2858 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 523:\n-#line 2853 \"parse.y\"\n+#line 2861 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6758,11 +6766,11 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2865 \"parse.y\"\n+#line 2873 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 526:\n-#line 2868 \"parse.y\"\n+#line 2876 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6773,102 +6781,102 @@ case 526:\n \t\t;\n     break;}\n case 531:\n-#line 2890 \"parse.y\"\n+#line 2898 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 532:\n-#line 2896 \"parse.y\"\n+#line 2904 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 533:\n-#line 2905 \"parse.y\"\n+#line 2913 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 534:\n-#line 2911 \"parse.y\"\n+#line 2919 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 535:\n-#line 2917 \"parse.y\"\n+#line 2925 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 536:\n-#line 2923 \"parse.y\"\n+#line 2931 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 537:\n-#line 2932 \"parse.y\"\n+#line 2940 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 538:\n-#line 2935 \"parse.y\"\n+#line 2943 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 539:\n-#line 2941 \"parse.y\"\n+#line 2949 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 540:\n-#line 2944 \"parse.y\"\n+#line 2952 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 541:\n-#line 2947 \"parse.y\"\n+#line 2955 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 543:\n-#line 2958 \"parse.y\"\n+#line 2966 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 544:\n-#line 2963 \"parse.y\"\n+#line 2971 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE); ;\n     break;}\n case 545:\n-#line 2965 \"parse.y\"\n+#line 2973 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 546:\n-#line 2971 \"parse.y\"\n+#line 2979 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 547:\n-#line 2974 \"parse.y\"\n+#line 2982 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 548:\n-#line 2979 \"parse.y\"\n+#line 2987 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6878,71 +6886,71 @@ case 548:\n \t\t;\n     break;}\n case 549:\n-#line 2990 \"parse.y\"\n+#line 2998 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 550:\n-#line 2992 \"parse.y\"\n+#line 3000 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 551:\n-#line 2997 \"parse.y\"\n+#line 3005 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 552:\n-#line 3000 \"parse.y\"\n+#line 3008 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 553:\n-#line 3009 \"parse.y\"\n+#line 3017 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 554:\n-#line 3014 \"parse.y\"\n+#line 3022 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 555:\n-#line 3020 \"parse.y\"\n+#line 3028 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 556:\n-#line 3022 \"parse.y\"\n+#line 3030 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 557:\n-#line 3024 \"parse.y\"\n+#line 3032 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 558:\n-#line 3026 \"parse.y\"\n+#line 3034 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 559:\n-#line 3033 \"parse.y\"\n+#line 3041 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 560:\n-#line 3035 \"parse.y\"\n+#line 3043 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 561:\n-#line 3037 \"parse.y\"\n+#line 3045 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 562:\n-#line 3039 \"parse.y\"\n+#line 3047 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 563:\n-#line 3041 \"parse.y\"\n+#line 3049 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 565:\n-#line 3049 \"parse.y\"\n+#line 3057 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6964,7 +6972,7 @@ case 565:\n \t\t;\n     break;}\n case 566:\n-#line 3069 \"parse.y\"\n+#line 3077 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6974,97 +6982,97 @@ case 566:\n \t\t;\n     break;}\n case 569:\n-#line 3082 \"parse.y\"\n+#line 3090 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 570:\n-#line 3087 \"parse.y\"\n+#line 3095 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 571:\n-#line 3092 \"parse.y\"\n+#line 3100 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 572:\n-#line 3094 \"parse.y\"\n+#line 3102 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 573:\n-#line 3096 \"parse.y\"\n+#line 3104 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 574:\n-#line 3098 \"parse.y\"\n+#line 3106 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 575:\n-#line 3100 \"parse.y\"\n+#line 3108 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 577:\n-#line 3111 \"parse.y\"\n+#line 3119 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 578:\n-#line 3113 \"parse.y\"\n+#line 3121 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 579:\n-#line 3115 \"parse.y\"\n+#line 3123 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 580:\n-#line 3117 \"parse.y\"\n+#line 3125 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 581:\n-#line 3119 \"parse.y\"\n+#line 3127 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 583:\n-#line 3127 \"parse.y\"\n+#line 3135 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 584:\n-#line 3129 \"parse.y\"\n+#line 3137 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 585:\n-#line 3131 \"parse.y\"\n+#line 3139 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 586:\n-#line 3133 \"parse.y\"\n+#line 3141 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 587:\n-#line 3135 \"parse.y\"\n+#line 3143 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 589:\n-#line 3143 \"parse.y\"\n+#line 3151 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 590:\n-#line 3145 \"parse.y\"\n+#line 3153 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 591:\n-#line 3147 \"parse.y\"\n+#line 3155 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 592:\n-#line 3149 \"parse.y\"\n+#line 3157 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 593:\n-#line 3151 \"parse.y\"\n+#line 3159 \"parse.y\"\n { if (OP0 (yyval.ttype) != current_class_type)\n \t\t    {\n \t\t      push_nested_class (OP0 (yyval.ttype), 3);\n@@ -7073,7 +7081,7 @@ case 593:\n \t\t;\n     break;}\n case 594:\n-#line 3158 \"parse.y\"\n+#line 3166 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  if (yyvsp[-1].ttype != current_class_type)\n@@ -7084,47 +7092,47 @@ case 594:\n \t\t;\n     break;}\n case 595:\n-#line 3170 \"parse.y\"\n+#line 3178 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 596:\n-#line 3173 \"parse.y\"\n+#line 3181 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 597:\n-#line 3179 \"parse.y\"\n+#line 3187 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 598:\n-#line 3182 \"parse.y\"\n+#line 3190 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 600:\n-#line 3189 \"parse.y\"\n+#line 3197 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 601:\n-#line 3194 \"parse.y\"\n+#line 3202 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 602:\n-#line 3196 \"parse.y\"\n+#line 3204 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 603:\n-#line 3198 \"parse.y\"\n+#line 3206 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 608:\n-#line 3210 \"parse.y\"\n+#line 3218 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 609:\n-#line 3217 \"parse.y\"\n+#line 3225 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -7140,31 +7148,31 @@ case 609:\n \t\t;\n     break;}\n case 610:\n-#line 3231 \"parse.y\"\n+#line 3239 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 611:\n-#line 3237 \"parse.y\"\n+#line 3245 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 612:\n-#line 3243 \"parse.y\"\n+#line 3251 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 614:\n-#line 3259 \"parse.y\"\n+#line 3267 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 615:\n-#line 3264 \"parse.y\"\n+#line 3272 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7179,14 +7187,14 @@ case 615:\n \t\t;\n     break;}\n case 616:\n-#line 3280 \"parse.y\"\n+#line 3288 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 617:\n-#line 3285 \"parse.y\"\n+#line 3293 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7201,35 +7209,35 @@ case 617:\n \t\t;\n     break;}\n case 618:\n-#line 3301 \"parse.y\"\n+#line 3309 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 619:\n-#line 3307 \"parse.y\"\n+#line 3315 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 620:\n-#line 3313 \"parse.y\"\n+#line 3321 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 623:\n-#line 3317 \"parse.y\"\n+#line 3325 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 624:\n-#line 3326 \"parse.y\"\n+#line 3334 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7239,156 +7247,156 @@ case 624:\n \t\t;\n     break;}\n case 626:\n-#line 3335 \"parse.y\"\n+#line 3343 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 627:\n-#line 3340 \"parse.y\"\n+#line 3348 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 628:\n-#line 3342 \"parse.y\"\n+#line 3350 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 629:\n-#line 3349 \"parse.y\"\n+#line 3357 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 630:\n-#line 3355 \"parse.y\"\n+#line 3363 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 631:\n-#line 3357 \"parse.y\"\n+#line 3365 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 632:\n-#line 3359 \"parse.y\"\n+#line 3367 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 3361 \"parse.y\"\n+#line 3369 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 634:\n-#line 3363 \"parse.y\"\n+#line 3371 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 635:\n-#line 3367 \"parse.y\"\n+#line 3375 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 637:\n-#line 3376 \"parse.y\"\n+#line 3384 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 638:\n-#line 3378 \"parse.y\"\n+#line 3386 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 639:\n-#line 3384 \"parse.y\"\n+#line 3392 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 640:\n-#line 3386 \"parse.y\"\n+#line 3394 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 641:\n-#line 3388 \"parse.y\"\n+#line 3396 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 642:\n-#line 3390 \"parse.y\"\n+#line 3398 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 643:\n-#line 3392 \"parse.y\"\n+#line 3400 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 644:\n-#line 3394 \"parse.y\"\n+#line 3402 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 645:\n-#line 3396 \"parse.y\"\n+#line 3404 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 646:\n-#line 3398 \"parse.y\"\n+#line 3406 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 647:\n-#line 3400 \"parse.y\"\n+#line 3408 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 648:\n-#line 3404 \"parse.y\"\n+#line 3412 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 650:\n-#line 3413 \"parse.y\"\n+#line 3421 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 652:\n-#line 3417 \"parse.y\"\n+#line 3425 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 3419 \"parse.y\"\n+#line 3427 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 654:\n-#line 3421 \"parse.y\"\n+#line 3429 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 655:\n-#line 3423 \"parse.y\"\n+#line 3431 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 656:\n-#line 3425 \"parse.y\"\n+#line 3433 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 657:\n-#line 3427 \"parse.y\"\n+#line 3435 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 658:\n-#line 3429 \"parse.y\"\n+#line 3437 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 659:\n-#line 3431 \"parse.y\"\n+#line 3439 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 660:\n-#line 3433 \"parse.y\"\n+#line 3441 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 666:\n-#line 3457 \"parse.y\"\n+#line 3465 \"parse.y\"\n { do_pushlevel (); ;\n     break;}\n case 667:\n-#line 3462 \"parse.y\"\n+#line 3470 \"parse.y\"\n { yyval.ttype = do_poplevel (); ;\n     break;}\n case 669:\n-#line 3470 \"parse.y\"\n+#line 3478 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 672:\n-#line 3481 \"parse.y\"\n+#line 3489 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7399,11 +7407,11 @@ case 672:\n \t\t;\n     break;}\n case 673:\n-#line 3495 \"parse.y\"\n+#line 3503 \"parse.y\"\n {;\n     break;}\n case 675:\n-#line 3501 \"parse.y\"\n+#line 3509 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7413,7 +7421,7 @@ case 675:\n \t\t;\n     break;}\n case 676:\n-#line 3509 \"parse.y\"\n+#line 3517 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7425,7 +7433,7 @@ case 676:\n \t\t;\n     break;}\n case 677:\n-#line 3522 \"parse.y\"\n+#line 3530 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7437,7 +7445,7 @@ case 677:\n \t\t;\n     break;}\n case 678:\n-#line 3532 \"parse.y\"\n+#line 3540 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7458,7 +7466,7 @@ case 678:\n \t\t;\n     break;}\n case 679:\n-#line 3551 \"parse.y\"\n+#line 3559 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7469,11 +7477,11 @@ case 679:\n \t\t;\n     break;}\n case 680:\n-#line 3563 \"parse.y\"\n+#line 3571 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 681:\n-#line 3565 \"parse.y\"\n+#line 3573 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7483,7 +7491,7 @@ case 681:\n \t\t;\n     break;}\n case 682:\n-#line 3573 \"parse.y\"\n+#line 3581 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7495,15 +7503,15 @@ case 682:\n \t\t;\n     break;}\n case 683:\n-#line 3586 \"parse.y\"\n+#line 3594 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 685:\n-#line 3592 \"parse.y\"\n+#line 3600 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 686:\n-#line 3594 \"parse.y\"\n+#line 3602 \"parse.y\"\n {\n \t\t  tree expr = yyvsp[-1].ttype;\n \t\t  if (! processing_template_decl)\n@@ -7521,11 +7529,11 @@ case 686:\n \t\t  finish_stmt (); ;\n     break;}\n case 687:\n-#line 3610 \"parse.y\"\n+#line 3618 \"parse.y\"\n { if (! processing_template_decl) expand_start_else (); ;\n     break;}\n case 688:\n-#line 3612 \"parse.y\"\n+#line 3620 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7538,17 +7546,17 @@ case 688:\n \t\t;\n     break;}\n case 689:\n-#line 3623 \"parse.y\"\n+#line 3631 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 690:\n-#line 3625 \"parse.y\"\n+#line 3633 \"parse.y\"\n { if (! processing_template_decl) expand_end_cond ();\n \t\t  do_poplevel ();\n \t\t  finish_stmt (); ;\n     break;}\n case 691:\n-#line 3629 \"parse.y\"\n+#line 3637 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7565,7 +7573,7 @@ case 691:\n \t\t;\n     break;}\n case 692:\n-#line 3644 \"parse.y\"\n+#line 3652 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7586,7 +7594,7 @@ case 692:\n \t\t;\n     break;}\n case 693:\n-#line 3663 \"parse.y\"\n+#line 3671 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7600,7 +7608,7 @@ case 693:\n \t\t;\n     break;}\n case 694:\n-#line 3675 \"parse.y\"\n+#line 3683 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7616,7 +7624,7 @@ case 694:\n \t\t;\n     break;}\n case 695:\n-#line 3689 \"parse.y\"\n+#line 3697 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7632,7 +7640,7 @@ case 695:\n \t\t;\n     break;}\n case 696:\n-#line 3703 \"parse.y\"\n+#line 3711 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-5].ttype, 1) = yyvsp[-1].ttype;\n@@ -7647,7 +7655,7 @@ case 696:\n \t\t;\n     break;}\n case 697:\n-#line 3716 \"parse.y\"\n+#line 3724 \"parse.y\"\n { if (processing_template_decl)\n \t\t    {\n \t\t      yyval.ttype = build_min_nt (FOR_STMT, NULL_TREE, NULL_TREE, \n@@ -7668,7 +7676,7 @@ case 697:\n \t\t;\n     break;}\n case 698:\n-#line 3735 \"parse.y\"\n+#line 3743 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7688,7 +7696,7 @@ case 698:\n \t\t;\n     break;}\n case 699:\n-#line 3753 \"parse.y\"\n+#line 3761 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7709,15 +7717,15 @@ case 699:\n \t\t;\n     break;}\n case 700:\n-#line 3774 \"parse.y\"\n+#line 3782 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-9].ttype, 2) = yyvsp[-1].ttype;\n \t\t  push_momentary ();\n \t\t;\n     break;}\n case 701:\n-#line 3780 \"parse.y\"\n+#line 3788 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7740,7 +7748,7 @@ case 701:\n \t\t  finish_stmt (); ;\n     break;}\n case 702:\n-#line 3801 \"parse.y\"\n+#line 3809 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7759,7 +7767,7 @@ case 702:\n \t\t;\n     break;}\n case 703:\n-#line 3818 \"parse.y\"\n+#line 3826 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7774,59 +7782,59 @@ case 703:\n \t\t;\n     break;}\n case 704:\n-#line 3831 \"parse.y\"\n+#line 3839 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 705:\n-#line 3833 \"parse.y\"\n+#line 3841 \"parse.y\"\n { do_case (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 707:\n-#line 3836 \"parse.y\"\n+#line 3844 \"parse.y\"\n { do_case (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 709:\n-#line 3839 \"parse.y\"\n+#line 3847 \"parse.y\"\n { do_case (NULL_TREE, NULL_TREE); ;\n     break;}\n case 711:\n-#line 3842 \"parse.y\"\n+#line 3850 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (BREAK_STMT));\n \t\t  else if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 712:\n-#line 3848 \"parse.y\"\n+#line 3856 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (CONTINUE_STMT));\n \t\t  else if (! expand_continue_loop (0))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 713:\n-#line 3854 \"parse.y\"\n+#line 3862 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 714:\n-#line 3857 \"parse.y\"\n+#line 3865 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 715:\n-#line 3862 \"parse.y\"\n+#line 3870 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-2].ttype)) yyvsp[-2].ttype = combine_strings (yyvsp[-2].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  expand_asm (yyvsp[-2].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 716:\n-#line 3869 \"parse.y\"\n+#line 3877 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-4].ttype)) yyvsp[-4].ttype = combine_strings (yyvsp[-4].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n@@ -7836,7 +7844,7 @@ case 716:\n \t\t;\n     break;}\n case 717:\n-#line 3878 \"parse.y\"\n+#line 3886 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-6].ttype)) yyvsp[-6].ttype = combine_strings (yyvsp[-6].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n@@ -7846,7 +7854,7 @@ case 717:\n \t\t;\n     break;}\n case 718:\n-#line 3888 \"parse.y\"\n+#line 3896 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-8].ttype)) yyvsp[-8].ttype = combine_strings (yyvsp[-8].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n@@ -7856,7 +7864,7 @@ case 718:\n \t\t;\n     break;}\n case 719:\n-#line 3896 \"parse.y\"\n+#line 3904 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7866,7 +7874,7 @@ case 719:\n \t\t;\n     break;}\n case 720:\n-#line 3904 \"parse.y\"\n+#line 3912 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7881,33 +7889,33 @@ case 720:\n \t\t;\n     break;}\n case 721:\n-#line 3917 \"parse.y\"\n+#line 3925 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 722:\n-#line 3919 \"parse.y\"\n+#line 3927 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 723:\n-#line 3923 \"parse.y\"\n+#line 3931 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 725:\n-#line 3929 \"parse.y\"\n+#line 3937 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 726:\n-#line 3935 \"parse.y\"\n+#line 3943 \"parse.y\"\n { expand_start_all_catch (); ;\n     break;}\n case 727:\n-#line 3937 \"parse.y\"\n+#line 3945 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7916,7 +7924,7 @@ case 727:\n \t\t;\n     break;}\n case 728:\n-#line 3947 \"parse.y\"\n+#line 3955 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7932,7 +7940,7 @@ case 728:\n \t\t;\n     break;}\n case 729:\n-#line 3961 \"parse.y\"\n+#line 3969 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7945,7 +7953,7 @@ case 729:\n \t\t;\n     break;}\n case 730:\n-#line 3972 \"parse.y\"\n+#line 3980 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7958,7 +7966,7 @@ case 730:\n \t\t;\n     break;}\n case 733:\n-#line 3991 \"parse.y\"\n+#line 3999 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7969,7 +7977,7 @@ case 733:\n \t\t;\n     break;}\n case 734:\n-#line 4000 \"parse.y\"\n+#line 4008 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7980,7 +7988,7 @@ case 734:\n \t\t;\n     break;}\n case 735:\n-#line 4009 \"parse.y\"\n+#line 4017 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7993,17 +8001,17 @@ case 735:\n \t\t;\n     break;}\n case 739:\n-#line 4029 \"parse.y\"\n+#line 4037 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 740:\n-#line 4045 \"parse.y\"\n+#line 4053 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 741:\n-#line 4052 \"parse.y\"\n+#line 4060 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -8012,129 +8020,129 @@ case 741:\n \t\t;\n     break;}\n case 742:\n-#line 4059 \"parse.y\"\n+#line 4067 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 743:\n-#line 4061 \"parse.y\"\n+#line 4069 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 744:\n-#line 4063 \"parse.y\"\n+#line 4071 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 745:\n-#line 4068 \"parse.y\"\n+#line 4076 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 747:\n-#line 4071 \"parse.y\"\n+#line 4079 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 748:\n-#line 4080 \"parse.y\"\n+#line 4088 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 749:\n-#line 4083 \"parse.y\"\n+#line 4091 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 750:\n-#line 4088 \"parse.y\"\n+#line 4096 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 752:\n-#line 4091 \"parse.y\"\n+#line 4099 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 753:\n-#line 4098 \"parse.y\"\n+#line 4106 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 756:\n-#line 4105 \"parse.y\"\n+#line 4113 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 757:\n-#line 4110 \"parse.y\"\n+#line 4118 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 758:\n-#line 4115 \"parse.y\"\n+#line 4123 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 759:\n-#line 4117 \"parse.y\"\n+#line 4125 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 760:\n-#line 4128 \"parse.y\"\n+#line 4136 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 762:\n-#line 4133 \"parse.y\"\n+#line 4141 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ftype.t, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1; \n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 763:\n-#line 4142 \"parse.y\"\n+#line 4150 \"parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyval.ttype, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 764:\n-#line 4147 \"parse.y\"\n+#line 4155 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 765:\n-#line 4152 \"parse.y\"\n+#line 4160 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 766:\n-#line 4156 \"parse.y\"\n+#line 4164 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); \n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 767:\n-#line 4161 \"parse.y\"\n+#line 4169 \"parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 768:\n-#line 4165 \"parse.y\"\n+#line 4173 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 769:\n-#line 4169 \"parse.y\"\n+#line 4177 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 770:\n-#line 4173 \"parse.y\"\n+#line 4181 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 771:\n-#line 4178 \"parse.y\"\n+#line 4186 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8147,7 +8155,7 @@ case 771:\n \t\t;\n     break;}\n case 772:\n-#line 4189 \"parse.y\"\n+#line 4197 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8160,98 +8168,98 @@ case 772:\n \t\t;\n     break;}\n case 773:\n-#line 4204 \"parse.y\"\n+#line 4212 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 774:\n-#line 4206 \"parse.y\"\n+#line 4214 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 777:\n-#line 4217 \"parse.y\"\n+#line 4225 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 778:\n-#line 4220 \"parse.y\"\n+#line 4228 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 779:\n-#line 4223 \"parse.y\"\n+#line 4231 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 780:\n-#line 4226 \"parse.y\"\n+#line 4234 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 781:\n-#line 4228 \"parse.y\"\n+#line 4236 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 783:\n-#line 4234 \"parse.y\"\n+#line 4242 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 784:\n-#line 4244 \"parse.y\"\n+#line 4252 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 785:\n-#line 4248 \"parse.y\"\n+#line 4256 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 786:\n-#line 4251 \"parse.y\"\n+#line 4259 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 787:\n-#line 4254 \"parse.y\"\n+#line 4262 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 788:\n-#line 4258 \"parse.y\"\n+#line 4266 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 789:\n-#line 4262 \"parse.y\"\n+#line 4270 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 790:\n-#line 4269 \"parse.y\"\n+#line 4277 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 791:\n-#line 4272 \"parse.y\"\n+#line 4280 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 794:\n-#line 4283 \"parse.y\"\n+#line 4291 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 795:\n-#line 4288 \"parse.y\"\n+#line 4296 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 796:\n-#line 4293 \"parse.y\"\n+#line 4301 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -8262,188 +8270,188 @@ case 796:\n \t\t;\n     break;}\n case 797:\n-#line 4305 \"parse.y\"\n+#line 4313 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 798:\n-#line 4307 \"parse.y\"\n+#line 4315 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 799:\n-#line 4309 \"parse.y\"\n+#line 4317 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 800:\n-#line 4314 \"parse.y\"\n+#line 4322 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 802:\n-#line 4320 \"parse.y\"\n+#line 4328 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 803:\n-#line 4328 \"parse.y\"\n+#line 4336 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 804:\n-#line 4330 \"parse.y\"\n+#line 4338 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 805:\n-#line 4332 \"parse.y\"\n+#line 4340 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 806:\n-#line 4334 \"parse.y\"\n+#line 4342 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 807:\n-#line 4341 \"parse.y\"\n+#line 4349 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 808:\n-#line 4346 \"parse.y\"\n+#line 4354 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 809:\n-#line 4348 \"parse.y\"\n+#line 4356 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 810:\n-#line 4350 \"parse.y\"\n+#line 4358 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 811:\n-#line 4352 \"parse.y\"\n+#line 4360 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 812:\n-#line 4354 \"parse.y\"\n+#line 4362 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 813:\n-#line 4356 \"parse.y\"\n+#line 4364 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 814:\n-#line 4358 \"parse.y\"\n+#line 4366 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 815:\n-#line 4360 \"parse.y\"\n+#line 4368 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 816:\n-#line 4362 \"parse.y\"\n+#line 4370 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 817:\n-#line 4364 \"parse.y\"\n+#line 4372 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 818:\n-#line 4366 \"parse.y\"\n+#line 4374 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 819:\n-#line 4368 \"parse.y\"\n+#line 4376 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 820:\n-#line 4370 \"parse.y\"\n+#line 4378 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 821:\n-#line 4372 \"parse.y\"\n+#line 4380 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 822:\n-#line 4374 \"parse.y\"\n+#line 4382 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 823:\n-#line 4376 \"parse.y\"\n+#line 4384 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 824:\n-#line 4378 \"parse.y\"\n+#line 4386 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 825:\n-#line 4380 \"parse.y\"\n+#line 4388 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 826:\n-#line 4382 \"parse.y\"\n+#line 4390 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 827:\n-#line 4384 \"parse.y\"\n+#line 4392 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 828:\n-#line 4386 \"parse.y\"\n+#line 4394 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 829:\n-#line 4388 \"parse.y\"\n+#line 4396 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 830:\n-#line 4390 \"parse.y\"\n+#line 4398 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 831:\n-#line 4392 \"parse.y\"\n+#line 4400 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 832:\n-#line 4394 \"parse.y\"\n+#line 4402 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 833:\n-#line 4396 \"parse.y\"\n+#line 4404 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 834:\n-#line 4398 \"parse.y\"\n+#line 4406 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 835:\n-#line 4400 \"parse.y\"\n+#line 4408 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 836:\n-#line 4402 \"parse.y\"\n+#line 4410 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 837:\n-#line 4404 \"parse.y\"\n+#line 4412 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 838:\n-#line 4406 \"parse.y\"\n+#line 4414 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 839:\n-#line 4408 \"parse.y\"\n+#line 4416 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 840:\n-#line 4410 \"parse.y\"\n+#line 4418 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 841:\n-#line 4413 \"parse.y\"\n+#line 4421 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 842:\n-#line 4415 \"parse.y\"\n+#line 4423 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8644,7 +8652,7 @@ case 842:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 4418 \"parse.y\"\n+#line 4426 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "13a728b111c1242f9ad9bb520d0782f5762121c1", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -2355,13 +2355,21 @@ structsp:\n \t\t}\n \t| class_head  %prec EMPTY\n \t\t{\n-\t\t  $$.t = $1;\n \t\t  $$.new_type_flag = 0;\n-\t\t  /* struct B: public A; is not accepted by the WP grammar.  */\n-\t\t  if (TYPE_BINFO_BASETYPES ($$.t) && !TYPE_SIZE ($$.t)\n-\t\t      && ! TYPE_BEING_DEFINED ($$.t))\n-\t\t    cp_error (\"base clause without member specification for `%#T'\",\n-\t\t\t      $$.t);\n+\t\t  if (TYPE_BINFO ($1) == NULL_TREE)\n+\t\t    {\n+\t\t      cp_error (\"%T is not a class type\", $1);\n+\t\t      $$.t = error_mark_node;\n+\t\t    } \n+\t\t  else\n+\t\t    {\n+\t\t      $$.t = $1;\n+\t\t      /* struct B: public A; is not accepted by the WP grammar.  */\n+\t\t      if (TYPE_BINFO_BASETYPES ($$.t) && !TYPE_SIZE ($$.t)\n+\t\t\t  && ! TYPE_BEING_DEFINED ($$.t))\n+\t\t\tcp_error (\"base clause without member specification for `%#T'\",\n+\t\t\t\t  $$.t);\n+\t\t    }\n \t\t}\n \t;\n "}, {"sha": "8a1620370c876b6dfeca2a9732162d33146fdea1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -1498,6 +1498,14 @@ convert_nontype_argument (type, expr)\n \t just converting one integral constant expression to another.  */\n       return digest_init (type, expr, (tree*) 0);\n \n+    case REAL_TYPE:\n+    case COMPLEX_TYPE:\n+      /* These are g++ extensions.  */\n+      if (TREE_CODE (expr_type) != TREE_CODE (type))\n+\treturn error_mark_node;\n+\n+      return digest_init (type, expr, (tree*) 0);\n+\n     case POINTER_TYPE:\n       {\n \ttree type_pointed_to = TREE_TYPE (type);\n@@ -2539,12 +2547,15 @@ uses_template_parms (t)\n     case CONST_CAST_EXPR:\n     case STATIC_CAST_EXPR:\n     case DYNAMIC_CAST_EXPR:\n-    case SIZEOF_EXPR:\n     case ARROW_EXPR:\n     case DOTSTAR_EXPR:\n     case TYPEID_EXPR:\n       return 1;\n \n+    case SIZEOF_EXPR:\n+    case ALIGNOF_EXPR:\n+      return uses_template_parms (TREE_OPERAND (t, 0));\n+\n     default:\n       switch (TREE_CODE_CLASS (TREE_CODE (t)))\n \t{\n@@ -4004,6 +4015,7 @@ tsubst_copy (t, args, nargs, in_decl)\n     case ADDR_EXPR:\n     case CONVERT_EXPR:      /* Unary + */\n     case SIZEOF_EXPR:\n+    case ALIGNOF_EXPR:\n     case ARROW_EXPR:\n     case THROW_EXPR:\n     case TYPEID_EXPR:"}, {"sha": "16bcb1357351fc98a265e44b59c2ac70fed97d3a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -2074,6 +2074,7 @@ cp_tree_equal (t1, t2)\n \t&& TEMPLATE_CONST_LEVEL (t1) == TEMPLATE_CONST_LEVEL (t2);\n \n     case SIZEOF_EXPR:\n+    case ALIGNOF_EXPR:\n       if (TREE_CODE (TREE_OPERAND (t1, 0)) != TREE_CODE (TREE_OPERAND (t2, 0)))\n \treturn 0;\n       if (TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (t1, 0))) == 't')"}, {"sha": "5009644eabbf4e72956c3689eee91952b6acc06b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abff8e0691a5b560c4680cac0ddf6e6f61849bc8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=abff8e0691a5b560c4680cac0ddf6e6f61849bc8", "patch": "@@ -1474,6 +1474,9 @@ c_alignof (type)\n   enum tree_code code = TREE_CODE (type);\n   tree t;\n \n+  if (processing_template_decl)\n+    return build_min (ALIGNOF_EXPR, sizetype, type);\n+\n   if (code == FUNCTION_TYPE || code == METHOD_TYPE)\n     return size_int (FUNCTION_BOUNDARY / BITS_PER_UNIT);\n "}]}