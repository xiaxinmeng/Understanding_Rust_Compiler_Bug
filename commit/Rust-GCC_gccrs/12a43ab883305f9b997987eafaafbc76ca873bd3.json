{"sha": "12a43ab883305f9b997987eafaafbc76ca873bd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJhNDNhYjg4MzMwNWY5Yjk5Nzk4N2VhZmFhZmJjNzZjYTg3M2JkMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-05T09:54:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-05T09:54:29Z"}, "message": "re PR tree-optimization/56270 (loop over array of struct float causes compiler error: segmentation fault)\n\n2013-03-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56270\n\t* tree-vect-slp.c (vect_schedule_slp): Clear vectorized stmts\n\tof loads after scheduling an SLP instance.\n\n\t* gcc.dg/vect/slp-38.c: New testcase.\n\nFrom-SVN: r196458", "tree": {"sha": "33e115b10984ffb5d04ca13783805d102a1c7ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33e115b10984ffb5d04ca13783805d102a1c7ae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12a43ab883305f9b997987eafaafbc76ca873bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a43ab883305f9b997987eafaafbc76ca873bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a43ab883305f9b997987eafaafbc76ca873bd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a43ab883305f9b997987eafaafbc76ca873bd3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db4138e3e20a776377b904b4ca1eae0c0186dbd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db4138e3e20a776377b904b4ca1eae0c0186dbd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db4138e3e20a776377b904b4ca1eae0c0186dbd6"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "b09e4270e0cbec26794a177e5625f97770694c84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12a43ab883305f9b997987eafaafbc76ca873bd3", "patch": "@@ -1,3 +1,9 @@\n+2013-03-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56270\n+\t* tree-vect-slp.c (vect_schedule_slp): Clear vectorized stmts\n+\tof loads after scheduling an SLP instance.\n+\n 2013-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (dg_target_exps): Add aarch64.exp, epiphany.exp and"}, {"sha": "6cbe85ee00a208cebf76e78515cdf84ebb724192", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12a43ab883305f9b997987eafaafbc76ca873bd3", "patch": "@@ -1,3 +1,8 @@\n+2013-03-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56270\n+\t* gcc.dg/vect/slp-38.c: New testcase.\n+\n 2013-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/56494"}, {"sha": "a387f5d0e0632a4a519c292ce05fcd463f42127d", "filename": "gcc/testsuite/gcc.dg/vect/slp-38.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-38.c?ref=12a43ab883305f9b997987eafaafbc76ca873bd3", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+\n+typedef struct {\n+    float l, h;\n+} tFPinterval;\n+\n+tFPinterval X[1024];\n+tFPinterval Y[1024];\n+tFPinterval Z[1024];\n+\n+void Compute(void)\n+{\n+  int d;\n+  for (d= 0; d < 1024; d++)\n+    {\n+      Y[d].l= X[d].l + X[d].h;\n+      Y[d].h= Y[d].l;\n+      Z[d].l= X[d].l;\n+      Z[d].h= X[d].h;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 1 \"vect\" { target { vect_float && vect_perm } } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3b2fc8013bad76e4913360fd7a35393c4eca3178", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a43ab883305f9b997987eafaafbc76ca873bd3/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=12a43ab883305f9b997987eafaafbc76ca873bd3", "patch": "@@ -3141,7 +3141,8 @@ vect_schedule_slp (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo)\n {\n   vec<slp_instance> slp_instances;\n   slp_instance instance;\n-  unsigned int i, vf;\n+  slp_tree loads_node;\n+  unsigned int i, j, vf;\n   bool is_store = false;\n \n   if (loop_vinfo)\n@@ -3160,6 +3161,14 @@ vect_schedule_slp (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo)\n       /* Schedule the tree of INSTANCE.  */\n       is_store = vect_schedule_slp_instance (SLP_INSTANCE_TREE (instance),\n                                              instance, vf);\n+\n+      /* Clear STMT_VINFO_VEC_STMT of all loads.  With shared loads\n+         between SLP instances we fail to properly initialize the\n+\t vectorized SLP stmts and confuse different load permutations.  */\n+      FOR_EACH_VEC_ELT (SLP_INSTANCE_LOADS (instance), j, loads_node)\n+\tSTMT_VINFO_VEC_STMT\n+\t  (vinfo_for_stmt (SLP_TREE_SCALAR_STMTS (loads_node)[0])) = NULL;\n+\n       if (dump_enabled_p ())\n \tdump_printf_loc (MSG_NOTE, vect_location,\n                          \"vectorizing stmts using SLP.\");"}]}