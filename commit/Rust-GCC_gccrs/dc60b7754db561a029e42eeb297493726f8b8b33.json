{"sha": "dc60b7754db561a029e42eeb297493726f8b8b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2MGI3NzU0ZGI1NjFhMDI5ZTQyZWViMjk3NDkzNzI2ZjhiOGIzMw==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2007-08-07T18:33:16Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2007-08-07T18:33:16Z"}, "message": "configure.ac: Define HAVE_GNU_AS if $gas_flag is yes.\n\n\n2007-08-07  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* configure.ac: Define HAVE_GNU_AS if $gas_flag is yes.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* gcc.c [HAVE_GNU_AS]: Add \"%{v} %{w:-W} %{I*} \" to asm_options\n\tspec string.\n\nFrom-SVN: r127275", "tree": {"sha": "8f287ee437c41a3903ba4afe49b27a7b7cc676d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f287ee437c41a3903ba4afe49b27a7b7cc676d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc60b7754db561a029e42eeb297493726f8b8b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc60b7754db561a029e42eeb297493726f8b8b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc60b7754db561a029e42eeb297493726f8b8b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc60b7754db561a029e42eeb297493726f8b8b33/comments", "author": null, "committer": null, "parents": [{"sha": "992669047c537067eaf71906950ef76f620ba2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992669047c537067eaf71906950ef76f620ba2da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992669047c537067eaf71906950ef76f620ba2da"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "498460c58c356f4f56c86b91728488597c76dcfc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc60b7754db561a029e42eeb297493726f8b8b33", "patch": "@@ -1,3 +1,11 @@\n+2007-08-07  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* configure.ac: Define HAVE_GNU_AS if $gas_flag is yes.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* gcc.c [HAVE_GNU_AS]: Add \"%{v} %{w:-W} %{I*} \" to asm_options\n+\tspec string.\n+\n 2007-08-07  Ian Lance Taylor  <iant@google.com>\n \n \t* lower-subreg.c (resolve_clobber): If the clobber has a LIBCALL"}, {"sha": "80f0dac7b23eb6b866cda0221217d950eff3d32b", "filename": "gcc/config.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=dc60b7754db561a029e42eeb297493726f8b8b33", "patch": "@@ -121,7 +121,8 @@\n #endif\n \n \n-/* Define if you want all gimple types to be verified after gimplifiation. */\n+/* Define if you want all gimple types to be verified after gimplifiation.\n+   This is cheap. */\n #ifndef USED_FOR_TARGET\n #undef ENABLE_TYPES_CHECKING\n #endif\n@@ -894,6 +895,12 @@\n #endif\n \n \n+/* Define if using GNU as. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GNU_AS\n+#endif\n+\n+\n /* Define if using GNU ld. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GNU_LD"}, {"sha": "31bfc400c6e6230889121e39a7dcb510de6a23e1", "filename": "gcc/configure", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=dc60b7754db561a029e42eeb297493726f8b8b33", "patch": "@@ -1834,6 +1834,13 @@ _ACEOF\n \n fi\n \n+gnu_as=`if test x\"$gas_flag\" = x\"yes\"; then echo 1; else echo 0; fi`\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_GNU_AS $gnu_as\n+_ACEOF\n+\n+\n echo \"$as_me:$LINENO: checking whether a default assembler was specified\" >&5\n echo $ECHO_N \"checking whether a default assembler was specified... $ECHO_C\" >&6\n if test x\"${DEFAULT_ASSEMBLER+set}\" = x\"set\"; then"}, {"sha": "e1dc518a2a760800c1b8c66580105e42933ed078", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=dc60b7754db561a029e42eeb297493726f8b8b33", "patch": "@@ -246,6 +246,9 @@ if test x\"${DEFAULT_ASSEMBLER+set}\" = x\"set\"; then\n \t[Define to enable the use of a default assembler.])\n fi\n \n+gnu_as=`if test x\"$gas_flag\" = x\"yes\"; then echo 1; else echo 0; fi`\n+AC_DEFINE_UNQUOTED(HAVE_GNU_AS, $gnu_as, [Define if using GNU as.])\n+\n AC_MSG_CHECKING([whether a default assembler was specified])\n if test x\"${DEFAULT_ASSEMBLER+set}\" = x\"set\"; then\n   if test x\"$gas_flag\" = x\"no\"; then"}, {"sha": "fc85e2b23d057269d3f11f567ae00d3dcec487cc", "filename": "gcc/gcc.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc60b7754db561a029e42eeb297493726f8b8b33/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=dc60b7754db561a029e42eeb297493726f8b8b33", "patch": "@@ -824,8 +824,13 @@ static const char *cc1_options =\n  %{coverage:-fprofile-arcs -ftest-coverage}\";\n \n static const char *asm_options =\n-\"%{ftarget-help:%:print-asm-header()} \\\n-%a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\";\n+\"%{--target-help:%:print-asm-header()} \"\n+#if HAVE_GNU_AS\n+/* If GNU AS is used, then convert -w (no warnings), -I, and -v\n+   to the assembler equivalents.  */\n+\"%{v} %{w:-W} %{I*} \"\n+#endif\n+\"%a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\";\n \n static const char *invoke_as =\n #ifdef AS_NEEDS_DASH_FOR_PIPED_INPUT"}]}