{"sha": "9a509bfef189d50872954b9735fd12f506fd47df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1MDliZmVmMTg5ZDUwODcyOTU0Yjk3MzVmZDEyZjUwNmZkNDdkZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T03:37:06Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T03:37:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r880", "tree": {"sha": "4712974c7566ff26c24368a8c8d883f85758cfce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4712974c7566ff26c24368a8c8d883f85758cfce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a509bfef189d50872954b9735fd12f506fd47df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a509bfef189d50872954b9735fd12f506fd47df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a509bfef189d50872954b9735fd12f506fd47df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a509bfef189d50872954b9735fd12f506fd47df/comments", "author": null, "committer": null, "parents": [{"sha": "0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "bb6917906fb13c2cfac64e4e5f1d96cf5545785c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a509bfef189d50872954b9735fd12f506fd47df/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a509bfef189d50872954b9735fd12f506fd47df/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=9a509bfef189d50872954b9735fd12f506fd47df", "patch": "@@ -2568,17 +2568,9 @@ init_decl_processing ()\n       temp = builtin_function (\"abort\", void_ftype_any, NOT_BUILT_IN, 0);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n-#if 0\n-      /* Suppress error if redefined as a non-function.  */\n-      DECL_BUILT_IN_NONANSI (temp) = 1;\n-#endif\n       temp = builtin_function (\"exit\", void_ftype_any, NOT_BUILT_IN, 0);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n-#if 0\n-      /* Suppress error if redefined as a non-function.  */\n-      DECL_BUILT_IN_NONANSI (temp) = 1;\n-#endif\n     }\n \n #if 0\n@@ -2618,6 +2610,11 @@ builtin_function (name, type, function_code, library_name)\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n   TREE_EXTERNAL (decl) = 1;\n   TREE_PUBLIC (decl) = 1;\n+  /* If -traditional, permit redefining a builtin function any way you like.\n+     (Though really, if the program redefines these functions,\n+     it probably won't work right unless compiled with -fno-builtin.)  */\n+  if (flag_traditional && name[0] != '_')\n+    DECL_BUILT_IN_NONANSI (decl) = 1;\n   if (library_name)\n     DECL_ASSEMBLER_NAME (decl) = get_identifier (library_name);\n   make_decl_rtl (decl, 0, 1);"}]}