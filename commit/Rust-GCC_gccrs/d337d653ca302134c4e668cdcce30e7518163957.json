{"sha": "d337d653ca302134c4e668cdcce30e7518163957", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzN2Q2NTNjYTMwMjEzNGM0ZTY2OGNkY2NlMzBlNzUxODE2Mzk1Nw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-03-27T22:23:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-03-27T22:23:12Z"}, "message": "i960.md (ret): Set PC.\n\n\t* i960.md (ret): Set PC.\n\t(nonlocal_goto): Fix expander.\n\t* builtins.c (epxand_builin_longjmp): Check that we've emitted\n\tsome jump or call.\n\nFrom-SVN: r51478", "tree": {"sha": "2ce9927ec32f655ae24af08763c7f453ed92da21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce9927ec32f655ae24af08763c7f453ed92da21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d337d653ca302134c4e668cdcce30e7518163957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d337d653ca302134c4e668cdcce30e7518163957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d337d653ca302134c4e668cdcce30e7518163957", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d337d653ca302134c4e668cdcce30e7518163957/comments", "author": null, "committer": null, "parents": [{"sha": "218aa620c4a1f7c2fadd6605d9ed5caee604079b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218aa620c4a1f7c2fadd6605d9ed5caee604079b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218aa620c4a1f7c2fadd6605d9ed5caee604079b"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "d59469ea7bd2a4f0963f668ecdb0c1c3e8705f5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d337d653ca302134c4e668cdcce30e7518163957/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d337d653ca302134c4e668cdcce30e7518163957/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d337d653ca302134c4e668cdcce30e7518163957", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 27 23:19:30 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i960.md (ret): Set PC.\n+\t(nonlocal_goto): Fix expander.\n+\t* builtins.c (epxand_builin_longjmp): Check that we've emitted\n+\tsome jump or call.\n+\n Wed Mar 27 23:11:35 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* optabs.c (emit_no_conflict_block, emit_libcall_block): Avoid nesting"}, {"sha": "eb117ceecfe9abc84937b50856c241eb5ce0c536", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d337d653ca302134c4e668cdcce30e7518163957/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d337d653ca302134c4e668cdcce30e7518163957/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=d337d653ca302134c4e668cdcce30e7518163957", "patch": "@@ -639,7 +639,7 @@ void\n expand_builtin_longjmp (buf_addr, value)\n      rtx buf_addr, value;\n {\n-  rtx fp, lab, stack, insn;\n+  rtx fp, lab, stack, insn, last;\n   enum machine_mode sa_mode = STACK_SAVEAREA_MODE (SAVE_NONLOCAL);\n \n   if (setjmp_alias_set == -1)\n@@ -662,6 +662,7 @@ expand_builtin_longjmp (buf_addr, value)\n \n   current_function_calls_longjmp = 1;\n \n+  last = get_last_insn ();\n #ifdef HAVE_builtin_longjmp\n   if (HAVE_builtin_longjmp)\n     emit_insn (gen_builtin_longjmp (buf_addr));\n@@ -707,6 +708,8 @@ expand_builtin_longjmp (buf_addr, value)\n      internal exception handling use only.  */\n   for (insn = get_last_insn (); insn; insn = PREV_INSN (insn))\n     {\n+      if (insn == last)\n+\tabort ();\n       if (GET_CODE (insn) == JUMP_INSN)\n \t{\n \t  REG_NOTES (insn) = alloc_EXPR_LIST (REG_NON_LOCAL_GOTO, const0_rtx,"}, {"sha": "5755598345f70774efe5b052b75160b2092d4042", "filename": "gcc/config/i960/i960.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d337d653ca302134c4e668cdcce30e7518163957/gcc%2Fconfig%2Fi960%2Fi960.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d337d653ca302134c4e668cdcce30e7518163957/gcc%2Fconfig%2Fi960%2Fi960.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.md?ref=d337d653ca302134c4e668cdcce30e7518163957", "patch": "@@ -2365,8 +2365,7 @@\n ;; stack pointer, frame pointer, previous frame pointer and the return\n ;; instruction pointer.\n (define_insn \"ret\"\n-  [(use (reg:SI 16))\n-   (unspec_volatile [(const_int 0)] 3)]\n+  [(set (pc) (unspec_volatile [(reg:SI 16)] 3))]\n   \"\"\n   \"ret\"\n   [(set_attr \"type\" \"branch\")\n@@ -2424,7 +2423,7 @@\n      because we are very careful to ret from the exact save area in\n      use during the original call.  */\n \n-  emit_insn (gen_ret ());\n+  emit_jump_insn (gen_ret ());\n   emit_barrier ();\n   DONE;\n }\")"}]}