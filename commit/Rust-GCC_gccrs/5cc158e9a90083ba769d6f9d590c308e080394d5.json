{"sha": "5cc158e9a90083ba769d6f9d590c308e080394d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjMTU4ZTlhOTAwODNiYTc2OWQ2ZjlkNTkwYzMwOGUwODAzOTRkNQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2015-05-16T16:49:46Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2015-05-16T16:49:46Z"}, "message": "d-demangle.c (dlang_identifier): Check encoded length of identifier to verify strncmp matches entire string.\n\nlibiberty/ChangeLog:\n\n2015-05-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* d-demangle.c (dlang_identifier): Check encoded length of identifier\n\tto verify strncmp matches entire string.\n\t* testsuite/d-demangle-expected: Fix wrong test for postblit symbol.\n\nFrom-SVN: r223243", "tree": {"sha": "849e12cd5674304735a6ea98e6f186f5925764b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/849e12cd5674304735a6ea98e6f186f5925764b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc158e9a90083ba769d6f9d590c308e080394d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc158e9a90083ba769d6f9d590c308e080394d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc158e9a90083ba769d6f9d590c308e080394d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc158e9a90083ba769d6f9d590c308e080394d5/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa66ced4bffb93caec395411f69af70d9b4ca6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa66ced4bffb93caec395411f69af70d9b4ca6ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa66ced4bffb93caec395411f69af70d9b4ca6ec"}], "stats": {"total": 141, "additions": 82, "deletions": 59}, "files": [{"sha": "37425c8df81ffcac80e1896df3df86d29204735e", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5cc158e9a90083ba769d6f9d590c308e080394d5", "patch": "@@ -1,3 +1,9 @@\n+2015-05-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_identifier): Check encoded length of identifier\n+\tto verify strncmp matches entire string.\n+\t* testsuite/d-demangle-expected: Fix wrong test for postblit symbol.\n+\n 2015-05-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-demangle.c (dlang_type_modifiers): New function."}, {"sha": "011e62bc6620d2a4f662763bff15f59209a6250f", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 75, "deletions": 58, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=5cc158e9a90083ba769d6f9d590c308e080394d5", "patch": "@@ -672,65 +672,82 @@ dlang_identifier (string *decl, const char *mangled)\n \t  return NULL;\n \t}\n \n-      if (strncmp (mangled, \"__ctor\", i) == 0)\n+      switch (i)\n \t{\n-\t  /* Constructor symbol for a class/struct.  */\n-\t  string_append (decl, \"this\");\n-\t  mangled += i;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__dtor\", i) == 0)\n-\t{\n-\t  /* Destructor symbol for a class/struct.  */\n-\t  string_append (decl, \"~this\");\n-\t  mangled += i;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__postblit\", i) == 0)\n-\t{\n-\t  /* Postblit symbol for a struct.  */\n-\t  string_append (decl, \"this(this)\");\n-\t  mangled += i;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__initZ\", i+1) == 0)\n-\t{\n-\t  /* The static initialiser for a given symbol.  */\n-\t  string_append (decl, \"init$\");\n-\t  mangled += i + 1;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__ClassZ\", i+1) == 0)\n-\t{\n-\t  /* The classinfo symbol for a given class.  */\n-\t  string_prepend (decl, \"ClassInfo for \");\n-\t  string_setlength (decl, string_length (decl) - 1);\n-\t  mangled += i + 1;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__vtblZ\", i+1) == 0)\n-\t{\n-\t  /* The vtable symbol for a given class.  */\n-\t  string_prepend (decl, \"vtable for \");\n-\t  string_setlength (decl, string_length (decl) - 1);\n-\t  mangled += i + 1;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__InterfaceZ\", i+1) == 0)\n-\t{\n-\t  /* The interface symbol for a given class.  */\n-\t  string_prepend (decl, \"Interface for \");\n-\t  string_setlength (decl, string_length (decl) - 1);\n-\t  mangled += i + 1;\n-\t  return mangled;\n-\t}\n-      else if (strncmp (mangled, \"__ModuleInfoZ\", i+1) == 0)\n-\t{\n-\t  /* The ModuleInfo symbol for a given module.  */\n-\t  string_prepend (decl, \"ModuleInfo for \");\n-\t  string_setlength (decl, string_length (decl) - 1);\n-\t  mangled += i + 1;\n-\t  return mangled;\n+\tcase 6:\n+\t  if (strncmp (mangled, \"__ctor\", i) == 0)\n+\t    {\n+\t      /* Constructor symbol for a class/struct.  */\n+\t      string_append (decl, \"this\");\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  else if (strncmp (mangled, \"__dtor\", i) == 0)\n+\t    {\n+\t      /* Destructor symbol for a class/struct.  */\n+\t      string_append (decl, \"~this\");\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  else if (strncmp (mangled, \"__initZ\", i+1) == 0)\n+\t    {\n+\t      /* The static initialiser for a given symbol.  */\n+\t      string_append (decl, \"init$\");\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  else if (strncmp (mangled, \"__vtblZ\", i+1) == 0)\n+\t    {\n+\t      /* The vtable symbol for a given class.  */\n+\t      string_prepend (decl, \"vtable for \");\n+\t      string_setlength (decl, string_length (decl) - 1);\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  break;\n+\n+\tcase 7:\n+\t  if (strncmp (mangled, \"__ClassZ\", i+1) == 0)\n+\t    {\n+\t      /* The classinfo symbol for a given class.  */\n+\t      string_prepend (decl, \"ClassInfo for \");\n+\t      string_setlength (decl, string_length (decl) - 1);\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  break;\n+\n+\tcase 10:\n+\t  if (strncmp (mangled, \"__postblitMFZ\", i+3) == 0)\n+\t    {\n+\t      /* Postblit symbol for a struct.  */\n+\t      string_append (decl, \"this(this)\");\n+\t      mangled += i + 3;\n+\t      return mangled;\n+\t    }\n+\t  break;\n+\n+\tcase 11:\n+\t  if (strncmp (mangled, \"__InterfaceZ\", i+1) == 0)\n+\t    {\n+\t      /* The interface symbol for a given class.  */\n+\t      string_prepend (decl, \"Interface for \");\n+\t      string_setlength (decl, string_length (decl) - 1);\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  break;\n+\n+\tcase 12:\n+\t  if (strncmp (mangled, \"__ModuleInfoZ\", i+1) == 0)\n+\t    {\n+\t      /* The ModuleInfo symbol for a given module.  */\n+\t      string_prepend (decl, \"ModuleInfo for \");\n+\t      string_setlength (decl, string_length (decl) - 1);\n+\t      mangled += i;\n+\t      return mangled;\n+\t    }\n+\t  break;\n \t}\n \n       string_appendn (decl, mangled, i);"}, {"sha": "b0b9ca0b49d6370accbe8ba756a215bb0dd9f6ea", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc158e9a90083ba769d6f9d590c308e080394d5/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=5cc158e9a90083ba769d6f9d590c308e080394d5", "patch": "@@ -502,7 +502,7 @@ _D8demangle4test6__dtorMFZv\n demangle.test.~this()\n #\n --format=dlang\n-_D8demangle4test6__postblitMFZv\n+_D8demangle4test10__postblitMFZv\n demangle.test.this(this)\n #\n --format=dlang"}]}