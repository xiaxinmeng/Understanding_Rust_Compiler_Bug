{"sha": "3be639f7468517f519a91a618ca0cf40ba76ba74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JlNjM5Zjc0Njg1MTdmNTE5YTkxYTYxOGNhMGNmNDBiYTc2YmE3NA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-06-24T21:16:25Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-06-24T21:16:25Z"}, "message": "defaults.h (CAN_ELIMINATE): Provide default.\n\n\t* defaults.h (CAN_ELIMINATE): Provide default.\n\t* doc/tm.texi (CAN_ELIMINATE): Revise documentation.\n\t* config/alpha/alpha.h (CAN_ELIMINATE): Delete.\n\t* config/m32c/m32c.h (CAN_ELIMINATE): Delete.\n\t* config/spu/spu.h (CAN_ELIMINATE): Delete.\n\t* config/xtensa/xtensa.h (CAN_ELIMINATE): Delete.\n\t* config/moxie/moxie.h (CAN_ELIMINATE): Delete.\n\t* config/cris/cris.h (CAN_ELIMINATE): Delete.\n\t* config/mn10300/mn10300.h (CAN_ELIMINATE): Delete.\n\t* config/pa/pa64-linux.h (CAN_ELIMINATE): Delete.\n\t* config/mmix/mmix.h (CAN_ELIMINATE): Delete.\n\nFrom-SVN: r148919", "tree": {"sha": "90090f3f1cb712cc6f22a6eff65e39c9ba91686f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90090f3f1cb712cc6f22a6eff65e39c9ba91686f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3be639f7468517f519a91a618ca0cf40ba76ba74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be639f7468517f519a91a618ca0cf40ba76ba74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be639f7468517f519a91a618ca0cf40ba76ba74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be639f7468517f519a91a618ca0cf40ba76ba74/comments", "author": null, "committer": null, "parents": [{"sha": "70b28664eecba0763db09b28b6a81f38f9cec1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b28664eecba0763db09b28b6a81f38f9cec1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b28664eecba0763db09b28b6a81f38f9cec1d8"}], "stats": {"total": 76, "additions": 29, "deletions": 47}, "files": [{"sha": "27d436cf98ffccd2affc05e7937e3d55a5611409", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,3 +1,17 @@\n+2009-06-24  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* defaults.h (CAN_ELIMINATE): Provide default.\n+\t* doc/tm.texi (CAN_ELIMINATE): Revise documentation.\n+\t* config/alpha/alpha.h (CAN_ELIMINATE): Delete.\n+\t* config/m32c/m32c.h (CAN_ELIMINATE): Delete.\n+\t* config/spu/spu.h (CAN_ELIMINATE): Delete.\n+\t* config/xtensa/xtensa.h (CAN_ELIMINATE): Delete.\n+\t* config/moxie/moxie.h (CAN_ELIMINATE): Delete.\n+\t* config/cris/cris.h (CAN_ELIMINATE): Delete.\n+\t* config/mn10300/mn10300.h (CAN_ELIMINATE): Delete.\n+\t* config/pa/pa64-linux.h (CAN_ELIMINATE): Delete.\n+\t* config/mmix/mmix.h (CAN_ELIMINATE): Delete.\n+\n 2009-06-24  DJ Delorie  <dj@redhat.com>\n \n \t* mep-ext-cop.cpu: Fix copyright notice."}, {"sha": "5b74fe1a886902f2d704bfba02651f5f38aabc98", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GCC.\n@@ -690,14 +691,6 @@ extern int alpha_memory_latency;\n  { FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM},\t     \\\n  { FRAME_POINTER_REGNUM, HARD_FRAME_POINTER_REGNUM}}\n \n-/* Given FROM and TO register numbers, say whether this elimination is allowed.\n-   Frame pointer elimination is automatically handled.\n-\n-   All eliminations are valid since the cases where FP can't be\n-   eliminated are already handled.  */\n-\n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n /* Round up to a multiple of 16 bytes.  */\n #define ALPHA_ROUND(X) (((X) + 15) & ~ 15)\n "}, {"sha": "d908cfbc124fd86d3c845a32f38285f3bb4105e3", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for GCC.  Part of the machine description for CRIS.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008,\n+   2009 Free Software Foundation, Inc.\n    Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n \n This file is part of GCC.\n@@ -860,10 +860,6 @@ enum reg_class\n   {ARG_POINTER_REGNUM, FRAME_POINTER_REGNUM},\t\\\n   {FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}}\n \n-/* We need not worry about when the frame-pointer is required for other\n-   reasons.  */\n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n  (OFFSET) = cris_initial_elimination_offset (FROM, TO)\n "}, {"sha": "691bc994ca565d784221af7404e80c82b192ae6a", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -498,7 +498,6 @@ enum reg_class\n    {AP_REGNO, FB_REGNO}, \\\n    {FB_REGNO, SP_REGNO}}\n \n-#define CAN_ELIMINATE(FROM,TO) 1\n #define INITIAL_ELIMINATION_OFFSET(FROM,TO,VAR) \\\n \t(VAR) = m32c_initial_elimination_offset(FROM,TO)\n "}, {"sha": "03a747f8cfe45a2caef2a6cfdf74bb642b27a473", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for MMIX.\n-   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2007, 2008\n+   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Hans-Peter Nilsson (hp@bitrange.com)\n \n@@ -598,10 +598,6 @@ enum reg_class\n   {ARG_POINTER_REGNUM, FRAME_POINTER_REGNUM},\t\\\n   {FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}}\n \n-/* We need not worry about when the frame-pointer is required for other\n-   reasons; GCC takes care of those cases.  */\n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n  (OFFSET) = mmix_initial_elimination_offset (FROM, TO)\n "}, {"sha": "7d15e05810b8c201796b51e64a6a9933b57ff0d0", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -484,8 +484,6 @@ enum reg_class {\n  { ARG_POINTER_REGNUM, FRAME_POINTER_REGNUM},\t\\\n  { FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}}\n \n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n   OFFSET = initial_offset (FROM, TO)\n "}, {"sha": "cbe8eed0f6167e286eed7ceddd37ff0347cae585", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -460,14 +460,6 @@ do\t\t\t\t\t\t\t\t\t      \\\n  { ARG_POINTER_REGNUM,   HARD_FRAME_POINTER_REGNUM }}\t\t\t\n #endif\n \n-/* A C expression that returns nonzero if the compiler is allowed to\n-   try to replace register number FROM-REG with register number\n-   TO-REG.  This macro need only be defined if `ELIMINABLE_REGS' is\n-   defined, and will usually be the constant 1, since most of the\n-   cases preventing register elimination are things that the compiler\n-   already knows about.  */\n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n /* This macro is similar to `INITIAL_FRAME_POINTER_OFFSET'.  It\n    specifies the initial difference between the specified pair of\n    registers.  This macro must be defined if `ELIMINABLE_REGS' is"}, {"sha": "f698f3fbe42a082f79681a762cf2b6bce8ddb1fa", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for PA_RISC with ELF format\n-   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC."}, {"sha": "174d7c54dec2bb6ab7469a9032a45f03c5d79135", "filename": "gcc/config/pa/pa64-linux.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpa%2Fpa64-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpa%2Fpa64-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-linux.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -28,12 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n   {ARG_POINTER_REGNUM,\t FRAME_POINTER_REGNUM},\t\t\t\t\\\n }\n \n-/* A C expression that returns nonzero if the compiler is allowed to try to\n-   replace register number FROM with register number TO.  The frame pointer\n-   is automatically handled.  */\n-\n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n /* This macro is similar to `INITIAL_FRAME_POINTER_OFFSET'.  It\n    specifies the initial difference between the specified pair of\n    registers.  This macro must be defined if `ELIMINABLE_REGS' is"}, {"sha": "c08b89d67eb9d3505983c9d95e7f948bbaef9cb8", "filename": "gcc/config/picochip/picochip.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpicochip%2Fpicochip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fpicochip%2Fpicochip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -413,8 +413,6 @@ extern const enum reg_class picochip_regno_reg_class[FIRST_PSEUDO_REGISTER];\n   {{ARG_POINTER_REGNUM, STACK_POINTER_REGNUM},\t\t\t\t\\\n    {FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}}\n \n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n #define INITIAL_ELIMINATION_OFFSET(FROM,TO,OFFSET) \\\n   OFFSET = initial_elimination_offset(FROM, TO);\n "}, {"sha": "6b56a4546fbf14dab1687680580bdf8de9da6d48", "filename": "gcc/config/spu/spu.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fspu%2Fspu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fspu%2Fspu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -320,8 +320,6 @@ targetm.resolve_overloaded_builtin = spu_resolve_overloaded_builtin;\t\\\n   {FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM},\t\t\t\t\\\n   {FRAME_POINTER_REGNUM, HARD_FRAME_POINTER_REGNUM}}\n \n-#define CAN_ELIMINATE(FROM,TO) 1 \n-\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n   ((OFFSET) = spu_initial_elimination_offset((FROM),(TO)))\n "}, {"sha": "120ae75da70154085690ca12f6d65b889f61434b", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of Tensilica's Xtensa target machine for GNU compiler.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n@@ -530,8 +530,6 @@ extern const enum reg_class xtensa_regno_to_class[FIRST_PSEUDO_REGISTER];\n  { FRAME_POINTER_REGNUM,\tSTACK_POINTER_REGNUM},\t\t\t\\\n  { FRAME_POINTER_REGNUM,\tHARD_FRAME_POINTER_REGNUM}}\n \n-#define CAN_ELIMINATE(FROM, TO) 1\n-\n /* Specify the initial difference between the specified pair of registers.  */\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\"}, {"sha": "0db07a9f18a4117335460d6f85100aa776897bab", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -1143,6 +1143,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define ATTRIBUTE_ALIGNED_VALUE BIGGEST_ALIGNMENT\n #endif\n \n+#ifndef CAN_ELIMINATE\n+#define CAN_ELIMINATE(FROM, TO) true\n+#endif\n+\n /* Many ports have no mode-dependent addresses (except possibly autoincrement\n    and autodecrement addresses, which are handled by target-independent code\n    in recog.c).  */"}, {"sha": "a2c756261b24f32dce754613cfe8caee3dafa488", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be639f7468517f519a91a618ca0cf40ba76ba74/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=3be639f7468517f519a91a618ca0cf40ba76ba74", "patch": "@@ -3804,12 +3804,14 @@ specified first since that is the preferred elimination.\n @end defmac\n \n @defmac CAN_ELIMINATE (@var{from-reg}, @var{to-reg})\n-A C expression that returns nonzero if the compiler is allowed to try\n+A C expression that returns @code{true} if the compiler is allowed to try\n to replace register number @var{from-reg} with register number\n @var{to-reg}.  This macro need only be defined if @code{ELIMINABLE_REGS}\n-is defined, and will usually be the constant 1, since most of the cases\n+is defined, and will usually be @code{true}, since most of the cases\n preventing register elimination are things that the compiler already\n knows about.\n+\n+Default value is @code{true}.\n @end defmac\n \n @defmac INITIAL_ELIMINATION_OFFSET (@var{from-reg}, @var{to-reg}, @var{offset-var})"}]}