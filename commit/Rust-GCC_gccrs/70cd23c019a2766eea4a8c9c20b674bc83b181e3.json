{"sha": "70cd23c019a2766eea4a8c9c20b674bc83b181e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBjZDIzYzAxOWEyNzY2ZWVhNGE4YzljMjBiNjc0YmM4M2IxODFlMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-04-07T10:36:21Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-07T10:36:21Z"}, "message": "Add function part to a same comdat group (PR ipa/80212).\n\n2017-04-07  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/80212\n\t* g++.dg/ipa/pr80212.C: New test.\n2017-04-07  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/80212\n\t* ipa-split.c (split_function): Add function part to a same comdat\n\tgroup.\n\nFrom-SVN: r246759", "tree": {"sha": "9fe83d36fdef020c4e4f42a362f36cbb4abd80fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fe83d36fdef020c4e4f42a362f36cbb4abd80fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70cd23c019a2766eea4a8c9c20b674bc83b181e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cd23c019a2766eea4a8c9c20b674bc83b181e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cd23c019a2766eea4a8c9c20b674bc83b181e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cd23c019a2766eea4a8c9c20b674bc83b181e3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe6bb25f9ee76e34bc0e1cf9e2b22b49e6e27911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6bb25f9ee76e34bc0e1cf9e2b22b49e6e27911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6bb25f9ee76e34bc0e1cf9e2b22b49e6e27911"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "6237a2ce40d34e264aa7f4d6755a4192b0477dd4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70cd23c019a2766eea4a8c9c20b674bc83b181e3", "patch": "@@ -1,3 +1,9 @@\n+2017-04-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/80212\n+\t* ipa-split.c (split_function): Add function part to a same comdat\n+\tgroup.\n+\n 2017-04-07  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/80341"}, {"sha": "ae1de6f1e63ce59f686e6540edf845998e79f2f6", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=70cd23c019a2766eea4a8c9c20b674bc83b181e3", "patch": "@@ -1363,6 +1363,9 @@ split_function (basic_block return_bb, struct split_point *split_point,\n   /* Let's take a time profile for splitted function.  */\n   node->tp_first_run = cur_node->tp_first_run + 1;\n \n+  if (cur_node->same_comdat_group)\n+    node->add_to_same_comdat_group (cur_node);\n+\n   /* For usual cloning it is enough to clear builtin only when signature\n      changes.  For partial inlining we however can not expect the part\n      of builtin implementation to have same semantic as the whole.  */"}, {"sha": "43e7bec066c5b789e234cfb69a1c89820fd14fc9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70cd23c019a2766eea4a8c9c20b674bc83b181e3", "patch": "@@ -1,3 +1,8 @@\n+2017-04-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/80212\n+\t* g++.dg/ipa/pr80212.C: New test.\n+\n 2017-04-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.dg/tree-ssa/pr79800.c: Require c99_runtime."}, {"sha": "60d3b613035c48da5ef33958b2998cce11095d40", "filename": "gcc/testsuite/g++.dg/ipa/pr80212.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr80212.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cd23c019a2766eea4a8c9c20b674bc83b181e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr80212.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr80212.C?ref=70cd23c019a2766eea4a8c9c20b674bc83b181e3", "patch": "@@ -0,0 +1,18 @@\n+// PR ipa/80212\n+// { dg-options \"-O2 --param partial-inlining-entry-probability=403796683 -fno-early-inlining\" }\n+\n+struct b\n+{\n+  virtual b *c () const;\n+};\n+struct d : virtual b\n+{\n+};\n+struct e : d\n+{\n+  e *\n+  c () const\n+  {\n+  }\n+};\n+main () { e a; }"}]}