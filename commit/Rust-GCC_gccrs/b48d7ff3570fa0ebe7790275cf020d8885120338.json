{"sha": "b48d7ff3570fa0ebe7790275cf020d8885120338", "node_id": "C_kwDOANBUbNoAKGI0OGQ3ZmYzNTcwZmEwZWJlNzc5MDI3NWNmMDIwZDg4ODUxMjAzMzg", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2022-09-24T12:47:22Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2022-09-28T09:55:01Z"}, "message": "LoongArch: Use UNSPEC for fmin/fmax RTL pattern [PR105414]\n\nI made a mistake defining fmin/fmax RTL patterns in r13-2085: I used\nsmin and smax in the definition mistakenly.  This causes the optimizer\nto perform constant folding as if fmin/fmax was \"really\" smin/smax\noperations even with -fsignaling-nans.  Then pr105414.c fails.\n\nWe don't have fmin/fmax RTL codes for now (PR107013) so we can only use\nan UNSPEC for fmin and fmax patterns.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/105414\n\t* config/loongarch/loongarch.md (UNSPEC_FMAX): New unspec.\n\t(UNSPEC_FMIN): Likewise.\n\t(fmax<mode>3): Use UNSPEC_FMAX instead of smax.\n\t(fmin<mode>3): Use UNSPEC_FMIN instead of smin.", "tree": {"sha": "373e4a0e2d5e8b22fb5c5f7a4f33eb8304ad61b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/373e4a0e2d5e8b22fb5c5f7a4f33eb8304ad61b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b48d7ff3570fa0ebe7790275cf020d8885120338", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSR0PV2MB+STX3t3OisqtIOGecQ4wUCYzQZ9QAKCRCsqtIOGecQ\n4xInAQDgT4UUUt825ACk3hhbnbDka0vjDL84mpbZmiRuTeaG4QD/cgx1fPxGoau2\n3CsDKBXOtg7KgAaLsAgGwXIR0PeTyw0=\n=/Ph1\n-----END PGP SIGNATURE-----", "payload": "tree 373e4a0e2d5e8b22fb5c5f7a4f33eb8304ad61b4\nparent 9a8212db2dd8373f5649ccd21028edd14303eb82\nauthor Xi Ruoyao <xry111@xry111.site> 1664023642 +0800\ncommitter Xi Ruoyao <xry111@xry111.site> 1664358901 +0800\n\nLoongArch: Use UNSPEC for fmin/fmax RTL pattern [PR105414]\n\nI made a mistake defining fmin/fmax RTL patterns in r13-2085: I used\nsmin and smax in the definition mistakenly.  This causes the optimizer\nto perform constant folding as if fmin/fmax was \"really\" smin/smax\noperations even with -fsignaling-nans.  Then pr105414.c fails.\n\nWe don't have fmin/fmax RTL codes for now (PR107013) so we can only use\nan UNSPEC for fmin and fmax patterns.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/105414\n\t* config/loongarch/loongarch.md (UNSPEC_FMAX): New unspec.\n\t(UNSPEC_FMIN): Likewise.\n\t(fmax<mode>3): Use UNSPEC_FMAX instead of smax.\n\t(fmin<mode>3): Use UNSPEC_FMIN instead of smin.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48d7ff3570fa0ebe7790275cf020d8885120338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48d7ff3570fa0ebe7790275cf020d8885120338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48d7ff3570fa0ebe7790275cf020d8885120338/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a8212db2dd8373f5649ccd21028edd14303eb82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8212db2dd8373f5649ccd21028edd14303eb82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8212db2dd8373f5649ccd21028edd14303eb82"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "214b14bddd399b49e14497272ef12126ba121e63", "filename": "gcc/config/loongarch/loongarch.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48d7ff3570fa0ebe7790275cf020d8885120338/gcc%2Fconfig%2Floongarch%2Floongarch.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48d7ff3570fa0ebe7790275cf020d8885120338/gcc%2Fconfig%2Floongarch%2Floongarch.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Floongarch.md?ref=b48d7ff3570fa0ebe7790275cf020d8885120338", "patch": "@@ -35,6 +35,8 @@\n   ;; Floating point unspecs.\n   UNSPEC_FRINT\n   UNSPEC_FCLASS\n+  UNSPEC_FMAX\n+  UNSPEC_FMIN\n \n   ;; Override return address for exception handling.\n   UNSPEC_EH_RETURN\n@@ -1032,17 +1034,19 @@\n \n (define_insn \"fmax<mode>3\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n-\t(smax:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n-\t\t   (match_operand:ANYF 2 \"register_operand\" \"f\")))]\n+\t(unspec:ANYF [(use (match_operand:ANYF 1 \"register_operand\" \"f\"))\n+\t\t      (use (match_operand:ANYF 2 \"register_operand\" \"f\"))]\n+\t\t     UNSPEC_FMAX))]\n   \"\"\n   \"fmax.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fmin<mode>3\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n-\t(smin:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n-\t\t   (match_operand:ANYF 2 \"register_operand\" \"f\")))]\n+\t(unspec:ANYF [(use (match_operand:ANYF 1 \"register_operand\" \"f\"))\n+\t\t      (use (match_operand:ANYF 2 \"register_operand\" \"f\"))]\n+\t\t     UNSPEC_FMIN))]\n   \"\"\n   \"fmin.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")"}]}