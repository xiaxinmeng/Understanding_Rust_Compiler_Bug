{"sha": "39c12541396fe6044a17455be8be6b4964108d89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljMTI1NDEzOTZmZTYwNDRhMTc0NTViZThiZTZiNDk2NDEwOGQ4OQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2015-07-27T13:07:09Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2015-07-27T13:07:09Z"}, "message": "arm-arches.def: Add \"armv6kz\".\n\n2015-07-27  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* config/arm/arm-arches.def: Add \"armv6kz\". Replace 6ZK with 6KZ\n\tand FL_FOR_ARCH6ZK with FL_FOR_ARCH6KZ.\n\t* config/arm/arm-c.c (arm_cpu_builtins): Emit \"__ARM_ARCH_6ZK__\"\n\tfor armv6kz targets.\n\t* config/arm/arm-cores.def: Replace 6ZK with 6KZ.\n\t* config/arm/arm-protos.h (FL_ARCH6KZ): New.\n\t(FL_FOR_ARCH6ZK): Remove.\n\t(FL_FOR_ARCH6KZ): New.\n\t(arm_arch6zk): New declaration.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm.c (arm_arch6kz): New.\n\t(arm_option_override): Set arm_arch6kz.\n\t* config/arm/arm.h (BASE_ARCH_6ZK): Rename to BASE_ARCH_6KZ.\n\t* config/arm/driver-arm.c: Add comment to \"armv6zk\" entry.\n        * doc/invoke.texi: Replace \"armv6zk\" with \"armv6kz\".\n\nFrom-SVN: r226243", "tree": {"sha": "a7dbfa05133cf40e09118a3ccc4e639222bc1e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7dbfa05133cf40e09118a3ccc4e639222bc1e88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39c12541396fe6044a17455be8be6b4964108d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c12541396fe6044a17455be8be6b4964108d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c12541396fe6044a17455be8be6b4964108d89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c12541396fe6044a17455be8be6b4964108d89/comments", "author": null, "committer": null, "parents": [{"sha": "05b28fd6f91016151e758c2414d7245a54512c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b28fd6f91016151e758c2414d7245a54512c99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b28fd6f91016151e758c2414d7245a54512c99"}], "stats": {"total": 78, "additions": 58, "deletions": 20}, "files": [{"sha": "0a9ae7fef8813c60a80f90a6d37111b92b832cbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -1,3 +1,21 @@\n+2015-07-27  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* config/arm/arm-arches.def: Add \"armv6kz\". Replace 6ZK with 6KZ\n+\tand FL_FOR_ARCH6ZK with FL_FOR_ARCH6KZ.\n+\t* config/arm/arm-c.c (arm_cpu_builtins): Emit \"__ARM_ARCH_6ZK__\"\n+\tfor armv6kz targets.\n+\t* config/arm/arm-cores.def: Replace 6ZK with 6KZ.\n+\t* config/arm/arm-protos.h (FL_ARCH6KZ): New.\n+\t(FL_FOR_ARCH6ZK): Remove.\n+\t(FL_FOR_ARCH6KZ): New.\n+\t(arm_arch6zk): New declaration.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm.c (arm_arch6kz): New.\n+\t(arm_option_override): Set arm_arch6kz.\n+\t* config/arm/arm.h (BASE_ARCH_6ZK): Rename to BASE_ARCH_6KZ.\n+\t* config/arm/driver-arm.c: Add comment to \"armv6zk\" entry.\n+        * doc/invoke.texi: Replace \"armv6zk\" with \"armv6kz\".\n+\n 2015-07-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/66555"}, {"sha": "3dafaa5fbc80af4b8d5004a2b53be3de01e6b9eb", "filename": "gcc/config/arm/arm-arches.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-arches.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-arches.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-arches.def?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -44,7 +44,8 @@ ARM_ARCH(\"armv6\",   arm1136js,  6,   FL_CO_PROC |             FL_FOR_ARCH6)\n ARM_ARCH(\"armv6j\",  arm1136js,  6J,  FL_CO_PROC |             FL_FOR_ARCH6J)\n ARM_ARCH(\"armv6k\",  mpcore,\t6K,  FL_CO_PROC |             FL_FOR_ARCH6K)\n ARM_ARCH(\"armv6z\",  arm1176jzs, 6Z,  FL_CO_PROC |             FL_FOR_ARCH6Z)\n-ARM_ARCH(\"armv6zk\", arm1176jzs, 6ZK, FL_CO_PROC |             FL_FOR_ARCH6ZK)\n+ARM_ARCH(\"armv6kz\", arm1176jzs, 6KZ, FL_CO_PROC |             FL_FOR_ARCH6KZ)\n+ARM_ARCH(\"armv6zk\", arm1176jzs, 6KZ, FL_CO_PROC |             FL_FOR_ARCH6KZ)\n ARM_ARCH(\"armv6t2\", arm1156t2s, 6T2, FL_CO_PROC |             FL_FOR_ARCH6T2)\n ARM_ARCH(\"armv6-m\", cortexm1,\t6M,\t\t\t      FL_FOR_ARCH6M)\n ARM_ARCH(\"armv6s-m\", cortexm1,\t6M,\t\t\t      FL_FOR_ARCH6M)"}, {"sha": "9bf3973f2905ab76625d27e7c544c86efc12414c", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -167,6 +167,11 @@ arm_cpu_builtins (struct cpp_reader* pfile, int flags)\n     }\n   if (arm_arch_iwmmxt2)\n     builtin_define (\"__IWMMXT2__\");\n+  /* ARMv6KZ was originally identified as the misspelled __ARM_ARCH_6ZK__.  To\n+     preserve the existing behaviour, the misspelled feature macro must still be\n+     defined.  */\n+  if (arm_arch6kz)\n+    builtin_define (\"__ARM_ARCH_6ZK__\");\n   if (TARGET_AAPCS_BASED)\n     {\n       if (arm_pcs_default == ARM_PCS_AAPCS_VFP)"}, {"sha": "9d47fcfbcd7ef28ac5cfaa3791c87e5f6d84dc69", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -125,8 +125,8 @@ ARM_CORE(\"arm1026ej-s\",\tarm1026ejs, arm1026ejs,\t5TEJ, FL_LDSCHED, 9e)\n /* V6 Architecture Processors */\n ARM_CORE(\"arm1136j-s\",\t\tarm1136js, arm1136js,\t\t6J,  FL_LDSCHED, 9e)\n ARM_CORE(\"arm1136jf-s\",\t\tarm1136jfs, arm1136jfs,\t\t6J,  FL_LDSCHED | FL_VFPV2, 9e)\n-ARM_CORE(\"arm1176jz-s\",\t\tarm1176jzs, arm1176jzs,\t\t6ZK, FL_LDSCHED, 9e)\n-ARM_CORE(\"arm1176jzf-s\",\tarm1176jzfs, arm1176jzfs,\t6ZK, FL_LDSCHED | FL_VFPV2, 9e)\n+ARM_CORE(\"arm1176jz-s\",\t\tarm1176jzs, arm1176jzs,\t\t6KZ, FL_LDSCHED, 9e)\n+ARM_CORE(\"arm1176jzf-s\",\tarm1176jzfs, arm1176jzfs,\t6KZ, FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"mpcorenovfp\",\t\tmpcorenovfp, mpcorenovfp,\t6K,  FL_LDSCHED, 9e)\n ARM_CORE(\"mpcore\",\t\tmpcore, mpcore,\t\t\t6K,  FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"arm1156t2-s\",\t\tarm1156t2s, arm1156t2s,\t\t6T2, FL_LDSCHED, v6t2)"}, {"sha": "7aae9343e026b3b1f15fae0c13daabe003696c91", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -382,6 +382,7 @@ extern bool arm_is_constant_pool_ref (rtx);\n \n #define FL_IWMMXT     (1 << 29)\t      /* XScale v2 or \"Intel Wireless MMX technology\".  */\n #define FL_IWMMXT2    (1 << 30)       /* \"Intel Wireless MMX2 technology\".  */\n+#define FL_ARCH6KZ    (1 << 31)       /* ARMv6KZ architecture.  */\n \n /* Flags that only effect tuning, not available instructions.  */\n #define FL_TUNE\t\t(FL_WBUF | FL_VFPV2 | FL_STRONG | FL_LDSCHED \\\n@@ -401,7 +402,7 @@ extern bool arm_is_constant_pool_ref (rtx);\n #define FL_FOR_ARCH6J\tFL_FOR_ARCH6\n #define FL_FOR_ARCH6K\t(FL_FOR_ARCH6 | FL_ARCH6K)\n #define FL_FOR_ARCH6Z\tFL_FOR_ARCH6\n-#define FL_FOR_ARCH6ZK\tFL_FOR_ARCH6K\n+#define FL_FOR_ARCH6KZ\t(FL_FOR_ARCH6K | FL_ARCH6KZ)\n #define FL_FOR_ARCH6T2\t(FL_FOR_ARCH6 | FL_THUMB2)\n #define FL_FOR_ARCH6M\t(FL_FOR_ARCH6 & ~FL_NOTM)\n #define FL_FOR_ARCH7\t((FL_FOR_ARCH6T2 & ~FL_NOTM) | FL_ARCH7)\n@@ -441,6 +442,9 @@ extern int arm_arch6;\n /* Nonzero if this chip supports the ARM 6K extensions.  */\n extern int arm_arch6k;\n \n+/* Nonzero if this chip supports the ARM 6KZ extensions.  */\n+extern int arm_arch6kz;\n+\n /* Nonzero if instructions present in ARMv6-M can be used.  */\n extern int arm_arch6m;\n "}, {"sha": "77e44aac0b84ed720fa6873382a316f41c373984", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -371,46 +371,49 @@ EnumValue\n Enum(arm_arch) String(armv6z) Value(13)\n \n EnumValue\n-Enum(arm_arch) String(armv6zk) Value(14)\n+Enum(arm_arch) String(armv6kz) Value(14)\n \n EnumValue\n-Enum(arm_arch) String(armv6t2) Value(15)\n+Enum(arm_arch) String(armv6zk) Value(15)\n \n EnumValue\n-Enum(arm_arch) String(armv6-m) Value(16)\n+Enum(arm_arch) String(armv6t2) Value(16)\n \n EnumValue\n-Enum(arm_arch) String(armv6s-m) Value(17)\n+Enum(arm_arch) String(armv6-m) Value(17)\n \n EnumValue\n-Enum(arm_arch) String(armv7) Value(18)\n+Enum(arm_arch) String(armv6s-m) Value(18)\n \n EnumValue\n-Enum(arm_arch) String(armv7-a) Value(19)\n+Enum(arm_arch) String(armv7) Value(19)\n \n EnumValue\n-Enum(arm_arch) String(armv7ve) Value(20)\n+Enum(arm_arch) String(armv7-a) Value(20)\n \n EnumValue\n-Enum(arm_arch) String(armv7-r) Value(21)\n+Enum(arm_arch) String(armv7ve) Value(21)\n \n EnumValue\n-Enum(arm_arch) String(armv7-m) Value(22)\n+Enum(arm_arch) String(armv7-r) Value(22)\n \n EnumValue\n-Enum(arm_arch) String(armv7e-m) Value(23)\n+Enum(arm_arch) String(armv7-m) Value(23)\n \n EnumValue\n-Enum(arm_arch) String(armv8-a) Value(24)\n+Enum(arm_arch) String(armv7e-m) Value(24)\n \n EnumValue\n-Enum(arm_arch) String(armv8-a+crc) Value(25)\n+Enum(arm_arch) String(armv8-a) Value(25)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt) Value(26)\n+Enum(arm_arch) String(armv8-a+crc) Value(26)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt2) Value(27)\n+Enum(arm_arch) String(iwmmxt) Value(27)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt2) Value(28)\n \n Enum\n Name(arm_fpu) Type(int)"}, {"sha": "c737484313ab8e9c1526540a2ec40dd7b5acd043", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -801,6 +801,9 @@ int arm_arch6 = 0;\n /* Nonzero if this chip supports the ARM 6K extensions.  */\n int arm_arch6k = 0;\n \n+/* Nonzero if this chip supports the ARM 6KZ extensions.  */\n+int arm_arch6kz = 0;\n+\n /* Nonzero if instructions present in ARMv6-M can be used.  */\n int arm_arch6m = 0;\n \n@@ -3043,6 +3046,7 @@ arm_option_override (void)\n   arm_arch5e = (insn_flags & FL_ARCH5E) != 0;\n   arm_arch6 = (insn_flags & FL_ARCH6) != 0;\n   arm_arch6k = (insn_flags & FL_ARCH6K) != 0;\n+  arm_arch6kz = arm_arch6k && (insn_flags & FL_ARCH6KZ);\n   arm_arch_notm = (insn_flags & FL_NOTM) != 0;\n   arm_arch6m = arm_arch6 && !arm_arch_notm;\n   arm_arch7 = (insn_flags & FL_ARCH7) != 0;"}, {"sha": "bb64be00c12842bfe67a0d2218fa770cc533302b", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -374,7 +374,7 @@ enum base_architecture\n   BASE_ARCH_5TEJ = 5,\n   BASE_ARCH_6 = 6,\n   BASE_ARCH_6J = 6,\n-  BASE_ARCH_6ZK = 6,\n+  BASE_ARCH_6KZ = 6,\n   BASE_ARCH_6K = 6,\n   BASE_ARCH_6T2 = 6,\n   BASE_ARCH_6M = 6,"}, {"sha": "9d24a3fb3780aca76b13cabc297f8f87b061a537", "filename": "gcc/config/arm/driver-arm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fdriver-arm.c?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -35,6 +35,9 @@ static struct vendor_cpu arm_cpu_table[] = {\n     {\"0xb02\", \"armv6k\", \"mpcore\"},\n     {\"0xb36\", \"armv6j\", \"arm1136j-s\"},\n     {\"0xb56\", \"armv6t2\", \"arm1156t2-s\"},\n+    /* armv6kz is the correct spelling for ARMv6KZ but may not be supported in\n+       the version of binutils used.  The incorrect spelling is supported in\n+       legacy and current binutils so that is used instead.  */\n     {\"0xb76\", \"armv6zk\", \"arm1176jz-s\"},\n     {\"0xc05\", \"armv7-a\", \"cortex-a5\"},\n     {\"0xc07\", \"armv7ve\", \"cortex-a7\"},"}, {"sha": "7b5d86b62bb633d7382743d50587187438f06f80", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c12541396fe6044a17455be8be6b4964108d89/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=39c12541396fe6044a17455be8be6b4964108d89", "patch": "@@ -13319,7 +13319,7 @@ of the @option{-mcpu=} option.  Permissible names are: @samp{armv2},\n @samp{armv2a}, @samp{armv3}, @samp{armv3m}, @samp{armv4}, @samp{armv4t},\n @samp{armv5}, @samp{armv5t}, @samp{armv5e}, @samp{armv5te},\n @samp{armv6}, @samp{armv6j},\n-@samp{armv6t2}, @samp{armv6z}, @samp{armv6zk}, @samp{armv6-m},\n+@samp{armv6t2}, @samp{armv6z}, @samp{armv6kz}, @samp{armv6-m},\n @samp{armv7}, @samp{armv7-a}, @samp{armv7-r}, @samp{armv7-m}, @samp{armv7e-m},\n @samp{armv7ve}, @samp{armv8-a}, @samp{armv8-a+crc},\n @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312}."}]}