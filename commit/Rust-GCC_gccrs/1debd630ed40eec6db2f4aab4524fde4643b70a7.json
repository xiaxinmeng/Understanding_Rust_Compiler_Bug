{"sha": "1debd630ed40eec6db2f4aab4524fde4643b70a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlYmQ2MzBlZDQwZWVjNmRiMmY0YWFiNDUyNGZkZTQ2NDNiNzBhNw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-12T08:59:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T08:59:47Z"}, "message": "[Ada] Adapt new extended traversal of AST to have optional part\n\nThe new extended traversal of the AST for GNATprove use now optionally\ntraverses the ranges under Itypes, based on a formal parameter.\n\nThere is no impact on compilation.\n\n2019-08-12  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb, sem_util.ads (Traverse_More_Func,\n\tTraverse_More_Proc): Add formal parameter for Itypes traversal.\n\nFrom-SVN: r274291", "tree": {"sha": "eaba4c9248223b898394ac925f3e7b6eb9e7077b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaba4c9248223b898394ac925f3e7b6eb9e7077b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1debd630ed40eec6db2f4aab4524fde4643b70a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1debd630ed40eec6db2f4aab4524fde4643b70a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1debd630ed40eec6db2f4aab4524fde4643b70a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1debd630ed40eec6db2f4aab4524fde4643b70a7/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d39f6b24d401c8a945fae1488de0dea2252ec7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39f6b24d401c8a945fae1488de0dea2252ec7ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39f6b24d401c8a945fae1488de0dea2252ec7ae"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "5e8fd9e1b59703f631e213b750dbe50bc431dbb8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1debd630ed40eec6db2f4aab4524fde4643b70a7", "patch": "@@ -1,3 +1,8 @@\n+2019-08-12  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb, sem_util.ads (Traverse_More_Func,\n+\tTraverse_More_Proc): Add formal parameter for Itypes traversal.\n+\n 2019-08-12  Yannick Moy  <moy@adacore.com>\n \n \t* exp_attr.adb, exp_attr.ads (Expand_Size_Attribute): New"}, {"sha": "b56fa867bb604d82375dcd0442f50930da89cfdc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1debd630ed40eec6db2f4aab4524fde4643b70a7", "patch": "@@ -25565,11 +25565,13 @@ package body Sem_Util is\n                null;\n          end case;\n \n-         --  Then process unattached nodes which come from Itypes. This only\n-         --  concerns currently ranges of scalar (possibly as index) types.\n-         --  This traversal is protected against looping with Processing_Itype.\n+         --  If Process_Itypes is True, process unattached nodes which come\n+         --  from Itypes. This only concerns currently ranges of scalar\n+         --  (possibly as index) types. This traversal is protected against\n+         --  looping with Processing_Itype.\n \n-         if not Processing_Itype\n+         if Process_Itypes\n+           and then not Processing_Itype\n            and then Nkind (Node) in N_Has_Etype\n            and then Present (Etype (Node))\n            and then Is_Itype (Etype (Node))\n@@ -25628,7 +25630,7 @@ package body Sem_Util is\n    ------------------------\n \n    procedure Traverse_More_Proc (Node : Node_Id) is\n-      function Traverse is new Traverse_More_Func (Process);\n+      function Traverse is new Traverse_More_Func (Process, Process_Itypes);\n       Discard : Traverse_Final_Result;\n       pragma Warnings (Off, Discard);\n    begin"}, {"sha": "2c1f8a8be5bc22f4f7ce73e519ff2c1505425d7c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1debd630ed40eec6db2f4aab4524fde4643b70a7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=1debd630ed40eec6db2f4aab4524fde4643b70a7", "patch": "@@ -2814,14 +2814,17 @@ package Sem_Util is\n \n    generic\n       with function Process (N : Node_Id) return Traverse_Result is <>;\n+      Process_Itypes : Boolean := False;\n    function Traverse_More_Func (Node : Node_Id) return Traverse_Final_Result;\n    --  This is a version of Atree.Traverse_Func that not only traverses\n    --  syntactic children of nodes, but also semantic children which are\n    --  logically children of the node. This concerns currently lists of\n    --  action nodes and ranges under Itypes, both inserted by the compiler.\n+   --  Itypes are only traversed when Process_Itypes is True.\n \n    generic\n       with function Process (N : Node_Id) return Traverse_Result is <>;\n+      Process_Itypes : Boolean := False;\n    procedure Traverse_More_Proc (Node : Node_Id);\n    pragma Inline (Traverse_More_Proc);\n    --  This is the same as Traverse_More_Func except that no result is"}]}