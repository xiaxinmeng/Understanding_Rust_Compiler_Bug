{"sha": "5f5e441a4ac7ba043f774d4ae879001be1dd3436", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1ZTQ0MWE0YWM3YmEwNDNmNzc0ZDRhZTg3OTAwMWJlMWRkMzQzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-08-11T21:53:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-08-11T21:53:58Z"}, "message": "re PR target/11693 ([ia64] ICE in gen_nop_type)\n\n\tPR target/11693\n\t* gcc.dg/20030811-1.c: New test.\n\n\tPR target/11535\n\t* gcc.c-torture/execute/20030811-1.c: New test.\n\nFrom-SVN: r70339", "tree": {"sha": "118e83fd330da2bece60f42326f91dc096406183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/118e83fd330da2bece60f42326f91dc096406183"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f5e441a4ac7ba043f774d4ae879001be1dd3436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f5e441a4ac7ba043f774d4ae879001be1dd3436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f5e441a4ac7ba043f774d4ae879001be1dd3436", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f5e441a4ac7ba043f774d4ae879001be1dd3436/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fe15a12b4eb70d064776e3f27bb9cb90179bf34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe15a12b4eb70d064776e3f27bb9cb90179bf34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe15a12b4eb70d064776e3f27bb9cb90179bf34"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "aee5e84ad4a99b810c72eaabb38a92c2b8a51131", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f5e441a4ac7ba043f774d4ae879001be1dd3436", "patch": "@@ -1,3 +1,11 @@\n+2003-08-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/11693\n+\t* gcc.dg/20030811-1.c: New test.\n+\n+\tPR target/11535\n+\t* gcc.c-torture/execute/20030811-1.c: New test.\n+\n 2003-08-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.c-torture/execute/string-opt-9.c: Add more strcat cases."}, {"sha": "2ac59c03af270a0ee7f28108915e2c8c8db14b2f", "filename": "gcc/testsuite/gcc.c-torture/execute/20030811-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030811-1.c?ref=5f5e441a4ac7ba043f774d4ae879001be1dd3436", "patch": "@@ -0,0 +1,35 @@\n+/* Origin: PR target/11535 from H. J. Lu <hjl@lucon.org> */\n+\n+void vararg (int i, ...)\n+{\n+  (void) i;\n+}\n+\n+int i0[0], i1;\n+\n+void test1 (void)\n+{\n+  int a = (int) (long long) __builtin_return_address (0);\n+  vararg (0, a);\n+}\n+\n+void test2 (void)\n+{\n+  i0[0] = (int) (long long) __builtin_return_address (0);\n+}\n+\n+void test3 (void)\n+{\n+  i1 = (int) (long long) __builtin_return_address (0);\n+}\n+\n+void test4 (void)\n+{\n+  volatile long long a = (long long) __builtin_return_address (0);\n+  i0[0] = (int) a;\n+}\n+\n+int main (void)\n+{\n+  return 0;\n+}"}, {"sha": "55b24060ecb124712c08ff99c1dc14910e6f7428", "filename": "gcc/testsuite/gcc.dg/20030811-1.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2Fgcc.dg%2F20030811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5e441a4ac7ba043f774d4ae879001be1dd3436/gcc%2Ftestsuite%2Fgcc.dg%2F20030811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030811-1.c?ref=5f5e441a4ac7ba043f774d4ae879001be1dd3436", "patch": "@@ -0,0 +1,59 @@\n+/* Origin: PR target/11693 from Andreas Schwab <schwab@suse.de> */\n+/* { dg-do compile { target ia64-*-linux* } } */\n+/* { dg-options \"-O2 -frename-registers\" } */\n+\n+static inline unsigned long\n+foo (void)\n+{\n+  unsigned long x;\n+  __asm__ __volatile__ (\"\" : \"=r\" (x) :: \"memory\");\n+  return x;\n+}\n+\n+static inline void\n+bar (unsigned long x, unsigned long y)\n+{\n+  __asm__ __volatile__ (\"\" :: \"r\"(x), \"r\"(y) : \"memory\");\n+}\n+\n+static inline void\n+baz (unsigned long x, unsigned long y, unsigned long z, unsigned long p,\n+     unsigned long q)\n+{\n+  __asm__ __volatile__ (\"\" :: \"r\" (q << 2) : \"memory\");\n+  __asm__ __volatile__ (\"\" :: \"r\" (z) : \"memory\");\n+  if (x & 0x1)\n+    __asm__ __volatile__ (\"\" :: \"r\" (y), \"r\" (p) : \"memory\");\n+  if (x & 0x2)\n+    __asm__ __volatile__ (\"\" :: \"r\" (y), \"r\" (p) : \"memory\");\n+}\n+\n+static inline unsigned long\n+ffz (unsigned long x)\n+{\n+  unsigned long r;\n+  __asm__ (\"\" : \"=r\" (r) : \"r\" (x & (~x - 1)));\n+  return r;\n+}\n+\n+void die (const char *, ...) __attribute__ ((noreturn));\n+\n+void\n+test (void *x)\n+{\n+  unsigned long a, c;\n+\n+  a = foo ();\n+  bar (0xc000000000000000, 0x660);\n+  bar (0xa00000000000c000, 0x539);\n+  baz (2, 1, 0xa000000000008000,\n+       ({ unsigned long b;\n+\t  b = ({ unsigned long d; __asm__ (\"\" : \"=r\" (d) : \"r\" (x)); d; })\n+\t      + 0x10000000000661;\n+\t  b;\n+\t}),\n+       14);\n+  c = ffz (0x1fffffffffffffff);\n+  if (c < 51 || c > 61)\n+    die (\"die\", c - 1);\n+}"}]}