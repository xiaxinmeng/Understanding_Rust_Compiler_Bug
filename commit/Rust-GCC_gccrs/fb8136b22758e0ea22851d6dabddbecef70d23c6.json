{"sha": "fb8136b22758e0ea22851d6dabddbecef70d23c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4MTM2YjIyNzU4ZTBlYTIyODUxZDZkYWJkZGJlY2VmNzBkMjNjNg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2005-05-06T23:41:07Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-05-06T23:41:07Z"}, "message": "mips.opt: Remove -mint64 option.\n\n2005-05-06  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/mips.opt: Remove -mint64 option.\n\t* config/mips/mips.c (override_options): Remove -mint64\n\thandling.\n\t* config/mips/mips.h (INT_TYPE_SIZE): Define to 32.\n\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Remove\n\t64-bit integer handling.\n\t* doc/invoke.texi (Option Summary): Remove -mint64 for\n\tmips.\n\nFrom-SVN: r99337", "tree": {"sha": "f29808612fac843e248ab26a77442dfc227c95f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29808612fac843e248ab26a77442dfc227c95f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb8136b22758e0ea22851d6dabddbecef70d23c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8136b22758e0ea22851d6dabddbecef70d23c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8136b22758e0ea22851d6dabddbecef70d23c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8136b22758e0ea22851d6dabddbecef70d23c6/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ed0018eb41c5b8fe2b39415facab3c1f7114b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed0018eb41c5b8fe2b39415facab3c1f7114b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ed0018eb41c5b8fe2b39415facab3c1f7114b95"}], "stats": {"total": 83, "additions": 37, "deletions": 46}, "files": [{"sha": "108a559575dd619df2746e12f57325656f2f38a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -1,3 +1,14 @@\n+2005-05-06  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.opt: Remove -mint64 option.\n+\t* config/mips/mips.c (override_options): Remove -mint64\n+\thandling.\n+\t* config/mips/mips.h (INT_TYPE_SIZE): Define to 32.\n+\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Remove\n+\t64-bit integer handling.\n+\t* doc/invoke.texi (Option Summary): Remove -mint64 for\n+\tmips.\n+\n 2005-05-06  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/19401"}, {"sha": "24e4f0b18d9113df1690e2a093966da656b79791", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 23, "deletions": 26, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -54,48 +54,45 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_DEFAULT MASK_ABICALLS\n \n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-    do {\t\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n-\tif (TARGET_ABICALLS)\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"__PIC__\");\t\t\t\t\\\n-\t    builtin_define (\"__pic__\");\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\t/* The GNU C++ standard library requires this.  */\t\\\n-\tif (c_dialect_cxx ())\t\t\t\t\t\\\n-\t  builtin_define (\"_GNU_SOURCE\");\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-      if (mips_abi == ABI_N32)\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    LINUX_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n+    if (TARGET_ABICALLS)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__PIC__\");\t\t\t\t\\\n+\tbuiltin_define (\"__pic__\");\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    /* The GNU C++ standard library requires this.  */\t\t\\\n+    if (c_dialect_cxx ())\t\t\t\t\t\\\n+      builtin_define (\"_GNU_SOURCE\");\t\t\t\t\\\n+    \t\t\t\t\t\t\t\t\\\n+    if (mips_abi == ABI_N32)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n         builtin_define (\"_ABIN32=2\");\t\t\t\t\\\n         builtin_define (\"_MIPS_SIM=_ABIN32\");\t\t\t\\\n         builtin_define (\"_MIPS_SZLONG=32\");\t\t\t\\\n         builtin_define (\"_MIPS_SZPTR=32\");\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-     else if (mips_abi == ABI_64)\t\t\t\t\\\n+    else if (mips_abi == ABI_64)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n         builtin_define (\"_ABI64=3\");\t\t\t\t\\\n         builtin_define (\"_MIPS_SIM=_ABI64\");\t\t\t\\\n         builtin_define (\"_MIPS_SZLONG=64\");\t\t\t\\\n         builtin_define (\"_MIPS_SZPTR=64\");\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-     else\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_ABIO32=1\");\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SIM=_ABIO32\");\t\t\\\n+\tbuiltin_define (\"_ABIO32=1\");\t\t\t\t\\\n+\tbuiltin_define (\"_MIPS_SIM=_ABIO32\");\t\t\t\\\n         builtin_define (\"_MIPS_SZLONG=32\");\t\t\t\\\n         builtin_define (\"_MIPS_SZPTR=32\");\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-     if (TARGET_FLOAT64)\t\t\t\t\t\\\n-        builtin_define (\"_MIPS_FPSET=32\");\t\t\t\\\n-     else\t\t\t\t\t\t\t\\\n-        builtin_define (\"_MIPS_FPSET=16\");\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-     if (TARGET_INT64)\t\t\t\t\t\t\\\n-        builtin_define (\"_MIPS_SZINT=64\");\t\t\t\\\n-     else\t\t\t\t\t\t\t\\\n-        builtin_define (\"_MIPS_SZINT=32\");\t\t\t\\\n-} while (0)\n+    if (TARGET_FLOAT64)\t\t\t\t\t\t\\\n+      builtin_define (\"_MIPS_FPSET=32\");\t\t\t\\\n+    else\t\t\t\t\t\t\t\\\n+      builtin_define (\"_MIPS_FPSET=16\");\t\t\t\\\n+    \t\t\t\t\t\t\t\t\\\n+    builtin_define (\"_MIPS_SZINT=32\");\t\t\t\t\\\n+  } while (0)\n \n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \"%{pthread:-D_REENTRANT}\""}, {"sha": "afc69ea712e095de9f571ecae2203f530b426317", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -4336,25 +4336,12 @@ override_options (void)\n \n   if ((target_flags_explicit & MASK_LONG64) == 0)\n     {\n-      if (TARGET_INT64)\n-\ttarget_flags |= MASK_LONG64;\n-      /* If no type size setting options (-mlong64,-mint64,-mlong32)\n-\t were used, then set the type sizes.  In the EABI in 64 bit mode,\n-\t longs and pointers are 64 bits.  Likewise for the SGI Irix6 N64\n-\t ABI.  */\n-      else if ((mips_abi == ABI_EABI && TARGET_64BIT) || mips_abi == ABI_64)\n+      if ((mips_abi == ABI_EABI && TARGET_64BIT) || mips_abi == ABI_64)\n \ttarget_flags |= MASK_LONG64;\n       else\n \ttarget_flags &= ~MASK_LONG64;\n     }\n \n-  /* Deprecate -mint64. Remove after 4.0 branches.  */\n-  if (TARGET_INT64)\n-    warning (0, \"-mint64 is a deprecated option\");\n-\n-  if (TARGET_INT64 && !TARGET_LONG64)\n-    error (\"unsupported combination: %s\", \"-mint64 -mlong32\");\n-\n   if (MIPS_MARCH_CONTROLS_SOFT_FLOAT\n       && (target_flags_explicit & MASK_SOFT_FLOAT) == 0)\n     {"}, {"sha": "bca317c550c2460ab46cf115719fb2da0397555b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -970,7 +970,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n \n /* Set the sizes of the core types.  */\n #define SHORT_TYPE_SIZE 16\n-#define INT_TYPE_SIZE (TARGET_INT64 ? 64 : 32)\n+#define INT_TYPE_SIZE 32\n #define LONG_TYPE_SIZE (TARGET_LONG64 ? 64 : 32)\n #define LONG_LONG_TYPE_SIZE 64\n "}, {"sha": "cb78b8e7b4036bfedda248d9bd5497d08705ed41", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -133,10 +133,6 @@ mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT)\n Allow the use of hardware floating-point instructions\n \n-mint64\n-Target Report RejectNegative Mask(INT64)\n-Use a 64-bit int type\n-\n mips\n Target RejectNegative Joined\n -mipsN\tGenerate code for ISA level N"}, {"sha": "632b4bb7c5b167169d4c4de905abcf28779dd426", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8136b22758e0ea22851d6dabddbecef70d23c6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb8136b22758e0ea22851d6dabddbecef70d23c6", "patch": "@@ -560,7 +560,7 @@ Objective-C and Objective-C++ Dialects}.\n -mxgot  -mno-xgot  -mgp32  -mgp64  -mfp32  -mfp64 @gol\n -mhard-float  -msoft-float  -msingle-float  -mdouble-float @gol\n -mpaired-single  -mips3d @gol\n--mint64  -mlong64  -mlong32  -msym32  -mno-sym32 @gol\n+-mlong64  -mlong32  -msym32  -mno-sym32 @gol\n -G@var{num}  -membedded-data  -mno-embedded-data @gol\n -muninit-const-in-rodata  -mno-uninit-const-in-rodata @gol\n -msplit-addresses  -mno-split-addresses  @gol"}]}