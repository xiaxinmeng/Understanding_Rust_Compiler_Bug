{"sha": "c87cce5a339bae3b73f34dbc20409de07caf68da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3Y2NlNWEzMzliYWUzYjczZjM0ZGJjMjA0MDlkZTA3Y2FmNjhkYQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-11-26T17:26:43Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-11-26T17:26:43Z"}, "message": "libgfortran: Correct FP feature macro checks\n\nThe *_HAS_* floating-point feature macros are defined as 0/1 rather than\n#undef/#define settings by gcc/c-family/c-cppbuiltin.c.  Consequently we\nchoose to use infinity and NaN features even with non-IEEE-754 targets\nsuch as `vax-netbsdelf' that lack them, causing build warnings and\nfailures like:\n\nIn file included from .../libgfortran/generated/maxval_r4.c:26:\n.../libgfortran/generated/maxval_r4.c: In function 'maxval_r4':\n.../libgfortran/libgfortran.h:292:30: warning: target format does not support infinity\n  292 | # define GFC_REAL_4_INFINITY __builtin_inff ()\n      |                              ^~~~~~~~~~~~~~\n.../libgfortran/generated/maxval_r4.c:149:19:\nnote: in expansion of macro 'GFC_REAL_4_INFINITY'\n  149 |         result = -GFC_REAL_4_INFINITY;\n      |                   ^~~~~~~~~~~~~~~~~~~\n.../libgfortran/generated/maxval_r4.c: In function 'mmaxval_r4':\n.../libgfortran/libgfortran.h:292:30: warning: target format does not support infinity\n  292 | # define GFC_REAL_4_INFINITY __builtin_inff ()\n      |                              ^~~~~~~~~~~~~~\n.../libgfortran/generated/maxval_r4.c:363:19:\nnote: in expansion of macro 'GFC_REAL_4_INFINITY'\n  363 |         result = -GFC_REAL_4_INFINITY;\n      |                   ^~~~~~~~~~~~~~~~~~~\n{standard input}: Assembler messages:\n{standard input}:204: Fatal error: Can't relocate expression\nmake[3]: *** [Makefile:3358: maxval_r4.lo] Error 1\n\nCorrect the checks then for __FLT_HAS_INFINITY__, __DBL_HAS_INFINITY__,\n__LDBL_HAS_INFINITY__, __FLT_HAS_QUIET_NAN__, __DBL_HAS_QUIET_NAN__, and\n__LDBL_HAS_QUIET_NAN__ to match semantics and remove build issues coming\nfrom the misinterpretation of these macros.\n\n\tlibgfortran/\n\t* libgfortran.h: Use #if rather than #ifdef with\n\t__FLT_HAS_INFINITY__, __DBL_HAS_INFINITY__,\n\t__LDBL_HAS_INFINITY__, __FLT_HAS_QUIET_NAN__,\n\t__DBL_HAS_QUIET_NAN__, and __LDBL_HAS_QUIET_NAN__.", "tree": {"sha": "b0860f9106d20a08a5f010ce75a826ba77389399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0860f9106d20a08a5f010ce75a826ba77389399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c87cce5a339bae3b73f34dbc20409de07caf68da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87cce5a339bae3b73f34dbc20409de07caf68da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87cce5a339bae3b73f34dbc20409de07caf68da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87cce5a339bae3b73f34dbc20409de07caf68da/comments", "author": null, "committer": null, "parents": [{"sha": "218cedd5a36ae1cdd08c5ff997027d44ef4b6542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218cedd5a36ae1cdd08c5ff997027d44ef4b6542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218cedd5a36ae1cdd08c5ff997027d44ef4b6542"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e9c54810f42ec4d64db0d03e6f090fe1ed52bda9", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87cce5a339bae3b73f34dbc20409de07caf68da/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87cce5a339bae3b73f34dbc20409de07caf68da/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=c87cce5a339bae3b73f34dbc20409de07caf68da", "patch": "@@ -288,13 +288,13 @@ typedef GFC_UINTEGER_4 gfc_char4_t;\n \n /* M{IN,AX}{LOC,VAL} need also infinities and NaNs if supported.  */\n \n-#ifdef __FLT_HAS_INFINITY__\n+#if __FLT_HAS_INFINITY__\n # define GFC_REAL_4_INFINITY __builtin_inff ()\n #endif\n-#ifdef __DBL_HAS_INFINITY__\n+#if __DBL_HAS_INFINITY__\n # define GFC_REAL_8_INFINITY __builtin_inf ()\n #endif\n-#ifdef __LDBL_HAS_INFINITY__\n+#if __LDBL_HAS_INFINITY__\n # ifdef HAVE_GFC_REAL_10\n #  define GFC_REAL_10_INFINITY __builtin_infl ()\n # endif\n@@ -306,13 +306,13 @@ typedef GFC_UINTEGER_4 gfc_char4_t;\n #  endif\n # endif\n #endif\n-#ifdef __FLT_HAS_QUIET_NAN__\n+#if __FLT_HAS_QUIET_NAN__\n # define GFC_REAL_4_QUIET_NAN __builtin_nanf (\"\")\n #endif\n-#ifdef __DBL_HAS_QUIET_NAN__\n+#if __DBL_HAS_QUIET_NAN__\n # define GFC_REAL_8_QUIET_NAN __builtin_nan (\"\")\n #endif\n-#ifdef __LDBL_HAS_QUIET_NAN__\n+#if __LDBL_HAS_QUIET_NAN__\n # ifdef HAVE_GFC_REAL_10\n #  define GFC_REAL_10_QUIET_NAN __builtin_nanl (\"\")\n # endif"}]}