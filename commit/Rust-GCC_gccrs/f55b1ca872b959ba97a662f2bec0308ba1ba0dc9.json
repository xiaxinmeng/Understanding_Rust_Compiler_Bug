{"sha": "f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1YjFjYTg3MmI5NTliYTk3YTY2MmYyYmVjMDMwOGJhMWJhMGRjOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-04-20T13:11:38Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-04-20T13:11:38Z"}, "message": "Switch to strrchr if available instead of rindex\n\nFrom-SVN: r19341", "tree": {"sha": "a5c1277b2489ed619b408b287e3425dd9537a16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c1277b2489ed619b408b287e3425dd9537a16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/comments", "author": null, "committer": null, "parents": [{"sha": "0cd355fe9da1827a55ea871238a988adcadf6f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd355fe9da1827a55ea871238a988adcadf6f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd355fe9da1827a55ea871238a988adcadf6f93"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "f998afd4503e2d28c3c38281697aee74d76700c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "patch": "@@ -1,5 +1,17 @@\n Mon Apr 20 14:48:29 1998  Michael Meissner  <meissner@cygnus.com>\n \n+\t* configure.in (AC_CHECK_FUNCS): Check for strchr and strrchr.\n+\t* configure: Regenerate.\n+\t* config.in: Add #undef's for strchr and strrchr.\n+\n+\t* protoize.c (toplevel): If we have rindex, but not strrchr, map\n+\trindex to strrchr.\n+\t(file_could_be_converted): Use strrchr, not rindex since rindex is\n+\tnot defined on Linux systems when _POSIX_SOURCE is defined.\n+\t(file_normally_convertible): Ditto.\n+\t(process_aux_info_file): Ditto.\n+\t(main): Ditto.\n+\n \t* rs6000.md (mov{sf,df} define_splits): When splitting a move of\n \ta constant to an integer register, don't split the insns that do\n \tthe simple AND and OR operations, rather just split each word, and"}, {"sha": "bf2d02f0bb68c904f9e6cb1f428bd448fa4c495f", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "patch": "@@ -92,12 +92,18 @@\n /* Define if you have the rindex function.  */\n #undef HAVE_RINDEX\n \n+/* Define if you have the strchr function.  */\n+#undef HAVE_STRCHR\n+\n /* Define if you have the setrlimit function.  */\n #undef HAVE_SETRLIMIT\n \n /* Define if you have the strerror function.  */\n #undef HAVE_STRERROR\n \n+/* Define if you have the strrchr function.  */\n+#undef HAVE_STRRCHR\n+\n /* Define if you have the strtoul function.  */\n #undef HAVE_STRTOUL\n "}, {"sha": "5e97fc0b181673bb84d1cd713024205df119c7d0", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "patch": "@@ -1676,7 +1676,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_header_inttypes_h\" 1>&6\n \n for ac_func in strtoul bsearch strerror putenv popen vprintf bcopy bzero bcmp \\\n-\tindex rindex kill getrlimit setrlimit atoll atoq sysconf\n+\tindex rindex strchr strrchr kill getrlimit setrlimit atoll atoq sysconf\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:1683: checking for $ac_func\" >&5"}, {"sha": "61bfc9a9d0aa81ca4c7e3a8b39d629a229f4a652", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "patch": "@@ -181,7 +181,7 @@ AC_CACHE_VAL(gcc_cv_header_inttypes_h,\n AC_MSG_RESULT($gcc_cv_header_inttypes_h)\n \n AC_CHECK_FUNCS(strtoul bsearch strerror putenv popen vprintf bcopy bzero bcmp \\\n-\tindex rindex kill getrlimit setrlimit atoll atoq sysconf)\n+\tindex rindex strchr strrchr kill getrlimit setrlimit atoll atoq sysconf)\n \n GCC_FUNC_PRINTF_PTR\n "}, {"sha": "754d6c23ce8d64dde7b2aa095bca26223a043690", "filename": "gcc/protoize.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1ca872b959ba97a662f2bec0308ba1ba0dc9/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=f55b1ca872b959ba97a662f2bec0308ba1ba0dc9", "patch": "@@ -74,6 +74,16 @@ Boston, MA 02111-1307, USA.  */\n #include <setjmp.h>\n #include \"gansidecl.h\"\n \n+/* Some systems like Linux don't declare rindex if _POSIX_SOURCE is declared,\n+   but it normally does declare it.  This means that configure thinks we don't\n+   need to declare it.  Favor using strrchr if it is available.  */\n+\n+#ifndef HAVE_STRRCHR\n+#ifdef  HAVE_RINDEX\n+#define strrchr rindex\n+#endif\n+#endif\n+\n /* Include getopt.h for the sake of getopt_long.\n    We don't need the declaration of getopt, and it could conflict\n    with something from a system header file, so effectively nullify that.  */\n@@ -897,7 +907,7 @@ file_could_be_converted (const char *path)\n     char *dir_last_slash;\n \n     strcpy (dir_name, path);\n-    dir_last_slash = rindex (dir_name, '/');\n+    dir_last_slash = strrchr (dir_name, '/');\n     if (dir_last_slash)\n       *dir_last_slash = '\\0';\n     else\n@@ -931,7 +941,7 @@ file_normally_convertible (const char *path)\n     char *dir_last_slash;\n \n     strcpy (dir_name, path);\n-    dir_last_slash = rindex (dir_name, '/');\n+    dir_last_slash = strrchr (dir_name, '/');\n     if (dir_last_slash)\n       *dir_last_slash = '\\0';\n     else\n@@ -2370,7 +2380,7 @@ start_over: ;\n \tchar *dir_end;\n \taux_info_relocated_name = xmalloc (base_len + (p-invocation_filename));\n \tstrcpy (aux_info_relocated_name, base_source_filename);\n-\tdir_end = rindex (aux_info_relocated_name, '/');\n+\tdir_end = strrchr (aux_info_relocated_name, '/');\n \tif (dir_end)\n \t  dir_end++;\n \telse\n@@ -4575,7 +4585,7 @@ main (argc, argv)\n   int c;\n   const char *params = \"\";\n \n-  pname = rindex (argv[0], '/');\n+  pname = strrchr (argv[0], '/');\n   pname = pname ? pname+1 : argv[0];\n \n   cwd_buffer = getpwd ();"}]}