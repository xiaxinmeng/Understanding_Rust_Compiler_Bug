{"sha": "079e0f619684ff63b32e0fa02f460f57e271e3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5ZTBmNjE5Njg0ZmY2M2IzMmUwZmEwMmY0NjBmNTdlMjcxZTNiNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-08T21:37:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-07-08T21:37:33Z"}, "message": "emit-rtl.c (set_insn_locations): New function moved from...\n\n\t* emit-rtl.c (set_insn_locations): New function moved from...\n\t* function.c (set_insn_locations): ...here.\n\t* ira-emit.c (emit_moves): Propagate location of the first instruction\n\tto the inserted move instructions.\n\t* reg-stack.c (compensate_edge): Set the location if the sequence is\n\tinserted on the edge.\n\t* rtl.h (set_insn_locations): Declare.\n\nFrom-SVN: r273247", "tree": {"sha": "ff17df21be3c5b5b770cb74f641aa2ca99793d01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff17df21be3c5b5b770cb74f641aa2ca99793d01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/079e0f619684ff63b32e0fa02f460f57e271e3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079e0f619684ff63b32e0fa02f460f57e271e3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079e0f619684ff63b32e0fa02f460f57e271e3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079e0f619684ff63b32e0fa02f460f57e271e3b4/comments", "author": null, "committer": null, "parents": [{"sha": "c83faba13da6d67e6784b3781419cd0605700daf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83faba13da6d67e6784b3781419cd0605700daf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83faba13da6d67e6784b3781419cd0605700daf"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "d0d34948d1ba4b34f7c321ba6690278133c17d98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -1,3 +1,13 @@\n+2019-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* emit-rtl.c (set_insn_locations): New function moved from...\n+\t* function.c (set_insn_locations): ...here.\n+\t* ira-emit.c (emit_moves): Propagate location of the first instruction\n+\tto the inserted move instructions.\n+\t* reg-stack.c (compensate_edge): Set the location if the sequence is\n+\tinserted on the edge.\n+\t* rtl.h (set_insn_locations): Declare.\n+\n 2019-07-08  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_machine_from_flags): Ignore"}, {"sha": "f60f2e218379f768c73546ab8b17ce3bd40d87da", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -6582,6 +6582,18 @@ curr_insn_location (void)\n   return curr_location;\n }\n \n+/* Set the location of the insn chain starting at INSN to LOC.  */\n+void\n+set_insn_locations (rtx_insn *insn, location_t loc)\n+{\n+  while (insn)\n+    {\n+      if (INSN_P (insn))\n+\tINSN_LOCATION (insn) = loc;\n+      insn = NEXT_INSN (insn);\n+    }\n+}\n+\n /* Return lexical scope block insn belongs to.  */\n tree\n insn_scope (const rtx_insn *insn)"}, {"sha": "0bce4ec68395f43c2192d5c65a54b2cc5c5a11bd", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -5244,19 +5244,6 @@ use_return_register (void)\n   diddle_return_value (do_use_return_reg, NULL);\n }\n \n-/* Set the location of the insn chain starting at INSN to LOC.  */\n-\n-static void\n-set_insn_locations (rtx_insn *insn, int loc)\n-{\n-  while (insn != NULL)\n-    {\n-      if (INSN_P (insn))\n-\tINSN_LOCATION (insn) = loc;\n-      insn = NEXT_INSN (insn);\n-    }\n-}\n-\n /* Generate RTL for the end of the current function.  */\n \n void"}, {"sha": "c42acad29a53e98504407d7ba625d731eb5495a1", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -1011,6 +1011,10 @@ emit_moves (void)\n \t    tmp = NEXT_INSN (tmp);\n \t  if (NOTE_INSN_BASIC_BLOCK_P (tmp))\n \t    tmp = NEXT_INSN (tmp);\n+\t  /* Propagate the location of the current first instruction to the\n+\t     moves so that they don't inherit a random location.  */\n+\t  if (tmp != NULL_RTX && INSN_P (tmp))\n+\t    set_insn_locations (insns, INSN_LOCATION (tmp));\n \t  if (tmp == BB_HEAD (bb))\n \t    emit_insn_before (insns, tmp);\n \t  else if (tmp != NULL_RTX)"}, {"sha": "710f14a954443a79785b44d7382590cffea0e1a6", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -2929,6 +2929,7 @@ compensate_edge (edge e)\n       seq = get_insns ();\n       end_sequence ();\n \n+      set_insn_locations (seq, e->goto_locus);\n       insert_insn_on_edge (seq, e);\n       return true;\n     }"}, {"sha": "a4fde4ed8e5b3b5b2426a27b8e7023d6676b607b", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079e0f619684ff63b32e0fa02f460f57e271e3b4/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=079e0f619684ff63b32e0fa02f460f57e271e3b4", "patch": "@@ -4338,6 +4338,7 @@ extern void insn_locations_init (void);\n extern void insn_locations_finalize (void);\n extern void set_curr_insn_location (location_t);\n extern location_t curr_insn_location (void);\n+extern void set_insn_locations (rtx_insn *, location_t);\n \n /* rtl-error.c */\n extern void _fatal_insn_not_found (const_rtx, const char *, int, const char *)"}]}