{"sha": "fc1e08468e6e828266648443e01c61e213aa33a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxZTA4NDY4ZTZlODI4MjY2NjQ4NDQzZTAxYzYxZTIxM2FhMzNhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-13T14:40:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-13T14:40:13Z"}, "message": "re PR c++/11987 (Accepts-invalid with inherited nested type)\n\n\tPR c++/11987\n\t* parser.c (cp_parser_direct_declarator): Give helpful error about\n\ttrying to define member of a dependent typedef.\n\t* pt.c (resolve_typename_type): Don't resolve a typedef typename.\n\t* tree.c (typedef_variant_p): New.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r154149", "tree": {"sha": "90d7953a7498a3ee4c4554636ecc5116b2ea716d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90d7953a7498a3ee4c4554636ecc5116b2ea716d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc1e08468e6e828266648443e01c61e213aa33a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e08468e6e828266648443e01c61e213aa33a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1e08468e6e828266648443e01c61e213aa33a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e08468e6e828266648443e01c61e213aa33a8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "268bab853ddd5736056a371fd33aedd68e81cff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268bab853ddd5736056a371fd33aedd68e81cff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268bab853ddd5736056a371fd33aedd68e81cff9"}], "stats": {"total": 60, "additions": 55, "deletions": 5}, "files": [{"sha": "1ffa86a78e96461f92c478e3824e2bca20141d59", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -1,3 +1,12 @@\n+2009-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/11987\n+\t* parser.c (cp_parser_direct_declarator): Give helpful error about\n+\ttrying to define member of a dependent typedef.\n+\t* pt.c (resolve_typename_type): Don't resolve a typedef typename.\n+\t* tree.c (typedef_variant_p): New.\n+\t* cp-tree.h: Declare it.\n+\n 2009-11-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/27078"}, {"sha": "a71dc739cfa66d2f9c6856a44aaa6cd36b56f28b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -5098,6 +5098,7 @@ extern bool type_has_nontrivial_copy_init\t(const_tree);\n extern bool class_tmpl_impl_spec_p\t\t(const_tree);\n extern int zero_init_p\t\t\t\t(const_tree);\n extern tree strip_typedefs\t\t\t(tree);\n+extern bool typedef_variant_p\t\t\t(tree);\n extern tree copy_binfo\t\t\t\t(tree, tree, tree,\n \t\t\t\t\t\t tree *, int);\n extern int member_p\t\t\t\t(const_tree);"}, {"sha": "05def24ce2307321ef9b3e19ed1b813fb85c0289", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -14191,10 +14191,17 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t\t\t\t      /*only_current_p=*/false);\n \t\t/* If that failed, the declarator is invalid.  */\n \t\tif (TREE_CODE (type) == TYPENAME_TYPE)\n-\t\t  error_at (declarator_id_start_token->location,\n-\t\t\t    \"%<%T::%E%> is not a type\",\n-\t\t\t    TYPE_CONTEXT (qualifying_scope),\n-\t\t\t    TYPE_IDENTIFIER (qualifying_scope));\n+\t\t  {\n+\t\t    if (typedef_variant_p (type))\n+\t\t      error_at (declarator_id_start_token->location,\n+\t\t\t\t\"cannot define member of dependent typedef \"\n+\t\t\t\t\"%qT\", type);\n+\t\t    else\n+\t\t      error_at (declarator_id_start_token->location,\n+\t\t\t\t\"%<%T::%E%> is not a type\",\n+\t\t\t\tTYPE_CONTEXT (qualifying_scope),\n+\t\t\t\tTYPE_IDENTIFIER (qualifying_scope));\n+\t\t  }\n \t\tqualifying_scope = type;\n \t      }\n "}, {"sha": "85d9fff7b565e7139052dddb99b3b1dfae3cf9df", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -17689,6 +17689,9 @@ resolve_typename_type (tree type, bool only_current_p)\n      to look inside it.  */\n   if (only_current_p && !currently_open_class (scope))\n     return type;\n+  /* If this is a typedef, we don't want to look inside (c++/11987).  */\n+  if (typedef_variant_p (type))\n+    return type;\n   /* If SCOPE isn't the template itself, it will not have a valid\n      TYPE_FIELDS list.  */\n   if (same_type_p (scope, CLASSTYPE_PRIMARY_TEMPLATE_TYPE (scope)))"}, {"sha": "f9e1cd707a9a324cce0b991ede9ef4e93cba88f2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -1067,6 +1067,14 @@ strip_typedefs (tree t)\n   return cp_build_qualified_type (result, cp_type_quals (t));\n }\n \n+/* Returns true iff TYPE is a type variant created for a typedef. */\n+\n+bool\n+typedef_variant_p (tree type)\n+{\n+  return is_typedef_decl (TYPE_NAME (type));\n+}\n+\n \f\n /* Makes a copy of BINFO and TYPE, which is to be inherited into a\n    graph dominated by T.  If BINFO is NULL, TYPE is a dependent base,"}, {"sha": "20f4686bf7e3302b65cabc402a1555b40e19dc96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -1,3 +1,9 @@\n+2009-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/11987\n+\t* g++.dg/parse/typename11.C: New.\n+\t* g++.dg/template/crash48.C: Adjust.\n+\n 2009-11-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/42001"}, {"sha": "a79e6d88708e7b4728b8d8acae8f3ce340072e41", "filename": "gcc/testsuite/g++.dg/parse/typename11.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename11.C?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/11987\n+\n+template <int dim> struct X {\n+  struct I { I(); };\n+};\n+\n+template <int dim> struct Y : X<dim> {\n+  typedef typename X<dim>::I I;\n+};\n+\n+// note: I is nested type in X, not Y!\n+template <int dim>\n+Y<dim>::I::I () {}\t\t// { dg-error \"dependent typedef\" }\n+// { dg-error \"no type|dependent type\" \"\" { target *-*-* } 13 }\n+\n+template struct Y<1>;"}, {"sha": "6aa3aa3ed26b4cc66452b89c282336d5dfe858e3", "filename": "gcc/testsuite/g++.dg/template/crash48.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e08468e6e828266648443e01c61e213aa33a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash48.C?ref=fc1e08468e6e828266648443e01c61e213aa33a8", "patch": "@@ -7,4 +7,4 @@ template<typename T> struct A\n   typedef typename T::X X;\n };\n \n-template<typename T> A<T>::X::X() {} // { dg-error \"no type|invalid use|not a type\" }\n+template<typename T> A<T>::X::X() {} // { dg-error \"no type|invalid use|not a type|dependent\" }"}]}