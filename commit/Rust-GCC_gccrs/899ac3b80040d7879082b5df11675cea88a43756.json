{"sha": "899ac3b80040d7879082b5df11675cea88a43756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5YWMzYjgwMDQwZDc4NzkwODJiNWRmMTE2NzVjZWE4OGE0Mzc1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-12-04T22:52:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-12-04T22:52:07Z"}, "message": "PR c++/83273 - constexpr if allows non-constant condition\n\n\t* semantics.c (finish_if_stmt_cond): Use require_constant_expression\n\trather than is_constant_expression.\n\t* constexpr.c (potential_constant_expression_1) [LAMBDA_EXPR]: Allow\n\tin C++17.\n\nFrom-SVN: r255390", "tree": {"sha": "5044a11213ef3456a0847e4bfbb8801ef4d9b571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5044a11213ef3456a0847e4bfbb8801ef4d9b571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/899ac3b80040d7879082b5df11675cea88a43756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899ac3b80040d7879082b5df11675cea88a43756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/899ac3b80040d7879082b5df11675cea88a43756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899ac3b80040d7879082b5df11675cea88a43756/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3abed16a01153c7a72d5795076c392cdb19c9dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3abed16a01153c7a72d5795076c392cdb19c9dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3abed16a01153c7a72d5795076c392cdb19c9dd"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "8760a701677790e199de57d74834d026a6012abf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=899ac3b80040d7879082b5df11675cea88a43756", "patch": "@@ -1,3 +1,11 @@\n+2017-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/83273 - constexpr if allows non-constant condition\n+\t* semantics.c (finish_if_stmt_cond): Use require_constant_expression\n+\trather than is_constant_expression.\n+\t* constexpr.c (potential_constant_expression_1) [LAMBDA_EXPR]: Allow\n+\tin C++17.\n+\n 2017-12-01  Jason Merrill  <jason@redhat.com>\n \n \tGive #include hints for <complex>."}, {"sha": "6dfecfc1b144dfbd50782073a74a57b52972d8a8", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=899ac3b80040d7879082b5df11675cea88a43756", "patch": "@@ -5524,6 +5524,14 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n       return RECUR (STMT_EXPR_STMT (t), rval);\n \n     case LAMBDA_EXPR:\n+      if (cxx_dialect >= cxx17)\n+\t/* In C++17 lambdas can be constexpr, don't give up yet.  */\n+\treturn true;\n+      else if (flags & tf_error)\n+\terror_at (loc, \"lambda-expression is not a constant expression \"\n+\t\t  \"before C++17\");\n+      return false;\n+\n     case DYNAMIC_CAST_EXPR:\n     case PSEUDO_DTOR_EXPR:\n     case NEW_EXPR:"}, {"sha": "c6726324ae6205a155a3c49bfac81209f494c464", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=899ac3b80040d7879082b5df11675cea88a43756", "patch": "@@ -731,7 +731,7 @@ finish_if_stmt_cond (tree cond, tree if_stmt)\n {\n   cond = maybe_convert_cond (cond);\n   if (IF_STMT_CONSTEXPR_P (if_stmt)\n-      && is_constant_expression (cond)\n+      && require_constant_expression (cond)\n       && !value_dependent_expression_p (cond))\n     {\n       cond = instantiate_non_dependent_expr (cond);"}, {"sha": "db984a6467774faf0d2349f79a8372bedc2a2823", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C?ref=899ac3b80040d7879082b5df11675cea88a43756", "patch": "@@ -7,7 +7,7 @@ struct T {\n \n template <class MustBeTemplate>\n constexpr auto bf(T t) {\n-    if constexpr(t.foo()) {\n+    if constexpr(t.foo()) {\t// { dg-error \"constant expression\" }\n         return false;\n     }\n     return true;"}, {"sha": "55dbfd902eea989ef495abf7b9596efeebeda2da", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if13.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ac3b80040d7879082b5df11675cea88a43756/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C?ref=899ac3b80040d7879082b5df11675cea88a43756", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/83273\n+// { dg-options -std=c++17 }\n+\n+int main()\n+{\n+  auto d = 42;\n+  if constexpr (d > 0) {\t// { dg-error \"constant expression\" }\n+      return d;\n+  }\n+}"}]}