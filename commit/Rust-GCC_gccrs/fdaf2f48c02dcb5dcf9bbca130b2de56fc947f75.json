{"sha": "fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhZjJmNDhjMDJkY2I1ZGNmOWJiY2ExMzBiMmRlNTZmYzk0N2Y3NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-06-12T18:32:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-06-12T18:32:04Z"}, "message": "re PR c++/53599 (gcc-4.7.1_rc20120606 segfaults compiling boost.karma)\n\n\tPR c++/53599\n\t* name-lookup.c (pushtag_1): Add a DECL_EXPR for a local class.\n\t* semantics.c (finish_cond): Build a COMPOUND_EXPR.\n\t* pt.c (tsubst_expr) [COMPOUND_EXPR]: Handle.\n\t[DECL_EXPR]: Don't call cp_finish_decl for an implicit typedef.\n\tDon't return the decl.\n\nFrom-SVN: r188473", "tree": {"sha": "80e3be6314fbf654191d8c01e090f396c9f34812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e3be6314fbf654191d8c01e090f396c9f34812"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0089c3bb1eb0c8bb8d0f8d0d91dd29f1ed760893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0089c3bb1eb0c8bb8d0f8d0d91dd29f1ed760893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0089c3bb1eb0c8bb8d0f8d0d91dd29f1ed760893"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "203955e3bc7d8bce5d556551576fe04ec5c25c87", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -1,3 +1,12 @@\n+2012-06-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/53599\n+\t* name-lookup.c (pushtag_1): Add a DECL_EXPR for a local class.\n+\t* semantics.c (finish_cond): Build a COMPOUND_EXPR.\n+\t* pt.c (tsubst_expr) [COMPOUND_EXPR]: Handle.\n+\t[DECL_EXPR]: Don't call cp_finish_decl for an implicit typedef.\n+\tDon't return the decl.\n+\n 2012-06-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR c++/53605"}, {"sha": "0f2882044c7297433edef7643554ba3f72255246", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -5796,7 +5796,16 @@ pushtag_1 (tree name, tree type, tag_scope scope)\n \t class.)  */\n       if (TYPE_CONTEXT (type)\n \t  && TREE_CODE (TYPE_CONTEXT (type)) == FUNCTION_DECL)\n-\tVEC_safe_push (tree, gc, local_classes, type);\n+\t{\n+\t  if (processing_template_decl)\n+\t    {\n+\t      /* Push a DECL_EXPR so we call pushtag at the right time in\n+\t\t template instantiation rather than in some nested context.  */\n+\t      add_decl_expr (decl);\n+\t    }\n+\t  else\n+\t    VEC_safe_push (tree, gc, local_classes, type);\n+\t}\n     }\n   if (b->kind == sk_class\n       && !COMPLETE_TYPE_P (current_class_type))"}, {"sha": "04f7be81f3e7f23a3fb62ad01088b8355687f90b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -12887,6 +12887,8 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t    DECL_CONTEXT (decl) = current_function_decl;\n \t\t    insert_capture_proxy (decl);\n \t\t  }\n+\t\telse if (DECL_IMPLICIT_TYPEDEF_P (t))\n+\t\t  /* We already did a pushtag.  */;\n \t\telse\n \t\t  {\n \t\t    int const_init = false;\n@@ -12930,9 +12932,7 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t      }\n \t  }\n \n-\t/* A DECL_EXPR can also be used as an expression, in the condition\n-\t   clause of an if/for/while construct.  */\n-\treturn decl;\n+\tbreak;\n       }\n \n     case FOR_STMT:\n@@ -13341,6 +13341,15 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n       error (\"use %<...%> to expand argument pack\");\n       return error_mark_node;\n \n+    case COMPOUND_EXPR:\n+      tmp = RECUR (TREE_OPERAND (t, 0));\n+      if (tmp == NULL_TREE)\n+\t/* If the first operand was a statement, we're done with it.  */\n+\treturn RECUR (TREE_OPERAND (t, 1));\n+      return build_x_compound_expr (EXPR_LOCATION (t), tmp,\n+\t\t\t\t    RECUR (TREE_OPERAND (t, 1)),\n+\t\t\t\t    complain);\n+\n     default:\n       gcc_assert (!STATEMENT_CODE_P (TREE_CODE (t)));\n "}, {"sha": "f8ad2a5884a91a1cdbb56c039483e87484677930", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -509,11 +509,14 @@ finish_cond (tree *cond_p, tree expr)\n   if (processing_template_decl)\n     {\n       tree cond = pop_stmt_list (*cond_p);\n-      if (TREE_CODE (cond) == DECL_EXPR)\n-\texpr = cond;\n \n-      if (check_for_bare_parameter_packs (expr))\n-        *cond_p = error_mark_node;\n+      if (expr == NULL_TREE)\n+\t/* Empty condition in 'for'.  */\n+\tgcc_assert (empty_expr_stmt_p (cond));\n+      else if (check_for_bare_parameter_packs (expr))\n+        expr = error_mark_node;\n+      else if (!empty_expr_stmt_p (cond))\n+\texpr = build2 (COMPOUND_EXPR, TREE_TYPE (expr), cond, expr);\n     }\n   *cond_p = expr;\n }"}, {"sha": "908e25b07fc5510741d9bb6621b6ce8850efba6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -1,3 +1,8 @@\n+2012-06-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/53599\n+\t* g++.dg/template/local7.C: New.\n+\n 2012-06-12  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/53511"}, {"sha": "3045534eaa6a1b94bac2da53db19ab0ee5fa008c", "filename": "gcc/testsuite/g++.dg/template/local7.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal7.C?ref=fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/53599\n+\n+template <typename T>\n+int foo ()\n+{\n+  struct F;\n+  struct G\n+  {\n+    static int F::* bar();\n+  };\n+\n+  return sizeof(G);\n+}\n+\n+int z = foo <int> ();"}]}