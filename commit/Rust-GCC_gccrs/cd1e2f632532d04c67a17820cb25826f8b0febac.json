{"sha": "cd1e2f632532d04c67a17820cb25826f8b0febac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxZTJmNjMyNTMyZDA0YzY3YTE3ODIwY2IyNTgyNmY4YjBmZWJhYw==", "commit": {"author": {"name": "Marcus Comstedt", "email": "marcus@mc.pp.se", "date": "2021-03-19T19:49:04Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2021-03-23T09:31:13Z"}, "message": "RISC-V: Add riscv{32,64}be with big endian as default\n\ngcc/\n\t* common/config/riscv/riscv-common.c\n\t(TARGET_DEFAULT_TARGET_FLAGS): Set default endianness.\n\t* config.gcc (riscv32be-*, riscv64be-*): Set\n\tTARGET_BIG_ENDIAN_DEFAULT to 1.\n\t* config/riscv/elf.h (LINK_SPEC): Change -melf* value\n\tdepending on default endianness.\n\t* config/riscv/freebsd.h (LINK_SPEC): Likewise.\n\t* config/riscv/linux.h (LINK_SPEC): Likewise.\n\t* config/riscv/riscv.c (TARGET_DEFAULT_TARGET_FLAGS): Set\n\tdefault endianness.\n\t* config/riscv/riscv.h (DEFAULT_ENDIAN_SPEC): New macro.", "tree": {"sha": "b3b7949338db616d7d2d4837ed52049265bd0a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3b7949338db616d7d2d4837ed52049265bd0a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd1e2f632532d04c67a17820cb25826f8b0febac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e2f632532d04c67a17820cb25826f8b0febac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1e2f632532d04c67a17820cb25826f8b0febac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e2f632532d04c67a17820cb25826f8b0febac/comments", "author": {"login": "zeldin", "id": 411296, "node_id": "MDQ6VXNlcjQxMTI5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/411296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeldin", "html_url": "https://github.com/zeldin", "followers_url": "https://api.github.com/users/zeldin/followers", "following_url": "https://api.github.com/users/zeldin/following{/other_user}", "gists_url": "https://api.github.com/users/zeldin/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeldin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeldin/subscriptions", "organizations_url": "https://api.github.com/users/zeldin/orgs", "repos_url": "https://api.github.com/users/zeldin/repos", "events_url": "https://api.github.com/users/zeldin/events{/privacy}", "received_events_url": "https://api.github.com/users/zeldin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9604fcbb29e457a4824a496905057dcc2e5d78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9604fcbb29e457a4824a496905057dcc2e5d78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9604fcbb29e457a4824a496905057dcc2e5d78a"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "34b74e52a2d148f82598153c79928935e9f3c14a", "filename": "gcc/common/config/riscv/riscv-common.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -32,6 +32,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config/riscv/riscv-protos.h\"\n #include \"config/riscv/riscv-subset.h\"\n \n+#ifdef  TARGET_BIG_ENDIAN_DEFAULT\n+#undef  TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS (MASK_BIG_ENDIAN)\n+#endif\n+\n /* Type for implied ISA info.  */\n struct riscv_implied_info_t\n {"}, {"sha": "ed6203b2efc8e1ed55e8eb761734f3ff83207658", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -2468,6 +2468,11 @@ riscv*-*-linux*)\n \ttmake_file=\"${tmake_file} riscv/t-riscv riscv/t-linux\"\n \tgnu_ld=yes\n \tgas=yes\n+\tcase $target in\n+\triscv32be-*|riscv64be-*)\n+\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\t\t;;\n+\tesac\n \t# Force .init_array support.  The configure script cannot always\n \t# automatically detect that GAS supports it, yet we require it.\n \tgcc_cv_initfini_array=yes\n@@ -2491,6 +2496,11 @@ riscv*-*-elf* | riscv*-*-rtems*)\n \ttmake_file=\"${tmake_file} riscv/t-riscv\"\n \tgnu_ld=yes\n \tgas=yes\n+\tcase $target in\n+\triscv32be-*|riscv64be-*)\n+\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\t\t;;\n+\tesac\n \t# Force .init_array support.  The configure script cannot always\n \t# automatically detect that GAS supports it, yet we require it.\n \tgcc_cv_initfini_array=yes\n@@ -2500,6 +2510,11 @@ riscv*-*-freebsd*)\n \ttmake_file=\"${tmake_file} riscv/t-riscv\"\n \tgnu_ld=yes\n \tgas=yes\n+\tcase $target in\n+\triscv32be-*|riscv64be-*)\n+\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\t\t;;\n+\tesac\n \t# Force .init_array support.  The configure script cannot always\n \t# automatically detect that GAS supports it, yet we require it.\n \tgcc_cv_initfini_array=yes"}, {"sha": "7e65e499031179252b08670e59c36cfa3874b131", "filename": "gcc/config/riscv/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Felf.h?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -18,7 +18,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #define LINK_SPEC \"\\\n--melf\" XLEN_SPEC \"lriscv \\\n+-melf\" XLEN_SPEC DEFAULT_ENDIAN_SPEC \"riscv \\\n %{mno-relax:--no-relax} \\\n %{mbig-endian:-EB} \\\n %{mlittle-endian:-EL} \\"}, {"sha": "6018e7bb764d2dd204a27d40180d93645da8a03d", "filename": "gcc/config/riscv/freebsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ffreebsd.h?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -40,7 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef LINK_SPEC\n #define LINK_SPEC \"\t\t\t\t\t\t\\\n-  -melf\" XLEN_SPEC \"lriscv\t\t\t\t\t\\\n+  -melf\" XLEN_SPEC DEFAULT_ENDIAN_SPEC \"riscv\t\t\t\\\n   %{p:%nconsider using `-pg' instead of `-p' with gprof (1)}\t\\\n   %{v:-V}\t\t\t\t\t\t\t\\\n   %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\\"}, {"sha": "fce5b896e6e5cd39dbfebd87ba7de366ba855cef", "filename": "gcc/config/riscv/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Flinux.h?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -58,7 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{mabi=ilp32:_ilp32}\"\n \n #define LINK_SPEC \"\\\n--melf\" XLEN_SPEC \"lriscv\" LD_EMUL_SUFFIX \" \\\n+-melf\" XLEN_SPEC DEFAULT_ENDIAN_SPEC \"riscv\" LD_EMUL_SUFFIX \" \\\n %{mno-relax:--no-relax} \\\n %{mbig-endian:-EB} \\\n %{mlittle-endian:-EL} \\"}, {"sha": "99b843867b5bc6dadaa772a89b29556765386a0d", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -5526,6 +5526,11 @@ riscv_asan_shadow_offset (void)\n #undef TARGET_ASAN_SHADOW_OFFSET\n #define TARGET_ASAN_SHADOW_OFFSET riscv_asan_shadow_offset\n \n+#ifdef TARGET_BIG_ENDIAN_DEFAULT\n+#undef  TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS (MASK_BIG_ENDIAN)\n+#endif\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-riscv.h\""}, {"sha": "3cc3e864a3ed3772426296e8209b7baae4166efe", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e2f632532d04c67a17820cb25826f8b0febac/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=cd1e2f632532d04c67a17820cb25826f8b0febac", "patch": "@@ -30,6 +30,12 @@ along with GCC; see the file COPYING3.  If not see\n /* Target CPU versions for D.  */\n #define TARGET_D_CPU_VERSIONS riscv_d_target_versions\n \n+#ifdef TARGET_BIG_ENDIAN_DEFAULT\n+#define DEFAULT_ENDIAN_SPEC    \"b\"\n+#else\n+#define DEFAULT_ENDIAN_SPEC    \"l\"\n+#endif\n+\n /* Default target_flags if no switches are specified  */\n \n #ifndef TARGET_DEFAULT"}]}