{"sha": "fa168d9ff4f07bde598f8d924f5c854127598f6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExNjhkOWZmNGYwN2JkZTU5OGY4ZDkyNGY1Yzg1NDEyNzU5OGY2ZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T23:25:34Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T23:25:34Z"}, "message": "trans-array.c (gfc_trans_array_constructor): Loop over the parents.\n\n\t* trans-array.c (gfc_trans_array_constructor): Loop over the parents.\n\nFrom-SVN: r180891", "tree": {"sha": "35e7b8ad12bcffd188618648aa86051fd9b04f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35e7b8ad12bcffd188618648aa86051fd9b04f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa168d9ff4f07bde598f8d924f5c854127598f6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa168d9ff4f07bde598f8d924f5c854127598f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa168d9ff4f07bde598f8d924f5c854127598f6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa168d9ff4f07bde598f8d924f5c854127598f6e/comments", "author": null, "committer": null, "parents": [{"sha": "5125d6d5d76fa59b01ccbb83997ce8ca335a0036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5125d6d5d76fa59b01ccbb83997ce8ca335a0036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5125d6d5d76fa59b01ccbb83997ce8ca335a0036"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "196f3dae126f996a03fa49e36c06487c8b23dd24", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa168d9ff4f07bde598f8d924f5c854127598f6e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa168d9ff4f07bde598f8d924f5c854127598f6e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fa168d9ff4f07bde598f8d924f5c854127598f6e", "patch": "@@ -1,3 +1,7 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_trans_array_constructor): Loop over the parents.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_set_loop_bounds_from_array_spec): Loop over the"}, {"sha": "463a0a2cf6f614a935d3bb28599e498526465b3c", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa168d9ff4f07bde598f8d924f5c854127598f6e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa168d9ff4f07bde598f8d924f5c854127598f6e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=fa168d9ff4f07bde598f8d924f5c854127598f6e", "patch": "@@ -1953,6 +1953,7 @@ trans_constant_array_constructor (gfc_ss * ss, tree type)\n     }\n }\n \n+\n /* Helper routine of gfc_trans_array_constructor to determine if the\n    bounds of the loop specified by LOOP are constant and simple enough\n    to use with trans_constant_array_constructor.  Returns the\n@@ -2010,6 +2011,7 @@ trans_array_constructor (gfc_ss * ss, locus * where)\n   gfc_loopinfo *loop;\n   gfc_ss_info *ss_info;\n   gfc_expr *expr;\n+  gfc_ss *s;\n \n   /* Save the old values for nested checking.  */\n   old_first_len = first_len;\n@@ -2078,16 +2080,20 @@ trans_array_constructor (gfc_ss * ss, locus * where)\n   if (expr->shape && loop->dimen > 1 && loop->to[0] == NULL_TREE)\n     {\n       /* We have a multidimensional parameter.  */\n-      int n;\n-      for (n = 0; n < expr->rank; n++)\n-      {\n-\tloop->from[n] = gfc_index_zero_node;\n-\tloop->to[n] = gfc_conv_mpz_to_tree (expr->shape [n],\n-\t\t\t\t\t    gfc_index_integer_kind);\n-\tloop->to[n] = fold_build2_loc (input_location, MINUS_EXPR,\n-\t\t\t  \t       gfc_array_index_type,\n-\t\t\t\t       loop->to[n], gfc_index_one_node);\n-      }\n+      for (s = ss; s; s = s->parent)\n+\t{\n+\t  int n;\n+\t  for (n = 0; n < s->loop->dimen; n++)\n+\t    {\n+\t      s->loop->from[n] = gfc_index_zero_node;\n+\t      s->loop->to[n] = gfc_conv_mpz_to_tree (expr->shape[s->dim[n]],\n+\t\t\t\t\t\t     gfc_index_integer_kind);\n+\t      s->loop->to[n] = fold_build2_loc (input_location, MINUS_EXPR,\n+\t\t\t\t\t\tgfc_array_index_type,\n+\t\t\t\t\t\ts->loop->to[n],\n+\t\t\t\t\t\tgfc_index_one_node);\n+\t    }\n+\t}\n     }\n \n   if (loop->to[0] == NULL_TREE)"}]}