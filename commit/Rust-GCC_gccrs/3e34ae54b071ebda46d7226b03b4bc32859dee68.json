{"sha": "3e34ae54b071ebda46d7226b03b4bc32859dee68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UzNGFlNTRiMDcxZWJkYTQ2ZDcyMjZiMDNiNGJjMzI4NTlkZWU2OA==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-06-21T09:59:20Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:17Z"}, "message": "Added (really crappy) GCN target hook", "tree": {"sha": "23e6a8ce99791508637c64b6707f54fee60f9cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e6a8ce99791508637c64b6707f54fee60f9cd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e34ae54b071ebda46d7226b03b4bc32859dee68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e34ae54b071ebda46d7226b03b4bc32859dee68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e34ae54b071ebda46d7226b03b4bc32859dee68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e34ae54b071ebda46d7226b03b4bc32859dee68/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b91a85f0f6b3a3800beb351db95dd758efc85c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b91a85f0f6b3a3800beb351db95dd758efc85c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b91a85f0f6b3a3800beb351db95dd758efc85c"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "2ca7cc294fe76a84115b6273a0342c030e4ec7f0", "filename": "gcc/config/gcn/gcn.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e34ae54b071ebda46d7226b03b4bc32859dee68/gcc%2Fconfig%2Fgcn%2Fgcn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e34ae54b071ebda46d7226b03b4bc32859dee68/gcc%2Fconfig%2Fgcn%2Fgcn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.h?ref=3e34ae54b071ebda46d7226b03b4bc32859dee68", "patch": "@@ -27,6 +27,28 @@\n     }\t\t\t\t\t\\\n   while(0)\n \n+#define TARGET_RUST_CPU_INFO()   \\\n+  do {      \\\n+    rust_add_target_info(\"target_arch\", \"amdgcn\");  \\\n+    /*TODO: maybe make arches features? e.g. \"fiji\", \"gfx900\"*/ \\\n+    /*TODO: is defining via \"is arch 3\" or \"is arch 3 or higher\" better?*/ \\\n+    if (TARGET_GCN3)   \\\n+      rust_add_target_info(\"target_feature\", \"gcn3\");   \\\n+    if (TARGET_GCN5)   \\\n+      rust_add_target_info(\"target_feature\", \"gcn5\");   \\\n+    if (TARGET_ABI64)   \\\n+      rust_add_target_info(\"target_feature\", \"64\");   \\\n+    else /*are these defines actually useful?*/  \\\n+      rust_add_target_info(\"target_feature\", \"32\");   \\\n+    /*TODO: figure out how to check gomp feature*/ \\\n+    /*TODO: ensure that vars below are accessible - defined weirdly so may not be*/ \\\n+    if (flag_bypass_init_error)   \\\n+      rust_add_target_info(\"target_feature\", \"bypass-init-error\");   \\\n+    if (flag_worker_partitioning)   \\\n+      rust_add_target_info(\"target_feature\", \"acc-experimental-workers\");   \\\n+    /*TODO: figure out how to represent stack-size and local-symbol-id as defines*/ \\\n+  } while (0)\n+\n /* Support for a compile-time default architecture and tuning.\n    The rules are:\n    --with-arch is ignored if -march is specified."}]}