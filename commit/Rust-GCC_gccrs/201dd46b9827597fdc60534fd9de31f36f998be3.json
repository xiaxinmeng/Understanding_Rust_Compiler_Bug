{"sha": "201dd46b9827597fdc60534fd9de31f36f998be3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxZGQ0NmI5ODI3NTk3ZmRjNjA1MzRmZDlkZTMxZjM2Zjk5OGJlMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-11T08:37:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-11T08:37:00Z"}, "message": "expr.c (store_constructor): Use rtvec_alloc instead of alloca+gen_rtvec_v...\n\n        * expr.c (store_constructor): Use rtvec_alloc instead of\n        alloca+gen_rtvec_v, and an incorrect number passed to alloca.\n\nFrom-SVN: r93177", "tree": {"sha": "026fb0157df09611a19dccbb67c7d5495c7b283f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/026fb0157df09611a19dccbb67c7d5495c7b283f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/201dd46b9827597fdc60534fd9de31f36f998be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201dd46b9827597fdc60534fd9de31f36f998be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201dd46b9827597fdc60534fd9de31f36f998be3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201dd46b9827597fdc60534fd9de31f36f998be3/comments", "author": null, "committer": null, "parents": [{"sha": "35c0104b03b990b8fb2db82dfcf732ae3aad753d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c0104b03b990b8fb2db82dfcf732ae3aad753d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c0104b03b990b8fb2db82dfcf732ae3aad753d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "a9d0155ea943d46094172ada185f6f5859d8708a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201dd46b9827597fdc60534fd9de31f36f998be3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201dd46b9827597fdc60534fd9de31f36f998be3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=201dd46b9827597fdc60534fd9de31f36f998be3", "patch": "@@ -1,3 +1,8 @@\n+2005-01-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* expr.c (store_constructor): Use rtvec_alloc instead of\n+\talloca+gen_rtvec_v, and an incorrect number passed to alloca.\n+\n 2005-01-11  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/alpha/alpha.c, config/i386/mmx.md: Fix comment typos."}, {"sha": "2e1320ec33628200d22352583c6f3fc83b6f7aa6", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201dd46b9827597fdc60534fd9de31f36f998be3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201dd46b9827597fdc60534fd9de31f36f998be3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=201dd46b9827597fdc60534fd9de31f36f998be3", "patch": "@@ -4970,7 +4970,7 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \tenum machine_mode eltmode = TYPE_MODE (elttype);\n \tHOST_WIDE_INT bitsize;\n \tHOST_WIDE_INT bitpos;\n-\trtx *vector = NULL;\n+\trtvec vector = NULL;\n \tunsigned n_elts;\n \t\n \tgcc_assert (eltmode != BLKmode);\n@@ -4985,9 +4985,9 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \t      {\n \t\tunsigned int i;\n \t\t\n-\t\tvector = alloca (n_elts);\n+\t\tvector = rtvec_alloc (n_elts);\n \t\tfor (i = 0; i < n_elts; i++)\n-\t\t  vector [i] = CONST0_RTX (GET_MODE_INNER (mode));\n+\t\t  RTVEC_ELT (vector, i) = CONST0_RTX (GET_MODE_INNER (mode));\n \t      }\n \t  }\n \t\n@@ -5058,7 +5058,8 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \t        /* Vector CONSTRUCTORs should only be built from smaller\n \t\t   vectors in the case of BLKmode vectors.  */\n \t\tgcc_assert (TREE_CODE (TREE_TYPE (value)) != VECTOR_TYPE);\n-\t\tvector[eltpos] = expand_expr (value, NULL_RTX, VOIDmode, 0);\n+\t\tRTVEC_ELT (vector, eltpos)\n+\t\t  = expand_expr (value, NULL_RTX, VOIDmode, 0);\n \t      }\n \t    else\n \t      {\n@@ -5076,8 +5077,7 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \tif (vector)\n \t  emit_insn (GEN_FCN (icode)\n \t\t     (target,\n-\t\t      gen_rtx_PARALLEL (GET_MODE (target),\n-\t\t\t\t\tgen_rtvec_v (n_elts, vector))));\n+\t\t      gen_rtx_PARALLEL (GET_MODE (target), vector)));\n \tbreak;\n       }\n       "}]}