{"sha": "44967af830a8d887f0d7b6848d40e1c0870b6b0e", "node_id": "C_kwDOANBUbNoAKDQ0OTY3YWY4MzBhOGQ4ODdmMGQ3YjY4NDhkNDBlMWMwODcwYjZiMGU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-20T17:13:00Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T19:36:54Z"}, "message": "libstdc++: Simplify __throw_out_of_range_fmt for freestanding\n\nThere is no point expanding the format string if we're just going to\nabort instead of throw an exception. And for freestanding or non-verbose\nbuilds we shouldn't do it either, to reduce the binary size.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++11/functexcept.cc (__throw_out_of_range_fmt): Do not\n\texpand the format string for freestanding, or non-vebose, or if\n\twe're just going to abort anyway.\n\t* src/c++11/snprintf_lite.cc: Remove unused header and\n\tdeclaration.", "tree": {"sha": "eee27696cc2b8f474e2d37c3198e60e040980f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee27696cc2b8f474e2d37c3198e60e040980f1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44967af830a8d887f0d7b6848d40e1c0870b6b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44967af830a8d887f0d7b6848d40e1c0870b6b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44967af830a8d887f0d7b6848d40e1c0870b6b0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44967af830a8d887f0d7b6848d40e1c0870b6b0e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc1b29508d765b874372f4b1737ac6dc86962506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc1b29508d765b874372f4b1737ac6dc86962506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc1b29508d765b874372f4b1737ac6dc86962506"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "d1570b69f15b10d8c4b3ea8cf0fc4fc70391b560", "filename": "libstdc++-v3/src/c++11/functexcept.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44967af830a8d887f0d7b6848d40e1c0870b6b0e/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44967af830a8d887f0d7b6848d40e1c0870b6b0e/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc?ref=44967af830a8d887f0d7b6848d40e1c0870b6b0e", "patch": "@@ -88,6 +88,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   void\n   __throw_out_of_range_fmt(const char* __fmt, ...)\n   {\n+#if _GLIBCXX_HOSTED && _GLIBCXX_VERBOSE && __cpp_exceptions\n     const size_t __len = __builtin_strlen(__fmt);\n     // We expect at most 2 numbers, and 1 short string. The additional\n     // 512 bytes should provide more than enough space for expansion.\n@@ -96,9 +97,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     va_list __ap;\n \n     va_start(__ap, __fmt);\n-    __gnu_cxx::__snprintf_lite(__s, __alloca_size, __fmt, __ap);\n-    _GLIBCXX_THROW_OR_ABORT(out_of_range(_(__s)));\n+    __gnu_cxx::__snprintf_lite(__s, __alloca_size, _(__fmt), __ap);\n+    throw out_of_range(__s);\n     va_end(__ap);  // Not reached.\n+#else\n+    __throw_out_of_range(__fmt);\n+#endif\n   }\n \n   void"}, {"sha": "ffeb7bf64c0137e8f1072b523547f0ac49201162", "filename": "libstdc++-v3/src/c++11/snprintf_lite.cc", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44967af830a8d887f0d7b6848d40e1c0870b6b0e/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsnprintf_lite.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44967af830a8d887f0d7b6848d40e1c0870b6b0e/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsnprintf_lite.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsnprintf_lite.cc?ref=44967af830a8d887f0d7b6848d40e1c0870b6b0e", "patch": "@@ -24,17 +24,8 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <stdarg.h>\n+#include <stddef.h>\n #include <bits/functexcept.h>\n-#include <bits/locale_facets.h>\n-\n-namespace std {\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-  template<typename _CharT, typename _ValueT>\n-  int\n-  __int_to_char(_CharT* __bufend, _ValueT __v, const _CharT* __lit,\n-                ios_base::fmtflags __flags, bool __dec);\n-_GLIBCXX_END_NAMESPACE_VERSION\n-}\n \n namespace __gnu_cxx {\n "}]}