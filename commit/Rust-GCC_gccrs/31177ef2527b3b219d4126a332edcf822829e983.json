{"sha": "31177ef2527b3b219d4126a332edcf822829e983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExNzdlZjI1MjdiM2IyMTlkNDEyNmEzMzJlZGNmODIyODI5ZTk4Mw==", "commit": {"author": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2016-05-30T19:33:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-05-30T19:33:34Z"}, "message": "config.gcc (sparc*-*-*): Support cpu_32, cpu_64, tune_32 and tune_64.\n\n2016-05-30  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* config.gcc (sparc*-*-*): Support cpu_32, cpu_64, tune_32 and\n\ttune_64.\n\t* doc/install.texi (--with-cpu-32, --with-cpu-64): Document\n\tsupport on SPARC.\n\t* config/sparc/linux64.h (OPTION_DEFAULT_SPECS): Add entries for\n\tcpu_32, cpu_64, tune_32 and tune_64.\n\t* config/sparc/sol2.h (OPTION_DEFAULT_SPECS): Likewise.\n\nFrom-SVN: r236897", "tree": {"sha": "3e7c63755cf7e5561f96573dc1592ed83ec186a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e7c63755cf7e5561f96573dc1592ed83ec186a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31177ef2527b3b219d4126a332edcf822829e983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31177ef2527b3b219d4126a332edcf822829e983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31177ef2527b3b219d4126a332edcf822829e983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31177ef2527b3b219d4126a332edcf822829e983/comments", "author": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf"}], "stats": {"total": 68, "additions": 59, "deletions": 9}, "files": [{"sha": "7c023ff32b07a95dfbc301db5db364de1807a683", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31177ef2527b3b219d4126a332edcf822829e983/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31177ef2527b3b219d4126a332edcf822829e983/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31177ef2527b3b219d4126a332edcf822829e983", "patch": "@@ -1,3 +1,13 @@\n+2016-05-30  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config.gcc (sparc*-*-*): Support cpu_32, cpu_64, tune_32 and\n+\ttune_64.\n+\t* doc/install.texi (--with-cpu-32, --with-cpu-64): Document\n+\tsupport on SPARC.\n+\t* config/sparc/linux64.h (OPTION_DEFAULT_SPECS): Add entries for\n+\tcpu_32, cpu_64, tune_32 and tune_64.\n+\t* config/sparc/sol2.h (OPTION_DEFAULT_SPECS): Likewise.\n+\n 2016-05-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sync.md (mfence_nosse): Use \"lock orl $0, -4(%esp)\"."}, {"sha": "d0a388090b70d2e888803b978ee87a5aeb6c0a70", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=31177ef2527b3b219d4126a332edcf822829e983", "patch": "@@ -4250,9 +4250,9 @@ case \"${target}\" in\n \t\tesac\n \t\t;;\n \tsparc*-*-*)\n-\t\tsupported_defaults=\"cpu float tune\"\n+\t\tsupported_defaults=\"cpu cpu_32 cpu_64 float tune tune_32 tune_64\"\n \n-\t\tfor which in cpu tune; do\n+\t\tfor which in cpu cpu_32 cpu_64 tune tune_32 tune_64; do\n \t\t\teval \"val=\\$with_$which\"\n \t\t\tcase ${val} in\n \t\t\t\"\" | sparc | sparcv9 | sparc64 \\"}, {"sha": "9d53c29ede107afbf57bb8444782321926a91b33", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=31177ef2527b3b219d4126a332edcf822829e983", "patch": "@@ -164,22 +164,42 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #endif\n \n /* Support for a compile-time default CPU, et cetera.  The rules are:\n-   --with-cpu is ignored if -mcpu is specified.\n-   --with-tune is ignored if -mtune is specified.\n+   --with-cpu is ignored if -mcpu is specified; likewise --with-cpu-32\n+     and --with-cpu-64.\n+   --with-tune is ignored if -mtune is specified; likewise --with-tune-32\n+     and --with-tune-64.\n    --with-float is ignored if -mhard-float, -msoft-float, -mfpu, or -mno-fpu\n      are specified.\n    In the SPARC_BI_ARCH compiler we cannot pass %{!mcpu=*:-mcpu=%(VALUE)}\n    here, otherwise say -mcpu=v7 would be passed even when -m64.\n-   CC1_SPEC above takes care of this instead.  */\n+   CC1_SPEC above takes care of this instead.\n+\n+   Note that the order of the cpu* and tune* options matters: the\n+   config.gcc file always sets with_cpu to some value, even if the\n+   user didn't use --with-cpu when invoking the configure script.\n+   This value is based on the target name.  Therefore we have to make\n+   sure that --with-cpu-32 takes precedence to --with-cpu in < v9\n+   systems, and that --with-cpu-64 takes precedence to --with-cpu in\n+   >= v9 systems.  As for the tune* options, in some platforms\n+   config.gcc also sets a default value for it if the user didn't use\n+   --with-tune when invoking the configure script.  */\n #undef OPTION_DEFAULT_SPECS\n #if DEFAULT_ARCH32_P\n #define OPTION_DEFAULT_SPECS \\\n+  {\"cpu_32\", \"%{!m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"cpu_64\", \"%{m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n   {\"cpu\", \"%{!m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune_32\", \"%{!m64:%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n+  {\"tune_64\", \"%{m64:%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:%{!mfpu:%{!mno-fpu:-m%(VALUE)-float}}}}\" }\n #else\n #define OPTION_DEFAULT_SPECS \\\n+  {\"cpu_32\", \"%{m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"cpu_64\", \"%{!m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n   {\"cpu\", \"%{!m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune_32\", \"%{m32:%{!mtune=*:-mtune=%(VALUE)}}\" },\t\\\n+  {\"tune_64\", \"%{!m32:%{!mtune=*:-mtune=%(VALUE)}}\" },\t\\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:%{!mfpu:%{!mno-fpu:-m%(VALUE)-float}}}}\" }\n #endif"}, {"sha": "a54e1ecb677a579ca8f475d9463794fde32e5f12", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=31177ef2527b3b219d4126a332edcf822829e983", "patch": "@@ -231,22 +231,42 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #endif\n \n /* Support for a compile-time default CPU, et cetera.  The rules are:\n-   --with-cpu is ignored if -mcpu is specified.\n-   --with-tune is ignored if -mtune is specified.\n+   --with-cpu is ignored if -mcpu is specified; likewise --with-cpu-32\n+     and --with-cpu-64.\n+   --with-tune is ignored if -mtune is specified; likewise --with-tune-32\n+     and --with-tune-64.\n    --with-float is ignored if -mhard-float, -msoft-float, -mfpu, or -mno-fpu\n      are specified.\n    In the SPARC_BI_ARCH compiler we cannot pass %{!mcpu=*:-mcpu=%(VALUE)}\n    here, otherwise say -mcpu=v7 would be passed even when -m64.\n-   CC1_SPEC above takes care of this instead.  */\n+   CC1_SPEC above takes care of this instead.\n+\n+   Note that the order of the cpu* and tune* options matters: the\n+   config.gcc file always sets with_cpu to some value, even if the\n+   user didn't use --with-cpu when invoking the configure script.\n+   This value is based on the target name.  Therefore we have to make\n+   sure that --with-cpu-32 takes precedence to --with-cpu in < v9\n+   systems, and that --with-cpu-64 takes precedence to --with-cpu in\n+   >= v9 systems.  As for the tune* options, in some platforms\n+   config.gcc also sets a default value for it if the user didn't use\n+   --with-tune when invoking the configure script.  */\n #undef OPTION_DEFAULT_SPECS\n #if DEFAULT_ARCH32_P\n #define OPTION_DEFAULT_SPECS \\\n+  {\"cpu_32\", \"%{!m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"cpu_64\", \"%{m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n   {\"cpu\", \"%{!m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune_32\", \"%{!m64:%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n+  {\"tune_64\", \"%{m64:%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:%{!mfpu:%{!mno-fpu:-m%(VALUE)-float}}}}\" }\n #else\n #define OPTION_DEFAULT_SPECS \\\n+  {\"cpu_32\", \"%{m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"cpu_64\", \"%{!m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n   {\"cpu\", \"%{!m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune_32\", \"%{m32:%{!mtune=*:-mtune=%(VALUE)}}\" },\t\\\n+  {\"tune_64\", \"%{!m32:%{!mtune=*:-mtune=%(VALUE)}}\" },\t\\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:%{!mfpu:%{!mno-fpu:-m%(VALUE)-float}}}}\" }\n #endif"}, {"sha": "e4c7535208faf74c127911f0645db62a7a532b44", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31177ef2527b3b219d4126a332edcf822829e983/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=31177ef2527b3b219d4126a332edcf822829e983", "patch": "@@ -1247,7 +1247,7 @@ This option is only supported on some targets, including ARC, ARM, i386, M68k,\n PowerPC, and SPARC@.  It is mandatory for ARC@.  The @option{--with-cpu-32} and\n @option{--with-cpu-64} options specify separate default CPUs for\n 32-bit and 64-bit modes; these options are only supported for i386,\n-x86-64 and PowerPC.\n+x86-64, PowerPC, and SPARC@.\n \n @item --with-schedule=@var{cpu}\n @itemx --with-arch=@var{cpu}"}]}