{"sha": "fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwM2JhZjIxMDQzYTI5ZmUzY2E1YmM2NmIwNmViMmI0MWVhMjM2NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-05-31T16:29:16Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-05-31T16:29:16Z"}, "message": "re PR tree-optimization/21732 (-ftree-dump-all-details hangs during *.c.t24.copyprop or *.c.t38.copyprop2)\n\n2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/21732\n        * tree-ssa-copy.c (dump_copy_of): Create a bitmap and don't visit a\n        SSA_NAME twice and cause the loop to become finite.  Remove the test\n        for val.\n\nFrom-SVN: r100396", "tree": {"sha": "ed37254f074675713e8513c7affc7c3581455948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed37254f074675713e8513c7affc7c3581455948"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365/comments", "author": null, "committer": null, "parents": [{"sha": "8c7a0ea6ed41ee80a34b249e39108afb14195d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7a0ea6ed41ee80a34b249e39108afb14195d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7a0ea6ed41ee80a34b249e39108afb14195d89"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "25cd8c645b68f83ee056a13e4866e9c209a76533", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "patch": "@@ -1,3 +1,10 @@\n+2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/21732\n+\t* tree-ssa-copy.c (dump_copy_of): Create a bitmap and don't visit a\n+\tSSA_NAME twice and cause the loop to become finite.  Remove the test\n+\tfor val.\n+\n 2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* tree-cfg.c (verify_expr): Add checking for COND_EXPR's conditional"}, {"sha": "8e2b53686a7e73d954bac14739867702228ef15e", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "patch": "@@ -475,24 +475,30 @@ static void\n dump_copy_of (FILE *dump_file, tree var)\n {\n   tree val;\n+  sbitmap visited;\n \n   print_generic_expr (dump_file, var, dump_flags);\n \n   if (TREE_CODE (var) != SSA_NAME)\n     return;\n-\n+    \n+  visited = sbitmap_alloc (num_ssa_names);\n+  SET_BIT (visited, SSA_NAME_VERSION (var));\n+  \n   fprintf (dump_file, \" copy-of chain: \");\n \n   val = var;\n   print_generic_expr (dump_file, val, 0);\n   fprintf (dump_file, \" \");\n-  while (copy_of[SSA_NAME_VERSION (val)].value\n-         && copy_of[SSA_NAME_VERSION (val)].value != val)\n+  while (copy_of[SSA_NAME_VERSION (val)].value)\n     {\n       fprintf (dump_file, \"-> \");\n       val = copy_of[SSA_NAME_VERSION (val)].value;\n       print_generic_expr (dump_file, val, 0);\n       fprintf (dump_file, \" \");\n+      if (TEST_BIT (visited, SSA_NAME_VERSION (val)))\n+        break;\n+      SET_BIT (visited, SSA_NAME_VERSION (val));\n     }\n \n   val = get_copy_of_val (var)->value;\n@@ -502,6 +508,8 @@ dump_copy_of (FILE *dump_file, tree var)\n     fprintf (dump_file, \"[COPY]\");\n   else\n     fprintf (dump_file, \"[NOT A COPY]\");\n+  \n+  sbitmap_free (visited);\n }\n \n "}]}