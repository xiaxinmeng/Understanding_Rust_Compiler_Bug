{"sha": "090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkwMjM4ZWUxZjNiMzcyNmM1ZGJkNzQ2YjNlYzcwOThmYzUxYmIzNw==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2015-01-28T11:46:44Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-01-28T11:46:44Z"}, "message": "re PR middle-end/64809 (ICE at -O3 with -g enabled on x86_64-linux-gnu (in 32-bit mode))\n\ngcc/\n\n\tPR middle-end/64809\n\t* cfgexpand.c (reorder_operands): Skip debug gimples.\n\ngcc/testsuite/\n\n\tPR middle-end/64809\n\t* gcc.dg/pr64809.c: New test.\n\nFrom-SVN: r220205", "tree": {"sha": "3216a60a83250b142f8e546a5edce62cbe6baad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3216a60a83250b142f8e546a5edce62cbe6baad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa8e5051889f8bc0610e3400152b73755d12d04e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8e5051889f8bc0610e3400152b73755d12d04e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8e5051889f8bc0610e3400152b73755d12d04e"}], "stats": {"total": 371, "additions": 370, "deletions": 1}, "files": [{"sha": "6968b82b43bbcfc24854a3ef27e91f1f4144d703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "patch": "@@ -1,3 +1,8 @@\n+2015-01-28  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR middle-end/64809\n+\t* cfgexpand.c (reorder_operands): Skip debug gimples.\n+\n 2015-01-28  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR tree-optimization/64277"}, {"sha": "4d8ba329557796ffc371e57fbb49e2533c3aa68d", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "patch": "@@ -5010,13 +5010,16 @@ reorder_operands (basic_block bb)\n   for (gsi = gsi_start (stmts); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n       stmt = gsi_stmt (gsi);\n-      gimple_set_uid (stmt, n++);\n+      if (!is_gimple_debug (stmt))\n+        gimple_set_uid (stmt, n++);\n     }\n   lattice = XNEWVEC (unsigned int, n);\n   for (gsi = gsi_start (stmts); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n       unsigned cost;\n       stmt = gsi_stmt (gsi);\n+      if (is_gimple_debug (stmt))\n+\tcontinue;\n       cost = estimate_num_insns (stmt, &eni_size_weights);\n       lattice[i] = cost;\n       FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_USE)"}, {"sha": "3013403fa1c0acb85cc499660d66ac94edf8c4fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "patch": "@@ -1,3 +1,8 @@\n+2015-01-28  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR middle-end/64809\n+\t* gcc.dg/pr64809.c: New test.\n+\n 2015-01-28  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR tree-optimization/64277"}, {"sha": "bc72d39aff217f0ae7fb63b08323df850ef62f7b", "filename": "gcc/testsuite/gcc.dg/pr64809.c", "status": "added", "additions": 356, "deletions": 0, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64809.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090238ee1f3b3726c5dbd746b3ec7098fc51bb37/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64809.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64809.c?ref=090238ee1f3b3726c5dbd746b3ec7098fc51bb37", "patch": "@@ -0,0 +1,356 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -g\" } */\n+typedef int size_t;\n+memcpy (size_t) __attribute__ ((__nonnull__));\n+memccpy (void *) __attribute__ ((__nonnull__ (1)))\n+  __attribute__ ((__nonnull__ (1)));\n+strncpy (size_t) __attribute__ ((__nonnull__));\n+strcat (char) __attribute__ ((__nonnull__));\n+struct\n+{\n+int __locales} ((__nonnull__));\n+strerror (int) __attribute__ ((__leaf__));\n+strerror_r (int)\n+__asm__ (\"__xpg_strerror_r\");\n+strerror_l (int);\n+__bzero (void *) __attribute__ ((__nothrow__));\n+__attribute__ (())bzero (void *, size_t);\n+size_t\n+__strcspn_c1 (__const char *, int);\n+__strcspn_c1 (__const char *p1, int p2)\n+{\n+}\n+\n+__strcspn_c2 (__const char *, int, int);\n+__attribute__ (())__strcspn_c2 (__const char *p1, int p2, int p3)\n+{\n+  size_t __result = p1[__result] != p1[__result];\n+}\n+\n+__attribute__ (())__strcspn_c3 (__const * p1, int p2, int p3, int p4)\n+{\n+  register __result;\n+  while (p1[__result] != p4)\n+    ;\n+}\n+\n+__strspn_c1 (char *p1, int p2)\n+{\n+  register __result = 0;\n+  while (p1[__result] == p2)\n+    ;\n+}\n+\n+log ();\n+exp2 () __attribute__ (());\n+__attribute__ (())__signbitl ()\n+{\n+  union\n+  {\n+  long __i[3]} __u = { };\n+  __u.__i[2];\n+}\n+\n+typedef int8_t;\n+typedef int16_t;\n+typedef int32_t;\n+typedef char uint8_t;\n+typedef unsigned uint16_t;\n+typedef uint32_t;\n+typedef unsigned uint64_t;\n+__assert_fail (char, __const, int, char) __attribute__ ((__noreturn__));\n+typedef struct _IO_FILE FILE;\n+(((__HI__))), stdin, crc32_context, g_10, g_14, g_50, g_58, g_57, g_89, g_138,\n+  g_224, g_223 __attribute__ ((__mode__ (__SI__)));\n+struct _IO_FILE\n+{\n+  int _IO_read_ptr;\n+  char _IO_write_ptr;\n+  char _IO_write_end;\n+int _IO_backup_base} __io_read_fn (), *stdout;\n+_IO_putc ();\n+remove (int, char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)));\n+__attribute__ (())vprintf (__builtin_va_list p1)\n+{\n+  _IO_getc ();\n+}\n+\n+__attribute__ (())fgetc_unlocked (FILE * p1)\n+{\n+  (p1, 0) ? __uflow () : p1;\n+}\n+\n+getc_unlocked (FILE * p1)\n+{\n+  (p1->_IO_read_ptr, 0) ? __uflow () : (unsigned) stdin;\n+}\n+\n+fputc_unlocked (int p1, FILE * p2)\n+{\n+  (p2->_IO_write_end) ? ((unsigned) p1) : (p2->_IO_write_ptr = p1);\n+}\n+\n+__attribute__ (())putc_unlocked (int p1, FILE * p2)\n+{\n+  __builtin_expect (p2->_IO_write_end, 0)\n+    ? ((unsigned) p1)\n+    : (p2->_IO_write_ptr) ? (p1) : (stdout->_IO_write_ptr = p1);\n+}\n+\n+feof_unlocked (FILE p1)\n+{\n+}\n+\n+platform_main_end (uint32_t p1, int p2)\n+{\n+}\n+\n+safe_unary_minus_func_int8_t_s ()\n+{\n+}\n+\n+safe_add_func_int8_t_s_s (int8_t p1, int8_t p2)\n+{\n+}\n+\n+safe_sub_func_int8_t_s_s (int8_t p1, int8_t p2)\n+{\n+}\n+\n+safe_mul_func_int8_t_s_s (int8_t p1, int8_t p2)\n+{\n+}\n+\n+safe_mod_func_int8_t_s_s (int8_t p1, int8_t p2)\n+{\n+}\n+\n+safe_div_func_int8_t_s_s ()\n+{\n+}\n+\n+safe_lshift_func_int8_t_s_s (int8_t p1, int p2)\n+{\n+  p1 || p2;\n+}\n+\n+static\n+safe_lshift_func_int8_t_s_u (int8_t p1, int p2)\n+{\n+}\n+\n+safe_add_func_int16_t_s_s (int16_t p1, int16_t p2)\n+{\n+  return p1 + p2;\n+}\n+\n+safe_sub_func_int16_t_s_s (uint8_t p1, uint8_t p2)\n+{\n+}\n+\n+safe_sub_func_uint8_t_u_u ()\n+{\n+}\n+\n+safe_mul_func_uint8_t_u_u ()\n+{\n+}\n+\n+safe_div_func_uint8_t_u_u (uint8_t p1, uint8_t p2)\n+{\n+  return;\n+}\n+\n+safe_lshift_func_uint8_t_u_s (uint8_t p1, int p2)\n+{\n+}\n+\n+safe_lshift_func_uint8_t_u_u (uint8_t p1, int p2)\n+{\n+}\n+\n+safe_rshift_func_uint8_t_u_s (uint8_t p1, int p2)\n+{\n+  p2 || p2 ? : p2;\n+}\n+\n+static uint16_t\n+safe_add_func_uint16_t_u_u (uint16_t p1, uint16_t p2)\n+{\n+  return p1 + p2;\n+}\n+\n+safe_sub_func_uint16_t_u_u (uint16_t p1)\n+{\n+}\n+\n+safe_mul_func_uint32_t_u_u ()\n+{\n+}\n+\n+safe_lshift_func_uint32_t_u_s (uint32_t p1, int p2)\n+{\n+  p2 || p2 ? : p1;\n+}\n+\n+safe_lshift_func_uint32_t_u_u (uint32_t p1, unsigned p2)\n+{\n+  p2 ? : p1 << p2;\n+}\n+\n+safe_add_func_uint64_t_u_u (uint64_t p1)\n+{\n+}\n+\n+safe_mod_func_uint64_t_u_u (uint64_t p1, uint64_t p2)\n+{\n+}\n+\n+safe_div_func_uint64_t_u_u (uint64_t p1, uint64_t p2)\n+{\n+}\n+\n+static\n+safe_lshift_func_uint64_t_u_s (p1)\n+{\n+  p1 ? : (unsigned) p1;\n+}\n+\n+safe_rshift_func_uint64_t_u_s (uint64_t p1)\n+{\n+  (int) p1 ? : p1;\n+}\n+\n+safe_rshift_func_uint64_t_u_u (uint64_t p1, unsigned p2)\n+{\n+  p2 >> p2;\n+}\n+\n+safe_add_func_float_f_f (float p1, float p2)\n+{\n+  (p2) ? : p1;\n+}\n+\n+safe_sub_func_float_f_f (float p1)\n+{\n+}\n+\n+safe_mul_func_float_f_f (float p1, float p2)\n+{\n+}\n+\n+safe_div_func_float_f_f (p1)\n+{\n+  p1 >= 2147483647 ? : p1;\n+}\n+\n+crc32_tab[], g_273[], g_497, g_703, g_895[], *g_910;\n+crc32_gentab ()\n+{\n+  uint32_t crc;\n+  for (;;)\n+    for (;;)\n+      if (crc)\n+\t;\n+}\n+\n+crc32_byte (p1)\n+{\n+  crc32_context = crc32_context ^ crc32_tab[crc32_context ^ p1 & 255];\n+}\n+\n+crc32_8bytes (uint64_t p1)\n+{\n+  crc32_byte ();\n+  crc32_byte (p1 >> 1);\n+  crc32_byte ();\n+}\n+\n+transparent_crc (uint64_t p1, char p2, int p3)\n+{\n+  crc32_8bytes (p1);\n+  if (p3)\n+    printf (crc32_context);\n+}\n+\n+transparent_crc_bytes (char p1, int p2, char p3)\n+{\n+  for (;;)\n+    crc32_byte ();\n+}\n+\n+static **g_222 = &g_223;\n+static func_6 (uint32_t, uint8_t, int32_t);\n+const func_33 (uint32_t, uint8_t);\n+uint16_t **func_42 ();\n+int32_t *func_46 (uint16_t * const *, int16_t);\n+static\n+func_1 ()\n+{\n+  uint8_t l_11;\n+  int32_t l_15[9];\n+  uint16_t l_796;\n+  uint32_t l_1161[1][3];\n+  uint16_t l_1487[2];\n+  int i;\n+  i = 0;\n+  for (i; i < 5; i++)\n+    l_1487[1] ^=\n+      func_6 (g_10, l_11,\n+\t      (func_33 ((func_42, l_15[8], l_796), g_273), l_1161[0][2]));\n+  g_910 ? : __assert_fail (\"\", \"\", 44, __PRETTY_FUNCTION__);\n+}\n+\n+int32_t\n+func_6 (uint32_t p1, uint8_t p2, int32_t p3)\n+{\n+  int32_t l_1162;\n+  int32_t *l_1175 = &g_224;\n+  uint16_t l_1225;\n+  g_89 = 0;\n+  for (; g_89 < 35; g_89 = safe_add_func_int16_t_s_s (g_89, 7))\n+    {\n+      *g_222 = func_46 (l_1225, 0)\n+\t? : __assert_fail (\"g_223\", \"t.c\", 59, __PRETTY_FUNCTION__);\n+      if (*l_1175)\n+\tfor (g_703 = 0; g_703 > -17; --g_703)\n+\t  for (p3 = 0; p3 < 15; p3 = safe_add_func_uint16_t_u_u (p3, 1))\n+\t    for (g_138 = 0; g_138 <= 6; g_138 += 1)\n+\t      for (l_1162 = 4; l_1162 >= 0; l_1162 -= 1)\n+\t\tg_895[3] = g_10;\n+    }\n+}\n+\n+const int8_t\n+func_33 (uint32_t p1, uint8_t p2)\n+{\n+  uint8_t l_1116;\n+  uint16_t l_1130;\n+  g_910 = func_46 (l_1130, p2), l_1116;\n+}\n+\n+func_36 (uint16_t p1, uint16_t p2, uint16_t p3, uint32_t p4, uint16_t p5)\n+{\n+}\n+\n+uint16_t **\n+func_42 ()\n+{\n+  uint16_t i;\n+  for (;;)\n+    for (; i < 10; i++)\n+      ;\n+}\n+\n+*func_46 (uint16_t * const *p1, int16_t p2)\n+{\n+  return g_57;\n+}\n+\n+main ()\n+{\n+  int print_hash_value = func_1 ();\n+  transparent_crc (g_10, \"\", print_hash_value);\n+  transparent_crc (g_14, \"\", print_hash_value);\n+}\n+"}]}