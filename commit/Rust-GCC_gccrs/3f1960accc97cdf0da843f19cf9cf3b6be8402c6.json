{"sha": "3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxOTYwYWNjYzk3Y2RmMGRhODQzZjE5Y2Y5Y2YzYjZiZTg0MDJjNg==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2012-03-07T12:00:37Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2012-03-07T12:00:37Z"}, "message": "re PR rtl-optimization/52203 (ICE: in reset_sched_cycles_in_current_ebb, at sel-sched.c:7136 with -fsel-sched-pipelining -fselective-scheduling2 and other custom flags)\n\n        PR rtl-optimization/52203\n        * sel-sched.c (estimate_insn_cost): New parameter pempty.  Adjust\n        all callers to pass NULL except ...\n        (reset_sched_cycles_in_current_ebb): ... here, save the value\n        in new variable 'empty'.  Increase issue_rate only for\n        non-empty insns.\n\nFrom-SVN: r185036", "tree": {"sha": "2b708551c65c4ac39c6706e86221e3c3dbf11a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b708551c65c4ac39c6706e86221e3c3dbf11a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1960accc97cdf0da843f19cf9cf3b6be8402c6/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6baa4460bbf17a6e9f0a7b7aea6d6a8241c389e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6baa4460bbf17a6e9f0a7b7aea6d6a8241c389e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6baa4460bbf17a6e9f0a7b7aea6d6a8241c389e"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "2c3641607096eb0dc99120ac0ce69509bd965243", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1960accc97cdf0da843f19cf9cf3b6be8402c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1960accc97cdf0da843f19cf9cf3b6be8402c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "patch": "@@ -1,3 +1,12 @@\n+2012-03-07  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/52203\n+\t* sel-sched.c (estimate_insn_cost): New parameter pempty.  Adjust\n+\tall callers to pass NULL except ...\n+\t(reset_sched_cycles_in_current_ebb): ... here, save the value\n+\tin new variable 'empty'.  Increase issue_rate only for\n+\tnon-empty insns. \n+\n 2012-03-07  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n \n \tPR target/51417"}, {"sha": "2829f60a0cf108bb1945750a5a9cc21c7e2e993b", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1960accc97cdf0da843f19cf9cf3b6be8402c6/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1960accc97cdf0da843f19cf9cf3b6be8402c6/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=3f1960accc97cdf0da843f19cf9cf3b6be8402c6", "patch": "@@ -4265,9 +4265,10 @@ invoke_aftermath_hooks (fence_t fence, rtx best_insn, int issue_more)\n   return issue_more;\n }\n \n-/* Estimate the cost of issuing INSN on DFA state STATE.  */\n+/* Estimate the cost of issuing INSN on DFA state STATE.  Write to PEMPTY\n+   true when INSN does not change the processor state.  */\n static int\n-estimate_insn_cost (rtx insn, state_t state)\n+estimate_insn_cost (rtx insn, state_t state, bool *pempty)\n {\n   static state_t temp = NULL;\n   int cost;\n@@ -4277,6 +4278,8 @@ estimate_insn_cost (rtx insn, state_t state)\n \n   memcpy (temp, state, dfa_state_size);\n   cost = state_transition (temp, insn);\n+  if (pempty)\n+    *pempty = (memcmp (temp, state, dfa_state_size) == 0);\n \n   if (cost < 0)\n     return 0;\n@@ -4307,7 +4310,7 @@ get_expr_cost (expr_t expr, fence_t fence)\n \treturn 0;\n     }\n   else\n-    return estimate_insn_cost (insn, FENCE_STATE (fence));\n+    return estimate_insn_cost (insn, FENCE_STATE (fence), NULL);\n }\n \n /* Find the best insn for scheduling, either via max_issue or just take\n@@ -7020,7 +7023,7 @@ reset_sched_cycles_in_current_ebb (void)\n     {\n       int cost, haifa_cost;\n       int sort_p;\n-      bool asm_p, real_insn, after_stall, all_issued;\n+      bool asm_p, real_insn, after_stall, all_issued, empty;\n       int clock;\n \n       if (!INSN_P (insn))\n@@ -7047,7 +7050,7 @@ reset_sched_cycles_in_current_ebb (void)\n \t    haifa_cost = 0;\n \t}\n       else\n-        haifa_cost = estimate_insn_cost (insn, curr_state);\n+        haifa_cost = estimate_insn_cost (insn, curr_state, &empty);\n \n       /* Stall for whatever cycles we've stalled before.  */\n       after_stall = 0;\n@@ -7081,7 +7084,7 @@ reset_sched_cycles_in_current_ebb (void)\n               if (!after_stall\n                   && real_insn\n                   && haifa_cost > 0\n-                  && estimate_insn_cost (insn, curr_state) == 0)\n+                  && estimate_insn_cost (insn, curr_state, NULL) == 0)\n                 break;\n \n               /* When the data dependency stall is longer than the DFA stall,\n@@ -7093,7 +7096,7 @@ reset_sched_cycles_in_current_ebb (void)\n               if ((after_stall || all_issued)\n                   && real_insn\n                   && haifa_cost == 0)\n-                haifa_cost = estimate_insn_cost (insn, curr_state);\n+                haifa_cost = estimate_insn_cost (insn, curr_state, NULL);\n             }\n \n \t  haifa_clock += i;\n@@ -7125,7 +7128,8 @@ reset_sched_cycles_in_current_ebb (void)\n       if (real_insn)\n \t{\n \t  cost = state_transition (curr_state, insn);\n-\t  issued_insns++;\n+\t  if (!empty)\n+\t    issued_insns++;\n \n           if (sched_verbose >= 2)\n \t    {"}]}