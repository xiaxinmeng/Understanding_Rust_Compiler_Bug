{"sha": "2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMyNzQxOTdlOWZiMGZkYzljMWFhNGM2YmZhMDg5YzcyY2NhMzY1OA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-08-15T09:02:27Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-08-15T09:02:27Z"}, "message": "[AArch64] Move one_match > zero_match case to just before simple_sequence.\n\n\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Move\n\tone_match > zero_match case to just before simple_sequence.\n\nFrom-SVN: r214008", "tree": {"sha": "3d9ff5f80048286839c95f51be99c07883d9012d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9ff5f80048286839c95f51be99c07883d9012d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b5337e60efa264137d1a65e12c612cb50e98b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5337e60efa264137d1a65e12c612cb50e98b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5337e60efa264137d1a65e12c612cb50e98b42"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "6ec54a5d8494e61eeb165d8beb0a899bb2cdcbd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "patch": "@@ -1,3 +1,8 @@\n+2014-08-15  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Move\n+\tone_match > zero_match case to just before simple_sequence.\n+\n 2014-08-15  Richard Biener  <rguenther@suse.de>\n \n \t* data-streamer.h (streamer_string_index, string_for_index):"}, {"sha": "c3c871eca97154b9ce4fc7b6c9a972555c94d967", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "patch": "@@ -1132,24 +1132,6 @@ aarch64_expand_mov_immediate (rtx dest, rtx imm)\n       return;\n     }\n \n-  if (one_match > zero_match)\n-    {\n-      /* Set either first three quarters or all but the third.\t */\n-      mask = 0xffffll << (16 - first_not_ffff_match);\n-      emit_insn (gen_rtx_SET (VOIDmode, dest,\n-\t\t\t      GEN_INT (val | mask | 0xffffffff00000000ull)));\n-\n-      /* Now insert other two quarters.\t */\n-      for (i = first_not_ffff_match + 16, mask <<= (first_not_ffff_match << 1);\n-\t   i < 64; i += 16, mask <<= 16)\n-\t{\n-\t  if ((val & mask) != mask)\n-\t    emit_insn (gen_insv_immdi (dest, GEN_INT (i),\n-\t\t\t\t       GEN_INT ((val >> i) & 0xffff)));\n-\t}\n-      return;\n-    }\n-\n   if (zero_match == 2)\n     goto simple_sequence;\n \n@@ -1266,6 +1248,24 @@ aarch64_expand_mov_immediate (rtx dest, rtx imm)\n \t}\n     }\n \n+  if (one_match > zero_match)\n+    {\n+      /* Set either first three quarters or all but the third.\t */\n+      mask = 0xffffll << (16 - first_not_ffff_match);\n+      emit_insn (gen_rtx_SET (VOIDmode, dest,\n+\t\t\t      GEN_INT (val | mask | 0xffffffff00000000ull)));\n+\n+      /* Now insert other two quarters.\t */\n+      for (i = first_not_ffff_match + 16, mask <<= (first_not_ffff_match << 1);\n+\t   i < 64; i += 16, mask <<= 16)\n+\t{\n+\t  if ((val & mask) != mask)\n+\t    emit_insn (gen_insv_immdi (dest, GEN_INT (i),\n+\t\t\t\t       GEN_INT ((val >> i) & 0xffff)));\n+\t}\n+      return;\n+    }\n+\n  simple_sequence:\n   first = true;\n   mask = 0xffff;"}]}