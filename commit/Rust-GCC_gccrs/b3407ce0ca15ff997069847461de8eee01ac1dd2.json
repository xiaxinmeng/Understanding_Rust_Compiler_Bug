{"sha": "b3407ce0ca15ff997069847461de8eee01ac1dd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0MDdjZTBjYTE1ZmY5OTcwNjk4NDc0NjFkZThlZWUwMWFjMWRkMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-30T11:37:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-30T11:37:06Z"}, "message": "[multiple changes]\n\n2014-10-30  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (Inherit_Subprogram_Contract):\n\tAdd a guard to protect against enumeration literal overriding.\n\t* sem_ch3.adb, sem_ch4.adb, sem_res.adb, sem_util.adb:\n\tMinor reformatting (add SPARK RM references).\n\n2014-10-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_dbug.adb, opt.ads: Minor reformatting.\n\nFrom-SVN: r216920", "tree": {"sha": "b29069bd273e4e66bf52ca4ef6d25ff7ea1e3576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b29069bd273e4e66bf52ca4ef6d25ff7ea1e3576"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3407ce0ca15ff997069847461de8eee01ac1dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3407ce0ca15ff997069847461de8eee01ac1dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3407ce0ca15ff997069847461de8eee01ac1dd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3407ce0ca15ff997069847461de8eee01ac1dd2/comments", "author": null, "committer": null, "parents": [{"sha": "039538bc35b844d57ca526bf1a274c93d251b6f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039538bc35b844d57ca526bf1a274c93d251b6f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039538bc35b844d57ca526bf1a274c93d251b6f5"}], "stats": {"total": 61, "additions": 45, "deletions": 16}, "files": [{"sha": "36e8faf4d6e27a29bae485c273d0fa77b945fd5b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -1,3 +1,14 @@\n+2014-10-30  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (Inherit_Subprogram_Contract):\n+\tAdd a guard to protect against enumeration literal overriding.\n+\t* sem_ch3.adb, sem_ch4.adb, sem_res.adb, sem_util.adb:\n+\tMinor reformatting (add SPARK RM references).\n+\n+2014-10-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_dbug.adb, opt.ads: Minor reformatting.\n+\n 2014-10-30  Yannick Moy  <moy@adacore.com>\n \n \t* inline.adb (Has_Single_Return_In_GNATprove_Mode):"}, {"sha": "0d30f421e5b46ad7e32016778827c9d3f97248a7", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -604,10 +604,15 @@ package body Exp_Dbug is\n             Add_Real_To_Buffer (Small_Value (E));\n          end if;\n \n-      --  Discrete case where bounds do not match size\n-\n-      elsif Is_Discrete_Type (E)\n-        and then not Bounds_Match_Size (E)\n+      --  Discrete case where bounds do not match size. Match only biased\n+      --  types when asked to output as little encodings as possible.\n+\n+      elsif ((GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n+               and then Is_Discrete_Type (E))\n+             or else\n+             (GNAT_Encodings = DWARF_GNAT_Encodings_Minimal\n+               and then Has_Biased_Representation (E)))\n+            and then not Bounds_Match_Size (E)\n       then\n          declare\n             Lo : constant Node_Id := Type_Low_Bound (E);\n@@ -618,13 +623,11 @@ package body Exp_Dbug is\n \n             Lo_Discr : constant Boolean :=\n                          Nkind (Lo) = N_Identifier\n-                           and then\n-                         Ekind (Entity (Lo)) = E_Discriminant;\n+                          and then Ekind (Entity (Lo)) = E_Discriminant;\n \n             Hi_Discr : constant Boolean :=\n                          Nkind (Hi) = N_Identifier\n-                           and then\n-                         Ekind (Entity (Hi)) = E_Discriminant;\n+                          and then Ekind (Entity (Hi)) = E_Discriminant;\n \n             Lo_Encode : constant Boolean := Lo_Con or Lo_Discr;\n             Hi_Encode : constant Boolean := Hi_Con or Hi_Discr;"}, {"sha": "a17d9fe59366a7ef133e44dc1c3991c4642a663a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -730,6 +730,17 @@ package Opt is\n    --  True if a pragma Discard_Names appeared as a configuration pragma for\n    --  the current compilation unit.\n \n+   GNAT_Encodings : Int;\n+   pragma Import (C, GNAT_Encodings, \"gnat_encodings\");\n+   --  Constant controlling the balance between GNAT encodings and standard\n+   --  DWARF to emit in the debug information. See jmissing.c and aamissing.c\n+   --  for definitions for dotnet/jgnat and GNAAMP back ends. It accepts the\n+   --  following values.\n+\n+   DWARF_GNAT_Encodings_All     : constant Int := 0;\n+   DWARF_GNAT_Encodings_GDB     : constant Int := 1;\n+   DWARF_GNAT_Encodings_Minimal : constant Int := 2;\n+\n    Identifier_Character_Set : Character;\n    --  GNAT\n    --  This variable indicates the character set to be used for identifiers."}, {"sha": "bff1ac4713f3d5d8c5a5355baf3e0b6dd288fdf5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -3704,7 +3704,7 @@ package body Sem_Ch3 is\n          --  A formal parameter of a specific tagged type whose related\n          --  subprogram is subject to pragma Extensions_Visible with value\n          --  \"False\" cannot be implicitly converted to a class-wide type by\n-         --  means of an initialization expression.\n+         --  means of an initialization expression (SPARK RM 6.1.7(3)).\n \n          if Is_Class_Wide_Type (T) and then Is_EVF_Expression (E) then\n             Error_Msg_N\n@@ -9809,7 +9809,8 @@ package body Sem_Ch3 is\n \n                   --  A null extension is not obliged to override an inherited\n                   --  procedure subject to pragma Extensions_Visible with value\n-                  --  False and at least one controlling OUT parameter.\n+                  --  False and at least one controlling OUT parameter\n+                  --  (SPARK RM 6.1.7(6)).\n \n                   elsif Is_Null_Extension (T)\n                     and then Is_EVF_Procedure (Subp)\n@@ -9941,7 +9942,7 @@ package body Sem_Ch3 is\n \n          --  A subprogram subject to pragma Extensions_Visible with value\n          --  \"True\" cannot override a subprogram subject to the same pragma\n-         --  with value \"False\".\n+         --  with value \"False\" (SPARK RM 6.1.7(5)).\n \n          elsif Extensions_Visible_Status (Subp) = Extensions_Visible_True\n            and then Present (Overridden_Operation (Subp))\n@@ -14541,7 +14542,7 @@ package body Sem_Ch3 is\n \n       --  A subprogram subject to pragma Extensions_Visible with value False\n       --  requires overriding if the subprogram has at least one controlling\n-      --  OUT parameter.\n+      --  OUT parameter (SPARK RM 6.1.7(6)).\n \n       elsif Ada_Version >= Ada_2005\n         and then (Is_Abstract_Subprogram (Alias (New_Subp))"}, {"sha": "ee56e746042a324576ca5580f72fb498226799e2", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -5019,7 +5019,7 @@ package body Sem_Ch4 is\n \n       --  A formal parameter of a specific tagged type whose related subprogram\n       --  is subject to pragma Extensions_Visible with value \"False\" cannot\n-      --  appear in a class-wide conversion.\n+      --  appear in a class-wide conversion (SPARK RM 6.1.7(3)).\n \n       if Is_Class_Wide_Type (Typ) and then Is_EVF_Expression (Expr) then\n          Error_Msg_N"}, {"sha": "c8869d720e492873d090f5e1113bfc4da719aec4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -4421,7 +4421,7 @@ package body Sem_Res is\n             --  A formal parameter of a specific tagged type whose related\n             --  subprogram is subject to pragma Extensions_Visible with value\n             --  \"False\" cannot act as an actual in a subprogram with value\n-            --  \"True\".\n+            --  \"True\" (SPARK RM 6.1.7(3)).\n \n             if Is_EVF_Expression (A)\n               and then Extensions_Visible_Status (Nam) ="}, {"sha": "0715894b2d5ac2f031227d8469af7f43d9d4a7ad", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3407ce0ca15ff997069847461de8eee01ac1dd2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b3407ce0ca15ff997069847461de8eee01ac1dd2", "patch": "@@ -9481,9 +9481,12 @@ package body Sem_Util is\n    --   Start of processing for Inherit_Subprogram_Contract\n \n    begin\n-      --  Inheritance is carried out only when both subprograms have contracts\n+      --  Inheritance is carried out only when both entities are subprograms\n+      --  with contracts.\n \n-      if Present (Contract (Subp))\n+      if Is_Subprogram_Or_Generic_Subprogram (Subp)\n+        and then Is_Subprogram_Or_Generic_Subprogram (From_Subp)\n+        and then Present (Contract (Subp))\n         and then Present (Contract (From_Subp))\n       then\n          Inherit_Pragma (Pragma_Extensions_Visible);"}]}