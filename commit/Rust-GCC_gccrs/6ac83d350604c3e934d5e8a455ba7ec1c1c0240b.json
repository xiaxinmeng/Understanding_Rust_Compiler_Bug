{"sha": "6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjODNkMzUwNjA0YzNlOTM0ZDVlOGE0NTViYTdlYzFjMWMwMjQwYg==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-04-24T16:36:02Z"}, "committer": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-04-30T12:08:13Z"}, "message": "aarch64: don't emit bti j after NOTE_INSN_DELETED_LABEL [PR94748]\n\nIt was previously discussed that indirect branches cannot go to\nNOTE_INSN_DELETED_LABEL so inserting a landing pad is unnecessary.\nSee https://gcc.gnu.org/pipermail/gcc-patches/2019-May/522625.html\n\nBefore the patch a bti j was inserted after the label in\n\n  __attribute__((target(\"branch-protection=bti\")))\n  int foo (void)\n  {\n  label:\n    return 0;\n  }\n\nThis is not necessary and weakens the security protection.\n\ngcc/ChangeLog:\n\n\tPR target/94748\n\t* config/aarch64/aarch64-bti-insert.c (rest_of_insert_bti): Remove\n\tthe check for NOTE_INSN_DELETED_LABEL.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/94748\n\t* gcc.target/aarch64/pr94748.c: New test.", "tree": {"sha": "8b9427647583160e8ccb026c6a5e718a070aa25a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b9427647583160e8ccb026c6a5e718a070aa25a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "852c4b04520d19d5a75e7f9ec5a5d980d5d1acc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852c4b04520d19d5a75e7f9ec5a5d980d5d1acc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/852c4b04520d19d5a75e7f9ec5a5d980d5d1acc8"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "c81801f289e93e9acacc5e1ad34c0fe7be3990de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "patch": "@@ -1,3 +1,9 @@\n+2020-04-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94748\n+\t* config/aarch64/aarch64-bti-insert.c (rest_of_insert_bti): Remove\n+\tthe check for NOTE_INSN_DELETED_LABEL.\n+\n 2020-04-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.ac (--with-documentation-root-url,"}, {"sha": "57663ee23b490162dbe7ffe2f618066e71cea455", "filename": "gcc/config/aarch64/aarch64-bti-insert.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Fconfig%2Faarch64%2Faarch64-bti-insert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Fconfig%2Faarch64%2Faarch64-bti-insert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-bti-insert.c?ref=6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "patch": "@@ -139,14 +139,10 @@ rest_of_insert_bti (void)\n \t   insn = NEXT_INSN (insn))\n \t{\n \t  /* If a label is marked to be preserved or can be a non-local goto\n-\t     target, it must be protected with a BTI J.  The same applies to\n-\t     NOTE_INSN_DELETED_LABEL since they are basically labels that might\n-\t     be referenced via variables or constant pool.  */\n-\t  if ((LABEL_P (insn)\n+\t     target, it must be protected with a BTI J.  */\n+\t  if (LABEL_P (insn)\n \t       && (LABEL_PRESERVE_P (insn)\n \t\t   || bb->flags & BB_NON_LOCAL_GOTO_TARGET))\n-\t      || (NOTE_P (insn)\n-\t\t  && NOTE_KIND (insn) == NOTE_INSN_DELETED_LABEL))\n \t    {\n \t      bti_insn = gen_bti_j ();\n \t      emit_insn_after (bti_insn, insn);"}, {"sha": "66ac6705a05db84ad49a0e953dfc7fe3f1a8f883", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "patch": "@@ -1,3 +1,8 @@\n+2020-04-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94748\n+\t* gcc.target/aarch64/pr94748.c: New test.\n+\n 2020-04-30  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/zvector/vec_load_len_r.c: New test."}, {"sha": "2a2850d2fac0757935ae7d38ef080c889ede88ce", "filename": "gcc/testsuite/gcc.target/aarch64/pr94748.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94748.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac83d350604c3e934d5e8a455ba7ec1c1c0240b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94748.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94748.c?ref=6ac83d350604c3e934d5e8a455ba7ec1c1c0240b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+__attribute__ ((target(\"branch-protection=bti\")))\n+int foo ()\n+{\n+label:\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-not {hint (36|38) // bti (j|jc)} } } */"}]}