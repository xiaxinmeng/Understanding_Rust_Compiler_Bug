{"sha": "2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxMDdlOWVhMWViODlkM2ZhNmU2N2EwZmI0NDg4YTI4OGFkNGVjOA==", "commit": {"author": {"name": "Graham Stott", "email": "grahams@rcp.co.uk", "date": "1998-06-19T23:37:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-19T23:37:04Z"}, "message": "alias.c: Include toplev.h\n\n        * alias.c: Include toplev.h\n        * caller-save.c: Include toplev.h\n        * combine.c: Include toplev.h\n        * flow.c Include toplev.h\n        * global.c: Include toplev.h\n        * jump.c: Include toplev.h\n        * local-alloc.c: Include toplev.h\n        * loop.c: Include toplev.h\n        * regmove.c: Include toplev.h\n        * stupid.c: Include toplev.h\n        * unroll.c: Include toplev.h\n        * Makefile.in: Add toplev.h dependencies.\n\nFrom-SVN: r20623", "tree": {"sha": "f22129d6d4548e51135a58f1ef7d8b5f13e57489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f22129d6d4548e51135a58f1ef7d8b5f13e57489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/comments", "author": null, "committer": null, "parents": [{"sha": "561592c581e0e399ec8a3a75ba81050b2753052c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561592c581e0e399ec8a3a75ba81050b2753052c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561592c581e0e399ec8a3a75ba81050b2753052c"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "f31ecd613429ccb980013cc19389dd864b1acb55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -1,3 +1,18 @@\n+Sat Jun 20 00:27:40 1998  Graham  <grahams@rcp.co.uk>\n+\n+\t* alias.c: Include toplev.h\n+\t* caller-save.c: Include toplev.h\n+\t* combine.c: Include toplev.h\n+\t* flow.c Include toplev.h\n+\t* global.c: Include toplev.h\n+\t* jump.c: Include toplev.h\n+\t* local-alloc.c: Include toplev.h\n+\t* loop.c: Include toplev.h\n+\t* regmove.c: Include toplev.h\n+\t* stupid.c: Include toplev.h\n+\t* unroll.c: Include toplev.h\n+\t* Makefile.in: Add toplev.h dependencies.\n+\n Fri Jun 19 22:40:25 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* regmove.c (copy_src_to_dest): Add decl for loop_depth."}, {"sha": "1a61afd254633a332dea095b393ed257ff94dd85", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -1417,8 +1417,10 @@ integrate.o : integrate.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    function.h output.h $(RECOG_H) except.h toplev.h\n \n jump.o : jump.c $(CONFIG_H) system.h $(RTL_H) flags.h hard-reg-set.h regs.h \\\n-   insn-config.h insn-codes.h insn-flags.h $(RECOG_H) expr.h real.h except.h\n-stupid.o : stupid.c $(CONFIG_H) system.h $(RTL_H) regs.h hard-reg-set.h flags.h\n+   insn-config.h insn-codes.h insn-flags.h $(RECOG_H) expr.h real.h except.h \\\n+   toplev.h\n+stupid.o : stupid.c $(CONFIG_H) system.h $(RTL_H) regs.h hard-reg-set.h \\\n+   flags.h toplev.h\n \n cse.o : cse.c $(CONFIG_H) system.h $(RTL_H) regs.h hard-reg-set.h flags.h \\\n    real.h insn-config.h insn-codes.h $(RECOG_H) expr.h toplev.h output.h\n@@ -1427,24 +1429,25 @@ gcse.o : gcse.c $(CONFIG_H) system.h $(RTL_H) regs.h hard-reg-set.h flags.h \\\n profile.o : profile.c $(CONFIG_H) system.h $(RTL_H) flags.h insn-flags.h \\\n    gcov-io.h $(TREE_H) output.h regs.h toplev.h\n loop.o : loop.c $(CONFIG_H) system.h $(RTL_H) flags.h loop.h insn-config.h \\\n-   insn-flags.h insn-codes.h regs.h hard-reg-set.h $(RECOG_H) expr.h real.h\n+   insn-flags.h insn-codes.h regs.h hard-reg-set.h $(RECOG_H) expr.h real.h \\\n+   toplev.h\n unroll.o : unroll.c $(CONFIG_H) system.h $(RTL_H) insn-config.h insn-codes.h \\\n-   integrate.h regs.h $(RECOG_H) flags.h expr.h loop.h\n+   integrate.h regs.h $(RECOG_H) flags.h expr.h loop.h toplev.h\n flow.o : flow.c $(CONFIG_H) system.h $(RTL_H) flags.h insn-config.h \\\n-   $(BASIC_BLOCK_H) regs.h hard-reg-set.h output.h\n+   $(BASIC_BLOCK_H) regs.h hard-reg-set.h output.h toplev.h\n combine.o : combine.c $(CONFIG_H) system.h $(RTL_H) flags.h  \\\n    insn-config.h insn-flags.h insn-codes.h insn-attr.h regs.h expr.h \\\n-   $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h\n+   $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h toplev.h\n regclass.o : regclass.c $(CONFIG_H) system.h $(RTL_H) hard-reg-set.h flags.h \\\n    $(BASIC_BLOCK_H) regs.h insn-config.h $(RECOG_H) reload.h real.h toplev.h \\\n    output.h\n local-alloc.o : local-alloc.c $(CONFIG_H) system.h $(RTL_H) flags.h \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h insn-config.h $(RECOG_H) output.h \\\n-   insn-attr.h\n+   insn-attr.h toplev.h\n bitmap.o : bitmap.c $(CONFIG_H) system.h $(RTL_H) flags.h $(BASIC_BLOCK_H) \\\n    regs.h\n global.o : global.c $(CONFIG_H) system.h $(RTL_H) flags.h  \\\n-   $(BASIC_BLOCK_H) regs.h hard-reg-set.h insn-config.h output.h\n+   $(BASIC_BLOCK_H) regs.h hard-reg-set.h insn-config.h output.h toplev.h\n \n reload.o : reload.c $(CONFIG_H) system.h $(RTL_H) flags.h output.h expr.h \\\n    reload.h $(RECOG_H) hard-reg-set.h insn-config.h insn-codes.h regs.h \\\n@@ -1453,16 +1456,16 @@ reload1.o : reload1.c $(CONFIG_H) system.h $(RTL_H) real.h flags.h expr.h \\\n    reload.h regs.h hard-reg-set.h insn-config.h insn-flags.h insn-codes.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h toplev.h\n caller-save.o : caller-save.c $(CONFIG_H) system.h $(RTL_H) flags.h \\\n-   regs.h hard-reg-set.h insn-codes.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) \\\n-   reload.h expr.h\n+   regs.h hard-reg-set.h insn-codes.h insn-config.h $(BASIC_BLOCK_H) \\\n+   $(RECOG_H) reload.h expr.h toplev.h\n reorg.o : reorg.c $(CONFIG_H) system.h $(RTL_H) conditions.h hard-reg-set.h \\\n    $(BASIC_BLOCK_H) regs.h insn-config.h insn-codes.h insn-attr.h \\\n    insn-flags.h $(RECOG_H) flags.h output.h expr.h\n alias.o : alias.c $(CONFIG_H) system.h $(RTL_H) flags.h hard-reg-set.h regs.h \\\n-   insn-codes.h\n+   insn-codes.h toplev.h\n regmove.o : regmove.c $(CONFIG_H) system.h $(RTL_H) insn-config.h \\\n    insn-codes.h recog.h output.h reload.h regs.h hard-reg-set.h flags.h \\\n-   expr.h insn-flags.h $(BASIC_BLOCK_H)\n+   expr.h insn-flags.h $(BASIC_BLOCK_H) toplev.h\n $(SCHED_PREFIX)sched.o : $(SCHED_PREFIX)sched.c $(CONFIG_H) system.h $(RTL_H) \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h flags.h insn-config.h insn-attr.h \\\n    toplev.h"}, {"sha": "99df4fa8ccf11bdeb8eb46791f3c12dc6ae2abdc", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -26,6 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n+#include \"toplev.h\"\n \n static rtx canon_rtx\t\t\tPROTO((rtx));\n static int rtx_equal_for_memref_p\tPROTO((rtx, rtx));"}, {"sha": "4a2deb60db8bf2188e28078bb1928123ef5aaca7", "filename": "gcc/caller-save.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -29,6 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"basic-block.h\"\n #include \"reload.h\"\n #include \"expr.h\"\n+#include \"toplev.h\"\n \n #ifndef MAX_MOVE_MAX\n #define MAX_MOVE_MAX MOVE_MAX"}, {"sha": "a453b574d21900d7388ceba873ea4ebc4198f5fb", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -97,6 +97,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"real.h\"\n+#include \"toplev.h\"\n \n /* It is not safe to use ordinary gen_lowpart in combine.\n    Use gen_lowpart_for_combine instead.  See comments there.  */"}, {"sha": "6579e3b405bbe8c3a1a75d9613ba0e6b7b61f70c", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -118,6 +118,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"output.h\"\n #include \"except.h\"\n+#include \"toplev.h\"\n \n #include \"obstack.h\"\n #define obstack_chunk_alloc xmalloc"}, {"sha": "94d1fbcc500fa4451f7623b9a145e54611dccf26", "filename": "gcc/global.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -29,6 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"insn-config.h\"\n #include \"output.h\"\n+#include \"toplev.h\"\n \n /* This pass of the compiler performs global register allocation.\n    It assigns hard register numbers to all the pseudo registers"}, {"sha": "36f9e783175d95b584cc8da93a8e20ba17c08b35", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -63,6 +63,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"real.h\"\n #include \"except.h\"\n+#include \"toplev.h\"\n \n /* ??? Eventually must record somehow the labels used by jumps\n    from nested functions.  */"}, {"sha": "960e83b5b5a3dbe37b6be364f87fde115ecbe4a5", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -70,6 +70,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"output.h\"\n+#include \"toplev.h\"\n \f\n /* Next quantity number available for allocation.  */\n "}, {"sha": "0524e7e4f1c2f601142b941672921fa5a44a1438", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -48,6 +48,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"real.h\"\n #include \"loop.h\"\n #include \"except.h\"\n+#include \"toplev.h\"\n \n /* Vector mapping INSN_UIDs to luids.\n    The luids are like uids but increase monotonically always."}, {"sha": "cb26dd9b638174ddffb634f53acda77387a4053a", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -44,6 +44,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"expr.h\"\n #include \"insn-flags.h\"\n #include \"basic-block.h\"\n+#include \"toplev.h\"\n \n static int optimize_reg_copy_1\tPROTO((rtx, rtx, rtx));\n static void optimize_reg_copy_2\tPROTO((rtx, rtx, rtx));"}, {"sha": "718c39b6c04ef9381f43f51b41a3e0978b3e5023", "filename": "gcc/stupid.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -49,6 +49,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n+#include \"toplev.h\"\n \f\n /* Vector mapping INSN_UIDs to suids.\n    The suids are like uids but increase monotonically always."}, {"sha": "8edebda00a953900e718da1e482f1bc8d13d834f", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=2e107e9ea1eb89d3fa6e67a0fb4488a288ad4ec8", "patch": "@@ -156,6 +156,7 @@ enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };\n #include \"flags.h\"\n #include \"expr.h\"\n #include \"loop.h\"\n+#include \"toplev.h\"\n \n /* This controls which loops are unrolled, and by how much we unroll\n    them.  */"}]}