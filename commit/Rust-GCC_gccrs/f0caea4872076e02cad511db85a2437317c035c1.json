{"sha": "f0caea4872076e02cad511db85a2437317c035c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjYWVhNDg3MjA3NmUwMmNhZDUxMWRiODVhMjQzNzMxN2MwMzVjMQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-09T21:52:05Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-09T21:52:05Z"}, "message": "re PR fortran/83064 (DO CONCURRENT and auto-parallelization)\n\n2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83064\n\t* trans-stmt.c (gfc_trans_forall_loop): Remove annotation for\n\tparallell processing of DO CONCURRENT -ftree-parallelize-loops\n\tis set.\n\n2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83064\n\t* gfortran.dg/do_concurrent_5.f90: New test.\n\t* gfortran.dg/vect/vect-do-concurrent-1.f90: Adjust dg-bogus\n\tmessage.\n\nFrom-SVN: r259258", "tree": {"sha": "6b5aacad5c68d4c082ccd01d1ba3b77e76061b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b5aacad5c68d4c082ccd01d1ba3b77e76061b9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0caea4872076e02cad511db85a2437317c035c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0caea4872076e02cad511db85a2437317c035c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0caea4872076e02cad511db85a2437317c035c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0caea4872076e02cad511db85a2437317c035c1/comments", "author": null, "committer": null, "parents": [{"sha": "06756ed901c35e2430f924eb6a3998d872eb1040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06756ed901c35e2430f924eb6a3998d872eb1040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06756ed901c35e2430f924eb6a3998d872eb1040"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "53792eb25d8013aa49f4fdda9d5d2302b60f3b5a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f0caea4872076e02cad511db85a2437317c035c1", "patch": "@@ -1,3 +1,10 @@\n+2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83064\n+\t* trans-stmt.c (gfc_trans_forall_loop): Remove annotation for\n+\tparallell processing of DO CONCURRENT -ftree-parallelize-loops\n+\tis set.\n+\n 2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/51260"}, {"sha": "c44450e6aa587d3a85df2087184688721720dfcc", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=f0caea4872076e02cad511db85a2437317c035c1", "patch": "@@ -3642,7 +3642,10 @@ gfc_trans_forall_loop (forall_info *forall_tmp, tree body,\n       /* The exit condition.  */\n       cond = fold_build2_loc (input_location, LE_EXPR, logical_type_node,\n \t\t\t      count, build_int_cst (TREE_TYPE (count), 0));\n-      if (forall_tmp->do_concurrent)\n+\n+      /* PR 83064 means that we cannot use the annotation if the\n+\t autoparallelizer is active.  */\n+      if (forall_tmp->do_concurrent && ! flag_tree_parallelize_loops)\n \tcond = build3 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n \t\t       build_int_cst (integer_type_node,\n \t\t\t\t      annot_expr_parallel_kind),"}, {"sha": "9bfd5915ed10cc1411d92086cf88e5a7889aeaea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0caea4872076e02cad511db85a2437317c035c1", "patch": "@@ -1,3 +1,10 @@\n+2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83064\n+\t* gfortran.dg/do_concurrent_5.f90: New test.\n+\t* gfortran.dg/vect/vect-do-concurrent-1.f90: Adjust dg-bogus\n+\tmessage.\n+\n 2018-04-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/51260"}, {"sha": "feee4c9b00a879a7c6f8141c7e64be0f9b17b4ca", "filename": "gcc/testsuite/gfortran.dg/do_concurrent_5.f90", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_5.f90?ref=f0caea4872076e02cad511db85a2437317c035c1", "patch": "@@ -0,0 +1,70 @@\n+! { dg-do  run }\n+! PR 83064 - this used to give wrong results.\n+! { dg-options \"-O3 -ftree-parallelize-loops=2\" }\n+! Original test case by Christian Felter\n+\n+program main\n+    use, intrinsic :: iso_fortran_env\n+    implicit none\n+\n+    integer, parameter :: nsplit = 4\n+    integer(int64), parameter :: ne = 20000000\n+    integer(int64) :: stride, low(nsplit), high(nsplit), edof(ne), i\n+    real(real64), dimension(nsplit) :: pi\n+    \n+    edof(1::4) = 1\n+    edof(2::4) = 2\n+    edof(3::4) = 3\n+    edof(4::4) = 4\n+    \n+    stride = ceiling(real(ne)/nsplit)\n+    do i = 1, nsplit\n+        high(i) = stride*i\n+    end do\n+    do i = 2, nsplit\n+        low(i) = high(i-1) + 1\n+    end do\n+    low(1) = 1\n+    high(nsplit) = ne\n+\n+    pi = 0\n+    do concurrent (i = 1:nsplit)\n+        pi(i) = sum(compute( low(i), high(i) ))\n+    end do\n+    if (abs (sum(pi) - atan(1.0d0)) > 1e-5) call abort\n+    \n+contains\n+    \n+    pure function compute( low, high ) result( ttt )        \n+        integer(int64), intent(in) :: low, high\n+        real(real64), dimension(nsplit) :: ttt\n+        integer(int64) :: j, k\n+        \n+        ttt = 0\n+\n+        ! Unrolled loop\n+!         do j = low, high, 4\n+!             k = 1\n+!             ttt(k) = ttt(k) + (-1)**(j+1) / real( 2*j-1 )                            \n+!             k = 2\n+!             ttt(k) = ttt(k) + (-1)**(j+2) / real( 2*j+1 )                            \n+!             k = 3\n+!             ttt(k) = ttt(k) + (-1)**(j+3) / real( 2*j+3 )                            \n+!             k = 4\n+!             ttt(k) = ttt(k) + (-1)**(j+4) / real( 2*j+5 )                            \n+!         end do\n+        \n+        ! Loop with modulo operation\n+!         do j = low, high\n+!             k = mod( j, nsplit ) + 1\n+!             ttt(k) = ttt(k) + (-1)**(j+1) / real( 2*j-1 )                                        \n+!         end do\n+        \n+        ! Loop with subscripting via host association\n+        do j = low, high\n+            k = edof(j)\n+            ttt(k) = ttt(k) + (-1.0_real64)**(j+1) / real( 2*j-1 )                                        \n+        end do\n+    end function\n+    \n+end program main"}, {"sha": "6aece5a26590cc3b0d170e153bbc259aa3ab1be1", "filename": "gcc/testsuite/gfortran.dg/vect/vect-do-concurrent-1.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0caea4872076e02cad511db85a2437317c035c1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90?ref=f0caea4872076e02cad511db85a2437317c035c1", "patch": "@@ -12,4 +12,3 @@ subroutine test(n, a, b, c)\n end subroutine test\n \n ! { dg-message \"loop vectorized\" \"\" { target *-*-* } 0 }\n-! { dg-bogus \" version\\[^\\n\\r]* alias\" \"\" { target *-*-* } 0 }"}]}