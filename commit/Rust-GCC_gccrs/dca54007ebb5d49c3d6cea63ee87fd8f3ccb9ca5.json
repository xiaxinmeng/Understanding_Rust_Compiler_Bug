{"sha": "dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhNTQwMDdlYmI1ZDQ5YzNkNmNlYTYzZWU4N2ZkOGYzY2NiOWNhNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-04T09:40:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-04T10:37:27Z"}, "message": "tree-optimization/93964 - adjust ISL code generation for pointer params\n\nPointers eventually need intermediate conversions in code generation.\nAllowing them is much easier than fending them off since niter\nand scev expansion easily drag those in.\n\n2020-02-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/93964\n\t* graphite-isl-ast-to-gimple.c\n\t(gcc_expression_from_isl_ast_expr_id): Add intermediate\n\tconversion for pointer to integer converts.\n\t* graphite-scop-detection.c (assign_parameter_index_in_region):\n\tRelax assert.\n\n\t* gcc.dg/graphite/pr93964.c: New testcase.", "tree": {"sha": "b406164716fc77c35134ca2f5f6715a5997d98f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b406164716fc77c35134ca2f5f6715a5997d98f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ec2f9ff6d064c4d446dbf521d554eb10254d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ec2f9ff6d064c4d446dbf521d554eb10254d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ec2f9ff6d064c4d446dbf521d554eb10254d34"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "82b66089c8a70c1427a2b208d210e5fd8c53a6f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "patch": "@@ -1,3 +1,12 @@\n+2020-02-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/93964\n+\t* graphite-isl-ast-to-gimple.c\n+\t(gcc_expression_from_isl_ast_expr_id): Add intermediate\n+\tconversion for pointer to integer converts.\n+\t* graphite-scop-detection.c (assign_parameter_index_in_region):\n+\tRelax assert.\n+\n 2020-03-04  Martin Liska  <mliska@suse.cz>\n \n \tPR c/93886"}, {"sha": "ef93fda2233576f90419bf1a3415e94f8f77cd12", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "patch": "@@ -265,6 +265,9 @@ gcc_expression_from_isl_ast_expr_id (tree type,\n   tree t = res->second;\n   if (useless_type_conversion_p (type, TREE_TYPE (t)))\n     return t;\n+  if (POINTER_TYPE_P (TREE_TYPE (t))\n+      && !POINTER_TYPE_P (type) && !ptrofftype_p (type))\n+    t = fold_convert (sizetype, t);\n   return fold_convert (type, t);\n }\n "}, {"sha": "75f81227f8a0f88e17dbfb014b076a7411bde3a4", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "patch": "@@ -1102,7 +1102,6 @@ static void\n assign_parameter_index_in_region (tree name, sese_info_p region)\n {\n   gcc_assert (TREE_CODE (name) == SSA_NAME\n-\t      && INTEGRAL_TYPE_P (TREE_TYPE (name))\n \t      && ! defined_in_sese_p (name, region->region));\n   int i;\n   tree p;"}, {"sha": "cbf171631958e461a1ab255642b90360f3d22e21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "patch": "@@ -1,3 +1,8 @@\n+2020-02-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/93964\n+\t* gcc.dg/graphite/pr93964.c: New testcase.\n+\n 2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94001"}, {"sha": "80fc523b8556d3120b62178a72e69d38ea682176", "filename": "gcc/testsuite/gcc.dg/graphite/pr93964.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr93964.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr93964.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr93964.c?ref=dca54007ebb5d49c3d6cea63ee87fd8f3ccb9ca5", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-O -floop-nest-optimize\" } */\n+\n+int *\n+eo (void);\n+\n+void\n+g4 (int *nt)\n+{\n+  int dh, t2 = (__INTPTR_TYPE__)eo ();\n+\n+  for (dh = 0; dh < 2; ++dh)\n+    {\n+      int m7;\n+\n+      for (m7 = 0; m7 < t2; ++m7)\n+        nt[m7] = 0;\n+    }\n+}"}]}