{"sha": "f4510f3757fc32ae871aa5e7c77a078590b173ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ1MTBmMzc1N2ZjMzJhZTg3MWFhNWU3Yzc3YTA3ODU5MGIxNzNlZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-15T21:51:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-15T21:51:44Z"}, "message": "(safe_from_p): Only safe if EXP is variable-size and X is BLKmode.\n\nFrom-SVN: r10243", "tree": {"sha": "cae8239f4fe3b6438526e40831373f0e771a33b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cae8239f4fe3b6438526e40831373f0e771a33b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4510f3757fc32ae871aa5e7c77a078590b173ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4510f3757fc32ae871aa5e7c77a078590b173ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4510f3757fc32ae871aa5e7c77a078590b173ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4510f3757fc32ae871aa5e7c77a078590b173ed/comments", "author": null, "committer": null, "parents": [{"sha": "e07ed33f92f226ad40e10f17a53028a4659196d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ed33f92f226ad40e10f17a53028a4659196d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07ed33f92f226ad40e10f17a53028a4659196d7"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "5e5b3b31c4cb3a301a3a6539025fd67f4ece7b18", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4510f3757fc32ae871aa5e7c77a078590b173ed/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4510f3757fc32ae871aa5e7c77a078590b173ed/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f4510f3757fc32ae871aa5e7c77a078590b173ed", "patch": "@@ -3814,9 +3814,11 @@ safe_from_p (x, exp)\n       /* If EXP has varying size, we MUST use a target since we currently\n \t have no way of allocating temporaries of variable size.  So we\n \t assume here that something at a higher level has prevented a\n-\t clash.  This is somewhat bogus, but the best we can do.  */\n+\t clash.  This is somewhat bogus, but the best we can do.  Only\n+\t do this when X is BLKmode.  */\n       || (TREE_TYPE (exp) != 0 && TYPE_SIZE (TREE_TYPE (exp)) != 0\n-\t  && TREE_CODE (TYPE_SIZE (TREE_TYPE (exp))) != INTEGER_CST))\n+\t  && TREE_CODE (TYPE_SIZE (TREE_TYPE (exp))) != INTEGER_CST\n+\t  && GET_MODE (x) == BLKmode))\n     return 1;\n \n   /* If this is a subreg of a hard register, declare it unsafe, otherwise,"}]}