{"sha": "2fcd8e02d6a76f41ddc131756b1189657927a654", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZjZDhlMDJkNmE3NmY0MWRkYzEzMTc1NmIxMTg5NjU3OTI3YTY1NA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2010-02-25T22:26:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2010-02-25T22:26:55Z"}, "message": "Fix PR target/43154\n\nFrom-SVN: r157074", "tree": {"sha": "4f89a78858a062dec34b0cddd262841c18612581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f89a78858a062dec34b0cddd262841c18612581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fcd8e02d6a76f41ddc131756b1189657927a654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcd8e02d6a76f41ddc131756b1189657927a654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fcd8e02d6a76f41ddc131756b1189657927a654", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcd8e02d6a76f41ddc131756b1189657927a654/comments", "author": null, "committer": null, "parents": [{"sha": "f61ae0658576105867fcb12d47f5f58441e96bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f61ae0658576105867fcb12d47f5f58441e96bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f61ae0658576105867fcb12d47f5f58441e96bf1"}], "stats": {"total": 110, "additions": 91, "deletions": 19}, "files": [{"sha": "307b0a882e68412ecb76f103276ab575790ba80d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -1,3 +1,22 @@\n+2010-02-25  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/43154\n+\t* config/rs6000/vector.md (VEC_64): New iterator for V2DF, V2DI.\n+\t(vec_interleave_high<mode>): Rename from vec_interleave_highv2df\n+\tand support both V2DF and V2DI modes.\n+\t(vec_interleave_low<mode>): Rename from vec_interleave_lowv2df and\n+\tsupport both V2DF and V2DI modes.\n+\t(general): Delete trailing whitespace from a few patterns.\n+\n+\t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add\n+\tV2DF/V2DI interleave high/low builtins.\n+\n+\t* config/rs6000/rs6000-builtin.def (VSX_BUILTIN_VEC_MERGE*): Add\n+\tnew VSX builtins.\n+\n+\t* config/rs6000/rs6000.c (bdesc_2arg): Add support for V2DF/V2DI\n+\tinterleave high/low functions.\n+\n 2010-02-25  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/extend.texi (Symbol-Renaming Pragmas): Fix spelling of"}, {"sha": "e66e8c4318ffeab41084077e74d866498d6cb4e7", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -955,6 +955,10 @@ RS6000_BUILTIN(VSX_BUILTIN_VEC_SET_V2DF,\t\tRS6000_BTC_CONST)\n RS6000_BUILTIN(VSX_BUILTIN_VEC_SET_V2DI,\t\tRS6000_BTC_CONST)\n RS6000_BUILTIN(VSX_BUILTIN_VEC_EXT_V2DF,\t\tRS6000_BTC_CONST)\n RS6000_BUILTIN(VSX_BUILTIN_VEC_EXT_V2DI,\t\tRS6000_BTC_CONST)\n+RS6000_BUILTIN(VSX_BUILTIN_VEC_MERGEL_V2DF,\t\tRS6000_BTC_CONST)\n+RS6000_BUILTIN(VSX_BUILTIN_VEC_MERGEL_V2DI,\t\tRS6000_BTC_CONST)\n+RS6000_BUILTIN(VSX_BUILTIN_VEC_MERGEH_V2DF,\t\tRS6000_BTC_CONST)\n+RS6000_BUILTIN(VSX_BUILTIN_VEC_MERGEH_V2DI,\t\tRS6000_BTC_CONST)\n \n /* VSX overloaded builtins, add the overloaded functions not present in\n    Altivec.  */"}, {"sha": "3bb604998a90ef5ece1e6aa39c73b7023d1c78cc", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -1372,6 +1372,10 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MERGEH, ALTIVEC_BUILTIN_VMRGHW,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MERGEH, VSX_BUILTIN_VEC_MERGEH_V2DF,\n+    RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MERGEH, VSX_BUILTIN_VEC_MERGEH_V2DI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, RS6000_BTI_V2DI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMRGHW, ALTIVEC_BUILTIN_VMRGHW,\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMRGHW, ALTIVEC_BUILTIN_VMRGHW,\n@@ -1416,6 +1420,10 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MERGEL, ALTIVEC_BUILTIN_VMRGLW,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MERGEL, VSX_BUILTIN_VEC_MERGEL_V2DF,\n+    RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MERGEL, VSX_BUILTIN_VEC_MERGEL_V2DI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, RS6000_BTI_V2DI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMRGLW, ALTIVEC_BUILTIN_VMRGLW,\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMRGLW, ALTIVEC_BUILTIN_VMRGLW,"}, {"sha": "7bcc0866887ea72f5f6dba6b1d841b11cb7e49c6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -8950,6 +8950,10 @@ static struct builtin_description bdesc_2arg[] =\n   { MASK_VSX, CODE_FOR_vsx_xxmrghw_v4si, \"__builtin_vsx_xxmrghw_4si\", VSX_BUILTIN_XXMRGHW_4SI },\n   { MASK_VSX, CODE_FOR_vsx_xxmrglw_v4sf, \"__builtin_vsx_xxmrglw\", VSX_BUILTIN_XXMRGLW_4SF },\n   { MASK_VSX, CODE_FOR_vsx_xxmrglw_v4si, \"__builtin_vsx_xxmrglw_4si\", VSX_BUILTIN_XXMRGLW_4SI },\n+  { MASK_VSX, CODE_FOR_vec_interleave_lowv2df, \"__builtin_vsx_mergel_2df\", VSX_BUILTIN_VEC_MERGEL_V2DF },\n+  { MASK_VSX, CODE_FOR_vec_interleave_lowv2di, \"__builtin_vsx_mergel_2di\", VSX_BUILTIN_VEC_MERGEL_V2DI },\n+  { MASK_VSX, CODE_FOR_vec_interleave_highv2df, \"__builtin_vsx_mergeh_2df\", VSX_BUILTIN_VEC_MERGEH_V2DF },\n+  { MASK_VSX, CODE_FOR_vec_interleave_highv2di, \"__builtin_vsx_mergeh_2di\", VSX_BUILTIN_VEC_MERGEH_V2DI },\n \n   { MASK_ALTIVEC|MASK_VSX, CODE_FOR_nothing, \"__builtin_vec_add\", ALTIVEC_BUILTIN_VEC_ADD },\n   { MASK_ALTIVEC|MASK_VSX, CODE_FOR_nothing, \"__builtin_vec_vaddfp\", ALTIVEC_BUILTIN_VEC_VADDFP },"}, {"sha": "d66f1411aaaa4cd2f6684d4f7f6f2fb08fe099d5", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -51,6 +51,9 @@\n ;; Vector init/extract modes\n (define_mode_iterator VEC_E [V16QI V8HI V4SI V2DI V4SF V2DF])\n \n+;; Vector modes for 64-bit base types\n+(define_mode_iterator VEC_64 [V2DI V2DF])\n+\n ;; Vector reload iterator\n (define_mode_iterator VEC_R [V16QI V8HI V4SI V2DI V4SF V2DF DF TI])\n \n@@ -480,7 +483,7 @@\n \t(eq:SI (reg:CC 74)\n \t       (const_int 0)))]\n   \"TARGET_ALTIVEC || TARGET_VSX\"\n-  \"\")\t\n+  \"\")\n \n (define_expand \"cr6_test_for_zero_reverse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -533,7 +536,7 @@\n         (not:VEC_L (match_operand:VEC_L 1 \"vlogical_operand\" \"\")))]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n   \"\")\n-  \n+\n (define_expand \"nor<mode>3\"\n   [(set (match_operand:VEC_L 0 \"vlogical_operand\" \"\")\n         (not:VEC_L (ior:VEC_L (match_operand:VEC_L 1 \"vlogical_operand\" \"\")\n@@ -668,24 +671,24 @@\n   \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (V4SFmode)\"\n   \"\")\n \n-(define_expand \"vec_interleave_highv2df\"\n-  [(set (match_operand:V2DF 0 \"vfloat_operand\" \"\")\n-\t(vec_concat:V2DF\n-\t (vec_select:DF (match_operand:V2DF 1 \"vfloat_operand\" \"\")\n-\t\t\t(parallel [(const_int 0)]))\n-\t (vec_select:DF (match_operand:V2DF 2 \"vfloat_operand\" \"\")\n-\t\t\t(parallel [(const_int 0)]))))]\n-  \"VECTOR_UNIT_VSX_P (V2DFmode)\"\n+(define_expand \"vec_interleave_high<mode>\"\n+  [(set (match_operand:VEC_64 0 \"vfloat_operand\" \"\")\n+\t(vec_concat:VEC_64\n+\t (vec_select:<VEC_base> (match_operand:VEC_64 1 \"vfloat_operand\" \"\")\n+\t\t\t\t(parallel [(const_int 0)]))\n+\t (vec_select:<VEC_base> (match_operand:VEC_64 2 \"vfloat_operand\" \"\")\n+\t\t\t\t(parallel [(const_int 0)]))))]\n+  \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n   \"\")\n \n-(define_expand \"vec_interleave_lowv2df\"\n-  [(set (match_operand:V2DF 0 \"vfloat_operand\" \"\")\n-\t(vec_concat:V2DF\n-\t (vec_select:DF (match_operand:V2DF 1 \"vfloat_operand\" \"\")\n-\t\t\t(parallel [(const_int 1)]))\n-\t (vec_select:DF (match_operand:V2DF 2 \"vfloat_operand\" \"\")\n-\t\t\t(parallel [(const_int 1)]))))]\n-  \"VECTOR_UNIT_VSX_P (V2DFmode)\"\n+(define_expand \"vec_interleave_low<mode>\"\n+  [(set (match_operand:VEC_64 0 \"vfloat_operand\" \"\")\n+\t(vec_concat:VEC_64\n+\t (vec_select:<VEC_base> (match_operand:VEC_64 1 \"vfloat_operand\" \"\")\n+\t\t\t\t(parallel [(const_int 1)]))\n+\t (vec_select:<VEC_base> (match_operand:VEC_64 2 \"vfloat_operand\" \"\")\n+\t\t\t\t(parallel [(const_int 1)]))))]\n+  \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n   \"\")\n \n \f\n@@ -889,7 +892,7 @@\n   rtx insn;\n   HOST_WIDE_INT bitshift_val;\n   HOST_WIDE_INT byteshift_val;\n- \n+\n   if (! CONSTANT_P (bitshift))\n     FAIL;\n   bitshift_val = INTVAL (bitshift);"}, {"sha": "d65d0e0bbea68c198bf304089602776bfb70a20c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -1,3 +1,8 @@\n+2010-02-25  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/43154\n+\t* gcc.target/powerpc/pr43154.c: New file.\n+\n 2010-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43166"}, {"sha": "d083e977b2fd972d23bc7fb28093dd087f8d7e77", "filename": "gcc/testsuite/gcc.target/powerpc/pr43154.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr43154.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcd8e02d6a76f41ddc131756b1189657927a654/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr43154.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr43154.c?ref=2fcd8e02d6a76f41ddc131756b1189657927a654", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O2 -mcpu=power7\" } */\n+\n+/* Make sure that vec_mergel and vec_mergeh are supported for V2DF/V2DI types.  */\n+/* { dg-final { scan-assembler-times \"xxpermdi\" 4 } } */\n+\n+#include <altivec.h>\n+\n+void vec_high_v2df (vector double *a, vector double *b, vector double *c)\n+{\n+  *a = vec_mergeh (*b, *c);\n+}\n+\n+void vec_low_v2df (vector double *a, vector double *b, vector double *c)\n+{\n+  *a = vec_mergel (*b, *c);\n+}\n+\n+void vec_high_v2di (vector long long *a, vector long long *b, vector long long *c)\n+{\n+  *a = vec_mergeh (*b, *c);\n+}\n+\n+void vec_low_v2di (vector long long *a, vector long long *b, vector long long *c)\n+{\n+  *a = vec_mergel (*b, *c);\n+}"}]}