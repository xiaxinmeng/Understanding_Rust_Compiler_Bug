{"sha": "b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUzZWYxYTI1ZmIyNTdkYWMxYjk1MWY5ZjFjNDQwYTk3Y2UzOWJiYw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2000-12-22T17:55:09Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-12-22T17:55:09Z"}, "message": "Allow the (scratch) frame pointer to be initialised from the stack pointer\nplus a constant.\n\nFrom-SVN: r38466", "tree": {"sha": "16de05acdeb9434ab27a174defa99c3269e05804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16de05acdeb9434ab27a174defa99c3269e05804"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8230f5e2360186709b8c39c089be9492081cd8d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8230f5e2360186709b8c39c089be9492081cd8d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8230f5e2360186709b8c39c089be9492081cd8d7"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "35823fab234e5d7c4049019d16266c9abfeb4c80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "patch": "@@ -1,3 +1,9 @@\n+2000-12-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf2out_frame_debug_expr: Allow the (scratch) frame\n+\tpointer to be initialised from the stack pointer plus a\n+\tconstant.\n+\n 2000-12-22  Bernd Schmidt  <bernds@redhat.com>\n \n \t* regrename.c (struct du_chain): New field \"earlyclobber\"."}, {"sha": "344fe4d19129a73f0498b709f6bd4d0bcadcf597", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ef1a25fb257dac1b951f9f1c440a97ce39bbc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b53ef1a25fb257dac1b951f9f1c440a97ce39bbc", "patch": "@@ -1355,16 +1355,27 @@ dwarf2out_frame_debug_expr (expr, label)\n \t    }\n \t  else\n \t    {\n-\t      if (GET_CODE (src) != PLUS\n-\t\t  || XEXP (src, 1) != stack_pointer_rtx)\n+\t      if (GET_CODE (src) != PLUS)\n \t\tabort ();\n-\t      if (GET_CODE (XEXP (src, 0)) != REG\n-\t\t  || (unsigned) REGNO (XEXP (src, 0)) != cfa_temp_reg)\n-\t\tabort ();\n-\t      if (cfa.reg != STACK_POINTER_REGNUM)\n-\t\tabort ();\n-\t      cfa_store.reg = REGNO (dest);\n-\t      cfa_store.offset = cfa.offset - cfa_temp_value;\n+\n+\t      if (GET_CODE (XEXP (src, 0)) == REG\n+\t\t  && REGNO (XEXP (src, 0)) == cfa.reg\n+\t\t  && GET_CODE (XEXP (src, 1)) == CONST_INT)\n+\t\t/* Setting the FP (or a scratch that will be copied into the FP\n+\t\t   later on) from SP + const.  */\n+\t\tcfa.reg = REGNO (dest);\n+\t      else\n+\t\t{\n+\t\t  if (XEXP (src, 1) != stack_pointer_rtx)\n+\t\t    abort ();\n+\t\t  if (GET_CODE (XEXP (src, 0)) != REG\n+\t\t      || (unsigned) REGNO (XEXP (src, 0)) != cfa_temp_reg)\n+\t\t    abort ();\n+\t\t  if (cfa.reg != STACK_POINTER_REGNUM)\n+\t\t    abort ();\n+\t\t  cfa_store.reg = REGNO (dest);\n+\t\t  cfa_store.offset = cfa.offset - cfa_temp_value;\n+\t\t}\n \t    }\n \t  break;\n "}]}