{"sha": "00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlOTBkM2Q0Y2I1MWZkMGZhZTdiMmRiZDRiYWIxZGIyNmQ2Njc2ZQ==", "commit": {"author": {"name": "Yichao Yu", "email": "yyc1992@gmail.com", "date": "2020-06-26T21:46:15Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-06-26T21:49:52Z"}, "message": "Fix target clone indirection elimination\n\nThe current logic seems to be comparing the whole attribute tree between\nthe callee and caller (or at least the tree starting from the target attribute).\nThis is unnecessary and causes strange dependency of the indirection\nelimination on unrelated properties like `noinline`(PR95780) and\n`visibility`(PR95778).\n\nThis changes the comparison to be only on the `target` attribute which should\nbe the intent of the code.\n\ngcc\n\n\t* multiple_target.c (redirect_to_specific_clone): Fix tests\n\tto check individual attribute rather than an attribute list.\n\ngcc/testsuite\n\n\t* gcc.target/i386/pr95778-1.c: New test.\n\t* gcc.target/i386/pr95778-2.c: New test.", "tree": {"sha": "b4822e4fbc21194590e4ecb26d9f5c0b31c6d29d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4822e4fbc21194590e4ecb26d9f5c0b31c6d29d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/comments", "author": {"login": "yuyichao", "id": 712232, "node_id": "MDQ6VXNlcjcxMjIzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/712232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuyichao", "html_url": "https://github.com/yuyichao", "followers_url": "https://api.github.com/users/yuyichao/followers", "following_url": "https://api.github.com/users/yuyichao/following{/other_user}", "gists_url": "https://api.github.com/users/yuyichao/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuyichao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuyichao/subscriptions", "organizations_url": "https://api.github.com/users/yuyichao/orgs", "repos_url": "https://api.github.com/users/yuyichao/repos", "events_url": "https://api.github.com/users/yuyichao/events{/privacy}", "received_events_url": "https://api.github.com/users/yuyichao/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67161d24f45601e43abea98f2c3d7d7a462b6eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67161d24f45601e43abea98f2c3d7d7a462b6eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67161d24f45601e43abea98f2c3d7d7a462b6eab"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "b15d004fa4ec60b21b205b6fca95b2f07b5f0987", "filename": "gcc/multiple_target.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Fmultiple_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Fmultiple_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmultiple_target.c?ref=00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "patch": "@@ -483,7 +483,8 @@ redirect_to_specific_clone (cgraph_node *node)\n \t\t\t\t\t    DECL_ATTRIBUTES (e->callee->decl));\n \n       /* Function is not calling proper target clone.  */\n-      if (!attribute_list_equal (attr_target, attr_target2))\n+      if (attr_target2 == NULL_TREE\n+\t  || !attribute_value_equal (attr_target, attr_target2))\n \t{\n \t  while (fv2->prev != NULL)\n \t    fv2 = fv2->prev;\n@@ -494,7 +495,8 @@ redirect_to_specific_clone (cgraph_node *node)\n \t      cgraph_node *callee = fv2->this_node;\n \t      attr_target2 = lookup_attribute (\"target\",\n \t\t\t\t\t       DECL_ATTRIBUTES (callee->decl));\n-\t      if (attribute_list_equal (attr_target, attr_target2))\n+\t      if (attr_target2 != NULL_TREE\n+\t\t  && attribute_value_equal (attr_target, attr_target2))\n \t\t{\n \t\t  e->redirect_callee (callee);\n \t\t  cgraph_edge::redirect_call_stmt_to_callee (e);"}, {"sha": "3238303d6963f3774880b24e87c2978c41790930", "filename": "gcc/testsuite/gcc.target/i386/pr95778-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c?ref=00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O3 -fPIC -fno-asynchronous-unwind-tables\" } */\n+/* { dg-require-ifunc \"\" } */\n+\n+__attribute__((target_clones(\"default,avx2\")))\n+static int\n+f2(int *p)\n+{\n+  asm volatile (\"\" :: \"r\"(p) : \"memory\");\n+  return *p;\n+}\n+\n+__attribute__((target_clones(\"default,avx2\")))\n+int\n+g2(int *p)\n+{\n+  return f2(p);\n+}\n+\n+/* { dg-final { scan-assembler \"g2.default.1:\\n\\tjmp\\tf2.default.1\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.avx2.0:\\n\\tjmp\\tf2.avx2.0\\n\" } } */"}, {"sha": "e88702d2b82d7282256de7ee8aceb747a8aff22a", "filename": "gcc/testsuite/gcc.target/i386/pr95778-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c?ref=00e90d3d4cb51fd0fae7b2dbd4bab1db26d6676e", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O3 -fPIC -fno-asynchronous-unwind-tables\" } */\n+/* { dg-require-ifunc \"\" } */\n+\n+__attribute__((visibility(\"internal\"),target_clones(\"default,avx2\")))\n+int\n+f2(int *p)\n+{\n+  asm volatile (\"\" :: \"r\"(p) : \"memory\");\n+  return *p;\n+}\n+\n+__attribute__((target_clones(\"default,avx2\")))\n+int\n+g2(int *p)\n+{\n+  return f2(p);\n+}\n+\n+/* { dg-final { scan-assembler \"g2.default.1:\\n\\tjmp\\tf2.default.1\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.avx2.0:\\n\\tjmp\\tf2.avx2.0\\n\" } } */"}]}