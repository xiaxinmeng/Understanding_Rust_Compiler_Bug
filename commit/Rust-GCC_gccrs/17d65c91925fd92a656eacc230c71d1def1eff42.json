{"sha": "17d65c91925fd92a656eacc230c71d1def1eff42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkNjVjOTE5MjVmZDkyYTY1NmVhY2MyMzBjNzFkMWRlZjFlZmY0Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-07-17T08:08:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:08:04Z"}, "message": "[Ada] Unnesting: don't use Get_Actual_Subtype for record subtypes\n\n2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Unnest_Subprograms): Do nothing if the expander is not\n\tactive.  Don't use Get_Actual_Subtype for record subtypes.  Ignore\n\trewritten identifiers and uplevel references to bounds of types that\n\tcome from the original type reference.\n\nFrom-SVN: r262787", "tree": {"sha": "dccee2400a284dfe28a672be2850faa5a23c65f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dccee2400a284dfe28a672be2850faa5a23c65f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17d65c91925fd92a656eacc230c71d1def1eff42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d65c91925fd92a656eacc230c71d1def1eff42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d65c91925fd92a656eacc230c71d1def1eff42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d65c91925fd92a656eacc230c71d1def1eff42/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "e7845675d93ebcfbfa7a0c43f539e20e26df54dc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d65c91925fd92a656eacc230c71d1def1eff42/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d65c91925fd92a656eacc230c71d1def1eff42/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=17d65c91925fd92a656eacc230c71d1def1eff42", "patch": "@@ -1,3 +1,10 @@\n+2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Unnest_Subprograms): Do nothing if the expander is not\n+\tactive.  Don't use Get_Actual_Subtype for record subtypes.  Ignore\n+\trewritten identifiers and uplevel references to bounds of types that\n+\tcome from the original type reference.\n+\n 2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch13.adb, exp_ch7.adb, exp_unst.adb, freeze.adb,"}, {"sha": "f1c371a765c43969d6e2771ce188e2ff2f5fc005", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d65c91925fd92a656eacc230c71d1def1eff42/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d65c91925fd92a656eacc230c71d1def1eff42/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=17d65c91925fd92a656eacc230c71d1def1eff42", "patch": "@@ -721,6 +721,10 @@ package body Exp_Unst is\n                    Bod           => Bod,\n                    Lev           => L,\n                    Reachable     => In_Synchronized_Unit (E),\n+\n+                   --  Subprograms declared in tasks and protected types are\n+                   --  reachable and cannot be eliminated.\n+\n                    Uplevel_Ref   => L,\n                    Declares_AREC => False,\n                    Uents         => No_Elist,\n@@ -1932,7 +1936,7 @@ package body Exp_Unst is\n                                  --  If we have a loop parameter, we have\n                                  --  to insert before the first statement\n                                  --  of the loop. Ins points to the\n-                                 --  N_Loop_Parametrer_Specification.\n+                                 --  N_Loop_Parameter_Specification.\n \n                                  if Ekind (Ent) = E_Loop_Parameter then\n                                     Ins :=\n@@ -1980,9 +1984,18 @@ package body Exp_Unst is\n          begin\n             --  Ignore type references, these are implicit references that do\n             --  not need rewriting (e.g. the appearence in a conversion).\n-            --  Also ignore if no reference was specified.\n-\n-            if Is_Type (UPJ.Ent) or else No (UPJ.Ref) then\n+            --  Also ignore if no reference was specified or if the rewriting\n+            --  has already been done (this can happen if the N_Identifier\n+            --  occurs more than one time in the tree).\n+           --  Also ignore uplevel references to bounds of types that come\n+           --  from the original type reference.\n+\n+            if Is_Type (UPJ.Ent)\n+              or else No (UPJ.Ref)\n+              or else not Is_Entity_Name (UPJ.Ref)\n+              or else not Present (Entity (UPJ.Ref))\n+              or else Is_Type (Entity (UPJ.Ref))\n+            then\n                goto Continue;\n             end if;\n \n@@ -2005,7 +2018,7 @@ package body Exp_Unst is\n                Typ : constant Entity_Id := Etype (UPJ.Ent);\n                --  The type of the referenced entity\n \n-               Atyp : constant Entity_Id := Get_Actual_Subtype (UPJ.Ref);\n+               Atyp : Entity_Id;\n                --  The actual subtype of the reference\n \n                RS_Caller : constant SI_Type := Subp_Index (UPJ.Caller);\n@@ -2025,6 +2038,12 @@ package body Exp_Unst is\n                SI   : SI_Type;\n \n             begin\n+               Atyp := Etype (UPJ.Ref);\n+\n+               if Ekind (Atyp) /= E_Record_Subtype then\n+                  Atyp := Get_Actual_Subtype (UPJ.Ref);\n+               end if;\n+\n                --  Ignore if no ARECnF entity for enclosing subprogram which\n                --  probably happens as a result of not properly treating\n                --  instance bodies. To be examined ???\n@@ -2344,7 +2363,7 @@ package body Exp_Unst is\n    --  Start of processing for Unnest_Subprograms\n \n    begin\n-      if not Opt.Unnest_Subprogram_Mode then\n+      if not Opt.Unnest_Subprogram_Mode or not Opt.Expander_Active then\n          return;\n       end if;\n "}]}