{"sha": "b4830636f847d9e1707198a4de2fe760d468ead9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4MzA2MzZmODQ3ZDllMTcwNzE5OGE0ZGUyZmU3NjBkNDY4ZWFkOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-21T19:27:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-21T19:27:08Z"}, "message": "gimplify.c (eval_save_expr): New.\n\n        * gimplify.c (eval_save_expr): New.\n        (gimplify_one_sizepos): Use it.\n        * stor-layout.c (layout_type): Unshare TYPE_MIN/MAX_VALUE.\n\nFrom-SVN: r92468", "tree": {"sha": "47af0a2aac50780b1933000e0ecc9465871ee8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47af0a2aac50780b1933000e0ecc9465871ee8e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4830636f847d9e1707198a4de2fe760d468ead9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4830636f847d9e1707198a4de2fe760d468ead9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4830636f847d9e1707198a4de2fe760d468ead9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4830636f847d9e1707198a4de2fe760d468ead9/comments", "author": null, "committer": null, "parents": [{"sha": "1126bfdd6b9e34210cde355f19662ed070f9a6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1126bfdd6b9e34210cde355f19662ed070f9a6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1126bfdd6b9e34210cde355f19662ed070f9a6ad"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "b9fbcfb0073229c1f18923765c7f203682183009", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4830636f847d9e1707198a4de2fe760d468ead9", "patch": "@@ -1,3 +1,9 @@\n+2004-12-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* gimplify.c (eval_save_expr): New.\n+\t(gimplify_one_sizepos): Use it.\n+\t* stor-layout.c (layout_type): Unshare TYPE_MIN/MAX_VALUE.\n+\n 2004-12-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* system.c (IN_RANGE): Use plain unsigned, not unsigned"}, {"sha": "c92d9a5e4bce91ed47a084c05ff9707b1f5a9247", "filename": "gcc/gimplify.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=b4830636f847d9e1707198a4de2fe760d468ead9", "patch": "@@ -4217,7 +4217,25 @@ gimplify_type_sizes (tree type, tree *list_p)\n   gimplify_one_sizepos (&TYPE_SIZE_UNIT (type), list_p);\n }\n \n-/* Subroutine of the above to gimplify one size or position, *EXPR_P.\n+/* A subroutine of gimplify_one_sizepos, called via walk_tree.  Evaluate\n+   the expression if it's a SAVE_EXPR and add it to the statement list \n+   in DATA.  */\n+\n+static tree\n+eval_save_expr (tree *tp, int *walk_subtrees, void *data)\n+{\n+  if (TREE_CODE (*tp) == SAVE_EXPR)\n+    {\n+      *walk_subtrees = 0;\n+      gimplify_and_add (*tp, (tree *) data);\n+    }\n+  else if (TYPE_P (*tp) || DECL_P (*tp))\n+    *walk_subtrees = 0;\n+  return NULL;\n+}\n+\n+/* A subroutine of gimplify_type_sizes to make sure that *EXPR_P,\n+   a size or position, has had all of its SAVE_EXPRs evaluated.\n    We add any required statements to STMT_P.  */\n \n void\n@@ -4233,7 +4251,7 @@ gimplify_one_sizepos (tree *expr_p, tree *stmt_p)\n       || CONTAINS_PLACEHOLDER_P (*expr_p))\n     return;\n \n-  gimplify_expr (expr_p, stmt_p, NULL, is_gimple_val, fb_rvalue);\n+  walk_tree (expr_p, eval_save_expr, stmt_p, NULL);\n }\n \f\n #ifdef ENABLE_CHECKING"}, {"sha": "13fdb3cf14cbafb422614961f45c5802804556c1", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4830636f847d9e1707198a4de2fe760d468ead9/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=b4830636f847d9e1707198a4de2fe760d468ead9", "patch": "@@ -1644,8 +1644,8 @@ layout_type (tree type)\n \tif (index && TYPE_MAX_VALUE (index) && TYPE_MIN_VALUE (index)\n \t    && TYPE_SIZE (element))\n \t  {\n-\t    tree ub = TYPE_MAX_VALUE (index);\n-\t    tree lb = TYPE_MIN_VALUE (index);\n+\t    tree ub = unshare_expr (TYPE_MAX_VALUE (index));\n+\t    tree lb = unshare_expr (TYPE_MIN_VALUE (index));\n \t    tree length;\n \t    tree element_size;\n "}]}