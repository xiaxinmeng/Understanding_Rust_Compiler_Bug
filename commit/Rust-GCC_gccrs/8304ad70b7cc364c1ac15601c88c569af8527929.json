{"sha": "8304ad70b7cc364c1ac15601c88c569af8527929", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwNGFkNzBiN2NjMzY0YzFhYzE1NjAxYzg4YzU2OWFmODUyNzkyOQ==", "commit": {"author": {"name": "Frank Ch. Eigler", "email": "fche@redhat.com", "date": "2004-09-16T20:37:09Z"}, "committer": {"name": "Frank Ch. Eigler", "email": "fche@gcc.gnu.org", "date": "2004-09-16T20:37:09Z"}, "message": "bprob.exp, bprob.exp: Iterate tests with -ftree-based-profiling also.\n\n2004-09-16  Frank Ch. Eigler  <fche@redhat.com>\n\n\t* gcc.misc-tests/bprob.exp, g++.dg/bprob/bprob.exp: Iterate tests\n\twith -ftree-based-profiling also.\n\t* lib/profopt.exp: Support late-set profile_option/feedback_option.\n\nFrom-SVN: r87612", "tree": {"sha": "3ef0fc16fc871b1fa7bb6b7cfcf47b60e184390c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ef0fc16fc871b1fa7bb6b7cfcf47b60e184390c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8304ad70b7cc364c1ac15601c88c569af8527929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8304ad70b7cc364c1ac15601c88c569af8527929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8304ad70b7cc364c1ac15601c88c569af8527929", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8304ad70b7cc364c1ac15601c88c569af8527929/comments", "author": {"login": "fche", "id": 588885, "node_id": "MDQ6VXNlcjU4ODg4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fche", "html_url": "https://github.com/fche", "followers_url": "https://api.github.com/users/fche/followers", "following_url": "https://api.github.com/users/fche/following{/other_user}", "gists_url": "https://api.github.com/users/fche/gists{/gist_id}", "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fche/subscriptions", "organizations_url": "https://api.github.com/users/fche/orgs", "repos_url": "https://api.github.com/users/fche/repos", "events_url": "https://api.github.com/users/fche/events{/privacy}", "received_events_url": "https://api.github.com/users/fche/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fae925b0054a850342419833ee04af01891fd14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fae925b0054a850342419833ee04af01891fd14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fae925b0054a850342419833ee04af01891fd14"}], "stats": {"total": 69, "additions": 44, "deletions": 25}, "files": [{"sha": "62c5c373c599a774facb50eb5cd5b2530a27de14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8304ad70b7cc364c1ac15601c88c569af8527929", "patch": "@@ -1,3 +1,9 @@\n+2004-09-16  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\t* gcc.misc-tests/bprob.exp, g++.dg/bprob/bprob.exp: Iterate tests\n+\twith -ftree-based-profiling also.\n+\t* lib/profopt.exp: Support late-set profile_option/feedback_option.\n+\n 2004-09-16  Victor Leikehman  <lei@il.ibm.com>\n \n \tPR/15364"}, {"sha": "90cb99a8228b405d5fe3ca7ad8de81fa99befd90", "filename": "gcc/testsuite/g++.dg/bprob/bprob.exp", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp?ref=8304ad70b7cc364c1ac15601c88c569af8527929", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -27,8 +27,6 @@ if { ![check_profiling_available \"-fprofile-arcs\"] } {\n \n # The procedures in profopt.exp need these parameters.\n set tool g++\n-set profile_option -fprofile-arcs\n-set feedback_option -fbranch-probabilities\n set prof_ext gcda\n \n if $tracelevel then {\n@@ -52,12 +50,20 @@ if $tracelevel then {\n # Load support procs.\n load_lib profopt.exp\n \n+set profile_options \"-fprofile-arcs\"\n+set feedback_options \"-fbranch-probabilities\"\n+if {[check_profiling_available \"-ftree-based-profiling\"]} {\n+    lappend profile_options \"-ftree-based-profiling -fprofile-arcs\"\n+    lappend feedback_options \"-ftree-based-profiling -fbranch-probabilities\"\n+}\n+\n # Main loop.\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.C]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n+foreach profile_option $profile_options feedback_option $feedback_options {\n+    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.C]] {\n+        # If we're only testing specific files and this isn't one of them, skip it.\n+        if ![runtest_file_p $runtests $src] then {\n+            continue\n+        }\n+        profopt-execute $src\n     }\n-\n-    profopt-execute $src\n }"}, {"sha": "554bf76dde9df1dd4691089af499060edb1db6ad", "filename": "gcc/testsuite/gcc.misc-tests/bprob.exp", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp?ref=8304ad70b7cc364c1ac15601c88c569af8527929", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -27,8 +27,6 @@ if { ![check_profiling_available \"-fprofile-arcs\"] } {\n \n # The procedures in profopt.exp need these parameters.\n set tool gcc\n-set profile_option -fprofile-arcs\n-set feedback_option -fbranch-probabilities\n set prof_ext gcda\n set perf_ext tim\n \n@@ -49,11 +47,19 @@ if $tracelevel then {\n # Load support procs.\n load_lib profopt.exp\n \n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/bprob-*.c]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n+set profile_options \"-fprofile-arcs\"\n+set feedback_options \"-fbranch-probabilities\"\n+if {[check_profiling_available \"-ftree-based-profiling\"]} {\n+    lappend profile_options \"-ftree-based-profiling -fprofile-arcs\"\n+    lappend feedback_options \"-ftree-based-profiling -fbranch-probabilities\"\n+}\n \n-    profopt-execute $src\n+foreach profile_option $profile_options feedback_option $feedback_options {\n+    foreach src [lsort [glob -nocomplain $srcdir/$subdir/bprob-*.c]] {\n+        # If we're only testing specific files and this isn't one of them, skip it.\n+        if ![runtest_file_p $runtests $src] then {\n+            continue\n+        }\n+        profopt-execute $src\n+    }\n }"}, {"sha": "e8a7ac123541f46fca774950e13e3279a961d169", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8304ad70b7cc364c1ac15601c88c569af8527929/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=8304ad70b7cc364c1ac15601c88c569af8527929", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2001 Free Software Foundation, Inc.\n+#   Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -37,12 +37,6 @@ global tool profile_option feedback_option prof_ext\n if ![info exists tool] {\n     error \"Tools is not specified.\"\n }\n-if ![info exists profile_option] {\n-    error \"No profile option specified for first compile.\"\n-}\n-if ![info exists feedback_option] {\n-    error \"No feedback option specified for second compile.\"\n-}\n if ![info exists prof_ext] {\n     error \"No profile data file extension specified.\"\n }\n@@ -130,6 +124,13 @@ proc profopt-execute { src } {\n     global tool profile_option feedback_option prof_ext perf_ext perf_delta\n     global verbose\n \n+    if ![info exists profile_option] {\n+        error \"No profile option specified for first compile.\"\n+    }\n+    if ![info exists feedback_option] {\n+        error \"No feedback option specified for second compile.\"\n+    }\n+\n     regsub \"^$srcdir/?\" $src \"\" testcase\n     # If we couldn't rip $srcdir out of `src' then just do the best we can.\n     # The point is to reduce the unnecessary noise in the logs.  Don't strip"}]}