{"sha": "4317778a9b6213a97a3de5ffd77edf516592fb71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxNzc3OGE5YjYyMTNhOTdhM2RlNWZmZDc3ZWRmNTE2NTkyZmI3MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-06-16T11:54:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-06-16T11:54:59Z"}, "message": "PR libstdc++/81092 add std::wstring symbols and bump library version\n\n\tPR libstdc++/81092\n\t* acinclude.m4: Bump libtool_VERSION.\n\t* config/abi/post/i386-linux-gnu/baseline_symbols.txt: Update.\n\t* config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.\n\t* config/abi/pre/gnu.ver: Add wstring constructor symbols to\n\tGLIBCXX_3.4.24 version and move random_device::_M_get_entropy() symbol\n\tto new GLIBCXX_3.4.25 version.\n\t* doc/xml/manual/abi.xml: Document new versions.\n\t* doc/html/*: Regenerate.\n\t* testsuite/21_strings/basic_string/cons/char/8.cc: Use base object\n\tconstructors to ensure required symbols are exported.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/8.cc: Likewise.\n\t* testsuite/util/testsuite_abi.cc: Add new version.\n\nFrom-SVN: r249246", "tree": {"sha": "737e8db763cb218aafd218874d2fd0b65ea55f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/737e8db763cb218aafd218874d2fd0b65ea55f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4317778a9b6213a97a3de5ffd77edf516592fb71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4317778a9b6213a97a3de5ffd77edf516592fb71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4317778a9b6213a97a3de5ffd77edf516592fb71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4317778a9b6213a97a3de5ffd77edf516592fb71/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66846c079410498d0d836ebb112dad60f75c8edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66846c079410498d0d836ebb112dad60f75c8edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66846c079410498d0d836ebb112dad60f75c8edd"}], "stats": {"total": 105, "additions": 94, "deletions": 11}, "files": [{"sha": "bcf1d049a2957ede1288c54a4310754c16ea7278", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -1,5 +1,19 @@\n 2017-06-16  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/81092\n+\t* acinclude.m4: Bump libtool_VERSION.\n+\t* config/abi/post/i386-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.\n+\t* config/abi/pre/gnu.ver: Add wstring constructor symbols to\n+\tGLIBCXX_3.4.24 version and move random_device::_M_get_entropy() symbol\n+\tto new GLIBCXX_3.4.25 version.\n+\t* doc/xml/manual/abi.xml: Document new versions.\n+\t* doc/html/*: Regenerate.\n+\t* testsuite/21_strings/basic_string/cons/char/8.cc: Use base object\n+\tconstructors to ensure required symbols are exported.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/8.cc: Likewise.\n+\t* testsuite/util/testsuite_abi.cc: Add new version.\n+\n \t* include/bits/locale_conv.h (wbuffer_convert::_M_put): Add missing\n \treturn statement.\n \t* testsuite/21_strings/basic_string_view/operations/copy/char/1.cc:"}, {"sha": "599308f587ac3955be1b9d88c29de695965f17db", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -3750,7 +3750,7 @@ changequote([,])dnl\n fi\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:24:0\n+libtool_VERSION=6:25:0\n \n # Everything parsed; figure out what files and settings to use.\n case $enable_symvers in"}, {"sha": "e673f4f86dc67555e63efc68fe73e7286d9faa9c", "filename": "libstdc++-v3/config/abi/post/i386-linux-gnu/baseline_symbols.txt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -444,6 +444,7 @@ FUNC:_ZNKSt13basic_fstreamIwSt11char_traitsIwEE7is_openEv@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_istreamIwSt11char_traitsIwEE6gcountEv@@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_istreamIwSt11char_traitsIwEE6sentrycvbEv@@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_ostreamIwSt11char_traitsIwEE6sentrycvbEv@@GLIBCXX_3.4\n+FUNC:_ZNKSt13random_device13_M_getentropyEv@@GLIBCXX_3.4.25\n FUNC:_ZNKSt13runtime_error4whatEv@@GLIBCXX_3.4\n FUNC:_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE5rdbufEv@@GLIBCXX_3.4\n FUNC:_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@@GLIBCXX_3.4.5\n@@ -1329,6 +1330,7 @@ FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_@@GLIBCXX_3.4\n+FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jRKS1_@@GLIBCXX_3.4.24\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jj@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ESt16initializer_listIwERKS1_@@GLIBCXX_3.4.11\n@@ -1342,6 +1344,7 @@ FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2EPKwRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2EPKwjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_@@GLIBCXX_3.4\n+FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jRKS1_@@GLIBCXX_3.4.24\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jj@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ESt16initializer_listIwERKS1_@@GLIBCXX_3.4.11\n@@ -4002,6 +4005,8 @@ OBJECT:0:GLIBCXX_3.4.20\n OBJECT:0:GLIBCXX_3.4.21\n OBJECT:0:GLIBCXX_3.4.22\n OBJECT:0:GLIBCXX_3.4.23\n+OBJECT:0:GLIBCXX_3.4.24\n+OBJECT:0:GLIBCXX_3.4.25\n OBJECT:0:GLIBCXX_3.4.3\n OBJECT:0:GLIBCXX_3.4.4\n OBJECT:0:GLIBCXX_3.4.5"}, {"sha": "e673f4f86dc67555e63efc68fe73e7286d9faa9c", "filename": "libstdc++-v3/config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -444,6 +444,7 @@ FUNC:_ZNKSt13basic_fstreamIwSt11char_traitsIwEE7is_openEv@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_istreamIwSt11char_traitsIwEE6gcountEv@@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_istreamIwSt11char_traitsIwEE6sentrycvbEv@@GLIBCXX_3.4\n FUNC:_ZNKSt13basic_ostreamIwSt11char_traitsIwEE6sentrycvbEv@@GLIBCXX_3.4\n+FUNC:_ZNKSt13random_device13_M_getentropyEv@@GLIBCXX_3.4.25\n FUNC:_ZNKSt13runtime_error4whatEv@@GLIBCXX_3.4\n FUNC:_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE5rdbufEv@@GLIBCXX_3.4\n FUNC:_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@@GLIBCXX_3.4.5\n@@ -1329,6 +1330,7 @@ FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_@@GLIBCXX_3.4\n+FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jRKS1_@@GLIBCXX_3.4.24\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jj@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_jjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC1ESt16initializer_listIwERKS1_@@GLIBCXX_3.4.11\n@@ -1342,6 +1344,7 @@ FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2EPKwRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2EPKwjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_@@GLIBCXX_3.4\n+FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jRKS1_@@GLIBCXX_3.4.24\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jj@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ERKS2_jjRKS1_@@GLIBCXX_3.4\n FUNC:_ZNSbIwSt11char_traitsIwESaIwEEC2ESt16initializer_listIwERKS1_@@GLIBCXX_3.4.11\n@@ -4002,6 +4005,8 @@ OBJECT:0:GLIBCXX_3.4.20\n OBJECT:0:GLIBCXX_3.4.21\n OBJECT:0:GLIBCXX_3.4.22\n OBJECT:0:GLIBCXX_3.4.23\n+OBJECT:0:GLIBCXX_3.4.24\n+OBJECT:0:GLIBCXX_3.4.25\n OBJECT:0:GLIBCXX_3.4.3\n OBJECT:0:GLIBCXX_3.4.4\n OBJECT:0:GLIBCXX_3.4.5"}, {"sha": "7e5a9cce7abf54e4741bdc426644560e5790cbd3", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -1953,6 +1953,7 @@ GLIBCXX_3.4.23 {\n     # basic_string<C, T, A>::basic_string(const basic_string&, size_type, const A&)\n     _ZNSt7__cxx1112basic_stringI[cw]St11char_traitsI[cw]ESaI[cw]EEC[12]ERKS4_[jmy]RKS3_;\n     _ZNSsC[12]ERKSs[jmy]RKSaIcE;\n+    # This should have been _[jmy]RKS1_ not _mRKS1_ (PR libstdc++/81092):\n     _ZNSbIwSt11char_traitsIwESaIwEEC[12]ERKS2_mRKS1_;\n \n #ifndef HAVE_EXCEPTION_PTR_SINCE_GCC46\n@@ -1969,10 +1970,17 @@ GLIBCXX_3.4.23 {\n \n GLIBCXX_3.4.24 {\n \n+    # These should have been in GLIBCXX_3.4.23 (PR libstdc++/81092):\n+    _ZNSbIwSt11char_traitsIwESaIwEEC[12]ERKS2_[jy]RKS1_;\n+\n+} GLIBCXX_3.4.23;\n+\n+GLIBCXX_3.4.25 {\n+\n     # std::random_device::_M_getentropy() const\n     _ZNKSt13random_device13_M_getentropyEv;\n \n-} GLIBCXX_3.4.23;\n+} GLIBCXX_3.4.24;\n \n # Symbols in the support library (libsupc++) have their own tag.\n CXXABI_1.3 {"}, {"sha": "a611f7b40140697955f24103720ab5c308f9712a", "filename": "libstdc++-v3/doc/html/manual/abi.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -110,7 +110,7 @@\n \thas the same filename and <code class=\"constant\">DT_SONAME</code> as the\n \tpreceding release.\n       </p><p>It is versioned as follows:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: libstdc++.so.3.0.0</p></li><li class=\"listitem\"><p>GCC 3.0.1: libstdc++.so.3.0.1</p></li><li class=\"listitem\"><p>GCC 3.0.2: libstdc++.so.3.0.2</p></li><li class=\"listitem\"><p>GCC 3.0.3: libstdc++.so.3.0.2 (See Note 1)</p></li><li class=\"listitem\"><p>GCC 3.0.4: libstdc++.so.3.0.4</p></li><li class=\"listitem\"><p>GCC 3.1.0: libstdc++.so.4.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.1.1: libstdc++.so.4.0.1</p></li><li class=\"listitem\"><p>GCC 3.2.0: libstdc++.so.5.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.2.1: libstdc++.so.5.0.1</p></li><li class=\"listitem\"><p>GCC 3.2.2: libstdc++.so.5.0.2</p></li><li class=\"listitem\"><p>GCC 3.2.3: libstdc++.so.5.0.3 (See Note 2)</p></li><li class=\"listitem\"><p>GCC 3.3.0: libstdc++.so.5.0.4</p></li><li class=\"listitem\"><p>GCC 3.3.1: libstdc++.so.5.0.5</p></li><li class=\"listitem\"><p>GCC 3.4.0: libstdc++.so.6.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.4.1: libstdc++.so.6.0.1</p></li><li class=\"listitem\"><p>GCC 3.4.2: libstdc++.so.6.0.2</p></li><li class=\"listitem\"><p>GCC 3.4.3: libstdc++.so.6.0.3</p></li><li class=\"listitem\"><p>GCC 4.0.0: libstdc++.so.6.0.4</p></li><li class=\"listitem\"><p>GCC 4.0.1: libstdc++.so.6.0.5</p></li><li class=\"listitem\"><p>GCC 4.0.2: libstdc++.so.6.0.6</p></li><li class=\"listitem\"><p>GCC 4.0.3: libstdc++.so.6.0.7</p></li><li class=\"listitem\"><p>GCC 4.1.0: libstdc++.so.6.0.7</p></li><li class=\"listitem\"><p>GCC 4.1.1: libstdc++.so.6.0.8</p></li><li class=\"listitem\"><p>GCC 4.2.0: libstdc++.so.6.0.9</p></li><li class=\"listitem\"><p>GCC 4.2.1: libstdc++.so.6.0.9 (See Note 3)</p></li><li class=\"listitem\"><p>GCC 4.2.2: libstdc++.so.6.0.9</p></li><li class=\"listitem\"><p>GCC 4.3.0: libstdc++.so.6.0.10</p></li><li class=\"listitem\"><p>GCC 4.4.0: libstdc++.so.6.0.11</p></li><li class=\"listitem\"><p>GCC 4.4.1: libstdc++.so.6.0.12</p></li><li class=\"listitem\"><p>GCC 4.4.2: libstdc++.so.6.0.13</p></li><li class=\"listitem\"><p>GCC 4.5.0: libstdc++.so.6.0.14</p></li><li class=\"listitem\"><p>GCC 4.6.0: libstdc++.so.6.0.15</p></li><li class=\"listitem\"><p>GCC 4.6.1: libstdc++.so.6.0.16</p></li><li class=\"listitem\"><p>GCC 4.7.0: libstdc++.so.6.0.17</p></li><li class=\"listitem\"><p>GCC 4.8.0: libstdc++.so.6.0.18</p></li><li class=\"listitem\"><p>GCC 4.8.3: libstdc++.so.6.0.19</p></li><li class=\"listitem\"><p>GCC 4.9.0: libstdc++.so.6.0.20</p></li><li class=\"listitem\"><p>GCC 5.1.0: libstdc++.so.6.0.21</p></li><li class=\"listitem\"><p>GCC 6.1.0: libstdc++.so.6.0.22</p></li><li class=\"listitem\"><p>GCC 7.1.0: libstdc++.so.6.0.23</p></li></ul></div><p>\n+    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: libstdc++.so.3.0.0</p></li><li class=\"listitem\"><p>GCC 3.0.1: libstdc++.so.3.0.1</p></li><li class=\"listitem\"><p>GCC 3.0.2: libstdc++.so.3.0.2</p></li><li class=\"listitem\"><p>GCC 3.0.3: libstdc++.so.3.0.2 (See Note 1)</p></li><li class=\"listitem\"><p>GCC 3.0.4: libstdc++.so.3.0.4</p></li><li class=\"listitem\"><p>GCC 3.1.0: libstdc++.so.4.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.1.1: libstdc++.so.4.0.1</p></li><li class=\"listitem\"><p>GCC 3.2.0: libstdc++.so.5.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.2.1: libstdc++.so.5.0.1</p></li><li class=\"listitem\"><p>GCC 3.2.2: libstdc++.so.5.0.2</p></li><li class=\"listitem\"><p>GCC 3.2.3: libstdc++.so.5.0.3 (See Note 2)</p></li><li class=\"listitem\"><p>GCC 3.3.0: libstdc++.so.5.0.4</p></li><li class=\"listitem\"><p>GCC 3.3.1: libstdc++.so.5.0.5</p></li><li class=\"listitem\"><p>GCC 3.4.0: libstdc++.so.6.0.0 <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 3.4.1: libstdc++.so.6.0.1</p></li><li class=\"listitem\"><p>GCC 3.4.2: libstdc++.so.6.0.2</p></li><li class=\"listitem\"><p>GCC 3.4.3: libstdc++.so.6.0.3</p></li><li class=\"listitem\"><p>GCC 4.0.0: libstdc++.so.6.0.4</p></li><li class=\"listitem\"><p>GCC 4.0.1: libstdc++.so.6.0.5</p></li><li class=\"listitem\"><p>GCC 4.0.2: libstdc++.so.6.0.6</p></li><li class=\"listitem\"><p>GCC 4.0.3: libstdc++.so.6.0.7</p></li><li class=\"listitem\"><p>GCC 4.1.0: libstdc++.so.6.0.7</p></li><li class=\"listitem\"><p>GCC 4.1.1: libstdc++.so.6.0.8</p></li><li class=\"listitem\"><p>GCC 4.2.0: libstdc++.so.6.0.9</p></li><li class=\"listitem\"><p>GCC 4.2.1: libstdc++.so.6.0.9 (See Note 3)</p></li><li class=\"listitem\"><p>GCC 4.2.2: libstdc++.so.6.0.9</p></li><li class=\"listitem\"><p>GCC 4.3.0: libstdc++.so.6.0.10</p></li><li class=\"listitem\"><p>GCC 4.4.0: libstdc++.so.6.0.11</p></li><li class=\"listitem\"><p>GCC 4.4.1: libstdc++.so.6.0.12</p></li><li class=\"listitem\"><p>GCC 4.4.2: libstdc++.so.6.0.13</p></li><li class=\"listitem\"><p>GCC 4.5.0: libstdc++.so.6.0.14</p></li><li class=\"listitem\"><p>GCC 4.6.0: libstdc++.so.6.0.15</p></li><li class=\"listitem\"><p>GCC 4.6.1: libstdc++.so.6.0.16</p></li><li class=\"listitem\"><p>GCC 4.7.0: libstdc++.so.6.0.17</p></li><li class=\"listitem\"><p>GCC 4.8.0: libstdc++.so.6.0.18</p></li><li class=\"listitem\"><p>GCC 4.8.3: libstdc++.so.6.0.19</p></li><li class=\"listitem\"><p>GCC 4.9.0: libstdc++.so.6.0.20</p></li><li class=\"listitem\"><p>GCC 5.1.0: libstdc++.so.6.0.21</p></li><li class=\"listitem\"><p>GCC 6.1.0: libstdc++.so.6.0.22</p></li><li class=\"listitem\"><p>GCC 7.1.0: libstdc++.so.6.0.23</p></li><li class=\"listitem\"><p>GCC 7.2.0: libstdc++.so.6.0.24</p></li><li class=\"listitem\"><p>GCC 8.0.0: libstdc++.so.6.0.25</p></li></ul></div><p>\n       Note 1: Error should be libstdc++.so.3.0.3.\n     </p><p>\n       Note 2: Not strictly required.\n@@ -128,7 +128,7 @@\n    GLIBCPP_3.2 for symbols that were introduced in the GCC 3.2.0\n    release.) If a particular release is not listed, it has the same\n    version labels as the preceding release.\n-   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.1: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.2: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.3: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.4: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.1.0: GLIBCPP_3.1, CXXABI_1</p></li><li class=\"listitem\"><p>GCC 3.1.1: GLIBCPP_3.1, CXXABI_1</p></li><li class=\"listitem\"><p>GCC 3.2.0: GLIBCPP_3.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.1: GLIBCPP_3.2.1, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.2: GLIBCPP_3.2.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.3: GLIBCPP_3.2.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.3.0: GLIBCPP_3.2.2, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.1: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.2: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.3: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.4.0: GLIBCXX_3.4, CXXABI_1.3</p></li><li class=\"listitem\"><p>GCC 3.4.1: GLIBCXX_3.4.1, CXXABI_1.3</p></li><li class=\"listitem\"><p>GCC 3.4.2: GLIBCXX_3.4.2</p></li><li class=\"listitem\"><p>GCC 3.4.3: GLIBCXX_3.4.3</p></li><li class=\"listitem\"><p>GCC 4.0.0: GLIBCXX_3.4.4, CXXABI_1.3.1</p></li><li class=\"listitem\"><p>GCC 4.0.1: GLIBCXX_3.4.5</p></li><li class=\"listitem\"><p>GCC 4.0.2: GLIBCXX_3.4.6</p></li><li class=\"listitem\"><p>GCC 4.0.3: GLIBCXX_3.4.7</p></li><li class=\"listitem\"><p>GCC 4.1.1: GLIBCXX_3.4.8</p></li><li class=\"listitem\"><p>GCC 4.2.0: GLIBCXX_3.4.9</p></li><li class=\"listitem\"><p>GCC 4.3.0: GLIBCXX_3.4.10, CXXABI_1.3.2</p></li><li class=\"listitem\"><p>GCC 4.4.0: GLIBCXX_3.4.11, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.4.1: GLIBCXX_3.4.12, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.5.0: GLIBCXX_3.4.14, CXXABI_1.3.4</p></li><li class=\"listitem\"><p>GCC 4.6.0: GLIBCXX_3.4.15, CXXABI_1.3.5</p></li><li class=\"listitem\"><p>GCC 4.6.1: GLIBCXX_3.4.16, CXXABI_1.3.5</p></li><li class=\"listitem\"><p>GCC 4.7.0: GLIBCXX_3.4.17, CXXABI_1.3.6</p></li><li class=\"listitem\"><p>GCC 4.8.0: GLIBCXX_3.4.18, CXXABI_1.3.7</p></li><li class=\"listitem\"><p>GCC 4.8.3: GLIBCXX_3.4.19, CXXABI_1.3.7</p></li><li class=\"listitem\"><p>GCC 4.9.0: GLIBCXX_3.4.20, CXXABI_1.3.8</p></li><li class=\"listitem\"><p>GCC 5.1.0: GLIBCXX_3.4.21, CXXABI_1.3.9</p></li><li class=\"listitem\"><p>GCC 6.1.0: GLIBCXX_3.4.22, CXXABI_1.3.10</p></li><li class=\"listitem\"><p>GCC 7.1.0: GLIBCXX_3.4.23, CXXABI_1.3.11</p></li></ul></div></li><li class=\"listitem\"><p>Incremental bumping of a compiler pre-defined macro,\n+   </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.1: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.2: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.3: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.0.4: (Error, not versioned)</p></li><li class=\"listitem\"><p>GCC 3.1.0: GLIBCPP_3.1, CXXABI_1</p></li><li class=\"listitem\"><p>GCC 3.1.1: GLIBCPP_3.1, CXXABI_1</p></li><li class=\"listitem\"><p>GCC 3.2.0: GLIBCPP_3.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.1: GLIBCPP_3.2.1, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.2: GLIBCPP_3.2.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.2.3: GLIBCPP_3.2.2, CXXABI_1.2</p></li><li class=\"listitem\"><p>GCC 3.3.0: GLIBCPP_3.2.2, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.1: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.2: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.3.3: GLIBCPP_3.2.3, CXXABI_1.2.1</p></li><li class=\"listitem\"><p>GCC 3.4.0: GLIBCXX_3.4, CXXABI_1.3</p></li><li class=\"listitem\"><p>GCC 3.4.1: GLIBCXX_3.4.1, CXXABI_1.3</p></li><li class=\"listitem\"><p>GCC 3.4.2: GLIBCXX_3.4.2</p></li><li class=\"listitem\"><p>GCC 3.4.3: GLIBCXX_3.4.3</p></li><li class=\"listitem\"><p>GCC 4.0.0: GLIBCXX_3.4.4, CXXABI_1.3.1</p></li><li class=\"listitem\"><p>GCC 4.0.1: GLIBCXX_3.4.5</p></li><li class=\"listitem\"><p>GCC 4.0.2: GLIBCXX_3.4.6</p></li><li class=\"listitem\"><p>GCC 4.0.3: GLIBCXX_3.4.7</p></li><li class=\"listitem\"><p>GCC 4.1.1: GLIBCXX_3.4.8</p></li><li class=\"listitem\"><p>GCC 4.2.0: GLIBCXX_3.4.9</p></li><li class=\"listitem\"><p>GCC 4.3.0: GLIBCXX_3.4.10, CXXABI_1.3.2</p></li><li class=\"listitem\"><p>GCC 4.4.0: GLIBCXX_3.4.11, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.4.1: GLIBCXX_3.4.12, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3</p></li><li class=\"listitem\"><p>GCC 4.5.0: GLIBCXX_3.4.14, CXXABI_1.3.4</p></li><li class=\"listitem\"><p>GCC 4.6.0: GLIBCXX_3.4.15, CXXABI_1.3.5</p></li><li class=\"listitem\"><p>GCC 4.6.1: GLIBCXX_3.4.16, CXXABI_1.3.5</p></li><li class=\"listitem\"><p>GCC 4.7.0: GLIBCXX_3.4.17, CXXABI_1.3.6</p></li><li class=\"listitem\"><p>GCC 4.8.0: GLIBCXX_3.4.18, CXXABI_1.3.7</p></li><li class=\"listitem\"><p>GCC 4.8.3: GLIBCXX_3.4.19, CXXABI_1.3.7</p></li><li class=\"listitem\"><p>GCC 4.9.0: GLIBCXX_3.4.20, CXXABI_1.3.8</p></li><li class=\"listitem\"><p>GCC 5.1.0: GLIBCXX_3.4.21, CXXABI_1.3.9</p></li><li class=\"listitem\"><p>GCC 6.1.0: GLIBCXX_3.4.22, CXXABI_1.3.10</p></li><li class=\"listitem\"><p>GCC 7.1.0: GLIBCXX_3.4.23, CXXABI_1.3.11</p></li><li class=\"listitem\"><p>GCC 7.2.0: GLIBCXX_3.4.24, CXXABI_1.3.11</p></li><li class=\"listitem\"><p>GCC 8.0.0: GLIBCXX_3.4.25, CXXABI_1.3.11</p></li></ul></div></li><li class=\"listitem\"><p>Incremental bumping of a compiler pre-defined macro,\n     __GXX_ABI_VERSION. This macro is defined as the version of the\n     compiler v3 ABI, with g++ 3.0 being version 100. This macro will\n     be automatically defined whenever g++ is used (the curious can"}, {"sha": "1cdbf398dce462199c25d2db56f1b256ae15b942", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -504,4 +504,18 @@\n        </em></span>\n     </span></dt><dd><p>Remove special handling for <code class=\"code\">reference_wrapper</code>\n       arguments and store them directly as the target object.\n+    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2802\" target=\"_top\">2802</a>:\n+       <span class=\"emphasis\"><em>Add noexcept to several <code class=\"code\">shared_ptr</code> related\n+         functions\n+       </em></span>\n+    </span></dt><dd><p>Add noexcept.\n+    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2873\" target=\"_top\">2873</a>:\n+       <span class=\"emphasis\"><em><code class=\"code\">shared_ptr</code> constructor requirements for a deleter\n+       </em></span>\n+    </span></dt><dd><p>Use rvalues for deleters.\n+    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2942\" target=\"_top\">2942</a>:\n+       <span class=\"emphasis\"><em>LWG 2873's resolution missed\n+         <code class=\"code\">weak_ptr::owner_before</code>\n+       </em></span>\n+    </span></dt><dd><p>Add noexcept.\n     </p></dd></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"license.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"status.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"setup.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a02.\u00a0Setup</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "0bc72aea6742f086db07443e7fd249646f77b180", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -264,6 +264,10 @@\n       <code class=\"classname\">u32streampos</code> are both synonyms for\n       <code class=\"classname\">fpos&lt;mbstate_t&gt;</code>.\n       The function <code class=\"function\">eof</code> returns <code class=\"code\">int_type(-1)</code>.\n+      <code class=\"function\">char_traits&lt;char16_t&gt;::to_int_type</code> will\n+      transform the \"noncharacter\" U+FFFF to U+FFFD (REPLACEMENT CHARACTER).\n+      This is done to ensure that <code class=\"function\">to_int_type</code> never\n+      returns the same value as <code class=\"function\">eof</code>, which is U+FFFF.\n    </p><p>\n       <span class=\"emphasis\"><em>22.3.1 [locale]</em></span>\n       There is one global locale for the whole program, not per-thread.\n@@ -684,11 +688,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0505r0.html\" target=\"_top\">\n \tP0505R0\n \t</a>\n-      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> ??? </code></td></tr><tr bgcolor=\"#B0B0B0\"><td align=\"left\"> Constexpr for <code class=\"code\">std::char_traits</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> ??? </code></td></tr><tr><td align=\"left\"> Constexpr for <code class=\"code\">std::char_traits</code> </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0426r1.html\" target=\"_top\">\n \tP0426R1\n \t</a>\n-      </td><td align=\"center\"> 7 (partial) </td><td align=\"left\"><code class=\"code\"> ??? </code></td></tr><tr><td align=\"left\"> Integrating <code class=\"code\">std::string_view</code> and <code class=\"code\">std::string</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 8 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_constexpr_char_traits &gt;= 201611 </code></td></tr><tr><td align=\"left\"> Integrating <code class=\"code\">std::string_view</code> and <code class=\"code\">std::string</code> </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0254r2.pdf\" target=\"_top\">\n \tP0254R2\n \t</a>"}, {"sha": "58950c990ea0bfbfe4570466bf3f575387afa7e0", "filename": "libstdc++-v3/doc/xml/manual/abi.xml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -266,7 +266,8 @@ compatible.\n     <listitem><para>GCC 5.1.0: libstdc++.so.6.0.21</para></listitem>\n     <listitem><para>GCC 6.1.0: libstdc++.so.6.0.22</para></listitem>\n     <listitem><para>GCC 7.1.0: libstdc++.so.6.0.23</para></listitem>\n-    <listitem><para>GCC 8.0.0: libstdc++.so.6.0.24</para></listitem>\n+    <listitem><para>GCC 7.2.0: libstdc++.so.6.0.24</para></listitem>\n+    <listitem><para>GCC 8.0.0: libstdc++.so.6.0.25</para></listitem>\n     </itemizedlist>\n     <para>\n       Note 1: Error should be libstdc++.so.3.0.3.\n@@ -335,7 +336,8 @@ compatible.\n     <listitem><para>GCC 5.1.0: GLIBCXX_3.4.21, CXXABI_1.3.9</para></listitem>\n     <listitem><para>GCC 6.1.0: GLIBCXX_3.4.22, CXXABI_1.3.10</para></listitem>\n     <listitem><para>GCC 7.1.0: GLIBCXX_3.4.23, CXXABI_1.3.11</para></listitem>\n-    <listitem><para>GCC 8.0.0: GLIBCXX_3.4.24, CXXABI_1.3.11</para></listitem>\n+    <listitem><para>GCC 7.2.0: GLIBCXX_3.4.24, CXXABI_1.3.11</para></listitem>\n+    <listitem><para>GCC 8.0.0: GLIBCXX_3.4.25, CXXABI_1.3.11</para></listitem>\n     </itemizedlist>\n     </listitem>\n "}, {"sha": "aceec5cea15358fe65ba9c7e008c305b3daeabba", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/8.cc", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -15,16 +15,31 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// { dg-options \"-O0\" }\n // { dg-do run { target c++11 } }\n \n #include <string>\n #include <testsuite_hooks.h>\n \n+struct TestBaseObjCtor : std::string\n+{\n+  template<typename... Args>\n+    TestBaseObjCtor(Args&&... args)\n+    : std::string(std::forward<Args>(args)...)\n+    { }\n+};\n+\n template<typename... Args>\n std::size_t\n construct(Args&&... args)\n {\n-  return std::string( std::forward<Args>(args)... ).length();\n+  // Use static_cast<Args> to produce either an lvalue or prvalue,\n+  // so args... not left in moved-from state and can be reused below:\n+  TestBaseObjCtor as_base_obj( static_cast<Args>(args)... );\n+\n+  std::string as_complete_obj( std::forward<Args>(args)... );\n+\n+  return as_complete_obj.length();\n }\n \n void"}, {"sha": "734573768d76e9c1dbf00889f6ca02720b33432f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/8.cc", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -15,16 +15,31 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// { dg-options \"-O0\" }\n // { dg-do run { target c++11 } }\n \n #include <string>\n #include <testsuite_hooks.h>\n \n+struct TestBaseObjCtor : std::wstring\n+{\n+  template<typename... Args>\n+    TestBaseObjCtor(Args&&... args)\n+    : std::wstring(std::forward<Args>(args)...)\n+    { }\n+};\n+\n template<typename... Args>\n std::size_t\n construct(Args&&... args)\n {\n-  return std::wstring( std::forward<Args>(args)... ).length();\n+  // Use static_cast<Args> to produce either an lvalue or prvalue,\n+  // so args... not left in moved-from state and can be reused below:\n+  TestBaseObjCtor as_base_obj( static_cast<Args>(args)... );\n+\n+  std::wstring as_complete_obj( std::forward<Args>(args)... );\n+\n+  return as_complete_obj.length();\n }\n \n void"}, {"sha": "4d7f4ca3a65ba9eed53e5b4ba4124389cb891eef", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317778a9b6213a97a3de5ffd77edf516592fb71/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=4317778a9b6213a97a3de5ffd77edf516592fb71", "patch": "@@ -205,6 +205,7 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"GLIBCXX_3.4.22\");\n       known_versions.push_back(\"GLIBCXX_3.4.23\");\n       known_versions.push_back(\"GLIBCXX_3.4.24\");\n+      known_versions.push_back(\"GLIBCXX_3.4.25\");\n       known_versions.push_back(\"CXXABI_1.3\");\n       known_versions.push_back(\"CXXABI_LDBL_1.3\");\n       known_versions.push_back(\"CXXABI_1.3.1\");\n@@ -235,7 +236,7 @@ check_version(symbol& test, bool added)\n \ttest.version_status = symbol::incompatible;\n \n       // Check that added symbols are added in the latest pre-release version.\n-      bool latestp = (test.version_name == \"GLIBCXX_3.4.24\"\n+      bool latestp = (test.version_name == \"GLIBCXX_3.4.25\"\n \t\t     || test.version_name == \"CXXABI_1.3.11\"\n \t\t     || test.version_name == \"CXXABI_FLOAT128\"\n \t\t     || test.version_name == \"CXXABI_TM_1\");"}]}