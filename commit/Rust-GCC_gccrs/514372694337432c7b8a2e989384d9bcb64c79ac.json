{"sha": "514372694337432c7b8a2e989384d9bcb64c79ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE0MzcyNjk0MzM3NDMyYzdiOGEyZTk4OTM4NGQ5YmNiNjRjNzlhYw==", "commit": {"author": {"name": "Guozhi Wei", "email": "carrot@google.com", "date": "2014-09-04T16:06:13Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2014-09-04T16:06:13Z"}, "message": "re PR target/62040 (internal compiler error: in simplify_const_unary_operation, at simplify-rtx.c:1555)\n\n\tPR target/62040\n\t* config/aarch64/iterators.md (VQ_NO2E, VQ_2E): New iterators.\n\t* config/aarch64/aarch64-simd.md (move_lo_quad_internal_<mode>): Split\n\tit into two patterns.\n\t(move_lo_quad_internal_be_<mode>): Likewise.\n\t\n\t* gcc.target/aarch64/pr62040.c: New test.\n\nFrom-SVN: r214905", "tree": {"sha": "5218e8918bbd4347bd5f113d18acbb1ebc690f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5218e8918bbd4347bd5f113d18acbb1ebc690f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/514372694337432c7b8a2e989384d9bcb64c79ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/514372694337432c7b8a2e989384d9bcb64c79ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/514372694337432c7b8a2e989384d9bcb64c79ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/514372694337432c7b8a2e989384d9bcb64c79ac/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b71f4a4f8515c5d0919fc5c220f427e7c837e7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b71f4a4f8515c5d0919fc5c220f427e7c837e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b71f4a4f8515c5d0919fc5c220f427e7c837e7f"}], "stats": {"total": 80, "additions": 76, "deletions": 4}, "files": [{"sha": "48fcf9c443f962c2b2214e690780181bd00f9e5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=514372694337432c7b8a2e989384d9bcb64c79ac", "patch": "@@ -1,3 +1,11 @@\n+2014-09-04  Guozhi Wei  <carrot@google.com>\n+\n+\tPR target/62040\n+\t* config/aarch64/iterators.md (VQ_NO2E, VQ_2E): New iterators.\n+\t* config/aarch64/aarch64-simd.md (move_lo_quad_internal_<mode>): Split\n+\tit into two patterns.\n+\t(move_lo_quad_internal_be_<mode>): Likewise.\n+\n 2014-09-04  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* doc/options.texi: Document that Var and Init are required if CPP"}, {"sha": "c4896364f4802ef4a0dd5038980fbf73b94b1c26", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=514372694337432c7b8a2e989384d9bcb64c79ac", "patch": "@@ -953,8 +953,8 @@\n ;; On big-endian this is { zeroes, operand }\n \n (define_insn \"move_lo_quad_internal_<mode>\"\n-  [(set (match_operand:VQ 0 \"register_operand\" \"=w,w,w\")\n-        (vec_concat:VQ\n+  [(set (match_operand:VQ_NO2E 0 \"register_operand\" \"=w,w,w\")\n+\t(vec_concat:VQ_NO2E\n \t  (match_operand:<VHALF> 1 \"register_operand\" \"w,r,r\")\n \t  (vec_duplicate:<VHALF> (const_int 0))))]\n   \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n@@ -968,9 +968,25 @@\n    (set_attr \"length\" \"4\")]\n )\n \n+(define_insn \"move_lo_quad_internal_<mode>\"\n+  [(set (match_operand:VQ_2E 0 \"register_operand\" \"=w,w,w\")\n+\t(vec_concat:VQ_2E\n+\t  (match_operand:<VHALF> 1 \"register_operand\" \"w,r,r\")\n+\t  (const_int 0)))]\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   dup\\\\t%d0, %1.d[0]\n+   fmov\\\\t%d0, %1\n+   dup\\\\t%d0, %1\"\n+  [(set_attr \"type\" \"neon_dup<q>,f_mcr,neon_dup<q>\")\n+   (set_attr \"simd\" \"yes,*,yes\")\n+   (set_attr \"fp\" \"*,yes,*\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n (define_insn \"move_lo_quad_internal_be_<mode>\"\n-  [(set (match_operand:VQ 0 \"register_operand\" \"=w,w,w\")\n-        (vec_concat:VQ\n+  [(set (match_operand:VQ_NO2E 0 \"register_operand\" \"=w,w,w\")\n+\t(vec_concat:VQ_NO2E\n \t  (vec_duplicate:<VHALF> (const_int 0))\n \t  (match_operand:<VHALF> 1 \"register_operand\" \"w,r,r\")))]\n   \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n@@ -984,6 +1000,22 @@\n    (set_attr \"length\" \"4\")]\n )\n \n+(define_insn \"move_lo_quad_internal_be_<mode>\"\n+  [(set (match_operand:VQ_2E 0 \"register_operand\" \"=w,w,w\")\n+\t(vec_concat:VQ_2E\n+\t  (const_int 0)\n+\t  (match_operand:<VHALF> 1 \"register_operand\" \"w,r,r\")))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n+  \"@\n+   dup\\\\t%d0, %1.d[0]\n+   fmov\\\\t%d0, %1\n+   dup\\\\t%d0, %1\"\n+  [(set_attr \"type\" \"neon_dup<q>,f_mcr,neon_dup<q>\")\n+   (set_attr \"simd\" \"yes,*,yes\")\n+   (set_attr \"fp\" \"*,yes,*\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n (define_expand \"move_lo_quad_<mode>\"\n   [(match_operand:VQ 0 \"register_operand\")\n    (match_operand:VQ 1 \"register_operand\")]"}, {"sha": "a00283a04b3c916422ea65c5260e39db63d1a4b3", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=514372694337432c7b8a2e989384d9bcb64c79ac", "patch": "@@ -66,6 +66,12 @@\n ;; Quad vector modes.\n (define_mode_iterator VQ [V16QI V8HI V4SI V2DI V4SF V2DF])\n \n+;; VQ without 2 element modes.\n+(define_mode_iterator VQ_NO2E [V16QI V8HI V4SI V4SF])\n+\n+;; Quad vector with only 2 element modes.\n+(define_mode_iterator VQ_2E [V2DI V2DF])\n+\n ;; All vector modes, except double.\n (define_mode_iterator VQ_S [V8QI V16QI V4HI V8HI V2SI V4SI])\n "}, {"sha": "fb57d87d4a1e0ed39c13d2e38b95fb2a1a63132d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=514372694337432c7b8a2e989384d9bcb64c79ac", "patch": "@@ -1,3 +1,8 @@\n+2014-09-04  Guozhi Wei  <carrot@google.com>\n+\n+\tPR target/62040\n+\t* gcc.target/aarch64/pr62040.c: New test.\n+\n 2014-09-04  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* gcc.dg/cpp/endif-pedantic2.c: More general options do not"}, {"sha": "cfb4979f8856d1d370c37d20537a7bfe0e816c07", "filename": "gcc/testsuite/gcc.target/aarch64/pr62040.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62040.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514372694337432c7b8a2e989384d9bcb64c79ac/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62040.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62040.c?ref=514372694337432c7b8a2e989384d9bcb64c79ac", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -Os\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void bar (int32x4_t);\n+\n+void\n+foo ()\n+{\n+  int32x4x4_t rows;\n+  uint64x2x2_t row01;\n+\n+  row01.val[0] = vreinterpretq_u64_s32 (rows.val[0]);\n+  row01.val[1] = vreinterpretq_u64_s32 (rows.val[1]);\n+  uint64x1_t row3l = vget_low_u64 (row01.val[0]);\n+  row01.val[0] = vcombine_u64 (vget_low_u64 (row01.val[1]), row3l);\n+  int32x4_t xxx = vreinterpretq_s32_u64 (row01.val[0]);\n+  int32x4_t out = vtrn1q_s32 (xxx, xxx);\n+  bar (out);\n+}"}]}