{"sha": "9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFlMmE1ZDExM2I4M2NlN2U2MWE1MGY1NDg0ZTYyMjFkODFhMmM1Yw==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-07-27T15:32:47Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-07-27T15:32:47Z"}, "message": "tree-ssa-alias.c (create_name_tags): Ignore pointers that don't have PT_VARS nor PT_MALLOC set.\n\n\n\t* tree-ssa-alias.c (create_name_tags): Ignore pointers that\n\tdon't have PT_VARS nor PT_MALLOC set.\n\tClear name tag from pointers that have not been dereferenced.\n\t(set_pt_anything, set_pt_malloc): Forward declare.\n\t* tree-ssa-copy.c (may_propagate_copy): Compare alias sets,\n\tnot type compatibility when determining if a pointer can be\n\tcopy propagated.\n\ntestsuite/ChangeLog\n\n\t* gcc.c-torture/compile/20040727-1.c: New test.\n\nFrom-SVN: r85220", "tree": {"sha": "2b9d2fb0b1c90b07e3cc9d57a576a487ffca1759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b9d2fb0b1c90b07e3cc9d57a576a487ffca1759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/comments", "author": null, "committer": null, "parents": [{"sha": "45d09c02e544c4074aa4a69925c1fe547a0dd7a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d09c02e544c4074aa4a69925c1fe547a0dd7a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d09c02e544c4074aa4a69925c1fe547a0dd7a0"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "5c877bf0db769ad54d2405e64cd980d93619b64c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "patch": "@@ -1,3 +1,13 @@\n+2004-07-27  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-ssa-alias.c (create_name_tags): Ignore pointers that\n+\tdon't have PT_VARS nor PT_MALLOC set.\n+\tClear name tag from pointers that have not been dereferenced.\n+\t(set_pt_anything, set_pt_malloc): Forward declare.\n+\t* tree-ssa-copy.c (may_propagate_copy): Compare alias sets,\n+\tnot type compatibility when determining if a pointer can be\n+\tcopy propagated.\n+\n 2004-07-27  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* expr.h (canonicalize_condition, get_condition): Add an int argument."}, {"sha": "bf23710359668442c7175a06280297d88b76eedc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "patch": "@@ -1,3 +1,7 @@\n+2004-07-27  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* gcc.c-torture/compile/20040727-1.c: New test.\n+\n 2004-07-26  Eric Christopher  <echristo@redhat.com>\n \n \t* gcc.c-torture/compile/20040726-2.c: New test."}, {"sha": "a46abec1e314f03215cdc51d70de224f6a69ac32", "filename": "gcc/testsuite/gcc.c-torture/compile/20040727-1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040727-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040727-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040727-1.c?ref=9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "patch": "@@ -0,0 +1,32 @@\n+/* Extracted from boehm-gc/os_dep.c on Darwin.  It caused an ICE when\n+   trying to merge alias information from two pointers that had\n+   different type memory tags.  */\n+typedef int thread_state_flavor_t;\n+typedef int exception_behavior_t;\n+typedef unsigned int exception_mask_t;\n+typedef unsigned int exception_handler_t;\n+typedef unsigned int mach_msg_type_number_t;\n+static struct {\n+   mach_msg_type_number_t count;\n+   exception_mask_t masks[16];\n+   exception_handler_t ports[16];\n+   thread_state_flavor_t flavors[16];\n+} GC_old_exc_ports;\n+\n+typedef exception_handler_t *exception_handler_array_t;\n+typedef thread_state_flavor_t *exception_flavor_array_t;\n+\n+\n+int task_get_exception_ports\n+(\n+  mach_msg_type_number_t *masksCnt,\n+  exception_handler_array_t old_handlers,\n+  exception_flavor_array_t old_flavors\n+);\n+\n+void GC_dirty_init()\n+{\n+   task_get_exception_ports(GC_old_exc_ports.masks,\n+                           GC_old_exc_ports.ports,\n+                           GC_old_exc_ports.flavors);\n+}"}, {"sha": "033a7073a8a3697204840ea02412fa879a9667c6", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "patch": "@@ -157,6 +157,8 @@ static bool ptr_is_dereferenced_by (tree, tree, bool *);\n static void maybe_create_global_var (struct alias_info *ai);\n static void group_aliases (struct alias_info *);\n static struct ptr_info_def *get_ptr_info (tree t);\n+static void set_pt_anything (tree ptr);\n+static void set_pt_malloc (tree ptr);\n \n /* Global declarations.  */\n \n@@ -773,7 +775,12 @@ create_name_tags (struct alias_info *ai)\n       struct ptr_info_def *pi = SSA_NAME_PTR_INFO (ptr);\n \n       if (!pi->is_dereferenced)\n-\tcontinue;\n+\t{\n+\t  /* No name tags for pointers that have not been\n+\t     dereferenced.  */\n+\t  pi->name_mem_tag = NULL_TREE;\n+\t  continue;\n+\t}\n \n       if (pi->pt_vars)\n \t{\n@@ -828,7 +835,8 @@ create_name_tags (struct alias_info *ai)\n \t  /* Only pointers that may point to malloc or other variables\n \t     may receive a name tag.  If the pointer does not point to\n \t     a known spot, we should use type tags.  */\n-\t  abort ();\n+\t  set_pt_anything (ptr);\n+\t  continue;\n \t}\n \n       /* Mark the new name tag for renaming.  */"}, {"sha": "4dca3a5e28886c5e92c691ab37067a98e2561d57", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "patch": "@@ -112,6 +112,9 @@ may_propagate_copy (tree dest, tree orig)\n \treturn false;\n       else if (!lang_hooks.types_compatible_p (type_d, type_o))\n \treturn false;\n+      else if (!alias_sets_conflict_p (get_alias_set (type_d),\n+\t\t\t\t       get_alias_set (type_o)))\n+\treturn false;\n     }\n \n   /* If the destination is a SSA_NAME for a virtual operand, then we have"}]}