{"sha": "5951f637bc7086189b9702766068fb5f319039ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk1MWY2MzdiYzcwODYxODliOTcwMjc2NjA2OGZiNWYzMTkwMzlhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-20T04:07:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-20T04:07:26Z"}, "message": "decl.c (make_implicit_typename): Handle case where t is not actually from context.\n\n\t* decl.c (make_implicit_typename): Handle case where t is not\n \tactually from context.\n\t* tree.c (get_type_decl): Lose identifier case.\n\t* spew.c (yylex): Lose useless call to identifer_typedecl_value.\n\t* parse.y (nonnested_type): Just use lookup_name.\n\t(complex_type_name): Just use IDENTIFIER_GLOBAL_VALUE.\n\nWed Nov 19 11:45:07 1997  Michael Tiemann  <tiemann@axon.cygnus.com>\n\n\t* error.c (dump_function_name): Test DECL_LANG_SPECIFIC in case\n\tT was built in C language context (for example, by\n\toutput_func_start_profiler).\n\nFrom-SVN: r16589", "tree": {"sha": "f846a25b504a862832295d71b6c8c651654f78f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f846a25b504a862832295d71b6c8c651654f78f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5951f637bc7086189b9702766068fb5f319039ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5951f637bc7086189b9702766068fb5f319039ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5951f637bc7086189b9702766068fb5f319039ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5951f637bc7086189b9702766068fb5f319039ad/comments", "author": null, "committer": null, "parents": [{"sha": "77643ab81452d6d7c52b5e28e201bb93ce88d155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77643ab81452d6d7c52b5e28e201bb93ce88d155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77643ab81452d6d7c52b5e28e201bb93ce88d155"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "f10aea4a7b487ed61493703b416d2b3591e81af3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -1,3 +1,18 @@\n+Wed Nov 19 18:24:14 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (make_implicit_typename): Handle case where t is not\n+ \tactually from context.\n+\t* tree.c (get_type_decl): Lose identifier case.\n+\t* spew.c (yylex): Lose useless call to identifer_typedecl_value.\n+\t* parse.y (nonnested_type): Just use lookup_name.\n+\t(complex_type_name): Just use IDENTIFIER_GLOBAL_VALUE.\n+\n+Wed Nov 19 11:45:07 1997  Michael Tiemann  <tiemann@axon.cygnus.com>\n+\n+\t* error.c (dump_function_name): Test DECL_LANG_SPECIFIC in case\n+\tT was built in C language context (for example, by\n+\toutput_func_start_profiler).\n+\n Wed Nov 19 10:39:27 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (make_implicit_typename): New fn."}, {"sha": "3aa8201200afaaa5a26a2a55a38db90a3f5113ac", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -4389,15 +4389,19 @@ make_implicit_typename (context, t)\n       && DECL_CONTEXT (t) != context)\n     {\n       tree binfo = get_binfo (DECL_CONTEXT (t), context, 0);\n-      for (;;)\n+      while (binfo)\n \t{\n \t  tree next = BINFO_INHERITANCE_CHAIN (binfo);\n \t  if (! uses_template_parms (BINFO_TYPE (next))\n \t      || BINFO_TYPE (next) == context)\n \t    break;\n \t  binfo = next;\n \t}\n-      retval = make_typename_type (BINFO_TYPE (binfo), DECL_NAME (t));\n+      if (binfo)\n+\tretval = make_typename_type (BINFO_TYPE (binfo), DECL_NAME (t));\n+      else\n+\t/* FIXME: find the enclosing class whose base t comes from.  */\n+\tretval = make_typename_type (DECL_CONTEXT (t), DECL_NAME (t));\n     }\n   else\n     retval = make_typename_type (context, DECL_NAME (t));"}, {"sha": "50421267ba05a2e7668772fd448813d5551f41ad", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -925,7 +925,8 @@ dump_function_name (t)\n   else\n     dump_decl (name, 0);\n \n-  if ((DECL_TEMPLATE_SPECIALIZATION (t) || DECL_IMPLICIT_INSTANTIATION (t))\n+  if (DECL_LANG_SPECIFIC (t)\n+      && (DECL_TEMPLATE_SPECIALIZATION (t) || DECL_IMPLICIT_INSTANTIATION (t))\n       && (DECL_CLASS_CONTEXT (t) == NULL_TREE || is_member_template (t)))\n     {\n       tree args = DECL_TEMPLATE_INFO (t) "}, {"sha": "18d4aa74a9f1a4bae61f500998e2d24ecf0c68dc", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -3017,26 +3017,23 @@ nonnested_type:\n \t\t{\n \t\t  if (TREE_CODE ($1) == IDENTIFIER_NODE)\n \t\t    {\n+\t\t      $$ = lookup_name ($1, 1);\n \t\t      if (current_class_type\n \t\t\t  && TYPE_BEING_DEFINED (current_class_type)\n \t\t\t  && ! IDENTIFIER_CLASS_VALUE ($1))\n \t\t\t{\n-\t\t\t  /* Be sure to get an inherited typedef.  */\n-\t\t\t  $$ = lookup_name ($1, 1);\n \t\t\t  /* Remember that this name has been used in the class\n \t\t\t     definition, as per [class.scope0] */\n \t\t\t  pushdecl_class_level ($$);\n \t\t\t}\n-\t\t      else\n-\t\t\t$$ = identifier_typedecl_value ($1);\n \t\t    }\n \t\t  else\n \t\t    $$ = $1;\n \t\t}\n \t| global_scope type_name\n \t\t{\n \t\t  if (TREE_CODE ($2) == IDENTIFIER_NODE)\n-\t\t    $$ = identifier_typedecl_value ($2);\n+\t\t    $$ = IDENTIFIER_GLOBAL_VALUE ($2);\n \t\t  else\n \t\t    $$ = $2;\n \t\t  got_scope = NULL_TREE;\n@@ -3285,7 +3282,7 @@ complex_type_name:\n \t  global_scope type_name\n \t\t{\n \t\t  if (TREE_CODE ($2) == IDENTIFIER_NODE)\n-\t\t    $$ = identifier_typedecl_value ($2);\n+\t\t    $$ = IDENTIFIER_GLOBAL_VALUE ($2);\n \t\t  else\n \t\t    $$ = $2;\n \t\t  got_scope = NULL_TREE;"}, {"sha": "a6fe404bbe012b13ad6eaedae01e6e47f3ba4e4a", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -312,9 +312,7 @@ yylex ()\n \t    {\n \t    case TYPENAME:\n \t    case SELFNAME:\n-\t      lastiddecl = identifier_typedecl_value (tmp_token.yylval.ttype);\n-\t      if (lastiddecl != trrr)\n-\t\tlastiddecl = trrr;\n+\t      lastiddecl = trrr;\n \t      if (got_scope)\n \t\ttmp_token.yylval.ttype = trrr;\n \t      break;"}, {"sha": "98b1a6d3b770e146a6eb742bccddaa6dcad9b4e7", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5951f637bc7086189b9702766068fb5f319039ad/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5951f637bc7086189b9702766068fb5f319039ad", "patch": "@@ -1866,8 +1866,6 @@ tree\n get_type_decl (t)\n      tree t;\n {\n-  if (TREE_CODE (t) == IDENTIFIER_NODE)\n-    return identifier_typedecl_value (t);\n   if (TREE_CODE (t) == TYPE_DECL)\n     return t;\n   if (TREE_CODE_CLASS (TREE_CODE (t)) == 't')"}]}