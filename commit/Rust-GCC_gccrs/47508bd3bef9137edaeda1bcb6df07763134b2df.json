{"sha": "47508bd3bef9137edaeda1bcb6df07763134b2df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1MDhiZDNiZWY5MTM3ZWRhZWRhMWJjYjZkZjA3NzYzMTM0YjJkZg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-04-20T01:44:58Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-04-20T01:44:58Z"}, "message": "Testcase to verify that FP regs are properly saved/restored across unwind.\n\nPR target/20670\n* g++.dg/eh/fp-regs.C: New test.\n\nFrom-SVN: r98432", "tree": {"sha": "1acc36bfd9e1d892818e290dd738c54d14fcbec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1acc36bfd9e1d892818e290dd738c54d14fcbec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47508bd3bef9137edaeda1bcb6df07763134b2df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47508bd3bef9137edaeda1bcb6df07763134b2df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47508bd3bef9137edaeda1bcb6df07763134b2df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47508bd3bef9137edaeda1bcb6df07763134b2df/comments", "author": null, "committer": null, "parents": [{"sha": "6c08eb63c58c512aee3df5db5ffb98955ca54a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c08eb63c58c512aee3df5db5ffb98955ca54a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c08eb63c58c512aee3df5db5ffb98955ca54a18"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "b281f7d3f9ea9f486bb91f125235fd57a82c2410", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47508bd3bef9137edaeda1bcb6df07763134b2df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47508bd3bef9137edaeda1bcb6df07763134b2df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47508bd3bef9137edaeda1bcb6df07763134b2df", "patch": "@@ -1,3 +1,8 @@\n+2005-04-19  James E. Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/20670\n+\t* g++.dg/eh/fp-regs.C: New test.\n+\n 2005-04-20  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/Wint-to-pointer-cast-1.c,"}, {"sha": "b91c0f9a567e446c42f58a1cd25ec68394df1998", "filename": "gcc/testsuite/g++.dg/eh/fp-regs.C", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47508bd3bef9137edaeda1bcb6df07763134b2df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ffp-regs.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47508bd3bef9137edaeda1bcb6df07763134b2df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ffp-regs.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ffp-regs.C?ref=47508bd3bef9137edaeda1bcb6df07763134b2df", "patch": "@@ -0,0 +1,94 @@\n+// PR 20670: f29 corrupted when unwind stack.  This tries to test that FP\n+// registers are properly saved and restored by defining 20 different FP\n+// local variables.\n+// { dg-do run }\n+// { dg-options \"-O\" }\n+#include <stdlib.h>\n+ \n+double zero = 0.0;\n+double another_zero = 0.0;\n+ \n+int\n+sub (void)\n+{\n+  throw (0);\n+}\n+ \n+int\n+main (void)\n+{\n+  double a, b, c, d, e, f, g, h, i, j;\n+  double a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n+ \n+  a = zero;\n+  b = a + 1;\n+  c = b + 1;\n+  d = c + 1;\n+  e = d + 1;\n+  f = e + 1;\n+  g = f + 1;\n+  h = g + 1;\n+  i = h + 1;\n+  j = i + 1;\n+   \n+  a1 = another_zero;\n+  b1 = a1 + 1;\n+  c1 = b1 + 1;\n+  d1 = c1 + 1;\n+  e1 = d1 + 1;\n+  f1 = e1 + 1;\n+  g1 = f1 + 1;\n+  h1 = g1 + 1;\n+  i1 = h1 + 1;\n+  j1 = i1 + 1;\n+   \n+  try\n+    {\n+      sub ();\n+    }\n+  catch (...)\n+    {\n+      if (a != 0.0)\n+        abort ();\n+      if (b != 1.0)\n+        abort ();\n+      if (c != 2.0)\n+        abort ();\n+      if (d != 3.0)\n+        abort ();\n+      if (e != 4.0)\n+        abort ();\n+      if (f != 5.0)\n+        abort ();\n+      if (g != 6.0)\n+        abort ();\n+      if (h != 7.0)\n+        abort ();\n+      if (i != 8.0)\n+        abort ();\n+      if (j != 9.0)\n+        abort ();\n+ \n+      if (a1 != 0.0)\n+        abort ();\n+      if (b1 != 1.0)\n+        abort ();\n+      if (c1 != 2.0)\n+        abort ();\n+      if (d1 != 3.0)\n+        abort ();\n+      if (e1 != 4.0)\n+        abort ();\n+      if (f1 != 5.0)\n+        abort ();\n+      if (g1 != 6.0)\n+        abort ();\n+      if (h1 != 7.0)\n+        abort ();\n+      if (i1 != 8.0)\n+        abort ();\n+      if (j1 != 9.0)\n+        abort ();\n+    }\n+  return 0;\n+}"}]}