{"sha": "56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3NzJmNjIzZTIyNzBmMGM2YmZhZjY0ZTBiYjQxZDRiNjA4NWRjNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-22T21:54:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-22T21:54:34Z"}, "message": "libstdc++: Add missing feature test macros\n\nThese macros all correspond to features that are already supported, but\nthe macro was not defined when the feature was implemented.\n\n\t* include/bits/ptr_traits.h (__cpp_lib_constexpr_memory): Define to\n\tindicate P1006R1 support.\n\t(__cpp_lib_to_address): Define to indicate P0653R2 support.\n\t* include/bits/range_access.h (__cpp_lib_ssize): Define to indicate\n\tP1227R2 support.\n\t* include/bits/ranges_algo.h (__cpp_lib_shift): Define to indicate\n\tP0769R2 support.\n\t* include/std/atomic (__cpp_lib_atomic_float): Define to indicate\n\tP0020R6 support.\n\t* include/std/memory (__cpp_lib_assume_aligned): Define to indicate\n\tP1007R3 support.\n\t* include/std/memory_resource (__cpp_lib_polymorphic_allocator):\n\tDefine to indicate P0339R6 support.\n\t* include/std/string_view (__cpp_lib_starts_ends_with): Define to\n\tindicate P0457R2 support.\n\t* include/std/type_traits (__cpp_lib_is_nothrow_convertible): Define\n\tto indicate P0758R1 support.\n\t(__cpp_lib_remove_cvref): Define to indicate P0550R2 support.\n\t(__cpp_lib_type_identity): Define to indicate P0887R1 support.\n\t* include/std/version (__cpp_lib_atomic_float)\n\t(__cpp_lib_is_nothrow_convertible, __cpp_lib_remove_cvref)\n\t(__cpp_lib_type_identity, __cpp_lib_assume_aligned)\n\t(__cpp_lib_constexpr_memory, __cpp_lib_polymorphic_allocator)\n\t(__cpp_lib_shift, __cpp_lib_ssize, __cpp_lib_starts_ends_with)\n\t(__cpp_lib_to_address): Define.\n\t* testsuite/20_util/to_address/1_neg.cc: Adjust dg-error line number.", "tree": {"sha": "2d90147dce28c246219cebd06d0df4d390a71b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d90147dce28c246219cebd06d0df4d390a71b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d2dbae406c0c524436d9f818f4e06b3ff7eb964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2dbae406c0c524436d9f818f4e06b3ff7eb964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d2dbae406c0c524436d9f818f4e06b3ff7eb964"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "182f5dc4b7eab25d7a7ba6769687a7bcf7442632", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -1,5 +1,32 @@\n 2020-04-22  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/ptr_traits.h (__cpp_lib_constexpr_memory): Define to\n+\tindicate P1006R1 support.\n+\t(__cpp_lib_to_address): Define to indicate P0653R2 support.\n+\t* include/bits/range_access.h (__cpp_lib_ssize): Define to indicate\n+\tP1227R2 support.\n+\t* include/bits/ranges_algo.h (__cpp_lib_shift): Define to indicate\n+\tP0769R2 support.\n+\t* include/std/atomic (__cpp_lib_atomic_float): Define to indicate\n+\tP0020R6 support.\n+\t* include/std/memory (__cpp_lib_assume_aligned): Define to indicate\n+\tP1007R3 support.\n+\t* include/std/memory_resource (__cpp_lib_polymorphic_allocator):\n+\tDefine to indicate P0339R6 support.\n+\t* include/std/string_view (__cpp_lib_starts_ends_with): Define to\n+\tindicate P0457R2 support.\n+\t* include/std/type_traits (__cpp_lib_is_nothrow_convertible): Define\n+\tto indicate P0758R1 support.\n+\t(__cpp_lib_remove_cvref): Define to indicate P0550R2 support.\n+\t(__cpp_lib_type_identity): Define to indicate P0887R1 support.\n+\t* include/std/version (__cpp_lib_atomic_float)\n+\t(__cpp_lib_is_nothrow_convertible, __cpp_lib_remove_cvref)\n+\t(__cpp_lib_type_identity, __cpp_lib_assume_aligned)\n+\t(__cpp_lib_constexpr_memory, __cpp_lib_polymorphic_allocator)\n+\t(__cpp_lib_shift, __cpp_lib_ssize, __cpp_lib_starts_ends_with)\n+\t(__cpp_lib_to_address): Define.\n+\t* testsuite/20_util/to_address/1_neg.cc: Adjust dg-error line number.\n+\n \t* include/bits/stl_map.h (__cpp_lib_map_insertion): Remove old\n \tmacro.\n \t* include/bits/unordered_map.h (__cpp_lib_unordered_map_insertion):"}, {"sha": "541abab29e121af61b3d93328c475ad62e5280cf", "filename": "libstdc++-v3/include/bits/ptr_traits.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -35,6 +35,7 @@\n #include <bits/move.h>\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_constexpr_memory 201811L\n namespace __gnu_debug { struct _Safe_iterator_base; }\n #endif\n \n@@ -180,6 +181,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn std::__to_address(__ptr.operator->());\n     }\n \n+#define __cpp_lib_to_address 201711L\n+\n   /**\n    * @brief Obtain address referenced by a pointer to an object\n    * @param __ptr A pointer to an object"}, {"sha": "82d9e2180c5265f8a07d3148cd3f16d4d787ca92", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -322,6 +322,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif // C++17\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_ssize 201902L\n   template<typename _Container>\n     constexpr auto\n     ssize(const _Container& __cont)"}, {"sha": "aa07cb97ea69dc9398d9785e8ed158de759df96d", "filename": "libstdc++-v3/include/bits/ranges_algo.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -3691,6 +3691,7 @@ namespace ranges\n \n } // namespace ranges\n \n+#define __cpp_lib_shift 201806L\n   template<class ForwardIterator>\n     constexpr ForwardIterator\n     shift_left(ForwardIterator __first, ForwardIterator __last,"}, {"sha": "a455286a78417332629eb31a46da0a513cc22e27", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -1477,6 +1477,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return atomic_fetch_xor_explicit(__a, __i, memory_order_seq_cst); }\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_atomic_float 201711L\n   template<>\n     struct atomic<float> : __atomic_float<float>\n     {"}, {"sha": "1e8eebd731ca81fac10ce97ff1b184c13ea63b4d", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -180,6 +180,7 @@ get_pointer_safety() noexcept { return pointer_safety::relaxed; }\n // @}\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_assume_aligned 201811L\n   /** @brief Inform the compiler that a pointer is aligned.\n    *\n    *  @tparam _Align An alignment value (i.e. a power of two)"}, {"sha": "514c9888e7a76ce7f73a1f9bd32616ab09172f1f", "filename": "libstdc++-v3/include/std/memory_resource", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -61,6 +61,7 @@ namespace pmr\n   template<typename _Tp>\n     class polymorphic_allocator;\n #else // C++20\n+# define __cpp_lib_polymorphic_allocator 201902L\n   template<typename _Tp = std::byte>\n     class polymorphic_allocator;\n #endif"}, {"sha": "289d47435486d105681fcc8286c2a8952e3c1637", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -322,6 +322,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_starts_ends_with 201711L\n       constexpr bool\n       starts_with(basic_string_view __x) const noexcept\n       { return this->substr(0, __x.size()) == __x; }"}, {"sha": "75a98e38c0a478676b043bef50ad17ce38c30dfd", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -1489,6 +1489,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { };\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_is_nothrow_convertible 201806L\n   /// is_nothrow_convertible\n   template<typename _From, typename _To>\n     struct is_nothrow_convertible\n@@ -3221,6 +3222,8 @@ template <typename _From, typename _To>\n #endif // C++17\n \n #if __cplusplus > 201703L\n+#define __cpp_lib_remove_cvref 201711L\n+\n   /// Remove references and cv-qualifiers.\n   template<typename _Tp>\n     struct remove_cvref\n@@ -3231,6 +3234,7 @@ template <typename _From, typename _To>\n   template<typename _Tp>\n     using remove_cvref_t = __remove_cvref_t<_Tp>;\n \n+#define __cpp_lib_type_identity 201806L\n   /// Identity metafunction.\n   template<typename _Tp>\n     struct type_identity { using type = _Tp; };"}, {"sha": "3b1fd70006972139c3cd1b34cc4b4c4b5e06536a", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -161,10 +161,12 @@\n \n #if __cplusplus > 201703L\n // c++2a\n+#define __cpp_lib_atomic_float 201711L\n #define __cpp_lib_atomic_ref 201806L\n #define __cpp_lib_atomic_value_initialization 201911L\n #define __cpp_lib_bitops 201907L\n #define __cpp_lib_bounded_array_traits 201902L\n+// __cpp_lib_char8_t is defined in <bits/c++config.h>\n #if __cpp_concepts >= 201907L\n # define __cpp_lib_concepts 201806L\n #endif\n@@ -176,15 +178,20 @@\n #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n # define __cpp_lib_is_constant_evaluated 201811L\n #endif\n+#define __cpp_lib_is_nothrow_convertible 201806L\n+#define __cpp_lib_remove_cvref 201711L\n+#define __cpp_lib_type_identity 201806L\n #define __cpp_lib_unwrap_ref 201811L\n \n #if _GLIBCXX_HOSTED\n+#define __cpp_lib_assume_aligned 201811L\n #define __cpp_lib_bind_front 201907L\n #define __cpp_lib_integer_comparison_functions 202002L\n #define __cpp_lib_constexpr_algorithms 201806L\n #define __cpp_lib_constexpr_complex 201711L\n #define __cpp_lib_constexpr_dynamic_alloc 201907L\n #define __cpp_lib_constexpr_invoke 201907L\n+#define __cpp_lib_constexpr_memory 201811L\n #define __cpp_lib_constexpr_numeric 201911L\n #define __cpp_lib_erase_if 202002L\n #define __cpp_lib_interpolate 201902L\n@@ -193,13 +200,18 @@\n #endif\n #define __cpp_lib_list_remove_return_type 201806L\n #define __cpp_lib_math_constants 201907L\n+#define __cpp_lib_polymorphic_allocator 201902L\n #if __cpp_lib_concepts\n # define __cpp_lib_ranges 201911L\n #endif\n+#define __cpp_lib_shift 201806L\n #define __cpp_lib_span 202002L\n+#define __cpp_lib_ssize 201902L\n+#define __cpp_lib_starts_ends_with 201711L\n #if __cpp_impl_three_way_comparison >= 201907L && __cpp_lib_concepts\n # define __cpp_lib_three_way_comparison 201907L\n #endif\n+#define __cpp_lib_to_address 201711L\n #define __cpp_lib_to_array 201907L\n #endif\n #endif // C++2a"}, {"sha": "cb9f8dc06813cb3ef8d7a3142cebaa8b6049baea", "filename": "libstdc++-v3/testsuite/20_util/to_address/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56772f623e2270f0c6bfaf64e0bb41d4b6085dc4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2F1_neg.cc?ref=56772f623e2270f0c6bfaf64e0bb41d4b6085dc4", "patch": "@@ -17,7 +17,7 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do compile { target c++2a } }\n-// { dg-error \"not a function pointer\" \"\" { target *-*-* } 157 }\n+// { dg-error \"not a function pointer\" \"\" { target *-*-* } 158 }\n \n #include <memory>\n "}]}