{"sha": "c9516c38e3ea4a028efafe349142638800e0212e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1MTZjMzhlM2VhNGEwMjhlZmFmZTM0OTE0MjYzODgwMGUwMjEyZQ==", "commit": {"author": {"name": "Wolfgang Bangerth", "email": "bangerth@dealii.org", "date": "2007-03-31T15:22:51Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-03-31T15:22:51Z"}, "message": "re PR rtl-optimization/14737 (Purge political statement from -ffast-math docs)\n\n2007-03-31  Wolfgang Bangerth  <bangerth@dealii.org>\n            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR 14737\n\t* doc/invoke.texi: (optimization options): Reword description\n\tof -ffast-math. Document its primary purpose.\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r123382", "tree": {"sha": "d8f787bddc709588a9114f0bb34501758081d4c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f787bddc709588a9114f0bb34501758081d4c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9516c38e3ea4a028efafe349142638800e0212e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9516c38e3ea4a028efafe349142638800e0212e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9516c38e3ea4a028efafe349142638800e0212e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9516c38e3ea4a028efafe349142638800e0212e/comments", "author": null, "committer": null, "parents": [{"sha": "6be42dd4a21f046a05ccbb5c27cda488bd1c5113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be42dd4a21f046a05ccbb5c27cda488bd1c5113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be42dd4a21f046a05ccbb5c27cda488bd1c5113"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "729f70a97b0c0c6c83fd12f21138ecce5bdc3854", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9516c38e3ea4a028efafe349142638800e0212e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9516c38e3ea4a028efafe349142638800e0212e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9516c38e3ea4a028efafe349142638800e0212e", "patch": "@@ -1,3 +1,10 @@\n+2007-03-31  Wolfgang Bangerth  <bangerth@dealii.org>\n+            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR 14737\n+\t* doc/invoke.texi: (optimization options): Reword description\n+\tof -ffast-math. Document its primary purpose.\n+\t\n 2007-03-31  Richard Guenther  <rguenther@suse.de>\n \n \t* omp-low.c (splay-tree.h): Include."}, {"sha": "db0b743da1efeb77690fceb49fd6993aa2ae3464", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9516c38e3ea4a028efafe349142638800e0212e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9516c38e3ea4a028efafe349142638800e0212e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c9516c38e3ea4a028efafe349142638800e0212e", "patch": "@@ -5909,10 +5909,11 @@ Sets @option{-fno-math-errno}, @option{-funsafe-math-optimizations}, @*\n \n This option causes the preprocessor macro @code{__FAST_MATH__} to be defined.\n \n-This option should never be turned on by any @option{-O} option since\n+This option is not turned on by any @option{-O} option since\n it can result in incorrect output for programs which depend on\n an exact implementation of IEEE or ISO rules/specifications for\n-math functions.\n+math functions. It may, however, yield faster code for programs\n+that do not require the guarantees of these specifications.\n \n @item -fno-math-errno\n @opindex fno-math-errno\n@@ -5921,10 +5922,11 @@ with a single instruction, e.g., sqrt.  A program that relies on\n IEEE exceptions for math error handling may want to use this flag\n for speed while maintaining IEEE arithmetic compatibility.\n \n-This option should never be turned on by any @option{-O} option since\n+This option is not turned on by any @option{-O} option since\n it can result in incorrect output for programs which depend on\n an exact implementation of IEEE or ISO rules/specifications for\n-math functions.\n+math functions. It may, however, yield faster code for programs\n+that do not require the guarantees of these specifications.\n \n The default is @option{-fmath-errno}.\n \n@@ -5940,10 +5942,11 @@ ANSI standards.  When used at link-time, it may include libraries\n or startup files that change the default FPU control word or other\n similar optimizations.\n \n-This option should never be turned on by any @option{-O} option since\n+This option is not turned on by any @option{-O} option since\n it can result in incorrect output for programs which depend on\n an exact implementation of IEEE or ISO rules/specifications for\n-math functions.\n+math functions. It may, however, yield faster code for programs\n+that do not require the guarantees of these specifications.\n \n The default is @option{-fno-unsafe-math-optimizations}.\n \n@@ -5952,9 +5955,11 @@ The default is @option{-fno-unsafe-math-optimizations}.\n Allow optimizations for floating-point arithmetic that assume\n that arguments and results are not NaNs or +-Infs.\n \n-This option should never be turned on by any @option{-O} option since\n+This option is not turned on by any @option{-O} option since\n it can result in incorrect output for programs which depend on\n-an exact implementation of IEEE or ISO rules/specifications.\n+an exact implementation of IEEE or ISO rules/specifications for\n+math functions. It may, however, yield faster code for programs\n+that do not require the guarantees of these specifications.\n \n The default is @option{-fno-finite-math-only}.\n "}]}