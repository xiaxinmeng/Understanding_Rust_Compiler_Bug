{"sha": "8222c37ededfe0f55233898ecc7c4cc023f6389c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyMmMzN2VkZWRmZTBmNTUyMzM4OThlY2M3YzRjYzAyM2Y2Mzg5Yw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-01-17T11:43:14Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-01-17T11:43:14Z"}, "message": "re PR tree-optimization/55264 (ICE: in ipa_make_edge_direct_to_target, at ipa-prop.c:2141 with -O2 -fno-early-inlining -fno-weak)\n\n2013-01-17  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimizations/55264\n\t* ipa-inline-transform.c (can_remove_node_now_p_1): Never return true\n\tfor virtual methods.\n\t* ipa.c (symtab_remove_unreachable_nodes): Never return true for\n\tvirtual methods before inlining is over.\n\t* cgraph.h (cgraph_only_called_directly_or_aliased_p): Return false for\n\tvirtual functions.\n\t* cgraphclones.c (cgraph_create_virtual_clone): Mark clones as\n\tnon-virtual.\n\ntestsuite/\n\t* g++.dg/ipa/pr55264.C: New test.\n\nFrom-SVN: r195262", "tree": {"sha": "6eb8a1715d592561febe771539bf683003e002a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eb8a1715d592561febe771539bf683003e002a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8222c37ededfe0f55233898ecc7c4cc023f6389c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8222c37ededfe0f55233898ecc7c4cc023f6389c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8222c37ededfe0f55233898ecc7c4cc023f6389c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8222c37ededfe0f55233898ecc7c4cc023f6389c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5e7e996fba2a45b4b36e8831c1d9dd4382d3b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e7e996fba2a45b4b36e8831c1d9dd4382d3b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e7e996fba2a45b4b36e8831c1d9dd4382d3b34"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "6475b3c081e697833e097839c2f204c1d5598a06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -1,3 +1,15 @@\n+2013-01-17  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimizations/55264\n+\t* ipa-inline-transform.c (can_remove_node_now_p_1): Never return true\n+\tfor virtual methods.\n+\t* ipa.c (symtab_remove_unreachable_nodes): Never return true for\n+\tvirtual methods before inlining is over.\n+\t* cgraph.h (cgraph_only_called_directly_or_aliased_p): Return false for\n+\tvirtual functions.\n+\t* cgraphclones.c (cgraph_create_virtual_clone): Mark clones as\n+\tnon-virtual.\n+\n 2013-01-16  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/56005"}, {"sha": "5df7fb478b4a6c38addd5f7b89efbafc3456be43", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -1164,6 +1164,7 @@ cgraph_only_called_directly_or_aliased_p (struct cgraph_node *node)\n   gcc_assert (!node->global.inlined_to);\n   return (!node->symbol.force_output && !node->symbol.address_taken\n \t  && !node->symbol.used_from_other_partition\n+\t  && !DECL_VIRTUAL_P (node->symbol.decl)\n \t  && !DECL_STATIC_CONSTRUCTOR (node->symbol.decl)\n \t  && !DECL_STATIC_DESTRUCTOR (node->symbol.decl)\n \t  && !node->symbol.externally_visible);"}, {"sha": "30d02d11dd92fc9ff8227a751668929f13bce778", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -319,6 +319,7 @@ cgraph_create_virtual_clone (struct cgraph_node *old_node,\n   TREE_PUBLIC (new_node->symbol.decl) = 0;\n   DECL_COMDAT (new_node->symbol.decl) = 0;\n   DECL_WEAK (new_node->symbol.decl) = 0;\n+  DECL_VIRTUAL_P (new_node->symbol.decl) = 0;\n   DECL_STATIC_CONSTRUCTOR (new_node->symbol.decl) = 0;\n   DECL_STATIC_DESTRUCTOR (new_node->symbol.decl) = 0;\n   new_node->clone.tree_map = tree_map;"}, {"sha": "cac20fecc3b53af578947f808bac89f1854bd281", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -92,9 +92,7 @@ can_remove_node_now_p_1 (struct cgraph_node *node)\n \t     those only after all devirtualizable virtual calls are processed.\n \t     Lacking may edges in callgraph we just preserve them post\n \t     inlining.  */\n-\t  && (!DECL_VIRTUAL_P (node->symbol.decl)\n-\t      || (!DECL_COMDAT (node->symbol.decl)\n-\t\t  && !DECL_EXTERNAL (node->symbol.decl)))\n+\t  && !DECL_VIRTUAL_P (node->symbol.decl)\n \t  /* During early inlining some unanalyzed cgraph nodes might be in the\n \t     callgraph and they might reffer the function in question.  */\n \t  && !cgraph_new_nodes);"}, {"sha": "a9b8fb419882c04bda8417a0553636bdc05db705", "filename": "gcc/ipa.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -241,8 +241,7 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t&& (!cgraph_can_remove_if_no_direct_calls_and_refs_p (node)\n \t    /* Keep around virtual functions for possible devirtualization.  */\n \t    || (before_inlining_p\n-\t\t&& DECL_VIRTUAL_P (node->symbol.decl)\n-\t\t&& (DECL_COMDAT (node->symbol.decl) || DECL_EXTERNAL (node->symbol.decl)))))\n+\t\t&& DECL_VIRTUAL_P (node->symbol.decl))))\n       {\n         gcc_assert (!node->global.inlined_to);\n \tpointer_set_insert (reachable, node);"}, {"sha": "f6bef191bbe00731926cbfcfd47e5b9d8ee85117", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -1,3 +1,8 @@\n+2013-01-17  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimizations/55264\n+\t* g++.dg/ipa/pr55264.C: New test.\n+\n 2013-01-16  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55983"}, {"sha": "cf54d6ae2a96523c7bfe2af2312709dfc72bcf9b", "filename": "gcc/testsuite/g++.dg/ipa/pr55264.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr55264.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8222c37ededfe0f55233898ecc7c4cc023f6389c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr55264.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr55264.C?ref=8222c37ededfe0f55233898ecc7c4cc023f6389c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-early-inlining -fno-weak\"  } */\n+\n+struct S\n+{\n+  S();\n+  virtual inline void foo ()\n+  {\n+    foo();\n+  }\n+};\n+\n+void\n+B ()\n+{\n+  S().foo ();\n+}"}]}