{"sha": "4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFlY2ZlMTk4NjlkMmJhMjZhYzRlNGE5NjdlYjBiMGNiZjliMDExNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T09:07:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T09:07:44Z"}, "message": "Don't create SSA names until in SSA form\n\nAn upcoming patch adds a fold from hypot(x,x) to fabs(x)*sqrt(2).\nThis is unusual in that it could trigger in the gimplifier but would\nrequire new SSA names to be created.  This patch makes sure that we\nuse the usual:\n\n\t  if (gimple_in_ssa_p (cfun))\n\t    res = make_ssa_name (type);\n\t  else\n\t    res = create_tmp_reg (type);\n\nformula to cope with cases where we're not yet in SSA form.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* gimple-match-head.c (maybe_push_res_to_seq): Use create_tmp_reg\n\tinstead of make_ssa_name if not yet in SSA form.\n\nFrom-SVN: r229406", "tree": {"sha": "5c7ab69d5dcde81019b8826f1021e3c8de37e6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c7ab69d5dcde81019b8826f1021e3c8de37e6dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61183076f1dfbea5ac4fb6799aab9bc6e9aa8de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61183076f1dfbea5ac4fb6799aab9bc6e9aa8de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61183076f1dfbea5ac4fb6799aab9bc6e9aa8de5"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "e1c46d5f9e1db58825bfa2713aabe989604df561", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "patch": "@@ -1,3 +1,8 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gimple-match-head.c (maybe_push_res_to_seq): Use create_tmp_reg\n+\tinstead of make_ssa_name if not yet in SSA form.\n+\n 2015-10-27  Richard Biener  <rguenther@suse.de>\n \n \t* cfg.c (free_edge): Add function argument and use it instead of cfun."}, {"sha": "75f478cc6f51c1dda50a34dc2d25f1666b87bb19", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "patch": "@@ -331,7 +331,12 @@ maybe_push_res_to_seq (code_helper rcode, tree type, tree *ops,\n \t      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (ops[2])))\n \treturn NULL_TREE;\n       if (!res)\n-\tres = make_ssa_name (type);\n+\t{\n+\t  if (gimple_in_ssa_p (cfun))\n+\t    res = make_ssa_name (type);\n+\t  else\n+\t    res = create_tmp_reg (type);\n+\t}\n       maybe_build_generic_op (rcode, type, &ops[0], ops[1], ops[2]);\n       gimple *new_stmt = gimple_build_assign (res, rcode,\n \t\t\t\t\t     ops[0], ops[1], ops[2]);\n@@ -361,7 +366,12 @@ maybe_push_res_to_seq (code_helper rcode, tree type, tree *ops,\n \t}\n       gcc_assert (nargs != 0);\n       if (!res)\n-\tres = make_ssa_name (type);\n+\t{\n+\t  if (gimple_in_ssa_p (cfun))\n+\t    res = make_ssa_name (type);\n+\t  else\n+\t    res = create_tmp_reg (type);\n+\t}\n       gimple *new_stmt = gimple_build_call (decl, nargs, ops[0], ops[1], ops[2]);\n       gimple_call_set_lhs (new_stmt, res);\n       gimple_seq_add_stmt_without_update (seq, new_stmt);"}]}