{"sha": "287a7d41f5c8124bf50d57e7672aabd3bbc61500", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3YTdkNDFmNWM4MTI0YmY1MGQ1N2U3NjcyYWFiZDNiYmM2MTUwMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-02-19T01:21:03Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-02-19T01:21:03Z"}, "message": "re PR target/35189 (-mno-sse4.2 turns off SSE4a)\n\ngcc/\n\n2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/35189\n\t* config/i386/i386.c (OPTION_MASK_ISA_MMX_SET): New.\n\t(OPTION_MASK_ISA_3DNOW_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE2_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE3_SET): Likewise.\n\t(OPTION_MASK_ISA_SSSE3_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE4_1_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE4_2_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE4_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE4A_SET): Likewise.\n\t(OPTION_MASK_ISA_SSE5_SET): Likewise.\n\t(OPTION_MASK_ISA_3DNOW_A_UNSET): Likewise.\n\t(OPTION_MASK_ISA_MMX_UNSET): Updated.\n\t(OPTION_MASK_ISA_3DNOW_UNSET): Updated.\n\t(OPTION_MASK_ISA_SSE_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE3_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSSE3_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE4_1_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE4_2_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE4A_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE5_UNSET): Likewise.\n\t(OPTION_MASK_ISA_SSE4): Removed.\n\t(ix86_handle_option): Turn on bits in ix86_isa_flags and\n\tix86_isa_flags_explicit with OPTION_MASK_ISA_XXX_SET for\n\t-mXXX.\n\t(override_options): Don't turn on implied SSE/MMX bits in\n\tix86_isa_flags.\n\ngcc/testsuite/\n\n2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/35189\n\t* gcc.target/i386/isa-1.c: New.\n\t* gcc.target/i386/isa-2.c: Likewise.\n\t* gcc.target/i386/isa-3.c: Likewise.\n\t* gcc.target/i386/isa-4.c: Likewise.\n\t* gcc.target/i386/isa-5.c: Likewise.\n\t* gcc.target/i386/isa-6.c: Likewise.\n\t* gcc.target/i386/isa-7.c: Likewise.\n\t* gcc.target/i386/isa-8.c: Likewise.\n\t* gcc.target/i386/isa-9.c: Likewise.\n\t* gcc.target/i386/isa-10.c: Likewise.\n\t* gcc.target/i386/isa-11.c: Likewise.\n\t* gcc.target/i386/isa-12.c: Likewise.\n\t* gcc.target/i386/isa-13.c: Likewise.\n\t* gcc.target/i386/isa-14.c: Likewise.\n\nFrom-SVN: r132403", "tree": {"sha": "e5828c7800ae7ca9b474ac7b3ff6fa2e8557960e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5828c7800ae7ca9b474ac7b3ff6fa2e8557960e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/287a7d41f5c8124bf50d57e7672aabd3bbc61500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287a7d41f5c8124bf50d57e7672aabd3bbc61500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287a7d41f5c8124bf50d57e7672aabd3bbc61500", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287a7d41f5c8124bf50d57e7672aabd3bbc61500/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c9e3ddaf9789eaa310c537f2b7baf2fac5eca18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9e3ddaf9789eaa310c537f2b7baf2fac5eca18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9e3ddaf9789eaa310c537f2b7baf2fac5eca18"}], "stats": {"total": 705, "additions": 634, "deletions": 71}, "files": [{"sha": "4ed67c93a4956e9f60cd4fbb69f461c062d0b39b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -1,3 +1,34 @@\n+2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/35189\n+\t* config/i386/i386.c (OPTION_MASK_ISA_MMX_SET): New.\n+\t(OPTION_MASK_ISA_3DNOW_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE2_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE3_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSSE3_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4_1_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4_2_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4A_SET): Likewise.\n+\t(OPTION_MASK_ISA_SSE5_SET): Likewise.\n+\t(OPTION_MASK_ISA_3DNOW_A_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_MMX_UNSET): Updated.\n+\t(OPTION_MASK_ISA_3DNOW_UNSET): Updated.\n+\t(OPTION_MASK_ISA_SSE_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE3_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSSE3_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4_1_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4_2_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4A_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE5_UNSET): Likewise.\n+\t(OPTION_MASK_ISA_SSE4): Removed.\n+\t(ix86_handle_option): Turn on bits in ix86_isa_flags and\n+\tix86_isa_flags_explicit with OPTION_MASK_ISA_XXX_SET for\n+\t-mXXX.\n+\t(override_options): Don't turn on implied SSE/MMX bits in\n+\tix86_isa_flags.\n+\n 2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386-modes.def: Use 4 byte alignment on DI for"}, {"sha": "5dad2fcf5159d2fcde28bbc021d526d0a876c920", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 109, "deletions": 71, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -1768,35 +1768,65 @@ int ix86_isa_flags = TARGET_64BIT_DEFAULT | TARGET_SUBTARGET_ISA_DEFAULT;\n    was set or cleared on the command line.  */\n static int ix86_isa_flags_explicit;\n \n-/* Define a set of ISAs which aren't available for a given ISA. MMX\n-   and SSE ISAs are handled separately.  */\n+/* Define a set of ISAs which are available when a given ISA is\n+   enabled.  MMX and SSE ISAs are handled separately.  */\n+\n+#define OPTION_MASK_ISA_MMX_SET OPTION_MASK_ISA_MMX\n+#define OPTION_MASK_ISA_3DNOW_SET \\\n+  (OPTION_MASK_ISA_3DNOW | OPTION_MASK_ISA_MMX_SET)\n+\n+#define OPTION_MASK_ISA_SSE_SET OPTION_MASK_ISA_SSE\n+#define OPTION_MASK_ISA_SSE2_SET \\\n+  (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_SSE_SET)\n+#define OPTION_MASK_ISA_SSE3_SET \\\n+  (OPTION_MASK_ISA_SSE3 | OPTION_MASK_ISA_SSE2_SET)\n+#define OPTION_MASK_ISA_SSSE3_SET \\\n+  (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_SSE3_SET)\n+#define OPTION_MASK_ISA_SSE4_1_SET \\\n+  (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_SSSE3_SET)\n+#define OPTION_MASK_ISA_SSE4_2_SET \\\n+  (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_SSE4_1_SET)\n+\n+/* SSE4 includes both SSE4.1 and SSE4.2. -msse4 should be the same\n+   as -msse4.2.  */\n+#define OPTION_MASK_ISA_SSE4_SET OPTION_MASK_ISA_SSE4_2_SET\n+\n+#define OPTION_MASK_ISA_SSE4A_SET \\\n+  (OPTION_MASK_ISA_SSE4A | OPTION_MASK_ISA_SSE3_SET)\n+#define OPTION_MASK_ISA_SSE5_SET \\\n+  (OPTION_MASK_ISA_SSE5 | OPTION_MASK_ISA_SSE4A_SET)\n+\n+/* Define a set of ISAs which aren't available when a given ISA is\n+   disabled.  MMX and SSE ISAs are handled separately.  */\n \n #define OPTION_MASK_ISA_MMX_UNSET \\\n-  (OPTION_MASK_ISA_3DNOW | OPTION_MASK_ISA_3DNOW_UNSET)\n-#define OPTION_MASK_ISA_3DNOW_UNSET OPTION_MASK_ISA_3DNOW_A\n+  (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_3DNOW_UNSET)\n+#define OPTION_MASK_ISA_3DNOW_UNSET \\\n+  (OPTION_MASK_ISA_3DNOW | OPTION_MASK_ISA_3DNOW_A_UNSET)\n+#define OPTION_MASK_ISA_3DNOW_A_UNSET OPTION_MASK_ISA_3DNOW_A\n \n #define OPTION_MASK_ISA_SSE_UNSET \\\n-  (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_SSE2_UNSET)\n+  (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_SSE2_UNSET)\n #define OPTION_MASK_ISA_SSE2_UNSET \\\n-  (OPTION_MASK_ISA_SSE3 | OPTION_MASK_ISA_SSE3_UNSET)\n+  (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_SSE3_UNSET)\n #define OPTION_MASK_ISA_SSE3_UNSET \\\n-  (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_SSSE3_UNSET)\n+  (OPTION_MASK_ISA_SSE3 \\\n+   | OPTION_MASK_ISA_SSSE3_UNSET \\\n+   | OPTION_MASK_ISA_SSE4A_UNSET )\n #define OPTION_MASK_ISA_SSSE3_UNSET \\\n-  (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_SSE4_1_UNSET)\n+  (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_SSE4_1_UNSET)\n #define OPTION_MASK_ISA_SSE4_1_UNSET \\\n-  (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_SSE4_2_UNSET)\n-#define OPTION_MASK_ISA_SSE4_2_UNSET OPTION_MASK_ISA_SSE4A\n+  (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_SSE4_2_UNSET)\n+#define OPTION_MASK_ISA_SSE4_2_UNSET OPTION_MASK_ISA_SSE4_2\n \n-/* SSE4 includes both SSE4.1 and SSE4.2. -msse4 should be the same\n-   as -msse4.1 -msse4.2.  -mno-sse4 should the same as -mno-sse4.1. */\n-#define OPTION_MASK_ISA_SSE4 \\\n-  (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_SSE4_2)\n+/* SSE4 includes both SSE4.1 and SSE4.2.  -mno-sse4 should the same\n+   as -mno-sse4.1. */\n #define OPTION_MASK_ISA_SSE4_UNSET OPTION_MASK_ISA_SSE4_1_UNSET\n \n-#define OPTION_MASK_ISA_SSE4A_UNSET OPTION_MASK_ISA_SSE4\n+#define OPTION_MASK_ISA_SSE4A_UNSET \\\n+  (OPTION_MASK_ISA_SSE4A | OPTION_MASK_ISA_SSE5_UNSET)\n \n-#define OPTION_MASK_ISA_SSE5_UNSET \\\n-  (OPTION_MASK_ISA_3DNOW | OPTION_MASK_ISA_3DNOW_UNSET)\n+#define OPTION_MASK_ISA_SSE5_UNSET OPTION_MASK_ISA_SSE5\n \n /* Vectorization library interface and handlers.  */\n tree (*ix86_veclib_handler)(enum built_in_function, tree, tree) = NULL;\n@@ -1810,17 +1840,25 @@ ix86_handle_option (size_t code, const char *arg ATTRIBUTE_UNUSED, int value)\n   switch (code)\n     {\n     case OPT_mmmx:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_MMX_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_MMX_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_UNSET;\n \t}\n       return true;\n \n     case OPT_m3dnow:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_3DNOW_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_3DNOW_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_UNSET;\n@@ -1831,62 +1869,86 @@ ix86_handle_option (size_t code, const char *arg ATTRIBUTE_UNUSED, int value)\n       return false;\n \n     case OPT_msse:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_UNSET;\n \t}\n       return true;\n \n     case OPT_msse2:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE2_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE2_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_UNSET;\n \t}\n       return true;\n \n     case OPT_msse3:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE3_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE3_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_UNSET;\n \t}\n       return true;\n \n     case OPT_mssse3:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSSE3_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSSE3_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4_1:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4_1_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_1_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4_2:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4_2_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_2_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4:\n-      ix86_isa_flags |= OPTION_MASK_ISA_SSE4;\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4;\n+      ix86_isa_flags |= OPTION_MASK_ISA_SSE4_SET;\n+      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_SET;\n       return true;\n \n     case OPT_mno_sse4:\n@@ -1895,17 +1957,25 @@ ix86_handle_option (size_t code, const char *arg ATTRIBUTE_UNUSED, int value)\n       return true;\n \n     case OPT_msse4a:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4A_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4A_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_UNSET;\n \t}\n       return true;\n \n     case OPT_msse5:\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE5;\n-      if (!value)\n+      if (value)\n+\t{\n+\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE5_SET;\n+\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE5_SET;\n+\t}\n+      else\n \t{\n \t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE5_UNSET;\n \t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE5_UNSET;\n@@ -2530,45 +2600,13 @@ override_options (void)\n   if (!TARGET_80387)\n     target_flags |= MASK_NO_FANCY_MATH_387;\n \n-  /* Turn on SSE4A bultins for -msse5.  */\n-  if (TARGET_SSE5)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE4A;\n-\n-  /* Turn on SSE4.1 builtins for -msse4.2.  */\n-  if (TARGET_SSE4_2)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE4_1;\n-\n-  /* Turn on SSSE3 builtins for -msse4.1.  */\n-  if (TARGET_SSE4_1)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSSE3;\n-\n-  /* Turn on SSE3 builtins for -mssse3.  */\n-  if (TARGET_SSSE3)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE3;\n-\n-  /* Turn on SSE3 builtins for -msse4a.  */\n-  if (TARGET_SSE4A)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE3;\n-\n-  /* Turn on SSE2 builtins for -msse3.  */\n-  if (TARGET_SSE3)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE2;\n-\n-  /* Turn on SSE builtins for -msse2.  */\n-  if (TARGET_SSE2)\n-    ix86_isa_flags |= OPTION_MASK_ISA_SSE;\n-\n   /* Turn on MMX builtins for -msse.  */\n   if (TARGET_SSE)\n     {\n       ix86_isa_flags |= OPTION_MASK_ISA_MMX & ~ix86_isa_flags_explicit;\n       x86_prefetch_sse = true;\n     }\n \n-  /* Turn on MMX builtins for 3Dnow.  */\n-  if (TARGET_3DNOW)\n-    ix86_isa_flags |= OPTION_MASK_ISA_MMX;\n-\n   /* Turn on popcnt instruction for -msse4.2 or -mabm.  */\n   if (TARGET_SSE4_2 || TARGET_ABM)\n     x86_popcnt = true;"}, {"sha": "55715a6da39319ba02c55c3533784dbaf5fe0058", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -1,3 +1,21 @@\n+2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/35189\n+\t* gcc.target/i386/isa-1.c: New.\n+\t* gcc.target/i386/isa-2.c: Likewise.\n+\t* gcc.target/i386/isa-3.c: Likewise.\n+\t* gcc.target/i386/isa-4.c: Likewise.\n+\t* gcc.target/i386/isa-5.c: Likewise.\n+\t* gcc.target/i386/isa-6.c: Likewise.\n+\t* gcc.target/i386/isa-7.c: Likewise.\n+\t* gcc.target/i386/isa-8.c: Likewise.\n+\t* gcc.target/i386/isa-9.c: Likewise.\n+\t* gcc.target/i386/isa-10.c: Likewise.\n+\t* gcc.target/i386/isa-11.c: Likewise.\n+\t* gcc.target/i386/isa-12.c: Likewise.\n+\t* gcc.target/i386/isa-13.c: Likewise.\n+\t* gcc.target/i386/isa-14.c: Likewise.\n+\n 2008-02-18  Joey Ye  <joey.ye@intel.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "0bee0969a3581ebb83f6dc0a6be313a58343a208", "filename": "gcc/testsuite/gcc.target/i386/isa-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-1.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if !defined __SSSE3__\n+  abort ();\n+#endif\n+#if !defined __SSE4_1__\n+  abort ();\n+#endif\n+#if !defined __SSE4_2__\n+  abort ();\n+#endif\n+#if defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "1fd7eac147e86c04c433c90adc9c045b47372b6e", "filename": "gcc/testsuite/gcc.target/i386/isa-10.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-10.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse5 -mno-sse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "dc55d6219e838bfa004fdbad7d82b94bfadd504e", "filename": "gcc/testsuite/gcc.target/i386/isa-11.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-11.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse5 -mno-ssse3\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "782768d51dfb7f31ee291d7584c670482113cf40", "filename": "gcc/testsuite/gcc.target/i386/isa-12.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-12.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse5 -mno-sse3\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "5b0317449f976e339324ae2ad9cacc0ad46ed39f", "filename": "gcc/testsuite/gcc.target/i386/isa-13.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-13.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse5 -mno-sse2\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if defined __SSE2__\n+  abort ();\n+#endif\n+#if defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "b901691691d605b056918f7330abd9e1dbefb803", "filename": "gcc/testsuite/gcc.target/i386/isa-14.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-14.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse5 -mno-sse\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if defined __SSE__\n+  abort ();\n+#endif\n+#if defined __SSE2__\n+  abort ();\n+#endif\n+#if defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "f43b1991218d0971a98792adacd96e13458e8c30", "filename": "gcc/testsuite/gcc.target/i386/isa-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-2.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse4 -msse5\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if !defined __SSSE3__\n+  abort ();\n+#endif\n+#if !defined __SSE4_1__\n+  abort ();\n+#endif\n+#if !defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "c74ab9f50d69a3f5dfa81e27b9b3b46be6082fa0", "filename": "gcc/testsuite/gcc.target/i386/isa-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-3.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-msse4 -msse5 -msse4a\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if !defined __SSSE3__\n+  abort ();\n+#endif\n+#if !defined __SSE4_1__\n+  abort ();\n+#endif\n+#if !defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "620369075d949e23ffb29ae872f67c641cc28141", "filename": "gcc/testsuite/gcc.target/i386/isa-4.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-4.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=core2 -msse5 -mno-sse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if !defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "9cd071ad566957b2e441c3a26f0e22a54ef39a83", "filename": "gcc/testsuite/gcc.target/i386/isa-5.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-5.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=core2 -msse4a -mno-sse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if !defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "ec1fbeaa4d43e38e6120e1d1b024b15b8f18ff8f", "filename": "gcc/testsuite/gcc.target/i386/isa-6.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-6.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=amdfam10 -mno-sse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "76ea31ed25162d1ace0809f30f6aa6a614c13f6d", "filename": "gcc/testsuite/gcc.target/i386/isa-7.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-7.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=amdfam10 -msse5 -mno-sse4\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if !defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "fb37669dcea1adeed4654c60e387ba04e6033ef9", "filename": "gcc/testsuite/gcc.target/i386/isa-8.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-8.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=amdfam10 -msse5 -mno-sse4a\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "fefdef6a09c566ede5da4171366e68546d8611b7", "filename": "gcc/testsuite/gcc.target/i386/isa-9.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287a7d41f5c8124bf50d57e7672aabd3bbc61500/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fisa-9.c?ref=287a7d41f5c8124bf50d57e7672aabd3bbc61500", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-march=amdfam10 -mno-sse5\" } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+#if !defined __SSE__\n+  abort ();\n+#endif\n+#if !defined __SSE2__\n+  abort ();\n+#endif\n+#if !defined __SSE3__\n+  abort ();\n+#endif\n+#if defined __SSSE3__\n+  abort ();\n+#endif\n+#if defined __SSE4_1__\n+  abort ();\n+#endif\n+#if defined __SSE4_2__\n+  abort ();\n+#endif\n+#if !defined __SSE4A__\n+  abort ();\n+#endif\n+#if defined __SSE5__\n+  abort ();\n+#endif\n+  return 0;\n+}"}]}