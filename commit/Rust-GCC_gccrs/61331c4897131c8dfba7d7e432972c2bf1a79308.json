{"sha": "61331c4897131c8dfba7d7e432972c2bf1a79308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzMzFjNDg5NzEzMWM4ZGZiYTdkN2U0MzI5NzJjMmJmMWE3OTMwOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-21T12:23:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-21T12:23:11Z"}, "message": "re PR tree-optimization/63563 (ICE: in vectorizable_store, at tree-vect-stmts.c:5106 with -mavx2)\n\n\tPR tree-optimization/63563\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Bail out\n\tif either dra or drb stmts are not normal loads/stores.\n\n\t* gcc.target/i386/pr63563.c: New test.\n\nFrom-SVN: r216507", "tree": {"sha": "38b21ce653abdd88dc541089899ea7185e6a585f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38b21ce653abdd88dc541089899ea7185e6a585f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61331c4897131c8dfba7d7e432972c2bf1a79308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61331c4897131c8dfba7d7e432972c2bf1a79308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61331c4897131c8dfba7d7e432972c2bf1a79308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61331c4897131c8dfba7d7e432972c2bf1a79308/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21d30baba1a66e4c45158c1de851c3c83434c2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d30baba1a66e4c45158c1de851c3c83434c2d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d30baba1a66e4c45158c1de851c3c83434c2d8"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "98fc55232e7b0dcee5925ce1af392dd6f48fb6a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61331c4897131c8dfba7d7e432972c2bf1a79308", "patch": "@@ -1,3 +1,9 @@\n+2014-10-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63563\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Bail out\n+\tif either dra or drb stmts are not normal loads/stores.\n+\n 2014-10-21  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/i386.c (expand_vec_perm_1): Fix"}, {"sha": "979fe430f8f14b48081fd3952d481e74a18a15b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61331c4897131c8dfba7d7e432972c2bf1a79308", "patch": "@@ -1,3 +1,8 @@\n+2014-10-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63563\n+\t* gcc.target/i386/pr63563.c: New test.\n+\n 2014-10-20  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/slsr-19.c: Make robust against operand order changes."}, {"sha": "ce3e4658e7532fbaf4a7701f4980dd4281e7e13b", "filename": "gcc/testsuite/gcc.target/i386/pr63563.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63563.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63563.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63563.c?ref=61331c4897131c8dfba7d7e432972c2bf1a79308", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/63563 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx2\" } */\n+\n+struct A { unsigned long a, b, c, d; } a[1024] = { { 0, 1, 2, 3 } }, b;\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    {\n+      a[i].a = a[i].b = a[i].c = b.c;\n+      if (a[i].d)\n+\ta[i].d = b.d;\n+    }\n+}"}, {"sha": "0807b95099d57a885137f58716825d6f021b7b6e", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61331c4897131c8dfba7d7e432972c2bf1a79308/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=61331c4897131c8dfba7d7e432972c2bf1a79308", "patch": "@@ -2551,11 +2551,14 @@ vect_analyze_data_ref_accesses (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo)\n \t     over them.  The we can just skip ahead to the next DR here.  */\n \n \t  /* Check that the data-refs have same first location (except init)\n-\t     and they are both either store or load (not load and store).  */\n+\t     and they are both either store or load (not load and store,\n+\t     not masked loads or stores).  */\n \t  if (DR_IS_READ (dra) != DR_IS_READ (drb)\n \t      || !operand_equal_p (DR_BASE_ADDRESS (dra),\n \t\t\t\t   DR_BASE_ADDRESS (drb), 0)\n-\t      || !dr_equal_offsets_p (dra, drb))\n+\t      || !dr_equal_offsets_p (dra, drb)\n+\t      || !gimple_assign_single_p (DR_STMT (dra))\n+\t      || !gimple_assign_single_p (DR_STMT (drb)))\n \t    break;\n \n \t  /* Check that the data-refs have the same constant size and step.  */"}]}