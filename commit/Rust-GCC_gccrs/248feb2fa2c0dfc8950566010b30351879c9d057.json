{"sha": "248feb2fa2c0dfc8950566010b30351879c9d057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4ZmViMmZhMmMwZGZjODk1MDU2NjAxMGIzMDM1MTg3OWM5ZDA1Nw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-12T17:16:05Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-12T17:16:05Z"}, "message": "gcov: fix printf format for 32-bit hosts\n\ngcc/ChangeLog:\n\n\t* gcov.c (source_info::debug): Fix printf format for 32-bit hosts.", "tree": {"sha": "d081f4833df3afc4f1de4b2b5a4eaf5b39a44b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d081f4833df3afc4f1de4b2b5a4eaf5b39a44b99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/248feb2fa2c0dfc8950566010b30351879c9d057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248feb2fa2c0dfc8950566010b30351879c9d057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248feb2fa2c0dfc8950566010b30351879c9d057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248feb2fa2c0dfc8950566010b30351879c9d057/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aff68d54c33ae10fbbb52adb50527baf7b2f627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aff68d54c33ae10fbbb52adb50527baf7b2f627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aff68d54c33ae10fbbb52adb50527baf7b2f627"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5c651a9bdce440b64f1c960ef8c9e2054a3c2413", "filename": "gcc/gcov.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248feb2fa2c0dfc8950566010b30351879c9d057/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248feb2fa2c0dfc8950566010b30351879c9d057/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=248feb2fa2c0dfc8950566010b30351879c9d057", "patch": "@@ -442,15 +442,15 @@ void source_info::debug ()\n       for (vector<block_info>::iterator bit = fn->blocks.begin ();\n \t   bit != fn->blocks.end (); bit++)\n \t{\n-\t  fprintf (stderr, \"    block_info id=%d, count=%ld\\n\",\n+\t  fprintf (stderr, \"    block_info id=%d, count=%\" PRId64 \" \\n\",\n \t\t   bit->id, bit->count);\n \t}\n     }\n \n   for (unsigned lineno = 1; lineno < lines.size (); ++lineno)\n     {\n       line_info &line = lines[lineno];\n-      fprintf (stderr, \"  line_info=%d, count=%ld\\n\", lineno, line.count);\n+      fprintf (stderr, \"  line_info=%d, count=%\" PRId64 \"\\n\", lineno, line.count);\n     }\n \n   fprintf (stderr, \"\\n\");"}]}