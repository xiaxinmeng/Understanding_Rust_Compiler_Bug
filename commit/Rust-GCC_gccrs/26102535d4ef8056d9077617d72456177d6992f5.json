{"sha": "26102535d4ef8056d9077617d72456177d6992f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxMDI1MzVkNGVmODA1NmQ5MDc3NjE3ZDcyNDU2MTc3ZDY5OTJmNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-09-13T21:30:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-09-13T21:30:55Z"}, "message": "ia64.md (divsf3): New.\n\n        * config/ia64/ia64.md (divsf3): New.\n        (divsf3_internal_lat, divsf3_internal_thr): New.\n        (divdf3, divdf3_internal_lat, divdf3_internal_thr): New.\n        (divtf3, divtf3_internal_lat, divtf3_internal_thr): New.\n        (adddf3_trunc, subdf3_trunc, muldf3_trunc): New.\n        (madddf4_trunc, msubdf4_trunc, nmuldf3_trunc): New.\n        (nmadddf4_alts, nmadddf4_trunc): New.\n        (addtf3_truncsf, addtf3_truncdf, subtf3_truncsf): New.\n        (subtf3_truncdf, multf3_truncsf, multf3_truncdf): New.\n        (multf3_truncsf_alts, multf3_truncdf_alts): New.\n        (maddtf4_truncsf, maddtf4_truncdf, maddtf4_alts_truncdf): New.\n        (msubtf4_truncsf, msubtf4_truncdf, nmultf3_truncsf): New.\n        (nmultf3_truncdf, nmaddtf4_truncsf, nmaddtf4_truncdf): New.\n        (nmaddtf4_truncdf_alts): New.\n        (recip_approx): Don't predicate.\n\nFrom-SVN: r36396", "tree": {"sha": "a25971b715d00252d5b34a841706c49ceb2a67b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25971b715d00252d5b34a841706c49ceb2a67b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26102535d4ef8056d9077617d72456177d6992f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26102535d4ef8056d9077617d72456177d6992f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26102535d4ef8056d9077617d72456177d6992f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26102535d4ef8056d9077617d72456177d6992f5/comments", "author": null, "committer": null, "parents": [{"sha": "938566fbe53f9fb8e9a9bdee88ef09fa2db4ba6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938566fbe53f9fb8e9a9bdee88ef09fa2db4ba6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938566fbe53f9fb8e9a9bdee88ef09fa2db4ba6e"}], "stats": {"total": 742, "additions": 737, "deletions": 5}, "files": [{"sha": "3eca11e420c3d7155d6d015de0cc80f604d26bb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26102535d4ef8056d9077617d72456177d6992f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26102535d4ef8056d9077617d72456177d6992f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26102535d4ef8056d9077617d72456177d6992f5", "patch": "@@ -1,3 +1,21 @@\n+2000-09-13  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/ia64/ia64.md (divsf3): New.\n+\t(divsf3_internal_lat, divsf3_internal_thr): New.\n+\t(divdf3, divdf3_internal_lat, divdf3_internal_thr): New.\n+\t(divtf3, divtf3_internal_lat, divtf3_internal_thr): New.\n+\t(adddf3_trunc, subdf3_trunc, muldf3_trunc): New.\n+\t(madddf4_trunc, msubdf4_trunc, nmuldf3_trunc): New.\n+\t(nmadddf4_alts, nmadddf4_trunc): New.\n+\t(addtf3_truncsf, addtf3_truncdf, subtf3_truncsf): New.\n+\t(subtf3_truncdf, multf3_truncsf, multf3_truncdf): New.\n+\t(multf3_truncsf_alts, multf3_truncdf_alts): New.\n+\t(maddtf4_truncsf, maddtf4_truncdf, maddtf4_alts_truncdf): New.\n+\t(msubtf4_truncsf, msubtf4_truncdf, nmultf3_truncsf): New.\n+\t(nmultf3_truncdf, nmaddtf4_truncsf, nmaddtf4_truncdf): New.\n+\t(nmaddtf4_truncdf_alts): New.\n+\t(recip_approx): Don't predicate.\n+\n 2000-09-13  Richard Henderson  <rth@cygnus.com>\n \n \t* config/ia64/lib1funcs.asm (__divsf3): Protect fnorm.s with p6."}, {"sha": "704959222d24a98a44857e380f8d721e4af5f706", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 719, "deletions": 5, "changes": 724, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26102535d4ef8056d9077617d72456177d6992f5/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26102535d4ef8056d9077617d72456177d6992f5/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=26102535d4ef8056d9077617d72456177d6992f5", "patch": "@@ -50,6 +50,8 @@\n ;; would be better if rtx_needs_barrier took care of this, but this is\n ;; something that can be fixed later.\n \n+;; ??? Need a better way to describe alternate fp status registers.\n+\n ;; Unspec usage:\n ;;\n ;; unspec:\n@@ -2236,13 +2238,134 @@\n \n (define_insn \"*nmaddsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:SF (neg:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t\t  (match_operand:SF 2 \"fr_register_operand\" \"f\")))\n+\t(plus:SF (neg:SF (mult:SF\n+\t\t\t   (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\")))\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fnma.s %0 = %1, %2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_expand \"divsf3\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n+\t(div:SF (match_operand:SF 1 \"fr_register_operand\" \"\")\n+\t\t(match_operand:SF 2 \"fr_register_operand\" \"\")))]\n+  \"TARGET_INLINE_DIV\"\n+  \"\n+{\n+  rtx insn;\n+  if (TARGET_INLINE_DIV_LAT)\n+    insn = gen_divsf3_internal_lat (operands[0], operands[1], operands[2]);\n+  else\n+    insn = gen_divsf3_internal_thr (operands[0], operands[1], operands[2]);\n+  emit_insn (insn);\n+  DONE;\n+}\")\n+\n+(define_insn_and_split \"divsf3_internal_lat\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:SF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:TF 4 \"=f\"))\n+   (clobber (match_scratch:CC 5 \"=c\"))]\n+  \"TARGET_INLINE_DIV_LAT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 6) (div:TF (const_int 1) (match_dup 8)))\n+\t      (set (match_dup 5) (unspec:CC [(match_dup 7) (match_dup 8)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3) (mult:TF (match_dup 7) (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 8) (match_dup 6)))\n+\t\t\t      (match_dup 10)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4) (mult:TF (match_dup 4) (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4) (mult:TF (match_dup 4) (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 9)\n+\t\t     (float_truncate:DF\n+\t\t       (plus:TF (mult:TF (match_dup 4) (match_dup 3))\n+\t\t\t      (match_dup 3))))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (set (match_dup 0)\n+\t  (float_truncate:SF (match_dup 6))))\n+  ] \n+  \"operands[6] = gen_rtx_REG (TFmode, REGNO (operands[0]));\n+   operands[7] = gen_rtx_REG (TFmode, REGNO (operands[1]));\n+   operands[8] = gen_rtx_REG (TFmode, REGNO (operands[2]));\n+   operands[9] = gen_rtx_REG (DFmode, REGNO (operands[0]));\n+   operands[10] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n+\n+(define_insn_and_split \"divsf3_internal_thr\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:SF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:TF 4 \"=f\"))\n+   (clobber (match_scratch:CC 5 \"=c\"))]\n+  \"TARGET_INLINE_DIV_THR\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 6) (div:TF (const_int 1) (match_dup 8)))\n+\t      (set (match_dup 5) (unspec:CC [(match_dup 7) (match_dup 8)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 8) (match_dup 6)))\n+\t\t\t      (match_dup 10)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 6)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 6))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 9)\n+\t\t     (float_truncate:SF\n+\t\t       (mult:TF (match_dup 7) (match_dup 6))))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 8) (match_dup 3)))\n+\t\t\t      (match_dup 7)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (set (match_dup 0)\n+\t  (float_truncate:SF\n+\t    (plus:TF (mult:TF (match_dup 4) (match_dup 6))\n+\t\t\t      (match_dup 3)))))\n+  ] \n+  \"operands[6] = gen_rtx_REG (TFmode, REGNO (operands[0]));\n+   operands[7] = gen_rtx_REG (TFmode, REGNO (operands[1]));\n+   operands[8] = gen_rtx_REG (TFmode, REGNO (operands[2]));\n+   operands[9] = gen_rtx_REG (SFmode, REGNO (operands[3]));\n+   operands[10] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -2258,6 +2381,15 @@\n   \"fadd.d %0 = %1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*adddf3_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:DF (match_operand:DF 1 \"fr_register_operand\" \"%f\")\n+\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fadd.s %0 = %1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n@@ -2266,6 +2398,15 @@\n   \"fsub.d %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*subdf3_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fsub.s %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n@@ -2274,6 +2415,15 @@\n   \"fmpy.d %0 = %1, %2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*muldf3_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n+  \"\"\n+  \"fmpy.s %0 = %1, %2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n@@ -2320,6 +2470,16 @@\n   \"fma.d %0 = %1, %2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*madddf4_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t    (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fma.s %0 = %1, %2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*msubdf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n@@ -2329,6 +2489,16 @@\n   \"fms.d %0 = %1, %2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*msubdf4_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (minus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fms.s %0 = %1, %2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*nmuldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n@@ -2337,16 +2507,205 @@\n   \"fnmpy.d %0 = %1, %2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*nmuldf3_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n+  \"\"\n+  \"fnmpy.s %0 = %1, %2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n \n (define_insn \"*nmadddf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t\t  (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n+\t(plus:DF (neg:DF (mult:DF\n+\t\t\t   (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fnma.d %0 = %1, %2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*nmadddf4_alts\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(plus:DF (neg:DF (mult:DF\n+\t\t\t   (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n+\t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fnma.d.s%4 %0 = %1, %2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*nmadddf4_trunc\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:DF (neg:DF (mult:DF\n+\t\t\t     (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n+\t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fnma.s %0 = %1, %2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_expand \"divdf3\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n+\t(div:DF (match_operand:DF 1 \"fr_register_operand\" \"\")\n+\t\t(match_operand:DF 2 \"fr_register_operand\" \"\")))]\n+  \"TARGET_INLINE_DIV\"\n+  \"\n+{\n+  rtx insn;\n+  if (TARGET_INLINE_DIV_LAT)\n+    insn = gen_divdf3_internal_lat (operands[0], operands[1], operands[2]);\n+  else\n+    insn = gen_divdf3_internal_thr (operands[0], operands[1], operands[2]);\n+  emit_insn (insn);\n+  DONE;\n+}\")\n+\n+(define_insn_and_split \"divdf3_internal_lat\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:DF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:TF 4 \"=&f\"))\n+   (clobber (match_scratch:TF 5 \"=&f\"))\n+   (clobber (match_scratch:CC 6 \"=c\"))]\n+  \"TARGET_INLINE_DIV_LAT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 7) (div:TF (const_int 1) (match_dup 9)))\n+\t      (set (match_dup 6) (unspec:CC [(match_dup 8) (match_dup 9)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 3) (mult:TF (match_dup 8) (match_dup 7)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 9) (match_dup 7)))\n+\t\t\t      (match_dup 12)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 5) (mult:TF (match_dup 4) (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 7)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 7))\n+\t\t\t      (match_dup 7)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 5) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 4) (mult:TF (match_dup 5) (match_dup 5)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 7)\n+\t\t     (plus:TF (mult:TF (match_dup 5) (match_dup 7))\n+\t\t\t      (match_dup 7)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 10)\n+\t\t     (float_truncate:DF\n+\t\t       (plus:TF (mult:TF (match_dup 4) (match_dup 3))\n+\t\t\t      (match_dup 3))))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 7)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 7))\n+\t\t\t      (match_dup 7)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (parallel [(set (match_dup 11)\n+\t\t     (float_truncate:DF\n+\t\t       (plus:TF (neg:TF (mult:TF (match_dup 9) (match_dup 3)))\n+\t\t\t        (match_dup 8))))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 6) (const_int 0))\n+     (set (match_dup 0)\n+\t  (float_truncate:DF (plus:TF (mult:TF (match_dup 5) (match_dup 7))\n+\t\t\t      (match_dup 3)))))\n+  ] \n+  \"operands[7] = gen_rtx_REG (TFmode, REGNO (operands[0]));\n+   operands[8] = gen_rtx_REG (TFmode, REGNO (operands[1]));\n+   operands[9] = gen_rtx_REG (TFmode, REGNO (operands[2]));\n+   operands[10] = gen_rtx_REG (DFmode, REGNO (operands[3]));\n+   operands[11] = gen_rtx_REG (DFmode, REGNO (operands[5]));\n+   operands[12] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n+\n+(define_insn_and_split \"divdf3_internal_thr\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:DF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:DF 4 \"=f\"))\n+   (clobber (match_scratch:CC 5 \"=c\"))]\n+  \"TARGET_INLINE_DIV_THR\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 6) (div:TF (const_int 1) (match_dup 8)))\n+\t      (set (match_dup 5) (unspec:CC [(match_dup 7) (match_dup 8)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 8) (match_dup 6)))\n+\t\t\t      (match_dup 10)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 6)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 6))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (mult:TF (match_dup 3) (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 6)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 6))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (mult:TF (match_dup 3) (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 6)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 6))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 9)\n+\t\t     (float_truncate:DF\n+\t\t       (mult:TF (match_dup 7) (match_dup 3))))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:DF (neg:DF (mult:DF (match_dup 2) (match_dup 9)))\n+\t\t\t      (match_dup 1)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (set (match_dup 0)\n+\t  (plus:DF (mult:DF (match_dup 4) (match_dup 0))\n+\t\t\t    (match_dup 9))))\n+  ] \n+  \"operands[6] = gen_rtx_REG (TFmode, REGNO (operands[0]));\n+   operands[7] = gen_rtx_REG (TFmode, REGNO (operands[1]));\n+   operands[8] = gen_rtx_REG (TFmode, REGNO (operands[2]));\n+   operands[9] = gen_rtx_REG (DFmode, REGNO (operands[3]));\n+   operands[10] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -2362,6 +2721,24 @@\n   \"fadd %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*addtf3_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fadd.s %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*addtf3_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (plus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fadd.d %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"subtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2370,6 +2747,24 @@\n   \"fsub %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*subtf3_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fsub.s %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*subtf3_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fsub.d %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"multf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2378,6 +2773,24 @@\n   \"fmpy %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*multf3_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fmpy.s %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*multf3_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fmpy.d %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*multf3_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2387,6 +2800,26 @@\n   \"fmpy.s%3 %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*multf3_truncsf_alts\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))\n+   (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fmpy.s.s%3 %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*multf3_truncdf_alts\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))\n+   (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fmpy.d.s%3 %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"abstf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(abs:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")))]\n@@ -2433,6 +2866,26 @@\n   \"fma %0 = %F1, %F2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*maddtf4_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n+\t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fma.s %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*maddtf4_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (plus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n+\t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fma.d %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*maddtf4_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(plus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2443,6 +2896,17 @@\n   \"fma.s%4 %0 = %F1, %F2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*maddtf4_alts_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (plus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n+\t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*msubtf4\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(minus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2452,6 +2916,26 @@\n   \"fms %0 = %F1, %F2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*msubtf4_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (minus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n+\t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fms.s %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*msubtf4_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (minus:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n+\t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fms.d %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*nmultf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n@@ -2460,6 +2944,26 @@\n   \"fnmpy %0 = %F1, %F2%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*nmultf3_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (neg:TF (mult:TF\n+\t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n+  \"\"\n+  \"fnmpy.s %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*nmultf3_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (neg:TF (mult:TF\n+\t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n+  \"\"\n+  \"fnmpy.d %0 = %F1, %F2%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n \n (define_insn \"*nmaddtf4\"\n@@ -2472,6 +2976,28 @@\n   \"fnma %0 = %F1, %F2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*nmaddtf4_truncsf\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (plus:TF (neg:TF (mult:TF\n+\t\t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n+\t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fnma.s %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_insn \"*nmaddtf4_truncdf\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (plus:TF (neg:TF (mult:TF\n+\t\t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n+\t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n+  \"\"\n+  \"fnma.d %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n (define_insn \"*nmaddtf4_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(plus:TF (neg:TF (mult:TF\n@@ -2483,6 +3009,193 @@\n   \"fnma.s%4 %0 = %F1, %F2, %F3%B0\"\n   [(set_attr \"type\" \"F\")])\n \n+(define_insn \"*nmaddtf4_truncdf_alts\"\n+  [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:DF\n+\t  (plus:TF (neg:TF\n+\t\t     (mult:TF\n+\t\t       (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n+\t\t       (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n+\t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fnma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n+  [(set_attr \"type\" \"F\")])\n+\n+(define_expand \"divtf3\"\n+  [(set (match_operand:TF 0 \"fr_register_operand\" \"\")\n+\t(div:TF (match_operand:TF 1 \"fr_register_operand\" \"\")\n+\t\t(match_operand:TF 2 \"fr_register_operand\" \"\")))]\n+  \"TARGET_INLINE_DIV\"\n+  \"\n+{\n+  rtx insn;\n+  if (TARGET_INLINE_DIV_LAT)\n+    insn = gen_divtf3_internal_lat (operands[0], operands[1], operands[2]);\n+  else\n+    insn = gen_divtf3_internal_thr (operands[0], operands[1], operands[2]);\n+  emit_insn (insn);\n+  DONE;\n+}\")\n+\n+(define_insn_and_split \"divtf3_internal_lat\"\n+  [(set (match_operand:TF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:TF (match_operand:TF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:TF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:TF 4 \"=&f\"))\n+   (clobber (match_scratch:TF 5 \"=&f\"))\n+   (clobber (match_scratch:TF 6 \"=&f\"))\n+   (clobber (match_scratch:CC 7 \"=c\"))]\n+  \"TARGET_INLINE_DIV_LAT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 0) (div:TF (const_int 1) (match_dup 2)))\n+\t      (set (match_dup 7) (unspec:CC [(match_dup 1) (match_dup 2)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 0)))\n+\t\t\t      (match_dup 8)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 4) (mult:TF (match_dup 1) (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 5) (mult:TF (match_dup 3) (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 6)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 5) (match_dup 5))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 5)\n+\t\t     (plus:TF (mult:TF (match_dup 6) (match_dup 0))\n+\t\t\t      (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 0)\n+\t\t     (plus:TF (mult:TF (match_dup 5) (match_dup 3))\n+\t\t\t      (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 4)))\n+\t\t\t      (match_dup 1)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 0))\n+\t\t\t      (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 5)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 0)))\n+\t\t\t      (match_dup 8)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 0)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 0))\n+\t\t\t      (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 3)))\n+\t\t\t      (match_dup 1)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 7) (const_int 0))\n+     (set (match_dup 0)\n+\t  (plus:TF (mult:TF (match_dup 4) (match_dup 0))\n+\t\t   (match_dup 3))))\n+  ] \n+  \"operands[8] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n+\n+(define_insn_and_split \"divtf3_internal_thr\"\n+  [(set (match_operand:TF 0 \"fr_register_operand\" \"=&f\")\n+\t(div:TF (match_operand:TF 1 \"fr_register_operand\" \"f\")\n+\t\t(match_operand:TF 2 \"fr_register_operand\" \"f\")))\n+   (clobber (match_scratch:TF 3 \"=&f\"))\n+   (clobber (match_scratch:TF 4 \"=&f\"))\n+   (clobber (match_scratch:CC 5 \"=c\"))]\n+  \"TARGET_INLINE_DIV_THR\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 0) (div:TF (const_int 1) (match_dup 2)))\n+\t      (set (match_dup 5) (unspec:CC [(match_dup 1) (match_dup 2)] 5))\n+\t      (use (const_int 1))])\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 0)))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 0))\n+\t\t\t      (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3) (mult:TF (match_dup 3) (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 4))\n+\t\t\t      (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4) (mult:TF (match_dup 1) (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 0)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 3)))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 0)\n+\t\t     (plus:TF (mult:TF (match_dup 0) (match_dup 3))\n+\t\t\t      (match_dup 3)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 4)))\n+\t\t\t      (match_dup 1)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 3)\n+\t\t     (plus:TF (mult:TF (match_dup 3) (match_dup 0))\n+\t\t\t      (match_dup 4)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 0)))\n+\t\t\t      (match_dup 6)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 0)\n+\t\t     (plus:TF (mult:TF (match_dup 4) (match_dup 0))\n+\t\t\t      (match_dup 0)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (parallel [(set (match_dup 4)\n+\t\t     (plus:TF (neg:TF (mult:TF (match_dup 2) (match_dup 3)))\n+\t\t\t      (match_dup 1)))\n+\t\t(use (const_int 1))]))\n+   (cond_exec (ne (match_dup 5) (const_int 0))\n+     (set (match_dup 0)\n+\t  (plus:TF (mult:TF (match_dup 4) (match_dup 0))\n+\t\t   (match_dup 3))))\n+  ] \n+  \"operands[6] = CONST1_RTX (TFmode);\"\n+  [(set_attr \"predicable\" \"no\")])\n+\n+;; ??? frcpa works like cmp.foo.unc.\n+\n (define_insn \"*recip_approx\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(div:TF (const_int 1)\n@@ -2493,7 +3206,8 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"frcpa.s%4 %0, %1 = %2, %3\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"type\" \"F\")\n+   (set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::"}]}