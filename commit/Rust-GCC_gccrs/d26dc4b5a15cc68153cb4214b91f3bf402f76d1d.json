{"sha": "d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI2ZGM0YjVhMTVjYzY4MTUzY2I0MjE0YjkxZjNiZjQwMmY3NmQxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-12-09T17:22:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-12-09T17:22:27Z"}, "message": "[multiple changes]\n\n2005-12-05  Robert Dewar  <dewar@adacore.com>\n\n\t* i-c.adb, i-cexten.ads, i-cobol.adb, i-cobol.ads, i-cpoint.ads,\n        i-cpp.adb, i-cpp.ads, i-cstrea.ads, i-cstrin.adb, i-cstrin.ads,\n\tinline.adb, interfac.ads, i-os2err.ads, i-os2lib.ads, i-os2syn.ads,\n\ti-os2thr.ads, itypes.adb, itypes.adb, itypes.ads, krunch.ads,\n\tkrunch.adb, lib.adb, lib.ads, lib-list.adb, lib-load.adb,\n\tlib-load.ads, lib-sort.adb, live.adb, make.ads, i-cstrea-vms.adb,\n\tinterfac-vms.ads, makegpr.adb, indepsw-gnu.adb, indepsw.ads,\n\ts-wchcon.ads, sdefault.ads, sem_ch10.adb, sem_eval.ads: Minor\n\treformatting.\n\n2005-12-05  Robert Dewar  <dewar@adacore.com>\n\n\t* s-vaflop-vms-alpha.adb: (Ne_F): New function\n\t(Ne_G): New function\n\n\t* exp_ch4.adb (Expand_Allocator_Expression): Factor duplicated code\n\tfor tag assignment.\n\t(Rewrite_Comparison): Handle case where operation is not a comparison\n\tand ignore, and also handle type conversion case.\n\n2005-12-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_aggr.ads: Fix typo in comment.\n\t???-mark Convert_Aggr_In_Assignment as needing documentation.\n\n2005-12-05  Gary Dismukes  <dismukes@adacore.com>\n\n\t* layout.adb: Replace various uses of byte by storage unit throughout.\n\t(Get_Max_SU_Size): Name changed from Get_Max_Size. In the case of a\n\tstatic size, convert to storage units before returning, to conform to\n\tspec.\n\n2005-12-05  Matthew Gingell  <gingell@adacore.com>\n\n\t* g-exctra.ads: Fix typo in comment.\n\n2005-12-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* utils.c: Minor reformatting.\n\n2005-12-05  Robert Dewar  <dewar@adacore.com>\n\n\t* g-soccon.ads: \n\tFurther comment fixes to make the status of the default file clear\n\n\t* s-bitops.adb: Clarify comment for Bits_Array\n\nFrom-SVN: r108308", "tree": {"sha": "f46bd0af548bfccb03517361320e56ee5495f7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46bd0af548bfccb03517361320e56ee5495f7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/comments", "author": null, "committer": null, "parents": [{"sha": "9c8457a769f1e9d4eb71da6be5780d308a78da19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8457a769f1e9d4eb71da6be5780d308a78da19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8457a769f1e9d4eb71da6be5780d308a78da19"}], "stats": {"total": 933, "additions": 463, "deletions": 470}, "files": [{"sha": "664e654a9993320619763deff7dd3820c65c4717", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,12 +43,9 @@ package Exp_Aggr is\n    --  Decl is an access N_Object_Declaration (produced during\n    --  allocator expansion), Aggr is the initial expression aggregate\n    --  of an allocator. This procedure perform in-place aggregate\n-   --  assignent in the newly allocated object.\n+   --  assignment in the newly allocated object.\n \n    procedure Convert_Aggr_In_Assignment (N : Node_Id);\n-   --  Decl is an access N_Object_Declaration (produced during\n-   --  allocator expansion), Aggr is the initial expression aggregate\n-   --  of an allocator. This procedure perform in-place aggregate\n-   --  assignent in the newly allocated object.\n+   --  ??? documentation needed\n \n end Exp_Aggr;"}, {"sha": "e1da11baedf820ae66feedfe9995b0f1c0300e8d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 115, "deletions": 113, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -192,10 +192,12 @@ package body Exp_Ch4 is\n    --  this by using Convert_To_Actual_Subtype if necessary).\n \n    procedure Rewrite_Comparison (N : Node_Id);\n-   --  N is the node for a compile time comparison. If this outcome of this\n-   --  comparison can be determined at compile time, then the node N can be\n-   --  rewritten with True or False. If the outcome cannot be determined at\n-   --  compile time, the call has no effect.\n+   --  if N is the node for a comparison whose outcome can be determined at\n+   --  compile time, then the node N can be rewritten with True or False. If\n+   --  the outcome cannot be determined at compile time, the call has no\n+   --  effect. If N is a type conversion, then this processing is applied to\n+   --  its expression. If N is neither comparison nor a type conversion, the\n+   --  call has no effect.\n \n    function Tagged_Membership (N : Node_Id) return Node_Id;\n    --  Construct the expression corresponding to the tagged membership test.\n@@ -372,6 +374,12 @@ package body Exp_Ch4 is\n       Node   : Node_Id;\n       Temp   : Entity_Id;\n \n+      TagT : Entity_Id := Empty;\n+      --  Type used as source for tag assignment\n+\n+      TagR : Node_Id := Empty;\n+      --  Target reference for tag assignment\n+\n       Aggr_In_Place : constant Boolean := Is_Delayed_Aggregate (Exp);\n \n       Tag_Assign : Node_Id;\n@@ -484,61 +492,46 @@ package body Exp_Ch4 is\n                  Reason => PE_Accessibility_Check_Failed));\n          end if;\n \n-         --  Suppress the tag assignment when Java_VM because JVM tags\n-         --  are represented implicitly in objects.\n+         if Java_VM then\n \n-         if Is_Tagged_Type (T)\n-           and then not Is_Class_Wide_Type (T)\n-           and then not Java_VM\n+            --  Suppress the tag assignment when Java_VM because JVM tags\n+            --  are represented implicitly in objects.\n+\n+            null;\n+\n+         elsif Is_Tagged_Type (T) and then not Is_Class_Wide_Type (T) then\n+            TagT := T;\n+            TagR := New_Reference_To (Temp, Loc);\n+\n+         elsif Is_Private_Type (T)\n+           and then Is_Tagged_Type (Underlying_Type (T))\n          then\n+            TagT := Underlying_Type (T);\n+            TagR := Unchecked_Convert_To (Underlying_Type (T),\n+                      Make_Explicit_Dereference (Loc,\n+                        New_Reference_To (Temp, Loc)));\n+\n+         end if;\n+\n+         if Present (TagT) then\n             Tag_Assign :=\n               Make_Assignment_Statement (Loc,\n                 Name =>\n                   Make_Selected_Component (Loc,\n-                    Prefix => New_Reference_To (Temp, Loc),\n+                    Prefix => TagR,\n                     Selector_Name =>\n-                      New_Reference_To (First_Tag_Component (T), Loc)),\n+                      New_Reference_To (First_Tag_Component (TagT), Loc)),\n \n                 Expression =>\n                   Unchecked_Convert_To (RTE (RE_Tag),\n                     New_Reference_To\n-                      (Elists.Node (First_Elmt (Access_Disp_Table (T))),\n+                      (Elists.Node (First_Elmt (Access_Disp_Table (TagT))),\n                        Loc)));\n \n             --  The previous assignment has to be done in any case\n \n             Set_Assignment_OK (Name (Tag_Assign));\n             Insert_Action (N, Tag_Assign);\n-\n-         elsif Is_Private_Type (T)\n-           and then Is_Tagged_Type (Underlying_Type (T))\n-           and then not Java_VM\n-         then\n-            declare\n-               Utyp : constant Entity_Id := Underlying_Type (T);\n-               Ref  : constant Node_Id :=\n-                        Unchecked_Convert_To (Utyp,\n-                          Make_Explicit_Dereference (Loc,\n-                            New_Reference_To (Temp, Loc)));\n-\n-            begin\n-               Tag_Assign :=\n-                 Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     Make_Selected_Component (Loc,\n-                       Prefix => Ref,\n-                       Selector_Name =>\n-                         New_Reference_To (First_Tag_Component (Utyp), Loc)),\n-\n-                   Expression =>\n-                     Unchecked_Convert_To (RTE (RE_Tag),\n-                       New_Reference_To (\n-                         Elists.Node (First_Elmt (Access_Disp_Table (Utyp))),\n-                         Loc)));\n-\n-               Set_Assignment_OK (Name (Tag_Assign));\n-               Insert_Action (N, Tag_Assign);\n-            end;\n          end if;\n \n          if Controlled_Type (DesigT)\n@@ -3530,7 +3523,6 @@ package body Exp_Ch4 is\n             Parnt := Parent (Child);\n          end loop;\n       end;\n-\n    end Expand_N_Indexed_Component;\n \n    ---------------------\n@@ -4570,12 +4562,9 @@ package body Exp_Ch4 is\n          end if;\n       end if;\n \n-      --  If we still have an equality comparison (i.e. it was not rewritten\n-      --  in some way), then we can test if result is known at compile time).\n+      --  Test if result is known at compile time\n \n-      if Nkind (N) = N_Op_Eq then\n-         Rewrite_Comparison (N);\n-      end if;\n+      Rewrite_Comparison (N);\n \n       --  If we still have comparison for Vax_Float, process it\n \n@@ -8010,78 +7999,91 @@ package body Exp_Ch4 is\n    ------------------------\n \n    procedure Rewrite_Comparison (N : Node_Id) is\n-      Typ : constant Entity_Id := Etype (N);\n-      Op1 : constant Node_Id   := Left_Opnd (N);\n-      Op2 : constant Node_Id   := Right_Opnd (N);\n+   begin\n+      if Nkind (N) = N_Type_Conversion then\n+         Rewrite_Comparison (Expression (N));\n \n-      Res : constant Compare_Result := Compile_Time_Compare (Op1, Op2);\n-      --  Res indicates if compare outcome can be determined at compile time\n+      elsif Nkind (N) not in N_Op_Compare then\n+         null;\n \n-      True_Result  : Boolean;\n-      False_Result : Boolean;\n+      else\n+         declare\n+            Typ : constant Entity_Id := Etype (N);\n+            Op1 : constant Node_Id   := Left_Opnd (N);\n+            Op2 : constant Node_Id   := Right_Opnd (N);\n \n-   begin\n-      case N_Op_Compare (Nkind (N)) is\n-         when N_Op_Eq =>\n-            True_Result  := Res = EQ;\n-            False_Result := Res = LT or else Res = GT or else Res = NE;\n-\n-         when N_Op_Ge =>\n-            True_Result  := Res in Compare_GE;\n-            False_Result := Res = LT;\n-\n-            if Res = LE\n-              and then Constant_Condition_Warnings\n-              and then Comes_From_Source (Original_Node (N))\n-              and then Nkind (Original_Node (N)) = N_Op_Ge\n-              and then not In_Instance\n-              and then not Warnings_Off (Etype (Left_Opnd (N)))\n-              and then Is_Integer_Type (Etype (Left_Opnd (N)))\n-            then\n-               Error_Msg_N\n-                 (\"can never be greater than, could replace by \"\"'=\"\"?\", N);\n-            end if;\n+            Res : constant Compare_Result := Compile_Time_Compare (Op1, Op2);\n+            --  Res indicates if compare outcome can be compile time determined\n \n-         when N_Op_Gt =>\n-            True_Result  := Res = GT;\n-            False_Result := Res in Compare_LE;\n-\n-         when N_Op_Lt =>\n-            True_Result  := Res = LT;\n-            False_Result := Res in Compare_GE;\n-\n-         when N_Op_Le =>\n-            True_Result  := Res in Compare_LE;\n-            False_Result := Res = GT;\n-\n-            if Res = GE\n-              and then Constant_Condition_Warnings\n-              and then Comes_From_Source (Original_Node (N))\n-              and then Nkind (Original_Node (N)) = N_Op_Le\n-              and then not In_Instance\n-              and then not Warnings_Off (Etype (Left_Opnd (N)))\n-              and then Is_Integer_Type (Etype (Left_Opnd (N)))\n-            then\n-               Error_Msg_N\n-                 (\"can never be less than, could replace by \"\"'=\"\"?\", N);\n-            end if;\n+            True_Result  : Boolean;\n+            False_Result : Boolean;\n \n-         when N_Op_Ne =>\n-            True_Result  := Res = NE or else Res = GT or else Res = LT;\n-            False_Result := Res = EQ;\n-      end case;\n+         begin\n+            case N_Op_Compare (Nkind (N)) is\n+            when N_Op_Eq =>\n+               True_Result  := Res = EQ;\n+               False_Result := Res = LT or else Res = GT or else Res = NE;\n+\n+            when N_Op_Ge =>\n+               True_Result  := Res in Compare_GE;\n+               False_Result := Res = LT;\n+\n+               if Res = LE\n+                 and then Constant_Condition_Warnings\n+                 and then Comes_From_Source (Original_Node (N))\n+                 and then Nkind (Original_Node (N)) = N_Op_Ge\n+                 and then not In_Instance\n+                 and then not Warnings_Off (Etype (Left_Opnd (N)))\n+                 and then Is_Integer_Type (Etype (Left_Opnd (N)))\n+               then\n+                  Error_Msg_N\n+                    (\"can never be greater than, could replace by \"\"'=\"\"?\", N);\n+               end if;\n \n-      if True_Result then\n-         Rewrite (N,\n-           Convert_To (Typ, New_Occurrence_Of (Standard_True, Sloc (N))));\n-         Analyze_And_Resolve (N, Typ);\n-         Warn_On_Known_Condition (N);\n+            when N_Op_Gt =>\n+               True_Result  := Res = GT;\n+               False_Result := Res in Compare_LE;\n+\n+            when N_Op_Lt =>\n+               True_Result  := Res = LT;\n+               False_Result := Res in Compare_GE;\n+\n+            when N_Op_Le =>\n+               True_Result  := Res in Compare_LE;\n+               False_Result := Res = GT;\n+\n+               if Res = GE\n+                 and then Constant_Condition_Warnings\n+                 and then Comes_From_Source (Original_Node (N))\n+                 and then Nkind (Original_Node (N)) = N_Op_Le\n+                 and then not In_Instance\n+                 and then not Warnings_Off (Etype (Left_Opnd (N)))\n+                 and then Is_Integer_Type (Etype (Left_Opnd (N)))\n+               then\n+                  Error_Msg_N\n+                    (\"can never be less than, could replace by \"\"'=\"\"?\", N);\n+               end if;\n \n-      elsif False_Result then\n-         Rewrite (N,\n-           Convert_To (Typ, New_Occurrence_Of (Standard_False, Sloc (N))));\n-         Analyze_And_Resolve (N, Typ);\n-         Warn_On_Known_Condition (N);\n+            when N_Op_Ne =>\n+               True_Result  := Res = NE or else Res = GT or else Res = LT;\n+               False_Result := Res = EQ;\n+            end case;\n+\n+            if True_Result then\n+               Rewrite (N,\n+                 Convert_To (Typ,\n+                   New_Occurrence_Of (Standard_True, Sloc (N))));\n+               Analyze_And_Resolve (N, Typ);\n+               Warn_On_Known_Condition (N);\n+\n+            elsif False_Result then\n+               Rewrite (N,\n+                 Convert_To (Typ,\n+                   New_Occurrence_Of (Standard_False, Sloc (N))));\n+               Analyze_And_Resolve (N, Typ);\n+               Warn_On_Known_Condition (N);\n+            end if;\n+         end;\n       end if;\n    end Rewrite_Comparison;\n "}, {"sha": "eb0d5a6c4289ab2d4c6915130193e038d416f8a7", "filename": "gcc/ada/g-exctra.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fg-exctra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fg-exctra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exctra.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -44,7 +44,7 @@\n --  The default backtrace is in the form of absolute code locations which may\n --  be converted to corresponding source locations using the addr2line utility\n --  or from within GDB. Please refer to GNAT.Traceback for information about\n---  what is necessary to be able to exploit thisg possibility.\n+--  what is necessary to be able to exploit this possibility.\n \n --  The backtrace output can also be customized by way of a \"decorator\" which\n --  may return any string output in association with a provided call chain."}, {"sha": "679a98613a8279d17ba071745754f8fa6cb239db", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -36,11 +36,12 @@\n --  directly with'ed by an applications program.\n \n --  WARNING! This file is a default version that must be replaced for\n---  each platform.\n---  The values below were computed from a i686-pc-linux-gnu environment.\n+--  each platform by running gen-soccon.c which automatically generates\n+--  the appropriate target specific values.\n \n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n+--  The values below were computed from a i686-pc-linux-gnu environment,\n+--  but are for illustration purposes only. As noted above, part of a port\n+--  to a new target is to replace this file appropriately.\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "82687568b95463024caed441d6338b9d40e2e265", "filename": "gcc/ada/i-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d331fbd08302b6c029c8d433a2da38e3c3f7c4af", "filename": "gcc/ada/i-cexten.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cexten.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "758c5066a01c77067f3984b04862da5dde69d926", "filename": "gcc/ada/i-cobol.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cobol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cobol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "34ef56da6aa8ec129a8384916f04a0a1b781aae1", "filename": "gcc/ada/i-cobol.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cobol.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cobol.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                             (ASCII Version)                              --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "80c2bfb27b8cde3d0bcedb0eba071518eb471b0c", "filename": "gcc/ada/i-cpoint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpoint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpoint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "55f4d3a68c53276f71ae33179b3841c7f8efa265", "filename": "gcc/ada/i-cpp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f5c42533c1edf030116441dd392a0aa8059a6199", "filename": "gcc/ada/i-cpp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1266280dadb54badfdce836829dc7cc55c406d65", "filename": "gcc/ada/i-cstrea-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrea-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrea-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea-vms.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a7a30b2d3c40698de169cc0ba81d181c62d7e485", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1995-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "226661f47621b4d59865cdfba1b36ee123325dfb", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5ea063ab0ef220ff9bddb7731fdb4441c69235cc", "filename": "gcc/ada/i-cstrin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-cstrin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "f837224ae6b4dd5adda4c514590b231e09345939", "filename": "gcc/ada/i-os2err.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2err.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---           Copyright (C) 1993-2005 Free Software Foundation, Inc.         --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ac5a65433ebfde8748db401ff5fdcda1e1ee02b0", "filename": "gcc/ada/i-os2lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2lib.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9dfa2c6dfe0d85b57d629a55b236afda2b223d83", "filename": "gcc/ada/i-os2syn.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2syn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2syn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2syn.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "97ac453d9fb507ab94fe988d18c50937dda8a01b", "filename": "gcc/ada/i-os2thr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2thr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fi-os2thr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2thr.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5698461ea48610ce9bb4bdcd1b22e2762bb2f5f8", "filename": "gcc/ada/indepsw-gnu.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Findepsw-gnu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Findepsw-gnu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Findepsw-gnu.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                              (GNU version)                               --\n --                                                                          --\n---            Copyright (C) 2005 Free Software Foundation, Inc.             --\n+--            Copyright (C) 2005, Free Software Foundation, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ecab5bb75e0b080fd9569af74b1c5166a083c422", "filename": "gcc/ada/indepsw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Findepsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Findepsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Findepsw.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7847a1577d68bf0d4ad57cc7433dfb22116b4637", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bdd0c59c72a1e22ae8d93e5a31c1abd2b1caf048", "filename": "gcc/ada/interfac-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finterfac-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finterfac-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac-vms.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "2f0cdf0459492e829586bd240c4c6ce6f0beb891", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "4b65da2c7578f8bcc6f8f4c3ecd95c99075f2906", "filename": "gcc/ada/itypes.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,11 +24,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;    use Atree;\n-with Opt;      use Opt;\n-with Sem;      use Sem;\n-with Sinfo;    use Sinfo;\n-with Stand;    use Stand;\n+with Atree; use Atree;\n+with Opt;   use Opt;\n+with Sem;   use Sem;\n+with Sinfo; use Sinfo;\n+with Stand; use Stand;\n \n package body Itypes is\n \n@@ -42,8 +42,7 @@ package body Itypes is\n       Related_Id   : Entity_Id := Empty;\n       Suffix       : Character := ' ';\n       Suffix_Index : Nat       := 0;\n-      Scope_Id     : Entity_Id := Current_Scope)\n-      return         Entity_Id\n+      Scope_Id     : Entity_Id := Current_Scope) return Entity_Id\n    is\n       Typ : Entity_Id;\n \n@@ -90,20 +89,19 @@ package body Itypes is\n                              Related_Nod => Related_Nod,\n                              Scope_Id    => Scope_Id);\n \n-      Set_Directly_Designated_Type (I_Typ,\n-         Directly_Designated_Type (T));\n-      Set_Etype              (I_Typ, T);\n-      Init_Size_Align        (I_Typ);\n-      Set_Depends_On_Private (I_Typ, Depends_On_Private (T));\n-      Set_Is_Public          (I_Typ, Is_Public (T));\n-      Set_From_With_Type     (I_Typ, From_With_Type (T));\n-      Set_Is_Access_Constant (I_Typ, Is_Access_Constant (T));\n-      Set_Is_Generic_Type    (I_Typ, Is_Generic_Type (T));\n-      Set_Is_Volatile        (I_Typ, Is_Volatile (T));\n-      Set_Treat_As_Volatile  (I_Typ, Treat_As_Volatile (T));\n-      Set_Is_Atomic          (I_Typ, Is_Atomic (T));\n-      Set_Is_Ada_2005        (I_Typ, Is_Ada_2005 (T));\n-      Set_Can_Never_Be_Null  (I_Typ);\n+      Set_Directly_Designated_Type (I_Typ, Directly_Designated_Type (T));\n+      Set_Etype                    (I_Typ, T);\n+      Init_Size_Align              (I_Typ);\n+      Set_Depends_On_Private       (I_Typ, Depends_On_Private (T));\n+      Set_Is_Public                (I_Typ, Is_Public (T));\n+      Set_From_With_Type           (I_Typ, From_With_Type (T));\n+      Set_Is_Access_Constant       (I_Typ, Is_Access_Constant (T));\n+      Set_Is_Generic_Type          (I_Typ, Is_Generic_Type (T));\n+      Set_Is_Volatile              (I_Typ, Is_Volatile (T));\n+      Set_Treat_As_Volatile        (I_Typ, Treat_As_Volatile (T));\n+      Set_Is_Atomic                (I_Typ, Is_Atomic (T));\n+      Set_Is_Ada_2005              (I_Typ, Is_Ada_2005 (T));\n+      Set_Can_Never_Be_Null        (I_Typ);\n \n       return I_Typ;\n    end Create_Null_Excluding_Itype;"}, {"sha": "453a35b218ff71a777fbb6579d864f69e1c67459", "filename": "gcc/ada/itypes.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fitypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fitypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,8 +85,7 @@ package Itypes is\n       Related_Id   : Entity_Id := Empty;\n       Suffix       : Character := ' ';\n       Suffix_Index : Nat       := 0;\n-      Scope_Id     : Entity_Id := Current_Scope)\n-      return         Entity_Id;\n+      Scope_Id     : Entity_Id := Current_Scope) return Entity_Id;\n    --  Used to create a new Itype.\n    --\n    --   Related_Nod is the node for which this Itype was created.  It is"}, {"sha": "53d6285f4100cfdcaee96b0460d898338d3c9e35", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Hostparm;\n+\n procedure Krunch\n   (Buffer    : in out String;\n    Len       : in out Natural;"}, {"sha": "f5dbdb9a876961293eea891627198016d3ca87d8", "filename": "gcc/ada/krunch.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fkrunch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fkrunch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b24b4d80010dc6989e2b69c1ef97ae6aff29c05e", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -107,7 +107,7 @@ package body Layout is\n    --  dynamic sizes in storage units. If the argument N is anything other\n    --  than an integer literal, it is returned unchanged, but if it is an\n    --  integer literal, then it is taken as a size in bits, and is replaced\n-   --  by the corresponding size in bytes.\n+   --  by the corresponding size in storage units.\n \n    function Compute_Length (Lo : Node_Id; Hi : Node_Id) return Node_Id;\n    --  Given expressions for the low bound (Lo) and the high bound (Hi),\n@@ -154,7 +154,7 @@ package body Layout is\n    --  resolved (which may not be the case yet if we build the expression\n    --  in this unit).\n \n-   function Get_Max_Size (E : Entity_Id) return Node_Id;\n+   function Get_Max_SU_Size (E : Entity_Id) return Node_Id;\n    --  E is an array type or subtype that has at least one index bound that\n    --  is the value of a record discriminant. For such an array, the function\n    --  computes an expression that yields the maximum possible size of the\n@@ -222,18 +222,19 @@ package body Layout is\n          Esize_Set := Has_Size_Clause (E);\n       end if;\n \n-      --  If size is known it must be a multiple of the byte size\n+      --  If size is known it must be a multiple of the storage unit size\n \n       if Esize (E) mod SSU /= 0 then\n \n          --  If not, and size specified, then give error\n \n          if Esize_Set then\n             Error_Msg_NE\n-              (\"size for& not a multiple of byte size\", Size_Clause (E), E);\n+              (\"size for& not a multiple of storage unit size\",\n+               Size_Clause (E), E);\n             return;\n \n-         --  Otherwise bump up size to a byte boundary\n+         --  Otherwise bump up size to a storage unit boundary\n \n          else\n             Set_Esize (E, (Esize (E) + SSU - 1) / SSU * SSU);\n@@ -270,7 +271,7 @@ package body Layout is\n \n       --  In this situation, the initial alignment of t is 4, copied from\n       --  the Integer base type, but it is safe to reduce it to 1 at this\n-      --  stage, since we will only be loading a single byte.\n+      --  stage, since we will only be loading a single storage unit.\n \n       if Is_Discrete_Type (Etype (E))\n         and then not Has_Alignment_Clause (E)\n@@ -652,11 +653,11 @@ package body Layout is\n       end if;\n    end Expr_From_SO_Ref;\n \n-   ------------------\n-   -- Get_Max_Size --\n-   ------------------\n+   ---------------------\n+   -- Get_Max_SU_Size --\n+   ---------------------\n \n-   function Get_Max_Size (E : Entity_Id) return Node_Id is\n+   function Get_Max_SU_Size (E : Entity_Id) return Node_Id is\n       Loc  : constant Source_Ptr := Sloc (E);\n       Indx : Node_Id;\n       Ityp : Entity_Id;\n@@ -725,7 +726,7 @@ package body Layout is\n          end if;\n       end Min_Discrim;\n \n-   --  Start of processing for Get_Max_Size\n+   --  Start of processing for Get_Max_SU_Size\n \n    begin\n       pragma Assert (Size_Depends_On_Discriminant (E));\n@@ -859,10 +860,10 @@ package body Layout is\n       end loop;\n \n       --  Here after processing all bounds to set sizes. If the value is\n-      --  a constant, then it is bits, and we just return the value.\n+      --  a constant, then it is bits, so we convert to storage units.\n \n       if Size.Status = Const then\n-         return Make_Integer_Literal (Loc, Size.Val);\n+         return Bits_To_SU (Make_Integer_Literal (Loc, Size.Val));\n \n       --  Case where the value is dynamic\n \n@@ -884,7 +885,7 @@ package body Layout is\n \n          return Size.Nod;\n       end if;\n-   end Get_Max_Size;\n+   end Get_Max_SU_Size;\n \n    -----------------------\n    -- Layout_Array_Type --\n@@ -1480,7 +1481,7 @@ package body Layout is\n                --  Get maximum size of previous component\n \n                if Size_Depends_On_Discriminant (Etype (Prev_Comp)) then\n-                  Old_Maxsz := Get_Max_Size (Etype (Prev_Comp));\n+                  Old_Maxsz := Get_Max_SU_Size (Etype (Prev_Comp));\n                else\n                   Old_Maxsz := Expr_From_SO_Ref (Loc, Old_Esiz, Prev_Comp);\n                end if;\n@@ -2556,7 +2557,7 @@ package body Layout is\n \n                --  For scalar types, increase Object_Size to power of 2,\n                --  but not less than a storage unit in any case (i.e.,\n-               --  normally this means it will be byte addressable).\n+               --  normally this means it will be storage-unit addressable).\n \n                if Is_Scalar_Type (E) then\n                   if Size <= System_Storage_Unit then\n@@ -2717,7 +2718,8 @@ package body Layout is\n \n          --  Size is known, alignment is not set\n \n-         --  Reset alignment to match size if size is exactly 2, 4, or 8 bytes\n+         --  Reset alignment to match size if size is exactly 2, 4, or 8\n+         --  storage units.\n \n          if Siz = 2 * System_Storage_Unit then\n             Align := 2;"}, {"sha": "479a51e9791f81c3d7a705398e86c87f73881ad3", "filename": "gcc/ada/lib-list.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-list.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-list.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-list.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "248c5fcf9015804d9161a62dc2776d223a0d2610", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cd8555827de9d808e51793a5abb102a8cb2c641b", "filename": "gcc/ada/lib-load.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-load.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-load.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b5925165542114035cdad07bdf04d3ba5efb6985", "filename": "gcc/ada/lib-sort.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-sort.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib-sort.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-sort.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e02ebb0ed005c89b9c5bd863459b13e88535582c", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "159ccc317c04036f0e7d8e5f94c96cdce3d9e52a", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ceccbc0e6bc7a63140b5e7ed3cfa350ac70f627c", "filename": "gcc/ada/live.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flive.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Flive.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flive.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "aba233db74f7eeed0c38e71bca27ac49fa9fdc4c", "filename": "gcc/ada/make.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fmake.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fmake.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c96396defb1239e08303eb7f745508b86ce38448", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---       Copyright (C) 2004-2005 Free Software Foundation, Inc.             --\n+--          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e5f33b118f915a2d1ab666e2056426dc96bfb100", "filename": "gcc/ada/s-bitops.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -40,12 +40,13 @@ with Unchecked_Conversion;\n package body System.Bit_Ops is\n \n    subtype Bits_Array is System.Unsigned_Types.Packed_Bytes1 (Positive);\n-   --  Constrained array used to interpret the address values. We use the\n+   --  Dummy array type used to interpret the address values. We use the\n    --  unaligned version always, since this will handle both the aligned and\n    --  unaligned cases, and we always do these operations by bytes anyway.\n    --  Note: we use a ones origin array here so that the computations of the\n    --  length in bytes work correctly (give a non-negative value) for the\n-   --  case of zero length bit strings).\n+   --  case of zero length bit strings). Note that we never allocate any\n+   --  objects of this type (we can't because they would be absurdly big).\n \n    type Bits is access Bits_Array;\n    --  This is the actual type into which address values are converted"}, {"sha": "92e62734ee75ef9c6392954d47d644ee84685b13", "filename": "gcc/ada/s-vaflop-vms-alpha.adb", "status": "modified", "additions": 50, "deletions": 51, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop-vms-alpha.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n --                       (Version for Alpha OpenVMS)                        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n@@ -58,14 +58,16 @@ package body System.Vax_Float_Operations is\n    --  we define variables of the corresponding IEEE type so that they are\n    --  passed and kept in the proper register class.\n \n+   Debug_String_Buffer : String (1 .. 32);\n+   --  Buffer used by all Debug_String_x routines for returning result\n+\n    ------------\n    -- D_To_G --\n    ------------\n \n    function D_To_G (X : D) return G is\n       A, B : T;\n-      C : G;\n-\n+      C    : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), D'Asm_Input (\"m\", X));\n       Asm (\"cvtdg %1,%0\", T'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -80,7 +82,6 @@ package body System.Vax_Float_Operations is\n    function F_To_G (X : F) return G is\n       A : T;\n       B : G;\n-\n    begin\n       Asm (\"ldf %0,%1\", T'Asm_Output (\"=f\", A), F'Asm_Input (\"m\", X));\n       Asm (\"stg %1,%0\", G'Asm_Output (\"=m\", B), T'Asm_Input (\"f\", A));\n@@ -98,6 +99,7 @@ package body System.Vax_Float_Operations is\n    begin\n       --  Because converting to a wider FP format is a no-op, we say\n       --  A is 64-bit even though we are loading 32 bits into it.\n+\n       Asm (\"ldf %0,%1\", T'Asm_Output (\"=f\", A), F'Asm_Input (\"m\", X));\n \n       B := S (Cvt_G_T (A));\n@@ -110,8 +112,7 @@ package body System.Vax_Float_Operations is\n \n    function G_To_D (X : G) return D is\n       A, B : T;\n-      C : D;\n-\n+      C    : D;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       Asm (\"cvtgd %1,%0\", T'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -127,7 +128,6 @@ package body System.Vax_Float_Operations is\n       A : T;\n       B : S;\n       C : F;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       Asm (\"cvtgf %1,%0\", S'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -142,7 +142,6 @@ package body System.Vax_Float_Operations is\n    function G_To_Q (X : G) return Q is\n       A : T;\n       B : Q;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       Asm (\"cvtgq %1,%0\", Q'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -155,7 +154,6 @@ package body System.Vax_Float_Operations is\n \n    function G_To_T (X : G) return T is\n       A, B : T;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       B := Cvt_G_T (A);\n@@ -178,7 +176,6 @@ package body System.Vax_Float_Operations is\n    function Q_To_F (X : Q) return F is\n       A : S;\n       B : F;\n-\n    begin\n       Asm (\"cvtqf %1,%0\", S'Asm_Output (\"=f\", A), Q'Asm_Input (\"f\", X));\n       Asm (\"stf %1,%0\", F'Asm_Output (\"=m\", B), S'Asm_Input (\"f\", A));\n@@ -192,7 +189,6 @@ package body System.Vax_Float_Operations is\n    function Q_To_G (X : Q) return G is\n       A : T;\n       B : G;\n-\n    begin\n       Asm (\"cvtqg %1,%0\", T'Asm_Output (\"=f\", A), Q'Asm_Input (\"f\", X));\n       Asm (\"stg %1,%0\", G'Asm_Output (\"=m\", B), T'Asm_Input (\"f\", A));\n@@ -206,7 +202,6 @@ package body System.Vax_Float_Operations is\n    function S_To_F (X : S) return F is\n       A : S;\n       B : F;\n-\n    begin\n       A := Cvt_T_F (T (X));\n       Asm (\"stf %1,%0\", F'Asm_Output (\"=m\", B), S'Asm_Input (\"f\", A));\n@@ -229,7 +224,6 @@ package body System.Vax_Float_Operations is\n    function T_To_G (X : T) return G is\n       A : T;\n       B : G;\n-\n    begin\n       A := Cvt_T_G (X);\n       Asm (\"stg %1,%0\", G'Asm_Output (\"=m\", B), T'Asm_Input (\"f\", A));\n@@ -242,8 +236,7 @@ package body System.Vax_Float_Operations is\n \n    function Abs_F (X : F) return F is\n       A, B : S;\n-      C : F;\n-\n+      C    : F;\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", A), F'Asm_Input (\"m\", X));\n       Asm (\"cpys $f31,%1,%0\", S'Asm_Output (\"=f\", B), S'Asm_Input (\"f\", A));\n@@ -257,8 +250,7 @@ package body System.Vax_Float_Operations is\n \n    function Abs_G (X : G) return G is\n       A, B : T;\n-      C : G;\n-\n+      C    : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       Asm (\"cpys $f31,%1,%0\", T'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -272,8 +264,7 @@ package body System.Vax_Float_Operations is\n \n    function Add_F (X, Y : F) return F is\n       X1, Y1, R : S;\n-      R1 : F;\n-\n+      R1        : F;\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -289,8 +280,7 @@ package body System.Vax_Float_Operations is\n \n    function Add_G (X, Y : G) return G is\n       X1, Y1, R : T;\n-      R1 : G;\n-\n+      R1        : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -331,13 +321,9 @@ package body System.Vax_Float_Operations is\n    -- Debug_String_D --\n    --------------------\n \n-   Debug_String_Buffer : String (1 .. 32);\n-   --  Buffer used by all Debug_String_x routines for returning result\n-\n    function Debug_String_D (Arg : D) return System.Address is\n-      Image_String : constant String := D'Image (Arg) & ASCII.NUL;\n+      Image_String : constant String  := D'Image (Arg) & ASCII.NUL;\n       Image_Size   : constant Integer := Image_String'Length;\n-\n    begin\n       Debug_String_Buffer (1 .. Image_Size) := Image_String;\n       return Debug_String_Buffer (1)'Address;\n@@ -348,9 +334,8 @@ package body System.Vax_Float_Operations is\n    --------------------\n \n    function Debug_String_F (Arg : F) return System.Address is\n-      Image_String : constant String := F'Image (Arg) & ASCII.NUL;\n+      Image_String : constant String  := F'Image (Arg) & ASCII.NUL;\n       Image_Size   : constant Integer := Image_String'Length;\n-\n    begin\n       Debug_String_Buffer (1 .. Image_Size) := Image_String;\n       return Debug_String_Buffer (1)'Address;\n@@ -361,9 +346,8 @@ package body System.Vax_Float_Operations is\n    --------------------\n \n    function Debug_String_G (Arg : G) return System.Address is\n-      Image_String : constant String := G'Image (Arg) & ASCII.NUL;\n+      Image_String : constant String  := G'Image (Arg) & ASCII.NUL;\n       Image_Size   : constant Integer := Image_String'Length;\n-\n    begin\n       Debug_String_Buffer (1 .. Image_Size) := Image_String;\n       return Debug_String_Buffer (1)'Address;\n@@ -375,8 +359,7 @@ package body System.Vax_Float_Operations is\n \n    function Div_F (X, Y : F) return F is\n       X1, Y1, R : S;\n-\n-      R1 : F;\n+      R1        : F;\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -392,8 +375,7 @@ package body System.Vax_Float_Operations is\n \n    function Div_G (X, Y : G) return G is\n       X1, Y1, R : T;\n-      R1 : G;\n-\n+      R1        : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -409,7 +391,6 @@ package body System.Vax_Float_Operations is\n \n    function Eq_F (X, Y : F) return Boolean is\n       X1, Y1, R : S;\n-\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -424,7 +405,6 @@ package body System.Vax_Float_Operations is\n \n    function Eq_G (X, Y : G) return Boolean is\n       X1, Y1, R : T;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -439,7 +419,6 @@ package body System.Vax_Float_Operations is\n \n    function Le_F (X, Y : F) return Boolean is\n       X1, Y1, R : S;\n-\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -454,7 +433,6 @@ package body System.Vax_Float_Operations is\n \n    function Le_G (X, Y : G) return Boolean is\n       X1, Y1, R : T;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -469,7 +447,6 @@ package body System.Vax_Float_Operations is\n \n    function Lt_F (X, Y : F) return Boolean is\n       X1, Y1, R : S;\n-\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -484,7 +461,6 @@ package body System.Vax_Float_Operations is\n \n    function Lt_G (X, Y : G) return Boolean is\n       X1, Y1, R : T;\n-\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -499,8 +475,7 @@ package body System.Vax_Float_Operations is\n \n    function Mul_F (X, Y : F) return F is\n       X1, Y1, R : S;\n-      R1 : F;\n-\n+      R1        : F;\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n@@ -516,8 +491,7 @@ package body System.Vax_Float_Operations is\n \n    function Mul_G (X, Y : G) return G is\n       X1, Y1, R : T;\n-      R1 : G;\n-\n+      R1        : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n@@ -527,14 +501,41 @@ package body System.Vax_Float_Operations is\n       return R1;\n    end Mul_G;\n \n+   ----------\n+   -- Ne_F --\n+   ----------\n+\n+   function Ne_F (X, Y : F) return Boolean is\n+      X1, Y1, R : S;\n+   begin\n+      Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n+      Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", Y1), F'Asm_Input (\"m\", Y));\n+      Asm (\"cmpgeq %1,%2,%0\", S'Asm_Output (\"=f\", R),\n+           (S'Asm_Input (\"f\", X1), S'Asm_Input (\"f\", Y1)));\n+      return R = 0.0;\n+   end Ne_F;\n+\n+   ----------\n+   -- Ne_G --\n+   ----------\n+\n+   function Ne_G (X, Y : G) return Boolean is\n+      X1, Y1, R : T;\n+   begin\n+      Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n+      Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));\n+      Asm (\"cmpgeq %1,%2,%0\", T'Asm_Output (\"=f\", R),\n+           (T'Asm_Input (\"f\", X1), T'Asm_Input (\"f\", Y1)));\n+      return R = 0.0;\n+   end Ne_G;\n+\n    -----------\n    -- Neg_F --\n    -----------\n \n    function Neg_F (X : F) return F is\n       A, B : S;\n-      C : F;\n-\n+      C    : F;\n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", A), F'Asm_Input (\"m\", X));\n       Asm (\"cpysn %1,%1,%0\", S'Asm_Output (\"=f\", B), S'Asm_Input (\"f\", A));\n@@ -548,8 +549,7 @@ package body System.Vax_Float_Operations is\n \n    function Neg_G (X : G) return G is\n       A, B : T;\n-      C : G;\n-\n+      C    : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", A), G'Asm_Input (\"m\", X));\n       Asm (\"cpysn %1,%1,%0\", T'Asm_Output (\"=f\", B), T'Asm_Input (\"f\", A));\n@@ -590,7 +590,7 @@ package body System.Vax_Float_Operations is\n \n    function Sub_F (X, Y : F) return F is\n       X1, Y1, R : S;\n-      R1 : F;\n+      R1        : F;\n \n    begin\n       Asm (\"ldf %0,%1\", S'Asm_Output (\"=f\", X1), F'Asm_Input (\"m\", X));\n@@ -607,8 +607,7 @@ package body System.Vax_Float_Operations is\n \n    function Sub_G (X, Y : G) return G is\n       X1, Y1, R : T;\n-      R1 : G;\n-\n+      R1        : G;\n    begin\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", X1), G'Asm_Input (\"m\", X));\n       Asm (\"ldg %0,%1\", T'Asm_Output (\"=f\", Y1), G'Asm_Input (\"m\", Y));"}, {"sha": "b5fdba04bfd01183e83da3eb12fc3d1e37396f8c", "filename": "gcc/ada/s-wchcon.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -171,7 +171,7 @@ package System.WCh_Con is\n \n    subtype WC_ESC_Encoding_Method is\n      WC_Encoding_Method range WCEM_Hex .. WCEM_Hex;\n-   --  Encoding methods using an ESC character at the start of the sequence.\n+   --  Encoding methods using an ESC character at the start of the sequence\n \n    subtype WC_Upper_Half_Encoding_Method is\n      WC_Encoding_Method range WCEM_Upper .. WCEM_UTF8;"}, {"sha": "2a6fd4b1fd531d65b47ad4bb65ff9f20392d6c22", "filename": "gcc/ada/sdefault.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsdefault.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsdefault.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsdefault.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1999 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,15 +24,15 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Types; use Types;\n-package Sdefault is\n+--  This package contains functions that return the default values for the\n+--  include and object file directories, target name, default library\n+--  subdirectory (libsubdir) prefix, and the target OS.\n \n-   --  This package contains functions that return the default values for\n-   --  the include and object file directories, target name, and the default\n-   --  library subdirectory (libsubdir) prefix.\n+with Types; use Types;\n \n+package Sdefault is\n    function Include_Dir_Default_Name return String_Ptr;\n-   function Object_Dir_Default_Name return String_Ptr;\n-   function Target_Name return String_Ptr;\n-   function Search_Dir_Prefix return String_Ptr;\n+   function Object_Dir_Default_Name  return String_Ptr;\n+   function Target_Name              return String_Ptr;\n+   function Search_Dir_Prefix        return String_Ptr;\n end Sdefault;"}, {"sha": "167d088b3e93c51c86eff777541da797273d74a2", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -777,7 +777,7 @@ package body Sem_Ch10 is\n          declare\n             Save_Style_Check : constant Boolean := Style_Check;\n             Save_Warning     : constant Warning_Mode_Type := Warning_Mode;\n-            Options : Style_Check_Options;\n+            Options          : Style_Check_Options;\n \n          begin\n             Save_Style_Check_Options (Options);"}, {"sha": "31f7d634102c2ab804c10b64695134d252d690e0", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 197, "deletions": 205, "changes": 402, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -25,14 +25,14 @@\n ------------------------------------------------------------------------------\n \n --  This package contains various subprograms involved in compile time\n---  evaluation of expressions and checks for staticness of expressions\n---  and types. It also contains the circuitry for checking for violations\n---  of pure and preelaborated conditions (this naturally goes here, since\n---  these rules involve consideration of staticness).\n+--  evaluation of expressions and checks for staticness of expressions and\n+--  types. It also contains the circuitry for checking for violations of pure\n+--  and preelaborated conditions (this naturally goes here, since these rules\n+--  involve consideration of staticness).\n \n---  Note: the static evaluation for attributes is found in Sem_Attr even\n---  though logically it belongs here. We have done this so that it is easier\n---  to add new attributes to GNAT.\n+--  Note: the static evaluation for attributes is found in Sem_Attr even though\n+--  logically it belongs here. We have done this so that it is easier to add\n+--  new attributes to GNAT.\n \n with Types;  use Types;\n with Uintp;  use Uintp;\n@@ -45,66 +45,64 @@ package Sem_Eval is\n    ------------------------------------\n \n    --  This package contains a set of routine that process individual\n-   --  subexpression nodes with the objective of folding (precomputing)\n-   --  the value of static expressions that are known at compile time and\n-   --  properly computing the setting of two flags that appear in every\n-   --  subexpression node:\n+   --  subexpression nodes with the objective of folding (precomputing) the\n+   --  value of static expressions that are known at compile time and properly\n+   --  computing the setting of two flags that appear in every subexpression\n+   --  node:\n \n    --    Is_Static_Expression\n \n-   --      This flag is set on any expression that is static according\n-   --      to the rules in (RM 4.9(3-32)).\n+   --      This flag is set on any expression that is static according to the\n+   --      rules in (RM 4.9(3-32)).\n \n    --    Raises_Constraint_Error\n \n    --      This flag indicatest that it is known at compile time that the\n    --      evaluation of an expression raises constraint error. If the\n-   --      expression is static, and this flag is off, then it is also known\n-   --      at compile time that the expression does not raise constraint error\n+   --      expression is static, and this flag is off, then it is also known at\n+   --      compile time that the expression does not raise constraint error\n    --      (i.e. the flag is accurate for static expressions, and conservative\n    --      for non-static expressions.\n \n    --  If a static expression does not raise constraint error, then the\n-   --  Raises_Constraint_Error flag is off, and the expression must be\n-   --  computed at compile time, which means that it has the form of either\n-   --  a literal, or a constant that is itself (recursively) either a literal\n-   --  or a constant.\n+   --  Raises_Constraint_Error flag is off, and the expression must be computed\n+   --  at compile time, which means that it has the form of either a literal,\n+   --  or a constant that is itself (recursively) either a literal or a\n+   --  constant.\n \n-   --  The above rules must be followed exactly in order for legality\n-   --  checks to be accurate. For subexpressions that are not static\n-   --  according to the RM definition, they are sometimes folded anyway,\n-   --  but of course in this case Is_Static_Expression is not set.\n+   --  The above rules must be followed exactly in order for legality checks to\n+   --  be accurate. For subexpressions that are not static according to the RM\n+   --  definition, they are sometimes folded anyway, but of course in this case\n+   --  Is_Static_Expression is not set.\n \n    -------------------------------\n    -- Compile-Time Known Values --\n    -------------------------------\n \n    --  For most legality checking purposes the flag Is_Static_Expression\n-   --  defined in Sinfo should be used. This package also provides\n-   --  a routine called Is_OK_Static_Expression which in addition of\n-   --  checking that an expression is static in the RM 4.9 sense, it\n-   --  checks that the expression does not raise constraint error. In\n-   --  fact for certain legality checks not only do we need to ascertain\n-   --  that the expression is static, but we must also ensure that it\n-   --  does not raise constraint error.\n+   --  defined in Sinfo should be used. This package also provides a routine\n+   --  called Is_OK_Static_Expression which in addition of checking that an\n+   --  expression is static in the RM 4.9 sense, it checks that the expression\n+   --  does not raise constraint error. In fact for certain legality checks not\n+   --  only do we need to ascertain that the expression is static, but we must\n+   --  also ensure that it does not raise constraint error.\n    --\n-   --  Neither of Is_Static_Expression and Is_OK_Static_Expression should\n-   --  be used for compile time evaluation purposes. In fact certain\n-   --  expression whose value is known at compile time are not static\n-   --  in the RM 4.9 sense. A typical example is:\n+   --  Neither of Is_Static_Expression and Is_OK_Static_Expression should be\n+   --  used for compile time evaluation purposes. In fact certain expression\n+   --  whose value is known at compile time are not static in the RM 4.9 sense.\n+   --  A typical example is:\n    --\n    --     C : constant Integer := Record_Type'Size;\n    --\n-   --  The expression 'C' is not static in the technical RM sense, but for\n-   --  many simple record types, the size is in fact known at compile time.\n-   --  When we are trying to perform compile time constant folding (for\n-   --  instance for expressions such as 'C + 1', Is_Static_Expression or\n-   --  Is_OK_Static_Expression are not the right functions to test to see\n-   --  if folding is possible. Instead, we use Compile_Time_Known_Value.\n-   --  All static expressions that do not raise constraint error (i.e.\n-   --  those for which Is_OK_Static_Expression is true) are known at\n-   --  compile time, but as shown by the above example, there are cases\n-   --  of non-static expressions which are known at compile time.\n+   --  The expression 'C' is not static in the technical RM sense, but for many\n+   --  simple record types, the size is in fact known at compile time. When we\n+   --  are trying to perform compile time constant folding (for instance for\n+   --  expressions like C + 1, Is_Static_Expression or Is_OK_Static_Expression\n+   --  are not the right functions to test if folding is possible. Instead, we\n+   --  use Compile_Time_Known_Value. All static expressions that do not raise\n+   --  constraint error (i.e. those for which Is_OK_Static_Expression is true)\n+   --  are known at compile time, but as shown by the above example, there are\n+   --  cases of non-static expressions which are known at compile time.\n \n    -----------------\n    -- Subprograms --\n@@ -114,17 +112,17 @@ package Sem_Eval is\n    --  Deals with the special check required for a static expression that\n    --  appears in a non-static context, i.e. is not part of a larger static\n    --  expression (see RM 4.9(35)), i.e. the value of the expression must be\n-   --  within the base range of the base type of its expected type. A check\n-   --  is also made for expressions that are inside the base range, but\n-   --  outside the range of the expected subtype (this is a warning message\n-   --  rather than an illegality).\n+   --  within the base range of the base type of its expected type. A check is\n+   --  also made for expressions that are inside the base range, but outside\n+   --  the range of the expected subtype (this is a warning message rather than\n+   --  an illegality).\n    --\n    --  Note: most cases of non-static context checks are handled within\n-   --  Sem_Eval itself, including all cases of expressions at the outer\n-   --  level (i.e. those that are not a subexpression). Currently the only\n-   --  outside customer for this procedure is Sem_Attr (because Eval_Attribute\n-   --  is there). There is also one special case arising from ranges (see body\n-   --  of Resolve_Range).\n+   --  Sem_Eval itself, including all cases of expressions at the outer level\n+   --  (i.e. those that are not a subexpression). Currently the only outside\n+   --  customer for this procedure is Sem_Attr (because Eval_Attribute is\n+   --  there). There is also one special case arising from ranges (see body of\n+   --  Resolve_Range).\n \n    procedure Check_String_Literal_Length (N : Node_Id; Ttype : Entity_Id);\n    --  N is either a string literal, or a constraint error node. In the latter\n@@ -138,59 +136,58 @@ package Sem_Eval is\n    function Compile_Time_Compare\n      (L, R : Node_Id;\n       Rec  : Boolean := False) return Compare_Result;\n-   --  Given two expression nodes, finds out whether it can be determined\n-   --  at compile time how the runtime values will compare. An Unknown\n-   --  result means that the result of a comparison cannot be determined at\n-   --  compile time, otherwise the returned result indicates the known result\n-   --  of the comparison, given as tightly as possible (i.e. EQ or LT is a\n-   --  preferred returned value to LE). Rec is a parameter that is set True\n-   --  for a recursive call from within Compile_Time_Compare to avoid some\n-   --  infinite recursion cases. It should never be set by a client.\n+   --  Given two expression nodes, finds out whether it can be determined at\n+   --  compile time how the runtime values will compare. An Unknown result\n+   --  means that the result of a comparison cannot be determined at compile\n+   --  time, otherwise the returned result indicates the known result of the\n+   --  comparison, given as tightly as possible (i.e. EQ or LT is preferred\n+   --  returned value to LE). Rec is a parameter that is set True for a\n+   --  recursive call from within Compile_Time_Compare to avoid some infinite\n+   --  recursion cases. It should never be set by a client.\n \n    procedure Flag_Non_Static_Expr (Msg : String; Expr : Node_Id);\n-   --  This procedure is called after it has been determined that Expr is\n-   --  not static when it is required to be. Msg is the text of a message\n-   --  that explains the error. This procedure checks if an error is already\n-   --  posted on Expr, if so, it does nothing unless All_Errors_Mode is set\n-   --  in which case this flag is ignored. Otherwise the given message is\n-   --  posted using Error_Msg_F, and then Why_Not_Static is called on\n-   --  Expr to generate additional messages. The string given as Msg\n-   --  should end with ! to make it an unconditional message, to ensure\n-   --  that if it is posted, the entire set of messages is all posted.\n+   --  This procedure is called after it has been determined that Expr is not\n+   --  static when it is required to be. Msg is the text of a message that\n+   --  explains the error. This procedure checks if an error is already posted\n+   --  on Expr, if so, it does nothing unless All_Errors_Mode is set in which\n+   --  case this flag is ignored. Otherwise the given message is posted using\n+   --  Error_Msg_F, and then Why_Not_Static is called on Expr to generate\n+   --  additional messages. The string given as Msg should end with ! to make\n+   --  it an unconditional message, to ensure that if it is posted, the entire\n+   --  set of messages is all posted.\n \n    function Is_OK_Static_Expression (N : Node_Id) return Boolean;\n-   --  An OK static expression is one that is static in the RM definition\n-   --  sense and which does not raise constraint error. For most legality\n-   --  checking purposes you should use Is_Static_Expression. For those\n-   --  legality checks where the expression N should not raise constaint\n-   --  error use this routine. This routine is *not* to be used in contexts\n-   --  where the test is for compile time evaluation purposes. Use routine\n-   --  Compile_Time_Known_Value instead (see section on \"Compile-Time Known\n-   --  Values\" above).\n+   --  An OK static expression is one that is static in the RM definition sense\n+   --  and which does not raise constraint error. For most legality checking\n+   --  purposes you should use Is_Static_Expression. For those legality checks\n+   --  where the expression N should not raise constaint error use this\n+   --  routine. This routine is *not* to be used in contexts where the test is\n+   --  for compile time evaluation purposes. Use Compile_Time_Known_Value\n+   --  instead (see section on \"Compile-Time Known Values\" above).\n \n    function Is_Static_Range (N : Node_Id) return Boolean;\n-   --  Determine if range is static, as defined in RM 4.9(26). The only\n-   --  allowed argument is an N_Range node (but note that the semantic\n-   --  analysis of equivalent range attribute references already turned\n-   --  them into the equivalent range).\n+   --  Determine if range is static, as defined in RM 4.9(26). The only allowed\n+   --  argument is an N_Range node (but note that the semantic analysis of\n+   --  equivalent range attribute references already turned them into the\n+   --  equivalent range).\n \n    function Is_OK_Static_Range (N : Node_Id) return Boolean;\n-   --  Like Is_Static_Range, but also makes sure that the bounds of the\n-   --  range are compile-time evaluable (i.e. do not raise constraint error).\n-   --  A result of true means that the bounds are compile time evaluable.\n-   --  A result of false means they are not (either because the range is\n-   --  not static, or because one or the other bound raises CE).\n+   --  Like Is_Static_Range, but also makes sure that the bounds of the range\n+   --  are compile-time evaluable (i.e. do not raise constraint error). A\n+   --  result of true means that the bounds are compile time evaluable. A\n+   --  result of false means they are not (either because the range is not\n+   --  static, or because one or the other bound raises CE).\n \n    function Is_Static_Subtype (Typ : Entity_Id) return Boolean;\n    --  Determines whether a subtype fits the definition of an Ada static\n    --  subtype as given in (RM 4.9(26)).\n \n    function Is_OK_Static_Subtype (Typ : Entity_Id) return Boolean;\n    --  Like Is_Static_Subtype but also makes sure that the bounds of the\n-   --  subtype are compile-time evaluable (i.e. do not raise constraint\n-   --  error). A result of true means that the bounds are compile time\n-   --  evaluable. A result of false means they are not (either because the\n-   --  range is not static, or because one or the other bound raises CE).\n+   --  subtype are compile-time evaluable (i.e. do not raise constraint error).\n+   --  A result of true means that the bounds are compile time evaluable. A\n+   --  result of false means they are not (either because the range is not\n+   --  static, or because one or the other bound raises CE).\n \n    function Subtypes_Statically_Compatible\n      (T1 : Entity_Id;\n@@ -204,52 +201,49 @@ package Sem_Eval is\n    --  are statically matching subtypes (RM 4.9.1(1-2)).\n \n    function Compile_Time_Known_Value (Op : Node_Id) return Boolean;\n-   --  Returns true if Op is an expression not raising constraint error\n-   --  whose value is known at compile time. This is true if Op is a static\n-   --  expression, but can also be true for expressions which are\n-   --  technically non-static but which are in fact known at compile time,\n-   --  such as the static lower bound of a non-static range or the value\n-   --  of a constant object whose initial value is static. Note that this\n-   --  routine is defended against unanalyzed expressions. Such expressions\n-   --  will not cause a blowup, they may cause pessimistic (i.e. False)\n-   --  results to be returned.\n+   --  Returns true if Op is an expression not raising constraint error whose\n+   --  value is known at compile time. This is true if Op is a static\n+   --  expression, but can also be true for expressions which are technically\n+   --  non-static but which are in fact known at compile time, such as the\n+   --  static lower bound of a non-static range or the value of a constant\n+   --  object whose initial value is static. Note that this routine is defended\n+   --  against unanalyzed expressions. Such expressions will not cause a\n+   --  blowup, they may cause pessimistic (i.e. False) results to be returned.\n \n    function Compile_Time_Known_Value_Or_Aggr (Op : Node_Id) return Boolean;\n-   --  Similar to Compile_Time_Known_Value, but also returns True if the\n-   --  value is a compile time known aggregate, i.e. an aggregate all of\n-   --  whose constituent expressions are either compile time known values\n-   --  or compile time known aggregates.\n+   --  Similar to Compile_Time_Known_Value, but also returns True if the value\n+   --  is a compile time known aggregate, i.e. an aggregate all of whose\n+   --  constituent expressions are either compile time known values or compile\n+   --  time known aggregates.\n \n    function Compile_Time_Known_Bounds (T : Entity_Id) return Boolean;\n-   --  If T is an array whose index bounds are all known at compile time,\n-   --  then True is returned, if T is not an array, or one or more of its\n-   --  index bounds is not known at compile time, then False is returned.\n+   --  If T is an array whose index bounds are all known at compile time, then\n+   --  True is returned, if T is not an array, or one or more of its index\n+   --  bounds is not known at compile time, then False is returned.\n \n    function Expr_Value (N : Node_Id) return Uint;\n-   --  Returns the folded value of the expression N. This function is called\n-   --  in instances where it has already been determined that the expression\n-   --  is static or its value is known at compile time (ie the call to\n-   --  Compile_Time_Known_Value (N) returns True). This version is used for\n-   --  integer values, and enumeration or character literals. In the latter\n-   --  two cases, the value returned is the Pos value in the relevant\n-   --  enumeration type. It can also be used for fixed-point values, in\n-   --  which case it returns the corresponding integer value. It cannot be\n-   --  used for floating-point values.\n+   --  Returns the folded value of the expression N. This function is called in\n+   --  instances where it has already been determined that the expression is\n+   --  static or its value is compile time known (Compile_Time_Known_Value (N)\n+   --  returns True). This version is used for integer values, and enumeration\n+   --  or character literals. In the latter two cases, the value returned is\n+   --  the Pos value in the relevant enumeration type. It can also be used for\n+   --  fixed-point values, in which case it returns the corresponding integer\n+   --  value. It cannot be used for floating-point values.\n \n    function Expr_Value_E (N : Node_Id) return Entity_Id;\n-   --  Returns the folded value of the expression. This function is called\n-   --  in instances where it has already been determined that the expression\n-   --  is static or its value known at compile time. This version is used\n-   --  for enumeration types and returns the corresponding enumeration\n-   --  literal.\n+   --  Returns the folded value of the expression. This function is called in\n+   --  instances where it has already been determined that the expression is\n+   --  static or its value known at compile time. This version is used for\n+   --  enumeration types and returns the corresponding enumeration literal.\n \n    function Expr_Value_R (N : Node_Id) return Ureal;\n-   --  Returns the folded value of the expression. This function is called\n-   --  in instances where it has already been determined that the expression\n-   --  is static or its value known at compile time. This version is used\n-   --  for real values (including both the floating-point and fixed-point\n-   --  cases). In the case of a fixed-point type, the real value is returned\n-   --  (cf above version returning Uint).\n+   --  Returns the folded value of the expression. This function is called in\n+   --  instances where it has already been determined that the expression is\n+   --  static or its value known at compile time. This version is used for real\n+   --  values (including both the floating-point and fixed-point cases). In the\n+   --  case of a fixed-point type, the real value is returned (cf above version\n+   --  returning Uint).\n \n    function Expr_Value_S (N : Node_Id) return Node_Id;\n    --  Returns the folded value of the expression. This function is called\n@@ -261,12 +255,12 @@ package Sem_Eval is\n    --  This is identical to Expr_Value, except in the case of enumeration\n    --  literals of types for which an enumeration representation clause has\n    --  been given, in which case it returns the representation value rather\n-   --  than the pos value. This is the value that is needed for generating\n-   --  code sequences, while the Expr_Value value is appropriate for compile\n-   --  time constraint errors or getting the logical value. Note that this\n-   --  function does NOT concern itself with biased values, if the caller\n-   --  needs a properly biased value, the subtraction of the bias must be\n-   --  handled explicitly.\n+   --  than the pos value. This is the value that is needed for generating code\n+   --  sequences, while the Expr_Value value is appropriate for compile time\n+   --  constraint errors or getting the logical value. Note that this function\n+   --  does NOT concern itself with biased values, if the caller needs a\n+   --  properly biased value, the subtraction of the bias must be handled\n+   --  explicitly.\n \n    procedure Eval_Actual                 (N : Node_Id);\n    procedure Eval_Allocator              (N : Node_Id);\n@@ -296,58 +290,56 @@ package Sem_Eval is\n    procedure Eval_Unchecked_Conversion   (N : Node_Id);\n \n    procedure Fold_Str (N : Node_Id; Val : String_Id; Static : Boolean);\n-   --  Rewrite N with a new N_String_Literal node as the result of the\n-   --  compile time evaluation of the node N. Val is the resulting string\n-   --  value from the folding operation. The Is_Static_Expression flag is\n-   --  set in the result node. The result is fully analyzed and resolved.\n-   --  Static indicates whether the result should be considered static or\n-   --  not (True = consider static). The point here is that normally all\n-   --  string literals are static, but if this was the result of some\n-   --  sequence of evaluation where values were known at compile time\n-   --  but not static, then the result is not static.\n+   --  Rewrite N with a new N_String_Literal node as the result of the compile\n+   --  time evaluation of the node N. Val is the resulting string value from\n+   --  the folding operation. The Is_Static_Expression flag is set in the\n+   --  result node. The result is fully analyzed and resolved. Static indicates\n+   --  whether the result should be considered static or not (True = consider\n+   --  static). The point here is that normally all string literals are static,\n+   --  but if this was the result of some sequence of evaluation where values\n+   --  were known at compile time but not static, then the result is not\n+   --  static.\n \n    procedure Fold_Uint (N : Node_Id; Val : Uint; Static : Boolean);\n    --  Rewrite N with a (N_Integer_Literal, N_Identifier, N_Character_Literal)\n-   --  node as the result of the compile time evaluation of the node N. Val\n-   --  is the result in the integer case and is the position of the literal\n-   --  in the literals list for the enumeration case. Is_Static_Expression\n-   --  is set True in the result node. The result is fully analyzed/resolved.\n-   --  Static indicates whether the result should be considered static or\n-   --  not (True = consider static). The point here is that normally all\n-   --  string literals are static, but if this was the result of some\n-   --  sequence of evaluation where values were known at compile time\n-   --  but not static, then the result is not static.\n+   --  node as the result of the compile time evaluation of the node N. Val is\n+   --  the result in the integer case and is the position of the literal in the\n+   --  literals list for the enumeration case. Is_Static_Expression is set True\n+   --  in the result node. The result is fully analyzed/resolved. Static\n+   --  indicates whether the result should be considered static or not (True =\n+   --  consider static). The point here is that normally all string literals\n+   --  are static, but if this was the result of some sequence of evaluation\n+   --  where values were known at compile time but not static, then the result\n+   --  is not static.\n \n    procedure Fold_Ureal (N : Node_Id; Val : Ureal; Static : Boolean);\n    --  Rewrite N with a new N_Real_Literal node as the result of the compile\n-   --  time evaluation of the node N. Val is the resulting real value from\n-   --  the folding operation. The Is_Static_Expression flag is set in the\n-   --  result node. The result is fully analyzed and result. Static\n-   --  indicates whether the result should be considered static or not\n-   --  (True = consider static). The point here is that normally all\n-   --  string literals are static, but if this was the result of some\n-   --  sequence of evaluation where values were known at compile time\n-   --  but not static, then the result is not static.\n+   --  time evaluation of the node N. Val is the resulting real value from the\n+   --  folding operation. The Is_Static_Expression flag is set in the result\n+   --  node. The result is fully analyzed and result. Static indicates whether\n+   --  the result should be considered static or not (True = consider static).\n+   --  The point here is that normally all string literals are static, but if\n+   --  this was the result of some sequence of evaluation where values were\n+   --  known at compile time but not static, then the result is not static.\n \n    function Is_In_Range\n      (N         : Node_Id;\n       Typ       : Entity_Id;\n       Fixed_Int : Boolean := False;\n       Int_Real  : Boolean := False) return Boolean;\n-   --  Returns True if it can be guaranteed at compile time that expression\n-   --  N is known to be in range of the subtype Typ. If the values of N or\n-   --  of either bouds of Type are unknown at compile time, False will\n-   --  always be returned. A result of False does not mean that the\n-   --  expression is out of range, merely that it cannot be determined at\n-   --  compile time that it is in range. If Typ is a floating point type or\n-   --  Int_Real is set, any integer value is treated as though it was a real\n-   --  value (i.e. the underlying real value is used).  In this case we use\n-   --  the corresponding real value, both for the bounds of Typ, and for the\n-   --  value of the expression N. If Typ is a fixed type or a discrete type\n-   --  and Int_Real is False but flag Fixed_Int is True then any fixed-point\n-   --  value is treated as though it was a discrete value (i.e. the\n-   --  underlying integer value is used).  In this case we use the\n-   --  corresponding integer value, both for the bounds of Typ, and for the\n+   --  Returns True if it can be guaranteed at compile time that expression is\n+   --  known to be in range of the subtype Typ. If the values of N or of either\n+   --  bouds of Type are unknown at compile time, False will always be\n+   --  returned. A result of False does not mean that the expression is out of\n+   --  range, merely that it cannot be determined at compile time that it is in\n+   --  range. If Typ is a floating point type or Int_Real is set, any integer\n+   --  value is treated as though it was a real value (i.e. the underlying real\n+   --  value is used). In this case we use the corresponding real value, both\n+   --  for the bounds of Typ, and for the value of the expression N. If Typ is\n+   --  a fixed type or a discrete type and Int_Real is False but flag Fixed_Int\n+   --  is True then any fixed-point value is treated as though it was discrete\n+   --  value (i.e. the underlying integer value is used). In this case we use\n+   --  the corresponding integer value, both for the bounds of Typ, and for the\n    --  value of the expression N. If Typ is a discret type and Fixed_Int as\n    --  well as Int_Real are false, intere values are used throughout.\n \n@@ -356,52 +348,52 @@ package Sem_Eval is\n       Typ       : Entity_Id;\n       Fixed_Int : Boolean := False;\n       Int_Real  : Boolean := False) return Boolean;\n-   --  Returns True if it can be guaranteed at compile time that expression\n-   --  N is known to be out of range of the subtype Typ.  True is returned\n-   --  if Typ is a scalar type, at least one of whose bounds is known at\n-   --  compile time, and N is a compile time known expression which can be\n-   --  determined to be outside a compile_time known bound of Typ. A result\n-   --  of False does not mean that the expression is in range, merely that\n-   --  it cannot be determined at compile time that it is out of range. Flags\n-   --  Int_Real and Fixed_Int are used as in routine Is_In_Range above.\n+   --  Returns True if it can be guaranteed at compile time that expression is\n+   --  known to be out of range of the subtype Typ. True is returned if Typ is\n+   --  a scalar type, at least one of whose bounds is known at compile time,\n+   --  and N is a compile time known expression which can be determined to be\n+   --  outside a compile_time known bound of Typ. A result of False does not\n+   --  mean that the expression is in range, but rather merely that it cannot\n+   --  be determined at compile time that it is out of range. Flags Int_Real\n+   --  and Fixed_Int are used as in routine Is_In_Range above.\n \n    function In_Subrange_Of\n      (T1        : Entity_Id;\n       T2        : Entity_Id;\n       Fixed_Int : Boolean := False) return Boolean;\n-   --  Returns True if it can be guaranteed at compile time that the range\n-   --  of values for scalar type T1 are always in the range of scalar type\n-   --  T2.  A result of False does not mean that T1 is not in T2's subrange,\n-   --  only that it cannot be determined at compile time. Flag Fixed_Int is\n-   --  used as in routine Is_In_Range above.\n+   --  Returns True if it can be guaranteed at compile time that the range of\n+   --  values for scalar type T1 are always in the range of scalar type T2. A\n+   --  result of False does not mean that T1 is not in T2's subrange, only that\n+   --  it cannot be determined at compile time. Flag Fixed_Int is used as in\n+   --  routine Is_In_Range above.\n \n    function Is_Null_Range (Lo : Node_Id; Hi : Node_Id) return Boolean;\n-   --  Returns True if it can guarantee that Lo .. Hi is a null range.\n-   --  If it cannot (because the value of Lo or Hi is not known at compile\n-   --  time) then it returns False.\n+   --  Returns True if it can guarantee that Lo .. Hi is a null range. If it\n+   --  cannot (because the value of Lo or Hi is not known at compile time) then\n+   --  it returns False.\n \n    function Not_Null_Range (Lo : Node_Id; Hi : Node_Id) return Boolean;\n-   --  Returns True if it can guarantee that Lo .. Hi is not a null range.\n-   --  If it cannot (because the value of Lo or Hi is not known at compile\n-   --  time) then it returns False.\n+   --  Returns True if it can guarantee that Lo .. Hi is not a null range. If\n+   --  it cannot (because the value of Lo or Hi is not known at compile time)\n+   --  then it returns False.\n \n    procedure Why_Not_Static (Expr : Node_Id);\n    --  This procedure may be called after generating an error message that\n-   --  complains that something is non-static. If it finds good reasons,\n-   --  it generates one or more error messages pointing the appropriate\n-   --  offending component of the expression. If no good reasons can be\n-   --  figured out, then no messages are generated. The expectation here\n-   --  is that the caller has already issued a message complaining that\n-   --  the expression is non-static. Note that this message should be\n-   --  placed using Error_Msg_F or Error_Msg_FE, so that it will sort\n-   --  before any messages placed by this call. Note that it is fine to\n-   --  call Why_Not_Static with something that is not an expression, and\n-   --  usually this has no effect, but in some cases (N_Parameter_Association\n-   --  or N_Range), it makes sense for the internal recursive calls.\n+   --  complains that something is non-static. If it finds good reasons, it\n+   --  generates one or more error messages pointing the appropriate offending\n+   --  component of the expression. If no good reasons can be figured out, then\n+   --  no messages are generated. The expectation here is that the caller has\n+   --  already issued a message complaining that the expression is non-static.\n+   --  Note that this message should be placed using Error_Msg_F or\n+   --  Error_Msg_FE, so that it will sort before any messages placed by this\n+   --  call. Note that it is fine to call Why_Not_Static with something that is\n+   --  not an expression, and usually this has no effect, but in some cases\n+   --  (N_Parameter_Association or N_Range), it makes sense for the internal\n+   --  recursive calls.\n \n    procedure Initialize;\n-   --  Initializes the internal data structures. Must be called before\n-   --  each separate main program unit (e.g. in a GNSA/ASIS context).\n+   --  Initializes the internal data structures. Must be called before each\n+   --  separate main program unit (e.g. in a GNSA/ASIS context).\n \n private\n    --  The Eval routines are all marked inline, since they are called once"}, {"sha": "0b499af270c823f32b504ffe906907df0c6f2ac7", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d26dc4b5a15cc68153cb4214b91f3bf402f76d1d/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=d26dc4b5a15cc68153cb4214b91f3bf402f76d1d", "patch": "@@ -3094,9 +3094,10 @@ remove_conversions (tree exp, bool true_address)\n       if (true_address\n \t  && TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\n \t  && TYPE_JUSTIFIED_MODULAR_P (TREE_TYPE (exp)))\n-\treturn remove_conversions (VEC_index (constructor_elt,\n-\t\t\t\t\t      CONSTRUCTOR_ELTS (exp), 0)->value,\n-\t\t\t\t   true);\n+\treturn\n+\t  remove_conversions (VEC_index (constructor_elt,\n+\t\t\t\t\t CONSTRUCTOR_ELTS (exp), 0)->value,\n+\t\t\t      true);\n       break;\n \n     case COMPONENT_REF:"}]}