{"sha": "b34ac019f88b47629673274dd69009f292e03b79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0YWMwMTlmODhiNDc2Mjk2NzMyNzRkZDY5MDA5ZjI5MmUwM2I3OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-20T10:27:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-20T10:27:57Z"}, "message": "re PR tree-optimization/88069 (ICE in check_loop_closed_ssa_def, at tree-ssa-loop-manip.c:709)\n\n2018-11-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88069\n\t* tree-ssa-sccvn.c (visit_phi): Do not value-number to unvisited\n\tvirtual PHI arguments.\n\n\t* gcc.dg/pr88069.c: New testcase.\n\nFrom-SVN: r266308", "tree": {"sha": "1e80322a082e177bab90e242c5da09b612e00aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e80322a082e177bab90e242c5da09b612e00aa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b34ac019f88b47629673274dd69009f292e03b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34ac019f88b47629673274dd69009f292e03b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34ac019f88b47629673274dd69009f292e03b79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34ac019f88b47629673274dd69009f292e03b79/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48c4096cda05491eaefd84654c5687de81a507a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c4096cda05491eaefd84654c5687de81a507a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c4096cda05491eaefd84654c5687de81a507a8"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "9cf7bb1be2e06f83c11d9f00edd358ea96761e10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ac019f88b47629673274dd69009f292e03b79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ac019f88b47629673274dd69009f292e03b79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b34ac019f88b47629673274dd69009f292e03b79", "patch": "@@ -1,3 +1,9 @@\n+2018-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88069\n+\t* tree-ssa-sccvn.c (visit_phi): Do not value-number to unvisited\n+\tvirtual PHI arguments.\n+\n 2018-11-20  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \tPR target/88083"}, {"sha": "099d464d10e36443d6825297c2403750eb4f2909", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b34ac019f88b47629673274dd69009f292e03b79", "patch": "@@ -1,3 +1,8 @@\n+2018-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88069\n+\t* gcc.dg/pr88069.c: New testcase.\n+\n 2018-11-20  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/88093"}, {"sha": "2148513501619c97bf7bbec350f29aa688a69372", "filename": "gcc/testsuite/gcc.dg/pr88069.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88069.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88069.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88069.c?ref=b34ac019f88b47629673274dd69009f292e03b79", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-pre -ftree-vectorize -fno-tree-pta\" } */\n+\n+void\n+qf (void);\n+\n+void\n+mr (short int db)\n+{\n+  int vq;\n+  short int *lp = &db;\n+\n+  for (vq = 0; vq < 1; ++vq)\n+    qf ();\n+\n+  while (*lp < 2)\n+    {\n+      *lp = db;\n+      lp = (short int *) &vq;\n+      ++*lp;\n+    }\n+}\n+"}, {"sha": "941752e7887a0be27b7bd956d7939b4264a422be", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ac019f88b47629673274dd69009f292e03b79/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b34ac019f88b47629673274dd69009f292e03b79", "patch": "@@ -4194,12 +4194,19 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n      value from the backedge as that confuses the alias-walking code.\n      See gcc.dg/torture/pr87176.c.  If the value is the same on a\n      non-backedge everything is OK though.  */\n-  if (backedge_val\n-      && !seen_non_backedge\n-      && TREE_CODE (backedge_val) == SSA_NAME\n-      && sameval == backedge_val\n-      && (SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val)\n-\t  || SSA_VAL (backedge_val) != backedge_val))\n+  bool visited_p;\n+  if ((backedge_val\n+       && !seen_non_backedge\n+       && TREE_CODE (backedge_val) == SSA_NAME\n+       && sameval == backedge_val\n+       && (SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val)\n+\t   || SSA_VAL (backedge_val) != backedge_val))\n+      /* Do not value-number a virtual operand to sth not visited though\n+\t given that allows us to escape a region in alias walking.  */\n+      || (sameval\n+\t  && TREE_CODE (sameval) == SSA_NAME\n+\t  && SSA_NAME_IS_VIRTUAL_OPERAND (sameval)\n+\t  && (SSA_VAL (sameval, &visited_p), !visited_p)))\n     /* Note this just drops to VARYING without inserting the PHI into\n        the hashes.  */\n     result = PHI_RESULT (phi);"}]}