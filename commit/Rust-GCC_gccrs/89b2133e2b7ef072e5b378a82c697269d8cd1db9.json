{"sha": "89b2133e2b7ef072e5b378a82c697269d8cd1db9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliMjEzM2UyYjdlZjA3MmU1YjM3OGE4MmM2OTcyNjlkOGNkMWRiOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2017-09-12T14:48:34Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-09-12T14:48:34Z"}, "message": "[Mechanical Patch ARM/AArch64 1/2] Rename load/store scheduling types to encode data size\n\nIn the AArch64 backend and scheduling models there is some confusion as to\nwhat the load1/load2 etc. scheduling types refer to. This leads to us using\nload1/load2 in two contexts - for a variety of 32-bit, 64-bit and 128-bit\nloads in AArch32 and 128-bit loads in AArch64. That leads to an undesirable\nconfusion in scheduling.\n\nFixing it is easy, but mechanical and boring. Essentially,\n\n  s/load1/load_4/\n  s/load2/load_8/\n  s/load3/load_12/\n  s/load4/load_16/\n  s/store1/store_4/\n  s/store2/store_8/\n  s/store3/store_12/\n  s/store4/store_16/\n\nAcross all sorts of pipeline models, and the two backends.\n\nI have intentionally not modified any of the patterns which now look obviously\nincorrect. I'll be doing a second pass over the AArch64 back-end in patch\n2/2 which will fix these bugs.\n\n---\ngcc/\n\n\t* config/arm/types.md (type): Rename load1/2/3/4 to load_4/8/12/16\n\tand store1/2/3/4 to store_4/8/12/16.\n\t* config/aarch64/aarch64.md: Update for rename.\n\t* config/arm/arm.md: Likewise.: Likewise.\n\t* config/arm/arm.c: Likewise.\n\t* config/arm/thumb1.md: Likewise.\n\t* config/arm/thumb2.md: Likewise.\n\t* config/arm/vfp.md: Likewise.\n\t* config/arm/arm-generic.md: Likewise.\n\t* config/arm/arm1020e.md: Likewise.\n\t* config/arm/arm1026ejs.md: Likewise.\n\t* config/arm/arm1136jfs.md: Likewise.\n\t* config/arm/arm926ejs.md: Likewise.\n\t* config/arm/cortex-a15.md: Likewise.\n\t* config/arm/cortex-a17.md: Likewise.\n\t* config/arm/cortex-a5.md: Likewise.\n\t* config/arm/cortex-a53.md: Likewise.\n\t* config/arm/cortex-a57.md: Likewise.\n\t* config/arm/cortex-a7.md: Likewise.\n\t* config/arm/cortex-a8.md: Likewise.\n\t* config/arm/cortex-a9.md: Likewise.\n\t* config/arm/cortex-m4.md: Likewise.\n\t* config/arm/cortex-m7.md: Likewise.\n\t* config/arm/cortex-r4.md: Likewise.\n\t* config/arm/exynos-m1.md: Likewise.\n\t* config/arm/fa526.md: Likewise.\n\t* config/arm/fa606te.md: Likewise.\n\t* config/arm/fa626te.md: Likewise.\n\t* config/arm/fa726te.md: Likewise.\n\t* config/arm/fmp626.md: Likewise.\n\t* config/arm/iwmmxt.md: Likewise.\n\t* config/arm/ldmstm.md: Likewise.\n\t* config/arm/marvell-pj4.md: Likewise.\n\t* config/arm/xgene1.md: Likewise.\n\t* config/aarch64/thunderx.md: Likewise.\n\t* config/aarch64/thunderx2t99.md: Likewise.\n\t* config/aarch64/falkor.md: Likewise.\n\nFrom-SVN: r252025", "tree": {"sha": "4f1d9f7cf8db1139f21324967536701523c026fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f1d9f7cf8db1139f21324967536701523c026fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b2133e2b7ef072e5b378a82c697269d8cd1db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b2133e2b7ef072e5b378a82c697269d8cd1db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b2133e2b7ef072e5b378a82c697269d8cd1db9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b2133e2b7ef072e5b378a82c697269d8cd1db9/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f33b353ea04335c7d1210eab3d4a46ec54f0633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f33b353ea04335c7d1210eab3d4a46ec54f0633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f33b353ea04335c7d1210eab3d4a46ec54f0633"}], "stats": {"total": 730, "additions": 385, "deletions": 345}, "files": [{"sha": "fae47721c9bfbb9e20b3d7911f5d1bf7c8ffc4aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -1,3 +1,43 @@\n+2017-09-12  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/types.md (type): Rename load1/2/3/4 to load_4/8/12/16\n+\tand store1/2/3/4 to store_4/8/12/16.\n+\t* config/aarch64/aarch64.md: Update for rename.\n+\t* config/arm/arm.md: Likewise.: Likewise.\n+\t* config/arm/arm.c: Likewise.\n+\t* config/arm/thumb1.md: Likewise.\n+\t* config/arm/thumb2.md: Likewise.\n+\t* config/arm/vfp.md: Likewise.\n+\t* config/arm/arm-generic.md: Likewise.\n+\t* config/arm/arm1020e.md: Likewise.\n+\t* config/arm/arm1026ejs.md: Likewise.\n+\t* config/arm/arm1136jfs.md: Likewise.\n+\t* config/arm/arm926ejs.md: Likewise.\n+\t* config/arm/cortex-a15.md: Likewise.\n+\t* config/arm/cortex-a17.md: Likewise.\n+\t* config/arm/cortex-a5.md: Likewise.\n+\t* config/arm/cortex-a53.md: Likewise.\n+\t* config/arm/cortex-a57.md: Likewise.\n+\t* config/arm/cortex-a7.md: Likewise.\n+\t* config/arm/cortex-a8.md: Likewise.\n+\t* config/arm/cortex-a9.md: Likewise.\n+\t* config/arm/cortex-m4.md: Likewise.\n+\t* config/arm/cortex-m7.md: Likewise.\n+\t* config/arm/cortex-r4.md: Likewise.\n+\t* config/arm/exynos-m1.md: Likewise.\n+\t* config/arm/fa526.md: Likewise.\n+\t* config/arm/fa606te.md: Likewise.\n+\t* config/arm/fa626te.md: Likewise.\n+\t* config/arm/fa726te.md: Likewise.\n+\t* config/arm/fmp626.md: Likewise.\n+\t* config/arm/iwmmxt.md: Likewise.\n+\t* config/arm/ldmstm.md: Likewise.\n+\t* config/arm/marvell-pj4.md: Likewise.\n+\t* config/arm/xgene1.md: Likewise.\n+\t* config/aarch64/thunderx.md: Likewise.\n+\t* config/aarch64/thunderx2t99.md: Likewise.\n+\t* config/aarch64/falkor.md: Likewise.\n+\n 2017-09-12  Martin Liska  <mliska@suse.cz>\n \n \t* attribs.c (private_lookup_attribute): New function."}, {"sha": "7cbb4586420b15d7a79c2593d136324b32596d2c", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -558,7 +558,7 @@\n     operands[0] = gen_rtx_MEM (DImode, operands[0]);\n     return pftype[INTVAL(operands[1])][locality];\n   }\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"trap\"\n@@ -902,7 +902,7 @@\n        gcc_unreachable ();\n      }\n }\n-  [(set_attr \"type\" \"mov_reg,mov_imm,neon_move,load1,load1,store1,store1,\\\n+  [(set_attr \"type\" \"mov_reg,mov_imm,neon_move,load_4,load_4,store_4,store_4,\\\n                      neon_to_gp<q>,neon_from_gp<q>,neon_dup\")\n    (set_attr \"simd\" \"*,*,yes,*,*,*,*,yes,yes,yes\")]\n )\n@@ -959,7 +959,7 @@\n        aarch64_expand_mov_immediate (operands[0], operands[1]);\n        DONE;\n     }\"\n-  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,mov_imm,load1,load1,store1,store1,\\\n+  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,mov_imm,load_4,load_4,store_4,store_4,\\\n \t\t    adr,adr,f_mcr,f_mrc,fmov,neon_move\")\n    (set_attr \"fp\" \"*,*,*,*,*,*,yes,*,yes,*,*,yes,yes,yes,*\")\n    (set_attr \"simd\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,yes\")]\n@@ -994,8 +994,8 @@\n        aarch64_expand_mov_immediate (operands[0], operands[1]);\n        DONE;\n     }\"\n-  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,mov_imm,mov_imm,load1,\\\n-                     load1,store1,store1,adr,adr,f_mcr,f_mrc,fmov,neon_move\")\n+  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,mov_imm,mov_imm,load_4,\\\n+                     load_4,store_4,store_4,adr,adr,f_mcr,f_mrc,fmov,neon_move\")\n    (set_attr \"fp\" \"*,*,*,*,*,*,*,yes,*,yes,*,*,yes,yes,yes,*\")\n    (set_attr \"simd\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,yes\")]\n )\n@@ -1039,7 +1039,7 @@\n    ldr\\\\t%q0, %1\n    str\\\\t%q1, %0\"\n   [(set_attr \"type\" \"multiple,f_mcr,f_mrc,neon_logic_q, \\\n-\t\t             load2,store2,store2,f_loadd,f_stored\")\n+\t\t             load_8,store_8,store_8,f_loadd,f_stored\")\n    (set_attr \"length\" \"8,8,8,4,4,4,4,4,4\")\n    (set_attr \"simd\" \"*,*,*,yes,*,*,*,*,*\")\n    (set_attr \"fp\" \"*,*,*,*,*,*,*,yes,yes\")]\n@@ -1094,7 +1094,7 @@\n    strh\\\\t%w1, %0\n    mov\\\\t%w0, %w1\"\n   [(set_attr \"type\" \"neon_move,f_mcr,neon_to_gp,neon_move,fconsts, \\\n-\t\t     neon_move,f_loads,f_stores,load1,store1,mov_reg\")\n+\t\t     neon_move,f_loads,f_stores,load_4,store_4,mov_reg\")\n    (set_attr \"simd\" \"yes,*,yes,yes,*,yes,*,*,*,*,*\")\n    (set_attr \"fp16\"   \"*,yes,*,*,yes,*,*,*,*,*,*\")]\n )\n@@ -1118,7 +1118,7 @@\n    mov\\\\t%w0, %w1\n    mov\\\\t%w0, %1\"\n   [(set_attr \"type\" \"neon_move,f_mcr,f_mrc,fmov,fconsts,neon_move,\\\n-\t\t     f_loads,f_stores,load1,store1,mov_reg,\\\n+\t\t     f_loads,f_stores,load_4,store_4,mov_reg,\\\n \t\t     fconsts\")\n    (set_attr \"simd\" \"yes,*,*,*,*,yes,*,*,*,*,*,*\")]\n )\n@@ -1142,7 +1142,7 @@\n    mov\\\\t%x0, %x1\n    mov\\\\t%x0, %1\"\n   [(set_attr \"type\" \"neon_move,f_mcr,f_mrc,fmov,fconstd,neon_move,\\\n-\t\t     f_loadd,f_stored,load1,store1,mov_reg,\\\n+\t\t     f_loadd,f_stored,load_4,store_4,mov_reg,\\\n \t\t     fconstd\")\n    (set_attr \"simd\" \"yes,*,*,*,*,yes,*,*,*,*,*,*\")]\n )\n@@ -1187,7 +1187,7 @@\n    stp\\\\t%1, %H1, %0\n    stp\\\\txzr, xzr, %0\"\n   [(set_attr \"type\" \"logic_reg,multiple,f_mcr,f_mrc,neon_move_q,f_mcr,\\\n-                     f_loadd,f_stored,load2,store2,store2\")\n+                     f_loadd,f_stored,load_8,store_8,store_8\")\n    (set_attr \"length\" \"4,8,8,8,4,4,4,4,4,4,4\")\n    (set_attr \"simd\" \"yes,*,*,*,yes,*,*,*,*,*,*\")]\n )\n@@ -1235,7 +1235,7 @@\n   \"@\n    ldp\\\\t%w0, %w2, %1\n    ldp\\\\t%s0, %s2, %1\"\n-  [(set_attr \"type\" \"load2,neon_load1_2reg\")\n+  [(set_attr \"type\" \"load_8,neon_load1_2reg\")\n    (set_attr \"fp\" \"*,yes\")]\n )\n \n@@ -1251,7 +1251,7 @@\n   \"@\n    ldp\\\\t%x0, %x2, %1\n    ldp\\\\t%d0, %d2, %1\"\n-  [(set_attr \"type\" \"load2,neon_load1_2reg\")\n+  [(set_attr \"type\" \"load_8,neon_load1_2reg\")\n    (set_attr \"fp\" \"*,yes\")]\n )\n \n@@ -1270,7 +1270,7 @@\n   \"@\n    stp\\\\t%w1, %w3, %0\n    stp\\\\t%s1, %s3, %0\"\n-  [(set_attr \"type\" \"store2,neon_store1_2reg\")\n+  [(set_attr \"type\" \"store_8,neon_store1_2reg\")\n    (set_attr \"fp\" \"*,yes\")]\n )\n \n@@ -1286,7 +1286,7 @@\n   \"@\n    stp\\\\t%x1, %x3, %0\n    stp\\\\t%d1, %d3, %0\"\n-  [(set_attr \"type\" \"store2,neon_store1_2reg\")\n+  [(set_attr \"type\" \"store_8,neon_store1_2reg\")\n    (set_attr \"fp\" \"*,yes\")]\n )\n \n@@ -1304,7 +1304,7 @@\n   \"@\n    ldp\\\\t%s0, %s2, %1\n    ldp\\\\t%w0, %w2, %1\"\n-  [(set_attr \"type\" \"neon_load1_2reg,load2\")\n+  [(set_attr \"type\" \"neon_load1_2reg,load_8\")\n    (set_attr \"fp\" \"yes,*\")]\n )\n \n@@ -1320,7 +1320,7 @@\n   \"@\n    ldp\\\\t%d0, %d2, %1\n    ldp\\\\t%x0, %x2, %1\"\n-  [(set_attr \"type\" \"neon_load1_2reg,load2\")\n+  [(set_attr \"type\" \"neon_load1_2reg,load_8\")\n    (set_attr \"fp\" \"yes,*\")]\n )\n \n@@ -1338,7 +1338,7 @@\n   \"@\n    stp\\\\t%s1, %s3, %0\n    stp\\\\t%w1, %w3, %0\"\n-  [(set_attr \"type\" \"neon_store1_2reg,store2\")\n+  [(set_attr \"type\" \"neon_store1_2reg,store_8\")\n    (set_attr \"fp\" \"yes,*\")]\n )\n \n@@ -1354,7 +1354,7 @@\n   \"@\n    stp\\\\t%d1, %d3, %0\n    stp\\\\t%x1, %x3, %0\"\n-  [(set_attr \"type\" \"neon_store1_2reg,store2\")\n+  [(set_attr \"type\" \"neon_store1_2reg,store_8\")\n    (set_attr \"fp\" \"yes,*\")]\n )\n \n@@ -1372,7 +1372,7 @@\n                    (match_operand:P 5 \"const_int_operand\" \"n\"))))])]\n   \"INTVAL (operands[5]) == GET_MODE_SIZE (<GPI:MODE>mode)\"\n   \"ldp\\\\t%<w>2, %<w>3, [%1], %4\"\n-  [(set_attr \"type\" \"load2\")]\n+  [(set_attr \"type\" \"load_8\")]\n )\n \n (define_insn \"loadwb_pair<GPF:mode>_<P:mode>\"\n@@ -1405,7 +1405,7 @@\n           (match_operand:GPI 3 \"register_operand\" \"r\"))])]\n   \"INTVAL (operands[5]) == INTVAL (operands[4]) + GET_MODE_SIZE (<GPI:MODE>mode)\"\n   \"stp\\\\t%<w>2, %<w>3, [%0, %4]!\"\n-  [(set_attr \"type\" \"store2\")]\n+  [(set_attr \"type\" \"store_8\")]\n )\n \n (define_insn \"storewb_pair<GPF:mode>_<P:mode>\"\n@@ -1441,7 +1441,7 @@\n   \"@\n    sxtw\\t%0, %w1\n    ldrsw\\t%0, %1\"\n-  [(set_attr \"type\" \"extend,load1\")]\n+  [(set_attr \"type\" \"extend,load_4\")]\n )\n \n (define_insn \"*load_pair_extendsidi2_aarch64\"\n@@ -1454,7 +1454,7 @@\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (SImode)))\"\n   \"ldpsw\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"load2\")]\n+  [(set_attr \"type\" \"load_8\")]\n )\n \n (define_insn \"*zero_extendsidi2_aarch64\"\n@@ -1464,7 +1464,7 @@\n   \"@\n    uxtw\\t%0, %w1\n    ldr\\t%w0, %1\"\n-  [(set_attr \"type\" \"extend,load1\")]\n+  [(set_attr \"type\" \"extend,load_4\")]\n )\n \n (define_insn \"*load_pair_zero_extendsidi2_aarch64\"\n@@ -1477,7 +1477,7 @@\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (SImode)))\"\n   \"ldp\\\\t%w0, %w2, %1\"\n-  [(set_attr \"type\" \"load2\")]\n+  [(set_attr \"type\" \"load_8\")]\n )\n \n (define_expand \"<ANY_EXTEND:optab><SHORT:mode><GPI:mode>2\"\n@@ -1493,7 +1493,7 @@\n   \"@\n    sxt<SHORT:size>\\t%<GPI:w>0, %w1\n    ldrs<SHORT:size>\\t%<GPI:w>0, %1\"\n-  [(set_attr \"type\" \"extend,load1\")]\n+  [(set_attr \"type\" \"extend,load_4\")]\n )\n \n (define_insn \"*zero_extend<SHORT:mode><GPI:mode>2_aarch64\"\n@@ -1504,7 +1504,7 @@\n    and\\t%<GPI:w>0, %<GPI:w>1, <SHORT:short_mask>\n    ldr<SHORT:size>\\t%w0, %1\n    ldr\\t%<SHORT:size>0, %1\"\n-  [(set_attr \"type\" \"logic_imm,load1,load1\")]\n+  [(set_attr \"type\" \"logic_imm,load_4,load_4\")]\n )\n \n (define_expand \"<optab>qihi2\"\n@@ -1520,7 +1520,7 @@\n   \"@\n    sxtb\\t%w0, %w1\n    ldrsb\\t%w0, %1\"\n-  [(set_attr \"type\" \"extend,load1\")]\n+  [(set_attr \"type\" \"extend,load_4\")]\n )\n \n (define_insn \"*zero_extendqihi2_aarch64\"\n@@ -1530,7 +1530,7 @@\n   \"@\n    and\\t%w0, %w1, 255\n    ldrb\\t%w0, %1\"\n-  [(set_attr \"type\" \"logic_imm,load1\")]\n+  [(set_attr \"type\" \"logic_imm,load_4\")]\n )\n \n ;; -------------------------------------------------------------------\n@@ -5355,7 +5355,7 @@\n \t\t    UNSPEC_GOTSMALLPIC))]\n   \"\"\n   \"ldr\\\\t%<w>0, [%1, #:got_lo12:%a2]\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"ldr_got_small_sidi\"\n@@ -5367,7 +5367,7 @@\n \t\t    UNSPEC_GOTSMALLPIC)))]\n   \"TARGET_ILP32\"\n   \"ldr\\\\t%w0, [%1, #:got_lo12:%a2]\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"ldr_got_small_28k_<mode>\"\n@@ -5378,7 +5378,7 @@\n \t\t    UNSPEC_GOTSMALLPIC28K))]\n   \"\"\n   \"ldr\\\\t%<w>0, [%1, #:<got_modifier>:%a2]\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"ldr_got_small_28k_sidi\"\n@@ -5390,7 +5390,7 @@\n \t\t    UNSPEC_GOTSMALLPIC28K)))]\n   \"TARGET_ILP32\"\n   \"ldr\\\\t%w0, [%1, #:gotpage_lo14:%a2]\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"ldr_got_tiny\"\n@@ -5399,7 +5399,7 @@\n \t\t   UNSPEC_GOTTINYPIC))]\n   \"\"\n   \"ldr\\\\t%0, %L1\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"aarch64_load_tp_hard\"\n@@ -5440,7 +5440,7 @@\n \t\t   UNSPEC_GOTSMALLTLS))]\n   \"\"\n   \"adrp\\\\t%0, %A1\\;ldr\\\\t%<w>0, [%0, #%L1]\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"length\" \"8\")]\n )\n \n@@ -5451,7 +5451,7 @@\n \t\t      UNSPEC_GOTSMALLTLS)))]\n   \"\"\n   \"adrp\\\\t%0, %A1\\;ldr\\\\t%w0, [%0, #%L1]\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"length\" \"8\")]\n )\n "}, {"sha": "66efc8c23a2a69f85f07c8e60b03d4ef1e127ee5", "filename": "gcc/config/aarch64/falkor.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Ffalkor.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Ffalkor.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ffalkor.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -581,7 +581,7 @@\n \n (define_insn_reservation \"falkor_ld_3_ld\" 3\n   (and (eq_attr \"tune\" \"falkor\")\n-       (eq_attr \"type\" \"load1,load2\"))\n+       (eq_attr \"type\" \"load_4,load_8\"))\n   \"falkor_ld\")\n \n ;; Miscellaneous Data-Processing Instructions\n@@ -663,7 +663,7 @@\n \n (define_insn_reservation \"falkor_st_0_st_sd\" 0\n   (and (eq_attr \"tune\" \"falkor\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"falkor_st+falkor_sd\")\n \f\n ;; Muliply bypasses."}, {"sha": "c18da2f94d11963ab2969e6c96ef7634d4655d82", "filename": "gcc/config/aarch64/thunderx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -94,13 +94,13 @@\n ;; Stores take one cycle in pipe 0\n (define_insn_reservation \"thunderx_store\" 1\n   (and (eq_attr \"tune\" \"thunderx\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n   \"thunderx_pipe0\")\n \n ;; Store pair are single issued\n (define_insn_reservation \"thunderx_storepair\" 1\n   (and (eq_attr \"tune\" \"thunderx\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"thunderx_pipe0 + thunderx_pipe1\")\n \n ;; Prefetch are single issued\n@@ -112,7 +112,7 @@\n ;; loads (and load pairs) from L1 take 3 cycles in pipe 0\n (define_insn_reservation \"thunderx_load\" 3\n   (and (eq_attr \"tune\" \"thunderx\")\n-       (eq_attr \"type\" \"load1, load2\"))\n+       (eq_attr \"type\" \"load_4, load_8\"))\n   \"thunderx_pipe0\")\n \n (define_insn_reservation \"thunderx_brj\" 1"}, {"sha": "41a45ca090aac94bc35f9512cdf71ac14b91e6d3", "filename": "gcc/config/aarch64/thunderx2t99.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -123,22 +123,22 @@\n \n (define_insn_reservation \"thunderx2t99_load_basic\" 4\n   (and (eq_attr \"tune\" \"thunderx2t99\")\n-       (eq_attr \"type\" \"load1\"))\n+       (eq_attr \"type\" \"load_4\"))\n   \"thunderx2t99_ls01\")\n \n (define_insn_reservation \"thunderx2t99_loadpair\" 5\n   (and (eq_attr \"tune\" \"thunderx2t99\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"thunderx2t99_i012,thunderx2t99_ls01\")\n \n (define_insn_reservation \"thunderx2t99_store_basic\" 1\n   (and (eq_attr \"tune\" \"thunderx2t99\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n   \"thunderx2t99_ls01,thunderx2t99_sd\")\n \n (define_insn_reservation \"thunderx2t99_storepair_basic\" 1\n   (and (eq_attr \"tune\" \"thunderx2t99\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"thunderx2t99_ls01,thunderx2t99_sd\")\n \n ;; FP data processing instructions."}, {"sha": "0a45608366fbab06a13f380ca7fa3747ea9b67df", "filename": "gcc/config/arm/arm-generic.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm-generic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm-generic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-generic.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -47,69 +47,69 @@\n (define_insn_reservation \"store_wbuf\" 5\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"yes\")\n-       \t    (eq_attr \"type\" \"store1\")))\n+       \t    (eq_attr \"type\" \"store_4\")))\n   \"core+write_buf*3+write_blockage*5\")\n \n (define_insn_reservation \"store2_wbuf\" 7\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"yes\")\n-\t    (eq_attr \"type\" \"store2\")))\n+\t    (eq_attr \"type\" \"store_8\")))\n   \"core+write_buf*4+write_blockage*7\")\n \n (define_insn_reservation \"store3_wbuf\" 9\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"yes\")\n-\t    (eq_attr \"type\" \"store3\")))\n+\t    (eq_attr \"type\" \"store_12\")))\n   \"core+write_buf*5+write_blockage*9\")\n \n (define_insn_reservation \"store4_wbuf\" 11\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"yes\")\n-            (eq_attr \"type\" \"store4\")))\n+            (eq_attr \"type\" \"store_16\")))\n   \"core+write_buf*6+write_blockage*11\")\n \n (define_insn_reservation \"store2\" 3\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"no\")\n-            (eq_attr \"type\" \"store2\")))\n+            (eq_attr \"type\" \"store_8\")))\n   \"core*3\")\n \n (define_insn_reservation \"store3\" 4\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"no\")\n-            (eq_attr \"type\" \"store3\")))\n+            (eq_attr \"type\" \"store_12\")))\n   \"core*4\")\n \n (define_insn_reservation \"store4\" 5\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"model_wbuf\" \"no\")\n-\t    (eq_attr \"type\" \"store4\")))\n+\t    (eq_attr \"type\" \"store_16\")))\n   \"core*5\")\n \n (define_insn_reservation \"store_ldsched\" 1\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"yes\") \n-\t    (eq_attr \"type\" \"store1\")))\n+\t    (eq_attr \"type\" \"store_4\")))\n   \"core\")\n \n (define_insn_reservation \"load_ldsched_xscale\" 3\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"yes\") \n-\t    (and (eq_attr \"type\" \"load_byte,load1\")\n+\t    (and (eq_attr \"type\" \"load_byte,load_4\")\n \t         (eq_attr \"tune\" \"xscale,iwmmxt,iwmmxt2\"))))\n   \"core\")\n \n (define_insn_reservation \"load_ldsched\" 2\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"yes\") \n-\t    (and (eq_attr \"type\" \"load_byte,load1\")\n+\t    (and (eq_attr \"type\" \"load_byte,load_4\")\n \t         (eq_attr \"tune\" \"!xscale,iwmmxt,iwmmxt2\"))))\n   \"core\")\n \n (define_insn_reservation \"load_or_store\" 2\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"!yes\") \n-\t    (eq_attr \"type\" \"load_byte,load1,load2,load3,load4,store1\")))\n+\t    (eq_attr \"type\" \"load_byte,load_4,load_8,load_12,load_16,store_4\")))\n   \"core*2\")\n \n (define_insn_reservation \"mult\" 16\n@@ -140,8 +140,8 @@\n (define_insn_reservation \"multi_cycle\" 32\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"core_cycles\" \"multi\")\n-            (and (eq_attr \"type\" \"!load_byte,load1,load2,load3,load4,\\\n-                                  store1,store2,store3,store4\")\n+            (and (eq_attr \"type\" \"!load_byte,load_4,load_8,load_12,load_16,\\\n+                                  store_4,store_8,store_12,store_16\")\n \t\t (not (ior (eq_attr \"mul32\" \"yes\")\n \t\t\t   (eq_attr \"mul64\" \"yes\"))))))\n   \"core*32\")"}, {"sha": "c8c43011206ba75433b7e3338ed07287b418c5c4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -11311,8 +11311,8 @@ cortexa7_older_only (rtx_insn *insn)\n     case TYPE_SHIFT_IMM:\n     case TYPE_SHIFT_REG:\n     case TYPE_LOAD_BYTE:\n-    case TYPE_LOAD1:\n-    case TYPE_STORE1:\n+    case TYPE_LOAD_4:\n+    case TYPE_STORE_4:\n     case TYPE_FFARITHS:\n     case TYPE_FADDS:\n     case TYPE_FFARITHD:"}, {"sha": "6c4e361913cf2d5f22d038b753ba128a8f8f1b8c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -314,7 +314,7 @@\n ; to stall the processor.  Used with model_wbuf above.\n (define_attr \"write_conflict\" \"no,yes\"\n   (if_then_else (eq_attr \"type\"\n-\t\t \"block,call,load1\")\n+\t\t \"block,call,load_4\")\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n@@ -3819,7 +3819,7 @@\n   \"\"\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8,8,12\")\n-   (set_attr \"type\" \"store1\")]\n+   (set_attr \"type\" \"store_4\")]\n )\n \n (define_expand \"uminsi3\"\n@@ -3852,7 +3852,7 @@\n   \"\"\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8,8,12\")\n-   (set_attr \"type\" \"store1\")]\n+   (set_attr \"type\" \"store_4\")]\n )\n \n (define_insn \"*store_minmaxsi\"\n@@ -3877,7 +3877,7 @@\n \t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n \t\t      (const_int 14)\n \t\t      (const_int 12)))\n-   (set_attr \"type\" \"store1\")]\n+   (set_attr \"type\" \"store_4\")]\n )\n \n ; Reject the frame pointer in operand[1], since reloading this after\n@@ -4544,7 +4544,7 @@\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"load1\")])\n+   (set_attr \"type\" \"load_4\")])\n \n (define_insn \"unaligned_loadhis\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=l,r\")\n@@ -4582,7 +4582,7 @@\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"store1\")])\n+   (set_attr \"type\" \"store_4\")])\n \n (define_insn \"unaligned_storehi\"\n   [(set (match_operand:HI 0 \"memory_operand\" \"=Uw,m\")\n@@ -4594,7 +4594,7 @@\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"store1\")])\n+   (set_attr \"type\" \"store_4\")])\n \n \n (define_insn \"*extv_reg\"\n@@ -5935,7 +5935,7 @@\n     }\n   \"\n   [(set_attr \"length\" \"8,12,16,8,8\")\n-   (set_attr \"type\" \"multiple,multiple,multiple,load2,store2\")\n+   (set_attr \"type\" \"multiple,multiple,multiple,load_8,store_8\")\n    (set_attr \"arm_pool_range\" \"*,*,*,1020,*\")\n    (set_attr \"arm_neg_pool_range\" \"*,*,*,1004,*\")\n    (set_attr \"thumb2_pool_range\" \"*,*,*,4094,*\")\n@@ -6156,7 +6156,7 @@\n    movw%?\\\\t%0, %1\n    ldr%?\\\\t%0, %1\n    str%?\\\\t%1, %0\"\n-  [(set_attr \"type\" \"mov_reg,mov_imm,mvn_imm,mov_imm,load1,store1\")\n+  [(set_attr \"type\" \"mov_reg,mov_imm,mvn_imm,mov_imm,load_4,store_4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"arch\" \"*,*,*,v6t2,*,*\")\n    (set_attr \"pool_range\" \"*,*,*,*,4096,*\")\n@@ -6286,7 +6286,7 @@\n   (set (match_dup 0) (unspec:SI [(match_dup 0) (match_dup 3)\n        \t\t     \t\t (match_dup 2)] UNSPEC_PIC_BASE))]\n  \"operands[3] = TARGET_THUMB ? GEN_INT (4) : GEN_INT (8);\"\n- [(set_attr \"type\" \"load1,load1,load1\")\n+ [(set_attr \"type\" \"load_4,load_4,load_4\")\n   (set_attr \"pool_range\" \"4096,4094,1022\")\n   (set_attr \"neg_pool_range\" \"4084,0,0\")\n   (set_attr \"arch\"  \"a,t2,t1\")    \n@@ -6302,7 +6302,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"\" \"mX\")] UNSPEC_PIC_SYM))]\n   \"TARGET_32BIT && flag_pic\"\n   \"ldr%?\\\\t%0, %1\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set (attr \"pool_range\")\n \t(if_then_else (eq_attr \"is_thumb\" \"no\")\n \t\t      (const_int 4096)\n@@ -6318,7 +6318,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"\" \"mX\")] UNSPEC_PIC_SYM))]\n   \"TARGET_THUMB1 && flag_pic\"\n   \"ldr\\\\t%0, %1\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set (attr \"pool_range\") (const_int 1018))]\n )\n \n@@ -6367,7 +6367,7 @@\n     return \\\"ldr%?\\\\t%0, [%|pc, %1]\\t\\t@ tls_load_dot_plus_eight\\\";\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"load1\")]\n+   (set_attr \"type\" \"load_4\")]\n )\n \n ;; PIC references to local variables can generate pic_add_dot_plus_eight\n@@ -6398,7 +6398,7 @@\n \t\t\t\t    UNSPEC_PIC_OFFSET))))]\n   \"TARGET_VXWORKS_RTP && TARGET_ARM && flag_pic\"\n   \"ldr%?\\\\t%0, [%1,%2]\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n (define_expand \"builtin_setjmp_receiver\"\n@@ -6814,8 +6814,8 @@\n                                         (const_string \"mov_reg\"))\n                           (const_string \"mvn_imm\")\n                           (const_string \"mov_imm\")\n-                          (const_string \"store1\")\n-                          (const_string \"load1\")])]\n+                          (const_string \"store_4\")\n+                          (const_string \"load_4\")])]\n )\n \n (define_insn \"*movhi_bytes\"\n@@ -6949,7 +6949,7 @@\n    strb%?\\\\t%1, %0\n    ldrb%?\\\\t%0, %1\n    strb%?\\\\t%1, %0\"\n-  [(set_attr \"type\" \"mov_reg,mov_reg,mov_imm,mov_imm,mvn_imm,load1,store1,load1,store1\")\n+  [(set_attr \"type\" \"mov_reg,mov_reg,mov_imm,mov_imm,mvn_imm,load_4,store_4,load_4,store_4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,yes,no,yes,no,no,no,no,no\")\n    (set_attr \"arch\" \"t2,any,any,t2,any,t2,t2,any,any\")\n@@ -7016,7 +7016,7 @@\n     }\n   \"\n   [(set_attr \"conds\" \"unconditional\")\n-   (set_attr \"type\" \"load1,store1,mov_reg,multiple\")\n+   (set_attr \"type\" \"load_4,store_4,mov_reg,multiple\")\n    (set_attr \"length\" \"4,4,4,8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")]\n@@ -7073,7 +7073,7 @@\n    str%?\\\\t%1, %0\\\\t%@ float\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"mov_reg,load1,store1\")\n+   (set_attr \"type\" \"mov_reg,load_4,store_4\")\n    (set_attr \"arm_pool_range\" \"*,4096,*\")\n    (set_attr \"thumb2_pool_range\" \"*,4094,*\")\n    (set_attr \"arm_neg_pool_range\" \"*,4084,*\")\n@@ -7162,7 +7162,7 @@\n     }\n   \"\n   [(set_attr \"length\" \"8,12,16,8,8\")\n-   (set_attr \"type\" \"multiple,multiple,multiple,load2,store2\")\n+   (set_attr \"type\" \"multiple,multiple,multiple,load_8,store_8\")\n    (set_attr \"arm_pool_range\" \"*,*,*,1020,*\")\n    (set_attr \"thumb2_pool_range\" \"*,*,*,1018,*\")\n    (set_attr \"arm_neg_pool_range\" \"*,*,*,1004,*\")\n@@ -8489,7 +8489,7 @@\n       }\n     return output_return_instruction (const_true_rtx, true, false, false);\n   }\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"length\" \"12\")\n    (set_attr \"predicable\" \"yes\")]\n )\n@@ -8513,7 +8513,7 @@\n   }\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"length\" \"12\")\n-   (set_attr \"type\" \"load1\")]\n+   (set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"*cond_<return_str>return_inverted\"\n@@ -8535,7 +8535,7 @@\n   }\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"length\" \"12\")\n-   (set_attr \"type\" \"load1\")]\n+   (set_attr \"type\" \"load_4\")]\n )\n \n (define_insn \"*arm_simple_return\"\n@@ -8718,7 +8718,7 @@\n         (unspec:SI [(const_int 0)] UNSPEC_PROBE_STACK))]\n   \"TARGET_32BIT\"\n   \"str%?\\\\tr0, %0\"\n-  [(set_attr \"type\" \"store1\")\n+  [(set_attr \"type\" \"store_4\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -8828,7 +8828,7 @@\n \t(match_operand:SI 0 \"memory_operand\" \"m\"))]\n   \"TARGET_ARM\"\n   \"ldr%?\\\\t%|pc, %0\\\\t%@ indirect memory jump\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"pool_range\" \"4096\")\n    (set_attr \"neg_pool_range\" \"4084\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -10739,7 +10739,7 @@\n   }\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"load1\")]\n+   (set_attr \"type\" \"load_4\")]\n )\n \n ; This pattern is never tried by combine, so do it as a peephole\n@@ -11086,7 +11086,7 @@\n \n     return \\\"\\\";\n   }\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set (attr \"length\")\n \t(symbol_ref \"arm_attr_length_push_multi (operands[2], operands[1])\"))]\n )\n@@ -11122,7 +11122,7 @@\n     return \\\"\\\";\n   }\n   \"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set (attr \"length\")\n \t(symbol_ref \"arm_attr_length_pop_multi (operands,\n@@ -11155,7 +11155,7 @@\n     return \\\"\\\";\n   }\n   \"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set (attr \"length\")\n \t(symbol_ref \"arm_attr_length_pop_multi (operands, /*return_pc=*/true,\n@@ -11178,7 +11178,7 @@\n     return \\\"\\\";\n   }\n   \"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set (attr \"length\")\n \t(symbol_ref \"arm_attr_length_pop_multi (operands, /*return_pc=*/true,\n@@ -11192,7 +11192,7 @@\n         (mem:SI (post_inc:SI (match_operand:SI 0 \"s_register_operand\" \"+rk\"))))]\n   \"TARGET_32BIT && (reload_in_progress || reload_completed)\"\n   \"ldr%?\\t%|pc, [%0], #4\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"predicable\" \"yes\")]\n )\n ;; Pop for floating point registers (as used in epilogue RTL)\n@@ -11225,7 +11225,7 @@\n     return \\\"\\\";\n   }\n   \"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"conds\" \"unconditional\")\n    (set_attr \"predicable\" \"no\")]\n )\n@@ -11407,7 +11407,7 @@\n \t     (match_operand:SI 2 \"\" \"\"))]\n   \"TARGET_32BIT && arm_arch5e\"\n   \"pld\\\\t%a0\"\n-  [(set_attr \"type\" \"load1\")]\n+  [(set_attr \"type\" \"load_4\")]\n )\n \n ;; General predication pattern\n@@ -11794,7 +11794,7 @@\n                                   operands[1], INTVAL (operands[2]),\n                                   false, true))\"\n   \"ldrd%?\\t%0, %3, [%1, %2]\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -11808,7 +11808,7 @@\n      && (operands_ok_ldrd_strd (operands[0], operands[2],\n                                   operands[1], 0, false, true))\"\n   \"ldrd%?\\t%0, %2, [%1]\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -11822,7 +11822,7 @@\n      && (operands_ok_ldrd_strd (operands[0], operands[2],\n                                   operands[1], -4, false, true))\"\n   \"ldrd%?\\t%0, %2, [%1, #-4]\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -11839,7 +11839,7 @@\n                                   operands[0], INTVAL (operands[1]),\n                                   false, false))\"\n   \"strd%?\\t%2, %4, [%0, %1]\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -11853,7 +11853,7 @@\n      && (operands_ok_ldrd_strd (operands[1], operands[2],\n                                   operands[0], 0, false, false))\"\n   \"strd%?\\t%1, %2, [%0]\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -11867,7 +11867,7 @@\n      && (operands_ok_ldrd_strd (operands[1], operands[2],\n                                   operands[0], -4, false, false))\"\n   \"strd%?\\t%1, %2, [%0, #-4]\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n "}, {"sha": "d91241fce3741ed01a7b65d9f5305c843866ffbb", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -176,12 +176,12 @@\n \n (define_insn_reservation \"1020load1_op\" 2\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"load_byte,load1\"))\n+      (eq_attr \"type\" \"load_byte,load_4\"))\n  \"1020a_e+1020l_e,1020l_m,1020l_w\")\n \n (define_insn_reservation \"1020store1_op\" 0\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"1020a_e+1020l_e,1020l_m,1020l_w\")\n \n ;; A load's result can be stored by an immediately following store\n@@ -211,22 +211,22 @@\n \n (define_insn_reservation \"1020load2_op\" 2\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"1020a_e+1020l_e,1020l_m,1020l_w\")\n \n (define_insn_reservation \"1020store2_op\" 0\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"1020a_e+1020l_e,1020l_m,1020l_w\")\n \n (define_insn_reservation \"1020load34_op\" 3\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"load3,load4\"))\n+      (eq_attr \"type\" \"load_12,load_16\"))\n  \"1020a_e+1020l_e,1020l_e+1020l_m,1020l_m,1020l_w\")\n \n (define_insn_reservation \"1020store34_op\" 0\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"store3,store4\"))\n+      (eq_attr \"type\" \"store_12,store_16\"))\n  \"1020a_e+1020l_e,1020l_e+1020l_m,1020l_m,1020l_w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "951c2a45ba9f6a992b0eee96ac7735ecbca76283", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -176,12 +176,12 @@\n \n (define_insn_reservation \"load1_op\" 2\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"load_byte,load1\"))\n+      (eq_attr \"type\" \"load_byte,load_4\"))\n  \"a_e+l_e,l_m,a_w+l_w\")\n \n (define_insn_reservation \"store1_op\" 0\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"a_e+l_e,l_m,a_w+l_w\")\n \n ;; A load's result can be stored by an immediately following store\n@@ -206,22 +206,22 @@\n \n (define_insn_reservation \"load2_op\" 2\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"a_e+l_e,l_m,a_w+l_w\")\n \n (define_insn_reservation \"store2_op\" 0\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"a_e+l_e,l_m,a_w+l_w\")\n \n (define_insn_reservation \"load34_op\" 3\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"load3,load4\"))\n+      (eq_attr \"type\" \"load_12,load_16\"))\n  \"a_e+l_e,a_e+l_e+l_m,a_e+l_m,a_w+l_w\")\n \n (define_insn_reservation \"store34_op\" 0\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"store3,store4\"))\n+      (eq_attr \"type\" \"store_12,store_16\"))\n  \"a_e+l_e,a_e+l_e+l_m,a_e+l_m,a_w+l_w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "e434c360a0612a9b93732af3e4d12de726626f4e", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -294,7 +294,7 @@\n \n (define_insn_reservation \"11_load1\" 3\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"load1\"))\n+      (eq_attr \"type\" \"load_4\"))\n  \"l_a+e_1,l_dc1,l_dc2,l_wb\")\n \n ;; Load byte results are not available until the writeback stage, where\n@@ -307,33 +307,33 @@\n \n (define_insn_reservation \"11_store1\" 0\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"l_a+e_1,l_dc1,l_dc2,l_wb\")\n \n ;; Load/store double words into adjacent registers.  The timing and\n ;; latencies are different depending on whether the address is 64-bit\n ;; aligned.  This model assumes that it is.\n (define_insn_reservation \"11_load2\" 3\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"l_a+e_1,l_dc1,l_dc2,l_wb\")\n \n (define_insn_reservation \"11_store2\" 0\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"l_a+e_1,l_dc1,l_dc2,l_wb\")\n \n ;; Load/store multiple registers.  Two registers are stored per cycle.\n ;; Actual timing depends on how many registers are affected, so we\n ;; optimistically schedule a low latency.\n (define_insn_reservation \"11_load34\" 4\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"load3,load4\"))\n+      (eq_attr \"type\" \"load_12,load_16\"))\n  \"l_a+e_1,l_dc1*2,l_dc2,l_wb\")\n \n (define_insn_reservation \"11_store34\" 0\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"store3,store4\"))\n+      (eq_attr \"type\" \"store_12,store_16\"))\n  \"l_a+e_1,l_dc1*2,l_dc2,l_wb\")\n \n ;; A store can start immediately after an alu op, if that alu op does"}, {"sha": "cc5dbee0643f9c04aa6d419b944858389f98344c", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -133,43 +133,43 @@\n ;; most common and (b) the pessimistic assumption will lead to fewer stalls.\n (define_insn_reservation \"9_load1_op\" 3\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"e*2,m,w\")\n \n (define_insn_reservation \"9_store1_op\" 0\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"e,m,w\")\n \n ;; multiple word loads and stores\n (define_insn_reservation \"9_load2_op\" 3\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"e,m*2,w\")\n \n (define_insn_reservation \"9_load3_op\" 4\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"load3\"))\n+      (eq_attr \"type\" \"load_12\"))\n  \"e,m*3,w\")\n \n (define_insn_reservation \"9_load4_op\" 5\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"e,m*4,w\")\n \n (define_insn_reservation \"9_store2_op\" 0\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"e,m*2,w\")\n \n (define_insn_reservation \"9_store3_op\" 0\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"store3\"))\n+      (eq_attr \"type\" \"store_12\"))\n  \"e,m*3,w\")\n \n (define_insn_reservation \"9_store4_op\" 0\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"e,m*4,w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "78b5e3ac32b1f26a93f5495406d2d52a0aabebfc", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -139,25 +139,25 @@\n ;; Loads of up to two words.\n (define_insn_reservation \"cortex_a15_load1\" 4\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"type\" \"load_byte,load1,load2\"))\n+       (eq_attr \"type\" \"load_byte,load_4,load_8\"))\n   \"ca15_issue1,ca15_ls,ca15_ldr,nothing\")\n \n ;; Loads of three or four words.\n (define_insn_reservation \"cortex_a15_load3\" 5\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"type\" \"load3,load4\"))\n+       (eq_attr \"type\" \"load_12,load_16\"))\n   \"ca15_issue2,ca15_ls1+ca15_ls2,ca15_ldr,ca15_ldr,nothing\")\n \n ;; Stores of up to two words.\n (define_insn_reservation \"cortex_a15_store1\" 0\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"ca15_issue1,ca15_ls,ca15_str\")\n \n ;; Stores of three or four words.\n (define_insn_reservation \"cortex_a15_store3\" 0\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"type\" \"store3,store4\"))\n+       (eq_attr \"type\" \"store_12,store_16\"))\n   \"ca15_issue2,ca15_ls1+ca15_ls2,ca15_str,ca15_str\")\n \n ;; We include Neon.md here to ensure that the branch can block the Neon units."}, {"sha": "d83cca12de5495eff8edb9b8d10851e312199e6f", "filename": "gcc/config/arm/cortex-a17.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -127,37 +127,37 @@\n ;; Loads of up to two words.\n (define_insn_reservation \"cortex_a17_load1\" 4\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"load_byte,load1,load2\"))\n+       (eq_attr \"type\" \"load_byte,load_4,load_8\"))\n   \"ca17_ls0|ca17_ls1\")\n \n ;; Loads of three words.\n (define_insn_reservation \"cortex_a17_load3\" 4\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"load3\"))\n+       (eq_attr \"type\" \"load_12\"))\n   \"ca17_ls0+ca17_ls1\")\n \n ;; Loads of four words.\n (define_insn_reservation \"cortex_a17_load4\" 4\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"load4\"))\n+       (eq_attr \"type\" \"load_16\"))\n   \"ca17_ls0+ca17_ls1\")\n \n ;; Stores of up to two words.\n (define_insn_reservation \"cortex_a17_store1\" 0\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"ca17_ls0|ca17_ls1\")\n \n ;; Stores of three words\n (define_insn_reservation \"cortex_a17_store3\" 0\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"store3\"))\n+       (eq_attr \"type\" \"store_12\"))\n   \"ca17_ls0+ca17_ls1\")\n \n ;; Stores of four words.\n (define_insn_reservation \"cortex_a17_store4\" 0\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"store4\"))\n+       (eq_attr \"type\" \"store_16\"))\n   \"ca17_ls0+ca17_ls1\")\n \n (define_insn_reservation \"cortex_a17_call\" 0"}, {"sha": "a7a521f93da7d8dd2ecb3fd3f71c72b5a4b04cf6", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -106,45 +106,45 @@\n \n (define_insn_reservation \"cortex_a5_load1\" 2\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"load_byte,load1\"))\n+       (eq_attr \"type\" \"load_byte,load_4\"))\n   \"cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_store1\" 0\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n   \"cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_load2\" 3\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_store2\" 0\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_load3\" 4\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"load3\"))\n+       (eq_attr \"type\" \"load_12\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1+cortex_a5_branch,\\\n    cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_store3\" 0\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"store3\"))\n+       (eq_attr \"type\" \"store_12\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1+cortex_a5_branch,\\\n    cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_load4\" 5\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"load3\"))\n+       (eq_attr \"type\" \"load_12\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1+cortex_a5_branch,\\\n    cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_store4\" 0\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"store3\"))\n+       (eq_attr \"type\" \"store_12\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1+cortex_a5_branch,\\\n    cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n "}, {"sha": "11cba6880cb0eb4122b625c6f616c99cf71f87fe", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -141,43 +141,43 @@\n \n (define_insn_reservation \"cortex_a53_load1\" 4\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"load_byte,load1,load_acq\"))\n+       (eq_attr \"type\" \"load_byte,load_4,load_acq\"))\n   \"cortex_a53_slot_any+cortex_a53_ls_agen,\n    cortex_a53_load\")\n \n (define_insn_reservation \"cortex_a53_store1\" 2\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"store1,store_rel\"))\n+       (eq_attr \"type\" \"store_4,store_rel\"))\n   \"cortex_a53_slot_any+cortex_a53_ls_agen,\n    cortex_a53_store\")\n \n ;; Model AArch64-sized LDP Xm, Xn, [Xa]\n \n (define_insn_reservation \"cortex_a53_load2\" 4\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"cortex_a53_single_issue+cortex_a53_ls_agen,\n    cortex_a53_load+cortex_a53_slot0,\n    cortex_a53_load\")\n \n (define_insn_reservation \"cortex_a53_store2\" 2\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"cortex_a53_slot_any+cortex_a53_ls_agen,\n    cortex_a53_store\")\n \n ;; Model AArch32-sized LDM Ra, {Rm, Rn, Ro}\n \n (define_insn_reservation \"cortex_a53_load3plus\" 6\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"load3,load4\"))\n+       (eq_attr \"type\" \"load_12,load_16\"))\n   \"cortex_a53_single_issue+cortex_a53_ls_agen,\n    cortex_a53_load+cortex_a53_slot0,\n    cortex_a53_load\")\n \n (define_insn_reservation \"cortex_a53_store3plus\" 2\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"store3,store4\"))\n+       (eq_attr \"type\" \"store_12,store_16\"))\n   \"cortex_a53_slot_any+cortex_a53_ls_agen,\n    cortex_a53_store+cortex_a53_slot0,\n    cortex_a53_store\")"}, {"sha": "d86beea19459108c8fd37eb990d945d4377e9bdc", "filename": "gcc/config/arm/cortex-a57.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a57.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -357,25 +357,25 @@\n ;; Loads of up to two words.\n (define_insn_reservation \"cortex_a57_load1\" 5\n   (and (eq_attr \"tune\" \"cortexa57\")\n-       (eq_attr \"type\" \"load_byte,load1,load2\"))\n+       (eq_attr \"type\" \"load_byte,load_4,load_8\"))\n   \"ca57_load_model\")\n \n ;; Loads of three or four words.\n (define_insn_reservation \"cortex_a57_load3\" 5\n   (and (eq_attr \"tune\" \"cortexa57\")\n-       (eq_attr \"type\" \"load3,load4\"))\n+       (eq_attr \"type\" \"load_12,load_16\"))\n   \"ca57_ls_issue*2,ca57_load_model\")\n \n ;; Stores of up to two words.\n (define_insn_reservation \"cortex_a57_store1\" 0\n   (and (eq_attr \"tune\" \"cortexa57\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"ca57_store_model\")\n \n ;; Stores of three or four words.\n (define_insn_reservation \"cortex_a57_store3\" 0\n   (and (eq_attr \"tune\" \"cortexa57\")\n-       (eq_attr \"type\" \"store3,store4\"))\n+       (eq_attr \"type\" \"store_12,store_16\"))\n   \"ca57_ls_issue*2,ca57_store_model\")\n \n ;; Advanced SIMD Unit - Integer Arithmetic Instructions."}, {"sha": "0dbe0a74c238aa7a42176243cd2e80529aa9963c", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -196,42 +196,42 @@\n \n (define_insn_reservation \"cortex_a7_load1\" 2\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"load_byte,load1\"))\n+       (eq_attr \"type\" \"load_byte,load_4\"))\n   \"cortex_a7_ex1\")\n \n (define_insn_reservation \"cortex_a7_store1\" 0\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n   \"cortex_a7_ex1\")\n \n (define_insn_reservation \"cortex_a7_load2\" 2\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"cortex_a7_both\")\n \n (define_insn_reservation \"cortex_a7_store2\" 0\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"cortex_a7_both\")\n \n (define_insn_reservation \"cortex_a7_load3\" 3\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"load3\"))\n+       (eq_attr \"type\" \"load_12\"))\n   \"cortex_a7_both, cortex_a7_ex1\")\n \n (define_insn_reservation \"cortex_a7_store3\" 0\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"store4\"))\n+       (eq_attr \"type\" \"store_16\"))\n   \"cortex_a7_both, cortex_a7_ex1\")\n \n (define_insn_reservation \"cortex_a7_load4\" 3\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"load4\"))\n+       (eq_attr \"type\" \"load_16\"))\n   \"cortex_a7_both, cortex_a7_both\")\n \n (define_insn_reservation \"cortex_a7_store4\" 0\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"store3\"))\n+       (eq_attr \"type\" \"store_12\"))\n   \"cortex_a7_both, cortex_a7_both\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "ceec5bee0bcb00e83f26500771ddb739f45cf334", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -198,7 +198,7 @@\n ;; We assume 64-bit alignment for doubleword loads.\n (define_insn_reservation \"cortex_a8_load1_2\" 3\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"load1,load2,load_byte\"))\n+       (eq_attr \"type\" \"load_4,load_8,load_byte\"))\n   \"cortex_a8_load_store_1\")\n \n (define_bypass 2 \"cortex_a8_load1_2\"\n@@ -221,7 +221,7 @@\n ;; issued as two micro-ops.\n (define_insn_reservation \"cortex_a8_load3_4\" 5\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"load3,load4\"))\n+       (eq_attr \"type\" \"load_12,load_16\"))\n   \"cortex_a8_load_store_2\")\n \n (define_bypass 4 \"cortex_a8_load3_4\"\n@@ -238,12 +238,12 @@\n \n (define_insn_reservation \"cortex_a8_store1_2\" 0\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"cortex_a8_load_store_1\")\n \n (define_insn_reservation \"cortex_a8_store3_4\" 0\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"store3,store4\"))\n+       (eq_attr \"type\" \"store_12,store_16\"))\n   \"cortex_a8_load_store_2\")\n \n ;; An ALU instruction acting as a producer for a store instruction"}, {"sha": "1140e18a89ac7465160880fdf8e7afcccdb0c2dc", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -107,7 +107,7 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n \n (define_insn_reservation \"cortex_a9_load1_2\" 4\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"type\" \"load1, load2, load_byte, f_loads, f_loadd\"))\n+       (eq_attr \"type\" \"load_4, load_8, load_byte, f_loads, f_loadd\"))\n   \"cortex_a9_ls\")\n \n ;; Loads multiples and store multiples can't be issued for 2 cycles in a\n@@ -116,12 +116,12 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n \n (define_insn_reservation \"cortex_a9_load3_4\" 5\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"type\" \"load3, load4\"))\n+       (eq_attr \"type\" \"load_12, load_16\"))\n   \"cortex_a9_ls, cortex_a9_ls\")\n \n (define_insn_reservation \"cortex_a9_store1_2\" 0\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"type\" \"store1, store2, f_stores, f_stored\"))\n+       (eq_attr \"type\" \"store_4, store_8, f_stores, f_stored\"))\n   \"cortex_a9_ls\")\n \n ;; Almost all our store multiples use an auto-increment\n@@ -130,7 +130,7 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n \n (define_insn_reservation \"cortex_a9_store3_4\" 0\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"type\" \"store3, store4\"))\n+       (eq_attr \"type\" \"store_12, store_16\"))\n   \"cortex_a9_ls+(cortex_a9_p0_default | cortex_a9_p1_default), cortex_a9_ls\")\n \n ;; We get 16*16 multiply / mac results in 3 cycles."}, {"sha": "123a2a02b8979ecb9db110f479d12175971ff1e7", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -50,51 +50,51 @@\n ;; Byte, half-word and word load is two cycles.\n (define_insn_reservation \"cortex_m4_load1\" 2\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"load_byte,load1\"))\n+       (eq_attr \"type\" \"load_byte,load_4\"))\n   \"cortex_m4_a, cortex_m4_b\")\n \n ;; str rx, [ry, #imm] is always one cycle.\n (define_insn_reservation \"cortex_m4_store1_1\" 1\n   (and (and (eq_attr \"tune\" \"cortexm4\")\n-\t    (eq_attr \"type\" \"store1\"))\n+\t    (eq_attr \"type\" \"store_4\"))\n        (match_test \"arm_address_offset_is_imm (insn)\"))\n   \"cortex_m4_a\")\n \n ;; Other byte, half-word and word load is two cycles.\n (define_insn_reservation \"cortex_m4_store1_2\" 2\n   (and (and (eq_attr \"tune\" \"cortexm4\")\n-\t    (eq_attr \"type\" \"store1\"))\n+\t    (eq_attr \"type\" \"store_4\"))\n        (not (match_test \"arm_address_offset_is_imm (insn)\")))\n   \"cortex_m4_a*2\")\n \n (define_insn_reservation \"cortex_m4_load2\" 3\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"cortex_m4_ex*3\")\n \n (define_insn_reservation \"cortex_m4_store2\" 3\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"cortex_m4_ex*3\")\n \n (define_insn_reservation \"cortex_m4_load3\" 4\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"load3\"))\n+       (eq_attr \"type\" \"load_12\"))\n   \"cortex_m4_ex*4\")\n \n (define_insn_reservation \"cortex_m4_store3\" 4\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"store3\"))\n+       (eq_attr \"type\" \"store_12\"))\n   \"cortex_m4_ex*4\")\n \n (define_insn_reservation \"cortex_m4_load4\" 5\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"load4\"))\n+       (eq_attr \"type\" \"load_16\"))\n   \"cortex_m4_ex*5\")\n \n (define_insn_reservation \"cortex_m4_store4\" 5\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"store4\"))\n+       (eq_attr \"type\" \"store_16\"))\n   \"cortex_m4_ex*5\")\n \n (define_bypass 1 \"cortex_m4_load1\""}, {"sha": "e07d7cdfa1b15b77d83636bd403851d86b0dc1ac", "filename": "gcc/config/arm/cortex-m7.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m7.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -93,33 +93,33 @@\n ;; The load instructions.\n (define_insn_reservation \"cortex_m7_load1\" 2\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"load_byte, load1\"))\n+        (eq_attr \"type\" \"load_byte, load_4\"))\n    \"cm7_i0|cm7_i1,cm7_lsu\")\n \n (define_insn_reservation \"cortex_m7_load2\" 2\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"load2\"))\n+        (eq_attr \"type\" \"load_8\"))\n    \"cm7_all_units\")\n \n (define_insn_reservation \"cortex_m7_loadm\" 2\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"load3,load4\"))\n+        (eq_attr \"type\" \"load_12,load_16\"))\n    \"cm7_all_units*2\")\n \n ;; The store instructions.\n (define_insn_reservation \"cortex_m7_store1\" 0\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"store1\"))\n+        (eq_attr \"type\" \"store_4\"))\n    \"cm7_i0|cm7_i1,cm7_lsu+cm7_wb\")\n \n (define_insn_reservation \"cortex_m7_store2\" 0\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"store2\"))\n+        (eq_attr \"type\" \"store_8\"))\n    \"cm7_all_units\")\n \n (define_insn_reservation \"cortex_m7_storem\" 0\n    (and (eq_attr \"tune\" \"cortexm7\")\n-        (eq_attr \"type\" \"store3,store4\"))\n+        (eq_attr \"type\" \"store_12,store_16\"))\n    \"cm7_all_units*2\")\n \n ;; The FPU instructions."}, {"sha": "bc65689a2558703a836bbe03783668ea06d84ac5", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -234,12 +234,12 @@\n \n (define_insn_reservation \"cortex_r4_load_1_2\" 3\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"load1,load2\"))\n+       (eq_attr \"type\" \"load_4,load_8\"))\n   \"cortex_r4_load_store\")\n \n (define_insn_reservation \"cortex_r4_load_3_4\" 4\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"load3,load4\"))\n+       (eq_attr \"type\" \"load_12,load_16\"))\n   \"cortex_r4_load_store_2\")\n \n ;; If a producing load is followed by an instruction consuming only\n@@ -289,11 +289,11 @@\n \n (define_insn_reservation \"cortex_r4_store_1_2\" 0\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"store1,store2\"))\n+       (eq_attr \"type\" \"store_4,store_8\"))\n   \"cortex_r4_load_store\")\n \n (define_insn_reservation \"cortex_r4_store_3_4\" 0\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"store3,store4\"))\n+       (eq_attr \"type\" \"store_12,store_16\"))\n   \"cortex_r4_load_store_2\")\n "}, {"sha": "098a51f7a283c1295c7ca98ef6eee0bc76c11dc7", "filename": "gcc/config/arm/exynos-m1.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fexynos-m1.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -432,25 +432,25 @@\n ;; Loads of up to 2 words.\n (define_insn_reservation \"exynos_m1_load\" 4\n   (and (eq_attr \"tune\" \"exynosm1\")\n-       (eq_attr \"type\" \"load_byte, load1, load2\"))\n+       (eq_attr \"type\" \"load_byte, load_4, load_8\"))\n   \"em1_ld\")\n \n ;; Loads of 3 or 4 words.\n (define_insn_reservation \"exynos_m1_loadm\" 6\n   (and (eq_attr \"tune\" \"exynosm1\")\n-       (eq_attr \"type\" \"load3, load4\"))\n+       (eq_attr \"type\" \"load_12, load_16\"))\n   \"(em1_ld * 3)\")\n \n ;; Stores of up to 2 words.\n (define_insn_reservation \"exynos_m1_store\" 1\n   (and (eq_attr \"tune\" \"exynosm1\")\n-       (eq_attr \"type\" \"store1, store2\"))\n+       (eq_attr \"type\" \"store_4, store_8\"))\n   \"em1_st\")\n \n ;; Stores of 3 or 4 words.\n (define_insn_reservation \"exynos_m1_storem\" 3\n   (and (eq_attr \"tune\" \"exynosm1\")\n-       (eq_attr \"type\" \"store3, store4\"))\n+       (eq_attr \"type\" \"store_12, store_16\"))\n   \"(em1_st * 3)\")\n \n ;; Advanced SIMD Unit"}, {"sha": "1cf63d6183a35d601d647449579734e6d56aaea3", "filename": "gcc/config/arm/fa526.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa526.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa526.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa526.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -108,42 +108,42 @@\n \n (define_insn_reservation \"526_load1_op\" 3\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"fa526_core\")\n \n (define_insn_reservation \"526_load2_op\" 4\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"fa526_core*2\")\n \n (define_insn_reservation \"526_load3_op\" 5\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"load3\"))\n+      (eq_attr \"type\" \"load_12\"))\n  \"fa526_core*3\")\n \n (define_insn_reservation \"526_load4_op\" 6\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"fa526_core*4\")\n \n (define_insn_reservation \"526_store1_op\" 0\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"fa526_core\")\n \n (define_insn_reservation \"526_store2_op\" 1\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"fa526_core*2\")\n \n (define_insn_reservation \"526_store3_op\" 2\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"store3\"))\n+      (eq_attr \"type\" \"store_12\"))\n  \"fa526_core*3\")\n \n (define_insn_reservation \"526_store4_op\" 3\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"fa526_core*4\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "d4b3e25abc5847bba1dcaa03fd2d69ddcd888bbb", "filename": "gcc/config/arm/fa606te.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa606te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa606te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa606te.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -111,48 +111,48 @@\n \n (define_insn_reservation \"606te_load1_op\" 2\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"fa606te_core\")\n \n (define_insn_reservation \"606te_load2_op\" 3\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"load2\"))\n+      (eq_attr \"type\" \"load_8\"))\n  \"fa606te_core*2\")\n \n (define_insn_reservation \"606te_load3_op\" 4\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"load3\"))\n+      (eq_attr \"type\" \"load_12\"))\n  \"fa606te_core*3\")\n \n (define_insn_reservation \"606te_load4_op\" 5\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"fa606te_core*4\")\n \n (define_insn_reservation \"606te_store1_op\" 0\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"fa606te_core\")\n \n (define_insn_reservation \"606te_store2_op\" 1\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"store2\"))\n+      (eq_attr \"type\" \"store_8\"))\n  \"fa606te_core*2\")\n \n (define_insn_reservation \"606te_store3_op\" 2\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"store3\"))\n+      (eq_attr \"type\" \"store_12\"))\n  \"fa606te_core*3\")\n \n (define_insn_reservation \"606te_store4_op\" 3\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"fa606te_core*4\")\n \n \n ;;(define_insn_reservation \"606te_ldm_op\" 9\n ;; (and (eq_attr \"tune\" \"fa606te\")\n-;;      (eq_attr \"type\" \"load2,load3,load4,store2,store3,store4\"))\n+;;      (eq_attr \"type\" \"load_8,load_12,load_16,store_8,store_12,store_16\"))\n ;; \"fa606te_core*7\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "ca6096dcecd771a1a53d0bf254281206cbc5d7ec", "filename": "gcc/config/arm/fa626te.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa626te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa626te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa626te.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -123,32 +123,32 @@\n \n (define_insn_reservation \"626te_load1_op\" 3\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"fa626te_core\")\n \n (define_insn_reservation \"626te_load2_op\" 4\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"load2,load3\"))\n+      (eq_attr \"type\" \"load_8,load_12\"))\n  \"fa626te_core*2\")\n \n (define_insn_reservation \"626te_load3_op\" 5\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"fa626te_core*3\")\n \n (define_insn_reservation \"626te_store1_op\" 0\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"fa626te_core\")\n \n (define_insn_reservation \"626te_store2_op\" 1\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"store2,store3\"))\n+      (eq_attr \"type\" \"store_8,store_12\"))\n  \"fa626te_core*2\")\n \n (define_insn_reservation \"626te_store3_op\" 2\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"fa626te_core*3\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "b06a6f5aaa7d3838a86fc73e4f78ac2352c97f93", "filename": "gcc/config/arm/fa726te.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa726te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffa726te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa726te.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -144,13 +144,13 @@\n \n (define_insn_reservation \"726te_load1_op\" 3\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"(fa726te_issue+fa726te_lsu_pipe_e+fa726te_lsu_pipe_w)\\\n   | (fa726te_issue+fa726te_lsu1_pipe_e+fa726te_lsu1_pipe_w,fa726te_blockage)\")\n \n (define_insn_reservation \"726te_store1_op\" 1\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"fa726te_blockage*2\")\n \n ;; Load/Store Multiple blocks all pipelines in EX stages until WB.\n@@ -161,22 +161,22 @@\n ;; the pipe 1 is stalled.\n (define_insn_reservation \"726te_ldm2_op\" 4\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"load2,load3\"))\n+      (eq_attr \"type\" \"load_8,load_12\"))\n  \"fa726te_blockage*4\")\n \n (define_insn_reservation \"726te_ldm3_op\" 5\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"fa726te_blockage*5\")\n \n (define_insn_reservation \"726te_stm2_op\" 2\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"store2,store3\"))\n+      (eq_attr \"type\" \"store_8,store_12\"))\n  \"fa726te_blockage*3\")\n \n (define_insn_reservation \"726te_stm3_op\" 3\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"fa726te_blockage*4\")\n \n (define_bypass 1 \"726te_load1_op,726te_ldm2_op,726te_ldm3_op\" \"726te_store1_op,\\"}, {"sha": "28339204e327eaff6d0e27bfaa1be1a1797dca1a", "filename": "gcc/config/arm/fmp626.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffmp626.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ffmp626.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffmp626.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -115,32 +115,32 @@\n \n (define_insn_reservation \"mp626_load1_op\" 5\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"load1,load_byte\"))\n+      (eq_attr \"type\" \"load_4,load_byte\"))\n  \"fmp626_core\")\n \n (define_insn_reservation \"mp626_load2_op\" 6\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"load2,load3\"))\n+      (eq_attr \"type\" \"load_8,load_12\"))\n  \"fmp626_core*2\")\n \n (define_insn_reservation \"mp626_load3_op\" 7\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"load4\"))\n+      (eq_attr \"type\" \"load_16\"))\n  \"fmp626_core*3\")\n \n (define_insn_reservation \"mp626_store1_op\" 0\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"store1\"))\n+      (eq_attr \"type\" \"store_4\"))\n  \"fmp626_core\")\n \n (define_insn_reservation \"mp626_store2_op\" 1\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"store2,store3\"))\n+      (eq_attr \"type\" \"store_8,store_12\"))\n  \"fmp626_core*2\")\n \n (define_insn_reservation \"mp626_store3_op\" 2\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"store4\"))\n+      (eq_attr \"type\" \"store_16\"))\n  \"fmp626_core*3\")\n \n (define_bypass 1 \"mp626_load1_op,mp626_load2_op,mp626_load3_op\""}, {"sha": "ab5ae659c987507355f06a0adff70ad4150ae629", "filename": "gcc/config/arm/iwmmxt.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiwmmxt.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -155,7 +155,7 @@\n                                  (const_int 8)\n                                  (const_int 4))]\n                               (const_int 4)))\n-   (set_attr \"type\" \"*,*,*,load2,store2,*,*,*,*,*,f_mcrr,f_mrrc,\\\n+   (set_attr \"type\" \"*,*,*,load_8,store_8,*,*,*,*,*,f_mcrr,f_mrrc,\\\n                      ffarithd,f_loadd,f_stored\")\n    (set_attr \"arm_pool_range\" \"*,*,*,1020,*,*,*,*,*,*,*,*,*,1020,*\")\n    (set_attr \"arm_neg_pool_range\" \"*,*,*,1008,*,*,*,*,*,*,*,*,*,1008,*\")]\n@@ -188,7 +188,7 @@\n      default:\n        gcc_unreachable ();\n      }\"\n-  [(set_attr \"type\"           \"*,*,*,*,load1,store1,*,*,*,*,f_mcr,f_mrc,\\\n+  [(set_attr \"type\"           \"*,*,*,*,load_4,store_4,*,*,*,*,f_mcr,f_mrc,\\\n                                fmov,f_loads,f_stores\")\n    (set_attr \"length\"         \"*,*,*,*,*,        *,*,*,  16,     *,*,*,*,*,*\")\n    (set_attr \"pool_range\"     \"*,*,*,*,4096,     *,*,*,1024,     *,*,*,*,1020,*\")\n@@ -227,7 +227,7 @@\n    case 4: return \\\"tmcr%?\\\\t%0, %1\\\";\n    default: return \\\"tmrc%?\\\\t%0, %1\\\";\n   }\"\n-  [(set_attr \"type\"           \"*,*,load1,store1,*,*\")\n+  [(set_attr \"type\"           \"*,*,load_4,store_4,*,*\")\n    (set_attr \"pool_range\"     \"*,*,4096,     *,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,4084,     *,*,*\")]\n )\n@@ -249,7 +249,7 @@\n    }\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\"         \"4,     4,   4,4,4,8,   8,8\")\n-   (set_attr \"type\"           \"wmmx_wmov,wmmx_wstr,wmmx_wldr,wmmx_tmrrc,wmmx_tmcrr,*,load1,store1\")\n+   (set_attr \"type\"           \"wmmx_wmov,wmmx_wstr,wmmx_wldr,wmmx_tmrrc,wmmx_tmcrr,*,load_4,store_4\")\n    (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256,*\")\n    (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244,*\")]\n )"}, {"sha": "01fbb553fbc89831fb44248cafd289a8d1a74089", "filename": "gcc/config/arm/ldmstm.md", "status": "modified", "additions": 57, "deletions": 57, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fldmstm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fldmstm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fldmstm.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -36,7 +36,7 @@\n                   (const_int 12))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"ldm%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -55,7 +55,7 @@\n                   (const_int 12))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n   \"ldmia\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")])\n+  [(set_attr \"type\" \"load_16\")])\n \n (define_insn \"*ldm4_ia_update\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -74,7 +74,7 @@\n                   (const_int 12))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 5\"\n   \"ldmia%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -95,7 +95,7 @@\n                   (const_int 12))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 5\"\n   \"ldmia\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")])\n+  [(set_attr \"type\" \"load_16\")])\n \n (define_insn \"*stm4_\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -109,7 +109,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"stm%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -127,7 +127,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 5\"\n   \"stmia%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -145,7 +145,7 @@\n           (match_operand:SI 4 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 5\"\n   \"stmia\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")])\n+  [(set_attr \"type\" \"store_16\")])\n \n (define_insn \"*ldm4_ib\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -163,7 +163,7 @@\n                   (const_int 16))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"ldmib%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm4_ib_update\"\n@@ -184,7 +184,7 @@\n                   (const_int 16))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 5\"\n   \"ldmib%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm4_ib\"\n@@ -199,7 +199,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"stmib%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm4_ib_update\"\n@@ -216,7 +216,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 5\"\n   \"stmib%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm4_da\"\n@@ -234,7 +234,7 @@\n           (mem:SI (match_dup 5)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"ldmda%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm4_da_update\"\n@@ -254,7 +254,7 @@\n           (mem:SI (match_dup 5)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 5\"\n   \"ldmda%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm4_da\"\n@@ -269,7 +269,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"stmda%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm4_da_update\"\n@@ -286,7 +286,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 5\"\n   \"stmda%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm4_db\"\n@@ -305,7 +305,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"ldmdb%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -327,7 +327,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 5\"\n   \"ldmdb%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"load4\")\n+  [(set_attr \"type\" \"load_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -343,7 +343,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"stmdb%?\\t%5, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -361,7 +361,7 @@\n           (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 5\"\n   \"stmdb%?\\t%5!, {%1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"store4\")\n+  [(set_attr \"type\" \"store_16\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -484,7 +484,7 @@\n                   (const_int 8))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"ldm%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -500,7 +500,7 @@\n                   (const_int 8))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n   \"ldmia\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")])\n+  [(set_attr \"type\" \"load_12\")])\n \n (define_insn \"*ldm3_ia_update\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -516,7 +516,7 @@\n                   (const_int 8))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"ldmia%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -534,7 +534,7 @@\n                   (const_int 8))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n   \"ldmia\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")])\n+  [(set_attr \"type\" \"load_12\")])\n \n (define_insn \"*stm3_\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -546,7 +546,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"stm%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -562,7 +562,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"stmia%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -578,7 +578,7 @@\n           (match_operand:SI 3 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n   \"stmia\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")])\n+  [(set_attr \"type\" \"store_12\")])\n \n (define_insn \"*ldm3_ib\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -593,7 +593,7 @@\n                   (const_int 12))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"ldmib%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm3_ib_update\"\n@@ -611,7 +611,7 @@\n                   (const_int 12))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"ldmib%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm3_ib\"\n@@ -624,7 +624,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"stmib%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm3_ib_update\"\n@@ -639,7 +639,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"stmib%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm3_da\"\n@@ -654,7 +654,7 @@\n           (mem:SI (match_dup 4)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"ldmda%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm3_da_update\"\n@@ -671,7 +671,7 @@\n           (mem:SI (match_dup 4)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"ldmda%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm3_da\"\n@@ -684,7 +684,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"stmda%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm3_da_update\"\n@@ -699,7 +699,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 4\"\n   \"stmda%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm3_db\"\n@@ -715,7 +715,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"ldmdb%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -734,7 +734,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"ldmdb%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"load3\")\n+  [(set_attr \"type\" \"load_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -748,7 +748,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"stmdb%?\\t%4, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -764,7 +764,7 @@\n           (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 4\"\n   \"stmdb%?\\t%4!, {%1, %2, %3}\"\n-  [(set_attr \"type\" \"store3\")\n+  [(set_attr \"type\" \"store_12\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -870,7 +870,7 @@\n                   (const_int 4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 2\"\n   \"ldm%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -883,7 +883,7 @@\n                   (const_int 4))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 2\"\n   \"ldmia\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")])\n+  [(set_attr \"type\" \"load_8\")])\n \n (define_insn \"*ldm2_ia_update\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -896,7 +896,7 @@\n                   (const_int 4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"ldmia%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -911,7 +911,7 @@\n                   (const_int 4))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n   \"ldmia\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")])\n+  [(set_attr \"type\" \"load_8\")])\n \n (define_insn \"*stm2_\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -921,7 +921,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 2\"\n   \"stm%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -935,7 +935,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"stmia%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -949,7 +949,7 @@\n           (match_operand:SI 2 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n   \"stmia\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")])\n+  [(set_attr \"type\" \"store_8\")])\n \n (define_insn \"*ldm2_ib\"\n   [(match_parallel 0 \"load_multiple_operation\"\n@@ -961,7 +961,7 @@\n                   (const_int 8))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 2\"\n   \"ldmib%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm2_ib_update\"\n@@ -976,7 +976,7 @@\n                   (const_int 8))))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"ldmib%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm2_ib\"\n@@ -987,7 +987,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 2\"\n   \"stmib%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm2_ib_update\"\n@@ -1000,7 +1000,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"stmib%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm2_da\"\n@@ -1012,7 +1012,7 @@\n           (mem:SI (match_dup 3)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 2\"\n   \"ldmda%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm2_da_update\"\n@@ -1026,7 +1026,7 @@\n           (mem:SI (match_dup 3)))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"ldmda%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm2_da\"\n@@ -1037,7 +1037,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 2\"\n   \"stmda%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*stm2_da_update\"\n@@ -1050,7 +1050,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_ARM && XVECLEN (operands[0], 0) == 3\"\n   \"stmda%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*ldm2_db\"\n@@ -1063,7 +1063,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 2\"\n   \"ldmdb%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -1079,7 +1079,7 @@\n                   (const_int -4))))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"ldmdb%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -1091,7 +1091,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 2\"\n   \"stmdb%?\\t%3, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n \n@@ -1105,7 +1105,7 @@\n           (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n   \"TARGET_32BIT && XVECLEN (operands[0], 0) == 3\"\n   \"stmdb%?\\t%3!, {%1, %2}\"\n-  [(set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store_8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n "}, {"sha": "33e34329c7933e739c8f79558567618b27fd0cd2", "filename": "gcc/config/arm/marvell-pj4.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -138,31 +138,31 @@\n \n (define_insn_reservation \"pj4_ldr\"  3\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"load_byte,load1\"))\n+       (eq_attr \"type\" \"load_byte,load_4\"))\n                        \"pj4_is,pj4_alu1,nothing*2,pj4_cp\")\n \n (define_insn_reservation \"pj4_ldrd\" 3\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n                        \"pj4_is,pj4_alu1,nothing*2,pj4_cpb\")\n \n (define_insn_reservation \"pj4_str\"  1\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n                        \"pj4_is,pj4_alu1,nothing*2,pj4_cp\")\n \n (define_insn_reservation \"pj4_strd\" 1\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n                        \"pj4_is,pj4_alu1,nothing*2,pj4_cpb\")\n \n (define_insn_reservation \"pj4_ldm\" 4\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"load3,load4\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n+       (eq_attr \"type\" \"load_12,load_16\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n \n (define_insn_reservation \"pj4_stm\" 2\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"store3,store4\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n+       (eq_attr \"type\" \"store_12,store_16\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n \n ;; Loads forward at WR-stage to ALU pipes\n (define_bypass 2 \"pj4_ldr,pj4_ldrd\" \"pj4_alu\")"}, {"sha": "5d196a673355a7acf7d0ed30f21b997b815913f5", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -650,7 +650,7 @@\n     }\n   }\"\n   [(set_attr \"length\" \"4,4,6,6,2,2,6,4,4\")\n-   (set_attr \"type\" \"multiple,multiple,multiple,multiple,load2,store2,load2,store2,multiple\")\n+   (set_attr \"type\" \"multiple,multiple,multiple,multiple,load_8,store_8,load_8,store_8,multiple\")\n    (set_attr \"arch\" \"t1,t1,t1,v8mb,t1,t1,t1,t1,t1\")\n    (set_attr \"pool_range\" \"*,*,*,*,*,*,1018,*,*\")]\n )\n@@ -673,7 +673,7 @@\n    str\\\\t%1, %0\n    mov\\\\t%0, %1\"\n   [(set_attr \"length\" \"2,2,4,4,4,2,2,2,2,2\")\n-   (set_attr \"type\" \"mov_reg,mov_imm,mov_imm,multiple,multiple,load1,store1,load1,store1,mov_reg\")\n+   (set_attr \"type\" \"mov_reg,mov_imm,mov_imm,multiple,multiple,load_4,store_4,load_4,store_4,mov_reg\")\n    (set_attr \"pool_range\" \"*,*,*,*,*,*,*,1018,*,*\")\n    (set_attr \"arch\" \"t1,t1,v8mb,t1,t1,t1,t1,t1,t1,t1\")\n    (set_attr \"conds\" \"set,clob,nocond,*,*,nocond,nocond,nocond,nocond,nocond\")])\n@@ -789,7 +789,7 @@\n       return \\\"ldrh\t%0, %1\\\";\n     }\"\n   [(set_attr \"length\" \"2,4,2,2,2,2,4\")\n-   (set_attr \"type\" \"alus_imm,load1,store1,mov_reg,mov_reg,mov_imm,mov_imm\")\n+   (set_attr \"type\" \"alus_imm,load_4,store_4,mov_reg,mov_reg,mov_imm,mov_imm\")\n    (set_attr \"arch\" \"t1,t1,t1,t1,t1,t1,v8mb\")\n    (set_attr \"conds\" \"clob,nocond,nocond,nocond,nocond,clob,nocond\")])\n \n@@ -824,7 +824,7 @@\n    mov\\\\t%0, %1\n    movs\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_imm,load1,store1,mov_reg,mov_imm,mov_imm\")\n+   (set_attr \"type\" \"alu_imm,load_4,store_4,mov_reg,mov_imm,mov_imm\")\n    (set_attr \"pool_range\" \"*,32,*,*,*,*\")\n    (set_attr \"conds\" \"clob,nocond,nocond,nocond,nocond,clob\")])\n \n@@ -860,7 +860,7 @@\n     }\n   \"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"mov_reg,load1,store1,mov_reg,mov_reg\")\n+   (set_attr \"type\" \"mov_reg,load_4,store_4,mov_reg,mov_reg\")\n    (set_attr \"pool_range\" \"*,1018,*,*,*\")\n    (set_attr \"conds\" \"clob,nocond,nocond,nocond,nocond\")])\n ;;; ??? This should have alternatives for constants.\n@@ -879,7 +879,7 @@\n    mov\\\\t%0, %1\n    mov\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alus_imm,load1,store1,load1,store1,mov_reg,mov_reg\")\n+   (set_attr \"type\" \"alus_imm,load_4,store_4,load_4,store_4,mov_reg,mov_reg\")\n    (set_attr \"pool_range\" \"*,*,*,1018,*,*,*\")\n    (set_attr \"conds\" \"clob,nocond,nocond,nocond,nocond,nocond,nocond\")]\n )\n@@ -921,7 +921,7 @@\n     }\n   \"\n   [(set_attr \"length\" \"4,2,2,6,4,4\")\n-   (set_attr \"type\" \"multiple,load2,store2,load2,store2,multiple\")\n+   (set_attr \"type\" \"multiple,load_8,store_8,load_8,store_8,multiple\")\n    (set_attr \"pool_range\" \"*,*,*,1018,*,*\")]\n )\n \f\n@@ -947,7 +947,7 @@\n   [(set_attr \"length\" \"4\")\n    ; This isn't entirely accurate...  It loads as well, but in terms of\n    ; scheduling the following insn it is better to consider it as a store\n-   (set_attr \"type\" \"store3\")]\n+   (set_attr \"type\" \"store_12\")]\n )\n \n (define_insn \"movmem8b\"\n@@ -966,7 +966,7 @@\n   [(set_attr \"length\" \"4\")\n    ; This isn't entirely accurate...  It loads as well, but in terms of\n    ; scheduling the following insn it is better to consider it as a store\n-   (set_attr \"type\" \"store2\")]\n+   (set_attr \"type\" \"store_8\")]\n )\n \n \f"}, {"sha": "b78c3d256aeafc2eeb3dcdc2b9b07b1af9df5294", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -239,7 +239,7 @@\n         (mem:SI (post_inc:SI (reg:SI SP_REGNUM))))]\n   \"TARGET_THUMB2 && (reload_in_progress || reload_completed)\"\n   \"pop\\t{%0}\"\n-  [(set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load_4\")\n    (set_attr \"length\" \"2\")\n    (set_attr \"predicable\" \"yes\")]\n )\n@@ -265,7 +265,7 @@\n    ldr%?\\\\t%0, %1\n    str%?\\\\t%1, %0\n    str%?\\\\t%1, %0\"\n-  [(set_attr \"type\" \"mov_reg,mov_imm,mov_imm,mvn_imm,mov_imm,load1,load1,store1,store1\")\n+  [(set_attr \"type\" \"mov_reg,mov_imm,mov_imm,mvn_imm,mov_imm,load_4,load_4,store_4,store_4\")\n    (set_attr \"length\" \"2,4,2,4,4,4,4,4,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no,yes,no,no,no,no,no,no\")\n@@ -305,7 +305,7 @@\n    movw%?\\\\t%0, %L1\\\\t%@ movhi\n    strh%?\\\\t%1, %0\\\\t%@ movhi\n    ldrh%?\\\\t%0, %1\\\\t%@ movhi\"\n-  [(set_attr \"type\" \"mov_reg,mov_imm,mov_imm,mov_imm,store1,load1\")\n+  [(set_attr \"type\" \"mov_reg,mov_imm,mov_imm,mov_imm,store_4,load_4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no,yes,no,no,no\")\n    (set_attr \"length\" \"2,4,2,4,4,4\")\n@@ -325,7 +325,7 @@\n   \"TARGET_THUMB2\n    && INTVAL (operands[5]) == INTVAL (operands[2]) + 4\"\n   \"strd\\\\t%3, %4, [%0, %2]!\"\n-  [(set_attr \"type\" \"store2\")]\n+  [(set_attr \"type\" \"store_8\")]\n )\n \n (define_insn \"*thumb2_cmpsi_neg_shiftsi\""}, {"sha": "22d993d46a30fd4a158b10164324e3fae019cd40", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -84,11 +84,11 @@\n ; fmul[d,s]          double/single floating point multiply.\n ; fsqrt[d,s]         double/single precision floating point square root.\n ; load_acq           load-acquire.\n-; load_byte          load byte(s) from memory to arm registers.\n-; load1              load 1 word from memory to arm registers.\n-; load2              load 2 words from memory to arm registers.\n-; load3              load 3 words from memory to arm registers.\n-; load4              load 4 words from memory to arm registers.\n+; load_byte          load 1 byte from memory.\n+; load_4             load 4 bytes from memory.\n+; load_8             load 8 bytes from memory.\n+; load_12            load 12 bytes from memory.\n+; load_16            load 16 bytes from memory.\n ; logic_imm          any logical instruction that doesn't have a shifted\n ;                    operand and has an immediate operand.\n ; logic_reg          any logical instruction that doesn't have a shifted\n@@ -152,10 +152,10 @@\n ; smusd              signed dual multiply subtract.\n ; smusdx             signed dual multiply subtract reverse.\n ; store_rel          store-release.\n-; store1             store 1 word to memory from arm registers.\n-; store2             store 2 words to memory from arm registers.\n-; store3             store 3 words to memory from arm registers.\n-; store4             store 4 (or more) words to memory from arm registers.\n+; store_4            store 4 bytes to memory.\n+; store_8            store 8 bytes to memory.\n+; store_12           store 12 bytes to memory.\n+; store_16           store 16 bytes (or more) to memory.\n ; trap               cause a trap in the kernel.\n ; udiv               unsigned division.\n ; umaal              unsigned multiply accumulate accumulate long.\n@@ -613,10 +613,10 @@\n   fsqrtd,\\\n   load_acq,\\\n   load_byte,\\\n-  load1,\\\n-  load2,\\\n-  load3,\\\n-  load4,\\\n+  load_4,\\\n+  load_8,\\\n+  load_12,\\\n+  load_16,\\\n   logic_imm,\\\n   logic_reg,\\\n   logic_shift_imm,\\\n@@ -670,10 +670,10 @@\n   smusd,\\\n   smusdx,\\\n   store_rel,\\\n-  store1,\\\n-  store2,\\\n-  store3,\\\n-  store4,\\\n+  store_4,\\\n+  store_8,\\\n+  store_12,\\\n+  store_16,\\\n   trap,\\\n   udiv,\\\n   umaal,\\"}, {"sha": "9521e904d213f5d249aa389c5e6e43480070d1e7", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -60,8 +60,8 @@\n      (const_string \"mov_reg\"))\n     (const_string \"mvn_imm\")\n     (const_string \"mov_imm\")\n-    (const_string \"store1\")\n-    (const_string \"load1\")\n+    (const_string \"store_4\")\n+    (const_string \"load_4\")\n     (const_string \"f_mcr\")\n     (const_string \"f_mrc\")\n     (const_string \"fmov\")])\n@@ -107,7 +107,7 @@\n   (set_attr \"predicable_short_it\"\n    \"yes, no, yes, no, no, no, no, no, no\")\n   (set_attr \"type\"\n-   \"mov_reg, mov_imm, mov_imm, mov_imm, store1, load1,\\\n+   \"mov_reg, mov_imm, mov_imm, mov_imm, store_4, load_4,\\\n     f_mcr, f_mrc, fmov\")\n   (set_attr \"arch\" \"*, *, *, v6t2, *, *, *, *, *\")\n   (set_attr \"pool_range\" \"*, *, *, *, *, 4094, *, *, *\")\n@@ -156,8 +156,8 @@\n      (const_string \"mov_reg\"))\n     (const_string \"mvn_imm\")\n     (const_string \"mov_imm\")\n-    (const_string \"store1\")\n-    (const_string \"load1\")\n+    (const_string \"store_4\")\n+    (const_string \"load_4\")\n     (const_string \"f_mcr\")\n     (const_string \"f_mrc\")\n     (const_string \"fmov\")])\n@@ -203,7 +203,7 @@\n   (set_attr \"predicable_short_it\"\n    \"yes, no, yes, no, no, no, no, no, no\")\n   (set_attr \"type\"\n-   \"mov_reg, mov_imm, mov_imm, mov_imm, store1, load1,\\\n+   \"mov_reg, mov_imm, mov_imm, mov_imm, store_4, load_4,\\\n     f_mcr, f_mrc, fmov\")\n   (set_attr \"arch\" \"*, *, *, v6t2, *, *, *, *, *\")\n   (set_attr \"pool_range\" \"*, *, *, *, *, 4094, *, *, *\")\n@@ -246,7 +246,7 @@\n     }\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"mov_reg,mov_reg,mvn_imm,mov_imm,load1,store1,\n+   (set_attr \"type\" \"mov_reg,mov_reg,mvn_imm,mov_imm,load_4,store_4,\n \t\t     f_mcr,f_mrc,fmov,f_loads,f_stores\")\n    (set_attr \"pool_range\"     \"*,*,*,*,4096,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,4084,*,*,*,*,1008,*\")]\n@@ -294,7 +294,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no,yes,no,no,no,no,no,no,no,no,no,no,no\")\n-   (set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mvn_reg,mov_imm,load1,load1,store1,store1,f_mcr,f_mrc,fmov,f_loads,f_stores\")\n+   (set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mvn_reg,mov_imm,load_4,load_4,store_4,store_4,f_mcr,f_mrc,fmov,f_loads,f_stores\")\n    (set_attr \"length\" \"2,4,2,4,4,4,4,4,4,4,4,4,4,4\")\n    (set_attr \"pool_range\"     \"*,*,*,*,*,1018,4094,*,*,*,*,*,1018,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,*,   0,   0,*,*,*,*,*,1008,*\")]\n@@ -338,7 +338,7 @@\n       gcc_unreachable ();\n     }\n   \"\n-  [(set_attr \"type\" \"multiple,multiple,multiple,multiple,load2,load2,store2,f_mcrr,f_mrrc,ffarithd,f_loadd,f_stored\")\n+  [(set_attr \"type\" \"multiple,multiple,multiple,multiple,load_8,load_8,store_8,f_mcrr,f_mrrc,ffarithd,f_loadd,f_stored\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"1,4,5,6\") (const_int 8)\n                               (eq_attr \"alternative\" \"2\") (const_int 12)\n                               (eq_attr \"alternative\" \"3\") (const_int 16)\n@@ -386,7 +386,7 @@\n       gcc_unreachable ();\n     }\n   \"\n-  [(set_attr \"type\" \"multiple,multiple,multiple,multiple,load2,load2,store2,f_mcrr,f_mrrc,ffarithd,f_loadd,f_stored\")\n+  [(set_attr \"type\" \"multiple,multiple,multiple,multiple,load_8,load_8,store_8,f_mcrr,f_mrrc,ffarithd,f_loadd,f_stored\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"1\") (const_int 8)\n                                (eq_attr \"alternative\" \"2\") (const_int 12)\n                                (eq_attr \"alternative\" \"3\") (const_int 16)\n@@ -461,7 +461,7 @@\n \t\t\t\t    no, no, no, no,\\\n \t\t\t\t    no, no\")\n    (set_attr_alternative \"type\"\n-    [(const_string \"load1\") (const_string \"store1\")\n+    [(const_string \"load_4\") (const_string \"store_4\")\n      (const_string \"fmov\") (const_string \"mov_reg\")\n      (const_string \"f_mcr\") (const_string \"f_mrc\")\n      (const_string \"fconsts\") (const_string \"neon_load1_1reg\")\n@@ -531,7 +531,7 @@\n   \"\n   [(set_attr \"conds\" \"unconditional\")\n    (set_attr \"type\" \"neon_load1_1reg,neon_store1_1reg,\\\n-                     load1,store1,fmov,mov_reg,f_mcr,f_mrc,multiple\")\n+                     load_4,store_4,fmov,mov_reg,f_mcr,f_mrc,multiple\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,8\")]\n )\n \n@@ -583,7 +583,7 @@\n     }\n   \"\n   [(set_attr \"conds\" \"unconditional\")\n-   (set_attr \"type\" \"load1,store1,fmov,mov_reg,f_mcr,f_mrc,multiple\")\n+   (set_attr \"type\" \"load_4,store_4,fmov,mov_reg,f_mcr,f_mrc,multiple\")\n    (set_attr \"length\" \"4,4,4,4,4,4,8\")]\n )\n \n@@ -623,7 +623,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-     \"f_mcr,f_mrc,fconsts,f_loads,f_stores,load1,store1,fmov,mov_reg\")\n+     \"f_mcr,f_mrc,fconsts,f_loads,f_stores,load_4,store_4,fmov,mov_reg\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,4096,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,4080,*,*,*\")]\n )\n@@ -660,7 +660,7 @@\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\"\n-     \"f_mcr,f_mrc,fconsts,f_loads,f_stores,load1,store1,fmov,mov_reg\")\n+     \"f_mcr,f_mrc,fconsts,f_loads,f_stores,load_4,store_4,fmov,mov_reg\")\n    (set_attr \"pool_range\" \"*,*,*,1018,*,4090,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,0,*,*,*\")]\n )\n@@ -704,7 +704,7 @@\n     }\n   \"\n   [(set_attr \"type\" \"f_mcrr,f_mrrc,fconstd,neon_move,f_loadd,f_stored,\\\n-                     load2,store2,ffarithd,multiple\")\n+                     load_8,store_8,ffarithd,multiple\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"6,7,9\") (const_int 8)\n \t\t\t       (eq_attr \"alternative\" \"8\")\n \t\t\t\t(if_then_else\n@@ -753,7 +753,7 @@\n     }\n   \"\n   [(set_attr \"type\" \"f_mcrr,f_mrrc,fconstd,neon_move,f_loadd,\\\n-                     f_stored,load2,store2,ffarithd,multiple\")\n+                     f_stored,load_8,store_8,ffarithd,multiple\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"6,7,9\") (const_int 8)\n \t\t\t       (eq_attr \"alternative\" \"8\")\n \t\t\t\t(if_then_else"}, {"sha": "d0b17ab158c3d95a9eb62b7253d3cb306915389c", "filename": "gcc/config/arm/xgene1.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fxgene1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b2133e2b7ef072e5b378a82c697269d8cd1db9/gcc%2Fconfig%2Farm%2Fxgene1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxgene1.md?ref=89b2133e2b7ef072e5b378a82c697269d8cd1db9", "patch": "@@ -92,28 +92,28 @@\n \n (define_insn_reservation \"xgene1_load_pair\" 6\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load2\"))\n+       (eq_attr \"type\" \"load_8\"))\n   \"xgene1_decodeIsolated\")\n \n (define_insn_reservation \"xgene1_store_pair\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"store2\"))\n+       (eq_attr \"type\" \"store_8\"))\n   \"xgene1_decodeIsolated\")\n \n (define_insn_reservation \"xgene1_fp_load1\" 10\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load1\")\n+       (eq_attr \"type\" \"load_4\")\n        (eq_attr \"fp\" \"yes\"))\n   \"xgene1_decode1op\")\n \n (define_insn_reservation \"xgene1_load1\" 5\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load1\"))\n+       (eq_attr \"type\" \"load_4\"))\n   \"xgene1_decode1op\")\n \n (define_insn_reservation \"xgene1_store1\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"store1\"))\n+       (eq_attr \"type\" \"store_4\"))\n   \"xgene1_decode2op\")\n \n (define_insn_reservation \"xgene1_move\" 1"}]}