{"sha": "7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IyMmI3Y2VjZTFjODZmNzVlZGRjNTY4MjhiNWQ5ZmVkNWEyZWYxNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-09T21:33:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-09T21:33:55Z"}, "message": "tree.c (fld_incomplete_type_of): Clear TYPE_FINAL_P, TYPE_EMPTY_P, ENUM_IS_OPAQUE and ENUM_IS_SCOPED.\n\n\t* tree.c (fld_incomplete_type_of): Clear TYPE_FINAL_P, TYPE_EMPTY_P,\n\tENUM_IS_OPAQUE and ENUM_IS_SCOPED.\n\t(free_lang_data_in_binfo): Clear TREE_PUBLIC in BINFO\n\t(free_lang_data_in_type): Clear ENUM_IS_OPAQUE and ENUM_IS_SCOPED.\n\nFrom-SVN: r278008", "tree": {"sha": "83b5465bf22909a36a21aa878175fab1935b6a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83b5465bf22909a36a21aa878175fab1935b6a66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16/comments", "author": null, "committer": null, "parents": [{"sha": "49d9c9d283caf5918add61e5f6b35c9cd437e8b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d9c9d283caf5918add61e5f6b35c9cd437e8b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d9c9d283caf5918add61e5f6b35c9cd437e8b6"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "d5a91905aeb19faca19a27ddb7220e7faf1a45bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "patch": "@@ -1,3 +1,10 @@\n+2019-11-09  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree.c (fld_incomplete_type_of): Clear TYPE_FINAL_P, TYPE_EMPTY_P,\n+\tENUM_IS_OPAQUE and ENUM_IS_SCOPED.\n+\t(free_lang_data_in_binfo): Clear TREE_PUBLIC in BINFO\n+\t(free_lang_data_in_type): Clear ENUM_IS_OPAQUE and ENUM_IS_SCOPED.\n+\n 2019-11-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline-analysis.c (do_estimate_growth_1): Add support for"}, {"sha": "d6a3970ddb61586645b64291ea08b73930797c17", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b22b7cece1c86f75eddc56828b5d9fed5a2ef16/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7b22b7cece1c86f75eddc56828b5d9fed5a2ef16", "patch": "@@ -5387,9 +5387,15 @@ fld_incomplete_type_of (tree t, class free_lang_data_d *fld)\n \t      TYPE_TYPELESS_STORAGE (copy) = 0;\n \t      TYPE_FIELDS (copy) = NULL;\n \t      TYPE_BINFO (copy) = NULL;\n+\t      TYPE_FINAL_P (copy) = 0;\n+\t      TYPE_EMPTY_P (copy) = 0;\n \t    }\n \t  else\n-\t    TYPE_VALUES (copy) = NULL;\n+\t    {\n+\t      TYPE_VALUES (copy) = NULL;\n+\t      ENUM_IS_OPAQUE (copy) = 0;\n+\t      ENUM_IS_SCOPED (copy) = 0;\n+\t    }\n \n \t  /* Build copy of TYPE_DECL in TYPE_NAME if necessary.\n \t     This is needed for ODR violation warnings to come out right (we\n@@ -5472,6 +5478,7 @@ free_lang_data_in_binfo (tree binfo)\n   BINFO_INHERITANCE_CHAIN (binfo) = NULL_TREE;\n   BINFO_SUBVTT_INDEX (binfo) = NULL_TREE;\n   BINFO_VPTR_FIELD (binfo) = NULL_TREE;\n+  TREE_PUBLIC (binfo) = 0;\n \n   FOR_EACH_VEC_ELT (*BINFO_BASE_BINFOS (binfo), i, t)\n     free_lang_data_in_binfo (t);\n@@ -5573,6 +5580,8 @@ free_lang_data_in_type (tree type, class free_lang_data_d *fld)\n     {\n       if (TREE_CODE (type) == ENUMERAL_TYPE)\n \t{\n+\t  ENUM_IS_OPAQUE (type) = 0;\n+\t  ENUM_IS_SCOPED (type) = 0;\n \t  /* Type values are used only for C++ ODR checking.  Drop them\n \t     for all type variants and non-ODR types.\n \t     For ODR types the data is freed in free_odr_warning_data.  */"}]}