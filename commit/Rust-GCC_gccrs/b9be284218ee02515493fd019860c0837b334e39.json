{"sha": "b9be284218ee02515493fd019860c0837b334e39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliZTI4NDIxOGVlMDI1MTU0OTNmZDAxOTg2MGMwODM3YjMzNGUzOQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-09-09T18:29:36Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-09-09T18:29:36Z"}, "message": "m32r.c (m32r_mode_dependent_address_p): New functions.\n\n\t* config/m32r/m32r.c (m32r_mode_dependent_address_p): New functions.\n\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n\t* config/m32r/m32r.h: (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n\nFrom-SVN: r164115", "tree": {"sha": "d27cdf5755ccda8bdfb8397e0bb10dbbcee0d89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27cdf5755ccda8bdfb8397e0bb10dbbcee0d89a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9be284218ee02515493fd019860c0837b334e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9be284218ee02515493fd019860c0837b334e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9be284218ee02515493fd019860c0837b334e39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9be284218ee02515493fd019860c0837b334e39/comments", "author": null, "committer": null, "parents": [{"sha": "709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "377a64affb384f699bf210ea387c7fce1c289f71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9be284218ee02515493fd019860c0837b334e39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9be284218ee02515493fd019860c0837b334e39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9be284218ee02515493fd019860c0837b334e39", "patch": "@@ -1,3 +1,9 @@\n+2010-09-09  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/m32r/m32r.c (m32r_mode_dependent_address_p): New functions.\n+\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n+\t* config/m32r/m32r.h: (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n+\n 2010-09-09  Matthias Klose  <doko@ubuntu.com>\n \n \tPR bootstrap/43847"}, {"sha": "b1175df0fa51866b02e3e8a09d2639d61a5ff3b4", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9be284218ee02515493fd019860c0837b334e39/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9be284218ee02515493fd019860c0837b334e39/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=b9be284218ee02515493fd019860c0837b334e39", "patch": "@@ -67,6 +67,7 @@ static void  init_reg_tables (void);\n static void  block_move_call (rtx, rtx, rtx);\n static int   m32r_is_insn (rtx);\n static rtx   m32r_legitimize_address (rtx, rtx, enum machine_mode);\n+static bool  m32r_mode_dependent_address_p (const_rtx);\n static tree  m32r_handle_model_attribute (tree *, tree, tree, int, bool *);\n static void  m32r_print_operand (FILE *, rtx, int);\n static void  m32r_print_operand_address (FILE *, rtx);\n@@ -117,6 +118,8 @@ static const struct attribute_spec m32r_attribute_table[] =\n \n #undef TARGET_LEGITIMIZE_ADDRESS\n #define TARGET_LEGITIMIZE_ADDRESS m32r_legitimize_address\n+#undef TARGET_MODE_DEPENDENT_ADDRESS_P\n+#define TARGET_MODE_DEPENDENT_ADDRESS_P m32r_mode_dependent_address_p\n \n #undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.hword\\t\"\n@@ -2043,6 +2046,17 @@ m32r_legitimize_address (rtx x, rtx orig_x ATTRIBUTE_UNUSED,\n   else\n     return x;\n }\n+\n+/* Worker function for TARGET_MODE_DEPENDENT_ADDRESS_P.  */\n+\n+static bool\n+m32r_mode_dependent_address_p (const_rtx addr)\n+{\n+  if (GET_CODE (addr) == LO_SUM)\n+    return true;\n+\n+  return false;\n+}\n \f\n /* Nested function support.  */\n "}, {"sha": "9aa354a23984ab4903253b40cf2e735b1b940b7f", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9be284218ee02515493fd019860c0837b334e39/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9be284218ee02515493fd019860c0837b334e39/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=b9be284218ee02515493fd019860c0837b334e39", "patch": "@@ -1048,16 +1048,6 @@ L2:     .word STATIC\n \tgoto ADDR;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n-\n-/* Go to LABEL if ADDR (a legitimate address expression)\n-   has an effect that depends on the machine mode it is used for.  */\n-#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL)\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t \t\t\\\n-      if (GET_CODE (ADDR) == LO_SUM)\t\t \t\t\\\n-\tgoto LABEL;\t\t\t\t\t \t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n \f\n /* Condition code usage.  */\n "}]}