{"sha": "fcaf7e12508287e62674b64bb2813930dfccb49b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhZjdlMTI1MDgyODdlNjI2NzRiNjRiYjI4MTM5MzBkZmNjYjQ5Yg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-07-09T05:43:56Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-07-09T05:43:56Z"}, "message": "simplify-rtx.c (simplify_binary_operation_1): Transform (and (truncate)) into (truncate (and)).\n\n\t* simplify-rtx.c (simplify_binary_operation_1) <AND>: Transform (and\n        (truncate)) into (truncate (and)).\n\ntestsuite/\n\t* gcc.target/mips/truncate-5.c: New test.\n\nFrom-SVN: r149402", "tree": {"sha": "b15ea351d95755f96844045e63fdbd14ec86dbcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b15ea351d95755f96844045e63fdbd14ec86dbcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcaf7e12508287e62674b64bb2813930dfccb49b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcaf7e12508287e62674b64bb2813930dfccb49b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcaf7e12508287e62674b64bb2813930dfccb49b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcaf7e12508287e62674b64bb2813930dfccb49b/comments", "author": null, "committer": null, "parents": [{"sha": "3f36bac24bce8dff4633e0238c94487f8d3d82ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f36bac24bce8dff4633e0238c94487f8d3d82ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f36bac24bce8dff4633e0238c94487f8d3d82ae"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "0347c24ae88860ef8304a5529a84e049ac0880f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcaf7e12508287e62674b64bb2813930dfccb49b", "patch": "@@ -1,3 +1,8 @@\n+2009-07-08  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation_1) <AND>: Transform (and\n+        (truncate)) into (truncate (and)).\n+\n 2009-07-08  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* combine.c (make_extraction): Check TRULY_NOOP_TRUNCATION before"}, {"sha": "ff690684ee68cf31519eb6c713dcec6ac0143269", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=fcaf7e12508287e62674b64bb2813930dfccb49b", "patch": "@@ -2336,6 +2336,18 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t  return simplify_gen_unary (ZERO_EXTEND, mode, tem, imode);\n \t}\n \n+      /* Transform (and (truncate X) C) into (truncate (and X C)).  This way\n+\t we might be able to further simplify the AND with X and potentially\n+\t remove the truncation altogether.  */\n+      if (GET_CODE (op0) == TRUNCATE && CONST_INT_P (trueop1))\n+\t{\n+\t  rtx x = XEXP (op0, 0);\n+\t  enum machine_mode xmode = GET_MODE (x);\n+\t  tem = simplify_gen_binary (AND, xmode, x,\n+\t\t\t\t     gen_int_mode (INTVAL (trueop1), xmode));\n+\t  return simplify_gen_unary (TRUNCATE, mode, tem, xmode);\n+\t}\n+\n       /* Canonicalize (A | C1) & C2 as (A & C2) | (C1 & C2).  */\n       if (GET_CODE (op0) == IOR\n \t  && CONST_INT_P (trueop1)"}, {"sha": "3dcfad3fe3a6ae2278dae41fee195ffd56a77518", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fcaf7e12508287e62674b64bb2813930dfccb49b", "patch": "@@ -1,9 +1,13 @@\n+2009-07-08  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/truncate-5.c: New test.\n+\n 2009-07-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/40330\n \tPR libfortran/40662\n \t* gfortran.dg/fmt_cache_1.f: New test.\n-\t\n+\n 2009-07-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40675\n@@ -24,7 +28,7 @@\n \t* gfortran.dg/proc_ptr_21.f90: New test.\n \n 2009-07-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n-\t\n+\n \tPR c++/31246\n \t* g++.dg/warn/pr31246.C: New.\n \t* g++.dg/warn/pr31246-2.C: New."}, {"sha": "046ef80c453497442612a0e54471f3d1c5c0b627", "filename": "gcc/testsuite/gcc.target/mips/truncate-5.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcaf7e12508287e62674b64bb2813930dfccb49b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-5.c?ref=fcaf7e12508287e62674b64bb2813930dfccb49b", "patch": "@@ -0,0 +1,14 @@\n+/* If we AND in DI mode (i.e. replace the order of TRUNCATE and AND) then we\n+   can remove the TRUNCATE.  */\n+/* { dg-options \"-O -mgp64\" } */\n+/* { dg-final { scan-assembler-not \"\\tsll\\t\\[^\\n\\]*,0\" } } */\n+\n+struct s\n+{\n+  unsigned a:5;\n+};\n+\n+f (struct s *s, unsigned long long a)\n+{\n+  s->a = a & 0x3;\n+}"}]}