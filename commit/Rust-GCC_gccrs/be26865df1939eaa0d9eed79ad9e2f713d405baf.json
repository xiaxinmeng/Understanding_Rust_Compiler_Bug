{"sha": "be26865df1939eaa0d9eed79ad9e2f713d405baf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyNjg2NWRmMTkzOWVhYTBkOWVlZDc5YWQ5ZTJmNzEzZDQwNWJhZg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@soliton.integrable-solutions.net", "date": "2002-09-10T23:19:10Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-09-10T23:19:10Z"}, "message": "stl_vector.h (vector<>): Don't use a name with different meanings before and after re-evaluation in the...\n\n2002-09-10  Gabriel Dos Reis  <gdr@soliton.integrable-solutions.net>\n\n\t* include/bits/stl_vector.h (vector<>): Don't use a name with\n\tdifferent meanings before and after re-evaluation in the completed\n\tscope.\n\t* include/bits/basic_string.h (basic_string<>): Likewise.\n\t* include/bits/stl_bvector.h (vector<bool>): Likewise.\n\t* include/bits/stl_deque.h (std): Likewise.\n\t* include/bits/stl_list.h (list<>): Likewise.\n\t* include/bits/stl_tree.h (_Rb_tree<>): Likewise.\n\nFrom-SVN: r57014", "tree": {"sha": "57cbea57fbc594fdbb20fe3397945cc3b4276f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57cbea57fbc594fdbb20fe3397945cc3b4276f93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be26865df1939eaa0d9eed79ad9e2f713d405baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be26865df1939eaa0d9eed79ad9e2f713d405baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be26865df1939eaa0d9eed79ad9e2f713d405baf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be26865df1939eaa0d9eed79ad9e2f713d405baf/comments", "author": null, "committer": null, "parents": [{"sha": "42ac7b6d2ff3aeb16b4bf0c21a5894243595a37a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ac7b6d2ff3aeb16b4bf0c21a5894243595a37a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ac7b6d2ff3aeb16b4bf0c21a5894243595a37a"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "719d21bbf27a63c93033567b664ff5f3093f445a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -1,3 +1,14 @@\n+2002-09-10  Gabriel Dos Reis  <gdr@soliton.integrable-solutions.net>\n+\n+\t* include/bits/stl_vector.h (vector<>): Don't use a name with\n+\tdifferent meanings before and after re-evaluation in the completed\n+\tscope. \n+\t* include/bits/basic_string.h (basic_string<>): Likewise.\n+\t* include/bits/stl_bvector.h (vector<bool>): Likewise.\n+\t* include/bits/stl_deque.h (std): Likewise.\n+\t* include/bits/stl_list.h (list<>): Likewise.\n+\t* include/bits/stl_tree.h (_Rb_tree<>): Likewise.\n+\n 2002-09-10  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/codecvt.h (class __codecvt_abstract_base):"}, {"sha": "0f7247f7c9a98441d2b62177ee9e0e16bd37f9e8", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -122,8 +122,8 @@ namespace std\n       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;\n       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>\n                                                             const_iterator;\n-      typedef reverse_iterator<const_iterator> \tconst_reverse_iterator;\n-      typedef reverse_iterator<iterator> \t\t    reverse_iterator;\n+      typedef std::reverse_iterator<const_iterator> \tconst_reverse_iterator;\n+      typedef std::reverse_iterator<iterator> \t\t    reverse_iterator;\n \n     private:\n       // _Rep: string representation"}, {"sha": "59e7b7f967cd8573cf71f6079e8550ab42396cf0", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -356,8 +356,8 @@ template <typename _Alloc>\n     typedef _Bit_iterator                iterator;\n     typedef _Bit_const_iterator          const_iterator;\n   \n-    typedef reverse_iterator<const_iterator> const_reverse_iterator;\n-    typedef reverse_iterator<iterator> reverse_iterator;\n+    typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n+    typedef std::reverse_iterator<iterator> reverse_iterator;\n   \n     typedef typename _Bvector_base<_Alloc>::allocator_type allocator_type;\n     allocator_type get_allocator() const {"}, {"sha": "7dbbbea7e83ac095b752a2b00b2cb14000870502", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -647,8 +647,8 @@ namespace std\n     typedef const value_type*                  const_pointer;\n     typedef typename _Base::iterator           iterator;\n     typedef typename _Base::const_iterator     const_iterator;\n-    typedef reverse_iterator<const_iterator>   const_reverse_iterator;\n-    typedef reverse_iterator<iterator>         reverse_iterator;\n+    typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;\n+    typedef std::reverse_iterator<iterator>         reverse_iterator;\n     typedef value_type&                        reference;\n     typedef const value_type&                  const_reference;\n     typedef size_t                             size_type;"}, {"sha": "fcba3598df248420458771ab44343b95e5a73e1f", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -376,8 +376,8 @@ namespace std\n     typedef const value_type*                             const_pointer;\n     typedef _List_iterator<_Tp,_Tp&,_Tp*>                 iterator;\n     typedef _List_iterator<_Tp,const _Tp&,const _Tp*>     const_iterator;\n-    typedef reverse_iterator<const_iterator>              const_reverse_iterator;\n-    typedef reverse_iterator<iterator>                    reverse_iterator;\n+    typedef std::reverse_iterator<const_iterator>     const_reverse_iterator;\n+    typedef std::reverse_iterator<iterator>                 reverse_iterator;\n     typedef value_type&                                   reference;\n     typedef const value_type&                             const_reference;\n     typedef size_t                                        size_type;"}, {"sha": "ec218527c0c1a87f5289986261f3a4a9adb6d568", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -702,8 +702,8 @@ namespace std\n       typedef _Rb_tree_iterator<value_type, const_reference, const_pointer> \n       const_iterator;\n \n-      typedef reverse_iterator<const_iterator> const_reverse_iterator;\n-      typedef reverse_iterator<iterator> reverse_iterator;\n+      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n+      typedef std::reverse_iterator<iterator> reverse_iterator;\n \n     private:\n       iterator "}, {"sha": "a885d9f8dcb5cef5723a9d564e13bd526ffdda5d", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be26865df1939eaa0d9eed79ad9e2f713d405baf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=be26865df1939eaa0d9eed79ad9e2f713d405baf", "patch": "@@ -195,8 +195,8 @@ namespace std\n     typedef __gnu_cxx::__normal_iterator<pointer, vector_type> \titerator;\n     typedef __gnu_cxx::__normal_iterator<const_pointer, vector_type>\n                                                           const_iterator;\n-    typedef reverse_iterator<const_iterator>              const_reverse_iterator;\n-    typedef reverse_iterator<iterator>                    reverse_iterator;\n+    typedef std::reverse_iterator<const_iterator>    const_reverse_iterator;\n+    typedef std::reverse_iterator<iterator>                reverse_iterator;\n     typedef value_type& \t\t\t\t\treference;\n     typedef const value_type& \t\t\t\tconst_reference;\n     typedef size_t \t\t\t\t\tsize_type;"}]}