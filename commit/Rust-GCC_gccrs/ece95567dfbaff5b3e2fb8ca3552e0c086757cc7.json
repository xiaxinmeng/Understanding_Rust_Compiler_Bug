{"sha": "ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNlOTU1NjdkZmJhZmY1YjNlMmZiOGNhMzU1MmUwYzA4Njc1N2NjNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-01T11:35:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-01T11:35:21Z"}, "message": "re PR ipa/68470 (Internal Compiler Error observed by g++-4.9.2 and a few other versions (reported to Debian))\n\n2015-12-01  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/68470\n\t* ipa-split.c (split_function): Handle main part not returning.\n\n\t* g++.dg/torture/pr68470.C: New testcase.\n\nFrom-SVN: r231108", "tree": {"sha": "72395cfafea030c54b997608b50b52b4de55ba77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72395cfafea030c54b997608b50b52b4de55ba77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22f5095f313a7a4ed676ac22bb3fde16eb172a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f5095f313a7a4ed676ac22bb3fde16eb172a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f5095f313a7a4ed676ac22bb3fde16eb172a39"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "f908fe6542a1854eb865187a5bc98ae058d6e689", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "patch": "@@ -1,3 +1,8 @@\n+2015-12-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/68470\n+\t* ipa-split.c (split_function): Handle main part not returning.\n+\n 2015-12-01  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR middle-end/68595"}, {"sha": "56c954b01b26050b485b69f68da75b6e3f7a28fd", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "patch": "@@ -1205,7 +1205,6 @@ split_function (basic_block return_bb, struct split_point *split_point,\n   edge e;\n   edge_iterator ei;\n   tree retval = NULL, real_retval = NULL, retbnd = NULL;\n-  bool split_part_return_p = false;\n   bool with_bounds = chkp_function_instrumented_p (current_function_decl);\n   gimple *last_stmt = NULL;\n   unsigned int i;\n@@ -1246,12 +1245,28 @@ split_function (basic_block return_bb, struct split_point *split_point,\n \targs_to_pass.safe_push (arg);\n       }\n \n-  /* See if the split function will return.  */\n+  /* See if the split function or the main part will return.  */\n+  bool main_part_return_p = false;\n+  bool split_part_return_p = false;\n   FOR_EACH_EDGE (e, ei, return_bb->preds)\n-    if (bitmap_bit_p (split_point->split_bbs, e->src->index))\n-      break;\n-  if (e)\n-    split_part_return_p = true;\n+    {\n+      if (bitmap_bit_p (split_point->split_bbs, e->src->index))\n+\tsplit_part_return_p = true;\n+      else\n+\tmain_part_return_p = true;\n+    }\n+  /* The main part also returns if we we split on a fallthru edge\n+     and the split part returns.  */\n+  if (split_part_return_p)\n+    FOR_EACH_EDGE (e, ei, split_point->entry_bb->preds)\n+      {\n+\tif (! bitmap_bit_p (split_point->split_bbs, e->src->index)\n+\t    && single_succ_p (e->src))\n+\t  {\n+\t    main_part_return_p = true;\n+\t    break;\n+\t  }\n+      }\n \n   /* Add return block to what will become the split function.\n      We do not return; no return block is needed.  */\n@@ -1295,6 +1310,11 @@ split_function (basic_block return_bb, struct split_point *split_point,\n   else\n     bitmap_set_bit (split_point->split_bbs, return_bb->index);\n \n+  /* If the main part doesn't return pretend the return block wasn't\n+     found for all of the following.  */\n+  if (! main_part_return_p)\n+    return_bb = EXIT_BLOCK_PTR_FOR_FN (cfun);\n+\n   /* If RETURN_BB has virtual operand PHIs, they must be removed and the\n      virtual operand marked for renaming as we change the CFG in a way that\n      tree-inline is not able to compensate for."}, {"sha": "8263c1bb5f3d26f6f5c3bcdad96a22d6897f10e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "patch": "@@ -1,3 +1,8 @@\n+2015-12-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/68470\n+\t* g++.dg/torture/pr68470.C: New testcase.\n+\n 2015-12-01  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR middle-end/68595"}, {"sha": "5dd558d15d20b06ecd9439e41a318a240902df8f", "filename": "gcc/testsuite/g++.dg/torture/pr68470.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr68470.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece95567dfbaff5b3e2fb8ca3552e0c086757cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr68470.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr68470.C?ref=ece95567dfbaff5b3e2fb8ca3552e0c086757cc7", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+\n+void deallocate(void *);\n+void *a;\n+\n+struct C {\n+    virtual void m_fn1();\n+};\n+\n+struct D {\n+    C *m_fn2() {\n+\tif (a)\n+\t  __builtin_abort();\n+    }\n+};\n+D getd();\n+\n+struct vec_int {\n+    int _M_start;\n+    ~vec_int() {\n+\tif (_M_start)\n+\t  deallocate(&_M_start);\n+    }\n+};\n+vec_int *b;\n+\n+struct I {\n+    virtual void m_fn3();\n+};\n+\n+void I::m_fn3() {\n+    if (a)\n+      getd().m_fn2()->m_fn1();\n+    b->~vec_int();\n+}\n+"}]}