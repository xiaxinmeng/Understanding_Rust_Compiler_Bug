{"sha": "ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjMmU3M2NlNzkzZjcyOWYwYmQ3MTdiNjdmNTFjYTE5N2ZjMDNiOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-27T13:57:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-27T13:57:39Z"}, "message": "Core DR 475 PR c++/41174 PR c++/59224\n\n\tCore DR 475\n\tPR c++/41174\n\tPR c++/59224\n\t* libsupc++/eh_throw.cc (__cxa_throw): Set uncaughtExceptions.\n\t* libsupc++/eh_alloc.cc (__cxa_allocate_dependent_exception)\n\t(__cxa_allocate_exception): Don't set it here.\n\nFrom-SVN: r207129", "tree": {"sha": "b9ced4b2c6e40c433f2b5f497b836f4ca15b47ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9ced4b2c6e40c433f2b5f497b836f4ca15b47ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6f6157a454184cff8711fb968e090c09ca93297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f6157a454184cff8711fb968e090c09ca93297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f6157a454184cff8711fb968e090c09ca93297"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "e96af334a8ccbd8875d9610838c2cab3a1fbde17", "filename": "gcc/testsuite/g++.dg/eh/uncaught1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught1.C?ref=ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "patch": "@@ -13,7 +13,7 @@ struct Check {\n \n static Check const data[] = {\n   { 0, 0, false },\t// construct [0]\n-  { 1, 0, true  },\t// [1] = [0]\n+  { 1, 0, false  },\t// [1] = [0]\n   { 0, 0, true  },\t// destruct [0]\n   { 2, 1, true  },\t// [2] = [1]\n   { 2, 2, true  },      // destruct [2]"}, {"sha": "227d11b330bbb35cc6e72a13b9cabe816bc0f84f", "filename": "gcc/testsuite/g++.dg/eh/uncaught4.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funcaught4.C?ref=ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/41174\n+// { dg-do run }\n+\n+#include <exception>\n+\n+#define assert(E) if (!(E)) __builtin_abort();\n+\n+struct e {\n+  e()\n+  {\n+    assert( !std::uncaught_exception() );\n+    try {\n+      throw 1;\n+    } catch (int i) {\n+      assert( !std::uncaught_exception() );\n+      throw;\n+    }\n+  }\n+};\n+\n+int main()\n+{\n+  try {\n+    throw e();\n+  } catch (int i) {\n+    assert( !std::uncaught_exception() );\n+  }\n+  assert( !std::uncaught_exception() );\n+}"}, {"sha": "18012cb7507845737528acabacd2bfa36a4ac83d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "patch": "@@ -1,3 +1,12 @@\n+2014-01-27  Jason Merrill  <jason@redhat.com>\n+\n+\tCore DR 475\n+\tPR c++/41174\n+\tPR c++/59224\n+\t* libsupc++/eh_throw.cc (__cxa_throw): Set uncaughtExceptions.\n+\t* libsupc++/eh_alloc.cc (__cxa_allocate_dependent_exception)\n+\t(__cxa_allocate_exception): Don't set it here.\n+\n 2014-01-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_map.h: Remove anachronistic comment."}, {"sha": "752f5db5a3fd131bf9bc73aad0951f1b0d9a7c45", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "patch": "@@ -129,12 +129,6 @@ __cxxabiv1::__cxa_allocate_exception(std::size_t thrown_size) _GLIBCXX_NOTHROW\n \tstd::terminate ();\n     }\n \n-  // We have an uncaught exception as soon as we allocate memory.  This\n-  // yields uncaught_exception() true during the copy-constructor that\n-  // initializes the exception object.  See Issue 475.\n-  __cxa_eh_globals *globals = __cxa_get_globals ();\n-  globals->uncaughtExceptions += 1;\n-\n   memset (ret, 0, sizeof (__cxa_refcounted_exception));\n \n   return (void *)((char *)ret + sizeof (__cxa_refcounted_exception));\n@@ -191,12 +185,6 @@ __cxxabiv1::__cxa_allocate_dependent_exception() _GLIBCXX_NOTHROW\n \tstd::terminate ();\n     }\n \n-  // We have an uncaught exception as soon as we allocate memory.  This\n-  // yields uncaught_exception() true during the copy-constructor that\n-  // initializes the exception object.  See Issue 475.\n-  __cxa_eh_globals *globals = __cxa_get_globals ();\n-  globals->uncaughtExceptions += 1;\n-\n   memset (ret, 0, sizeof (__cxa_dependent_exception));\n \n   return ret;"}, {"sha": "e9a34e292298de0c9b9f06956561e239f8ab6bde", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc2e73ce793f729f0bd717b67f51ca197fc03b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=ccc2e73ce793f729f0bd717b67f51ca197fc03b9", "patch": "@@ -62,6 +62,9 @@ __cxxabiv1::__cxa_throw (void *obj, std::type_info *tinfo,\n {\n   PROBE2 (throw, obj, tinfo);\n \n+  __cxa_eh_globals *globals = __cxa_get_globals ();\n+  globals->uncaughtExceptions += 1;\n+\n   // Definitely a primary.\n   __cxa_refcounted_exception *header\n     = __get_refcounted_exception_header_from_obj (obj);"}]}