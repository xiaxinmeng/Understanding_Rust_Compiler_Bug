{"sha": "f2131422e4e24a474ceb16e9781f9e0508ead720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxMzE0MjJlNGUyNGE0NzRjZWIxNmU5NzgxZjllMDUwOGVhZDcyMA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2008-08-04T15:34:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T15:34:13Z"}, "message": "sem_prag.adb (Process_Convention): Add missing support for N_Private_Extension_Declaration nodes.\n\n2008-08-04  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_prag.adb (Process_Convention): Add missing support for\n\t N_Private_Extension_Declaration nodes.\n\nFrom-SVN: r138637", "tree": {"sha": "e116466706014170c7d3ba48b83d7641765f52df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e116466706014170c7d3ba48b83d7641765f52df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2131422e4e24a474ceb16e9781f9e0508ead720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2131422e4e24a474ceb16e9781f9e0508ead720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2131422e4e24a474ceb16e9781f9e0508ead720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2131422e4e24a474ceb16e9781f9e0508ead720/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cae8abfff137876b30020c59185253d6d478108a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae8abfff137876b30020c59185253d6d478108a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae8abfff137876b30020c59185253d6d478108a"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "c1c661b08c014f5a955e249cef2b9cca812bbd0c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2131422e4e24a474ceb16e9781f9e0508ead720/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2131422e4e24a474ceb16e9781f9e0508ead720/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f2131422e4e24a474ceb16e9781f9e0508ead720", "patch": "@@ -1281,10 +1281,10 @@ package body Sem_Prag is\n             --  sequence, so the only way we get here is by being in the\n             --  declarative part of the body.\n \n-            elsif Nkind (P) = N_Subprogram_Body\n-              or else Nkind (P) = N_Package_Body\n-              or else Nkind (P) = N_Task_Body\n-              or else Nkind (P) = N_Entry_Body\n+            elsif Nkind_In (P, N_Subprogram_Body,\n+                               N_Package_Body,\n+                               N_Task_Body,\n+                               N_Entry_Body)\n             then\n                return;\n             end if;\n@@ -2497,7 +2497,8 @@ package body Sem_Prag is\n                end if;\n                E := Alias (E);\n \n-            elsif Nkind (Parent (E)) = N_Full_Type_Declaration\n+            elsif Nkind_In (Parent (E), N_Full_Type_Declaration,\n+                                        N_Private_Extension_Declaration)\n               and then Scope (E) = Scope (Alias (E))\n             then\n                E := Alias (E);\n@@ -2626,7 +2627,7 @@ package body Sem_Prag is\n                  and then Comp_Unit = Get_Source_Unit (E1)\n                  and then not Is_Formal_Subprogram (E1)\n                  and then Nkind (Original_Node (Parent (E1))) /=\n-                   N_Full_Type_Declaration\n+                                                    N_Full_Type_Declaration\n                then\n                   if Present (Alias (E1))\n                     and then Scope (E1) /= Scope (Alias (E1))\n@@ -2966,9 +2967,8 @@ package body Sem_Prag is\n                --  Pragma cannot apply to subprogram body\n \n                if Is_Subprogram (Def_Id)\n-                 and then\n-                   Nkind (Parent\n-                     (Declaration_Node (Def_Id))) = N_Subprogram_Body\n+                 and then Nkind (Parent (Declaration_Node (Def_Id))) =\n+                                                             N_Subprogram_Body\n                then\n                   Error_Pragma\n                     (\"pragma% requires separate spec\"\n@@ -3505,10 +3505,8 @@ package body Sem_Prag is\n                      if Present (Decl)\n                        and then Nkind (Decl) = N_Subprogram_Declaration\n                        and then Present (Corresponding_Body (Decl))\n-                       and then\n-                         Nkind\n-                           (Unit_Declaration_Node\n-                             (Corresponding_Body (Decl))) =\n+                       and then Nkind (Unit_Declaration_Node\n+                                        (Corresponding_Body (Decl))) =\n                                              N_Subprogram_Renaming_Declaration\n                      then\n                         Error_Msg_Sloc := Sloc (Def_Id);"}]}