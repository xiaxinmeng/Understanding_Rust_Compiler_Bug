{"sha": "4f450a2b1022124194097e39b3b1caca1d5dc2bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0NTBhMmIxMDIyMTI0MTk0MDk3ZTM5YjNiMWNhY2ExZDVkYzJiYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-07-26T11:35:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-07-26T11:35:45Z"}, "message": "gimple-match-head.c (do_valueize): Return OP if valueize returns NULL_TREE.\n\n2017-07-26  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-match-head.c (do_valueize): Return OP if valueize\n\treturns NULL_TREE.\n\t(get_def): New helper to get at the def stmt of a SSA name\n\tif valueize allows.\n\t* genmatch.c (dt_node::gen_kids_1): Use get_def instead of\n\tdo_valueize to get at the def stmt.\n\t(dt_operand::gen_gimple_expr): Simplify do_valueize calls.\n\n\t* gcc/testsuite/gcc.dg/pr70920-2.c: Adjust for transform already\n\thappening in ccp1.\n\t* gcc/testsuite/gcc.dg/pr70920-4.c: Likewise.\n\nFrom-SVN: r250565", "tree": {"sha": "952eff26eae11dd5471be7d46169494d5b16a908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/952eff26eae11dd5471be7d46169494d5b16a908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f450a2b1022124194097e39b3b1caca1d5dc2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f450a2b1022124194097e39b3b1caca1d5dc2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f450a2b1022124194097e39b3b1caca1d5dc2bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f450a2b1022124194097e39b3b1caca1d5dc2bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e17114487df7f90d8e015efad697a3cc93845b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e17114487df7f90d8e015efad697a3cc93845b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e17114487df7f90d8e015efad697a3cc93845b90"}], "stats": {"total": 63, "additions": 45, "deletions": 18}, "files": [{"sha": "ff746ffc6213981feb99f9ef005b1cb6a7675a89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -1,3 +1,13 @@\n+2017-07-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-match-head.c (do_valueize): Return OP if valueize\n+\treturns NULL_TREE.\n+\t(get_def): New helper to get at the def stmt of a SSA name\n+\tif valueize allows.\n+\t* genmatch.c (dt_node::gen_kids_1): Use get_def instead of\n+\tdo_valueize to get at the def stmt.\n+\t(dt_operand::gen_gimple_expr): Simplify do_valueize calls.\n+\n 2017-07-26  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR middle-end/46932"}, {"sha": "6564a1aa501c9f7eb8768a6e795afdd5721e4f40", "filename": "gcc/genmatch.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -2646,6 +2646,7 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n   expr *e = static_cast<expr *> (op);\n   id_base *id = e->operation;\n   unsigned n_ops = e->ops.length ();\n+  unsigned n_braces = 0;\n \n   for (unsigned i = 0; i < n_ops; ++i)\n     {\n@@ -2678,14 +2679,15 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n \t\t\t      \"if ((TREE_CODE (%s) == SSA_NAME\\n\",\n \t\t\t      child_opname);\n \t      fprintf_indent (f, indent,\n-\t\t\t      \"     || is_gimple_min_invariant (%s))\\n\",\n+\t\t\t      \"     || is_gimple_min_invariant (%s)))\\n\",\n \t\t\t      child_opname);\n-\t      fprintf_indent (f, indent,\n-\t\t\t      \"    && (%s = do_valueize (valueize, %s)))\\n\",\n-\t\t\t      child_opname, child_opname);\n \t      fprintf_indent (f, indent,\n \t\t\t      \"  {\\n\");\n \t      indent += 4;\n+\t      n_braces++;\n+\t      fprintf_indent (f, indent,\n+\t\t\t      \"%s = do_valueize (valueize, %s);\\n\",\n+\t\t\t      child_opname, child_opname);\n \t      continue;\n \t    }\n \t  else\n@@ -2698,10 +2700,8 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n \t\t\t\"tree %s = gimple_call_arg (def, %u);\\n\",\n \t\t\tchild_opname, i);\n       fprintf_indent (f, indent,\n-\t\t      \"if ((%s = do_valueize (valueize, %s)))\\n\",\n+\t\t      \"%s = do_valueize (valueize, %s);\\n\",\n \t\t      child_opname, child_opname);\n-      fprintf_indent (f, indent, \"  {\\n\");\n-      indent += 4;\n     }\n   /* While the toplevel operands are canonicalized by the caller\n      after valueizing operands of sub-expressions we have to\n@@ -2726,7 +2726,7 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n \t}\n     }\n \n-  return n_ops;\n+  return n_braces;\n }\n \n /* Generate GENERIC matching code for the decision tree operand.  */\n@@ -2867,14 +2867,10 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple,\n       fprintf_indent (f, indent,\n \t\t      \"case SSA_NAME:\\n\");\n       fprintf_indent (f, indent,\n-\t\t      \"  if (do_valueize (valueize, %s) != NULL_TREE)\\n\",\n+\t\t      \"  if (gimple *def_stmt = get_def (valueize, %s))\\n\",\n \t\t      kid_opname);\n       fprintf_indent (f, indent,\n \t\t      \"    {\\n\");\n-      fprintf_indent (f, indent,\n-\t\t      \"      gimple *def_stmt = SSA_NAME_DEF_STMT (%s);\\n\",\n-\t\t      kid_opname);\n-\n       indent += 6;\n       if (exprs_len)\n \t{"}, {"sha": "8ad1f8c5eaea7c145ae92ce595e0177e3aa8dce9", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -779,10 +779,25 @@ inline tree\n do_valueize (tree (*valueize)(tree), tree op)\n {\n   if (valueize && TREE_CODE (op) == SSA_NAME)\n-    return valueize (op);\n+    {\n+      tree tem = valueize (op);\n+      if (tem)\n+\treturn tem;\n+    }\n   return op;\n }\n \n+/* Helper for the autogenerated code, get at the definition of NAME when\n+   VALUEIZE allows that.  */\n+\n+inline gimple *\n+get_def (tree (*valueize)(tree), tree name)\n+{\n+  if (valueize && ! valueize (name))\n+    return NULL;\n+  return SSA_NAME_DEF_STMT (name);\n+}\n+\n /* Routine to determine if the types T1 and T2 are effectively\n    the same for GIMPLE.  If T1 or T2 is not a type, the test\n    applies to their TREE_TYPE.  */"}, {"sha": "aaec07c00269d6785208c1863769b8deb935d12b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -1,3 +1,9 @@\n+2017-07-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc/testsuite/gcc.dg/pr70920-2.c: Adjust for transform already\n+\thappening in ccp1.\n+\t* gcc/testsuite/gcc.dg/pr70920-4.c: Likewise.\n+\n 2017-07-26  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR middle-end/46932"}, {"sha": "98072247e9462dd554e45e9d6b3c8fcc085309e0", "filename": "gcc/testsuite/gcc.dg/pr70920-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1-details\" } */\n \n #include <stdint.h>\n \n@@ -18,4 +18,4 @@ foo (int *a)\n     }\n }\n \n-/* { dg-final { scan-tree-dump \"gimple_simplified to if \\\\(a_\\[0-9\\]*\\\\(D\\\\) == 0B\\\\)\" \"forwprop1\" } } */\n+/* { dg-final { scan-tree-dump \"gimple_simplified to if \\\\(a_\\[0-9\\]*\\\\(D\\\\) == 0B\\\\)\" \"ccp1\" } } */"}, {"sha": "70973cb162a1920e809d8df1adabbdec15f2fb3c", "filename": "gcc/testsuite/gcc.dg/pr70920-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f450a2b1022124194097e39b3b1caca1d5dc2bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c?ref=4f450a2b1022124194097e39b3b1caca1d5dc2bc", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-O2 -fdump-tree-forwprop-details -Wno-int-to-pointer-cast\" } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1 -Wno-int-to-pointer-cast\" } */\n \n #include <stdint.h>\n \n@@ -19,4 +19,4 @@ foo (int a)\n     }\n }\n \n-/* { dg-final { scan-tree-dump \"if \\\\(_\\[0-9\\]* == 0\\\\)\" \"forwprop1\" } } */\n+/* { dg-final { scan-tree-dump \"if \\\\(a_\\[0-9\\]*\\\\(D\\\\) == 0\\\\)\" \"ccp1\" } } */"}]}