{"sha": "cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q0ODFkODNlZDI0MGViYmRiNzA2YzNlM2YzMzU4ZjQ2NjYyZDRiOA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-01-14T07:49:39Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-01-14T07:49:39Z"}, "message": "re PR tree-optimization/42709 (error: type mismatch in pointer plus expression)\n\n\n\tPR tree-optimization/42709\n\t* tree-vect-slp.c (vect_get_constant_vectors): Use constant's type\n\tas scalar type in creation of constant vector operand.\n\nFrom-SVN: r155882", "tree": {"sha": "8ff230c25c22542be59f55788bc4fbdc8bebcb05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ff230c25c22542be59f55788bc4fbdc8bebcb05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7bf45dee541cfa10350a814f5fbf14c5a316a7f"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "18658784acd68b7fd7c932bdb2df2b5e2bbfb61a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "patch": "@@ -1,3 +1,9 @@\n+2010-01-14  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/42709\n+\t* tree-vect-slp.c (vect_get_constant_vectors): Use constant's type\n+\tas scalar type in creation of constant vector operand.\n+\n 2010-01-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR testsuite/42414"}, {"sha": "faac669f197a8e2819c0bc002bff3d3539b136f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "patch": "@@ -1,3 +1,8 @@\n+2010-01-14  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/42709\n+\t* gcc.dg/vect/pr42709.c: New test.\n+\n 2010-01-14  Paul Thomas  <pault@gcc.gnu.org>\n \n         PR fortran/41478"}, {"sha": "8ccbfa65e8140295f4693623e617985fd7982810", "filename": "gcc/testsuite/gcc.dg/vect/pr42709.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42709.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42709.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42709.c?ref=cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 128 \n+\n+int *res[N];\n+\n+int\n+main1 (int *a, int *b, int *c, int *d, int dummy)\n+{\n+  int i;\n+\n+  for (i = 0; i < N/2; i+=4)\n+    {\n+      res[i] = a + 16;\n+      res[i+1] = b + 16;\n+      res[i+2] = c + 16;\n+      res[i+3] = d + 16;\n+      if (dummy == 32)\n+        abort ();\n+    } \n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+  "}, {"sha": "bbf2bd31820630c99b2b96b4fd123c1a60bc4c6c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd481d83ed240ebbdb706c3e3f3358f46662d4b8/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=cd481d83ed240ebbdb706c3e3f3358f46662d4b8", "patch": "@@ -1421,7 +1421,6 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n   VEC (gimple, heap) *stmts = SLP_TREE_SCALAR_STMTS (slp_node);\n   gimple stmt = VEC_index (gimple, stmts, 0);\n   stmt_vec_info stmt_vinfo = vinfo_for_stmt (stmt);\n-  tree vectype = STMT_VINFO_VECTYPE (stmt_vinfo);\n   int nunits;\n   tree vec_cst;\n   tree t = NULL_TREE;\n@@ -1446,16 +1445,12 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n     }\n \n   if (CONSTANT_CLASS_P (op))\n-    {\n-      vector_type = vectype;\n-      constant_p = true;\n-    }\n+    constant_p = true;\n   else\n-    {\n-      vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n-      gcc_assert (vector_type);\n-      constant_p = false;\n-    }\n+    constant_p = false;\n+\n+  vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n+  gcc_assert (vector_type);\n \n   nunits = TYPE_VECTOR_SUBPARTS (vector_type);\n "}]}