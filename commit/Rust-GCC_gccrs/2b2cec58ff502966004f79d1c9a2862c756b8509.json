{"sha": "2b2cec58ff502966004f79d1c9a2862c756b8509", "node_id": "C_kwDOANBUbNoAKDJiMmNlYzU4ZmY1MDI5NjYwMDRmNzlkMWM5YTI4NjJjNzU2Yjg1MDk", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-12-19T11:12:16Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-12-19T11:12:16Z"}, "message": "gcc-changelog: Add warning for auto-added files\n\ngit_email.py prints now a warning for files added automatically.\ngit_check_commit.py does likewise but only with --verbose.\nIt prints one line per ChangeLog file, either stating the file\nor if more than one the number of files.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_check_commit.py (__main__): With -v print a\n\twarning for the auto-added files.\n\t* gcc-changelog/git_commit.py (GitCommit.__init__): Add self.warnings.\n\t(GitCommit.check_mentioned_files): Add warning for auto-added files.\n\t(GitCommit.print_warnings): New function.\n\t* gcc-changelog/git_email.py (__main__): Remove bogus argument to\n\tGitEmail constructor; print auto-added-files warning.\n\t* gcc-changelog/test_email.py (test_auto_add_file_1,\n\ttest_auto_add_file_2): New tests.\n\t* gcc-changelog/test_patches.txt: Add two test cases.", "tree": {"sha": "e3e8e5c423530a5fdafef77c587f0238dd90224c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3e8e5c423530a5fdafef77c587f0238dd90224c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b2cec58ff502966004f79d1c9a2862c756b8509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2cec58ff502966004f79d1c9a2862c756b8509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b2cec58ff502966004f79d1c9a2862c756b8509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2cec58ff502966004f79d1c9a2862c756b8509/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03fb35f8753d87148b29b3f34b6154abe7db4c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fb35f8753d87148b29b3f34b6154abe7db4c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fb35f8753d87148b29b3f34b6154abe7db4c41"}], "stats": {"total": 136, "additions": 135, "deletions": 1}, "files": [{"sha": "2b9f2381f2097d26e488b94bf6004cf66fae8872", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=2b2cec58ff502966004f79d1c9a2862c756b8509", "patch": "@@ -42,7 +42,13 @@\n     if git_commit.success:\n         if args.print_changelog:\n             git_commit.print_output()\n+        if args.verbose and git_commit.warnings:\n+            for warning in git_commit.warnings:\n+                print('WARN: %s' % warning)\n     else:\n+        if args.verbose and git_commit.warnings:\n+            for warning in git_commit.warnings:\n+                print('WARN: %s' % warning)\n         for error in git_commit.errors:\n             print('ERR: %s' % error)\n             if args.verbose and error.details:"}, {"sha": "e82fbcacd3e66c3c51ccaa4a97d26e64c8b965ec", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=2b2cec58ff502966004f79d1c9a2862c756b8509", "patch": "@@ -22,6 +22,7 @@\n import os\n import re\n import sys\n+from collections import defaultdict\n \n default_changelog_locations = {\n     'c++tools',\n@@ -304,6 +305,7 @@ def __init__(self, info, commit_to_info_hook=None, ref_name=None):\n         self.changes = None\n         self.changelog_entries = []\n         self.errors = []\n+        self.warnings = []\n         self.top_level_authors = []\n         self.co_authors = []\n         self.top_level_prs = []\n@@ -706,6 +708,7 @@ def check_mentioned_files(self):\n                 msg += f' (did you mean \"{candidates[0]}\"?)'\n                 details = '\\n'.join(difflib.Differ().compare([file], [candidates[0]])).rstrip()\n             self.errors.append(Error(msg, file, details))\n+        auto_add_warnings = defaultdict(list)\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n                 if file in self.new_files:\n@@ -738,6 +741,7 @@ def check_mentioned_files(self):\n                         file = file[len(entry.folder):].lstrip('/')\n                         entry.lines.append('\\t* %s: New file.' % file)\n                         entry.files.append(file)\n+                        auto_add_warnings[entry.folder].append(file)\n                     else:\n                         msg = 'new file in the top-level folder not mentioned in a ChangeLog'\n                         self.errors.append(Error(msg, file))\n@@ -755,6 +759,11 @@ def check_mentioned_files(self):\n             if pattern not in used_patterns:\n                 error = \"pattern doesn't match any changed files\"\n                 self.errors.append(Error(error, pattern))\n+        for entry, val in auto_add_warnings.items():\n+            if len(val) == 1:\n+                self.warnings.append(f\"Auto-added new file '{entry}/{val[0]}'\")\n+            else:\n+                self.warnings.append(f\"Auto-added {len(val)} new files in '{entry}'\")\n \n     def check_for_correct_changelog(self):\n         for entry in self.changelog_entries:\n@@ -830,6 +839,12 @@ def print_errors(self):\n         for error in self.errors:\n             print(error)\n \n+    def print_warnings(self):\n+        if self.warnings:\n+            print('Warnings:')\n+            for warning in self.warnings:\n+                print(warning)\n+\n     def check_commit_email(self):\n         # Parse 'Martin Liska  <mliska@suse.cz>'\n         email = self.info.author.split(' ')[-1].strip('<>')"}, {"sha": "5468efcd0d59a534ee4a4e21481309d711a18534", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=2b2cec58ff502966004f79d1c9a2862c756b8509", "patch": "@@ -119,11 +119,13 @@ def show_help():\n \n         success = 0\n         for full in sorted(allfiles):\n-            email = GitEmail(full, False)\n+            email = GitEmail(full)\n             print(email.filename)\n             if email.success:\n                 success += 1\n                 print('  OK')\n+                for warning in email.warnings:\n+                    print('  WARN: %s' % warning)\n             else:\n                 for error in email.errors:\n                     print('  ERR: %s' % error)\n@@ -135,6 +137,7 @@ def show_help():\n         if email.success:\n             print('OK')\n             email.print_output()\n+            email.print_warnings()\n         else:\n             if not email.info.lines:\n                 print('Error: patch contains no parsed lines', file=sys.stderr)"}, {"sha": "79f8e0b860493a6b52050c4a67561c51ddc236b8", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=2b2cec58ff502966004f79d1c9a2862c756b8509", "patch": "@@ -461,3 +461,17 @@ def test_space_after_tab(self):\n     def test_CR_in_patch(self):\n         email = self.from_patch_glob('0001-Add-M-character.patch')\n         assert (email.errors[0].message == 'cannot find a ChangeLog location in message')\n+\n+    def test_auto_add_file_1(self):\n+        email = self.from_patch_glob('0001-Auto-Add-File.patch')\n+        assert not email.errors\n+        assert (len(email.warnings) == 1)\n+        assert (email.warnings[0]\n+                == \"Auto-added new file 'libgomp/testsuite/libgomp.fortran/allocate-4.f90'\")\n+\n+    def test_auto_add_file_2(self):\n+        email = self.from_patch_glob('0002-Auto-Add-File.patch')\n+        assert not email.errors\n+        assert (len(email.warnings) == 2)\n+        assert (email.warnings[0] == \"Auto-added new file 'gcc/doc/gm2.texi'\")\n+        assert (email.warnings[1] == \"Auto-added 2 new files in 'gcc/m2'\")"}, {"sha": "6004608a8f9e6a9ce61e54aee0e4230edfc4a3c0", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2cec58ff502966004f79d1c9a2862c756b8509/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=2b2cec58ff502966004f79d1c9a2862c756b8509", "patch": "@@ -3636,3 +3636,99 @@ index 0000000..d75da75\n -- \n 2.38.1\n \n+=== 0001-Auto-Add-File.patch ====\n+From e205ec03f0794aeac3e8a89e947c12624d5a274e Mon Sep 17 00:00:00 2001\n+From: Tobias Burnus <tobias@codesourcery.com>\n+Date: Thu, 15 Dec 2022 12:25:07 +0100\n+Subject: [PATCH] libgfortran's ISO_Fortran_binding.c: Use GCC11 version for\n+ backward-only code [PR108056]\n+\n+libgfortran/ChangeLog:\n+\n+\tPR libfortran/108056\n+\t* runtime/ISO_Fortran_binding.c (cfi_desc_to_gfc_desc,\n+\tgfc_desc_to_cfi_desc): Mostly revert to GCC 11 version for\n+\tthose backward-compatiblity-only functions.\n+---\n+ libgfortran/runtime/ISO_Fortran_binding.c     | 151 +++---------------\n+ .../testsuite/libgomp.fortran/allocate-4.f90  |  42 +++++\n+ 2 files changed, 64 insertions(+), 129 deletions(-)\n+ create mode 100644 libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+\n+diff --git a/libgfortran/runtime/ISO_Fortran_binding.c b/libgfortran/runtime/ISO_Fortran_binding.c\n+index 342df4275b9..e63a717a69b 100644\n+--- a/libgfortran/runtime/ISO_Fortran_binding.c\n++++ b/libgfortran/runtime/ISO_Fortran_binding.c\n+@@ -41,1 +41,1 @@ export_proto(cfi_desc_to_gfc_desc);\n+-  signed char type;\n++  size_t type;\n+diff --git a/libgomp/testsuite/libgomp.fortran/allocate-4.f90 b/libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+new file mode 100644\n+index 00000000000..ddb507ba8e4\n+--- /dev/null\n++++ b/libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+@@ -0,0 +1,1 @@\n++end\n+-- \n+2.25.1\n+\n+=== 0002-Auto-Add-File.patch ====\n+From 1eee94d351774cdc2efc8ee508b82d065184c6ee Mon Sep 17 00:00:00 2001\n+From: Gaius Mulley <gaiusmod2@gmail.com>\n+Date: Wed, 14 Dec 2022 17:43:08 +0000\n+Subject: [PATCH 363/400] Merge modula-2 front end onto gcc.\n+\n+This commit merges the devel/modula2 into master.\n+The libraries reside in libgm2, the compiler in gcc/m2\n+and the testsuite in gcc/testsuite/gm2.\n+\n+gcc/ChangeLog:\n+\n+\t* configure.ac (HAVE_PYTHON): Test for Python3 added.\n+\t* doc/install.texi: Add m2 as a language.  (--disable-libgm2)\n+\n+Signed-off-by: Gaius Mulley <gaiusmod2@gmail.com>\n+---\n+ gcc/configure.ac                              |    15 +-\n+ gcc/doc/gm2.texi                              |  2838 ++\n+ gcc/doc/install.texi                          |    53 +-\n+ gcc/m2/COPYING.FDL                            |   397 +\n+ gcc/m2/COPYING.RUNTIME                        |    73 +\n+diff --git a/gcc/configure.ac b/gcc/configure.ac\n+index 7ca08726efa..5efbf11793c 100644\n+--- a/gcc/configure.ac\n++++ b/gcc/configure.ac\n+@@ -7651,3 +7665,2 @@ done\n+ [subdirs='$subdirs'])\n+ AC_OUTPUT\n+-\n+diff --git a/gcc/doc/gm2.texi b/gcc/doc/gm2.texi\n+new file mode 100644\n+index 00000000000..513fdd3ec7f\n+--- /dev/null\n++++ b/gcc/doc/gm2.texi\n+@@ -0,0 +1,1 @@\n++\\input texinfo\n+diff --git a/gcc/doc/install.texi b/gcc/doc/install.texi\n+index 89ff6a6734b..6884a74936b 100644\n+--- a/gcc/doc/install.texi\n++++ b/gcc/doc/install.texi\n+@@ -308,1 +308,2 @@ On some targets, @samp{libphobos} isn't enabled by default, but compiles\n+ \n++@item @anchor{GM2-prerequisite}GM2\n+diff --git a/gcc/m2/COPYING.FDL b/gcc/m2/COPYING.FDL\n+new file mode 100644\n+index 00000000000..9854856fa81\n+--- /dev/null\n++++ b/gcc/m2/COPYING.FDL\n+@@ -0,0 +1,1 @@\n++\t\tGNU Free Documentation License\n+diff --git a/gcc/m2/COPYING.RUNTIME b/gcc/m2/COPYING.RUNTIME\n+new file mode 100644\n+index 00000000000..649af5e573a\n+--- /dev/null\n++++ b/gcc/m2/COPYING.RUNTIME\n+@@ -0,0 +1,1 @@\n++GCC RUNTIME LIBRARY EXCEPTION\n+-- \n+2.25.1"}]}