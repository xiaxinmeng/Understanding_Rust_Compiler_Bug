{"sha": "a0bc61e0b6da2ff9aca05d7b389a9c114a034052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBiYzYxZTBiNmRhMmZmOWFjYTA1ZDdiMzg5YTljMTE0YTAzNDA1Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-02T16:46:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-02T16:56:39Z"}, "message": "core: Synchronize tree-cst & wide-int caching expectations\n\nI fell over an ICE where wide_int_to_type_1's expectations of pointer\nvalue caching didn't match that of cache_integer_cst's behaviour.  I\ndon't know why it only exhibited on the modules branch, but it seems\npretty wrong.  This patch matches up the behaviours and adds a comment\nabout that.\n\n\tgcc/\n\t* tree.c (cache_integer_cst): Fixup pointer caching to match\n\twide_int_to_type_1's expectations.  Add comment.", "tree": {"sha": "a8d4e57246ce2bb6867e4155f7deff982f55b290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8d4e57246ce2bb6867e4155f7deff982f55b290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0bc61e0b6da2ff9aca05d7b389a9c114a034052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bc61e0b6da2ff9aca05d7b389a9c114a034052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0bc61e0b6da2ff9aca05d7b389a9c114a034052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bc61e0b6da2ff9aca05d7b389a9c114a034052/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a2e765d7773185efa109c12839ab6c8a18a1346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2e765d7773185efa109c12839ab6c8a18a1346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2e765d7773185efa109c12839ab6c8a18a1346"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "9260772b84611da671e34d4a6c5afc5814de01f6", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bc61e0b6da2ff9aca05d7b389a9c114a034052/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bc61e0b6da2ff9aca05d7b389a9c114a034052/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=a0bc61e0b6da2ff9aca05d7b389a9c114a034052", "patch": "@@ -1737,6 +1737,8 @@ cache_integer_cst (tree t)\n \n   gcc_assert (!TREE_OVERFLOW (t));\n \n+  /* The caching indices here must match those in\n+     wide_int_to_type_1.  */\n   switch (TREE_CODE (type))\n     {\n     case NULLPTR_TYPE:\n@@ -1745,12 +1747,15 @@ cache_integer_cst (tree t)\n \n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n-      /* Cache NULL pointer.  */\n-      if (integer_zerop (t))\n-\t{\n-\t  limit = 1;\n+      {\n+\tif (integer_zerop (t))\n \t  ix = 0;\n-\t}\n+\telse if (integer_onep (t))\n+\t  ix = 2;\n+\n+\tif (ix >= 0)\n+\t  limit = 3;\n+      }\n       break;\n \n     case BOOLEAN_TYPE:"}]}