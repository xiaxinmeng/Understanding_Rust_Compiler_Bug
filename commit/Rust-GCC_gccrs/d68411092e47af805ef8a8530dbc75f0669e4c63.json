{"sha": "d68411092e47af805ef8a8530dbc75f0669e4c63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY4NDExMDkyZTQ3YWY4MDVlZjhhODUzMGRiYzc1ZjA2NjllNGM2Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-06-25T11:12:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-06-25T11:12:01Z"}, "message": "pa.h (MODIFY_TARGET_NAME): Remove.\n\n\t* config/pa/pa.h (MODIFY_TARGET_NAME): Remove.\n\t* doc/tm.texi (MODIFY_TARGET_NAME): Don't document.\n\t* gcc.c (enum add_del, struct modify_target, modify_target):\n\tRemove.\n\t(process_command): Remove code conditional on MODIFY_TARGET_NAME.\n\t* system.h (MODIFY_TARGET_NAME): Poison.\n\nFrom-SVN: r161372", "tree": {"sha": "59378010fa68502204be0230e827abdf54555498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59378010fa68502204be0230e827abdf54555498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d68411092e47af805ef8a8530dbc75f0669e4c63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68411092e47af805ef8a8530dbc75f0669e4c63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68411092e47af805ef8a8530dbc75f0669e4c63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68411092e47af805ef8a8530dbc75f0669e4c63/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c9d416e567100b2bd4cd935711e09985024c3fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9d416e567100b2bd4cd935711e09985024c3fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9d416e567100b2bd4cd935711e09985024c3fa"}], "stats": {"total": 116, "additions": 11, "deletions": 105}, "files": [{"sha": "d56312a6f7c5022f01ebd6118862d0874e7cce96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d68411092e47af805ef8a8530dbc75f0669e4c63", "patch": "@@ -1,3 +1,12 @@\n+2010-06-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/pa/pa.h (MODIFY_TARGET_NAME): Remove.\n+\t* doc/tm.texi (MODIFY_TARGET_NAME): Don't document.\n+\t* gcc.c (enum add_del, struct modify_target, modify_target):\n+\tRemove.\n+\t(process_command): Remove code conditional on MODIFY_TARGET_NAME.\n+\t* system.h (MODIFY_TARGET_NAME): Poison.\n+\n 2010-06-25  Alan Modra  <amodra@gmail.com>\n \n \t* doc/invoke.texi: Delete mcmodel=medium from powerpc options."}, {"sha": "8a18289b0d2ba96470890da490fa1ea4e82db8a1", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=d68411092e47af805ef8a8530dbc75f0669e4c63", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for the HP Spectrum.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) of Cygnus Support\n    and Tim Moore (moore@defmacro.cs.utah.edu) of the Center for\n@@ -222,15 +222,6 @@ do {\t\t\t\t\t\t\t\t\\\n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\"\n #endif\n \n-/* This macro defines command-line switches that modify the default\n-   target name.\n-\n-   The definition is be an initializer for an array of structures.  Each\n-   array element has have three elements: the switch name, one of the\n-   enumeration codes ADD or DELETE to indicate whether the string should be\n-   inserted or deleted, and the string to be inserted or deleted.  */\n-#define MODIFY_TARGET_NAME {{\"-32\", DELETE, \"64\"}, {\"-64\", ADD, \"64\"}}\n-\n /* Make gcc agree with <machine/ansi.h> */\n \n #define SIZE_TYPE \"unsigned int\""}, {"sha": "87329e019d802dcbfa80bd19d4af30c9bdc6cc6e", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d68411092e47af805ef8a8530dbc75f0669e4c63", "patch": "@@ -523,31 +523,6 @@ Cross compilers do not search either @file{/usr/local/include} or its\n replacement.\n @end defmac\n \n-@defmac MODIFY_TARGET_NAME\n-Define this macro if you wish to define command-line switches that\n-modify the default target name.\n-\n-For each switch, you can include a string to be appended to the first\n-part of the configuration name or a string to be deleted from the\n-configuration name, if present.  The definition should be an initializer\n-for an array of structures.  Each array element should have three\n-elements: the switch name (a string constant, including the initial\n-dash), one of the enumeration codes @code{ADD} or @code{DELETE} to\n-indicate whether the string should be inserted or deleted, and the string\n-to be inserted or deleted (a string constant).\n-\n-For example, on a machine where @samp{64} at the end of the\n-configuration name denotes a 64-bit target and you want the @option{-32}\n-and @option{-64} switches to select between 32- and 64-bit targets, you would\n-code\n-\n-@smallexample\n-#define MODIFY_TARGET_NAME \\\n-  @{ @{ \"-32\", DELETE, \"64\"@}, \\\n-     @{\"-64\", ADD, \"64\"@}@}\n-@end smallexample\n-@end defmac\n-\n @defmac SYSTEM_INCLUDE_DIR\n Define this macro as a C string constant if you wish to specify a\n system-specific directory to search for header files before the standard"}, {"sha": "23c37be2e7a0f7740e9d49278ca78714b8fd6b20", "filename": "gcc/gcc.c", "status": "modified", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d68411092e47af805ef8a8530dbc75f0669e4c63", "patch": "@@ -280,23 +280,6 @@ static const char *cross_compile = \"1\";\n static const char *cross_compile = \"0\";\n #endif\n \n-#ifdef MODIFY_TARGET_NAME\n-\n-/* Information on how to alter the target name based on a command-line\n-   switch.  The only case we support now is simply appending or deleting a\n-   string to or from the end of the first part of the configuration name.  */\n-\n-enum add_del {ADD, DELETE};\n-\n-static const struct modify_target\n-{\n-  const char *const sw;\n-  const enum add_del add_del;\n-  const char *const str;\n-}\n-modify_target[] = MODIFY_TARGET_NAME;\n-#endif\n-\n /* Greatest exit code of sub-processes that has been encountered up to\n    now.  */\n static int greatest_status = 1;\n@@ -3509,10 +3492,6 @@ process_command (int argc, const char **argv)\n   const char *spec_lang = 0;\n   int last_language_n_infiles;\n   int lang_n_infiles = 0;\n-#ifdef MODIFY_TARGET_NAME\n-  int is_modify_target_name;\n-  unsigned int j;\n-#endif\n   const char *tooldir_prefix;\n   char *(*get_relative_prefix) (const char *, const char *,\n \t\t\t\tconst char *) = NULL;\n@@ -4134,43 +4113,6 @@ process_command (int argc, const char **argv)\n \t    default:\n \t    normal_switch:\n \n-#ifdef MODIFY_TARGET_NAME\n-\t      is_modify_target_name = 0;\n-\n-\t      for (j = 0; j < ARRAY_SIZE (modify_target); j++)\n-\t\tif (! strcmp (argv[i], modify_target[j].sw))\n-\t\t  {\n-\t\t    char *new_name = XNEWVEC (char, strlen (modify_target[j].str)\n-\t\t\t\t\t      + strlen (spec_machine));\n-\t\t    const char *p, *r;\n-\t\t    char *q;\n-\t\t    int made_addition = 0;\n-\n-\t\t    is_modify_target_name = 1;\n-\t\t    for (p = spec_machine, q = new_name; *p != 0; )\n-\t\t      {\n-\t\t\tif (modify_target[j].add_del == DELETE\n-\t\t\t    && (! strncmp (q, modify_target[j].str,\n-\t\t\t\t\t   strlen (modify_target[j].str))))\n-\t\t\t  p += strlen (modify_target[j].str);\n-\t\t\telse if (modify_target[j].add_del == ADD\n-\t\t\t\t && ! made_addition && *p == '-')\n-\t\t\t  {\n-\t\t\t    for (r = modify_target[j].str; *r != 0; )\n-\t\t\t      *q++ = *r++;\n-\t\t\t    made_addition = 1;\n-\t\t\t  }\n-\n-\t\t\t*q++ = *p++;\n-\t\t      }\n-\n-\t\t    spec_machine = new_name;\n-\t\t  }\n-\n-\t      if (is_modify_target_name)\n-\t\tbreak;\n-#endif\n-\n \t      n_switches++;\n \n \t      if (SWITCH_TAKES_ARG (c) > (p[1] != 0))\n@@ -4311,17 +4253,6 @@ process_command (int argc, const char **argv)\n   for (i = 1; i < argc; i++)\n     {\n       /* Just skip the switches that were handled by the preceding loop.  */\n-#ifdef MODIFY_TARGET_NAME\n-      is_modify_target_name = 0;\n-\n-      for (j = 0; j < ARRAY_SIZE (modify_target); j++)\n-\tif (! strcmp (argv[i], modify_target[j].sw))\n-\t  is_modify_target_name = 1;\n-\n-      if (is_modify_target_name)\n-\t;\n-      else\n-#endif\n       if (! strncmp (argv[i], \"-Wa,\", 4))\n \t;\n       else if (! strncmp (argv[i], \"-Wp,\", 4))"}, {"sha": "49f4918aab0953ca7933a138aa625ed92c091e11", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68411092e47af805ef8a8530dbc75f0669e4c63/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=d68411092e47af805ef8a8530dbc75f0669e4c63", "patch": "@@ -769,7 +769,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tASM_OUTPUT_SHARED_LOCAL ASM_MAKE_LABEL_LINKONCE\t\t\t   \\\n \tSTACK_CHECK_PROBE_INTERVAL STACK_CHECK_PROBE_LOAD\t\t   \\\n \tORDER_REGS_FOR_LOCAL_ALLOC FUNCTION_OUTGOING_VALUE\t\t   \\\n-\tASM_DECLARE_CONSTANT_NAME\n+\tASM_DECLARE_CONSTANT_NAME MODIFY_TARGET_NAME\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}