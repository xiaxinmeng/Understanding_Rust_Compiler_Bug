{"sha": "0aaa90896608511a17211385ede533ef5b46327e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFhYTkwODk2NjA4NTExYTE3MjExMzg1ZWRlNTMzZWY1YjQ2MzI3ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-23T02:26:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-23T02:26:32Z"}, "message": "cp-tree.h (CP_TYPE_READONLY): New macro to handle arrays.\n\n\t* cp-tree.h (CP_TYPE_READONLY): New macro to handle arrays.\n\t(CP_TYPE_VOLATILE): Likewise.\n\t* decl.c (grokdeclarator): Use them.\n\t* tree.c (canonical_type_variant): Likewise.\n\nFrom-SVN: r23244", "tree": {"sha": "c6e279b75c6748b8d90e4110fed1fe27a545da3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e279b75c6748b8d90e4110fed1fe27a545da3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aaa90896608511a17211385ede533ef5b46327e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aaa90896608511a17211385ede533ef5b46327e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aaa90896608511a17211385ede533ef5b46327e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aaa90896608511a17211385ede533ef5b46327e/comments", "author": null, "committer": null, "parents": [{"sha": "ccb5954fea236ccb5e521b1d644962959daced28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb5954fea236ccb5e521b1d644962959daced28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb5954fea236ccb5e521b1d644962959daced28"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "da9cad2437053ed01993be5fe6367e106c8d2854", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0aaa90896608511a17211385ede533ef5b46327e", "patch": "@@ -1,3 +1,10 @@\n+1998-10-23  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.h (CP_TYPE_READONLY): New macro to handle arrays.\n+\t(CP_TYPE_VOLATILE): Likewise.\n+\t* decl.c (grokdeclarator): Use them.\n+\t* tree.c (canonical_type_variant): Likewise.\n+\n 1998-10-22  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* parse.y (named_class_head): Push into class while parsing the"}, {"sha": "ad874a12b1880586c04f9e624a208f255d18035a", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0aaa90896608511a17211385ede533ef5b46327e", "patch": "@@ -514,6 +514,15 @@ enum languages { lang_c, lang_cplusplus, lang_java };\n /* The _DECL for this _TYPE.  */\n #define TYPE_MAIN_DECL(NODE) (TYPE_STUB_DECL (TYPE_MAIN_VARIANT (NODE)))\n \n+#define CP_TYPE_READONLY(NODE)\t\t\t\\\n+  (TREE_CODE (NODE) == ARRAY_TYPE\t\t\\\n+   ? TYPE_READONLY (TREE_TYPE (NODE))\t\t\\\n+   : TYPE_READONLY (NODE))\n+#define CP_TYPE_VOLATILE(NODE)\t\t\t\\\n+  (TREE_CODE (NODE) == ARRAY_TYPE\t\t\\\n+   ? TYPE_VOLATILE (TREE_TYPE (NODE))\t\t\\\n+   : TYPE_VOLATILE (NODE))\n+\n /* Nonzero if T is a class (or struct or union) type.  Also nonzero\n    for template type parameters and typename types.  Despite its name,\n    this macro has nothing to do with the definition of aggregate given"}, {"sha": "c98db982014d0f6fb002855df13907bdbf36d36a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0aaa90896608511a17211385ede533ef5b46327e", "patch": "@@ -9196,8 +9196,8 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n      explicit specification or via a typedef.\n      Likewise for VOLATILEP.  */\n \n-  constp = !! RIDBIT_SETP (RID_CONST, specbits) + TYPE_READONLY (type);\n-  volatilep = !! RIDBIT_SETP (RID_VOLATILE, specbits) + TYPE_VOLATILE (type);\n+  constp = !!RIDBIT_SETP (RID_CONST, specbits) + CP_TYPE_READONLY (type);\n+  volatilep = !!RIDBIT_SETP (RID_VOLATILE, specbits) + CP_TYPE_VOLATILE (type);\n   type = cp_build_type_variant (type, constp, volatilep);\n   staticp = 0;\n   inlinep = !! RIDBIT_SETP (RID_INLINE, specbits);"}, {"sha": "15be5d798d2c8e00253f48c415b86a114b265814", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aaa90896608511a17211385ede533ef5b46327e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=0aaa90896608511a17211385ede533ef5b46327e", "patch": "@@ -501,18 +501,8 @@ tree\n canonical_type_variant (t)\n      tree t;\n {\n-  int constp, volatilep;\n-  if (TREE_CODE (t) == ARRAY_TYPE)\n-    {\n-      constp = TYPE_READONLY (TREE_TYPE (t));\n-      volatilep = TYPE_VOLATILE (TREE_TYPE (t));\n-    }\n-  else\n-    {\n-      constp = TYPE_READONLY (t);\n-      volatilep = TYPE_VOLATILE (t);\n-    }\n-  return cp_build_type_variant (TYPE_MAIN_VARIANT (t), constp, volatilep);\n+  return cp_build_type_variant (TYPE_MAIN_VARIANT (t), CP_TYPE_READONLY (t),\n+\t\t\t\tCP_TYPE_VOLATILE (t));\n }\n \f\n /* Add OFFSET to all base types of T."}]}