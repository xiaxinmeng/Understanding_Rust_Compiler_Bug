{"sha": "224f1d7123164a8c7ed9f313320b464c468b8b18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI0ZjFkNzEyMzE2NGE4YzdlZDlmMzEzMzIwYjQ2NGM0NjhiOGIxOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-16T22:54:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-16T22:54:00Z"}, "message": "(reload_reg_free_p, case RELOAD_OTHER): Allowed to conflict with\nRELOAD_FOR_OTHER_ADDRESS.\n\nFrom-SVN: r7505", "tree": {"sha": "a92d924535e2b5a0b6f0ffdcee76bd5595afd98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92d924535e2b5a0b6f0ffdcee76bd5595afd98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/224f1d7123164a8c7ed9f313320b464c468b8b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224f1d7123164a8c7ed9f313320b464c468b8b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224f1d7123164a8c7ed9f313320b464c468b8b18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224f1d7123164a8c7ed9f313320b464c468b8b18/comments", "author": null, "committer": null, "parents": [{"sha": "787e63c8f337d23db7c6d162ed4413403274544e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/787e63c8f337d23db7c6d162ed4413403274544e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/787e63c8f337d23db7c6d162ed4413403274544e"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "11e0a1bf4a66ffe57dfddb3b405b6a79c51fd7e7", "filename": "gcc/reload1.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/224f1d7123164a8c7ed9f313320b464c468b8b18/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/224f1d7123164a8c7ed9f313320b464c468b8b18/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=224f1d7123164a8c7ed9f313320b464c468b8b18", "patch": "@@ -4156,10 +4156,22 @@ reload_reg_free_p (regno, opnum, type)\n   switch (type)\n     {\n     case RELOAD_OTHER:\n-      /* In use for anything means not available for a RELOAD_OTHER.  */\n-      return ! TEST_HARD_REG_BIT (reload_reg_used_at_all, regno);\n+      /* In use for anything except RELOAD_FOR_OTHER_ADDRESS means\n+\t we can't use it for RELOAD_OTHER.  */\n+      if (TEST_HARD_REG_BIT (reload_reg_used, regno)\n+\t  || TEST_HARD_REG_BIT (reload_reg_used_in_op_addr, regno)\n+\t  || TEST_HARD_REG_BIT (reload_reg_used_in_insn, regno))\n+\treturn 0;\n+\n+      for (i = 0; i < reload_n_operands; i++)\n+\tif (TEST_HARD_REG_BIT (reload_reg_used_in_input_addr[i], regno)\n+\t    || TEST_HARD_REG_BIT (reload_reg_used_in_output_addr[i], regno)\n+\t    || TEST_HARD_REG_BIT (reload_reg_used_in_input[i], regno)\n+\t    || TEST_HARD_REG_BIT (reload_reg_used_in_output[i], regno))\n+\t  return 0;\n+\n+      return 1;\n \n-      /* The other kinds of use can sometimes share a register.  */\n     case RELOAD_FOR_INPUT:\n       if (TEST_HARD_REG_BIT (reload_reg_used_in_insn, regno)\n \t  || TEST_HARD_REG_BIT (reload_reg_used_in_op_addr, regno))"}]}