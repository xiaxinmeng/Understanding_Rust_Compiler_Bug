{"sha": "1b32951078029b56c6b35092e1fc739f1c66a1b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIzMjk1MTA3ODAyOWI1NmM2YjM1MDkyZTFmYzczOWYxYzY2YTFiMw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2016-10-18T13:28:16Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-10-18T13:28:16Z"}, "message": "rs6000.c (rs6000_output_symbol_ref): Move storage mapping class decoration from here...\n\n        * config/rs6000/rs6000.c (rs6000_output_symbol_ref): Move storage\n        mapping class decoration from here...\n        (rs6000_xcoff_encode_section): ...to here.\n\n        (rs6000_savres_strategy) [AIX,ELFv2]: Inline FPR save and restore\n        if shrink-wrapping and optimizing for speed.\n\nFrom-SVN: r241303", "tree": {"sha": "39cc2e4ce6982f8149a9bd17c81efb9145383439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39cc2e4ce6982f8149a9bd17c81efb9145383439"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b32951078029b56c6b35092e1fc739f1c66a1b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b32951078029b56c6b35092e1fc739f1c66a1b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b32951078029b56c6b35092e1fc739f1c66a1b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b32951078029b56c6b35092e1fc739f1c66a1b3/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5163ec1df8755de70b711022314220318a0a441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5163ec1df8755de70b711022314220318a0a441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5163ec1df8755de70b711022314220318a0a441"}], "stats": {"total": 53, "additions": 31, "deletions": 22}, "files": [{"sha": "bd4435a4b37790cfde93936804fb4de57e656969", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b32951078029b56c6b35092e1fc739f1c66a1b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b32951078029b56c6b35092e1fc739f1c66a1b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b32951078029b56c6b35092e1fc739f1c66a1b3", "patch": "@@ -1,3 +1,12 @@\n+2016-10-18  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_output_symbol_ref): Move storage\n+\tmapping class decoration from here...\n+\t(rs6000_xcoff_encode_section): ...to here.\n+\n+\t(rs6000_savres_strategy) [AIX,ELFv2]: Inline FPR save and restore\n+\tif shrink-wrapping and optimizing for speed.\n+\n 2016-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vrp.c (evrp_dom_walker::before_dom_children): Handle"}, {"sha": "1a0c4c0fe420a098fa5f7190f28e3d572998defb", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b32951078029b56c6b35092e1fc739f1c66a1b3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b32951078029b56c6b35092e1fc739f1c66a1b3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1b32951078029b56c6b35092e1fc739f1c66a1b3", "patch": "@@ -25452,7 +25452,8 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n   else\n     {\n       gcc_checking_assert (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2);\n-      if (info->first_fp_reg_save > 61)\n+      if ((flag_shrink_wrap_separate && optimize_function_for_speed_p (cfun))\n+\t  || info->first_fp_reg_save > 61)\n \tstrategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n       strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n       strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n@@ -30680,31 +30681,14 @@ rs6000_xcoff_strip_dollar (const char *name)\n void\n rs6000_output_symbol_ref (FILE *file, rtx x)\n {\n+  const char *name = XSTR (x, 0);\n+\n   /* Currently C++ toc references to vtables can be emitted before it\n      is decided whether the vtable is public or private.  If this is\n      the case, then the linker will eventually complain that there is\n      a reference to an unknown section.  Thus, for vtables only,\n-     we emit the TOC reference to reference the symbol and not the\n-     section.  */\n-  const char *name = XSTR (x, 0);\n-\n-  tree decl = SYMBOL_REF_DECL (x);\n-  if (decl /* sync condition with assemble_external () */\n-      && DECL_P (decl) && DECL_EXTERNAL (decl) && TREE_PUBLIC (decl)\n-      && (TREE_CODE (decl) == VAR_DECL\n-\t  || TREE_CODE (decl) == FUNCTION_DECL)\n-      && name[strlen (name) - 1] != ']')\n-    {\n-      name = concat (name,\n-\t\t     (TREE_CODE (decl) == FUNCTION_DECL\n-\t\t      ? \"[DS]\" : \"[UA]\"),\n-\t\t     NULL);\n-\n-      /* Don't modify name in extern VAR_DECL to include mapping class.  */\n-      if (TREE_CODE (decl) == FUNCTION_DECL)\n-\tXSTR (x, 0) = name;\n-    }\n-\n+     we emit the TOC reference to reference the identifier and not the\n+     symbol.  */\n   if (VTABLE_NAME_P (name))\n     {\n       RS6000_OUTPUT_BASENAME (file, name);\n@@ -35277,6 +35261,7 @@ rs6000_xcoff_encode_section_info (tree decl, rtx rtl, int first)\n {\n   rtx symbol;\n   int flags;\n+  const char *symname;\n \n   default_encode_section_info (decl, rtl, first);\n \n@@ -35293,6 +35278,21 @@ rs6000_xcoff_encode_section_info (tree decl, rtx rtl, int first)\n     flags &= ~SYMBOL_FLAG_HAS_BLOCK_INFO;\n \n   SYMBOL_REF_FLAGS (symbol) = flags;\n+\n+  /* Append mapping class to extern decls.  */\n+  symname = XSTR (symbol, 0);\n+  if (decl /* sync condition with assemble_external () */\n+      && DECL_P (decl) && DECL_EXTERNAL (decl) && TREE_PUBLIC (decl)\n+      && ((TREE_CODE (decl) == VAR_DECL && !DECL_THREAD_LOCAL_P (decl))\n+\t  || TREE_CODE (decl) == FUNCTION_DECL)\n+      && symname[strlen (symname) - 1] != ']')\n+    {\n+      char *newname = (char *) alloca (strlen (symname) + 5);\n+      strcpy (newname, symname);\n+      strcat (newname, (TREE_CODE (decl) == FUNCTION_DECL\n+\t\t\t? \"[DS]\" : \"[UA]\"));\n+      XSTR (symbol, 0) = ggc_strdup (newname);\n+    }\n }\n #endif /* HAVE_AS_TLS */\n #endif /* TARGET_XCOFF */"}]}