{"sha": "e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxNGRlMGEwYWQ1ODNlN2QwNGM5Yjk3YTJmMTdmNDI1OThlNzhlNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2007-02-28T00:11:14Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2007-02-28T00:11:14Z"}, "message": "predicates.md (move_src_operand): Allow zero for mode.\n\n\t* pa/predicates.md (move_src_operand): Allow zero for mode.\n\t* pa/pa.md: Fix constraints for zero CONST_DOUBLE in 64-bit DFmode\n\tmove pattern.\n\nFrom-SVN: r122388", "tree": {"sha": "ab4740ff809d364494b0758dbaeafdba4bf091c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab4740ff809d364494b0758dbaeafdba4bf091c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/comments", "author": null, "committer": null, "parents": [{"sha": "8ab9333261065ccc8898f515571f0276321e005d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab9333261065ccc8898f515571f0276321e005d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab9333261065ccc8898f515571f0276321e005d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "888ac2e61941a6171b929a3cb2537816852d673b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "patch": "@@ -1,3 +1,9 @@\n+2007-02-27  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa/predicates.md (move_src_operand): Allow zero for mode.\n+\t* pa/pa.md: Fix constraints for zero CONST_DOUBLE in 64-bit DFmode\n+\tmove pattern.\n+\n 2007-02-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/30970"}, {"sha": "54335c347160c973f01f4c003bea94c057e76f41", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "patch": "@@ -4343,7 +4343,7 @@\n   [(set (match_operand:DF 0 \"move_dest_operand\"\n \t\t\t  \"=!*r,*r,*r,*r,*r,Q,f,f,T\")\n \t(match_operand:DF 1 \"move_src_operand\"\n-\t\t\t  \"!*r,J,N,K,RQ,*rM,fM,RT,f\"))]\n+\t\t\t  \"!*r,J,N,K,RQ,*rG,fG,RT,f\"))]\n   \"(register_operand (operands[0], DFmode)\n     || reg_or_0_operand (operands[1], DFmode))\n    && !TARGET_SOFT_FLOAT && TARGET_64BIT\""}, {"sha": "ff9ebacf1c907a92ea9f8cb2b0dd544d1295b2e5", "filename": "gcc/config/pa/predicates.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2Fconfig%2Fpa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e214de0a0ad583e7d04c9b97a2f17f42598e78e5/gcc%2Fconfig%2Fpa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpredicates.md?ref=e214de0a0ad583e7d04c9b97a2f17f42598e78e5", "patch": "@@ -207,11 +207,14 @@\n ;; instruction.\n \n (define_predicate \"move_src_operand\"\n-  (match_code \"subreg,reg,const_int,mem\")\n+  (match_code \"subreg,reg,const_int,const_double,mem\")\n {\n   if (register_operand (op, mode))\n     return 1;\n \n+  if (op == CONST0_RTX (mode))\n+    return 1;\n+\n   if (GET_CODE (op) == CONST_INT)\n     return cint_ok_for_move (INTVAL (op));\n "}]}