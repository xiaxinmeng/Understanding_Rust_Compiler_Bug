{"sha": "072d3115c0e297d91c133c4214b357b0a50557b9", "node_id": "C_kwDOANBUbNoAKDA3MmQzMTE1YzBlMjk3ZDkxYzEzM2M0MjE0YjM1N2IwYTUwNTU3Yjk", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-08-24T20:28:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-08-25T21:03:10Z"}, "message": "c++: block copy elision in delegating ctor\n\nCWG2403 deals with the issue that copy elision is not possible when the\ninitialized object is a potentially-overlapping subobject and the\ninitializer is a function that returns by value.  Jonathan pointed out that\nthis also affects delegating constructors, which might be used to construct\na base subobject.\n\ngcc/cp/ChangeLog:\n\n\t* call.cc (unsafe_return_slot_p): Return 2 for *this in a\n\tconstructor.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/init/elide8.C: New test.", "tree": {"sha": "56aee593ee7bddd43a1bb5437d74dd52235fc1ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56aee593ee7bddd43a1bb5437d74dd52235fc1ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/072d3115c0e297d91c133c4214b357b0a50557b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072d3115c0e297d91c133c4214b357b0a50557b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072d3115c0e297d91c133c4214b357b0a50557b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072d3115c0e297d91c133c4214b357b0a50557b9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30e160475489867a09ed89532cae135b5849cf98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30e160475489867a09ed89532cae135b5849cf98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30e160475489867a09ed89532cae135b5849cf98"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "d107a2814dc59a7d6de5186abb427791c0d8cdee", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072d3115c0e297d91c133c4214b357b0a50557b9/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072d3115c0e297d91c133c4214b357b0a50557b9/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=072d3115c0e297d91c133c4214b357b0a50557b9", "patch": "@@ -9022,6 +9022,13 @@ unsafe_return_slot_p (tree t)\n   if (is_empty_base_ref (t))\n     return 2;\n \n+  /* A delegating constructor might be used to initialize a base.  */\n+  if (current_function_decl\n+      && DECL_CONSTRUCTOR_P (current_function_decl)\n+      && (t == current_class_ref\n+\t  || tree_strip_nop_conversions (t) == current_class_ptr))\n+    return 2;\n+\n   STRIP_NOPS (t);\n   if (TREE_CODE (t) == ADDR_EXPR)\n     t = TREE_OPERAND (t, 0);"}, {"sha": "31f899b6623384ff3361602549875c6091fe3c96", "filename": "gcc/testsuite/g++.dg/init/elide8.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072d3115c0e297d91c133c4214b357b0a50557b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072d3115c0e297d91c133c4214b357b0a50557b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide8.C?ref=072d3115c0e297d91c133c4214b357b0a50557b9", "patch": "@@ -0,0 +1,11 @@\n+// CWG 2403 case 3: we can't elide this copy because the delegating constructor\n+// might be used to initialize a base.\n+// { dg-do compile { target c++11 } }\n+\n+struct Noncopyable {\n+  Noncopyable() = default;\n+  Noncopyable(const Noncopyable &) = delete;\n+  Noncopyable(int) : Noncopyable(make()) {} // { dg-error \"deleted\" }\n+\n+  static Noncopyable make();\n+};"}]}