{"sha": "e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjZGRjM2I1YTljNTBhOWM3YmQ0YjU4Yjk3ZjYzODRiYzFhYTgwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:32:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:32:10Z"}, "message": "[multiple changes]\n\n2014-07-31  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Minor spelling error fix.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document No_Elaboration_Code_All restriction.\n\t* lib-writ.adb, lib-load.adb: Initialize No_Elab_Code field in unit\n\tinformation.\n\t* lib.ads, lib.adb (No_Elab_Code): New field in unit information.\n\t* restrict.adb (Process_Restriction_Synonyms): Add handling\n\tof No_Elaboration_Code_All.\n\t* restrict.ads (Process_Restriction_Synonyms): Now handles\n\tNo_Elaboration_Code_All.\n\t* sem_ch10.adb (Analyze_Context): Enforce transitive with for\n\tNo_Elaboration_Code_All.\n\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n\tHandle setting of No_Elab_Code in unit information. Handle\n\tNo_Elaboration_Code_All.\n\t* snames.ads-tmpl (Name_No_Elaboration_Code): New name for\n\tpragma processing.\n\t(Name_No_Elaboration_Code_All): New name for pragma processing.\n\n2014-07-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_aggr.adb (Aggr_Assignment_OK_For_Backend): Reject array\n\ttypes with a null range and use the Esize of the component\n\tinstead of its RM_Size to identify appropriate values.\n\n2014-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* freeze.adb Add with and use clause for Aspects.\n\t(Freeze_Expression): Emit an error when a volatile constant lacks\n\tBoolean aspect Import.\n\t(Has_Boolean_Aspect_Import): New routine.\n\nFrom-SVN: r213347", "tree": {"sha": "665c72f50c2ecaffd57b68f62703febe25766cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/665c72f50c2ecaffd57b68f62703febe25766cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/comments", "author": null, "committer": null, "parents": [{"sha": "f3296dd398cbfd8b126d3f8bf49ea47691b69f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3296dd398cbfd8b126d3f8bf49ea47691b69f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3296dd398cbfd8b126d3f8bf49ea47691b69f2c"}], "stats": {"total": 275, "additions": 260, "deletions": 15}, "files": [{"sha": "0da286d62bbb14c0dec02774ca3a36779c09af63", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -1,3 +1,39 @@\n+2014-07-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Minor spelling error fix.\n+\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document No_Elaboration_Code_All restriction.\n+\t* lib-writ.adb, lib-load.adb: Initialize No_Elab_Code field in unit\n+\tinformation.\n+\t* lib.ads, lib.adb (No_Elab_Code): New field in unit information.\n+\t* restrict.adb (Process_Restriction_Synonyms): Add handling\n+\tof No_Elaboration_Code_All.\n+\t* restrict.ads (Process_Restriction_Synonyms): Now handles\n+\tNo_Elaboration_Code_All.\n+\t* sem_ch10.adb (Analyze_Context): Enforce transitive with for\n+\tNo_Elaboration_Code_All.\n+\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n+\tHandle setting of No_Elab_Code in unit information. Handle\n+\tNo_Elaboration_Code_All.\n+\t* snames.ads-tmpl (Name_No_Elaboration_Code): New name for\n+\tpragma processing.\n+\t(Name_No_Elaboration_Code_All): New name for pragma processing.\n+\n+2014-07-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_aggr.adb (Aggr_Assignment_OK_For_Backend): Reject array\n+\ttypes with a null range and use the Esize of the component\n+\tinstead of its RM_Size to identify appropriate values.\n+\n+2014-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb Add with and use clause for Aspects.\n+\t(Freeze_Expression): Emit an error when a volatile constant lacks\n+\tBoolean aspect Import.\n+\t(Has_Boolean_Aspect_Import): New routine.\n+\n 2014-07-31  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_util.adb: Minor reformatting."}, {"sha": "4638537a010c787f806ca5f0cc6157af4a51fb75", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -4043,9 +4043,10 @@ package body Exp_Aggr is\n \n       --    3. The array type has no atomic components\n \n-      --    4. The component type is discrete\n+      --    4. The array type has no null ranges (the purpose of this is to\n+      --       avoid a bogus warning for an out-of-range value).\n \n-      --    5. The component size is a multiple of Storage_Unit\n+      --    5. The component type is discrete\n \n       --    6. The component size is Storage_Unit or the value is of the form\n       --       M * (1 + A**1 + A**2 + .. A**(K-1)) where A = 2**(Storage_Unit)\n@@ -4057,7 +4058,10 @@ package body Exp_Aggr is\n \n       function Aggr_Assignment_OK_For_Backend (N : Node_Id) return Boolean is\n          Ctyp      : Entity_Id;\n+         Index     : Entity_Id;\n          Expr      : Node_Id := N;\n+         Low       : Node_Id;\n+         High      : Node_Id;\n          Remainder : Uint;\n          Value     : Uint;\n          Nunits    : Nat;\n@@ -4081,6 +4085,17 @@ package body Exp_Aggr is\n                return False;\n             end if;\n \n+            Index := First_Index (Ctyp);\n+            while Present (Index) loop\n+               Get_Index_Bounds (Index, Low, High);\n+\n+               if Is_Null_Range (Low, High) then\n+                  return False;\n+               end if;\n+\n+               Next_Index (Index);\n+            end loop;\n+\n             Expr := Expression (First (Component_Associations (Expr)));\n \n             for J in 1 .. Number_Dimensions (Ctyp) - 1 loop\n@@ -4100,17 +4115,18 @@ package body Exp_Aggr is\n             end if;\n          end loop;\n \n-         if not Is_Discrete_Type (Ctyp)\n-           or else RM_Size (Ctyp) mod System_Storage_Unit /= 0\n-         then\n+         if not Is_Discrete_Type (Ctyp) then\n             return False;\n          end if;\n \n          --  The expression needs to be analyzed if True is returned\n \n          Analyze_And_Resolve (Expr, Ctyp);\n \n-         Nunits := UI_To_Int (RM_Size (Ctyp) / System_Storage_Unit);\n+         --  The back end uses the Esize as the precision of the type\n+\n+         Nunits := UI_To_Int (Esize (Ctyp)) / System_Storage_Unit;\n+\n          if Nunits = 1 then\n             return True;\n          end if;\n@@ -4125,7 +4141,7 @@ package body Exp_Aggr is\n             Value := Value - Expr_Value (Type_Low_Bound (Ctyp));\n          end if;\n \n-         --  0 and -1 immediately satisfy the last check\n+         --  Values 0 and -1 immediately satisfy the last check\n \n          if Value = Uint_0 or else Value = Uint_Minus_1 then\n             return True;"}, {"sha": "4d502f17629a968caf4799b78e621cf9d66dce72", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n@@ -1849,6 +1850,10 @@ package body Freeze is\n       --  Freeze record type, including freezing component types, and freezing\n       --  primitive operations if this is a tagged type.\n \n+      function Has_Boolean_Aspect_Import (E : Entity_Id) return Boolean;\n+      --  Determine whether an arbitrary entity is subject to Boolean aspect\n+      --  Import and its value is specified as True.\n+\n       procedure Wrap_Imported_Subprogram (E : Entity_Id);\n       --  If E is an entity for an imported subprogram with pre/post-conditions\n       --  then this procedure will create a wrapper to ensure that proper run-\n@@ -3548,6 +3553,39 @@ package body Freeze is\n          end Check_Variant_Part;\n       end Freeze_Record_Type;\n \n+      -------------------------------\n+      -- Has_Boolean_Aspect_Import --\n+      -------------------------------\n+\n+      function Has_Boolean_Aspect_Import (E : Entity_Id) return Boolean is\n+         Decl : constant Node_Id := Declaration_Node (E);\n+         Asp  : Node_Id;\n+         Expr : Node_Id;\n+\n+      begin\n+         if Has_Aspects (Decl) then\n+            Asp := First (Aspect_Specifications (Decl));\n+            while Present (Asp) loop\n+               Expr := Expression (Asp);\n+\n+               --  The value of aspect Import is True when the expression is\n+               --  either missing or it is explicitly set to True.\n+\n+               if Get_Aspect_Id (Asp) = Aspect_Import\n+                 and then (No (Expr)\n+                            or else (Compile_Time_Known_Value (Expr)\n+                                      and then Is_True (Expr_Value (Expr))))\n+               then\n+                  return True;\n+               end if;\n+\n+               Next (Asp);\n+            end loop;\n+         end if;\n+\n+         return False;\n+      end Has_Boolean_Aspect_Import;\n+\n       ------------------------------\n       -- Wrap_Imported_Subprogram --\n       ------------------------------\n@@ -4454,6 +4492,7 @@ package body Freeze is\n             if Ekind (E) = E_Constant\n               and then (Has_Volatile_Components (E) or else Is_Volatile (E))\n               and then not Is_Imported (E)\n+              and then not Has_Boolean_Aspect_Import (E)\n             then\n                --  Make sure we actually have a pragma, and have not merely\n                --  inherited the indication from elsewhere (e.g. an address"}, {"sha": "d936cdb1d6b65ed928d89b989a2f30c055009530", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -490,6 +490,7 @@ Partition-Wide Restrictions\n Program Unit Level Restrictions\n \n * No_Elaboration_Code::\n+* No_Elaboration_Code_All::\n * No_Entry_Queue::\n * No_Implementation_Aspect_Specifications::\n * No_Implementation_Attributes::\n@@ -10964,6 +10965,7 @@ other compilation units in the partition.\n \n @menu\n * No_Elaboration_Code::\n+* No_Elaboration_Code_All::\n * No_Entry_Queue::\n * No_Implementation_Aspect_Specifications::\n * No_Implementation_Attributes::\n@@ -11024,6 +11026,22 @@ Note that this the implementation of this restriction requires full\n code generation. If it is used in conjunction with \"semantics only\"\n checking, then some cases of violations may be missed.\n \n+@node No_Elaboration_Code_All\n+@unnumberedsubsec No_Elaboration_Code_All\n+@findex No_Elaboration_Code_All\n+\n+This restriction is identical in semantic effects to\n+@code{No_Elaboration_Code}, and\n+for most purposes is treated simply as a synonym of @code{No_Elaboration_Code}.\n+\n+The difference is that if @code{No_Elaboration_Code_All} is used then it\n+must appear within a package or subprogram spec. As is the case for\n+@code{No_Elaboration_Code}, it also applies to the corresponding body if\n+there is one. In addition, any with'ed unit must itself contain a\n+@code{No_Elaboration_Code_All} restriction,\n+thus allowing transitive enforcement of the requirement for no elaboration\n+code to be generated.\n+\n @node No_Entry_Queue\n @unnumberedsubsec No_Entry_Queue\n @findex No_Entry_Queue"}, {"sha": "f1ef626ec6d5be05b30818b594c5014a9087ea0f", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -221,6 +221,7 @@ package body Lib.Load is\n         Main_Priority     => Default_Main_Priority,\n         Main_CPU          => Default_Main_CPU,\n         Munit_Index       => 0,\n+        No_Elab_Code      => None,\n         Serial_Number     => 0,\n         Source_Index      => No_Source_File,\n         Unit_File_Name    => Get_File_Name (Spec_Name, Subunit => False),\n@@ -327,6 +328,7 @@ package body Lib.Load is\n            Main_Priority     => Default_Main_Priority,\n            Main_CPU          => Default_Main_CPU,\n            Munit_Index       => 0,\n+           No_Elab_Code      => None,\n            Serial_Number     => 0,\n            Source_Index      => Main_Source_File,\n            Unit_File_Name    => Fname,\n@@ -690,6 +692,7 @@ package body Lib.Load is\n               Main_Priority     => Default_Main_Priority,\n               Main_CPU          => Default_Main_CPU,\n               Munit_Index       => 0,\n+              No_Elab_Code      => None,\n               Serial_Number     => 0,\n               Source_Index      => Src_Ind,\n               Unit_File_Name    => Fname,"}, {"sha": "61d48e22fc4a0d917ea04ec6e6c5914024ae8d35", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -90,6 +90,7 @@ package body Lib.Writ is\n          Main_Priority     => -1,\n          Main_CPU          => -1,\n          Munit_Index       => 0,\n+         No_Elab_Code      => None,\n          Serial_Number     => 0,\n          Version           => 0,\n          Error_Location    => No_Location,\n@@ -147,6 +148,7 @@ package body Lib.Writ is\n         Main_Priority     => -1,\n         Main_CPU          => -1,\n         Munit_Index       => 0,\n+        No_Elab_Code      => None,\n         Serial_Number     => 0,\n         Version           => 0,\n         Error_Location    => No_Location,"}, {"sha": "b2f9c36e40e02313861ae6e8ba763f1506fb18c0", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -146,6 +146,11 @@ package body Lib is\n       return Units.Table (U).Munit_Index;\n    end Munit_Index;\n \n+   function No_Elab_Code (U : Unit_Number_Type) return No_Elab_Code_T is\n+   begin\n+      return Units.Table (U).No_Elab_Code;\n+   end No_Elab_Code;\n+\n    function OA_Setting (U : Unit_Number_Type) return Character is\n    begin\n       return Units.Table (U).OA_Setting;\n@@ -226,6 +231,11 @@ package body Lib is\n       Units.Table (U).Main_Priority := P;\n    end Set_Main_Priority;\n \n+   procedure Set_No_Elab_Code (U : Unit_Number_Type; N : No_Elab_Code_T) is\n+   begin\n+      Units.Table (U).No_Elab_Code := N;\n+   end Set_No_Elab_Code;\n+\n    procedure Set_OA_Setting (U : Unit_Number_Type; C : Character) is\n    begin\n       Units.Table (U).OA_Setting := C;"}, {"sha": "c5d3f4fefbaacda8894b277a4544d5c954515b7f", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -347,6 +347,35 @@ package Lib is\n    --      The index of the unit within the file for multiple unit per file\n    --      mode. Set to zero in normal single unit per file mode.\n \n+   --    No_Elab_Code\n+   --      A value set when a pragma Restriction or Restriction_Warning for\n+   --      No_Elaboration_Code_All or No_Elaboration_Code is encountered. This\n+   --      is used to implement the transitive WITH rules (and for no other\n+   --      purpose). The possible values are:\n+\n+   type No_Elab_Code_T is\n+      (None,\n+       --  The unit contains no Elaboration_Code[_All} restrictions\n+\n+       No_Elab_Code,\n+       --  The unit contains a pragma Restrictions or Restriction_Warnings\n+       --  for No_Elaboration_Code, but does not contain either pragma for\n+       --  No_Elaboration_Code_All. Note: this setting is not currently used,\n+       --  but we maintain it for possible future use (e.g. if we decide after\n+       --  all that No_Elaboration_Code is good enough to satisfy the rule for\n+       --  transitive with's for No_Elaborate_Code_All.\n+\n+       No_Elab_Code_All_Warn,\n+       --  The unit contains a pragma Restrictions_Warning for restriction\n+       --  No_Elaboration_Code_All (but does not contain a pragma Restrictions\n+       --  for this restriction).\n+\n+       No_Elab_Code_All);\n+       --  The unit contains a pragma Restrictions (No_Elaboration_Code_All)\n+\n+   pragma Ordered (No_Elab_Code_T);\n+   --  This set of values is ordered, we record the highest value seen\n+\n    --    OA_Setting\n    --      This is a character field containing L if Optimize_Alignment mode\n    --      was set locally, and O/T/S for Off/Time/Space default if not.\n@@ -410,6 +439,7 @@ package Lib is\n    function Main_CPU          (U : Unit_Number_Type) return Int;\n    function Main_Priority     (U : Unit_Number_Type) return Int;\n    function Munit_Index       (U : Unit_Number_Type) return Nat;\n+   function No_Elab_Code      (U : Unit_Number_Type) return No_Elab_Code_T;\n    function OA_Setting        (U : Unit_Number_Type) return Character;\n    function Source_Index      (U : Unit_Number_Type) return Source_File_Index;\n    function Unit_File_Name    (U : Unit_Number_Type) return File_Name_Type;\n@@ -426,6 +456,7 @@ package Lib is\n    procedure Set_Ident_String      (U : Unit_Number_Type; N : Node_Id);\n    procedure Set_Loading           (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Main_CPU          (U : Unit_Number_Type; P : Int);\n+   procedure Set_No_Elab_Code      (U : Unit_Number_Type; N : No_Elab_Code_T);\n    procedure Set_Main_Priority     (U : Unit_Number_Type; P : Int);\n    procedure Set_OA_Setting        (U : Unit_Number_Type; C : Character);\n    procedure Set_Unit_Name         (U : Unit_Number_Type; N : Unit_Name_Type);\n@@ -726,6 +757,7 @@ private\n    pragma Inline (Main_CPU);\n    pragma Inline (Main_Priority);\n    pragma Inline (Munit_Index);\n+   pragma Inline (No_Elab_Code);\n    pragma Inline (OA_Setting);\n    pragma Inline (Set_Cunit);\n    pragma Inline (Set_Cunit_Entity);\n@@ -735,6 +767,7 @@ private\n    pragma Inline (Set_Loading);\n    pragma Inline (Set_Main_CPU);\n    pragma Inline (Set_Main_Priority);\n+   pragma Inline (Set_No_Elab_Code);\n    pragma Inline (Set_OA_Setting);\n    pragma Inline (Set_Unit_Name);\n    pragma Inline (Source_Index);\n@@ -760,6 +793,7 @@ private\n       Generate_Code     : Boolean;\n       Has_RACW          : Boolean;\n       Dynamic_Elab      : Boolean;\n+      No_Elab_Code      : No_Elab_Code_T;\n       Filler            : Boolean;\n       Loading           : Boolean;\n       OA_Setting        : Character;\n@@ -789,7 +823,8 @@ private\n       Generate_Code     at 57 range 0 ..  7;\n       Has_RACW          at 58 range 0 ..  7;\n       Dynamic_Elab      at 59 range 0 ..  7;\n-      Filler            at 60 range 0 ..  15;\n+      No_Elab_Code      at 60 range 0 ..  7;\n+      Filler            at 61 range 0 ..  7;\n       OA_Setting        at 62 range 0 ..  7;\n       Loading           at 63 range 0 ..  7;\n       SPARK_Mode_Pragma at 64 range 0 .. 31;"}, {"sha": "54a43e0686ac5f69fcd572286ee6df96684ec3b1", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -2728,7 +2728,7 @@ be ignored.\n Example:\n \n @smallexample @c projectfile\n-for ^Switches^Switches^ (other) use (\"-v\", \"-k\", \"-j8\");\n+for ^Switches^Switches^ (others) use (\"-v\", \"-k\", \"-j8\");\n @end smallexample\n \n These switches are only read from the main aggregate project (the"}, {"sha": "237ee4214094328d90de6218f44ef0e349b7a985", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -883,6 +883,11 @@ package body Restrict is\n          when Name_No_Task_Attributes =>\n             New_Name := Name_No_Task_Attributes_Package;\n \n+         --  No_Elaboration_Code_All is special, no warning needed\n+\n+         when Name_No_Elaboration_Code_All =>\n+            return Name_No_Elaboration_Code;\n+\n          --  SPARK is special in that we unconditionally warn\n \n          when Name_SPARK =>"}, {"sha": "4f414aa0df86ba3c6e65903d64fde1361cc0825b", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -336,6 +336,7 @@ package Restrict is\n    --  Id is a node whose Chars field contains the name of a restriction.\n    --  If it is one of synonyms that we allow for historical purposes (for\n    --  list see System.Rident), then the proper official name is returned.\n+   --  In addition, No_Elaboration_Code_All returns Name_No_Elaboration_Code.\n    --  Otherwise the Chars field of the argument is returned unchanged.\n \n    function Restriction_Active (R : All_Restrictions) return Boolean;"}, {"sha": "c0f874ea85715179f29e8038dc0198febc23678d", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -1333,19 +1333,48 @@ package body Sem_Ch10 is\n            and then not Limited_Present (Item)\n          then\n             --  Skip analyzing with clause if no unit, nothing to do (this\n-            --  happens for a with that references a non-existent unit). Skip\n-            --  as well if this is a with_clause for the main unit, which\n-            --  happens if a subunit has a useless with_clause on its parent.\n+            --  happens for a with that references a non-existent unit).\n \n             if Present (Library_Unit (Item)) then\n+\n+               --  Skip analyzing with clause if this is a with_clause for\n+               --  the main unit, which happens if a subunit has a useless\n+               --  with_clause on its parent.\n+\n                if Library_Unit (Item) /= Cunit (Current_Sem_Unit) then\n                   Analyze (Item);\n \n+                  --  This is the point at which we check for the case of an\n+                  --  improper WITH from a unit with No_Elaboration_Code_All.\n+\n+                  if No_Elab_Code (Current_Sem_Unit) >=\n+                       No_Elab_Code_All_Warn\n+                  then\n+                     if No_Elab_Code\n+                          (Get_Source_Unit (Library_Unit (Item))) /=\n+                             No_Elab_Code_All\n+                     then\n+                        Error_Msg_Warn :=\n+                          No_Elab_Code (Current_Sem_Unit) =\n+                            No_Elab_Code_All_Warn;\n+                        Error_Msg_N\n+                          (\"<unit with No_Elaboration_Code_All has bad WITH\",\n+                           Item);\n+                        Error_Msg_NE\n+                          (\"\\<unit& does not have No_Elaboration_Code_All\",\n+                           Item, Entity (Name (Item)));\n+                     end if;\n+                  end if;\n+\n+               --  Here for the case of a useless with for the main unit\n+\n                else\n                   Set_Entity (Name (Item), Cunit_Entity (Current_Sem_Unit));\n                end if;\n             end if;\n \n+            --  Do version update (skipped for implicit with)\n+\n             if not Implicit_With (Item) then\n                Version_Update (N, Library_Unit (Item));\n             end if;"}, {"sha": "1e46ac775db485f6c8d8dc06a5b7b29d43ffd745", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -5479,7 +5479,7 @@ package body Sem_Prag is\n          --  Test-case should only appear in package spec unit\n \n          if Get_Source_Unit (N) = No_Unit\n-           or else not Nkind_In (Sinfo.Unit (Cunit (Get_Source_Unit (N))),\n+           or else not Nkind_In (Sinfo.Unit (Cunit (Current_Sem_Unit)),\n                                  N_Package_Declaration,\n                                  N_Generic_Package_Declaration)\n          then\n@@ -5857,8 +5857,8 @@ package body Sem_Prag is\n          if Nkind (P) = N_Compilation_Unit then\n             Unit_Kind := Nkind (Unit (P));\n \n-            if Unit_Kind = N_Subprogram_Declaration\n-              or else Unit_Kind = N_Package_Declaration\n+            if Nkind_In (Unit_Kind, N_Subprogram_Declaration,\n+                                    N_Package_Declaration)\n               or else Unit_Kind in N_Generic_Declaration\n             then\n                Unit_Name := Defining_Entity (Unit (P));\n@@ -8898,6 +8898,55 @@ package body Sem_Prag is\n             Id := Chars (Arg);\n             Expr := Get_Pragma_Arg (Arg);\n \n+            --  Special handling for No_Elaboration_Code\n+\n+            if Nkind (Expr) = N_Identifier\n+              and then Chars (Expr) = Name_No_Elaboration_Code\n+            then\n+               if No_Elab_Code (Current_Sem_Unit) < No_Elab_Code then\n+                  Set_No_Elab_Code (Current_Sem_Unit, No_Elab_Code);\n+               end if;\n+            end if;\n+\n+            --  Special handling for No_Elaboration_Code_All\n+\n+            if Nkind (Expr) = N_Identifier\n+              and then Chars (Expr) = Name_No_Elaboration_Code_All\n+            then\n+               --  Must appear within a spec\n+\n+               if not Nkind_In (Unit (Cunit (Current_Sem_Unit)),\n+                                N_Package_Declaration,\n+                                N_Subprogram_Declaration)\n+               then\n+                  Error_Msg_Name_1 := Id;\n+                  Error_Msg_N\n+                    (\"restriction% can appear only in package or \"\n+                     & \"subprogram spec\", Arg);\n+               end if;\n+\n+               --  Set special value in unit table\n+\n+               declare\n+                  New_Val : No_Elab_Code_T;\n+\n+               begin\n+                  if Warn then\n+                     New_Val := No_Elab_Code_All_Warn;\n+                  else\n+                     New_Val := No_Elab_Code_All;\n+                  end if;\n+\n+                  if No_Elab_Code (Current_Sem_Unit) < New_Val then\n+                     Set_No_Elab_Code (Current_Sem_Unit, New_Val);\n+                  end if;\n+               end;\n+\n+               --  Note that in the code below, Process_Restriction_Synonym\n+               --  will treat No_Elaboration_Code_All like No_Elaboration_Code.\n+\n+            end if;\n+\n             --  Case of no restriction identifier present\n \n             if Id = No_Name then"}, {"sha": "c8e555a4225e3849654481128e37e5c6ee859b24", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=e8cddc3b5a9c50a9c7bd4b58b97f6384bc1aa807", "patch": "@@ -752,6 +752,8 @@ package Snames is\n    Name_No_Dependence                  : constant Name_Id := N + $;\n    Name_No_Dynamic_Attachment          : constant Name_Id := N + $;\n    Name_No_Dynamic_Interrupts          : constant Name_Id := N + $;\n+   Name_No_Elaboration_Code            : constant Name_Id := N + $;\n+   Name_No_Elaboration_Code_All        : constant Name_Id := N + $;\n    Name_No_Implementation_Extensions   : constant Name_Id := N + $;\n    Name_No_Obsolescent_Features        : constant Name_Id := N + $;\n    Name_No_Requeue                     : constant Name_Id := N + $;"}]}