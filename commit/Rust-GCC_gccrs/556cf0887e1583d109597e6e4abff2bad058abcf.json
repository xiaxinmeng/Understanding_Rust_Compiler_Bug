{"sha": "556cf0887e1583d109597e6e4abff2bad058abcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2Y2YwODg3ZTE1ODNkMTA5NTk3ZTZlNGFiZmYyYmFkMDU4YWJjZg==", "commit": {"author": {"name": "Prakhar Bahuguna", "email": "prakhar.bahuguna@arm.com", "date": "2017-05-04T10:16:04Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-05-04T10:16:04Z"}, "message": "[ARM] Rename FPSCR builtins to correct names\n\nThe GCC documentation in section 6.60.8 ARM Floating Point Status and\nControl Intrinsics states that the FPSCR register can be read and\nwritten to using the intrinsics __builtin_arm_get_fpscr and\n__builtin_arm_set_fpscr. However, these are misnamed within GCC itself\nand these intrinsic names are not recognised.\n\nThis patch corrects the intrinsic names to match the documentation, and\nadds tests to verify these intrinsics generate the correct\ninstructions.\n\n2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n\n    gcc/\n    * gcc/config/arm/arm-builtins.c (arm_init_builtins): Rename\n    __builtin_arm_ldfscr to __builtin_arm_get_fpscr, and rename\n    __builtin_arm_stfscr to __builtin_arm_set_fpscr.\n\n    gcc/testsuite/\n    * gcc.target/arm/fpscr.c: New file.\n\nFrom-SVN: r247584", "tree": {"sha": "b61d68a04e0b1b45fbd9424585b909a249ddfda5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b61d68a04e0b1b45fbd9424585b909a249ddfda5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/556cf0887e1583d109597e6e4abff2bad058abcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556cf0887e1583d109597e6e4abff2bad058abcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/556cf0887e1583d109597e6e4abff2bad058abcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556cf0887e1583d109597e6e4abff2bad058abcf/comments", "author": null, "committer": null, "parents": [{"sha": "cd09e219ce388a62b3f51e49261821e0fbcd43fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd09e219ce388a62b3f51e49261821e0fbcd43fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd09e219ce388a62b3f51e49261821e0fbcd43fe"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "c98e5affee5c85a69624a325a144d9aebdc96e34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=556cf0887e1583d109597e6e4abff2bad058abcf", "patch": "@@ -1,3 +1,9 @@\n+2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n+\n+\t* gcc/config/arm/arm-builtins.c (arm_init_builtins): Rename\n+\t__builtin_arm_ldfscr to __builtin_arm_get_fpscr, and rename\n+\t__builtin_arm_stfscr to __builtin_arm_set_fpscr.\n+\n 2017-05-04  Martin Liska  <mliska@suse.cz>\n \n \t* tree-vrp.c (simplify_cond_using_ranges_2): Remove unused"}, {"sha": "deebb59f6a6fcdae3378f4e3fb021e008a4354b0", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=556cf0887e1583d109597e6e4abff2bad058abcf", "patch": "@@ -1893,10 +1893,10 @@ arm_init_builtins (void)\n \t= build_function_type_list (unsigned_type_node, NULL);\n \n       arm_builtin_decls[ARM_BUILTIN_GET_FPSCR]\n-\t= add_builtin_function (\"__builtin_arm_ldfscr\", ftype_get_fpscr,\n+\t= add_builtin_function (\"__builtin_arm_get_fpscr\", ftype_get_fpscr,\n \t\t\t\tARM_BUILTIN_GET_FPSCR, BUILT_IN_MD, NULL, NULL_TREE);\n       arm_builtin_decls[ARM_BUILTIN_SET_FPSCR]\n-\t= add_builtin_function (\"__builtin_arm_stfscr\", ftype_set_fpscr,\n+\t= add_builtin_function (\"__builtin_arm_set_fpscr\", ftype_set_fpscr,\n \t\t\t\tARM_BUILTIN_SET_FPSCR, BUILT_IN_MD, NULL, NULL_TREE);\n     }\n "}, {"sha": "bdf64ce0d14b6f1ebc2ee8cd9c9f2b1c9c63208c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=556cf0887e1583d109597e6e4abff2bad058abcf", "patch": "@@ -1,3 +1,7 @@\n+2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n+\n+\t* gcc.target/arm/fpscr.c: New file.\n+\n 2017-05-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.c-torture/execute/pr78622.c: Require c99_runtime effective"}, {"sha": "7b4d71d72d8964f6da0d0604bf59aeb4a895df43", "filename": "gcc/testsuite/gcc.target/arm/fpscr.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffpscr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556cf0887e1583d109597e6e4abff2bad058abcf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffpscr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffpscr.c?ref=556cf0887e1583d109597e6e4abff2bad058abcf", "patch": "@@ -0,0 +1,16 @@\n+/* Test the fpscr builtins.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp_ok } */\n+/* { dg-skip-if \"need fp instructions\" { *-*-* } { \"-mfloat-abi=soft\" } { \"\" } } */\n+/* { dg-add-options arm_fp } */\n+\n+void\n+test_fpscr ()\n+{\n+  volatile unsigned int status = __builtin_arm_get_fpscr ();\n+  __builtin_arm_set_fpscr (status);\n+}\n+\n+/* { dg-final { scan-assembler \"mrc\\tp10, 7, r\\[0-9\\]+, cr1, cr0, 0\" } } */\n+/* { dg-final { scan-assembler \"mcr\\tp10, 7, r\\[0-9\\]+, cr1, cr0, 0\" } } */"}]}