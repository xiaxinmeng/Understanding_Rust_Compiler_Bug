{"sha": "46bd784bfb29e94841b7d2702277d77445a7a47f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZiZDc4NGJmYjI5ZTk0ODQxYjdkMjcwMjI3N2Q3NzQ0NWE3YTQ3Zg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-12-03T15:40:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-12-03T15:40:08Z"}, "message": "[PR tree-optimization/68599] Avoid over-zealous optimization with -funsafe-loop-optimizations\n\n\tPR tree-optimization/68599\n\t* loop-init.c (rtl_loop_init): Set LOOPS_HAVE_RECORDED_EXITS\n\tin call to loop_optimizer_init.\n\t* loop-iv.c (get_simple_loop_desc): Only allow unsafe loop\n\toptimization to drop the assumptions/infinite notations if\n\tthe loop has a single exit.\n\nFrom-SVN: r231231", "tree": {"sha": "9f82d6adb1a1a1767cf5c5002c5f241448ca67b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f82d6adb1a1a1767cf5c5002c5f241448ca67b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46bd784bfb29e94841b7d2702277d77445a7a47f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46bd784bfb29e94841b7d2702277d77445a7a47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46bd784bfb29e94841b7d2702277d77445a7a47f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46bd784bfb29e94841b7d2702277d77445a7a47f/comments", "author": null, "committer": null, "parents": [{"sha": "a54a5997d9d4a981893984a6cc406f4865be7313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54a5997d9d4a981893984a6cc406f4865be7313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a54a5997d9d4a981893984a6cc406f4865be7313"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "5fe3c1c0da64450a5319ad1ae82cf4a35a22ad16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46bd784bfb29e94841b7d2702277d77445a7a47f", "patch": "@@ -1,3 +1,12 @@\n+2015-12-03  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/68599\n+\t* loop-init.c (rtl_loop_init): Set LOOPS_HAVE_RECORDED_EXITS\n+\tin call to loop_optimizer_init.\n+\t* loop-iv.c (get_simple_loop_desc): Only allow unsafe loop\n+\toptimization to drop the assumptions/infinite notations if\n+\tthe loop has a single exit.\n+\n 2015-12-03  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/md.texi (vec_load_lanes@var{m}@var{n}): Document that"}, {"sha": "120316d65625c691ec846fc9655cb19a82ef3cb6", "filename": "gcc/loop-init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=46bd784bfb29e94841b7d2702277d77445a7a47f", "patch": "@@ -395,7 +395,7 @@ rtl_loop_init (void)\n       dump_flow_info (dump_file, dump_flags);\n     }\n \n-  loop_optimizer_init (LOOPS_NORMAL);\n+  loop_optimizer_init (LOOPS_NORMAL | LOOPS_HAVE_RECORDED_EXITS);\n   return 0;\n }\n "}, {"sha": "dfa3ca382043bc7c089399cc40ab6cc052a1800e", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46bd784bfb29e94841b7d2702277d77445a7a47f/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=46bd784bfb29e94841b7d2702277d77445a7a47f", "patch": "@@ -3054,7 +3054,7 @@ get_simple_loop_desc (struct loop *loop)\n \t    }\n \t}\n \n-      if (flag_unsafe_loop_optimizations)\n+      if (flag_unsafe_loop_optimizations && single_exit (loop))\n \t{\n \t  desc->assumptions = NULL_RTX;\n \t  desc->infinite = NULL_RTX;"}]}