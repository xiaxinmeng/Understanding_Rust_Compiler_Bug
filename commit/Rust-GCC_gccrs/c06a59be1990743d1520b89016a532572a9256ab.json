{"sha": "c06a59be1990743d1520b89016a532572a9256ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA2YTU5YmUxOTkwNzQzZDE1MjBiODkwMTZhNTMyNTcyYTkyNTZhYg==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2018-05-24T13:05:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:05:32Z"}, "message": "[Ada] Crash on return of raise expression\n\nThis patch fixes an issue whereby the compiler regarded assignments to limited\nthat consisted of raise expressions to be a compile-time error during\nexpansion.\n\n2018-05-24  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Ignore raising an error in\n\texpansion for limited tagged types when the node to be expanded is a\n\traise expression due to it not representing a valid object.\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Add exception to error\n\tmessage regarding assignments to limited types to ignore genereated\n\tcode.\n\ngcc/testsuite/\n\n\t* gnat.dg/raise_expr.adb: New testcase.\n\nFrom-SVN: r260654", "tree": {"sha": "9737fecf2ea356b3edff25e5d218e47d3f7f82d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9737fecf2ea356b3edff25e5d218e47d3f7f82d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c06a59be1990743d1520b89016a532572a9256ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c06a59be1990743d1520b89016a532572a9256ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c06a59be1990743d1520b89016a532572a9256ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c06a59be1990743d1520b89016a532572a9256ab/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa3717c173192eb04440734a3ee110982f31e592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3717c173192eb04440734a3ee110982f31e592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa3717c173192eb04440734a3ee110982f31e592"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "e0ea4595fa3d7ac4eae5e8da1298d48de2b95efd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c06a59be1990743d1520b89016a532572a9256ab", "patch": "@@ -1,3 +1,12 @@\n+2018-05-24  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Ignore raising an error in\n+\texpansion for limited tagged types when the node to be expanded is a\n+\traise expression due to it not representing a valid object.\n+\t* exp_ch5.adb (Expand_N_Assignment_Statement): Add exception to error\n+\tmessage regarding assignments to limited types to ignore genereated\n+\tcode.\n+\n 2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_util.adb (New_Class_Wide_Subtype): Capture and restore relevant"}, {"sha": "4c3a7b768bc87a90218c7372e378dd3ecdb281db", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c06a59be1990743d1520b89016a532572a9256ab", "patch": "@@ -6952,9 +6952,11 @@ package body Exp_Ch3 is\n \n                --  If we cannot convert the expression into a renaming we must\n                --  consider it an internal error because the backend does not\n-               --  have support to handle it.\n+               --  have support to handle it. Also, when a raise expression is\n+               --  encountered we ignore it since it doesn't return a value and\n+               --  thus cannot trigger a copy.\n \n-               else\n+               elsif Nkind (Original_Node (Expr_Q)) /= N_Raise_Expression then\n                   pragma Assert (False);\n                   raise Program_Error;\n                end if;"}, {"sha": "0989370d5e8a5bfda56256e5233afe56a6af03eb", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c06a59be1990743d1520b89016a532572a9256ab", "patch": "@@ -2467,12 +2467,19 @@ package body Exp_Ch5 is\n                   --  extension of a limited interface, and the actual is\n                   --  limited. This is an error according to AI05-0087, but\n                   --  is not caught at the point of instantiation in earlier\n-                  --  versions.\n+                  --  versions. We also must verify that the limited type does\n+                  --  not come from source as corner cases may exist where\n+                  --  an assignment was not intended like the pathological case\n+                  --  of a raise expression within a return statement.\n \n                   --  This is wrong, error messages cannot be issued during\n                   --  expansion, since they would be missed in -gnatc mode ???\n \n-                  Error_Msg_N (\"assignment not available on limited type\", N);\n+                  if Comes_From_Source (N) then\n+                     Error_Msg_N\n+                       (\"assignment not available on limited type\", N);\n+                  end if;\n+\n                   return;\n                end if;\n "}, {"sha": "ad047a47412410f1648a5e7049e2000eef00f7be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c06a59be1990743d1520b89016a532572a9256ab", "patch": "@@ -1,3 +1,7 @@\n+2018-05-24  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/raise_expr.adb: New testcase.\n+\n 2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/formal_containers.adb: New testcase."}, {"sha": "cdca9064425ad4d29ea737e23f21ab70e18705d1", "filename": "gcc/testsuite/gnat.dg/raise_expr.adb", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_expr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c06a59be1990743d1520b89016a532572a9256ab/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_expr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_expr.adb?ref=c06a59be1990743d1520b89016a532572a9256ab", "patch": "@@ -0,0 +1,27 @@\n+--  { dg-do compile }\n+\n+procedure Raise_Expr is\n+\n+   E : exception;\n+\n+   type T is tagged limited null record;\n+   type TC is new T with null record;\n+\n+   function F0 return Boolean is\n+   begin\n+       return raise E;\n+   end;\n+\n+   function F return T'Class is\n+     TT : T;\n+   begin\n+      return raise E; -- Causes compile-time crash\n+   end F;\n+\n+begin\n+   declare\n+      O : T'class  := F;\n+   begin\n+      null;\n+   end;\n+end Raise_Expr;"}]}