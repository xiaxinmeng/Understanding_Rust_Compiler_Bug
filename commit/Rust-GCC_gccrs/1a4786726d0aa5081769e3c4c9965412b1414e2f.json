{"sha": "1a4786726d0aa5081769e3c4c9965412b1414e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0Nzg2NzI2ZDBhYTUwODE3NjllM2M0Yzk5NjU0MTJiMTQxNGUyZg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-03-16T02:11:41Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-03-16T02:11:41Z"}, "message": "Patch for SB-1 DFA scheduler work.\n\n\t* config/mips/mips.md (type): Split load into load, fpload, fpidxload.\n\tSplit store into store, fpstore, fpidxstore.  Fix all uses.\n\t* config/mips/5400.md (ir_vr54_load, ir_vr54_store, ir_vr54_fstore):\n\tLikewise.\n\t* config/mips/5500.md (ir_vr55_load, i5_vr55_store): Likewise.\n\t* config/mips/7000.md (rm7_ld, rm7_st): Likewise.\n\t* config/mips/9000.md (rm9k_load, rm9k_store): Likewise.\n\t* config/mips/sr71k.md (ir_sr70_load, ir_sr70_store, ir_sr70_fload,\n\tir_sr70_fstore): Likewise.\n\nFrom-SVN: r79522", "tree": {"sha": "3739dcf7580afc63bc3bd7b2169b1ceb21fd48f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3739dcf7580afc63bc3bd7b2169b1ceb21fd48f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a4786726d0aa5081769e3c4c9965412b1414e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4786726d0aa5081769e3c4c9965412b1414e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4786726d0aa5081769e3c4c9965412b1414e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4786726d0aa5081769e3c4c9965412b1414e2f/comments", "author": null, "committer": null, "parents": [{"sha": "0977ab3aa6121253392b15c02679a86615f05e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0977ab3aa6121253392b15c02679a86615f05e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0977ab3aa6121253392b15c02679a86615f05e1b"}], "stats": {"total": 99, "additions": 55, "deletions": 44}, "files": [{"sha": "479dbc6dde69322199812c2619e46a151e2e53c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -1,3 +1,15 @@\n+2004-03-15  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* config/mips/mips.md (type): Split load into load, fpload, fpidxload.\n+\tSplit store into store, fpstore, fpidxstore.  Fix all uses.\n+\t* config/mips/5400.md (ir_vr54_load, ir_vr54_store, ir_vr54_fstore):\n+\tLikewise.\n+\t* config/mips/5500.md (ir_vr55_load, i5_vr55_store): Likewise.\n+\t* config/mips/7000.md (rm7_ld, rm7_st): Likewise.\n+\t* config/mips/9000.md (rm9k_load, rm9k_store): Likewise.\n+\t* config/mips/sr71k.md (ir_sr70_load, ir_sr70_store, ir_sr70_fload,\n+\tir_sr70_fstore): Likewise.\n+\n 2004-03-15  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/14535"}, {"sha": "679be0960304fb9f02c054eddae96b5d9b4df820", "filename": "gcc/config/mips/5400.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F5400.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F5400.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5400.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -26,20 +26,17 @@\n \n (define_insn_reservation \"ir_vr54_load\" 2\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (and (eq_attr \"type\" \"load\")\n-            (eq_attr \"mode\" \"!SF,DF,FPSW\")))\n+       (eq_attr \"type\" \"load,fpload,fpidxload\"))\n   \"vr54_mem\")\n \n (define_insn_reservation \"ir_vr54_store\" 1\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (and (eq_attr \"type\" \"store\")\n-            (eq_attr \"mode\" \"!SF,DF,FPSW\")))\n+       (eq_attr \"type\" \"store\"))\n   \"vr54_mem\")\n \n (define_insn_reservation \"ir_vr54_fstore\" 1\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (and (eq_attr \"type\" \"store\")\n-            (eq_attr \"mode\" \"SF,DF\")))\n+       (eq_attr \"type\" \"fpstore,fpidxstore\"))\n   \"vr54_mem\")\n \n "}, {"sha": "801166512f950805e4a977e3b09f93ca726fdfc8", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -28,12 +28,12 @@\n \n (define_insn_reservation \"ir_vr55_load\" 3\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"load\"))\n+       (eq_attr \"type\" \"load,fpload,fpidxload\"))\n   \"vr55_mem\")\n \n (define_insn_reservation \"ir_vr55_store\" 1\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"store\"))\n+       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n   \"vr55_mem\")\n \n ;; This reservation is for conditional move based on integer"}, {"sha": "86ec1971f88c354747e487d6da0ca05f97b8cf4c", "filename": "gcc/config/mips/7000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -92,11 +92,11 @@\n \t\t\t \"rm7_iaddsub\")\n \n (define_insn_reservation \"rm7_ld\" 2 (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t\t         (eq_attr \"type\" \"load\"))\n+\t\t\t\t         (eq_attr \"type\" \"load,fpload,fpidxload\"))\n \t\t\t \"rm7_imem\")\n \n (define_insn_reservation \"rm7_st\" 1 (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t\t         (eq_attr \"type\" \"store\"))\n+\t\t\t\t         (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n \t\t\t \"rm7_imem\")\n \n (define_insn_reservation \"rm7_idiv_si\" 36 (and (eq_attr \"cpu\" \"r7000\")"}, {"sha": "fed9061fc42a0e80e7c2e831c4558bd4249729c4", "filename": "gcc/config/mips/9000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F9000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2F9000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F9000.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -42,12 +42,12 @@\n \n (define_insn_reservation \"rm9k_load\" 3\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"load\"))\n+       (eq_attr \"type\" \"load,fpload,fpidxload\"))\n   \"rm9k_m\")\n \n (define_insn_reservation \"rm9k_store\" 1\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"store\"))\n+       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n   \"rm9k_m\")\n \n (define_insn_reservation \"rm9k_int\" 1"}, {"sha": "189b59b61cb384d1824f3f6fbb930007a4db24dc", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -93,7 +93,11 @@\n ;; jump\t\tunconditional jump\n ;; call\t\tunconditional call\n ;; load\t\tload instruction(s)\n+;; fpload\tfloating point load\n+;; fpidxload    floating point indexed load\n ;; store\tstore instruction(s)\n+;; fpstore\tfloating point store\n+;; fpidxstore\tfloating point indexed store\n ;; prefetch\tmemory prefetch (register + offset)\n ;; prefetchx\tmemory indexed prefetch (register + register)\n ;; move\t\tdata movement within same register set\n@@ -120,7 +124,7 @@\n ;; multi\tmultiword sequence (or user asm statements)\n ;; nop\t\tno operation\n (define_attr \"type\"\n-  \"unknown,branch,jump,call,load,store,prefetch,prefetchx,move,condmove,xfer,hilo,const,arith,darith,imul,imadd,idiv,icmp,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n+  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,move,condmove,xfer,hilo,const,arith,darith,imul,imadd,idiv,icmp,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")]\n \t(const_string \"unknown\")))\n@@ -182,9 +186,9 @@\n \n \t  (eq_attr \"type\" \"const\")\n \t  (symbol_ref \"mips_const_insns (operands[1]) * 4\")\n-\t  (eq_attr \"type\" \"load\")\n+\t  (eq_attr \"type\" \"load,fpload,fpidxload\")\n \t  (symbol_ref \"mips_fetch_insns (operands[1]) * 4\")\n-\t  (eq_attr \"type\" \"store\")\n+\t  (eq_attr \"type\" \"store,fpstore,fpidxstore\")\n \t  (symbol_ref \"mips_fetch_insns (operands[0]) * 4\")\n \n \t  ;; In the worst case, a call macro will take 8 instructions:\n@@ -219,7 +223,7 @@\n ;; of this one.  HILO means that the next two instructions cannot\n ;; write to HI or LO.\n (define_attr \"hazard\" \"none,delay,hilo\"\n-  (cond [(and (eq_attr \"type\" \"load\")\n+  (cond [(and (eq_attr \"type\" \"load,fpload,fpidxload\")\n \t      (ne (symbol_ref \"ISA_HAS_LOAD_DELAY\") (const_int 0)))\n \t (const_string \"delay\")\n \n@@ -301,16 +305,18 @@\n ;; Make the default case (PROCESSOR_DEFAULT) handle the worst case\n \n (define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"load\")\n+  (and (eq_attr \"type\" \"load,fpload,fpidxload\")\n        (eq_attr \"cpu\" \"!r3000,r3900,r4600,r4650,r4100,r4120,r4300,r5000\"))\n   3 0)\n \n (define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"load\")\n+  (and (eq_attr \"type\" \"load,fpload,fpidxload\")\n        (eq_attr \"cpu\" \"r3000,r3900,r4600,r4650,r4100,r4120,r4300,r5000\"))\n   2 0)\n \n-(define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"store\") 1 0)\n+(define_function_unit \"memory\"   1 0\n+  (eq_attr \"type\" \"store,fpstore,fpidxstore\")\n+  1 0)\n \n (define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"xfer\") 2 0)\n \n@@ -4547,7 +4553,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,load,xfer,store,hilo,hilo,hilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,fpload,xfer,fpstore,hilo,hilo,hilo,xfer,load,xfer,store\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,4,4,8,*,8,*\")])\n \n@@ -4671,7 +4677,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,load,xfer,store,xfer,xfer,hilo,hilo,hilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,fpload,xfer,fpstore,xfer,xfer,hilo,hilo,hilo,xfer,load,xfer,store\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,4,4,4,4,4,*,4,*\")])\n \n@@ -4789,7 +4795,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:CC 1 \"general_operand\" \"z,*d,*m,*d,*f,*d,*f,*m,*f\"))]\n   \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,load,store,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"move,move,load,store,xfer,xfer,move,fpload,fpstore\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8,4,*,*,4,4,4,*,*\")])\n \n@@ -4846,7 +4852,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"lwxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"load\")\n+  [(set_attr \"type\"\t\"fpidxload\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4856,7 +4862,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t\t (match_operand:DI 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"lwxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"load\")\n+  [(set_attr \"type\"\t\"fpidxload\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4866,7 +4872,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"load\")\n+  [(set_attr \"type\"\t\"fpidxload\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4876,7 +4882,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t\t (match_operand:DI 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"load\")\n+  [(set_attr \"type\"\t\"fpidxload\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4886,7 +4892,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"swxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"store\")\n+  [(set_attr \"type\"\t\"fpidxstore\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4896,7 +4902,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"swxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"store\")\n+  [(set_attr \"type\"\t\"fpidxstore\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4906,7 +4912,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"store\")\n+  [(set_attr \"type\"\t\"fpidxstore\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -4916,7 +4922,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"store\")\n+  [(set_attr \"type\"\t\"fpidxstore\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"   \"4\")])\n \n@@ -5133,7 +5139,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SFmode)\n        || reg_or_0_operand (operands[1], SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,load,store,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,*,*\")])\n \n@@ -5178,7 +5184,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,load,store,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,*,*\")])\n \n@@ -5189,7 +5195,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,load,store,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,8,*,*,8,8,8,*,*\")])\n \n@@ -5251,7 +5257,7 @@ dsrl\\t%3,%3,1\\n\\\n   operands[0] = mips_subword (operands[0], 0);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,load\")\n+  [(set_attr \"type\"\t\"xfer,fpload\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4\")])\n \n@@ -5267,7 +5273,7 @@ dsrl\\t%3,%3,1\\n\\\n   operands[0] = mips_subword (operands[0], 1);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,load\")\n+  [(set_attr \"type\"\t\"xfer,fpload\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4\")])\n \n@@ -5282,7 +5288,7 @@ dsrl\\t%3,%3,1\\n\\\n   operands[1] = mips_subword (operands[1], 1);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,store\")\n+  [(set_attr \"type\"\t\"xfer,fpstore\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4\")])\n "}, {"sha": "8c9cf6d6aac7eaeb67de1462c97ae2bcb9c3d022", "filename": "gcc/config/mips/sr71k.md", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2Fsr71k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4786726d0aa5081769e3c4c9965412b1414e2f/gcc%2Fconfig%2Fmips%2Fsr71k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsr71k.md?ref=1a4786726d0aa5081769e3c4c9965412b1414e2f", "patch": "@@ -141,15 +141,13 @@\n (define_insn_reservation \"ir_sr70_load\"\n                                2\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"load\")\n-                                    (eq_attr \"mode\" \"!SF,DF,FPSW\")))\n+                               (eq_attr \"type\" \"load\"))\n                          \"ri_mem\")\n \n (define_insn_reservation \"ir_sr70_store\"\n                                1\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"store\")\n-                                    (eq_attr \"mode\" \"!SF,DF,FPSW\")))\n+                               (eq_attr \"type\" \"store\"))\n                          \"ri_mem\")\n \n \n@@ -159,15 +157,13 @@\n (define_insn_reservation \"ir_sr70_fload\"\n                                9\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"load\")\n-                                    (eq_attr \"mode\" \"SF,DF\")))\n+                               (eq_attr \"type\" \"fpload,fpidxload\"))\n                          \"(cpu_iss+cp1_iss),(ri_mem+rf_ldmem)\")\n \n (define_insn_reservation \"ir_sr70_fstore\"\n                                1\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"store\")\n-                                    (eq_attr \"mode\" \"SF,DF\")))\n+                               (eq_attr \"type\" \"fpstore,fpidxstore\"))\n                          \"(cpu_iss+cp1_iss),(fpu_mov+ri_mem)\")\n \n "}]}