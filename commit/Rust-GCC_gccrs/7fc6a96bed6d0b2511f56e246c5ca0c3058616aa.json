{"sha": "7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjNmE5NmJlZDZkMGIyNTExZjU2ZTI0NmM1Y2EwYzMwNTg2MTZhYQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-10-17T10:46:18Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-10-17T10:46:18Z"}, "message": "targhooks.c (default_libcall_value): Don't use LIBCALL_VALUE macro if not defined.\n\n\t* targhooks.c (default_libcall_value): Don't use LIBCALL_VALUE macro\n\tif not defined. Change type of second argument to const_rtx.\n\t(default_function_value): Call gcc_unreachable if FUNCTION_VALUE\n\tmacro not defined.\n\t* targhooks.h (default_libcall_value): Update prototype.\n\t* target.h (struct gcc_target): Change type of second argument of\n\tlibcall_value to const_rtx.\n\t* config/arm/arm.c (arm_libcall_value): Change type of second argument\n\tto const_rtx.\n\t(arm_libcall_uses_aapcs_base): Change type of argument to const_rtx.\n\t* doc/tm.texi (TARGET_LIBCALL_VALUE):  Revise documentation.\n\nFrom-SVN: r152933", "tree": {"sha": "35a894b7f8feb223ff393719776ea737b8b17093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35a894b7f8feb223ff393719776ea737b8b17093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/comments", "author": null, "committer": null, "parents": [{"sha": "9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "aed9418d47060a98bb477e7321dca71374fcfa31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -1,3 +1,17 @@\n+2009-10-17  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* targhooks.c (default_libcall_value): Don't use LIBCALL_VALUE macro\n+\tif not defined. Change type of second argument to const_rtx.\n+\t(default_function_value): Call gcc_unreachable if FUNCTION_VALUE\n+\tmacro not defined.\n+\t* targhooks.h (default_libcall_value): Update prototype.\n+\t* target.h (struct gcc_target): Change type of second argument of\n+\tlibcall_value to const_rtx.\n+\t* config/arm/arm.c (arm_libcall_value): Change type of second argument\n+\tto const_rtx.\n+\t(arm_libcall_uses_aapcs_base): Change type of argument to const_rtx.\n+\t* doc/tm.texi (TARGET_LIBCALL_VALUE):  Revise documentation.\n+\n 2009-10-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/40521"}, {"sha": "3aff8e7ff9315b265e6ce6163b47187729e952cb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -133,7 +133,7 @@ static enum machine_mode arm_promote_function_mode (const_tree,\n \t\t\t\t\t\t    const_tree, int);\n static bool arm_return_in_memory (const_tree, const_tree);\n static rtx arm_function_value (const_tree, const_tree, bool);\n-static rtx arm_libcall_value (enum machine_mode, rtx);\n+static rtx arm_libcall_value (enum machine_mode, const_rtx);\n \n static void arm_internal_label (FILE *, const char *, unsigned long);\n static void arm_output_mi_thunk (FILE *, tree, HOST_WIDE_INT, HOST_WIDE_INT,\n@@ -3264,7 +3264,7 @@ add_libcall (htab_t htab, rtx libcall)\n }\n \n static bool\n-arm_libcall_uses_aapcs_base (rtx libcall)\n+arm_libcall_uses_aapcs_base (const_rtx libcall)\n {\n   static bool init_done = false;\n   static htab_t libcall_htab;\n@@ -3311,7 +3311,7 @@ arm_libcall_uses_aapcs_base (rtx libcall)\n }\n \n rtx\n-arm_libcall_value (enum machine_mode mode, rtx libcall)\n+arm_libcall_value (enum machine_mode mode, const_rtx libcall)\n {\n   if (TARGET_AAPCS_BASED && arm_pcs_default != ARM_PCS_AAPCS\n       && GET_MODE_CLASS (mode) == MODE_FLOAT)"}, {"sha": "805ebf2b3ab7a1dca98c0589cd28e6056bdce7a1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -4399,7 +4399,7 @@ compiled.\n @end defmac\n \n @deftypefn {Target Hook} rtx TARGET_LIBCALL_VALUE (enum machine_mode\n-@var{mode}, rtx @var{fun})\n+@var{mode}, const_rtx @var{fun})\n Define this hook if the back-end needs to know the name of the libcall\n function in order to determine where the result should be returned.  \n "}, {"sha": "2c7fa4a6aa97c256c710524ba06f6f53e82fe7ec", "filename": "gcc/target.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -908,7 +908,7 @@ struct gcc_target\n \n     /* Return the rtx for the result of a libcall of mode MODE,\n        calling the function FN_NAME.  */\n-    rtx (*libcall_value) (enum machine_mode, rtx);\n+    rtx (*libcall_value) (enum machine_mode, const_rtx);\n \n     /* Return an rtx for the argument pointer incoming to the\n        current function.  */"}, {"sha": "8614a4ff669b1ba8d57862e9f8911aa2ea57b99c", "filename": "gcc/targhooks.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -603,14 +603,19 @@ default_function_value (const_tree ret_type ATTRIBUTE_UNUSED,\n #ifdef FUNCTION_VALUE\n   return FUNCTION_VALUE (ret_type, fn_decl_or_type);\n #else\n-  return NULL_RTX;\n+  gcc_unreachable ();\n #endif\n }\n \n rtx\n-default_libcall_value (enum machine_mode mode, rtx fun ATTRIBUTE_UNUSED)\n+default_libcall_value (enum machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t       const_rtx fun ATTRIBUTE_UNUSED)\n {\n+#ifdef LIBCALL_VALUE\n   return LIBCALL_VALUE (mode);\n+#else\n+  gcc_unreachable ();\n+#endif\n }\n \n rtx"}, {"sha": "3680b9bb63fc91f7555d4cbd52af1aea90ddeab5", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "patch": "@@ -98,7 +98,7 @@ extern const char *hook_invalid_arg_for_unprototyped_fn\n   (const_tree, const_tree, const_tree);\n extern bool hook_bool_const_rtx_commutative_p (const_rtx, int);\n extern rtx default_function_value (const_tree, const_tree, bool);\n-extern rtx default_libcall_value (enum machine_mode, rtx);\n+extern rtx default_libcall_value (enum machine_mode, const_rtx);\n extern rtx default_internal_arg_pointer (void);\n extern rtx default_static_chain (const_tree, bool);\n extern void default_trampoline_init (rtx, tree, rtx);"}]}