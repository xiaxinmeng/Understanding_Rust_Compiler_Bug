{"sha": "30321c396e258cd2ed96e93b28a2ccd5b294b56f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzMjFjMzk2ZTI1OGNkMmVkOTZlOTNiMjhhMmNjZDViMjk0YjU2Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2003-11-08T01:38:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2003-11-08T01:38:48Z"}, "message": "c-typeck.c (pedantic_lvalue_warning): Deprecate compound expressions as lvalues.\n\n\t* c-typeck.c (pedantic_lvalue_warning): Deprecate compound\n\texpressions as lvalues.\n\t(internal_build_compound_expr): Remove special handling for\n\tnon-pedantic case.\n\t* doc/extend.texi: Document that all extended lvalues are now\n\tdeprecated.\n\ntestsuite:\n\t* gcc.dg/compound-lvalue-1.c: New test.\n\t* gcc.dg/c90-const-expr-2.c, gcc.dg/c99-const-expr-2.c: Remove\n\tsome XFAILs.\n\nFrom-SVN: r73352", "tree": {"sha": "71ae503dfdc2ce26ed49c67a3d879c3fde5850ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71ae503dfdc2ce26ed49c67a3d879c3fde5850ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30321c396e258cd2ed96e93b28a2ccd5b294b56f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30321c396e258cd2ed96e93b28a2ccd5b294b56f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30321c396e258cd2ed96e93b28a2ccd5b294b56f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30321c396e258cd2ed96e93b28a2ccd5b294b56f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b574a7758dc0eca42ec9531aec9970215c536fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b574a7758dc0eca42ec9531aec9970215c536fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b574a7758dc0eca42ec9531aec9970215c536fc"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "af24a904bf458cc210dfe9749f369f124015ce8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -1,3 +1,12 @@\n+2003-11-08  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-typeck.c (pedantic_lvalue_warning): Deprecate compound\n+\texpressions as lvalues.\n+\t(internal_build_compound_expr): Remove special handling for\n+\tnon-pedantic case.\n+\t* doc/extend.texi: Document that all extended lvalues are now\n+\tdeprecated.\n+\n 2003-11-07  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR 11654"}, {"sha": "fc6dc5952ba7ba9f3bbf852829912d36625c9cf8", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -2591,8 +2591,7 @@ pedantic_lvalue_warning (enum tree_code code)\n       pedwarn (\"use of conditional expressions as lvalues is deprecated\");\n       break;\n     case COMPOUND_EXPR:\n-      if (pedantic)\n-\tpedwarn (\"ISO C forbids use of compound expressions as lvalues\");\n+      pedwarn (\"use of compound expressions as lvalues is deprecated\");\n       break;\n     default:\n       pedwarn (\"use of cast expressions as lvalues is deprecated\");\n@@ -2903,11 +2902,6 @@ internal_build_compound_expr (tree list, int first_p)\n            && ! (TREE_CODE (TREE_VALUE (list)) == CONVERT_EXPR\n                 && VOID_TYPE_P (TREE_TYPE (TREE_VALUE (list)))))\n         warning (\"left-hand operand of comma expression has no effect\");\n-\n-      /* When pedantic, a compound expression can be neither an lvalue\n-         nor an integer constant expression.  */\n-      if (! pedantic)\n-        return rest;\n     }\n \n   /* With -Wunused, we should also warn if the left-hand operand does have"}, {"sha": "fdc1c7c682766836585bf7a03fd9285e33363535", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -1069,7 +1069,8 @@ This will work with all versions of GCC@.\n \n Compound expressions, conditional expressions and casts are allowed as\n lvalues provided their operands are lvalues.  This means that you can take\n-their addresses or store values into them.\n+their addresses or store values into them.  All these extensions are\n+deprecated.\n \n Standard C++ allows compound expressions and conditional expressions\n as lvalues, and permits casts to reference type, so use of this"}, {"sha": "9cf4afd7b8baba70e36f1efb53f157bff6e15326", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -1,3 +1,9 @@\n+2003-11-08  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.dg/compound-lvalue-1.c: New test.\n+\t* gcc.dg/c90-const-expr-2.c, gcc.dg/c99-const-expr-2.c: Remove\n+\tsome XFAILs.\n+\n 2003-11-06  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/altivec-varargs-1.c: New test."}, {"sha": "7363e2a2e2cfaeab2c8abf306998f6544ca7d507", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -30,7 +30,7 @@ foo (void)\n   ASSERT_NPC ((void *)0);\n   ASSERT_NOT_NPC ((void *)(void *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   ASSERT_NOT_NPC ((void *)(char *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n-  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n   ASSERT_NOT_NPC ((void *)(&\"Foobar\"[0] - &\"Foobar\"[0])); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   /* This last one is a null pointer constant in C99 only.  */\n   ASSERT_NOT_NPC ((void *)(1 ? 0 : (0, 0))); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */"}, {"sha": "1ba1b4a674a689a318a7d43de51442e58c8e2f2e", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -30,7 +30,7 @@ foo (void)\n   ASSERT_NPC ((void *)0);\n   ASSERT_NOT_NPC ((void *)(void *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   ASSERT_NOT_NPC ((void *)(char *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n-  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n   ASSERT_NOT_NPC ((void *)(&\"Foobar\"[0] - &\"Foobar\"[0])); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   /* This last one is a null pointer constant in C99 only.  */\n   ASSERT_NPC ((void *)(1 ? 0 : (0, 0)));"}, {"sha": "c77403d02e30357f34ecfa4e6f5bb0064f42adbb", "filename": "gcc/testsuite/gcc.dg/compound-lvalue-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fcompound-lvalue-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30321c396e258cd2ed96e93b28a2ccd5b294b56f/gcc%2Ftestsuite%2Fgcc.dg%2Fcompound-lvalue-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompound-lvalue-1.c?ref=30321c396e258cd2ed96e93b28a2ccd5b294b56f", "patch": "@@ -0,0 +1,12 @@\n+/* Test for deprecation of compound expressions as lvalues.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int x, y;\n+\n+void\n+foo (void)\n+{\n+  (x, y) = 1; /* { dg-warning \"lvalue\" \"compound expression as lvalue deprecated\" } */\n+}"}]}