{"sha": "0d8c298443615c1fd75c9af10ca26c7c36b69273", "node_id": "C_kwDOANBUbNoAKDBkOGMyOTg0NDM2MTVjMWZkNzVjOWFmMTBjYTI2YzdjMzZiNjkyNzM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-06T11:30:47Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-06T15:36:29Z"}, "message": "Ensure we don't return error_mark_node for loop expressions\n\nLoop expressions can return a value even if its a unit-type so we must\nensure we don't return an error_mark_node for the eventual coercion site\nfor the unit-type case.\n\nOffending test-case was: rust/compile/torture/loop7.rs", "tree": {"sha": "338e39f6f0ea7ac3485c03288ca883db65a5d932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/338e39f6f0ea7ac3485c03288ca883db65a5d932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d8c298443615c1fd75c9af10ca26c7c36b69273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8c298443615c1fd75c9af10ca26c7c36b69273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8c298443615c1fd75c9af10ca26c7c36b69273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8c298443615c1fd75c9af10ca26c7c36b69273/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea940e4dcabbf99fbb44c125a0af7cf82e48146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea940e4dcabbf99fbb44c125a0af7cf82e48146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ea940e4dcabbf99fbb44c125a0af7cf82e48146"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "080686f9ce70e900913e8bef6f1b7cd1f522bf80", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8c298443615c1fd75c9af10ca26c7c36b69273/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8c298443615c1fd75c9af10ca26c7c36b69273/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=0d8c298443615c1fd75c9af10ca26c7c36b69273", "patch": "@@ -552,21 +552,16 @@ class CompileExpr : public HIRCompileBase, public HIR::HIRExpressionVisitor\n       }\n \n     fncontext fnctx = ctx->peek_fn ();\n-    Bvariable *tmp = NULL;\n-    bool needs_temp = !block_tyty->is_unit ();\n-    if (needs_temp)\n-      {\n-\ttree enclosing_scope = ctx->peek_enclosing_scope ();\n-\ttree block_type = TyTyResolveCompile::compile (ctx, block_tyty);\n+    tree enclosing_scope = ctx->peek_enclosing_scope ();\n+    tree block_type = TyTyResolveCompile::compile (ctx, block_tyty);\n \n-\tbool is_address_taken = false;\n-\ttree ret_var_stmt = NULL_TREE;\n-\ttmp = ctx->get_backend ()->temporary_variable (\n-\t  fnctx.fndecl, enclosing_scope, block_type, NULL, is_address_taken,\n-\t  expr.get_locus (), &ret_var_stmt);\n-\tctx->add_statement (ret_var_stmt);\n-\tctx->push_loop_context (tmp);\n-      }\n+    bool is_address_taken = false;\n+    tree ret_var_stmt = NULL_TREE;\n+    Bvariable *tmp = ctx->get_backend ()->temporary_variable (\n+      fnctx.fndecl, enclosing_scope, block_type, NULL, is_address_taken,\n+      expr.get_locus (), &ret_var_stmt);\n+    ctx->add_statement (ret_var_stmt);\n+    ctx->push_loop_context (tmp);\n \n     if (expr.has_loop_label ())\n       {\n@@ -595,12 +590,9 @@ class CompileExpr : public HIRCompileBase, public HIR::HIRExpressionVisitor\n       = ctx->get_backend ()->loop_expression (code_block, expr.get_locus ());\n     ctx->add_statement (loop_expr);\n \n-    if (tmp != NULL)\n-      {\n-\tctx->pop_loop_context ();\n-\ttranslated\n-\t  = ctx->get_backend ()->var_expression (tmp, expr.get_locus ());\n-      }\n+    ctx->pop_loop_context ();\n+    translated = ctx->get_backend ()->var_expression (tmp, expr.get_locus ());\n+\n     ctx->pop_loop_begin_label ();\n   }\n "}]}