{"sha": "6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxMWZlYjBmZmJjM2Q1OTQ3OTZmOGU2M2IxNzRmZjQ4ZGM0YTY0Yw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-09-11T14:35:08Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-09-11T14:35:08Z"}, "message": "dwarf2out.c (dwarf2out_abstract_function): Do not change cfun.\n\n2012-09-11  Martin Jambor  <mjambor@suse.cz>\n\n\t* dwarf2out.c (dwarf2out_abstract_function): Do not change cfun.\n\t(premark_used_types): New parameter fun, use it instead of cfun.\n\t(gen_subprogram_die): Use DECL_STRUCT_FUNCTION (decl) instead of cfun,\n\talso pass it to premark_used_types.\n\nFrom-SVN: r191186", "tree": {"sha": "91223310602b0a1722293d37c95bd41517f2d391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91223310602b0a1722293d37c95bd41517f2d391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6211feb0ffbc3d594796f8e63b174ff48dc4a64c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b29402f047f87d2f2a536b5d8af6b2d4e7f2c867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29402f047f87d2f2a536b5d8af6b2d4e7f2c867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29402f047f87d2f2a536b5d8af6b2d4e7f2c867"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "afceaf70b46e2556cd714bd45aa39547e81d5ccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6211feb0ffbc3d594796f8e63b174ff48dc4a64c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6211feb0ffbc3d594796f8e63b174ff48dc4a64c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "patch": "@@ -1,3 +1,10 @@\n+2012-09-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* dwarf2out.c (dwarf2out_abstract_function): Do not change cfun.\n+\t(premark_used_types): New parameter fun, use it instead of cfun.\n+\t(gen_subprogram_die): Use DECL_STRUCT_FUNCTION (decl) instead of cfun,\n+\talso pass it to premark_used_types.\n+\n 2012-09-11  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* doc/sourcebuild.texi (arm_neon_v2_ok): Adjust command line."}, {"sha": "06920a9d1fb3d6ce2e8069c685dfbacc98073d01", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6211feb0ffbc3d594796f8e63b174ff48dc4a64c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6211feb0ffbc3d594796f8e63b174ff48dc4a64c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6211feb0ffbc3d594796f8e63b174ff48dc4a64c", "patch": "@@ -16762,7 +16762,6 @@ dwarf2out_abstract_function (tree decl)\n   /* Pretend we've just finished compiling this function.  */\n   save_fn = current_function_decl;\n   current_function_decl = decl;\n-  push_cfun (DECL_STRUCT_FUNCTION (decl));\n \n   was_abstract = DECL_ABSTRACT (decl);\n   set_decl_abstract_flags (decl, 1);\n@@ -16776,7 +16775,6 @@ dwarf2out_abstract_function (tree decl)\n   call_arg_locations = old_call_arg_locations;\n   call_site_count = old_call_site_count;\n   tail_call_site_count = old_tail_call_site_count;\n-  pop_cfun ();\n }\n \n /* Helper function of premark_used_types() which gets called through\n@@ -16835,10 +16833,10 @@ premark_types_used_by_global_vars_helper (void **slot,\n /* Mark all members of used_types_hash as perennial.  */\n \n static void\n-premark_used_types (void)\n+premark_used_types (struct function *fun)\n {\n-  if (cfun && cfun->used_types_hash)\n-    htab_traverse (cfun->used_types_hash, premark_used_types_helper, NULL);\n+  if (fun && fun->used_types_hash)\n+    htab_traverse (fun->used_types_hash, premark_used_types_helper, NULL);\n }\n \n /* Mark all members of types_used_by_vars_entry as perennial.  */\n@@ -16901,7 +16899,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n   int declaration = (current_function_decl != decl\n \t\t     || class_or_namespace_scope_p (context_die));\n \n-  premark_used_types ();\n+  premark_used_types (DECL_STRUCT_FUNCTION (decl));\n \n   /* It is possible to have both DECL_ABSTRACT and DECLARATION be true if we\n      started to generate the abstract instance of an inline, decided to output\n@@ -17064,13 +17062,15 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n   else if (!DECL_EXTERNAL (decl))\n     {\n       HOST_WIDE_INT cfa_fb_offset;\n+      struct function *fun = DECL_STRUCT_FUNCTION (decl);\n \n       if (!old_die || !get_AT (old_die, DW_AT_inline))\n \tequate_decl_number_to_die (decl, subr_die);\n \n+      gcc_checking_assert (fun);\n       if (!flag_reorder_blocks_and_partition)\n \t{\n-\t  dw_fde_ref fde = cfun->fde;\n+\t  dw_fde_ref fde = fun->fde;\n \t  if (fde->dw_fde_begin)\n \t    {\n \t      /* We have already generated the labels.  */\n@@ -17116,7 +17116,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n       else\n \t{\n \t  /* Generate pubnames entries for the split function code ranges.  */\n-\t  dw_fde_ref fde = cfun->fde;\n+\t  dw_fde_ref fde = fun->fde;\n \n \t  if (fde->dw_fde_second_begin)\n \t    {\n@@ -17216,9 +17216,9 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t by this displacement.  */\n       compute_frame_pointer_to_fb_displacement (cfa_fb_offset);\n \n-      if (cfun->static_chain_decl)\n+      if (fun->static_chain_decl)\n \tadd_AT_location_description (subr_die, DW_AT_static_link,\n-\t\t loc_list_from_tree (cfun->static_chain_decl, 2));\n+\t\t loc_list_from_tree (fun->static_chain_decl, 2));\n     }\n \n   /* Generate child dies for template paramaters.  */"}]}