{"sha": "db7ec03597533caa93e7eb3688de61c0d6e2bc77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI3ZWMwMzU5NzUzM2NhYTkzZTdlYjM2ODhkZTYxYzBkNmUyYmM3Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-09T20:49:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-09T20:49:00Z"}, "message": "re PR rtl-optimization/47866 (gcc.dg/torture/vector-2.c fails on IA64)\n\n\tPR rtl-optimization/47866\n\t* expr.c (store_field): If MEM_SCALAR_P (target), don't use\n\tMEM_SET_IN_STRUCT_P (to_rtx, 1), just set MEM_IN_STRUCT_P (to_rtx)\n\tif target wasn't scalar.\n\t* function.c (assign_stack_temp_for_type): Assert that neither\n\tMEM_SCALAR_P nor MEM_IN_STRUCT_P is set previously, set either\n\tMEM_IN_STRUCT_P or MEM_SCALAR_P instead of using MEM_SET_IN_STRUCT_P\n\tmacro.\n\t* rtl.h (MEM_SET_IN_STRUCT_P): Removed.\n\nFrom-SVN: r170834", "tree": {"sha": "f2e41a1f3f62ddafe04756aa6068b27b92c97866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2e41a1f3f62ddafe04756aa6068b27b92c97866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db7ec03597533caa93e7eb3688de61c0d6e2bc77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7ec03597533caa93e7eb3688de61c0d6e2bc77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db7ec03597533caa93e7eb3688de61c0d6e2bc77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7ec03597533caa93e7eb3688de61c0d6e2bc77/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ad313411053e359863e5ec1a5e426254b67de8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad313411053e359863e5ec1a5e426254b67de8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ad313411053e359863e5ec1a5e426254b67de8f"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "ca24623dfd596be1bce4d70d6305b91ed0ce5dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db7ec03597533caa93e7eb3688de61c0d6e2bc77", "patch": "@@ -1,3 +1,15 @@\n+2011-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/47866\n+\t* expr.c (store_field): If MEM_SCALAR_P (target), don't use\n+\tMEM_SET_IN_STRUCT_P (to_rtx, 1), just set MEM_IN_STRUCT_P (to_rtx)\n+\tif target wasn't scalar.\n+\t* function.c (assign_stack_temp_for_type): Assert that neither\n+\tMEM_SCALAR_P nor MEM_IN_STRUCT_P is set previously, set either\n+\tMEM_IN_STRUCT_P or MEM_SCALAR_P instead of using MEM_SET_IN_STRUCT_P\n+\tmacro.\n+\t* rtl.h (MEM_SET_IN_STRUCT_P): Removed.\n+\n 2011-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390-protos.h (s390_label_align): New prototype."}, {"sha": "6a5f74b42105a77ef61553da64c7b23178c008e2", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=db7ec03597533caa93e7eb3688de61c0d6e2bc77", "patch": "@@ -5924,7 +5924,8 @@ store_field (rtx target, HOST_WIDE_INT bitsize, HOST_WIDE_INT bitpos,\n       if (to_rtx == target)\n \tto_rtx = copy_rtx (to_rtx);\n \n-      MEM_SET_IN_STRUCT_P (to_rtx, 1);\n+      if (!MEM_SCALAR_P (to_rtx))\n+\tMEM_IN_STRUCT_P (to_rtx) = 1;\n       if (!MEM_KEEP_ALIAS_SET_P (to_rtx) && MEM_ALIAS_SET (to_rtx) != 0)\n \tset_mem_alias_set (to_rtx, alias_set);\n "}, {"sha": "1f7722c62a22a04b17d3b72a976117d3be68b95a", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=db7ec03597533caa93e7eb3688de61c0d6e2bc77", "patch": "@@ -942,8 +942,11 @@ assign_stack_temp_for_type (enum machine_mode mode, HOST_WIDE_INT size,\n   if (type != 0)\n     {\n       MEM_VOLATILE_P (slot) = TYPE_VOLATILE (type);\n-      MEM_SET_IN_STRUCT_P (slot, (AGGREGATE_TYPE_P (type)\n-\t\t\t\t  || TREE_CODE (type) == COMPLEX_TYPE));\n+      gcc_checking_assert (!MEM_SCALAR_P (slot) && !MEM_IN_STRUCT_P (slot));\n+      if (AGGREGATE_TYPE_P (type) || TREE_CODE (type) == COMPLEX_TYPE)\n+\tMEM_IN_STRUCT_P (slot) = 1;\n+      else\n+\tMEM_SCALAR_P (slot) = 1;\n     }\n   MEM_NOTRAP_P (slot) = 1;\n "}, {"sha": "66f275570fabcf67d80e36b4b90f013e71b7726f", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7ec03597533caa93e7eb3688de61c0d6e2bc77/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=db7ec03597533caa93e7eb3688de61c0d6e2bc77", "patch": "@@ -1279,24 +1279,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define MEM_NOTRAP_P(RTX) \\\n   (RTL_FLAG_CHECK1(\"MEM_NOTRAP_P\", (RTX), MEM)->call)\n \n-/* If VAL is nonzero, set MEM_IN_STRUCT_P and clear MEM_SCALAR_P in\n-   RTX.  Otherwise, vice versa.  Use this macro only when you are\n-   *sure* that you know that the MEM is in a structure, or is a\n-   scalar.  VAL is evaluated only once.  */\n-#define MEM_SET_IN_STRUCT_P(RTX, VAL)\t\t\\\n-do {\t\t\t\t\t\t\\\n-  if (VAL)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      MEM_IN_STRUCT_P (RTX) = 1;\t\t\\\n-      MEM_SCALAR_P (RTX) = 0;\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      MEM_IN_STRUCT_P (RTX) = 0;\t\t\\\n-      MEM_SCALAR_P (RTX) = 1;\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-} while (0)\n-\n /* The memory attribute block.  We provide access macros for each value\n    in the block and provide defaults if none specified.  */\n #define MEM_ATTRS(RTX) X0MEMATTR (RTX, 1)"}]}