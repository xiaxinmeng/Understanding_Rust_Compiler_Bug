{"sha": "12e99c38381472257cf47427a777db397c9ed14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlOTljMzgzODE0NzIyNTdjZjQ3NDI3YTc3N2RiMzk3YzllZDE0ZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-07T17:32:23Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-07T17:32:23Z"}, "message": "pr41616-1.c: Use -fgnu89-inline.\n\n\t* gcc.dg/guality/pr41616-1.c: Use -fgnu89-inline.\n\t* gcc.dg/iftrap-1.c: Fix implicit declarations.\n\t* gcc.target/powerpc/pr26350.c: Likewise.\n\t* gcc.target/powerpc/altivec-consts.c: Likewise.\n\t* gcc.target/powerpc/altivec-varargs-1.c: Likewise.\n\t* gcc.target/powerpc/le-altivec-consts.c: Likewise.\n\t* gcc.target/powerpc/ppc-vector-memcpy.c: Likewise.\n\t* gcc.target/powerpc/ppc-vector-memset.c: Likewise.\n\t* gcc.target/powerpc/pr47862.c: Likewise.\n\t* gcc.target/powerpc/pr48053-1.c: Likewise.\n\t* gcc.target/powerpc/pr53487.c: Likewise.\n\t* gcc.dg/vect/pr48765.c: Fix implicit declarations and defaulting\n\tto int.\n\t* gcc.target/powerpc/20050603-1.c: Fix defaulting to int.\n\t* gcc.target/powerpc/altivec-2.c: Likewise.\n\t* gcc.target/powerpc/pr47755-2.c: Likewise.\n\nFrom-SVN: r215978", "tree": {"sha": "9a90cb8338db11461df8ce35d1f06104d037136b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a90cb8338db11461df8ce35d1f06104d037136b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e99c38381472257cf47427a777db397c9ed14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e99c38381472257cf47427a777db397c9ed14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e99c38381472257cf47427a777db397c9ed14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e99c38381472257cf47427a777db397c9ed14e/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe1090c16ef13afadd24fa82b511208fae6cd958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1090c16ef13afadd24fa82b511208fae6cd958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe1090c16ef13afadd24fa82b511208fae6cd958"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "32cc63017e1aab8d49707df112ba6ccfd6a87bc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -1,3 +1,22 @@\n+2014-10-07  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/guality/pr41616-1.c: Use -fgnu89-inline.\n+\t* gcc.dg/iftrap-1.c: Fix implicit declarations.\n+\t* gcc.target/powerpc/pr26350.c: Likewise.\n+\t* gcc.target/powerpc/altivec-consts.c: Likewise.\n+\t* gcc.target/powerpc/altivec-varargs-1.c: Likewise.\n+\t* gcc.target/powerpc/le-altivec-consts.c: Likewise.\n+\t* gcc.target/powerpc/ppc-vector-memcpy.c: Likewise.\n+\t* gcc.target/powerpc/ppc-vector-memset.c: Likewise.\n+\t* gcc.target/powerpc/pr47862.c: Likewise.\n+\t* gcc.target/powerpc/pr48053-1.c: Likewise.\n+\t* gcc.target/powerpc/pr53487.c: Likewise.\n+\t* gcc.dg/vect/pr48765.c: Fix implicit declarations and defaulting\n+\tto int.\n+\t* gcc.target/powerpc/20050603-1.c: Fix defaulting to int.\n+\t* gcc.target/powerpc/altivec-2.c: Likewise.\n+\t* gcc.target/powerpc/pr47755-2.c: Likewise.\n+\n 2014-10-07  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/lto/pr63270.h: New test."}, {"sha": "fcd1ad50cbd3914be4d18733009cb4a94c7eefa2", "filename": "gcc/testsuite/gcc.dg/guality/pr41616-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { xfail *-*-* } } */\n-/* { dg-options \"-g\" } */\n+/* { dg-options \"-g -fgnu89-inline\" } */\n \n #include \"guality.h\"\n "}, {"sha": "c6d55843bf6d6284749ce470c3b651a4148be651", "filename": "gcc/testsuite/gcc.dg/iftrap-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -3,6 +3,8 @@\n /* { dg-do compile { target rs6000-*-* powerpc*-*-* sparc*-*-* ia64-*-* } } */\n /* { dg-final { scan-assembler-not \"^\\t(trap|ta|break)\\[ \\t\\]\" } } */\n \n+void bar (void);\n+\n void f1(int p)\n {\n   if (p)"}, {"sha": "2b2907b71ff3828b7147d7125fbbf643fcf27d64", "filename": "gcc/testsuite/gcc.dg/vect/pr48765.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr48765.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr48765.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr48765.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -33,8 +33,10 @@ static char *regs_change_size;\n static HARD_REG_SET *after_insn_hard_regs;\n static int stupid_find_reg (int, enum reg_class, enum machine_mode, int, int,\n \t\t\t    int);\n+enum reg_class reg_preferred_class (int);\n void\n stupid_life_analysis (f, nregs, file)\n+     int nregs, file;\n      rtx f;\n {\n   register int i;\n@@ -52,7 +54,7 @@ stupid_life_analysis (f, nregs, file)\n static int\n stupid_find_reg (call_preserved, class, mode, born_insn, dead_insn,\n \t\t changes_size)\n-     int call_preserved;\n+     int call_preserved, born_insn, dead_insn, changes_size;\n      enum reg_class class;\n      enum machine_mode mode;\n {"}, {"sha": "f801c43b35181a6878882557a4f5eb67e1459a7b", "filename": "gcc/testsuite/gcc.target/powerpc/20050603-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-1.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -15,6 +15,7 @@ test_reg_save_restore (int *p)\n     setlocale (LC_ALL, \"C\");\n     testreg = ext_func(p);\n }\n+int\n main() {\n   testreg = &x;\n   test_reg_save_restore (&y);"}, {"sha": "a91ac0c43ac60cad3ef0e2a54eb828a651f85f11", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -23,6 +23,7 @@ int xxx[sizeof(foobar) == 16 ? 69 : -1];\n \n int nc17[sizeof(shoe) == sizeof (char *) ? 69 : -1];\n \n+void\n code ()\n {\n   *shoe = polish;"}, {"sha": "36cb60c32b772182e87c3aeb986acb1b1a990b49", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-consts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-consts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-consts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-consts.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -6,6 +6,7 @@\n /* Check that \"easy\" AltiVec constants are correctly synthesized.  */\n \n extern void abort (void);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n typedef __attribute__ ((vector_size (16))) unsigned char v16qi;\n typedef __attribute__ ((vector_size (16))) unsigned short v8hi;"}, {"sha": "d62f5bb8e47efef4ba2aff4715e678529a7eab99", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-varargs-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-varargs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-varargs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-varargs-1.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -7,6 +7,7 @@\n \n extern void exit (int);\n extern void abort (void);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n #define vector __attribute__((vector_size (16)))\n "}, {"sha": "15ec650c7860b7bad9125caf995b54b9ee12b8e9", "filename": "gcc/testsuite/gcc.target/powerpc/le-altivec-consts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fle-altivec-consts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fle-altivec-consts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fle-altivec-consts.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -6,6 +6,7 @@\n /* Check that \"easy\" AltiVec constants are correctly synthesized.  */\n \n extern void abort (void);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n typedef __attribute__ ((vector_size (16))) unsigned char v16qi;\n typedef __attribute__ ((vector_size (16))) unsigned short v8hi;"}, {"sha": "7464625826586ff6db7ac8efbf77fc74b31bbf45", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-vector-memcpy.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -5,6 +5,8 @@\n \n #include <string.h>\n \n+void bar (int *);\n+\n void foo(void)\n {\n   extern int x[8] __attribute__((aligned(128)));"}, {"sha": "175a756eca7f3448e2a173feb7db489431884349", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-vector-memset.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -5,6 +5,8 @@\n \n #include <string.h>\n \n+void bar (int *);\n+\n void foo(void)\n {\n   int x[8] __attribute__((aligned(128)));"}, {"sha": "ee081602e2f3b0a378c49aeb7b1f2d0c3b90fa86", "filename": "gcc/testsuite/gcc.target/powerpc/pr26350.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr26350.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr26350.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr26350.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -17,6 +17,7 @@ struct REGS {\n struct ebfp {\n   long double v;\n };\n+void put_ebfp (struct ebfp *);\n \n void s390_convert_fix32_to_bfp_ext_reg (REGS *regs)\n {"}, {"sha": "739eab805510bbab561efb3d64d5c05860cd8c8d", "filename": "gcc/testsuite/gcc.target/powerpc/pr47755-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47755-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47755-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47755-2.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -22,9 +22,9 @@ extern void abort (void) __attribute__((__noreturn__));\n #define FAIL_I(A, B, C, D) abort ()\n #endif\n \n-static test_ll (vector long long, long long, long long) __attribute__((__noinline__));\n+static void test_ll (vector long long, long long, long long) __attribute__((__noinline__));\n \n-static\n+static void\n test_ll (vector long long v, long long a, long long b)\n {\n   union {\n@@ -39,9 +39,9 @@ test_ll (vector long long v, long long a, long long b)\n \n #define TEST_LL(A,B) test_ll ((vector long long){ (A), (B) }, (A), (B))\n \n-static test_i (vector int, int, int, int, int) __attribute__((__noinline__));\n+static void test_i (vector int, int, int, int, int) __attribute__((__noinline__));\n \n-static\n+static void\n test_i (vector int v, int a, int b, int c, int d)\n {\n   union {"}, {"sha": "2a49f39759eb362c6a21577bd09129c2c00d012f", "filename": "gcc/testsuite/gcc.target/powerpc/pr47862.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -7,6 +7,7 @@\n /* PR 47862: Verify caller-save spill of vectors in FP regs do not use\n    legacy FP insns, which spill only half the vector.  */\n extern vector double dd[15];\n+void bar (void);\n \n vector double foo() {\n   vector double a,b,c,d,e,f,g,h,i,j,k,l,m,n;"}, {"sha": "9c6479bb203e1ba4eded2547a999fde70be64b56", "filename": "gcc/testsuite/gcc.target/powerpc/pr48053-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48053-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48053-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48053-1.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -6,6 +6,7 @@\n int sourcenode;\n int ARCHelems;\n int *source_elms;\n+void vv12x12 (double *, double *, double *);\n void\n foo (int argc, char **argv)\n {"}, {"sha": "aa411a32d6a5a28a0194e3a55eddc89a61b2ecc0", "filename": "gcc/testsuite/gcc.target/powerpc/pr53487.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr53487.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e99c38381472257cf47427a777db397c9ed14e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr53487.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr53487.c?ref=12e99c38381472257cf47427a777db397c9ed14e", "patch": "@@ -6,6 +6,7 @@\n struct phylo_s {\n   int left;\n };\n+void Free2DArray (void **, int);\n \n int Cluster(float **dmx, int N, struct phylo_s *tree)\n {"}]}