{"sha": "c833d2be02e2e98ef83c204734389795e8dd2abd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzM2QyYmUwMmUyZTk4ZWY4M2MyMDQ3MzQzODk3OTVlOGRkMmFiZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-09-06T09:04:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-09-06T09:04:00Z"}, "message": "init.c (build_offset_ref): Deal with namespace scoped TEMPLATE_ID_EXPRs.\n\n\t* init.c (build_offset_ref): Deal with namespace scoped\n\tTEMPLATE_ID_EXPRs.\n\nFrom-SVN: r36189", "tree": {"sha": "53de546db89c6fc8948a14b139ddbf921cee40b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53de546db89c6fc8948a14b139ddbf921cee40b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c833d2be02e2e98ef83c204734389795e8dd2abd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c833d2be02e2e98ef83c204734389795e8dd2abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c833d2be02e2e98ef83c204734389795e8dd2abd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c833d2be02e2e98ef83c204734389795e8dd2abd/comments", "author": null, "committer": null, "parents": [{"sha": "b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "e5c11eff83f75c00103aa3699435e73f6d605bc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c833d2be02e2e98ef83c204734389795e8dd2abd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c833d2be02e2e98ef83c204734389795e8dd2abd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c833d2be02e2e98ef83c204734389795e8dd2abd", "patch": "@@ -1,3 +1,8 @@\n+2000-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* init.c (build_offset_ref): Deal with namespace scoped\n+\tTEMPLATE_ID_EXPRs.\n+\n 2000-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (resolve_address_of_overloaded_function): Add"}, {"sha": "68f92b6835b24655ecea6592b0ffd695eb4044d3", "filename": "gcc/cp/init.c", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c833d2be02e2e98ef83c204734389795e8dd2abd/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c833d2be02e2e98ef83c204734389795e8dd2abd/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=c833d2be02e2e98ef83c204734389795e8dd2abd", "patch": "@@ -1624,21 +1624,6 @@ build_offset_ref (type, name)\n   if (processing_template_decl || uses_template_parms (type))\n     return build_min_nt (SCOPE_REF, type, name);\n \n-  /* Handle namespace names fully here.  */\n-  if (TREE_CODE (type) == NAMESPACE_DECL)\n-    {\n-      t = lookup_namespace_name (type, name);\n-      if (t != error_mark_node && ! type_unknown_p (t))\n-\t{\n-\t  mark_used (t);\n-\t  t = convert_from_reference (t);\n-\t}\n-      return t;\n-    }\n-\n-  if (type == NULL_TREE || ! is_aggr_type (type, 1))\n-    return error_mark_node;\n-\n   if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n     {\n       /* If the NAME is a TEMPLATE_ID_EXPR, we are looking at\n@@ -1666,6 +1651,30 @@ build_offset_ref (type, name)\n       my_friendly_assert (TREE_CODE (name) == IDENTIFIER_NODE, 0);\n     }\n \n+  if (type == NULL_TREE)\n+    return error_mark_node;\n+  \n+  /* Handle namespace names fully here.  */\n+  if (TREE_CODE (type) == NAMESPACE_DECL)\n+    {\n+      t = lookup_namespace_name (type, name);\n+      if (t == error_mark_node)\n+        return t;\n+      if (TREE_CODE (orig_name) == TEMPLATE_ID_EXPR)\n+        /* Reconstruct the TEMPLATE_ID_EXPR.  */\n+        t = build (TEMPLATE_ID_EXPR, TREE_TYPE (t),\n+                   t, TREE_OPERAND (orig_name, 1));\n+      if (! type_unknown_p (t))\n+\t{\n+\t  mark_used (t);\n+\t  t = convert_from_reference (t);\n+\t}\n+      return t;\n+    }\n+\n+  if (! is_aggr_type (type, 1))\n+    return error_mark_node;\n+\n   if (TREE_CODE (name) == BIT_NOT_EXPR)\n     {\n       if (! check_dtor_name (type, name))"}]}