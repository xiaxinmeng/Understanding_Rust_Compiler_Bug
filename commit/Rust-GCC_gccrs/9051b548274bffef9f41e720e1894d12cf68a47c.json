{"sha": "9051b548274bffef9f41e720e1894d12cf68a47c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA1MWI1NDgyNzRiZmZlZjlmNDFlNzIwZTE4OTRkMTJjZjY4YTQ3Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-29T19:23:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-29T19:56:40Z"}, "message": "Avoid nested save_CFLAGS and save_LDFLAGS\n\nAvoid nested save_CFLAGS and save_LDFLAGS by replacing save_CFLAGS and\nsave_LDFLAGS with cet_save_CFLAGS and cet_save_LDFLAGS in cet.m4.\n\nconfig/\n\n\tPR bootstrap/95413\n\t* cet.m4: Replace save_CFLAGS and save_LDFLAGS with\n\tcet_save_CFLAGS and cet_save_LDFLAGS.\n\ngcc/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibatomic/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibbacktrace/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibcc1/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibcpp/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibdecnumber/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibgcc/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibgfortran/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibgomp/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibiberty/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibitm/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibobjc/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibphobos/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibquadmath/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibsanitizer/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibssp/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibstdc++-v3/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlibvtv/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nlto-plugin/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.\n\nzlib/\n\n\tPR bootstrap/95413\n\t* configure: Regenerated.", "tree": {"sha": "5b382dcf5ffd2a24dbdb58ebec70bfe0beac215c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b382dcf5ffd2a24dbdb58ebec70bfe0beac215c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9051b548274bffef9f41e720e1894d12cf68a47c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9051b548274bffef9f41e720e1894d12cf68a47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9051b548274bffef9f41e720e1894d12cf68a47c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9051b548274bffef9f41e720e1894d12cf68a47c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7deca8c0b3765787627b11387b56b97b01a8bf33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7deca8c0b3765787627b11387b56b97b01a8bf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7deca8c0b3765787627b11387b56b97b01a8bf33"}], "stats": {"total": 190, "additions": 102, "deletions": 88}, "files": [{"sha": "911fbd4647577dd2adae4dcee316ea58eaf0cc8f", "filename": "config/cet.m4", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/config%2Fcet.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/config%2Fcet.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fcet.m4?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -7,13 +7,14 @@ GCC_ENABLE(cet, auto, ,[enable Intel CET in target libraries],\n \t   permit yes|no|auto)\n AC_MSG_CHECKING([for CET support])\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[[34567]]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tAC_COMPILE_IFELSE(\n \t [AC_LANG_PROGRAM(\n@@ -27,7 +28,7 @@ asm (\"setssbsy\");\n \t  ])],\n \t [enable_cet=yes],\n \t [enable_cet=no])\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -64,7 +65,7 @@ AC_MSG_CHECKING([for CET support])\n case \"$host\" in\n   i[[34567]]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -93,17 +94,17 @@ asm (\"setssbsy\");\n \t [AC_MSG_ERROR([assembler with CET support is required for --enable-cet])])\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -159,6 +160,6 @@ if test x$enable_cet = xyes; then\n else\n   AC_MSG_RESULT([no])\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n ])"}, {"sha": "468507104245fc18c358e7e5a660744d1eeb92b5", "filename": "gcc/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -31747,7 +31747,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -31798,17 +31798,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -31896,8 +31896,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n case x$enable_languages in\n *jit*)"}, {"sha": "b441636c85b4adcd6574e077eaeab1b62fff71db", "filename": "libatomic/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -15589,13 +15589,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -15620,7 +15621,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "b453bae5ae69ecf86ee74b16046b27d3c4dd77f8", "filename": "libbacktrace/configure", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -12163,13 +12163,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -12194,7 +12195,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -12403,7 +12404,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -12454,17 +12455,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -12552,8 +12553,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n case x$enable_languages in\n *jit*)"}, {"sha": "37dbeac490806a558d32b73c1c8632ce09d04864", "filename": "libcc1/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libcc1%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libcc1%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -14560,7 +14560,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -14611,17 +14611,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -14709,8 +14709,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n \n "}, {"sha": "3329e20c392a41732c28fec9c3be912ac23bb7d0", "filename": "libcpp/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -7559,7 +7559,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -7610,17 +7610,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -7708,8 +7708,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n case x$enable_languages in\n *jit*)"}, {"sha": "df6fdcfbc7f74a732006fb0cfa94937459fec1c4", "filename": "libdecnumber/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -5212,7 +5212,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -5263,17 +5263,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -5361,8 +5361,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n case x$enable_languages in\n *jit*)"}, {"sha": "13548cacb8518f88dc36bc201d4c25bdacc98bf6", "filename": "libgcc/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -4907,13 +4907,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -4938,7 +4939,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "195f8bbce4c8f8b07e9c9d06e19021e9c83afcaa", "filename": "libgfortran/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -6008,13 +6008,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -6039,7 +6040,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -12722,7 +12723,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12725 \"configure\"\n+#line 12726 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12828,7 +12829,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12831 \"configure\"\n+#line 12832 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "9ffa66c18d9f651464ebea2be859c693344aa3f7", "filename": "libgomp/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -16753,7 +16753,7 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -16778,7 +16778,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "1f8e23f0d235a6a5d5158bf6705023db95ac7023", "filename": "libiberty/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -5286,7 +5286,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -5337,17 +5337,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -5438,8 +5438,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n \n "}, {"sha": "90965f339fcb8f31d9d5d04cff0e5470244f22a2", "filename": "libitm/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -17884,13 +17884,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -17915,7 +17916,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "c4f66880924bd1ed57517c600c9e065c33b2ec4a", "filename": "libobjc/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -3460,13 +3460,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -3491,7 +3492,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10778,7 +10779,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10781 \"configure\"\n+#line 10782 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10884,7 +10885,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10887 \"configure\"\n+#line 10888 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a8d151cdccbee0e7b14b8b97d449689d59ee6113", "filename": "libphobos/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -5580,13 +5580,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -5611,7 +5612,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -11737,7 +11738,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11740 \"configure\"\n+#line 11741 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11843,7 +11844,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11846 \"configure\"\n+#line 11847 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a28788aae8c47c3018a925840e3858f53fc8b677", "filename": "libquadmath/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -13033,13 +13033,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -13064,7 +13065,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "04eca04fbe5e59bae1ba00597de0cf1b7cf1b5fa", "filename": "libsanitizer/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -16856,13 +16856,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -16887,7 +16888,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "ff342ac6e1fee096436b0e19865d8d62e87ed5f6", "filename": "libssp/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -4332,13 +4332,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -4363,7 +4364,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10999,7 +11000,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11002 \"configure\"\n+#line 11003 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11105,7 +11106,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11108 \"configure\"\n+#line 11109 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "b5beb456a6255a415de894e47fb8098b0c456f5d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -77482,13 +77482,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -77513,7 +77514,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "b796e0197d5d964909151b2c5d6542b059ac0471", "filename": "libvtv/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -15674,13 +15674,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -15705,7 +15706,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "69f6fce05c583694def2ff9844f39f25bb120707", "filename": "lto-plugin/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -5682,7 +5682,7 @@ $as_echo_n \"checking for CET support... \" >&6; }\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     may_have_cet=yes\n-    save_CFLAGS=\"$CFLAGS\"\n+    cet_save_CFLAGS=\"$CFLAGS\"\n     CFLAGS=\"$CFLAGS -fcf-protection\"\n     case \"$enable_cet\" in\n       auto)\n@@ -5733,17 +5733,17 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \t;;\n     esac\n-    CFLAGS=\"$save_CFLAGS\"\n+    CFLAGS=\"$cet_save_CFLAGS\"\n     ;;\n   *)\n     may_have_cet=no\n     enable_cet=no\n     ;;\n esac\n \n-save_CFLAGS=\"$CFLAGS\"\n+cet_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -fcf-protection=none\"\n-save_LDFLAGS=\"$LDFLAGS\"\n+cet_save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n if test x$may_have_cet = xyes; then\n   # Check whether -fcf-protection=none -Wl,-z,ibt,-z,shstk work.\n@@ -5831,8 +5831,8 @@ else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n-CFLAGS=\"$save_CFLAGS\"\n-LDFLAGS=\"$save_LDFLAGS\"\n+CFLAGS=\"$cet_save_CFLAGS\"\n+LDFLAGS=\"$cet_save_LDFLAGS\"\n \n \n "}, {"sha": "f9a2689e05c2d5573ea0d19349f80a0938fdd535", "filename": "zlib/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9051b548274bffef9f41e720e1894d12cf68a47c/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9051b548274bffef9f41e720e1894d12cf68a47c/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=9051b548274bffef9f41e720e1894d12cf68a47c", "patch": "@@ -4163,13 +4163,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n $as_echo_n \"checking for CET support... \" >&6; }\n \n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n-\tsave_CFLAGS=\"$CFLAGS\"\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -4194,7 +4195,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\tCFLAGS=\"$save_CFLAGS\"\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10742,7 +10743,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10746 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10849,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10852 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}