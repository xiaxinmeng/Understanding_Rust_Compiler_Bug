{"sha": "9ef714539cb7cc1cd746312fd5dcc987bf167471", "node_id": "C_kwDOANBUbNoAKDllZjcxNDUzOWNiN2NjMWNkNzQ2MzEyZmQ1ZGNjOTg3YmYxNjc0NzE", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-07-05T10:21:33Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-07-07T10:38:51Z"}, "message": "Fix Intel MIC 'mkoffload' for OpenMP 'requires'\n\nSimilar to how the other 'mkoffload's got changed in\nrecent commit 683f11843974f0bdf42f79cdcbb0c2b43c7b81b0\n\"OpenMP: Move omp requires checks to libgomp\".\n\nThis also means finally switching Intel MIC 'mkoffload' to\n'GOMP_offload_register_ver', 'GOMP_offload_unregister_ver',\nmaking 'GOMP_offload_register', 'GOMP_offload_unregister'\nlegacy entry points.\n\n\tgcc/\n\t* config/i386/intelmic-mkoffload.cc (generate_host_descr_file)\n\t(prepare_target_image, main): Handle OpenMP 'requires'.\n\t(generate_host_descr_file): Switch to 'GOMP_offload_register_ver',\n\t'GOMP_offload_unregister_ver'.\n\tlibgomp/\n\t* target.c (GOMP_offload_register, GOMP_offload_unregister):\n\tDenote as legacy entry points.\n\t* testsuite/lib/libgomp.exp\n\t(check_effective_target_offload_target_any): New proc.\n\t* testsuite/libgomp.c-c++-common/requires-1.c: Enable for\n\t'offload_target_any'.\n\t* testsuite/libgomp.c-c++-common/requires-3.c: Likewise.\n\t* testsuite/libgomp.c-c++-common/requires-7.c: Likewise.\n\t* testsuite/libgomp.fortran/requires-1.f90: Likewise.", "tree": {"sha": "e32afd43b47308ce6be7d9bb90a2a11ce8a66e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e32afd43b47308ce6be7d9bb90a2a11ce8a66e28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef714539cb7cc1cd746312fd5dcc987bf167471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef714539cb7cc1cd746312fd5dcc987bf167471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef714539cb7cc1cd746312fd5dcc987bf167471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef714539cb7cc1cd746312fd5dcc987bf167471/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5647e2c3853cbd51a6536a84b8eb0eb3c210dfbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5647e2c3853cbd51a6536a84b8eb0eb3c210dfbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5647e2c3853cbd51a6536a84b8eb0eb3c210dfbf"}], "stats": {"total": 73, "additions": 57, "deletions": 16}, "files": [{"sha": "596f6f107b8c2b249d259fb50638243c1a09ed74", "filename": "gcc/config/i386/intelmic-mkoffload.cc", "status": "modified", "additions": 44, "deletions": 12, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.cc?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -370,7 +370,7 @@ generate_target_offloadend_file (const char *target_compiler)\n \n /* Generates object file with the host side descriptor.  */\n static const char *\n-generate_host_descr_file (const char *host_compiler)\n+generate_host_descr_file (const char *host_compiler, uint32_t omp_requires)\n {\n   char *dump_filename = concat (dumppfx, \"_host_descr.c\", NULL);\n   const char *src_filename = save_temps\n@@ -386,39 +386,50 @@ generate_host_descr_file (const char *host_compiler)\n   if (!src_file)\n     fatal_error (input_location, \"cannot open '%s'\", src_filename);\n \n+  fprintf (src_file, \"#include <stdint.h>\\n\\n\");\n+\n   fprintf (src_file,\n \t   \"extern const void *const __OFFLOAD_TABLE__;\\n\"\n \t   \"extern const void *const __offload_image_intelmic_start;\\n\"\n \t   \"extern const void *const __offload_image_intelmic_end;\\n\\n\"\n \n-\t   \"static const void *const __offload_target_data[] = {\\n\"\n+\t   \"static const struct intelmic_data {\\n\"\n+\t   \"  uintptr_t omp_requires_mask;\\n\"\n+\t   \"  const void *const image_start;\\n\"\n+\t   \"  const void *const image_end;\\n\"\n+\t   \"} intelmic_data = {\\n\"\n+\t   \"  %d,\\n\"\n \t   \"  &__offload_image_intelmic_start, &__offload_image_intelmic_end\\n\"\n-\t   \"};\\n\\n\");\n+\t   \"};\\n\\n\", omp_requires);\n \n   fprintf (src_file,\n \t   \"#ifdef __cplusplus\\n\"\n \t   \"extern \\\"C\\\"\\n\"\n \t   \"#endif\\n\"\n-\t   \"void GOMP_offload_register (const void *, int, const void *);\\n\"\n+\t   \"void GOMP_offload_register_ver (unsigned, const void *, int, const void *);\\n\"\n \t   \"#ifdef __cplusplus\\n\"\n \t   \"extern \\\"C\\\"\\n\"\n \t   \"#endif\\n\"\n-\t   \"void GOMP_offload_unregister (const void *, int, const void *);\\n\\n\"\n+\t   \"void GOMP_offload_unregister_ver (unsigned, const void *, int, const void *);\\n\\n\"\n \n \t   \"__attribute__((constructor))\\n\"\n \t   \"static void\\n\"\n \t   \"init (void)\\n\"\n \t   \"{\\n\"\n-\t   \"  GOMP_offload_register (&__OFFLOAD_TABLE__, %d, __offload_target_data);\\n\"\n-\t   \"}\\n\\n\", GOMP_DEVICE_INTEL_MIC);\n+\t   \"  GOMP_offload_register_ver (%#x, &__OFFLOAD_TABLE__, %d, &intelmic_data);\\n\"\n+\t   \"}\\n\\n\",\n+\t   GOMP_VERSION_PACK (GOMP_VERSION, GOMP_VERSION_INTEL_MIC),\n+\t   GOMP_DEVICE_INTEL_MIC);\n \n   fprintf (src_file,\n \t   \"__attribute__((destructor))\\n\"\n \t   \"static void\\n\"\n \t   \"fini (void)\\n\"\n \t   \"{\\n\"\n-\t   \"  GOMP_offload_unregister (&__OFFLOAD_TABLE__, %d, __offload_target_data);\\n\"\n-\t   \"}\\n\", GOMP_DEVICE_INTEL_MIC);\n+\t   \"  GOMP_offload_unregister_ver (%#x, &__OFFLOAD_TABLE__, %d, &intelmic_data);\\n\"\n+\t   \"}\\n\",\n+\t   GOMP_VERSION_PACK (GOMP_VERSION, GOMP_VERSION_INTEL_MIC),\n+\t   GOMP_DEVICE_INTEL_MIC);\n \n   fclose (src_file);\n \n@@ -462,7 +473,7 @@ generate_host_descr_file (const char *host_compiler)\n }\n \n static const char *\n-prepare_target_image (const char *target_compiler, int argc, char **argv)\n+prepare_target_image (const char *target_compiler, int argc, char **argv, uint32_t *omp_requires)\n {\n   const char *target_descr_filename\n     = generate_target_descr_file (target_compiler);\n@@ -509,8 +520,26 @@ prepare_target_image (const char *target_compiler, int argc, char **argv)\n   obstack_ptr_grow (&argv_obstack, \"\");\n   obstack_ptr_grow (&argv_obstack, \"-o\");\n   obstack_ptr_grow (&argv_obstack, target_so_filename);\n+\n+  char *omp_requires_file;\n+  if (save_temps)\n+    omp_requires_file = concat (dumppfx, \".mkoffload.omp_requires\", NULL);\n+  else\n+    omp_requires_file = make_temp_file (\".mkoffload.omp_requires\");\n+  xputenv (concat (\"GCC_OFFLOAD_OMP_REQUIRES_FILE=\", omp_requires_file, NULL));\n+\n   compile_for_target (&argv_obstack);\n \n+  unsetenv(\"GCC_OFFLOAD_OMP_REQUIRES_FILE\");\n+  FILE *in = fopen (omp_requires_file, \"rb\");\n+  if (!in)\n+    fatal_error (input_location, \"cannot open omp_requires file %qs\",\n+\t\t omp_requires_file);\n+  if (fread (omp_requires, sizeof (*omp_requires), 1, in) != 1)\n+    fatal_error (input_location, \"cannot read omp_requires file %qs\",\n+\t\t omp_requires_file);\n+  fclose (in);\n+\n   /* Run objcopy.  */\n   char *rename_section_opt\n     = XALLOCAVEC (char, sizeof (\".data=\") + strlen (image_section_name));\n@@ -643,10 +672,13 @@ main (int argc, char **argv)\n   if (!dumppfx)\n     dumppfx = out_obj_filename;\n \n+  uint32_t omp_requires;\n+\n   const char *target_so_filename\n-    = prepare_target_image (target_compiler, argc, argv);\n+    = prepare_target_image (target_compiler, argc, argv, &omp_requires);\n \n-  const char *host_descr_filename = generate_host_descr_file (host_compiler);\n+  const char *host_descr_filename\n+    = generate_host_descr_file (host_compiler, omp_requires);\n \n   /* Perform partial linking for the target image and host side descriptor.\n      As a result we'll get a finalized object file with all offload data.  */"}, {"sha": "86f9d3050d908664ffe2920b56cd7eb5160be5de", "filename": "libgomp/target.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -2410,6 +2410,8 @@ GOMP_offload_register_ver (unsigned version, const void *host_table,\n   gomp_mutex_unlock (&register_lock);\n }\n \n+/* Legacy entry point.  */\n+\n void\n GOMP_offload_register (const void *host_table, int target_type,\n \t\t       const void *target_data)\n@@ -2462,6 +2464,8 @@ GOMP_offload_unregister_ver (unsigned version, const void *host_table,\n   gomp_mutex_unlock (&register_lock);\n }\n \n+/* Legacy entry point.  */\n+\n void\n GOMP_offload_unregister (const void *host_table, int target_type,\n \t\t\t const void *target_data)"}, {"sha": "107a3c2ac9de16f5d5d19c056682b815f47c1b50", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -348,6 +348,11 @@ proc libgomp_check_effective_target_offload_target { target_name } {\n     return 0\n }\n \n+# Return 1 if compiling for any offload target.\n+proc check_effective_target_offload_target_any { } {\n+    return [libgomp_check_effective_target_offload_target \"\"]\n+}\n+\n # Return 1 if compiling for offload target nvptx.\n proc check_effective_target_offload_target_nvptx { } {\n     return [libgomp_check_effective_target_offload_target \"nvptx\"]"}, {"sha": "ab9a8ddfcde2a3fe85a2c89f6810f5038c127da6", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-1.c?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do link { target { offload_target_nvptx || offload_target_amdgcn } } } */\n+/* { dg-do link { target offload_target_any } } */\n /* { dg-additional-sources requires-1-aux.c } */\n \n /* Check diagnostic by device-compiler's lto1."}, {"sha": "1c204c8a21e590c95b5e27743f08493356dba778", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-3.c?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do link { target { offload_target_nvptx || offload_target_amdgcn } } } */\n+/* { dg-do link { target offload_target_any } } */\n /* { dg-additional-sources requires-3-aux.c } */\n \n /* Check diagnostic by device-compiler's lto1."}, {"sha": "7473aa62e081fe4028cfecf87a591e9a01e37924", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-7.c?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do link { target { offload_target_nvptx || offload_target_amdgcn } } } */\n+/* { dg-do link { target offload_target_any } } */\n /* { dg-additional-sources requires-7-aux.c } */\n \n /* Check diagnostic by device-compiler's lto1."}, {"sha": "e957b1b5918a649a86e2a2a089d99ff4ad196e58", "filename": "libgomp/testsuite/libgomp.fortran/requires-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frequires-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef714539cb7cc1cd746312fd5dcc987bf167471/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frequires-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frequires-1.f90?ref=9ef714539cb7cc1cd746312fd5dcc987bf167471", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do link { target { offload_target_nvptx || offload_target_amdgcn } } }\n+! { dg-do link { target offload_target_any } }\n ! { dg-additional-sources requires-1-aux.f90 }\n \n ! Check diagnostic by device-compiler's lto1."}]}