{"sha": "a4dfaad2e5594d871fe00a1116005e28f95d644e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkZmFhZDJlNTU5NGQ4NzFmZTAwYTExMTYwMDVlMjhmOTVkNjQ0ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:20:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:20:44Z"}, "message": "Remove global call sets: gcse.c\n\nThis is another case in which we can conservatively treat partial\nkills as full kills.  Again this is in principle a bug fix for\nTARGET_HARD_REGNO_CALL_PART_CLOBBERED targets, but in practice\nit probably doesn't make a difference.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* gcse.c: Include function-abi.h.\n\t(compute_hash_table_work): Use insn_callee_abi to get the ABI of\n\tthe call insn target.  Invalidate partially call-clobbered\n\tregisters as well as fully call-clobbered ones.\n\nFrom-SVN: r276323", "tree": {"sha": "3233d2242a991f2f03d526e2a5f4919768029e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3233d2242a991f2f03d526e2a5f4919768029e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4dfaad2e5594d871fe00a1116005e28f95d644e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dfaad2e5594d871fe00a1116005e28f95d644e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4dfaad2e5594d871fe00a1116005e28f95d644e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dfaad2e5594d871fe00a1116005e28f95d644e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1b582720a39c3cb944aaff0298f721cdd034e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b582720a39c3cb944aaff0298f721cdd034e3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b582720a39c3cb944aaff0298f721cdd034e3f"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "1b1c31cf009d9e2741f873726c19c6fc43c54785", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4dfaad2e5594d871fe00a1116005e28f95d644e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4dfaad2e5594d871fe00a1116005e28f95d644e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4dfaad2e5594d871fe00a1116005e28f95d644e", "patch": "@@ -1,3 +1,10 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcse.c: Include function-abi.h.\n+\t(compute_hash_table_work): Use insn_callee_abi to get the ABI of\n+\tthe call insn target.  Invalidate partially call-clobbered\n+\tregisters as well as fully call-clobbered ones.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* function.c (aggregate_value_p): Work out which ABI the"}, {"sha": "aeb59c645e1705e00ebfdda1a4ed8f60efa34ec5", "filename": "gcc/gcse.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4dfaad2e5594d871fe00a1116005e28f95d644e/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4dfaad2e5594d871fe00a1116005e28f95d644e/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=a4dfaad2e5594d871fe00a1116005e28f95d644e", "patch": "@@ -160,6 +160,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n #include \"gcse.h\"\n #include \"gcse-common.h\"\n+#include \"function-abi.h\"\n \n /* We support GCSE via Partial Redundancy Elimination.  PRE optimizations\n    are a superset of those done by classic GCSE.\n@@ -1528,8 +1529,13 @@ compute_hash_table_work (struct gcse_hash_table_d *table)\n \t  if (CALL_P (insn))\n \t    {\n \t      hard_reg_set_iterator hrsi;\n-\t      EXECUTE_IF_SET_IN_HARD_REG_SET (regs_invalidated_by_call,\n-\t\t\t\t\t      0, regno, hrsi)\n+\n+\t      /* We don't track modes of hard registers, so we need\n+\t\t to be conservative and assume that partial kills\n+\t\t are full kills.  */\n+\t      HARD_REG_SET callee_clobbers\n+\t\t= insn_callee_abi (insn).full_and_partial_reg_clobbers ();\n+\t      EXECUTE_IF_SET_IN_HARD_REG_SET (callee_clobbers, 0, regno, hrsi)\n \t\trecord_last_reg_set_info (insn, regno);\n \n \t      if (! RTL_CONST_OR_PURE_CALL_P (insn)"}]}