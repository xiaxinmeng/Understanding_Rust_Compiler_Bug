{"sha": "2b50232a5df3dd82d389c4dbcd48940e308605e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI1MDIzMmE1ZGYzZGQ4MmQzODljNGRiY2Q0ODk0MGUzMDg2MDVlNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-06-01T08:22:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-06-01T08:22:14Z"}, "message": "winnt.c (i386_pe_encode_section_info): Remove obsolete kludge.\n\n\t* config/i386/winnt.c (i386_pe_encode_section_info) <FUNCTION_DECL>:\n\tRemove obsolete kludge.\nada/\n\t* gcc-interface/utils.c (create_var_decl_1): If an assembler name is\n\tspecified, let the target mangle it before settting.\n\t(create_subprog_decl): Likewise and move this treatment last.\n\nFrom-SVN: r223918", "tree": {"sha": "43969e14401b2e0465a07f94e200d7df6e120dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43969e14401b2e0465a07f94e200d7df6e120dce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b50232a5df3dd82d389c4dbcd48940e308605e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b50232a5df3dd82d389c4dbcd48940e308605e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b50232a5df3dd82d389c4dbcd48940e308605e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b50232a5df3dd82d389c4dbcd48940e308605e4/comments", "author": null, "committer": null, "parents": [{"sha": "b2fbb27f6c403a5fab85d0b17c17666c0a36548b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fbb27f6c403a5fab85d0b17c17666c0a36548b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2fbb27f6c403a5fab85d0b17c17666c0a36548b"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "5d695b59d0f935f17822096e4baf44dd13871954", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b50232a5df3dd82d389c4dbcd48940e308605e4", "patch": "@@ -1,3 +1,8 @@\n+2015-06-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/winnt.c (i386_pe_encode_section_info) <FUNCTION_DECL>:\n+\tRemove obsolete kludge.\n+\n 2015-06-01  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-reassoc.c (get_rank): Simplify."}, {"sha": "a61837284a4e01ccc749f787ec0e27e66dcf5d81", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2b50232a5df3dd82d389c4dbcd48940e308605e4", "patch": "@@ -1,3 +1,9 @@\n+2015-06-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (create_var_decl_1): If an assembler name is\n+\tspecified, let the target mangle it before settting.\n+\t(create_subprog_decl): Likewise and move this treatment last.\n+\n 2015-06-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/lang-specs.h (TARGET_VXWORKS_RTP): Move substitution to"}, {"sha": "7ec0974f912c998dc0f62a4fd64be43482f80a99", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=2b50232a5df3dd82d389c4dbcd48940e308605e4", "patch": "@@ -2428,7 +2428,13 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n   if (TREE_CODE (var_decl) == VAR_DECL)\n     {\n       if (asm_name)\n-\tSET_DECL_ASSEMBLER_NAME (var_decl, asm_name);\n+\t{\n+\t  /* Let the target mangle the name if this isn't a verbatim asm.  */\n+\t  if (*IDENTIFIER_POINTER (asm_name) != '*')\n+\t    asm_name = targetm.mangle_decl_assembler_name (var_decl, asm_name);\n+\n+\t  SET_DECL_ASSEMBLER_NAME (var_decl, asm_name);\n+\t}\n \n       if (global_bindings_p ())\n \trest_of_decl_compilation (var_decl, true, 0);\n@@ -3047,8 +3053,17 @@ create_subprog_decl (tree subprog_name, tree asm_name, tree subprog_type,\n   DECL_BY_REFERENCE (result_decl) = TREE_ADDRESSABLE (subprog_type);\n   DECL_RESULT (subprog_decl) = result_decl;\n \n+  process_attributes (&subprog_decl, &attr_list, true, gnat_node);\n+\n+  /* Add this decl to the current binding level.  */\n+  gnat_pushdecl (subprog_decl, gnat_node);\n+\n   if (asm_name)\n     {\n+      /* Let the target mangle the name if this isn't a verbatim asm.  */\n+      if (*IDENTIFIER_POINTER (asm_name) != '*')\n+\tasm_name = targetm.mangle_decl_assembler_name (subprog_decl, asm_name);\n+\n       SET_DECL_ASSEMBLER_NAME (subprog_decl, asm_name);\n \n       /* The expand_main_function circuitry expects \"main_identifier_node\" to\n@@ -3061,11 +3076,6 @@ create_subprog_decl (tree subprog_name, tree asm_name, tree subprog_type,\n \tDECL_NAME (subprog_decl) = main_identifier_node;\n     }\n \n-  process_attributes (&subprog_decl, &attr_list, true, gnat_node);\n-\n-  /* Add this decl to the current binding level.  */\n-  gnat_pushdecl (subprog_decl, gnat_node);\n-\n   /* Output the assembler code and/or RTL for the declaration.  */\n   rest_of_decl_compilation (subprog_decl, global_bindings_p (), 0);\n "}, {"sha": "4e07f03c47000b71a83ac5ae6f424d965216587a", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b50232a5df3dd82d389c4dbcd48940e308605e4/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=2b50232a5df3dd82d389c4dbcd48940e308605e4", "patch": "@@ -339,20 +339,6 @@ i386_pe_encode_section_info (tree decl, rtx rtl, int first)\n   switch (TREE_CODE (decl))\n     {\n     case FUNCTION_DECL:\n-      /* FIXME:  Imported stdcall names are not modified by the Ada frontend.\n-\t Check and decorate the RTL name now.  */\n-      if  (strcmp (lang_hooks.name, \"GNU Ada\") == 0)\n-\t{\n-\t  tree new_id;\n-\t  tree old_id = DECL_ASSEMBLER_NAME (decl);\n-\t  const char* asm_str = IDENTIFIER_POINTER (old_id);\n-\t  /* Do not change the identifier if a verbatim asmspec\n-\t     or if stdcall suffix already added. */\n-\t  if (!(*asm_str == '*' || strchr (asm_str, '@'))\n-\t      && (new_id = i386_pe_maybe_mangle_decl_assembler_name (decl,\n-\t\t\t\t\t\t\t\t     old_id)))\n-\t    XSTR (symbol, 0) = IDENTIFIER_POINTER (new_id);\n-\t}\n       break;\n \n     case VAR_DECL:"}]}