{"sha": "597601aa7a0f822816041d521fae7da6e883fa7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3NjAxYWE3YTBmODIyODE2MDQxZDUyMWZhZTdkYTZlODgzZmE3ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-14T10:23:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-14T10:42:04Z"}, "message": "libstdc++: Make comparison category comparisons noexcept (PR 94565)\n\n\tPR libstdc++/94565\n\t* libsupc++/compare (__unspec): Add noexcept-specifier to constructor.\n\t* testsuite/18_support/comparisons/categories/94565.cc: New test.", "tree": {"sha": "7154a44fd9069d2dc96d5f677159bb771717fcc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7154a44fd9069d2dc96d5f677159bb771717fcc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597601aa7a0f822816041d521fae7da6e883fa7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597601aa7a0f822816041d521fae7da6e883fa7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597601aa7a0f822816041d521fae7da6e883fa7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597601aa7a0f822816041d521fae7da6e883fa7d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eee265e6bd58bf48da70fef97f2ac7179a9f41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eee265e6bd58bf48da70fef97f2ac7179a9f41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eee265e6bd58bf48da70fef97f2ac7179a9f41c"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "aced89eec7d31dcbe2236e4aed7d8dcd0cb47c10", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=597601aa7a0f822816041d521fae7da6e883fa7d", "patch": "@@ -3,6 +3,12 @@\n \t* include/std/coroutine: Update coroutines builtin define,\n \tper n4861.\n \n+2020-04-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94565\n+\t* libsupc++/compare (__unspec): Add noexcept-specifier to constructor.\n+\t* testsuite/18_support/comparisons/categories/94565.cc: New test.\n+\n 2020-04-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* libsupc++/compare (compare_three_way): Fix noexcept-specifier."}, {"sha": "5f1df19e445f05643529557c89239d8ec9a31284", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=597601aa7a0f822816041d521fae7da6e883fa7d", "patch": "@@ -56,7 +56,7 @@ namespace std\n \n     struct __unspec\n     {\n-      constexpr __unspec(__unspec*) { }\n+      constexpr __unspec(__unspec*) noexcept { }\n     };\n   }\n "}, {"sha": "a4c62466a1824baf6f789e31cf8dd31658dfdf42", "filename": "libstdc++-v3/testsuite/18_support/comparisons/categories/94565.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcomparisons%2Fcategories%2F94565.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597601aa7a0f822816041d521fae7da6e883fa7d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcomparisons%2Fcategories%2F94565.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcomparisons%2Fcategories%2F94565.cc?ref=597601aa7a0f822816041d521fae7da6e883fa7d", "patch": "@@ -0,0 +1,66 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <compare>\n+\n+static_assert(noexcept(std::partial_ordering::less == 0));\n+static_assert(noexcept(std::partial_ordering::less != 0));\n+static_assert(noexcept(std::partial_ordering::less < 0));\n+static_assert(noexcept(std::partial_ordering::less > 0));\n+static_assert(noexcept(std::partial_ordering::less <= 0));\n+static_assert(noexcept(std::partial_ordering::less >= 0));\n+static_assert(noexcept(std::partial_ordering::less <=> 0));\n+static_assert(noexcept(0 == std::partial_ordering::less));\n+static_assert(noexcept(0 != std::partial_ordering::less));\n+static_assert(noexcept(0 < std::partial_ordering::less));\n+static_assert(noexcept(0 > std::partial_ordering::less));\n+static_assert(noexcept(0 <= std::partial_ordering::less));\n+static_assert(noexcept(0 >= std::partial_ordering::less));\n+static_assert(noexcept(0 <=> std::partial_ordering::less));\n+\n+static_assert(noexcept(std::weak_ordering::less == 0));\n+static_assert(noexcept(std::weak_ordering::less != 0));\n+static_assert(noexcept(std::weak_ordering::less < 0));\n+static_assert(noexcept(std::weak_ordering::less > 0));\n+static_assert(noexcept(std::weak_ordering::less <= 0));\n+static_assert(noexcept(std::weak_ordering::less >= 0));\n+static_assert(noexcept(std::weak_ordering::less <=> 0));\n+static_assert(noexcept(0 == std::weak_ordering::less));\n+static_assert(noexcept(0 != std::weak_ordering::less));\n+static_assert(noexcept(0 < std::weak_ordering::less));\n+static_assert(noexcept(0 > std::weak_ordering::less));\n+static_assert(noexcept(0 <= std::weak_ordering::less));\n+static_assert(noexcept(0 >= std::weak_ordering::less));\n+static_assert(noexcept(0 <=> std::weak_ordering::less));\n+\n+static_assert(noexcept(std::strong_ordering::less == 0));\n+static_assert(noexcept(std::strong_ordering::less != 0));\n+static_assert(noexcept(std::strong_ordering::less < 0));\n+static_assert(noexcept(std::strong_ordering::less > 0));\n+static_assert(noexcept(std::strong_ordering::less <= 0));\n+static_assert(noexcept(std::strong_ordering::less >= 0));\n+static_assert(noexcept(std::strong_ordering::less <=> 0));\n+static_assert(noexcept(0 == std::strong_ordering::less));\n+static_assert(noexcept(0 != std::strong_ordering::less));\n+static_assert(noexcept(0 < std::strong_ordering::less));\n+static_assert(noexcept(0 > std::strong_ordering::less));\n+static_assert(noexcept(0 <= std::strong_ordering::less));\n+static_assert(noexcept(0 >= std::strong_ordering::less));\n+static_assert(noexcept(0 <=> std::strong_ordering::less));"}]}