{"sha": "a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNkOTQzMjllOTA5ZDlkMTRiYTZhNmNmOWYzOThjZGFmYzg0ZGE1Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-04-03T17:23:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-04-03T17:23:27Z"}, "message": "re PR c++/64085 (ICE on C++14 lambda by-reference capture with an initializer)\n\n/cp\n2015-04-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/64085\n\t* lambda.c (add_capture): Use dependent_type_p for capture by\n\treference too.\n\n/testsuite\n2015-04-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/64085\n\t* g++.dg/cpp1y/lambda-init13.C: New.\n\nFrom-SVN: r221858", "tree": {"sha": "94fa7053e0114e4946c451a921ae30f9a4e0c703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94fa7053e0114e4946c451a921ae30f9a4e0c703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/comments", "author": null, "committer": null, "parents": [{"sha": "1dc15b0b9dd13b4ef6c7af420b2d3b6fe877d4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc15b0b9dd13b4ef6c7af420b2d3b6fe877d4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc15b0b9dd13b4ef6c7af420b2d3b6fe877d4a1"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "b84f33746187c68b3c3bfc6747f00a170f9b5da6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "patch": "@@ -1,3 +1,9 @@\n+2015-04-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/64085\n+\t* lambda.c (add_capture): Use dependent_type_p for capture by\n+\treference too.\n+\n 2015-04-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/65642"}, {"sha": "dd1c2d4337a2ee208e693f5f38a36d7d0a9ea102", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "patch": "@@ -506,7 +506,7 @@ add_capture (tree lambda, tree id, tree orig_init, bool by_reference_p,\n       if (by_reference_p)\n \t{\n \t  type = build_reference_type (type);\n-\t  if (!real_lvalue_p (initializer))\n+\t  if (!dependent_type_p (type) && !real_lvalue_p (initializer))\n \t    error (\"cannot capture %qE by reference\", initializer);\n \t}\n       else"}, {"sha": "3e87768625a4da8854c0632a331013ebca834e87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "patch": "@@ -1,3 +1,8 @@\n+2015-04-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/64085\n+\t* g++.dg/cpp1y/lambda-init13.C: New.\n+\n 2015-04-03  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/cpp0x/pr57101.C: Use proper type for size_t."}, {"sha": "9b1d139c6d4ad88914d1672220d1643ae9aca8ca", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init13.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d94329e909d9d14ba6a6cf9f398cdafc84da53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init13.C?ref=a3d94329e909d9d14ba6a6cf9f398cdafc84da53", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/64085\n+// { dg-do compile { target c++14 } }\n+\n+template<typename T>\n+struct reference_wrapper\n+{\n+  T& get() const noexcept;\n+};\n+\n+template<class T>\n+auto make_monad(reference_wrapper<T> arg) {\n+  return [&captive = arg.get()](auto&&) { return 1; };\n+}\n+\n+int main()\n+{\n+  make_monad(reference_wrapper<int&>());\n+}"}]}