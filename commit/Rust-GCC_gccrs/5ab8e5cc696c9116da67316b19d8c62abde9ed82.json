{"sha": "5ab8e5cc696c9116da67316b19d8c62abde9ed82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiOGU1Y2M2OTZjOTExNmRhNjczMTZiMTlkOGM2MmFiZGU5ZWQ4Mg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-05-25T21:04:50Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-05-25T21:04:50Z"}, "message": "compat.exp (compat-get-options-main): New.\n\n2004-05-25  Janis Johnson  <janis187@us.ibm.com>\n\n\t* lib/compat.exp (compat-get-options-main): New.\n\t(compat-get-options): Remove unneeded code, warn for ignored\n\tcommand.\n\t(compat-execute): Check flag set by dg-require-* commands.\n\nFrom-SVN: r82261", "tree": {"sha": "9442e071d86e61965050bb7ed1bfbfe7408cb953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9442e071d86e61965050bb7ed1bfbfe7408cb953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ab8e5cc696c9116da67316b19d8c62abde9ed82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab8e5cc696c9116da67316b19d8c62abde9ed82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab8e5cc696c9116da67316b19d8c62abde9ed82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab8e5cc696c9116da67316b19d8c62abde9ed82/comments", "author": null, "committer": null, "parents": [{"sha": "74f48aee289e44577577a8be59dd8233b592f504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74f48aee289e44577577a8be59dd8233b592f504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74f48aee289e44577577a8be59dd8233b592f504"}], "stats": {"total": 79, "additions": 63, "deletions": 16}, "files": [{"sha": "9f04f74c9de965bd915aac877468000ede15cdf7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab8e5cc696c9116da67316b19d8c62abde9ed82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab8e5cc696c9116da67316b19d8c62abde9ed82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ab8e5cc696c9116da67316b19d8c62abde9ed82", "patch": "@@ -1,5 +1,10 @@\n 2004-05-25  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* lib/compat.exp (compat-get-options-main): New.\n+\t(compat-get-options): Remove unneeded code, warn for ignored\n+\tcommand.\n+\t(compat-execute): Check flag set by dg-require-* commands.\n+\n \t* lib/compat.exp (compat-execute): Break up long lines.\n \n 2004-05-24  Janis Johnson  <janis187@us.ibm.com>"}, {"sha": "b2ce2b4e3ee6cf331bb923c9f02eb2f9c1f5b261", "filename": "gcc/testsuite/lib/compat.exp", "status": "modified", "additions": 58, "deletions": 16, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab8e5cc696c9116da67316b19d8c62abde9ed82/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab8e5cc696c9116da67316b19d8c62abde9ed82/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fcompat.exp?ref=5ab8e5cc696c9116da67316b19d8c62abde9ed82", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002 Free Software Foundation, Inc.\n+# Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -147,22 +147,52 @@ proc compat-run { testname objlist dest optall optfile optstr } {\n }\n \n #\n-# compat-get-options -- get special tool flags to use for a source file\n+# compat-get-options-main -- get target requirements for a test and\n+# options for the primary source file and the test as a whole\n #\n-# SRC is the full patchname of the source file.\n+# SRC is the full pathname of the primary source file.\n+#\n+proc compat-get-options-main { src } {\n+    # dg-options sets a variable called dg-extra-tool-flags.\n+    set dg-extra-tool-flags \"\"\n+\n+    # dg-require-* sets dg-do-what.\n+    upvar dg-do-what dg-do-what \n+\n+    set tmp [dg-get-options $src]\n+    foreach op $tmp {\n+\tset cmd [lindex $op 0]\n+\tif { ![string compare \"dg-options\" $cmd] \\\n+\t     || [string match \"dg-require-*\" $cmd]  } {\n+\t    set status [catch \"$op\" errmsg]\n+\t    if { $status != 0 } {\n+\t\tperror \"src: $errmsg for \\\"$op\\\"\\n\"\n+\t\tunresolved \"$src: $errmsg for \\\"$op\\\"\"\n+\t\treturn\n+\t    }\n+\t} elseif { ![string compare \"dg-xfail-if\" $cmd] } {\n+\t    warning \"compat.exp does not support $cmd in primary source file\"\n+\t} else {\n+\t    # Ignore unrecognized dg- commands, but warn about them.\n+\t    warning \"compat.exp does not support $cmd\"\n+\t}\n+    }\n+\n+    # Return flags to use for compiling the primary source file and for\n+    # linking.\n+    return ${dg-extra-tool-flags}\n+}\n+\n+#\n+# compat-get-options -- get special tool flags to use for a secondary\n+# source file\n+#\n+# SRC is the full pathname of the source file.\n # The result is a list of options to use.\n #\n # This code is copied from proc dg-test in dg.exp from DejaGNU.\n #\n proc compat-get-options { src } {\n-    # Define our own special function `unknown` so we catch spelling errors.\n-    # But first rename the existing one so we can restore it afterwards.\n-    catch {rename dg-save-unknown \"\"}\n-    rename unknown dg-save-unknown\n-    proc unknown { args } {\n-\treturn -code error \"unknown dg option: $args\"\n-    }\n-\n     # dg-options sets a variable called dg-extra-tool-flags.\n     set dg-extra-tool-flags \"\"\n \n@@ -181,16 +211,14 @@ proc compat-get-options { src } {\n \t\tunresolved \"$src: $errmsg for \\\"$op\\\"\"\n \t\treturn\n \t    }\n+\t} elseif { [string match \"dg-require-*\" $cmd] } {\n+\t    warning \"compat.exp does not support $cmd in secondary source files\"\n \t} else {\n \t    # Ignore unrecognized dg- commands, but warn about them.\n \t    warning \"compat.exp does not support $cmd\"\n \t}\n     }\n \n-    # Restore normal error handling.\n-    rename unknown \"\"\n-    rename dg-save-unknown unknown\n-\n     return ${dg-extra-tool-flags}\n }\n \n@@ -210,6 +238,21 @@ proc compat-execute { src1 sid use_alt } {\n     global testcase\n     global gluefile\n     global compiler_conditional_xfail_data\n+    global dg-do-what-default\n+\n+    # Get extra flags for this test from the primary source file, and\n+    # process other dg-* options that this suite supports.  Warn about\n+    # unsupported flags.\n+    verbose \"compat-execute: $src1\" 1\n+    set dg-do-what [list ${dg-do-what-default} \"\" P]\n+    set extra_flags_1 [compat-get-options-main $src1]\n+\n+    # Check whether this test is supported for this target.\n+    if { [lindex ${dg-do-what} 1 ] == \"N\" } {\n+\tunsupported \"$src1\"\n+\tverbose \"$src1 not supported on this target, skipping it\" 3\n+\treturn\n+    }\n \n     # Set up the names of the other source files.\n     regsub \"_main.*\" $src1 \"\" base\n@@ -220,7 +263,6 @@ proc compat-execute { src1 sid use_alt } {\n     # Use the dg-options mechanism to specify extra flags for this test. \n     # The extra flags in each file are used to compile that file, and the\n     # extra flags in *_main.* are also used for linking.\n-    set extra_flags_1 [compat-get-options $src1]\n     set extra_flags_2 [compat-get-options $src2]\n     set compile_xfail_2 $compiler_conditional_xfail_data\n     set extra_flags_3 [compat-get-options $src3]"}]}