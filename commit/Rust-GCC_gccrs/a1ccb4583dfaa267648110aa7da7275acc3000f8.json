{"sha": "a1ccb4583dfaa267648110aa7da7275acc3000f8", "node_id": "C_kwDOANBUbNoAKGExY2NiNDU4M2RmYWEyNjc2NDgxMTBhYTdkYTcyNzVhY2MzMDAwZjg", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2022-09-24T06:28:44Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2023-03-07T07:36:59Z"}, "message": "aarch64: testsuite: disable PIE for tests with large code model [PR70150]\n\nThese tests set large code model with -mcmodel=large or target pragma for\nAArch64.  But if GCC is configured with --enable-default-pie, it triggers\n\"sorry: unimplemented: code model large with -fpic\".  Disable PIE to make\navoid the issue.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/70150\n\t* gcc.dg/tls/pr78796.c (dg-additional-options): Add -fno-pie\n\t-no-pie for aarch64-*-*.\n\t* gcc.target/aarch64/pr63304_1.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr70120-2.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr78733.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr79041-2.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr94530.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr94577.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/reload-valid-spoff.c (dg-options): Add\n\t-fno-pie.", "tree": {"sha": "0978521c4cbd3751ba85dfe72eba11f209e2e511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0978521c4cbd3751ba85dfe72eba11f209e2e511"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ccb4583dfaa267648110aa7da7275acc3000f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSR0PV2MB+STX3t3OisqtIOGecQ4wUCZAbpmwAKCRCsqtIOGecQ\n44+HAP9Z2JWPBQHw2SDfOuppyd7VQGjZWDP/GhrHWfS407IjagEA8NB/H5djtE1C\nMa0T64cK89rXMBU4EThwKg/kvcEj9Ag=\n=cr80\n-----END PGP SIGNATURE-----", "payload": "tree 0978521c4cbd3751ba85dfe72eba11f209e2e511\nparent f30f04b1fbd4b4e13a7535fad8e698c7b24db9b8\nauthor Xi Ruoyao <xry111@xry111.site> 1664000924 +0800\ncommitter Xi Ruoyao <xry111@xry111.site> 1678174619 +0800\n\naarch64: testsuite: disable PIE for tests with large code model [PR70150]\n\nThese tests set large code model with -mcmodel=large or target pragma for\nAArch64.  But if GCC is configured with --enable-default-pie, it triggers\n\"sorry: unimplemented: code model large with -fpic\".  Disable PIE to make\navoid the issue.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/70150\n\t* gcc.dg/tls/pr78796.c (dg-additional-options): Add -fno-pie\n\t-no-pie for aarch64-*-*.\n\t* gcc.target/aarch64/pr63304_1.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr70120-2.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr78733.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr79041-2.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr94530.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/pr94577.c (dg-options): Add -fno-pie.\n\t* gcc.target/aarch64/reload-valid-spoff.c (dg-options): Add\n\t-fno-pie.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ccb4583dfaa267648110aa7da7275acc3000f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ccb4583dfaa267648110aa7da7275acc3000f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ccb4583dfaa267648110aa7da7275acc3000f8/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30f04b1fbd4b4e13a7535fad8e698c7b24db9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30f04b1fbd4b4e13a7535fad8e698c7b24db9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30f04b1fbd4b4e13a7535fad8e698c7b24db9b8"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "96f87d47ba47ad55301861b8b5c4f3a039671211", "filename": "gcc/testsuite/gcc.dg/tls/pr78796.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr78796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr78796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr78796.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,7 +1,7 @@\n /* PR target/78796 */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-additional-options \"-mcmodel=large\" { target aarch64-*-* } } */\n+/* { dg-additional-options \"-mcmodel=large -fno-pie -no-pie\" { target aarch64-*-* } } */\n /* { dg-require-effective-target tls_runtime } */\n /* { dg-add-options tls } */\n "}, {"sha": "5d519d817ccdfe85849496dec654b1e8ac7a2888", "filename": "gcc/testsuite/gcc.target/aarch64/pr63304_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-O1 --save-temps\" } */\n+/* { dg-options \"-O1 --save-temps -fno-pie\" } */\n #pragma GCC push_options\n #pragma GCC target (\"+nothing+simd,cmodel=small\")\n "}, {"sha": "8f5cdc93fe3f3157dbd10143b04f116d600401e5", "filename": "gcc/testsuite/gcc.target/aarch64/pr70120-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70120-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70120-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70120-2.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-Og -freorder-functions -g3 -mcmodel=large\" } */\n+/* { dg-options \"-Og -freorder-functions -g3 -mcmodel=large -fno-pie\" } */\n \n typedef short v32u16 __attribute__ ((vector_size (32)));\n typedef int v32u32 __attribute__ ((vector_size (32)));"}, {"sha": "8556ef3f37187f0bf52d7113ab011bf0f8be2b84", "filename": "gcc/testsuite/gcc.target/aarch64/pr78733.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78733.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78733.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78733.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcmodel=large -mpc-relative-literal-loads\" } */\n+/* { dg-options \"-O2 -mcmodel=large -mpc-relative-literal-loads -fno-pie\" } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-skip-if \"-mcmodel=large, no support for -fpic\" { aarch64-*-* }  { \"-fpic\" } { \"\" } } */\n "}, {"sha": "8556ef3f37187f0bf52d7113ab011bf0f8be2b84", "filename": "gcc/testsuite/gcc.target/aarch64/pr79041-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcmodel=large -mpc-relative-literal-loads\" } */\n+/* { dg-options \"-O2 -mcmodel=large -mpc-relative-literal-loads -fno-pie\" } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-skip-if \"-mcmodel=large, no support for -fpic\" { aarch64-*-* }  { \"-fpic\" } { \"\" } } */\n "}, {"sha": "5dfdbe3311d741349c46b4ce3ad3f5819063f894", "filename": "gcc/testsuite/gcc.target/aarch64/pr94530.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94530.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94530.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94530.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-Os -mcpu=falkor -mpc-relative-literal-loads -mcmodel=large\" } */\n+/* { dg-options \"-Os -mcpu=falkor -mpc-relative-literal-loads -mcmodel=large -fno-pie\" } */\n \n extern void bar(const char *);\n "}, {"sha": "d51799fb0bb67999ed1374e2d65a2b0d353b310a", "filename": "gcc/testsuite/gcc.target/aarch64/pr94577.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mcmodel=large -mabi=ilp32\" } */\n+/* { dg-options \"-mcmodel=large -mabi=ilp32 -fno-pie\" } */\n \n void\n foo ()"}, {"sha": "37e00ac9aa1a8fcd883ea1d28d6608b1ae7746d7", "filename": "gcc/testsuite/gcc.target/aarch64/reload-valid-spoff.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Freload-valid-spoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ccb4583dfaa267648110aa7da7275acc3000f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Freload-valid-spoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Freload-valid-spoff.c?ref=a1ccb4583dfaa267648110aa7da7275acc3000f8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-O2 -mcmodel=large -fno-builtin\" }  */\n+/* { dg-options \"-O2 -mcmodel=large -fno-builtin -fno-pie\" }  */\n /* { dg-skip-if \"-mcmodel=large -fPIC not currently supported\" { aarch64-*-* }  { \"-fPIC\" } { \"\" } } */\n \n typedef long unsigned int size_t;"}]}