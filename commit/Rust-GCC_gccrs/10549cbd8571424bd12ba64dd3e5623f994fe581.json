{"sha": "10549cbd8571424bd12ba64dd3e5623f994fe581", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1NDljYmQ4NTcxNDI0YmQxMmJhNjRkZDNlNTYyM2Y5OTRmZTU4MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-08-26T06:36:27Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-08-26T06:36:27Z"}, "message": "H.J. Lu's SMP patch.\n\nFrom-SVN: r14924", "tree": {"sha": "ec1decbde0da8158032c896789dc3db05e4db322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1decbde0da8158032c896789dc3db05e4db322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10549cbd8571424bd12ba64dd3e5623f994fe581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10549cbd8571424bd12ba64dd3e5623f994fe581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10549cbd8571424bd12ba64dd3e5623f994fe581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10549cbd8571424bd12ba64dd3e5623f994fe581/comments", "author": null, "committer": null, "parents": [{"sha": "818045b6d8b8fad3b60cbd602499025cb9206d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818045b6d8b8fad3b60cbd602499025cb9206d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818045b6d8b8fad3b60cbd602499025cb9206d19"}], "stats": {"total": 110, "additions": 88, "deletions": 22}, "files": [{"sha": "7f73e555698cba8b2e0259d384290e56407e8a9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -1,3 +1,11 @@\n+Mon Aug 25 23:27:10 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n+\n+\t* objc/Make-lang.in ($(OBJC_O)): Also depend on cc1obj.\n+\n+Mon Aug 25 23:27:10 1997  Jim Meyering <meyering@eng.ascend.com>\n+\n+\t* objc/Make-lang.in ($(OBJC_O)): Also depend on $(GCC_PASSES).\n+\n Mon Aug 25 13:12:24 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* haifa-sched.c (find_pre_sched_live): Remove #if 0 code."}, {"sha": "62de9d5ad2ec8af1a967788b80b5dca77890f79f", "filename": "gcc/f/ChangeLog.egcs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog.egcs?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -1,3 +1,15 @@\n+Mon Aug 25 23:24:32 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n+\n+\t* Make-lang.in ($(srcdir)/f/runtime/configure,\n+\t$(srcdir)/f/runtime/libU77/configure, f77.mostlyclean,\n+\tf77.clean, f77.distclean, f77.maintainer-clean, f77.realclean):\n+\tHandle absolute pathname of $(srcdir).\n+\t(stmp-f2c.h): New.\n+\t(include/f2c.h, f/runtime/Makefile, f/runtime/libF77/Makefile,\n+\tf/runtime/libI77/Makefile, f/runtime/libU77/Makefile): Only\n+\tdepend on stmp-f2c.h.\n+\t(f77.maintainer-clean): Don't make itself.\n+\n Sun Aug 24 17:00:27 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* Make-lang.in (f77.install-info): Don't cd into srcdir.  Add srcdir"}, {"sha": "f0cee37e6b0a1081a114794f3b40b2ced70b36bd", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -264,11 +264,7 @@ f77-runtime-unsafe:\n # configure, not a Cygnus-type one.  It needs to be run *after* the\n # appropriate (cross-)compiler has been built, thus depend on GCC_PARTS.\n # NB, sh uses the *first* value of $a from `a=fred a=joe prog'.\n-include/f2c.h \\\n-f/runtime/Makefile \\\n-f/runtime/libF77/Makefile \\\n-f/runtime/libI77/Makefile \\\n-f/runtime/libU77/Makefile: \\\n+stmp-f2c.h: \\\n   $(srcdir)/f/runtime/f2c.h.in \\\n   $(srcdir)/f/com.h $(srcdir)/f/proj.h \\\n   $(srcdir)/f/runtime/Makefile.in \\\n@@ -279,6 +275,7 @@ f/runtime/libU77/Makefile: \\\n   $(srcdir)/f/runtime/libU77/configure \\\n   $(GCC_PARTS)\n # The make \"stage?\" in compiler spec. is fully qualified as above\n+\trm -f stmp-f2c.h\n \ttop=`pwd`; \\\n \tsrc=`cd $(srcdir); pwd`; \\\n \t  cd f/runtime; \\\n@@ -295,6 +292,14 @@ f/runtime/libU77/Makefile: \\\n \t     *) echo '$(GCC_FOR_TARGET)';; esac`\" \\\n \t  $(F77_FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) \\\n \t  $${src}/f/runtime/libU77/configure --srcdir=$${src}/f/runtime/libU77\n+\ttouch stmp-f2c.h\n+\n+# Support parallel build.\n+include/f2c.h \\\n+f/runtime/Makefile \\\n+f/runtime/libF77/Makefile \\\n+f/runtime/libI77/Makefile \\\n+f/runtime/libU77/Makefile: stmp-f2c.h\n \n #For now, omit f2c stuff.  -- burley\n #f2c: stmp-headers f/f2c/Makefile\n@@ -346,10 +351,15 @@ $(srcdir)/f/NEWS: f/news0.texi f/news.texi\n \t  --no-validate news0.texi -o NEWS\n \n $(srcdir)/f/runtime/configure: $(srcdir)/f/runtime/configure.in \n-\tcd f/runtime && $(MAKE) srcdir=../../$(srcdir)/f/runtime -f ../../$(srcdir)/f/runtime/Makefile.in rebuilt\n+\tcase $(srcdir) in \\\n+\t/*) cd f/runtime && $(MAKE) srcdir=$(srcdir)/f/runtime -f $(srcdir)/f/runtime/Makefile.in rebuilt;; \\\n+\t*) cd f/runtime && $(MAKE) srcdir=../../$(srcdir)/f/runtime -f ../../$(srcdir)/f/runtime/Makefile.in rebuilt;; \\\n+\tesac\n $(srcdir)/f/runtime/libU77/configure: $(srcdir)/f/runtime/libU77/configure.in\n-\tcd f/runtime && $(MAKE) srcdir=../../$(srcdir)/f/runtime -f ../../$(srcdir)/f/runtime/Makefile.in rebuilt\n-\n+\tcase $(srcdir) in \\\n+\t/*) cd f/runtime && $(MAKE) srcdir=$(srcdir)/f/runtime -f $(srcdir)/f/runtime/Makefile.in rebuilt;; \\\n+\t*) cd f/runtime && $(MAKE) srcdir=../../$(srcdir)/f/runtime -f ../../$(srcdir)/f/runtime/Makefile.in rebuilt;; \\\n+\tesac\n f77.rebuilt: $(srcdir)/f/g77.info $(srcdir)/f/BUGS $(srcdir)/f/INSTALL \\\n   $(srcdir)/f/NEWS $(srcdir)/f/runtime/configure \\\n   $(srcdir)/f/runtime/libU77/configure\n@@ -494,11 +504,20 @@ f77.uninstall:\n f77.mostlyclean:\n \t-rm -f f/*$(objext)\n \t-rm -f f/fini f/f771 f/stamp-str f/str-*.h f/str-*.j f/intdoc\n-\t-cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in mostlyclean\n+\t-case $(srcdir) in \\\n+\t/*) cd f/runtime; $(MAKE) -f $(srcdir)/f/runtime/Makefile.in mostlyclean;; \\\n+\t*) cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in mostlyclean;; \\\n+\tesac\n f77.clean:\n-\t-cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in clean\n+\t-case $(srcdir) in \\\n+\t/*) cd f/runtime; $(MAKE) -f $(srcdir)/f/runtime/Makefile.in clean;; \\\n+\t*) cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in clean;; \\\n+\tesac\n f77.distclean:\n-\t-cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in distclean\n+\t-case $(srcdir) in \\\n+\t/*) cd f/runtime; $(MAKE) -f $(srcdir)/f/runtime/Makefile.in distclean;; \\\n+\t*) cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in distclean;; \\\n+\tesac\n \t-rm -f f/Makefile\n # like gcc's extraclean, which does clean f/ for us, but not f/gbe,\n # f/runtime, f/runtime/libF77, f/runtime/libI77, and f/runtime/libU77,\n@@ -516,8 +535,10 @@ f77.extraclean: f77.distclean\n \t-rm -f f/*/*/*lose f/*/*/*.s f/*/*/*.s[0-9] f/*/*/*.i\n # realclean is the pre-2.7.0 name for maintainer-clean\n f77.maintainer-clean f77.realclean: f77.distclean\n-\t-cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in maintainer-clean\n-\t-$(MAKE) f77.maintainer-clean\n+\t-case $(srcdir) in \\\n+\t/*) cd f/runtime; $(MAKE) -f $(srcdir)/f/runtime/Makefile.in maintainer-clean;; \\\n+\t*) cd f/runtime; $(MAKE) -f ../../$(srcdir)/f/runtime/Makefile.in maintainer-clean;; \\\n+\tesac\n \t-rm -f f/g77.info* f/g77.*aux f/TAGS f/BUGS f/INSTALL f/NEWS f/intdoc.texi\n # Stage hooks:\n # The main makefile has already created stage?/f."}, {"sha": "fbfc0f962ca96fe46d63e2d8d6f9a8cef8bf422a", "filename": "gcc/f/runtime/ChangeLog.egcs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FChangeLog.egcs?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -1,3 +1,11 @@\n+Mon Aug 25 23:26:05 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n+\n+\t* Makefile.in (mostlyclean, clean): Check if Makefile exists\n+\tbefore using it. Remove stamp-*.\n+\t(stamp-libi77, stamp-libf77, stamp-libu77): New.\n+\t(stamp-lib): Only depend on stamp-libi77 stamp-libf77\n+\tstamp-libu77\n+\n Mon Aug 25 01:40:01 1997  Jim Wilson  (wilson@cygnus.com)\n \n \t* configure.in: Always make sure RANLIB_TEST is set."}, {"sha": "6c4ea100332f749362a55ed9b00711ef97600e37", "filename": "gcc/f/runtime/Makefile.in", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2Fruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Ff%2Fruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FMakefile.in?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -169,12 +169,12 @@ CROSS_FLAGS_TO_PASS = \\\n \tRANLIB_TEST=\"$(RANLIB_TEST)\" \\\n \tSHELL=\"$(SHELL)\"\n \n-all: ../../include/f2c.h libi77 libf77 libu77 $(lib)\n+all: ../../include/f2c.h $(lib)\n \n $(lib): stamp-lib ; @true\n-stamp-lib: $(FOBJ) $(IOBJ) $(UOBJ)\n+stamp-lib: stamp-libf77 stamp-libi77 stamp-libu77\n \trm -f stamp-lib\n-\t$(AR) $(AR_FLAGS) $(lib) $?\n+\t$(AR) $(AR_FLAGS) $(lib) $(FOBJ) $(IOBJ) $(UOBJ)\n \tfor name in $(F2CEXT); \\\n \tdo \\\n \t  echo $${name}; \\\n@@ -189,26 +189,32 @@ stamp-lib: $(FOBJ) $(IOBJ) $(UOBJ)\n \t  else true; fi\n \ttouch stamp-lib\n \n-libi77: libI77/Makefile\n+stamp-libi77: libI77/Makefile\n+\trm -f stamp-libi77\n \tif test \"$(CROSS)\"; then \\\n \t  cd libI77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \\\n \telse \\\n \t  cd libI77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \\\n \tfi\n+\ttouch stamp-libi77\n \n-libf77: libF77/Makefile\n+stamp-libf77: libF77/Makefile\n+\trm -f stamp-libf77\n \tif test \"$(CROSS)\"; then \\\n \t  cd libF77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \\\n \telse \\\n \t  cd libF77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \\\n \tfi\n+\ttouch stamp-libf77\n \n-libu77: libU77/Makefile\n+stamp-libu77: libU77/Makefile\n+\trm -f stamp-libu77\n \tif test \"$(CROSS)\"; then \\\n \t  cd libU77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \\\n \telse \\\n \t  cd libU77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \\\n \tfi\n+\ttouch stamp-libu77\n \n ${srcdir}/configure: ${srcdir}/configure.in\n \trm -f config.cache && cd ${srcdir} && autoconf && rm -f config.cache\n@@ -231,11 +237,20 @@ libU77/Makefile: $(srcdir)/libU77/Makefile.in\n #\tcd libU77; $(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status --recheck\n \n mostlyclean:\n-\tfor i in libI77 libF77 libU77; do cd $$i; $(MAKE) -f Makefile mostlyclean; cd ..;  done\n+\t-rm -f stamp-*\n+\tfor i in libI77 libF77 libU77; do \\\n+\t  if [ -f $$i/Makefile ]; then \\\n+\t    cd $$i; $(MAKE) -f Makefile mostlyclean; cd ..; \\\n+\t  fi; \\\n+\tdone\n \n clean:\n-\t-rm -f config.log config.cache\n-\tfor i in libI77 libF77 libU77; do cd $$i; $(MAKE) -f Makefile clean; cd ..;  done\n+\t-rm -f config.log config.cache stamp-*\n+\tfor i in libI77 libF77 libU77; do \\\n+\t  if [ -f $$i/Makefile ]; then \\\n+\t    cd $$i; $(MAKE) -f Makefile clean; cd ..; \\\n+\t  fi; \\\n+\tdone\n \n distclean: clean\n \t-rm -f Makefile lib?77/Makefile config.status libU77/config.status ../../include/f2c.h"}, {"sha": "d3001edb732e1c6377fe9999775eacd0c61c4ff2", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10549cbd8571424bd12ba64dd3e5623f994fe581/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=10549cbd8571424bd12ba64dd3e5623f994fe581", "patch": "@@ -176,6 +176,8 @@ $(srcdir)/objc/libobjc_entry.o: $(srcdir)/objc/libobjc_entry.c\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n \t-c $(srcdir)/objc/libobjc_entry.c -o $@\n \n+$(OBJC_O): $(GCC_PASSES) cc1obj\n+\n # Build the Objective C runtime library.\n libobjc.a: cc1obj specs stmp-int-hdrs libgcc2.ready \\\n  $(USE_COLLECT2) $(EXTRA_PARTS) $(OBJC_O)"}]}