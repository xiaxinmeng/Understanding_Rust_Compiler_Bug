{"sha": "82bb2b597d775a92172cc4d3832345a262fe8ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJiYjJiNTk3ZDc3NWE5MjE3MmNjNGQzODMyMzQ1YTI2MmZlOGNlNQ==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-08T20:07:51Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-08T20:07:51Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r421", "tree": {"sha": "c3b6205f52f179d958d37ddff4cbcfdc774d8667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3b6205f52f179d958d37ddff4cbcfdc774d8667"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82bb2b597d775a92172cc4d3832345a262fe8ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82bb2b597d775a92172cc4d3832345a262fe8ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82bb2b597d775a92172cc4d3832345a262fe8ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82bb2b597d775a92172cc4d3832345a262fe8ce5/comments", "author": null, "committer": null, "parents": [{"sha": "d69eb909eba2eb52b5daa458c72182a48db502e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69eb909eba2eb52b5daa458c72182a48db502e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69eb909eba2eb52b5daa458c72182a48db502e2"}], "stats": {"total": 67, "additions": 44, "deletions": 23}, "files": [{"sha": "9c4e3e064bc7354dcda69963b23e83a22e7968bc", "filename": "gcc/config/i386/mach.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82bb2b597d775a92172cc4d3832345a262fe8ce5/gcc%2Fconfig%2Fi386%2Fmach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82bb2b597d775a92172cc4d3832345a262fe8ce5/gcc%2Fconfig%2Fi386%2Fmach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmach.h?ref=82bb2b597d775a92172cc4d3832345a262fe8ce5", "patch": "@@ -20,7 +20,7 @@\n   return ax;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_divsi3(a,b)\t\t\t\t\t\t\t\\\n+#define perform_divsi3(a,b)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n@@ -41,7 +41,7 @@\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_modsi3(a,b)\t\t\t\t\t\t\t\\\n+#define perform_modsi3(a,b)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n@@ -51,7 +51,7 @@\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_fix_truncdfsi2(a)\t\t\t\t\t\t\\\n+#define perform_fixdfsi(a)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   auto unsigned short ostatus;\t\t\t\t\t\t\\\n   auto unsigned short nstatus;\t\t\t\t\t\t\\\n@@ -66,7 +66,7 @@\n   asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n   asm volatile (\"fldl %0\" : /* no outputs */ : \"m\" (a));\t\t\\\n   asm volatile (\"fistpl %0\" : \"=m\" (ret));\t\t\t\t\\\n-  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n+  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (ostatus));\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   return ret;\t\t\t\t\t\t\t\t\\\n }"}, {"sha": "c9bde596c0f48a9ee03f7ccf787f4826b2df242f", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 40, "deletions": 19, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82bb2b597d775a92172cc4d3832345a262fe8ce5/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82bb2b597d775a92172cc4d3832345a262fe8ce5/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=82bb2b597d775a92172cc4d3832345a262fe8ce5", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler.  \n+/* Definitions of target machine for GNU compiler.\n    Encore Multimax (OSF/1 with OSF/rose) version.\n    Copyright (C) 1991 Free Software Foundation, Inc.\n \n@@ -45,21 +45,26 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #endif\n #define CPP_PREDEFINES \"-DOSF -DOSF1 -Dunix -Di386\"\n \n-#ifdef  CPP_SPEC  \n+#ifdef  CPP_SPEC\n #undef  CPP_SPEC\n #endif\n-#define CPP_SPEC       \"%{.S:\t-D__LANGUAGE_ASSEMBLY__\t\t\t\\\n-\t\t\t\t-D_LANGUAGE_ASSEMBLY\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_ASSEMBLY}}\t\t\\\n-\t\t\t %{!.S:\t-D__LANGUAGE_C__\t\t\t\\\n-\t\t\t\t-D_LANGUAGE_C\t\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_C}}\"\n+#define CPP_SPEC \"\\\n+%{.S:\t-D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D__LANGUAGE_OBJECTIVE_C} \\\n+%{!.S:\t-D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n \n #ifdef  CC1_SPEC\n #undef  CC1_SPEC\n #endif\n #define CC1_SPEC       \"\"\n \n+#ifndef CC1PLUS_SPEC\n+#define CC1PLUS_SPEC \"%{!fgnu-binutils: -fno-gnu-binutils}\"\n+#endif\n+\n #ifdef ASM_SPEC\n #undef ASM_SPEC\n #endif\n@@ -87,7 +92,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #endif\n #define LIBG_SPEC      \"\"\n \n-#ifdef  STARTFILE_SPEC  \n+#ifdef  STARTFILE_SPEC\n #undef  STARTFILE_SPEC\n #endif\n #define STARTFILE_SPEC \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n@@ -99,17 +104,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define MACHINE_TYPE   ((!TARGET_486) ? \"80386 running OSF/1 with OSF/rose objects\" :  \\\n                                         \"80486 running OSF/1 with OSF/rose objects\")\n \n-#if 0\n-#ifdef  MD_EXEC_PREFIX  \n+#ifdef  MD_EXEC_PREFIX\n #undef  MD_EXEC_PREFIX\n #endif\n #define MD_EXEC_PREFIX\t\t\"/usr/ccs/gcc/\"\n \n-#ifdef  MD_STARTFILE_PREFIX  \n+#ifdef  MD_STARTFILE_PREFIX\n #undef  MD_STARTFILE_PREFIX\n #endif\n #define MD_STARTFILE_PREFIX\t\"/usr/ccs/lib/\"\n-#endif\n \n /* Tell final.c we don't need a label passed to mcount.  */\n #define NO_PROFILE_DATA\n@@ -119,9 +122,27 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Tell collect that the object format is OSF/rose.  */\n #define OBJECT_FORMAT_ROSE\n-\f\n \n-/* Defines to be able to build gnulib with GCC.  */\n+/* Use atexit for static constructors/destructors, instead of defining\n+   our own exit function.  */\n+#define HAVE_ATEXIT\n+\n+/* If defined, a C string constant for the assembler operation to\n+   identify the following data as initialization code.  If not\n+   defined, GNU CC will assume such a section does not exist.\n+\n+   OSF/rose doesn't presently have an init section, but this macro\n+   also controls whether or not __main is called from main, collect\n+   will however build an initialization section directly.  */\n+\n+#define INIT_SECTION_ASM_OP \".init\"\n+\n+/* Define this macro meaning that gcc should find the library 'libgcc.a'\n+   by hand, rather than passing the argeument '-lgcc' to tell the linker\n+   to do the search */\n+#define LINK_LIBGCC_SPECIAL\n+\f\n+/* Defines to be able to build libgcc.a with GCC.  */\n \n #define perform_udivsi3(a,b)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -134,7 +155,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   return ax;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_divsi3(a,b)\t\t\t\t\t\t\t\\\n+#define perform_divsi3(a,b)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n@@ -155,7 +176,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_modsi3(a,b)\t\t\t\t\t\t\t\\\n+#define perform_modsi3(a,b)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n@@ -165,7 +186,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_fix_truncdfsi2(a)\t\t\t\t\t\t\\\n+#define perform_fixdfsi(a)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   auto unsigned short ostatus;\t\t\t\t\t\t\\\n   auto unsigned short nstatus;\t\t\t\t\t\t\\\n@@ -180,7 +201,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n   asm volatile (\"fldl %0\" : /* no outputs */ : \"m\" (a));\t\t\\\n   asm volatile (\"fistpl %0\" : \"=m\" (ret));\t\t\t\t\\\n-  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n+  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (ostatus));\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   return ret;\t\t\t\t\t\t\t\t\\\n }"}]}