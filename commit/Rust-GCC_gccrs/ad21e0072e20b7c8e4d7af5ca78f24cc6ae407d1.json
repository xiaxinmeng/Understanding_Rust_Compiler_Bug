{"sha": "ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyMWUwMDcyZTIwYjdjOGU0ZDdhZjVjYTc4ZjI0Y2M2YWU0MDdkMQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2020-02-11T20:01:59Z"}, "committer": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2020-02-11T20:01:59Z"}, "message": "Add ppc_ieee128_ok target-supports proc\n\n  Add a target_supports entry to check that the __ieee128 keyword\nis understood by the target.\nAlso add a dg-requires check to the existing pr92796 testcase.\n\n    [testsuite]\n\t* lib/target-supports.exp (check_effective_target_ppc_ieee128_ok): New.\n\t* gcc.target/powerpc/pr92796.c: Add a require-effective-target\n\tstatement for ppc_ieee128_ok.", "tree": {"sha": "dbb4bf21a0f8eca68954399f10cab0d6dcd6f3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbb4bf21a0f8eca68954399f10cab0d6dcd6f3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a775242ea296849a34ce27de179eaaec411e880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a775242ea296849a34ce27de179eaaec411e880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a775242ea296849a34ce27de179eaaec411e880"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8120020e315b4e52e23d18be0be5a659238d5bcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "patch": "@@ -1,3 +1,9 @@\n+2020-02-11  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_ppc_ieee128_ok): New.\n+\t* gcc.target/powerpc/pr92796.c: Add a require-effective-target\n+\tstatement for ppc_ieee128_ok.\n+\n 2020-02-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93374"}, {"sha": "da4b6a47a6aefe187ea6ce68f33c00f8c363cfdc", "filename": "gcc/testsuite/gcc.target/powerpc/pr92796.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr92796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr92796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr92796.c?ref=ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fstack-protector-strong -mcpu=power8\" } */\n+/* { dg-require-effective-target ppc_ieee128_ok } */\n \n typedef union\n {"}, {"sha": "fb177c54aa8247af525154736dc8c2637f8e4c2c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ad21e0072e20b7c8e4d7af5ca78f24cc6ae407d1", "patch": "@@ -2250,6 +2250,25 @@ proc check_ppc_float128_hw_available { } {\n     }]\n }\n \n+# See if the __ieee128 keyword is understood.\n+proc check_effective_target_ppc_ieee128_ok { } {\n+    return [check_cached_effective_target ppc_ieee128_ok {\n+\t# disable on AIX.\n+\tif { [istarget *-*-aix*] } {\n+\t    expr 0\n+\t} else {\n+\t    set options \"-mfloat128\"\n+\t    check_runtime_nocache ppc_ieee128_ok {\n+\t\tint main()\n+\t\t{\n+\t\t  __ieee128 a;\n+\t\t  return 0;\n+\t\t}\n+\t    } $options\n+\t}\n+    }]\n+}\n+\n # Return 1 if the target supports executing VSX instructions, 0\n # otherwise.  Cache the result.\n "}]}