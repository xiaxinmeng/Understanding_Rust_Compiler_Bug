{"sha": "47fe96341d28ff9e68990038b1beb8a760ff26d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdmZTk2MzQxZDI4ZmY5ZTY4OTkwMDM4YjFiZWI4YTc2MGZmMjZkMA==", "commit": {"author": {"name": "Martin Li\u0161ka", "email": "mliska@suse.cz", "date": "2020-06-11T08:43:36Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-12T07:32:53Z"}, "message": "Fix few -Wformat-diag warnings.\n\nReady for master?\n\nThanks,\nMartin\n\ngcc/ChangeLog:\n\n\t* cgraphunit.c (process_symver_attribute): Wrap weakref keyword.\n\t* dbgcnt.c (dbg_cnt_set_limit_by_index): Do not print extra new\n\tline.\n\t* lto-wrapper.c (merge_and_complain): Wrap option names.", "tree": {"sha": "b0d4de7e957fb534d202d1afa1a9abf9faaecdf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d4de7e957fb534d202d1afa1a9abf9faaecdf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47fe96341d28ff9e68990038b1beb8a760ff26d0", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7jL6UACgkQTcGC3A+n\nN4Xh0wf9E4IRhmrPia4gIT0GJQXPvG2pzSqkcLJxtWxbK7QTVAI8ZUl9ZsfriI/l\nTUfSxxNE0Trt0Jgn50jwTdyyEplujejqizJ1N4KJGa0YKTRtF++Az1JYYtunqA+U\nn0UV4ZVW8WbxJGT1SXlwvV2Sr2oZU4Rjpq5CmjMPp0eCQafQCaBT74xpc3NZw4Te\nZyq14qL5G/tKEeR/u7eonXX4+PD6CREKbv1Q+q8TZLzWsCQG1HB0RjY4XTmqbVe8\n7n7oIKbZrXMk3cEB1TR4UTZxstOqlqBqv4q1lutKHW6LHKc12On+DgBuej8seZY+\nGCofB/OrAahC+T4x/i+d3utN6CRX4g==\n=Td1A\n-----END PGP SIGNATURE-----", "payload": "tree b0d4de7e957fb534d202d1afa1a9abf9faaecdf0\nparent 04f0546e3e468e67dcd8cd20265796887805de3e\nauthor Martin Li\u0161ka <mliska@suse.cz> 1591865016 +0200\ncommitter Martin Liska <mliska@suse.cz> 1591947173 +0200\n\nFix few -Wformat-diag warnings.\n\nReady for master?\n\nThanks,\nMartin\n\ngcc/ChangeLog:\n\n\t* cgraphunit.c (process_symver_attribute): Wrap weakref keyword.\n\t* dbgcnt.c (dbg_cnt_set_limit_by_index): Do not print extra new\n\tline.\n\t* lto-wrapper.c (merge_and_complain): Wrap option names.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47fe96341d28ff9e68990038b1beb8a760ff26d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47fe96341d28ff9e68990038b1beb8a760ff26d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47fe96341d28ff9e68990038b1beb8a760ff26d0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04f0546e3e468e67dcd8cd20265796887805de3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f0546e3e468e67dcd8cd20265796887805de3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f0546e3e468e67dcd8cd20265796887805de3e"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ea9a34bda6fd317a2a7d761e44382e89fc2881a4", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=47fe96341d28ff9e68990038b1beb8a760ff26d0", "patch": "@@ -762,7 +762,7 @@ process_symver_attribute (symtab_node *n)\n   if (n->weakref)\n     {\n       error_at (DECL_SOURCE_LOCATION (n->decl),\n-\t\t\"weakref cannot be versioned\");\n+\t\t\"%<weakref%> cannot be versioned\");\n       return;\n     }\n   if (!TREE_PUBLIC (n->decl))"}, {"sha": "ae98a281d6351ceb14f2f54a3aa71a06365dabf7", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=47fe96341d28ff9e68990038b1beb8a760ff26d0", "patch": "@@ -126,7 +126,7 @@ dbg_cnt_set_limit_by_index (enum debug_counter index, const char *name,\n       if (t1.first <= t2.second)\n \t{\n \t  error (\"Interval overlap of %<-fdbg-cnt=%s%>: [%u, %u] and \"\n-\t\t \"[%u, %u]\\n\", name, t2.first, t2.second, t1.first, t1.second);\n+\t\t \"[%u, %u]\", name, t2.first, t2.second, t1.first, t1.second);\n \t  return false;\n \t}\n     }"}, {"sha": "8fbca7cabc4e8b90a3599583c20f916988c1f2f5", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47fe96341d28ff9e68990038b1beb8a760ff26d0/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=47fe96341d28ff9e68990038b1beb8a760ff26d0", "patch": "@@ -508,24 +508,24 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t  break;\n \telse if (i < *decoded_options_count && j == fdecoded_options_count)\n \t  {\n-\t    warning (0, \"Extra option to -Xassembler: %s,\"\n-\t\t     \" dropping all -Xassembler and -Wa options.\",\n+\t    warning (0, \"Extra option to %<-Xassembler%>: %s,\"\n+\t\t     \" dropping all %<-Xassembler%> and %<-Wa%> options.\",\n \t\t     (*decoded_options)[i].arg);\n \t    xassembler_options_error = true;\n \t    break;\n \t  }\n \telse if (i == *decoded_options_count && j < fdecoded_options_count)\n \t  {\n-\t    warning (0, \"Extra option to -Xassembler: %s,\"\n-\t\t     \" dropping all -Xassembler and -Wa options.\",\n+\t    warning (0, \"Extra option to %<-Xassembler%>: %s,\"\n+\t\t     \" dropping all %<-Xassembler%> and %<-Wa%> options.\",\n \t\t     fdecoded_options[j].arg);\n \t    xassembler_options_error = true;\n \t    break;\n \t  }\n \telse if (strcmp ((*decoded_options)[i].arg, fdecoded_options[j].arg))\n \t  {\n-\t    warning (0, \"Options to Xassembler do not match: %s, %s,\"\n-\t\t     \" dropping all -Xassembler and -Wa options.\",\n+\t    warning (0, \"Options to %<-Xassembler%> do not match: %s, %s,\"\n+\t\t     \" dropping all %<-Xassembler%> and %<-Wa%> options.\",\n \t\t     (*decoded_options)[i].arg, fdecoded_options[j].arg);\n \t    xassembler_options_error = true;\n \t    break;"}]}