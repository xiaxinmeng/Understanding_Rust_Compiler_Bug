{"sha": "bc8a6d63e68700570c5616cb654f993e7ca0ca26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4YTZkNjNlNjg3MDA1NzBjNTYxNmNiNjU0Zjk5M2U3Y2EwY2EyNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-02-01T20:18:05Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-01T20:18:05Z"}, "message": "i386.md (addsi_1_zext splitter): Add TARGET_64BIT to the conditional.\n\n        * config/i386/i386.md (addsi_1_zext splitter): Add TARGET_64BIT\n        to the conditional.\n        (ashlsi3_1_zext splitter): Likewise.\n\nFrom-SVN: r62254", "tree": {"sha": "dd5f73c0eef527a6a8dbfacd3774c56f29a5ed78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd5f73c0eef527a6a8dbfacd3774c56f29a5ed78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8a6d63e68700570c5616cb654f993e7ca0ca26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a6d63e68700570c5616cb654f993e7ca0ca26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8a6d63e68700570c5616cb654f993e7ca0ca26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a6d63e68700570c5616cb654f993e7ca0ca26/comments", "author": null, "committer": null, "parents": [{"sha": "2928cd7aace2187ca6d892872490e01f2a2bb17a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2928cd7aace2187ca6d892872490e01f2a2bb17a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2928cd7aace2187ca6d892872490e01f2a2bb17a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "796ddb06f1b5395a3495a1d9196798ac90a8f633", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a6d63e68700570c5616cb654f993e7ca0ca26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a6d63e68700570c5616cb654f993e7ca0ca26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc8a6d63e68700570c5616cb654f993e7ca0ca26", "patch": "@@ -1,3 +1,9 @@\n+2003-02-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.md (addsi_1_zext splitter): Add TARGET_64BIT\n+\tto the conditional.\n+\t(ashlsi3_1_zext splitter): Likewise.\n+\n 2003-02-01  Richard Henderson  <rth@redhat.com>\n \n \t* optabs.c (expand_unop): Use word_mode for outmode of bit scaners."}, {"sha": "4c8211356ee82a5650fdf07514df08e841130693", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a6d63e68700570c5616cb654f993e7ca0ca26/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a6d63e68700570c5616cb654f993e7ca0ca26/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=bc8a6d63e68700570c5616cb654f993e7ca0ca26", "patch": "@@ -5677,7 +5677,7 @@\n \t  (plus:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t   (match_operand:SI 2 \"nonmemory_operand\" \"\"))))\n    (clobber (reg:CC 17))]\n-  \"reload_completed\n+  \"TARGET_64BIT && reload_completed\n    && true_regnum (operands[0]) != true_regnum (operands[1])\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (subreg:SI (plus:DI (match_dup 1) (match_dup 2)) 0)))]\n@@ -11104,9 +11104,11 @@\n \t(zero_extend:DI (ashift (match_operand 1 \"register_operand\" \"\")\n \t\t\t\t(match_operand:QI 2 \"const_int_operand\" \"\"))))\n    (clobber (reg:CC 17))]\n-  \"reload_completed\n+  \"TARGET_64BIT && reload_completed\n    && true_regnum (operands[0]) != true_regnum (operands[1])\"\n-  [(set (match_dup 0) (zero_extend:DI (subreg:SI (mult:SI (match_dup 1) (match_dup 2)) 0)))]\n+  [(set (match_dup 0) (zero_extend:DI\n+\t\t\t(subreg:SI (mult:SI (match_dup 1)\n+\t\t\t\t\t    (match_dup 2)) 0)))]\n {\n   operands[1] = gen_lowpart (Pmode, operands[1]);\n   operands[2] = gen_int_mode (1 << INTVAL (operands[2]), Pmode);"}]}