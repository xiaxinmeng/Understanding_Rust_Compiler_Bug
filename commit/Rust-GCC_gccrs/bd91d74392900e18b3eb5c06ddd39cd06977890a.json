{"sha": "bd91d74392900e18b3eb5c06ddd39cd06977890a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5MWQ3NDM5MjkwMGUxOGIzZWI1YzA2ZGRkMzljZDA2OTc3ODkwYQ==", "commit": {"author": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2008-01-25T07:47:46Z"}, "committer": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2008-01-25T07:47:46Z"}, "message": "[multiple changes]\n\n2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>\n\n\t* ipa-struct-reorg.c (is_safe_cond_expr, \n\tcreate_new_stmts_for_cond_expr): Use integer_zerop function,\n\tthat recognize not only zero-pointer, but zero-integer too.\n\t\n2008-01-24  Olga Golovanevsky  <olga@il.ibm.com>\n\n        * gcc.dg/struct/wo_prof_malloc_size_var.c: UnXFAIL.\n\nFrom-SVN: r131817", "tree": {"sha": "d3c9cde07c40b673e814d8f4f23f375584e48be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3c9cde07c40b673e814d8f4f23f375584e48be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd91d74392900e18b3eb5c06ddd39cd06977890a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd91d74392900e18b3eb5c06ddd39cd06977890a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd91d74392900e18b3eb5c06ddd39cd06977890a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd91d74392900e18b3eb5c06ddd39cd06977890a/comments", "author": null, "committer": null, "parents": [{"sha": "6ba2cd59597e9366f6b47a75cf1bac1e1e1cd8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba2cd59597e9366f6b47a75cf1bac1e1e1cd8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba2cd59597e9366f6b47a75cf1bac1e1e1cd8c5"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "cf427b45ab57a710488b9942339904e8b3bc3774", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd91d74392900e18b3eb5c06ddd39cd06977890a", "patch": "@@ -1,3 +1,9 @@\n+2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>\n+\n+\t* ipa-struct-reorg.c (is_safe_cond_expr, \n+\tcreate_new_stmts_for_cond_expr): Use integer_zerop function,\n+\tthat recognize not only zero-pointer, but zero-integer too.\n+\n 2008-01-25  Ben Elliston  <bje@au.ibm.com>\n \n \tPR other/22232"}, {"sha": "9786db47a366f75832c28e83f65277d112503515", "filename": "gcc/ipa-struct-reorg.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Fipa-struct-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Fipa-struct-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-struct-reorg.c?ref=bd91d74392900e18b3eb5c06ddd39cd06977890a", "patch": "@@ -1251,12 +1251,15 @@ create_new_stmts_for_cond_expr (tree stmt)\n   s0 = (str0 != length) ? true : false;\n   s1 = (str1 != length) ? true : false;\n \n-  gcc_assert ((!s0 && s1) || (!s1 && s0));\n+  gcc_assert (s0 || s1);\n+  /* For now we allow only comparison with 0 or NULL.  */\n+  gcc_assert (integer_zerop (arg0) || integer_zerop (arg1));\n   \n-  str = s0 ? VEC_index (structure, structures, str0): \n-    VEC_index (structure, structures, str1);\n-  arg = s0 ? arg0 : arg1;\n-  pos = s0 ? 0 : 1;\n+  str = integer_zerop (arg0) ?\n+    VEC_index (structure, structures, str1): \n+    VEC_index (structure, structures, str0);\n+  arg = integer_zerop (arg0) ? arg1 : arg0;\n+  pos = integer_zerop (arg0) ? 1 : 0;\n   \n   for (i = 0; VEC_iterate (tree, str->new_types, i, type); i++)\n     {\n@@ -2388,8 +2391,12 @@ is_safe_cond_expr (tree cond_stmt)\n \n   s0 = (str0 != length) ? true : false;\n   s1 = (str1 != length) ? true : false;\n+  \n+  if (!s0 && !s1)\n+    return false;\n \n-  if (!((!s0 && s1) || (!s1 && s0)))\n+  /* For now we allow only comparison with 0 or NULL.  */\n+  if (!integer_zerop (arg0) && !integer_zerop (arg1))\n     return false;\n \n   return true;"}, {"sha": "8705d66744b27a3365f7405be0ac7abe7e2141ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd91d74392900e18b3eb5c06ddd39cd06977890a", "patch": "@@ -1,3 +1,7 @@\n+2008-01-25  Olga Golovanevsky  <olga@il.ibm.com>\n+\n+        * gcc.dg/struct/wo_prof_malloc_size_var.c: UnXFAIL.\n+\n 2008-01-24  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/34202"}, {"sha": "32842b0a7eb1ebca48dd633f3880a1803f163d0b", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_malloc_size_var.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd91d74392900e18b3eb5c06ddd39cd06977890a/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c?ref=bd91d74392900e18b3eb5c06ddd39cd06977890a", "patch": "@@ -32,6 +32,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* Currently the condition `if (p == 0)` is incorrectly reported as unsafe.  */\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail *-*-* } } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}]}