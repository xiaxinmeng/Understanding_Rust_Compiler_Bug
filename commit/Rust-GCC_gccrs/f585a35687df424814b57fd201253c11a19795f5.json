{"sha": "f585a35687df424814b57fd201253c11a19795f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU4NWEzNTY4N2RmNDI0ODE0YjU3ZmQyMDEyNTNjMTFhMTk3OTVmNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-27T05:42:20Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-27T05:42:20Z"}, "message": "[multiple changes]\n\n2002-02-26  David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/aix43.h (THREAD_MODEL_SPEC): Delete.\n        * config/rs6000/aix51.h (THREAD_MODEL_SPEC): Delete.\n        * config/rs6000/rs6000.c (rs6000_return_addr): Use efficient\n        method on AIX.\n        * config/rs6000/rs6000.md (movsi_low): Use gpc_reg_operand.\n        (movsi_low_st, movdf_low, movdf_low_st, movsf_low, movsf_low_st): Same.\n        (load_toc_v4_PIC_2): Same.\n\n2002-02-26  Alan Modra  <amodra@bigpond.net.au>\n\n        * config/rs6000/rs6000.md (load_toc_aix_di): Handle TARGET_RELOCATABLE.\n\nFrom-SVN: r50090", "tree": {"sha": "20b8e26f92d08647d0a40a8a7e42112de090f27a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20b8e26f92d08647d0a40a8a7e42112de090f27a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f585a35687df424814b57fd201253c11a19795f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f585a35687df424814b57fd201253c11a19795f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f585a35687df424814b57fd201253c11a19795f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f585a35687df424814b57fd201253c11a19795f5/comments", "author": null, "committer": null, "parents": [{"sha": "fc04b455f9f8f1054dafde34975d7e2b764926d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc04b455f9f8f1054dafde34975d7e2b764926d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc04b455f9f8f1054dafde34975d7e2b764926d4"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "8765f325205ca08a7893d95ed6d2c8d1cb7f6dbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f585a35687df424814b57fd201253c11a19795f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f585a35687df424814b57fd201253c11a19795f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f585a35687df424814b57fd201253c11a19795f5", "patch": "@@ -1,3 +1,17 @@\n+2002-02-26  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix43.h (THREAD_MODEL_SPEC): Delete.\n+\t* config/rs6000/aix51.h (THREAD_MODEL_SPEC): Delete.\n+\t* config/rs6000/rs6000.c (rs6000_return_addr): Use efficient\n+\tmethod on AIX.\n+\t* config/rs6000/rs6000.md (movsi_low): Use gpc_reg_operand.\n+\t(movsi_low_st, movdf_low, movdf_low_st, movsf_low, movsf_low_st): Same.\n+\t(load_toc_v4_PIC_2): Same.\n+\n+2002-02-26  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.md (load_toc_aix_di): Handle TARGET_RELOCATABLE.\n+\n 2002-02-26  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.md (ashldi_se): Re-enable."}, {"sha": "7aa8707cdab55024fe47f177b0766e2818e5e3cd", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=f585a35687df424814b57fd201253c11a19795f5", "patch": "@@ -199,10 +199,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n        %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n        %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n \n-/* Since there are separate multilibs for pthreads, determine the\n-   thread model based on the command-line arguments.  */\n-#define THREAD_MODEL_SPEC \"%{pthread:posix}%{!pthread:single}\"\n-\n /* AIX 4.3 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n \n #undef PTRDIFF_TYPE"}, {"sha": "8dc0b86ba4ff2315a7271d9554afad85e677f9f9", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=f585a35687df424814b57fd201253c11a19795f5", "patch": "@@ -202,10 +202,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n        %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n        %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n \n-/* Since there are separate multilibs for pthreads, determine the\n-   thread model based on the command-line arguments.  */\n-#define THREAD_MODEL_SPEC \"%{pthread:posix}%{!pthread:single}\"\n-\n /* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n \n #undef PTRDIFF_TYPE"}, {"sha": "887c3b4729ab28a3bb7d318e3f769d3e3a25d7e5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f585a35687df424814b57fd201253c11a19795f5", "patch": "@@ -8056,10 +8056,7 @@ rs6000_return_addr (count, frame)\n   /* Currently we don't optimize very well between prolog and body\n      code and for PIC code the code can be actually quite bad, so\n      don't try to be too clever here.  */\n-  if (count != 0\n-      || flag_pic != 0\n-      || DEFAULT_ABI == ABI_AIX\n-      || DEFAULT_ABI == ABI_AIX_NODESC)\n+  if (count != 0 || flag_pic != 0)\n     {\n       cfun->machine->ra_needs_full_frame = 1;\n "}, {"sha": "cf1627657c364d75da27257609aa688bd2e7f569", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f585a35687df424814b57fd201253c11a19795f5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f585a35687df424814b57fd201253c11a19795f5", "patch": "@@ -7573,15 +7573,15 @@\n \n (define_insn \"movsi_low\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-        (mem:SI (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b\")\n+        (mem:SI (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && ! TARGET_64BIT\"\n   \"{l|lwz} %0,lo16(%2)(%1)\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"movsi_low_st\"\n-  [(set (mem:SI (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (mem:SI (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:SI 0 \"gpc_reg_operand\" \"r\"))]\n   \"TARGET_MACHO && ! TARGET_64BIT\"\n@@ -7591,7 +7591,7 @@\n \n (define_insn \"movdf_low\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f,!r\")\n-        (mem:DF (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b,b\")\n+        (mem:DF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && ! TARGET_64BIT\"\n   \"*\n@@ -7621,7 +7621,7 @@\n    (set_attr \"length\" \"4,12\")])\n \n (define_insn \"movdf_low_st\"\n-  [(set (mem:DF (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (mem:DF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:DF 0 \"gpc_reg_operand\" \"f\"))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && ! TARGET_64BIT\"\n@@ -7631,7 +7631,7 @@\n \n (define_insn \"movsf_low\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f,!r\")\n-        (mem:SF (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b,b\")\n+        (mem:SF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && ! TARGET_64BIT\"\n   \"@\n@@ -7641,7 +7641,7 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"movsf_low_st\"\n-  [(set (mem:SF (lo_sum:SI (match_operand:SI 1 \"register_operand\" \"b,b\")\n+  [(set (mem:SF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:SF 0 \"gpc_reg_operand\" \"f,!r\"))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && ! TARGET_64BIT\"\n@@ -9566,7 +9566,12 @@\n   \"*\n {\n   char buf[30];\n+#ifdef TARGET_RELOCATABLE\n+  ASM_GENERATE_INTERNAL_LABEL (buf, \\\"LCTOC\\\",\n+\t\t\t       !TARGET_MINIMAL_TOC || TARGET_RELOCATABLE);\n+#else\n   ASM_GENERATE_INTERNAL_LABEL (buf, \\\"LCTOC\\\", 1);\n+#endif\n   if (TARGET_ELF)\n     strcat (buf, \\\"@toc\\\");\n   operands[1] = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (buf));\n@@ -9602,8 +9607,8 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"load_toc_v4_PIC_2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(mem:SI (plus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(mem:SI (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t   (minus:SI (match_operand:SI 2 \"immediate_operand\" \"s\")\n \t\t\t     (match_operand:SI 3 \"immediate_operand\" \"s\")))))]\n   \"TARGET_ELF && flag_pic == 2\""}]}