{"sha": "f9c20bd7853a746b7c9373bff6b92459b53703cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjljMjBiZDc4NTNhNzQ2YjdjOTM3M2JmZjZiOTI0NTliNTM3MDNjZA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-08-26T23:35:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:46Z"}, "message": "[Ada] Better error for illegal call to abstract operation in instantiations\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Call): In the case where the call is not\n\toverloaded, check for a call to an abstract nondispatching\n\toperation and flag an error.", "tree": {"sha": "6d8f4ef850154030ca9c26fdc298dc5bfec1e427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8f4ef850154030ca9c26fdc298dc5bfec1e427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9c20bd7853a746b7c9373bff6b92459b53703cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c20bd7853a746b7c9373bff6b92459b53703cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c20bd7853a746b7c9373bff6b92459b53703cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c20bd7853a746b7c9373bff6b92459b53703cd/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "61c7b4c42d49b78dc4a8b91a9fc7b3218ff0929b", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c20bd7853a746b7c9373bff6b92459b53703cd/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c20bd7853a746b7c9373bff6b92459b53703cd/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f9c20bd7853a746b7c9373bff6b92459b53703cd", "patch": "@@ -1254,6 +1254,25 @@ package body Sem_Ch4 is\n \n          Analyze_One_Call (N, Nam_Ent, True, Success);\n \n+         --  If the nonoverloaded interpretation is a call to an abstract\n+         --  nondispatching operation, then flag an error and return.\n+\n+         --  Should this be incorporated in Remove_Abstract_Operations (which\n+         --  currently only deals with cases where the name is overloaded)? ???\n+\n+         if Is_Overloadable (Nam_Ent)\n+           and then Is_Abstract_Subprogram (Nam_Ent)\n+           and then not Is_Dispatching_Operation (Nam_Ent)\n+         then\n+            Set_Etype (N, Any_Type);\n+\n+            Error_Msg_Sloc := Sloc (Nam_Ent);\n+            Error_Msg_NE\n+              (\"cannot call abstract operation& declared#\", N, Nam_Ent);\n+\n+            return;\n+         end if;\n+\n          --  If this is an indirect call, the return type of the access_to\n          --  subprogram may be an incomplete type. At the point of the call,\n          --  use the full type if available, and at the same time update the"}]}