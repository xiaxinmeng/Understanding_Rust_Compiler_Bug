{"sha": "c253525edd51a027b7db30e077a6643a78544b0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1MzUyNWVkZDUxYTAyN2I3ZGIzMGUwNzdhNjY0M2E3ODU0NGIwYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-09-05T15:55:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-09-05T15:55:04Z"}, "message": "re PR sanitizer/82072 (sanitizer does not detect an overflow from LLONG_MIN)\n\n\tPR sanitizer/82072\n\t* convert.c (convert_to_integer_1) <case NEGATE_EXPR>: Move the ubsan\n\tcheck earlier.\n\n\t* c-c++-common/ubsan/pr82072-2.c: New test.\n\nFrom-SVN: r251717", "tree": {"sha": "984ffdfa544660a19e390c366d332810a8203588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/984ffdfa544660a19e390c366d332810a8203588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c253525edd51a027b7db30e077a6643a78544b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c253525edd51a027b7db30e077a6643a78544b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c253525edd51a027b7db30e077a6643a78544b0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c253525edd51a027b7db30e077a6643a78544b0c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d49318d9bc3e63251aada27b322e7756eab19884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49318d9bc3e63251aada27b322e7756eab19884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49318d9bc3e63251aada27b322e7756eab19884"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "2f6983ffa9ecdfa6cb6d5609f297406eb295c786", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c253525edd51a027b7db30e077a6643a78544b0c", "patch": "@@ -1,3 +1,9 @@\n+2017-09-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/82072\n+\t* convert.c (convert_to_integer_1) <case NEGATE_EXPR>: Move the ubsan\n+\tcheck earlier.\n+\n 2017-09-05  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* explow.c (get_dynamic_stack_size): Improve dynamic alignment."}, {"sha": "bfe18fb0f432b1d6cd52f04de4ffcec96299339a", "filename": "gcc/convert.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c253525edd51a027b7db30e077a6643a78544b0c", "patch": "@@ -886,6 +886,12 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \t    break;\n \n \t  case NEGATE_EXPR:\n+\t    /* Using unsigned arithmetic for signed types may hide overflow\n+\t       bugs.  */\n+\t    if (!TYPE_UNSIGNED (TREE_TYPE (TREE_OPERAND (expr, 0)))\n+\t\t&& sanitize_flags_p (SANITIZE_SI_OVERFLOW))\n+\t      break;\n+\t    /* Fall through.  */\n \t  case BIT_NOT_EXPR:\n \t    /* This is not correct for ABS_EXPR,\n \t       since we must test the sign before truncation.  */\n@@ -902,12 +908,7 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \t\t\t\t\t\t    TYPE_UNSIGNED (typex));\n \n \t      if (!TYPE_UNSIGNED (typex))\n-\t\t{\n-\t\t  /* Using unsigned arithmetic may hide overflow bugs.  */\n-\t\t  if (sanitize_flags_p (SANITIZE_SI_OVERFLOW))\n-\t\t    break;\n-\t\t  typex = unsigned_type_for (typex);\n-\t\t}\n+\t\ttypex = unsigned_type_for (typex);\n \t      return convert (type,\n \t\t\t      fold_build1 (ex_form, typex,\n \t\t\t\t\t   convert (typex,"}, {"sha": "623e41417f9f8043af4296e63072cefd9e613c8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c253525edd51a027b7db30e077a6643a78544b0c", "patch": "@@ -1,3 +1,8 @@\n+2017-09-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/82072\n+\t* c-c++-common/ubsan/pr82072-2.c: New test.\n+\n 2017-09-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/81942"}, {"sha": "ff8aca4d94291a1051c35823e6bc21e89d92008f", "filename": "gcc/testsuite/c-c++-common/ubsan/pr82072-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c253525edd51a027b7db30e077a6643a78544b0c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072-2.c?ref=c253525edd51a027b7db30e077a6643a78544b0c", "patch": "@@ -0,0 +1,15 @@\n+/* PR sanitizer/82072 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+\n+int\n+main ()\n+{\n+  long long int l = -__LONG_LONG_MAX__ - 1;\n+  unsigned int u;\n+  u = -l;\n+  asm volatile (\"\" : \"+r\" (u));\n+  return 0;\n+}\n+\n+/* { dg-output \"negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\" } */"}]}