{"sha": "233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMzYTQ2YzgzNDU2ZDBiZTM1ZmQwZTBlZjgyNmM4ZDg3ZDk3YzNjYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-21T20:42:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-21T20:42:09Z"}, "message": "re PR target/45946 (ICE: in extract_insn, at recog.c:2127 when using _Decimal128 with -Os -fno-omit-frame-pointer)\n\n\tPR target/45946\n\t* config/i386/i386.md (*pushti2): New insn pattern.\n\t(pushti2 splitter): New insn splitter.\n\t(*push<mode>2): Macroize insn pattern from *push{di,ti}2 using\n\tDWI mode iterator.\n\ntestsuite/ChangeLog:\n\n\tPR target/45946\n\t* gcc.target/i386/pr45946.c: New test.\n\nFrom-SVN: r165787", "tree": {"sha": "a3bfc7b560679caa6003b426603384324536890a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3bfc7b560679caa6003b426603384324536890a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/comments", "author": null, "committer": null, "parents": [{"sha": "19ce9cf1b8f0f1808500580fdd0fd1db00354df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ce9cf1b8f0f1808500580fdd0fd1db00354df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ce9cf1b8f0f1808500580fdd0fd1db00354df3"}], "stats": {"total": 97, "additions": 63, "deletions": 34}, "files": [{"sha": "72be43d6366dc8fd3ee5d51ed79fa0612956b44a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 28, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "patch": "@@ -1,3 +1,11 @@\n+2010-10-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/45946\n+\t* config/i386/i386.md (*pushti2): New insn pattern.\n+\t(pushti2 splitter): New insn splitter.\n+\t(*push<mode>2): Macroize insn pattern from *push{di,ti}2 using\n+\tDWI mode iterator.\n+\n 2010-10-21  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11-protos.md (arith_operand,\n@@ -15,9 +23,9 @@\n 2010-10-21  Bingfeng Mei  <bmei@broadcom.com>\n \n \tPR c/45834\n-        * alias.c (true_dependence_1): Remove obsolete check for QImode.\n-        (may_alias_p): Ditto.\n-        \n+\t* alias.c (true_dependence_1): Remove obsolete check for QImode.\n+\t(may_alias_p): Ditto.\n+\n 2010-10-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/45875\n@@ -32,8 +40,8 @@\n 2010-10-21  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.c: Fold code to 80-character width.\n-        Replace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n-        MEM, CONST_INT and CONST_DOUBLE.\n+\tReplace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n+\tMEM, CONST_INT and CONST_DOUBLE.\n \t(targetm): Move initialization to end of file.\n \t(print_operand): Rename to mn10300_print_operand.\n \t(print_operand_address): Rename to mn10300_print_operand_address.\n@@ -48,20 +56,19 @@\n \t(legitimate_pic_operand_p): Rename to mn10300_legitimate_pic_operand_p.\n \t* config/mn10300/mn10300-protos.h: Update prototypes.\n \t* config/mn10300/mn10300.h: Fold code to 80-character width.\n-        Replace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n-        MEM, CONST_INT and CONST_DOUBLE.\n-        (CPP_SPEC): Move to...\n-        (TARGET_CPU_CPP_BUILTINS): ... here.\n+\tReplace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n+\tMEM, CONST_INT and CONST_DOUBLE.\n+\t(CPP_SPEC): Move to...\n+\t(TARGET_CPU_CPP_BUILTINS): ... here.\n \t* config/mn10300/mn10300.md: Fold code to 80-character width.\n-        Replace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n-        MEM, CONST_INT and CONST_DOUBLE.\n+\tReplace GET_CODE (foo) == REG with REG_P (foo).  Likewise for\n+\tMEM, CONST_INT and CONST_DOUBLE.\n \n 2010-10-21  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/46049\n \tPR tree-optimization/46052\n-\t* tree-vectorizer.h (enum stmt_vec_info_type): Add new value for\n-\tshift.\n+\t* tree-vectorizer.h (enum stmt_vec_info_type): Add new value for shift.\n \t(vect_get_slp_defs): Add arguments.\n \t* tree-vect-loop.c (vect_create_epilog_for_reduction): Pass scalar\n \toperands to vect_get_slp_defs.\n@@ -147,7 +154,7 @@\n \t* config/i386/sse.md (ssescalarmodesuffix): Add V8SI and V4DI.\n \n 2010-10-21  Richard Guenther  <rguenther@suse.de>\n-\tMichael Matz  <matz@suse.de>\n+\t    Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/45764\n \t* tree-vect-data-refs.c (vect_compute_data_ref_alignment):\n@@ -224,7 +231,7 @@\n \t(c_parser_objc_methodproto): Do not call objc_set_method_type.\n \tUpdated calls to c_parser_objc_method_type,\n \tc_parser_objc_method_decl and objc_add_method_declaration.\n-\t\n+\n 2010-10-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45919\n@@ -346,14 +353,14 @@\n \t(default_jump_align_max_skip): New.\n \t(compute_alignments): Use the new hooks.\n \t(shorten_branches): Likewise.\n-\t\n+\n 2010-10-19  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (bdesc_multi_arg): Use fma4i_fmadd_<mode>.\n \t* config/i386/sse.md (fma<mode>4): Enable for FMA & SSE_MATH.\n \t(fma4i_fmadd_<mode>): New.\n \t(*split_fma, *split_fms, *split_fnma, *split_fnms): Rename from\n-\tfma4_fm*_<mode> and adjust to be pre-reload splitters to the \n+\tfma4_fm*_<mode> and adjust to be pre-reload splitters to the\n \tstandard fma patterns.\n \t(fmaddsub_<mode>): Rename from fma4i_fmaddsub_<mode> and\n \tenable for FMA.\n@@ -374,7 +381,7 @@\n \n 2010-10-19  Michael Eager  <eager@eagercon.com>\n \n-\t* config/microblaze/microblaze.c (TARGET_EXCEPT_UNWIND_INFO): \n+\t* config/microblaze/microblaze.c (TARGET_EXCEPT_UNWIND_INFO):\n \tUse sjlj unwind info for exceptions.\n \n 2010-10-19  Francois-Xavier Coudert<fxcoudert@gcc.gnu.org>\n@@ -386,7 +393,7 @@\n 2010-10-19  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.c (rx_function_value): Small integer types are\n-\tpromotes to SImode.\n+\tpromoted to SImode.\n \t(rx_promote_function_mode): New function.\n \t(TARGET_PROMOTE_FUNCTION_MODE): Define.\n \n@@ -397,12 +404,12 @@\n \t(mep_output_aligned_common): Likewise.\n \n 2010-10-19  Basile Starynkevitch  <basile@starynkevitch.net>\n-\t* gengtype.c (new_structure): Remove ad-hoc \"location_s\"\n-\tprocessing.\n+\n+\t* gengtype.c (new_structure): Remove ad-hoc \"location_s\" processing.\n \n 2010-10-18  Richard Henderson  <rth@redhat.com>\n \n-\t * simplify-rtx.c (simplify_ternary_operation) [FMA]: Simplify\n+\t* simplify-rtx.c (simplify_ternary_operation) [FMA]: Simplify\n \t(fma (neg a) (neg b) c) and (fma a (neg b) c).\n \n 2010-10-18  Richard Henderson  <rth@redhat.com>\n@@ -470,10 +477,10 @@\n \t(c_parser_objc_at_dynamic_declaration): New.\n \n 2010-10-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n-\t\n+\n \t* c-parser.c (c_parser_objc_class_declaration): After finding an\n \terror, parse the whole declaration then reset parser->error.\n-\t\n+\n 2010-10-18  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/46041\n@@ -496,7 +503,7 @@\n \n 2010-10-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\tMerge from 'apple/trunk' branch on FSF servers.\t\n+\tMerge from 'apple/trunk' branch on FSF servers.\n \t* c-parser.c (c_parser_objc_type_name): Adapted to new parser the\n \tfollowing Objective-C change:\n \n@@ -613,13 +620,13 @@\n 2010-10-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n-\t\n+\n \t2006-03-27 Fariborz Jahanian <fjahanian@apple.com>\n \n-        Radar 4133425\n+\tRadar 4133425\n \t* c-decl.c (undeclared_variable): Issue diagnostic on\n \tprivate 'ivar' access.\n-\t\n+\n 2010-10-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/46051"}, {"sha": "d97e96f53e872c3a5ba09ca2c442e93758ebb287", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "patch": "@@ -1602,6 +1602,20 @@\n \f\n ;; Push/pop instructions.\n \n+(define_insn \"*push<mode>2\"\n+  [(set (match_operand:DWI 0 \"push_operand\" \"=<\")\n+\t(match_operand:DWI 1 \"general_no_elim_operand\" \"riF*m\"))]\n+  \"\"\n+  \"#\")\n+\n+(define_split\n+  [(set (match_operand:TI 0 \"push_operand\" \"\")\n+        (match_operand:TI 1 \"general_operand\" \"\"))]\n+  \"TARGET_64BIT && reload_completed\n+   && !SSE_REG_P (operands[1])\"\n+  [(const_int 0)]\n+  \"ix86_split_long_move (operands); DONE;\")\n+\n (define_insn \"*pushdi2_rex64\"\n   [(set (match_operand:DI 0 \"push_operand\" \"=<,!<\")\n \t(match_operand:DI 1 \"general_no_elim_operand\" \"re*m,n\"))]\n@@ -1660,12 +1674,6 @@\n \t\t\t\t\t\t   GEN_INT (4)));\n })\n \n-(define_insn \"*pushdi2\"\n-  [(set (match_operand:DI 0 \"push_operand\" \"=<\")\n-\t(match_operand:DI 1 \"general_no_elim_operand\" \"riF*m\"))]\n-  \"!TARGET_64BIT\"\n-  \"#\")\n-\n (define_split\n   [(set (match_operand:DI 0 \"push_operand\" \"\")\n         (match_operand:DI 1 \"general_operand\" \"\"))]"}, {"sha": "81cd36026adbe507a01ac662165c2c0dca6ad899", "filename": "gcc/testsuite/gcc.target/i386/pr45946.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45946.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233a46c83456d0be35fd0e0ef826c8d87d97c3cc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45946.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45946.c?ref=233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target dfp } */\n+/* { dg-options \"-std=gnu99 -Os -fno-omit-frame-pointer\" } */\n+\n+void\n+__attribute__((noinline))\n+bar (_Decimal128, _Decimal128, _Decimal128, _Decimal128, _Decimal128,\n+     _Decimal128, _Decimal128, _Decimal128, _Decimal128);\n+\n+void\n+foo (void)\n+{\n+  bar (0, 0, 0, 0, 0, 0, 0, 0, 0);\n+}"}]}