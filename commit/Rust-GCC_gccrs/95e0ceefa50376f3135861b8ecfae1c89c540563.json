{"sha": "95e0ceefa50376f3135861b8ecfae1c89c540563", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVlMGNlZWZhNTAzNzZmMzEzNTg2MWI4ZWNmYWUxYzg5YzU0MDU2Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T08:55:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T08:55:01Z"}, "message": "[multiple changes]\n\n2015-01-07  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osinte-vxworks.adb, s-osinte-vxworks.ads\n\t(sigwait, sigwaitinfo): Removed, not needed after all on any\n\tVxWorks configurations.\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, freeze.adb, exp_disp.adb: Minor reformatting.\n\nFrom-SVN: r219284", "tree": {"sha": "d7d539621b66719007d98139548c52e19ce73bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d539621b66719007d98139548c52e19ce73bc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95e0ceefa50376f3135861b8ecfae1c89c540563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e0ceefa50376f3135861b8ecfae1c89c540563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e0ceefa50376f3135861b8ecfae1c89c540563", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e0ceefa50376f3135861b8ecfae1c89c540563/comments", "author": null, "committer": null, "parents": [{"sha": "2ea3ba25c015d93f76b26ef1a3cf7497e8006b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea3ba25c015d93f76b26ef1a3cf7497e8006b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ea3ba25c015d93f76b26ef1a3cf7497e8006b7c"}], "stats": {"total": 106, "additions": 41, "deletions": 65}, "files": [{"sha": "03edfd042d11bac426d8565a627f419422d97b68", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -1,3 +1,13 @@\n+2015-01-07  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osinte-vxworks.adb, s-osinte-vxworks.ads\n+\t(sigwait, sigwaitinfo): Removed, not needed after all on any\n+\tVxWorks configurations.\n+\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, freeze.adb, exp_disp.adb: Minor reformatting.\n+\n 2015-01-07  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_disp.adb (Expand_Interface_Conversion): Adding missing"}, {"sha": "c0613bb80cefab365b678562f3aeac76a2de98ac", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -1423,15 +1423,15 @@ package body Exp_Disp is\n             if Is_Access_Type (Etype (Expression (N))) then\n \n                Apply_Accessibility_Check\n-                 (N   => Expression (N),\n-                  Typ => Etype (N),\n+                 (N           => Expression (N),\n+                  Typ         => Etype (N),\n                   Insert_Node => N);\n \n                --  Generate: Func (Address!(Expression))\n \n                Rewrite (N,\n                  Make_Function_Call (Loc,\n-                   Name => New_Occurrence_Of (Fent, Loc),\n+                   Name                   => New_Occurrence_Of (Fent, Loc),\n                    Parameter_Associations => New_List (\n                      Unchecked_Convert_To (RTE (RE_Address),\n                        Relocate_Node (Expression (N))))));\n@@ -1441,7 +1441,7 @@ package body Exp_Disp is\n \n                Rewrite (N,\n                  Make_Function_Call (Loc,\n-                   Name => New_Occurrence_Of (Fent, Loc),\n+                   Name                   => New_Occurrence_Of (Fent, Loc),\n                    Parameter_Associations => New_List (\n                      Make_Attribute_Reference (Loc,\n                        Prefix  => Unchecked_Convert_To (Operand_Typ,"}, {"sha": "f14855d247edbb0b6f0d57d3d9c731f590e50bc5", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -7800,17 +7800,17 @@ package body Freeze is\n \n          if (SSO_Set_Low_By_Default (T) or else SSO_Set_High_By_Default (T))\n \n-           --  For a record type, if bit order is specified explicitly, then\n-           --  do not set SSO from default if not consistent. Note that we\n-           --  do not want to look at a Bit_Order attribute definition for\n-           --  a parent: if we were to inherit Bit_Order, then both\n+           --  For a record type, if bit order is specified explicitly,\n+           --  then do not set SSO from default if not consistent. Note that\n+           --  we do not want to look at a Bit_Order attribute definition\n+           --  for a parent: if we were to inherit Bit_Order, then both\n            --  SSO_Set_*_By_Default flags would have been cleared already\n            --  (by Inherit_Aspects_At_Freeze_Point).\n \n            and then not\n              (Is_Record_Type (T)\n-               and then Has_Rep_Item (T,\n-                          Name_Bit_Order, Check_Parents => False)\n+               and then\n+                 Has_Rep_Item (T, Name_Bit_Order, Check_Parents => False)\n                and then Reverse_Bit_Order (T) /= Reversed)\n          then\n             --  If flags cause reverse storage order, then set the result. Note"}, {"sha": "ab56b8c7d5b6a62aee0551f8b7cf55301e916619", "filename": "gcc/ada/s-osinte-vxworks.adb", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fs-osinte-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fs-osinte-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.adb?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---         Copyright (C) 1997-2011, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1997-2014, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,32 +45,6 @@ package body System.OS_Interface is\n    Low_Priority : constant := 255;\n    --  VxWorks native (default) lowest scheduling priority\n \n-   -------------\n-   -- sigwait --\n-   -------------\n-\n-   function sigwait\n-     (set : access sigset_t;\n-      sig : access Signal) return int\n-   is\n-      Result : int;\n-\n-      function sigwaitinfo\n-        (set : access sigset_t; sigvalue : System.Address) return int;\n-      pragma Import (C, sigwaitinfo, \"sigwaitinfo\");\n-\n-   begin\n-      Result := sigwaitinfo (set, System.Null_Address);\n-\n-      if Result /= -1 then\n-         sig.all := Signal (Result);\n-         return OK;\n-      else\n-         sig.all := 0;\n-         return errno;\n-      end if;\n-   end sigwait;\n-\n    -----------------\n    -- To_Duration --\n    -----------------"}, {"sha": "0193284330de8fb13f1b74e602d069cc90fd35c7", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -192,9 +192,6 @@ package System.OS_Interface is\n    function c_signal (sig : Signal; handler : isr_address) return isr_address;\n    pragma Import (C, c_signal, \"signal\");\n \n-   function sigwait (set : access sigset_t; sig : access Signal) return int;\n-   pragma Inline (sigwait);\n-\n    function pthread_sigmask\n      (how  : int;\n       set  : access sigset_t;"}, {"sha": "51083e37f92f238904e8e544d558791d4bc3e7a9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e0ceefa50376f3135861b8ecfae1c89c540563/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=95e0ceefa50376f3135861b8ecfae1c89c540563", "patch": "@@ -15860,8 +15860,8 @@ package body Sem_Ch3 is\n \n       Taggd := Is_Tagged_Type (Parent_Type);\n \n-      --  Set the parent type to the class-wide type's specific type\n-      --  in this case to prevent cascading errors\n+      --  Set the parent type to the class-wide type's specific type in this\n+      --  case to prevent cascading errors\n \n       if Present (Extension) and then Is_Class_Wide_Type (Parent_Type) then\n          Error_Msg_N (\"parent type must not be a class-wide type\", Indic);\n@@ -15913,7 +15913,7 @@ package body Sem_Ch3 is\n          begin\n             if Nkind (Decl) = N_Formal_Type_Declaration\n               and then Nkind (Formal_Type_Definition (Decl)) =\n-                         N_Formal_Derived_Type_Definition\n+                                          N_Formal_Derived_Type_Definition\n               and then Synchronized_Present (Formal_Type_Definition (Decl))\n               and then No (Extension)\n \n@@ -15988,9 +15988,7 @@ package body Sem_Ch3 is\n \n    procedure Diagnose_Interface (N : Node_Id;  E : Entity_Id) is\n    begin\n-      if not Is_Interface (E)\n-        and then  E /= Any_Type\n-      then\n+      if not Is_Interface (E) and then  E /= Any_Type then\n          Error_Msg_NE (\"(Ada 2005) & must be an interface\", N, E);\n       end if;\n    end Diagnose_Interface;\n@@ -16234,8 +16232,7 @@ package body Sem_Ch3 is\n             while Present (F_Spec) loop\n                P_Spec := First (Prev_Aspects);\n                while Present (P_Spec) loop\n-                  if\n-                    Chars (Identifier (P_Spec)) = Chars (Identifier (F_Spec))\n+                  if Chars (Identifier (P_Spec)) = Chars (Identifier (F_Spec))\n                   then\n                      Error_Msg_N\n                        (\"aspect already specified in private declaration\",\n@@ -16547,9 +16544,7 @@ package body Sem_Ch3 is\n             elsif Nkind_In (N, N_Task_Type_Declaration,\n                                N_Protected_Type_Declaration)\n             then\n-               if No (Interface_List (N))\n-                 and then not Error_Posted (N)\n-               then\n+               if No (Interface_List (N)) and then not Error_Posted (N) then\n                   Tag_Mismatch;\n                end if;\n \n@@ -16856,6 +16851,7 @@ package body Sem_Ch3 is\n       --  Check that requested number of digits is not too high.\n \n       if Digs_Val > Max_Digs_Val then\n+\n          --  The check for Max_Base_Digits may be somewhat expensive, as it\n          --  requires reading System, so only do it when necessary.\n \n@@ -17105,16 +17101,16 @@ package body Sem_Ch3 is\n             Result_Entity := Entity (Result);\n          end if;\n \n-         --  See if this level of derivation actually has discriminants\n-         --  because tagged derivations can add them, hence the lower\n-         --  levels need not have any.\n+         --  See if this level of derivation actually has discriminants because\n+         --  tagged derivations can add them, hence the lower levels need not\n+         --  have any.\n \n          if not Has_Discriminants (Ti) then\n             return Result;\n          end if;\n \n-         --  Scan Ti's discriminants for Result_Entity,\n-         --  and return its corresponding value, if any.\n+         --  Scan Ti's discriminants for Result_Entity, and return its\n+         --  corresponding value, if any.\n \n          Result_Entity := Original_Record_Component (Result_Entity);\n \n@@ -17143,7 +17139,7 @@ package body Sem_Ch3 is\n          end loop;\n \n          --  Could not find it\n-         --\n+\n          return Result;\n       end Search_Derivation_Levels;\n \n@@ -17471,8 +17467,8 @@ package body Sem_Ch3 is\n         and then not Is_Tagged\n         and then\n           (not Inherit_Discr\n-             or else First_Discriminant (Parent_Base) /=\n-                     First_Stored_Discriminant (Parent_Base))\n+            or else First_Discriminant (Parent_Base) /=\n+                    First_Stored_Discriminant (Parent_Base))\n       then\n          Stored_Discrim := First_Stored_Discriminant (Parent_Base);\n          while Present (Stored_Discrim) loop\n@@ -17650,6 +17646,7 @@ package body Sem_Ch3 is\n          end loop;\n \n          return True;\n+\n       else\n          return True;\n       end if;\n@@ -18265,9 +18262,7 @@ package body Sem_Ch3 is\n             Init_Esize (T, System_Max_Binary_Modulus_Power);\n          end if;\n \n-         if not Non_Binary_Modulus (T)\n-           and then Esize (T) = RM_Size (T)\n-         then\n+         if not Non_Binary_Modulus (T) and then Esize (T) = RM_Size (T) then\n             Set_Is_Known_Valid (T);\n          end if;\n       end Set_Modular_Size;\n@@ -18979,9 +18974,9 @@ package body Sem_Ch3 is\n                      null;\n \n                   else\n-                     Error_Msg_N (\"access discriminants of nonlimited types\",\n-                         Expression (Discr));\n-                     Error_Msg_N (\"\\cannot have defaults\", Expression (Discr));\n+                     Error_Msg_N\n+                       (\"access discriminants of nonlimited types cannot \"\n+                        & \"have defaults\", Expression (Discr));\n                   end if;\n \n                elsif Present (Expression (Discr)) then"}]}