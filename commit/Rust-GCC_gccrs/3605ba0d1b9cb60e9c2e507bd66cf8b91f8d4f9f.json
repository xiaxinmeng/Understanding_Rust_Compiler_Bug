{"sha": "3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwNWJhMGQxYjljYjYwZTljMmU1MDdiZDY2Y2Y4YjkxZjhkNGY5Zg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-07-29T15:50:13Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-07-29T15:50:13Z"}, "message": "pa.c (pa_output_addr_vec): Align address table.\n\n\t* config/pa/pa.c (pa_output_addr_vec): Align address table.\n\t* config/pa/pa.h (JUMP_TABLES_IN_TEXT_SECTION): Revise comment.\n\t* config/pa/pa32-linux.h (JUMP_TABLES_IN_TEXT_SECTION): Define.\n\nFrom-SVN: r263051", "tree": {"sha": "77ba75683e4187906ad8053b90356d667b2ecec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77ba75683e4187906ad8053b90356d667b2ecec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/comments", "author": null, "committer": null, "parents": [{"sha": "d3d94f7a7a0d6c4efda34e3e19bc81ddd5087705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d94f7a7a0d6c4efda34e3e19bc81ddd5087705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d94f7a7a0d6c4efda34e3e19bc81ddd5087705"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "9d70b4678e3b15d86b36085edc9a3427efee591d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "patch": "@@ -1,3 +1,9 @@\n+2018-07-29  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.c (pa_output_addr_vec): Align address table.\n+\t* config/pa/pa.h (JUMP_TABLES_IN_TEXT_SECTION): Revise comment.\n+\t* config/pa/pa32-linux.h (JUMP_TABLES_IN_TEXT_SECTION): Define.\n+\n 2018-07-27  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/constraints.md (wG constraint): Delete, no longer"}, {"sha": "715700e2d1dce98b565def13519661d8c7d9e568", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "patch": "@@ -10680,6 +10680,8 @@ pa_output_addr_vec (rtx lab, rtx body)\n {\n   int idx, vlen = XVECLEN (body, 0);\n \n+  if (!TARGET_SOM)\n+    fputs (\"\\t.align 4\\n\", asm_out_file);\n   targetm.asm_out.internal_label (asm_out_file, \"L\", CODE_LABEL_NUMBER (lab));\n   if (TARGET_GAS)\n     fputs (\"\\t.begin_brtab\\n\", asm_out_file);"}, {"sha": "a121e2016c45ac38b8d0e10752abe85669c59a37", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "patch": "@@ -1143,21 +1143,23 @@ do {\t\t\t\t\t\t\t\t\t     \\\n #define ASM_OUTPUT_ASCII(FILE, P, SIZE)  \\\n   pa_output_ascii ((FILE), (P), (SIZE))\n \n-/* Jump tables are always placed in the text section.  Technically, it\n-   is possible to put them in the readonly data section.  This has the\n-   benefit of getting the table out of .text and reducing branch lengths\n-   as a result.\n+/* Jump tables are always placed in the text section.  We have to do\n+   this for the HP-UX SOM target as we can't switch sections in the\n+   middle of a function.\n \n-   The downside is that an additional insn (addil) is needed to access\n+   On ELF targets, it is possible to put them in the readonly-data section.\n+   This would get the table out of .text and reduce branch lengths.\n+\n+   A downside is that an additional insn (addil) is needed to access\n    the table when generating PIC code.  The address difference table\n-   also has to use 32-bit pc-relative relocations.  Currently, GAS does\n-   not support these relocations, although it is easily modified to do\n-   this operation.\n+   also has to use 32-bit pc-relative relocations.\n \n    The table entries need to look like \"$L1+(.+8-$L0)-$PIC_pcrel$0\"\n    when using ELF GAS.  A simple difference can be used when using\n-   SOM GAS or the HP assembler.  The final downside is GDB complains\n-   about the nesting of the label for the table when debugging.  */\n+   the HP assembler.\n+\n+   The final downside is GDB complains about the nesting of the label\n+   for the table.  */\n \n #define JUMP_TABLES_IN_TEXT_SECTION 1\n "}, {"sha": "4b470447f19828a623cd956464889d929dcd5f8c", "filename": "gcc/config/pa/pa32-linux.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa32-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f/gcc%2Fconfig%2Fpa%2Fpa32-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa32-linux.h?ref=3605ba0d1b9cb60e9c2e507bd66cf8b91f8d4f9f", "patch": "@@ -67,3 +67,12 @@ call_ ## FUNC (void)\t\t\t\t\t\\\n    layout compatibility with the original linux thread implementation.  */\n #undef MALLOC_ABI_ALIGNMENT\n #define MALLOC_ABI_ALIGNMENT 128\n+\n+/* Place jump tables in the text section except when generating non-PIC\n+   code.  When generating non-PIC code, the relocations needed to load the\n+   address of the jump table result in a text label in the final executable\n+   if the jump table is placed in the text section.  This breaks the unwind\n+   data for the function.  Thus, the jump table needs to be placed in\n+   rodata when generating non-PIC code.  */\n+#undef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION (flag_pic)"}]}