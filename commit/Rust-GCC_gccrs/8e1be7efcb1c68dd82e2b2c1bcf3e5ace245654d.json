{"sha": "8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxYmU3ZWZjYjFjNjhkZDgyZTJiMmMxYmNmM2U1YWNlMjQ1NjU0ZA==", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T17:28:08Z"}, "committer": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T17:28:08Z"}, "message": "\t2020-8-20  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/94110\n\t* interface.c (gfc_compare_actual_formal): Add code to also raise\n\tthe actual argument cannot be an assumed-size array error when the\n\tdummy arguments are deferred-shape or assumed-rank pointer.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/94110\n\t* gfortran.dg/PR94110.f90: New test.", "tree": {"sha": "81c3e89cbcf01f520d97ed315f4870c994d7b48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c3e89cbcf01f520d97ed315f4870c994d7b48f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44c677d1ebb24fb9137943afb6a9981d0b2c14ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44c677d1ebb24fb9137943afb6a9981d0b2c14ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44c677d1ebb24fb9137943afb6a9981d0b2c14ea"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "020cdd73df821483e2289381c83a27049403e648", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "patch": "@@ -3303,7 +3303,10 @@ gfc_compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t  return false;\n \t}\n \n-      if (f->sym->as && f->sym->as->type == AS_ASSUMED_SHAPE\n+      if (f->sym->as\n+\t  && (f->sym->as->type == AS_ASSUMED_SHAPE\n+\t      || f->sym->as->type == AS_DEFERRED\n+\t      || (f->sym->as->type == AS_ASSUMED_RANK && f->sym->attr.pointer))\n \t  && a->expr->expr_type == EXPR_VARIABLE\n \t  && a->expr->symtree->n.sym->as\n \t  && a->expr->symtree->n.sym->as->type == AS_ASSUMED_SIZE"}, {"sha": "9ec70ec857e49ccafd439426de3479f752ac89c7", "filename": "gcc/testsuite/gfortran.dg/PR94110.f90", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94110.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94110.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94110.f90?ref=8e1be7efcb1c68dd82e2b2c1bcf3e5ace245654d", "patch": "@@ -0,0 +1,88 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR94110\n+! \n+  \n+program asa_p\n+\n+  implicit none\n+\n+  integer, parameter :: n = 7\n+\n+  integer :: p(n)\n+  integer :: s\n+\n+  p = 1\n+  s = sumf_as(p)\n+  if (s/=n) stop 1\n+  s = sumf_ar(p)\n+  if (s/=n) stop 2\n+  stop\n+\n+contains\n+\n+  function sumf_as(a) result(s)\n+    integer, target, intent(in) :: a(*)\n+\n+    integer :: s\n+\n+    s = sum_as(a)   ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+    s = sum_p_ds(a) ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+    s = sum_p_ar(a) ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+    return\n+  end function sumf_as\n+\n+  function sumf_ar(a) result(s)\n+    integer, target, intent(in) :: a(..)\n+\n+    integer :: s\n+\n+    select rank(a)\n+    rank(*)\n+      s = sum_as(a)   ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+      s = sum_p_ds(a) ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+      s = sum_p_ar(a) ! { dg-error \"Actual argument for .a. cannot be an assumed-size array\" } \n+    rank default\n+      stop 3\n+    end select\n+    return\n+  end function sumf_ar\n+\n+  function sum_as(a) result(s)\n+    integer, intent(in) :: a(:)\n+  \n+    integer :: s\n+\n+    s = sum(a)\n+    return\n+  end function sum_as\n+\n+  function sum_p_ds(a) result(s)\n+    integer, pointer, intent(in) :: a(:)\n+  \n+    integer :: s\n+\n+    s = -1\n+    if(associated(a))&\n+      s = sum(a)\n+    return\n+  end function sum_p_ds\n+\n+  function sum_p_ar(a) result(s)\n+    integer, pointer, intent(in) :: a(..)\n+  \n+    integer :: s\n+\n+    s = -1\n+    select rank(a)\n+    rank(1)\n+      if(associated(a))&\n+        s = sum(a)\n+    rank default\n+      stop 4\n+    end select\n+    return\n+  end function sum_p_ar\n+\n+end program asa_p\n+"}]}