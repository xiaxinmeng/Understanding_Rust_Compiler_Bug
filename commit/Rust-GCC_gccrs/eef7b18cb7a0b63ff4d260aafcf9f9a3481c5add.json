{"sha": "eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmN2IxOGNiN2EwYjYzZmY0ZDI2MGFhZmNmOWY5YTM0ODFjNWFkZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-11-28T19:33:35Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-11-28T19:33:35Z"}, "message": "re PR target/64061 (ICE: in gen_rtx_SUBREG, at emit-rtl.c:894 with -O2 -g -fno-dce -fno-tree-dce)\n\n2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/64061\n\t* lra.c (lra_substitute_pseudo): Ignore constant with int mode for\n\tsubreg.\n\n2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/64061\n\t* gcc.target/i386/pr64061.c: New.\n\nFrom-SVN: r218171", "tree": {"sha": "7ed61fad0ada7e9ee91ca156c10e8532199990a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ed61fad0ada7e9ee91ca156c10e8532199990a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee95f9288a029478f1fbf9741db51855ac9a552b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee95f9288a029478f1fbf9741db51855ac9a552b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee95f9288a029478f1fbf9741db51855ac9a552b"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "92e0af5dff72aa82b20daa9e23964bf18cbb22d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "patch": "@@ -1,3 +1,9 @@\n+2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/64061\n+\t* lra.c (lra_substitute_pseudo): Ignore constant with int mode for\n+\tsubreg.\n+\n 2014-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/64093"}, {"sha": "65350631501262bc7a05b97e4a45499ffc7b518c", "filename": "gcc/lra.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "patch": "@@ -1806,7 +1806,8 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg)\n       machine_mode mode = GET_MODE (*loc);\n       machine_mode inner_mode = GET_MODE (new_reg);\n \n-      if (mode != inner_mode)\n+      if (mode != inner_mode\n+\t  && ! (CONST_INT_P (new_reg) && SCALAR_INT_MODE_P (mode)))\n \t{\n \t  if (GET_MODE_SIZE (mode) >= GET_MODE_SIZE (inner_mode)\n \t      || ! SCALAR_INT_MODE_P (inner_mode))"}, {"sha": "31bcf5cd6837801c0ec77dc77331119921eeb8a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "patch": "@@ -1,11 +1,16 @@\n+2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/64061\n+\t* gcc.target/i386/pr64061.c: New.\n+\n 2014-11-28  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/shift-8.c: New test.\n \n 2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/64087\n-\t*  gcc.dg/pr64087.c: New.\n+\t* gcc.dg/pr64087.c: New.\n \n 2014-11-28  H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "5794d06bbda49e72fa01e5812cb2f98f38673894", "filename": "gcc/testsuite/gcc.target/i386/pr64061.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64061.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64061.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64061.c?ref=eef7b18cb7a0b63ff4d260aafcf9f9a3481c5add", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -fno-dce -fno-tree-dce\" } */\n+\n+extern void *buf;\n+\n+extern void bar (void);\n+\n+int\n+foo (int i)\n+{\n+  int j = 0;\n+  if (__builtin_setjmp (buf) == 0)\n+    {\n+      while (1)\n+      {\n+        j = 1;\n+\t  bar ();\n+\t  }\n+    }\n+  return j ? i : 0;\n+}"}]}