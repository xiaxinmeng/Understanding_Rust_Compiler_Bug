{"sha": "73a737681502c4880bee7b1825a4ff0c30f97e79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhNzM3NjgxNTAyYzQ4ODBiZWU3YjE4MjVhNGZmMGMzMGY5N2U3OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-10-01T19:11:07Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-10-01T19:11:07Z"}, "message": "re PR c/8083 (GCC does not warn for aliasing violations)\n\n\tPR c/8083\n\t* c-typeck.c (build_c_cast): Warn about type punning which breaks\n\ttype based aliasing.\ntestsuite:\n\t* gcc.dg/alias-1.c: New test.\n\nFrom-SVN: r57698", "tree": {"sha": "4d8138cc11bddd48062039b3be6a93ad7ecb8eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d8138cc11bddd48062039b3be6a93ad7ecb8eff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73a737681502c4880bee7b1825a4ff0c30f97e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a737681502c4880bee7b1825a4ff0c30f97e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a737681502c4880bee7b1825a4ff0c30f97e79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a737681502c4880bee7b1825a4ff0c30f97e79/comments", "author": null, "committer": null, "parents": [{"sha": "0645ba8f0b34dbbce7a57dcf712cd0cb261edcc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0645ba8f0b34dbbce7a57dcf712cd0cb261edcc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0645ba8f0b34dbbce7a57dcf712cd0cb261edcc2"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "600b7ea4a6e926ad301b667de8f71bdb8285c92e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73a737681502c4880bee7b1825a4ff0c30f97e79", "patch": "@@ -1,3 +1,9 @@\n+2002-10-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c/8083\n+\t* c-typeck.c (build_c_cast): Warn about type punning which breaks\n+\ttype based aliasing.\n+\n 2002-10-01  Mark Mitchell  <mark@codesourcery.com>\n \n \t* stor-layout.c (update_alignment_for_field): New function.\n@@ -6,6 +12,7 @@\n \t\n 2002-10-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR other/8077\n \t* gcc.c (cc1_options): Add space on -auxbase-strip.\n \n 2002-10-01  Jim Wilson  <wilson@redhat.com>"}, {"sha": "6fd14e5e74379063709ff5387fa62026f9b6448f", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=73a737681502c4880bee7b1825a4ff0c30f97e79", "patch": "@@ -3759,6 +3759,23 @@ build_c_cast (type, expr)\n \t  && !TREE_CONSTANT (value))\n \twarning (\"cast to pointer from integer of different size\");\n \n+      if (TREE_CODE (type) == POINTER_TYPE\n+\t  && TREE_CODE (otype) == POINTER_TYPE\n+\t  && TREE_CODE (expr) == ADDR_EXPR\n+\t  && DECL_P (TREE_OPERAND (expr, 0))\n+\t  && flag_strict_aliasing && extra_warnings\n+\t  && !VOID_TYPE_P (TREE_TYPE (type)))\n+\t{\n+ \t  /* Casting the address of a decl to non void pointer. Warn\n+\t     if the cast breaks type based aliasing.  */\n+\t  if (!COMPLETE_TYPE_P (TREE_TYPE (type)))\n+\t    warning (\"type punning to incomplete type might not be type based aliasing safe\");\n+\t  else if (!alias_sets_conflict_p\n+\t\t   (get_alias_set (TREE_TYPE (TREE_OPERAND (expr, 0))),\n+\t\t    get_alias_set (TREE_TYPE (type))))\n+\t    warning (\"type punning cast is not type based aliasing safe\");\n+\t}\n+      \n       ovalue = value;\n       value = convert (type, value);\n "}, {"sha": "ccfba4efc3304dde1e92b8419198bad16cdc94c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73a737681502c4880bee7b1825a4ff0c30f97e79", "patch": "@@ -1,3 +1,7 @@\n+2002-10-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.dg/alias-1.c: New test.\n+\n 2002-10-01  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/empty1.C: New test."}, {"sha": "71056e9b6d824c64f6db2edf6b426c9999d1f9ab", "filename": "gcc/testsuite/gcc.dg/alias-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a737681502c4880bee7b1825a4ff0c30f97e79/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c?ref=73a737681502c4880bee7b1825a4ff0c30f97e79", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile }\n+// { dg-options \"-W -fstrict-aliasing\" }\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 29 Sep 2002 <nathan@codesourcery.com>\n+\n+// 8083. warn about odd casts\n+\n+typedef int YYSTYPE;\n+typedef struct tDefEntry \n+{\n+  unsigned t;\n+  \n+} tDefEntry;\n+struct incomplete;\n+\n+\n+YYSTYPE\n+ addSibMacro(\n+         YYSTYPE  list )\n+ {\n+     tDefEntry** ppT   = (tDefEntry**)&list; // { dg-warning \"type punning cast\" \"\" }\n+ \n+     struct incomplete *p = (struct incomplete *)&list; // { dg-warning \"type punning to incomplete\" \"\" }\n+     \n+     return list;\n+ }\n+"}]}