{"sha": "61b1bece8e0f78134f1a031b755b4d61a4e1d30f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiMWJlY2U4ZTBmNzgxMzRmMWEwMzFiNzU1YjRkNjFhNGUxZDMwZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-25T19:04:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-25T19:04:54Z"}, "message": "Fix typo in comment.\n\nFrom-SVN: r13792", "tree": {"sha": "36eee09f83ba2bdbdc02a18426d7b739a12e358b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36eee09f83ba2bdbdc02a18426d7b739a12e358b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61b1bece8e0f78134f1a031b755b4d61a4e1d30f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b1bece8e0f78134f1a031b755b4d61a4e1d30f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b1bece8e0f78134f1a031b755b4d61a4e1d30f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b1bece8e0f78134f1a031b755b4d61a4e1d30f/comments", "author": null, "committer": null, "parents": [{"sha": "2c3631ee1915f22e12973de5f2f8b99eaf543f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3631ee1915f22e12973de5f2f8b99eaf543f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c3631ee1915f22e12973de5f2f8b99eaf543f1c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "df6a3228242abc194b18080454456f50cf97f073", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b1bece8e0f78134f1a031b755b4d61a4e1d30f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b1bece8e0f78134f1a031b755b4d61a4e1d30f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=61b1bece8e0f78134f1a031b755b4d61a4e1d30f", "patch": "@@ -3396,7 +3396,7 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \t take the low bits.  On a little-endian machine, that's\n \t always valid.  On a big-endian machine, it's valid\n \t only if the constant's mode fits in one word.   Note that we\n-\t cannot use subreg_lowpart_p since we SUBREG_REG may be VOIDmode.  */\n+\t cannot use subreg_lowpart_p since SUBREG_REG may be VOIDmode.  */\n       if (CONSTANT_P (SUBREG_REG (x))\n \t  && ((GET_MODE_SIZE (op0_mode) <= UNITS_PER_WORD\n \t      || ! WORDS_BIG_ENDIAN)"}]}