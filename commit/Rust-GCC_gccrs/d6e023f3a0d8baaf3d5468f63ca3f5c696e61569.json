{"sha": "d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlMDIzZjNhMGQ4YmFhZjNkNTQ2OGY2M2NhM2Y1YzY5NmU2MTU2OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-01T17:55:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-01T17:55:33Z"}, "message": "fs_dir.h: Fix use of non-reserved names.\n\n\t* include/experimental/fs_dir.h: Fix use of non-reserved names.\n\t* include/experimental/fs_ops.h: Likewise.\n\t* include/experimental/fs_path.h: Likewise.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_filesystem_ts): Use\n\tC++11 when checking for support.\n\nFrom-SVN: r222695", "tree": {"sha": "ef858f320f00807ea48bc53749515f0cdd2af817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef858f320f00807ea48bc53749515f0cdd2af817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9cd006414899e263a12f5afb971f8db817dce85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9cd006414899e263a12f5afb971f8db817dce85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9cd006414899e263a12f5afb971f8db817dce85"}], "stats": {"total": 56, "additions": 34, "deletions": 22}, "files": [{"sha": "5428727a198c7e4e35ea1326db6ab0fa291b4a1e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "patch": "@@ -1,5 +1,11 @@\n 2015-05-01  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/fs_dir.h: Fix use of non-reserved names.\n+\t* include/experimental/fs_ops.h: Likewise.\n+\t* include/experimental/fs_path.h: Likewise.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_filesystem_ts): Use\n+\tC++11 when checking for support.\n+\n \t* include/bits/locale_classes.h (locale::facet): Delete copy\n \toperations in C++11 mode.\n "}, {"sha": "d46d41bfb02828268cb5b28bd0a6f19231147d2f", "filename": "libstdc++-v3/include/experimental/fs_dir.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_dir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_dir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_dir.h?ref=d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "patch": "@@ -180,14 +180,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       directory_options __options, error_code& __ec) noexcept\n     : directory_iterator(__p, __options, &__ec) { }\n \n-    directory_iterator(const directory_iterator& rhs) = default;\n+    directory_iterator(const directory_iterator& __rhs) = default;\n \n-    directory_iterator(directory_iterator&& rhs) noexcept = default;\n+    directory_iterator(directory_iterator&& __rhs) noexcept = default;\n \n     ~directory_iterator() = default;\n \n-    directory_iterator& operator=(const directory_iterator& rhs) = default;\n-    directory_iterator& operator=(directory_iterator&& rhs) noexcept = default;\n+    directory_iterator& operator=(const directory_iterator& __rhs) = default;\n+    directory_iterator& operator=(directory_iterator&& __rhs) noexcept = default;\n \n     const directory_entry& operator*() const;\n     const directory_entry* operator->() const { return &**this; }\n@@ -269,9 +269,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n     // modifiers\n     recursive_directory_iterator&\n-      operator=(const recursive_directory_iterator& rhs) noexcept;\n+      operator=(const recursive_directory_iterator& __rhs) noexcept;\n     recursive_directory_iterator&\n-      operator=(recursive_directory_iterator&& rhs) noexcept;\n+      operator=(recursive_directory_iterator&& __rhs) noexcept;\n \n     recursive_directory_iterator& operator++();\n     recursive_directory_iterator& increment(error_code& __ec) noexcept;"}, {"sha": "6b7d4709ee5bee31919c406985c499c8e16452fb", "filename": "libstdc++-v3/include/experimental/fs_ops.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_ops.h?ref=d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "patch": "@@ -53,8 +53,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   path absolute(const path& __p, const path& __base = current_path());\n \n   path canonical(const path& __p, const path& __base = current_path());\n-  path canonical(const path& p, error_code& ec);\n-  path canonical(const path& p, const path& base, error_code& ec);\n+  path canonical(const path& __p, error_code& __ec);\n+  path canonical(const path& __p, const path& __base, error_code& __ec);\n \n   inline void\n   copy(const path& __from, const path& __to)\n@@ -64,8 +64,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   copy(const path& __from, const path& __to, error_code& __ec) noexcept\n   { copy(__from, __to, copy_options::none, __ec); }\n \n-  void copy(const path& __from, const path& __to, copy_options options);\n-  void copy(const path& __from, const path& __to, copy_options options,\n+  void copy(const path& __from, const path& __to, copy_options __options);\n+  void copy(const path& __from, const path& __to, copy_options __options,\n \t    error_code& __ec) noexcept;\n \n   inline bool\n@@ -239,12 +239,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   file_time_type  last_write_time(const path& __p);\n   file_time_type  last_write_time(const path& __p, error_code& __ec) noexcept;\n-  void last_write_time(const path& __p, file_time_type new_time);\n-  void last_write_time(const path& __p, file_time_type new_time,\n+  void last_write_time(const path& __p, file_time_type __new_time);\n+  void last_write_time(const path& __p, file_time_type __new_time,\n \t\t       error_code& __ec) noexcept;\n \n-  void permissions(const path& __p, perms prms);\n-  void permissions(const path& __p, perms prms, error_code& __ec) noexcept;\n+  void permissions(const path& __p, perms __prms);\n+  void permissions(const path& __p, perms __prms, error_code& __ec) noexcept;\n \n   path read_symlink(const path& __p);\n   path read_symlink(const path& __p, error_code& __ec);"}, {"sha": "11b056161507f2b06076ed923e3964b082a0f1a6", "filename": "libstdc++-v3/include/experimental/fs_path.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h?ref=d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "patch": "@@ -423,9 +423,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n     void _M_split_cmpts();\n     void _M_trim();\n-    void _M_add_root_name(size_t n);\n-    void _M_add_root_dir(size_t pos);\n-    void _M_add_filename(size_t pos, size_t n);\n+    void _M_add_root_name(size_t __n);\n+    void _M_add_root_dir(size_t __pos);\n+    void _M_add_filename(size_t __pos, size_t __n);\n \n     string_type _M_pathname;\n \n@@ -681,10 +681,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     iterator  operator--(int) { auto __tmp = *this; --_M_cur; return __tmp; }\n \n     friend bool operator==(const iterator& __lhs, const iterator& __rhs)\n-    { return __lhs.equals(__rhs); }\n+    { return __lhs._M_equals(__rhs); }\n \n     friend bool operator!=(const iterator& __lhs, const iterator& __rhs)\n-    { return !__lhs.equals(__rhs); }\n+    { return !__lhs._M_equals(__rhs); }\n \n   private:\n     friend class path;\n@@ -697,7 +697,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     : _M_path(__path), _M_cur(), _M_at_end(__at_end)\n     { }\n \n-    bool equals(iterator) const;\n+    bool _M_equals(iterator) const;\n \n     const path* \t\t_M_path;\n     path::_List::const_iterator _M_cur;\n@@ -749,7 +749,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     inline path::_Path<_CharT*, _CharT*>&\n     path::operator+=(_CharT __x)\n     {\n-      auto* __addr = std::addressof(__x);\n+      auto* __addr = std::__addressof(__x);\n       return concat(__addr, __addr + 1);\n     }\n \n@@ -990,7 +990,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   }\n \n   inline bool\n-  path::iterator::equals(iterator __rhs) const\n+  path::iterator::_M_equals(iterator __rhs) const\n   {\n     if (_M_path != __rhs._M_path)\n       return false;"}, {"sha": "7d8f2829de84e54fcd3b6dbaddb6bd2860f72935", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e023f3a0d8baaf3d5468f63ca3f5c696e61569/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=d6e023f3a0d8baaf3d5468f63ca3f5c696e61569", "patch": "@@ -1896,6 +1896,8 @@ proc check_v3_target_little_endian { } {\n }\n \n proc check_v3_target_filesystem_ts { } {\n+    global cxxflags\n+    global DEFAULT_CXXFLAGS\n     global et_filesystem_ts\n     global tool\n \n@@ -1930,7 +1932,11 @@ proc check_v3_target_filesystem_ts { } {\n \tputs $f \"#endif\"\n \tclose $f\n \n+\tset cxxflags_saved $cxxflags\n+\tset cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -Werror -std=gnu++11\"\n+\n \tset lines [v3_target_compile $src /dev/null preprocess \"\"]\n+\tset cxxflags $cxxflags_saved\n \tfile delete $src\n \n \tif [string match \"\" $lines] {"}]}