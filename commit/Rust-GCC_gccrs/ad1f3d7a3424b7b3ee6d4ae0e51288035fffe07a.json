{"sha": "ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxZjNkN2EzNDI0YjdiM2VlNmQ0YWUwZTUxMjg4MDM1ZmZmZTA3YQ==", "commit": {"author": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-14T00:28:08Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-14T00:28:08Z"}, "message": "ArrayId.java: New file.\n\n        * gnu/classpath/jdwp/id/ArrayId.java: New file.\n        * gnu/classpath/jdwp/id/ArrayReferenceTypeId.java: New file.\n        * gnu/classpath/jdwp/id/ClassLoaderId.java: New file.\n        * gnu/classpath/jdwp/id/ClassObjectId.java: New file.\n        * gnu/classpath/jdwp/id/ClassReferenceTypeId.java: New file.\n        * gnu/classpath/jdwp/id/InterfaceReferenceTypeId.java: New file.\n        * gnu/classpath/jdwp/id/JdwpId.java: New file.\n        * gnu/classpath/jdwp/id/ObjectId.java: New file.\n        * gnu/classpath/jdwp/id/ReferenceTypeId.java: New file.\n        * gnu/classpath/jdwp/id/StringId.java: New file.\n        * gnu/classpath/jdwp/id/ThreadGroupId.java: New file.\n        * gnu/classpath/jdwp/id/ThreadId.java: New file.\n\nFrom-SVN: r100913", "tree": {"sha": "ec3f7177e861958c942ad20608d303abc4bfd851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec3f7177e861958c942ad20608d303abc4bfd851"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/comments", "author": null, "committer": null, "parents": [{"sha": "e2623cc61cd3b83a039c755f615e3634efa8cde8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2623cc61cd3b83a039c755f615e3634efa8cde8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2623cc61cd3b83a039c755f615e3634efa8cde8"}], "stats": {"total": 866, "additions": 866, "deletions": 0}, "files": [{"sha": "bd95b84e5e5469b1ea53c7e0ea74eef60c3c9117", "filename": "libjava/gnu/classpath/jdwp/id/ArrayId.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,62 @@\n+/* ArrayId.java -- array object IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP array id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ArrayId\n+  extends ObjectId\n+{\n+  // Arrays are handled a little differently than other IDs\n+  //public static final Class typeClass = UNDEFINED\n+\n+  /**\n+   * Constructs a new <code>ArrayId</code>\n+   */\n+  public ArrayId ()\n+  {\n+    super (JdwpConstants.Tag.ARRAY);\n+  }\n+}"}, {"sha": "23cf4e80f6f3405caf28dd70cc09222f0f9e2344", "filename": "libjava/gnu/classpath/jdwp/id/ArrayReferenceTypeId.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FArrayReferenceTypeId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,59 @@\n+/* ArrayReferenceTypeId.java -- array reference type ids\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A reference type ID representing java arrays\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ArrayReferenceTypeId\n+  extends ReferenceTypeId\n+{\n+  /**\n+   * Constructs a new <code>ArrayReferenceTypeId</code>\n+   */\n+  public ArrayReferenceTypeId ()\n+  {\n+    super (JdwpConstants.TypeTag.ARRAY);\n+  }\n+}"}, {"sha": "1f2b1e468ed27d47d433c62d662c30ccab56df54", "filename": "libjava/gnu/classpath/jdwp/id/ClassLoaderId.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,64 @@\n+/* ClassLoaderId.java -- class loader IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP thread id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ClassLoaderId\n+  extends ObjectId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = ClassLoader.class;\n+\n+  /**\n+   * Constructs a new <code>ClassLoaderId</code>\n+   */\n+  public ClassLoaderId ()\n+  {\n+    super (JdwpConstants.Tag.CLASS_LOADER);\n+  }\n+}"}, {"sha": "cb756fdf166ee3f3a5516e6936ce12d8abd7ee7c", "filename": "libjava/gnu/classpath/jdwp/id/ClassObjectId.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,64 @@\n+/* ClassObjectId.java -- class object IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP class object id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ClassObjectId\n+  extends ObjectId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = Class.class;\n+\n+  /**\n+   * Constructs a new <code>ClassObjectId</code>\n+   */\n+  public ClassObjectId ()\n+  {\n+    super (JdwpConstants.Tag.CLASS_OBJECT);\n+  }\n+}"}, {"sha": "4f96802a4b090b7ffa5a87493ac8e15528f5553f", "filename": "libjava/gnu/classpath/jdwp/id/ClassReferenceTypeId.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassReferenceTypeId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,59 @@\n+/* ClassReferenceTypeId.java -- class reference type ids\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A reference type ID representing java classes\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ClassReferenceTypeId\n+  extends ReferenceTypeId\n+{\n+  /**\n+   * Constructs a new <code>ClassReferenceTypeId</code>\n+   */\n+  public ClassReferenceTypeId ()\n+  {\n+    super (JdwpConstants.TypeTag.CLASS);\n+  }\n+}"}, {"sha": "95d5a489699b0712ca50b9f76850ae9ae2adab6c", "filename": "libjava/gnu/classpath/jdwp/id/InterfaceReferenceTypeId.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FInterfaceReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FInterfaceReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FInterfaceReferenceTypeId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,59 @@\n+/* InterfaceReferenceTypeId.java -- interface reference type ids\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A reference type ID representing java interfaces\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InterfaceReferenceTypeId\n+  extends ReferenceTypeId\n+{\n+  /**\n+   * Constructs a new <code>InterfaceReferenceTypeId</code>\n+   */\n+  public InterfaceReferenceTypeId ()\n+  {\n+    super (JdwpConstants.TypeTag.INTERFACE);\n+  }\n+}"}, {"sha": "81b6d2659858a088c24eada470fee3eb3515653b", "filename": "libjava/gnu/classpath/jdwp/id/JdwpId.java", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,127 @@\n+/* JdwpId.java -- base class for all object ID types\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * A baseclass for all object types reported to the debugger\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public abstract class JdwpId\n+{\n+  /**\n+   * ID assigned to this object\n+   */\n+  protected long _id;\n+\n+  /**\n+   * Tag of ID's type (see {@link gnu.classpath.jdwp.JdwpConstants.Tag})\n+   * for object-like IDs or the type tag (see {@link\n+   * gnu.classpath.JdwpConstants.TypeTag}) for reference type IDs.\n+   */\n+  private byte _tag;\n+\n+  /**\n+   * Constructs an empty <code>JdwpId</code>\n+   */\n+  public JdwpId (byte tag)\n+  {\n+    _tag = tag;\n+  }\n+\n+  /**\n+   * Sets the id for this object reference\n+   */\n+  void setId (long id)\n+  {\n+    _id = id;\n+  }\n+\n+  /**\n+   * Returns the id for this object reference\n+   */\n+  public long getId ()\n+  {\n+    return _id;\n+  }\n+\n+  /**\n+   * Compares two object ids for equality. Two object ids\n+   * are equal if they point to the same type and contain to\n+   * the same id number. (NOTE: This is a much stricter check\n+   * than is necessary: all <code>JdwpId</code>s have unique\n+   * ids.)\n+   */\n+  public boolean equals (JdwpId id)\n+  {\n+    return ((id.getClass () == getClass ()) && (id.getId () == getId ()));\n+  }\n+\n+  /**\n+   * Returns size of this type (used by IDSizes)\n+   */\n+  public abstract int size ();\n+\n+  /**\n+   * Writes the contents of this type to the <code>DataOutputStream</code>\n+   * @param  outStream    the <code>DataOutputStream</code> to use\n+   * @throws IOException  when an error occurs on the <code>OutputStream</code>\n+   */\n+  public abstract void write (DataOutputStream outStream)\n+    throws IOException;\n+\n+  /**\n+   * Writes the contents of this type to the output stream, preceded\n+   * by a one-byte tag for tagged object IDs or type tag for\n+   * reference type IDs.\n+   *\n+   * @param  outStream    the <code>DataOutputStream</code> to use\n+   * @throws IOException  when an error occurs on the <code>OutputStream</code>\n+   */\n+  public void writeTagged (DataOutputStream outStream)\n+    throws IOException\n+  {\n+    outStream.writeByte (_tag);\n+    write (outStream);\n+  }\n+}"}, {"sha": "6bd399fe2e78c60f7bd8a7d1839f1031423f0df7", "filename": "libjava/gnu/classpath/jdwp/id/ObjectId.java", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,99 @@\n+/* ObjectId.java -- object IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * A class which represents a JDWP object id for an object\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ObjectId\n+  extends JdwpId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = Object.class;\n+\n+  /**\n+   * Constructs a new <code>ObjectId</code>\n+   */\n+  public ObjectId ()\n+  {\n+    super (JdwpConstants.Tag.OBJECT);\n+  }\n+\n+  /**\n+   * Constructs a new <code>ObjectId</code> of the\n+   * given type.\n+   *\n+   * @param  tag  the tag of this type of object ID\n+   */\n+  public ObjectId (byte tag)\n+  {\n+    super (tag);\n+  }\n+\n+  /**\n+   * Returns the size of this id type\n+   */\n+  public int size ()\n+  {\n+    return 8;\n+  }\n+\n+  /**\n+   * Writes the id to the stream\n+   *\n+   * @param outStream  the stream to which to write\n+   * @throws IOException  when an error occurs on the <code>OutputStream</code>\n+   */\n+  public void write (DataOutputStream outStream)\n+    throws IOException\n+  {\n+    // All we need to do is write out our id as an 8-byte integer\n+    outStream.writeLong (_id);\n+  }\n+}"}, {"sha": "63f38af04f183c81bab4174bb18d9d14250804c3", "filename": "libjava/gnu/classpath/jdwp/id/ReferenceTypeId.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,81 @@\n+/* ReferenceTypeId.java -- a base class for all reference type IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * Base class for reference type IDs. This class usurps\n+ * <code>JdwpId</code>'s tag member for its own use (type tag).\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ReferenceTypeId\n+  extends JdwpId\n+{\n+  /**\n+   * Constructor used by {Array,Interface,Class}ReferenceTypeId\n+   */\n+  public ReferenceTypeId (byte tag)\n+  {\n+    super (tag);\n+  }\n+\n+  /**\n+   * Returns the size of this ID type\n+   */\n+  public int size ()\n+  {\n+    return 8;\n+  }\n+\n+  /**\n+   * Outputs the reference type ID to the given output stream\n+   *\n+   * @param  outStream    the stream to which to write the data\n+   * @throws IOException  for errors writing to the stream\n+   */\n+  public void write (DataOutputStream outStream)\n+    throws IOException\n+  {\n+    outStream.writeLong (_id);\n+  }\n+}"}, {"sha": "9e5b7ce8b64672cc005e9369708c96d978d7b466", "filename": "libjava/gnu/classpath/jdwp/id/StringId.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,64 @@\n+/* StringId.java -- string IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP string id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class StringId\n+  extends ObjectId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = String.class;\n+\n+  /**\n+   * Constructs a new <code>StringId</code>\n+   */\n+  public StringId ()\n+  {\n+    super (JdwpConstants.Tag.STRING);\n+  }\n+}"}, {"sha": "80e8ac5001ea6b4ec8590fd151b0f7c2d432a7ec", "filename": "libjava/gnu/classpath/jdwp/id/ThreadGroupId.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,64 @@\n+/* ThreadGroupId.java -- thread group IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP thread group id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ThreadGroupId\n+  extends ObjectId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = ThreadGroup.class;\n+\n+  /**\n+   * Constructs a new <code>ThreadGroupId</code>\n+   */\n+  public ThreadGroupId ()\n+  {\n+    super (JdwpConstants.Tag.THREAD_GROUP);\n+  }\n+}"}, {"sha": "9a719bec9fcbe6d45d25d918bc38618df671cd7e", "filename": "libjava/gnu/classpath/jdwp/id/ThreadId.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java?ref=ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "patch": "@@ -0,0 +1,64 @@\n+/* ThreadId.java -- thread IDs\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.id;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * A class which represents a JDWP thread id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class ThreadId\n+  extends ObjectId\n+{\n+  /**\n+   * The object class that this id represents\n+   */\n+  public static final Class typeClass = Thread.class;\n+\n+  /**\n+   * Constructs a new <code>ThreadId</code>\n+   */\n+  public ThreadId ()\n+  {\n+    super (JdwpConstants.Tag.THREAD);\n+  }\n+}"}]}