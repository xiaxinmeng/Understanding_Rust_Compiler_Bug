{"sha": "e292d00367ce0a736a7c1e1433e7920eeb0673cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5MmQwMDM2N2NlMGE3MzZhN2MxZTE0MzNlNzkyMGVlYjA2NzNjZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-21T13:38:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-21T13:38:48Z"}, "message": "re PR bootstrap/47820 (LTO bootstrap failed with bootstrap-profiled)\n\n2011-02-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/47820\n\t* lto-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n\tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n\t(lto_input_ts_block_tree_pointers): Hook a BLOCK into the\n\tTUs context.\n\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers): \n\tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n\nFrom-SVN: r170359", "tree": {"sha": "5486fd865bb1f6e0283517fb9cf12a043b6de87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5486fd865bb1f6e0283517fb9cf12a043b6de87c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e292d00367ce0a736a7c1e1433e7920eeb0673cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e292d00367ce0a736a7c1e1433e7920eeb0673cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e292d00367ce0a736a7c1e1433e7920eeb0673cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e292d00367ce0a736a7c1e1433e7920eeb0673cf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "fbd8007c99d246bd359342f541a78e4d7f7a2260", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e292d00367ce0a736a7c1e1433e7920eeb0673cf", "patch": "@@ -1,3 +1,13 @@\n+2011-02-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/47820\n+\t* lto-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n+\tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n+\t(lto_input_ts_block_tree_pointers): Hook a BLOCK into the\n+\tTUs context.\n+\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers): \n+\tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n+\n 2011-02-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/47822"}, {"sha": "7409c1aca9d4a0a23deed52fad4a50040c741e7b", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=e292d00367ce0a736a7c1e1433e7920eeb0673cf", "patch": "@@ -1975,7 +1975,8 @@ lto_input_ts_decl_common_tree_pointers (struct lto_input_block *ib,\n   DECL_SIZE (expr) = lto_input_tree (ib, data_in);\n   DECL_SIZE_UNIT (expr) = lto_input_tree (ib, data_in);\n \n-  if (TREE_CODE (expr) != FUNCTION_DECL)\n+  if (TREE_CODE (expr) != FUNCTION_DECL\n+      && TREE_CODE (expr) != TRANSLATION_UNIT_DECL)\n     DECL_INITIAL (expr) = lto_input_tree (ib, data_in);\n \n   DECL_ATTRIBUTES (expr) = lto_input_tree (ib, data_in);\n@@ -2207,6 +2208,13 @@ lto_input_ts_block_tree_pointers (struct lto_input_block *ib,\n       BLOCK_CHAIN (expr) = BLOCK_SUBBLOCKS (BLOCK_SUPERCONTEXT (expr));\n       BLOCK_SUBBLOCKS (BLOCK_SUPERCONTEXT (expr)) = expr;\n     }\n+  /* The global block is rooted at the TU decl.  Hook it here to\n+     avoid the need to stream in this block during WPA time.  */\n+  else if (BLOCK_SUPERCONTEXT (expr)\n+\t   && TREE_CODE (BLOCK_SUPERCONTEXT (expr)) == TRANSLATION_UNIT_DECL)\n+    DECL_INITIAL (BLOCK_SUPERCONTEXT (expr)) = expr;\n+  /* The function-level block is connected at the time we read in\n+     function bodies for the same reason.  */\n }\n \n "}, {"sha": "29d171bd7f41cc9d58a93b19b28c7d188f778d6b", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e292d00367ce0a736a7c1e1433e7920eeb0673cf/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=e292d00367ce0a736a7c1e1433e7920eeb0673cf", "patch": "@@ -849,7 +849,8 @@ lto_output_ts_decl_common_tree_pointers (struct output_block *ob, tree expr,\n   lto_output_tree_or_ref (ob, DECL_SIZE (expr), ref_p);\n   lto_output_tree_or_ref (ob, DECL_SIZE_UNIT (expr), ref_p);\n \n-  if (TREE_CODE (expr) != FUNCTION_DECL)\n+  if (TREE_CODE (expr) != FUNCTION_DECL\n+      && TREE_CODE (expr) != TRANSLATION_UNIT_DECL)\n     {\n       tree initial = DECL_INITIAL (expr);\n       if (TREE_CODE (expr) == VAR_DECL"}]}