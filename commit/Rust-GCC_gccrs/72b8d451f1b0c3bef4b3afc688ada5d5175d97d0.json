{"sha": "72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiOGQ0NTFmMWIwYzNiZWY0YjNhZmM2ODhhZGE1ZDUxNzVkOTdkMA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2003-03-08T09:47:28Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2003-03-08T09:47:28Z"}, "message": "gcse.c (bypass_block, [...]): Do not create irreducible loops.\n\n\t* gcse.c (bypass_block, bypass_conditional_jumps): Do not create\n\tirreducible loops.\n\n\t* loop-unroll.c (unroll_loop_runtime_iterations): Update irreducible\n\tloops info correctly.\n\nFrom-SVN: r63980", "tree": {"sha": "2049f3fc3ca464bc5ba32b5c28fce7018ba25366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2049f3fc3ca464bc5ba32b5c28fce7018ba25366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/comments", "author": null, "committer": null, "parents": [{"sha": "612dc71803c6a8419ad07b13462dd15732d650b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612dc71803c6a8419ad07b13462dd15732d650b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612dc71803c6a8419ad07b13462dd15732d650b4"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "e3919a9ef8485ff8e77c1cc9a0895c2383fdd495", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "patch": "@@ -1,3 +1,11 @@\n+2003-03-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* gcse.c (bypass_block, bypass_conditional_jumps): Do not create\n+\tirreducible loops.\n+\n+\t* loop-unroll.c (unroll_loop_runtime_iterations): Update irreducible\n+\tloops info correctly.\n+\n 2003-03-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR middle-end/7796"}, {"sha": "f0e588ecd4955ad72d2e2b672d57b6d3d80f6f0f", "filename": "gcc/gcse.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "patch": "@@ -4759,6 +4759,7 @@ bypass_block (bb, setcc, jump)\n   rtx insn, note;\n   edge e, enext;\n   int i, change;\n+  int may_be_loop_header;\n \n   insn = (setcc != NULL) ? setcc : jump;\n \n@@ -4769,6 +4770,14 @@ bypass_block (bb, setcc, jump)\n   if (note)\n     find_used_regs (&XEXP (note, 0), NULL);\n \n+  may_be_loop_header = false;\n+  for (e = bb->pred; e; e = e->pred_next)\n+    if (e->flags & EDGE_DFS_BACK)\n+      {\n+\tmay_be_loop_header = true;\n+\tbreak;\n+      }\n+\n   change = 0;\n   for (e = bb->pred; e; e = enext)\n     {\n@@ -4780,6 +4789,13 @@ bypass_block (bb, setcc, jump)\n       if (e->src->index >= bypass_last_basic_block)\n \tcontinue;\n \n+      /* The irreducible loops created by redirecting of edges entering the\n+\t loop from outside would decrease effectivity of some of the following\n+\t optimalizations, so prevent this.  */\n+      if (may_be_loop_header\n+\t  && !(e->flags & EDGE_DFS_BACK))\n+\tcontinue;\n+\n       for (i = 0; i < reg_use_count; i++)\n \t{\n \t  struct reg_use *reg_used = &reg_use_table[i];\n@@ -4866,6 +4882,7 @@ bypass_conditional_jumps ()\n     return 0;\n \n   bypass_last_basic_block = last_basic_block;\n+  mark_dfs_back_edges ();\n \n   changed = 0;\n   FOR_BB_BETWEEN (bb, ENTRY_BLOCK_PTR->next_bb->next_bb,"}, {"sha": "e39bdbcbffb8fc694dfc28f6309df86f1a33cade", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "patch": "@@ -895,7 +895,8 @@ unroll_loop_runtime_iterations (loops, loop)\n \t  swtch = loop_split_edge_with (swtch->pred, branch_code, loops);\n \t  set_immediate_dominator (loops->cfg.dom, preheader, swtch);\n \t  swtch->succ->probability = REG_BR_PROB_BASE - p;\n-\t  e = make_edge (swtch, preheader, 0);\n+\t  e = make_edge (swtch, preheader,\n+\t\t\t swtch->succ->flags & EDGE_IRREDUCIBLE_LOOP);\n \t  e->probability = p;\n \t}\n     }\n@@ -925,7 +926,8 @@ unroll_loop_runtime_iterations (loops, loop)\n       swtch = loop_split_edge_with (swtch->succ, branch_code, loops);\n       set_immediate_dominator (loops->cfg.dom, preheader, swtch);\n       swtch->succ->probability = REG_BR_PROB_BASE - p;\n-      e = make_edge (swtch, preheader, 0);\n+      e = make_edge (swtch, preheader,\n+\t\t     swtch->succ->flags & EDGE_IRREDUCIBLE_LOOP);\n       e->probability = p;\n     }\n "}]}