{"sha": "b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJmNjY3NWI3NGE2ZDE2YWI0NDIwMmFjMGU0OTU4N2RhOGY3ZDRjZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-05-30T19:18:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-05-30T19:18:13Z"}, "message": "re PR c++/71238 (Undeclared function message imprecisely points to error column)\n\n/cp\n2016-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/71238\n\t* lex.c (unqualified_name_lookup_error): Take a location too.\n\t(unqualified_fn_lookup_error): Take a cp_expr.\n\t* cp-tree.h (unqualified_name_lookup_error,\n\tunqualified_fn_lookup_error): Adjust declarations.\n\t* semantics.c (perform_koenig_lookup): Adjust\n\tunqualified_fn_lookup_error call, pass the location of\n\tthe identifier too as part of a cp_expr.\n\n/testsuite\n2016-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/71238\n\t* g++.dg/parse/pr71238.C: New.\n\t* g++.dg/concepts/friend1.C: Test column numbers too.\n\t* g++.dg/cpp0x/initlist31.C: Likewise.\n\t* g++.dg/cpp0x/pr51420.C: Likewise.\n\t* g++.dg/cpp0x/udlit-declare-neg.C: Likewise.\n\t* g++.dg/cpp0x/udlit-member-neg.C: Likewise.\n\t* g++.dg/ext/builtin3.C: Likewise.\n\t* g++.dg/lookup/friend12.C: Likewise.\n\t* g++.dg/lookup/friend7.C: Likewise.\n\t* g++.dg/lookup/koenig1.C: Likewise.\n\t* g++.dg/lookup/koenig5.C: Likewise.\n\t* g++.dg/lookup/used-before-declaration.C: Likewise.\n\t* g++.dg/overload/koenig1.C: Likewise.\n\t* g++.dg/template/crash65.C: Likewise.\n\t* g++.dg/template/friend57.C: Likewise.\n\t* g++.dg/warn/Wshadow-5.C: Likewise.\n\t* g++.dg/warn/Wunused-8.C: Likewise.\n\t* g++.old-deja/g++.bugs/900211_01.C: Likewise.\n\t* g++.old-deja/g++.jason/lineno5.C: Likewise.\n\t* g++.old-deja/g++.jason/member.C: Likewise.\n\t* g++.old-deja/g++.jason/report.C: Likewise.\n\t* g++.old-deja/g++.jason/scoping12.C: Likewise.\n\t* g++.old-deja/g++.law/visibility20.C: Likewise.\n\t* g++.old-deja/g++.ns/koenig5.C: Likewise.\n\t* g++.old-deja/g++.other/static5.C: Likewise.\n\t* g++.old-deja/g++.pt/overload2.C: Likewise.\n\nFrom-SVN: r236896", "tree": {"sha": "dbbf824a1e3f3eb03d521c288eda3737fe08defe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbbf824a1e3f3eb03d521c288eda3737fe08defe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/comments", "author": null, "committer": null, "parents": [{"sha": "9ce542ba4a138f762697778f339da66beeb13991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce542ba4a138f762697778f339da66beeb13991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce542ba4a138f762697778f339da66beeb13991"}], "stats": {"total": 160, "additions": 108, "deletions": 52}, "files": [{"sha": "84d7e0ac7ff23ffa456811a87740545e037f5491", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -1,3 +1,14 @@\n+2016-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/71238\n+\t* lex.c (unqualified_name_lookup_error): Take a location too.\n+\t(unqualified_fn_lookup_error): Take a cp_expr.\n+\t* cp-tree.h (unqualified_name_lookup_error,\n+\tunqualified_fn_lookup_error): Adjust declarations.\n+\t* semantics.c (perform_koenig_lookup): Adjust\n+\tunqualified_fn_lookup_error call, pass the location of\n+\tthe identifier too as part of a cp_expr.\n+\n 2016-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71099"}, {"sha": "14ba12073eec85bb5180eebca3c9ebf294184729", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -5974,8 +5974,9 @@ extern tree build_vtbl_address                  (tree);\n extern void cxx_dup_lang_specific_decl\t\t(tree);\n extern void yyungetc\t\t\t\t(int, int);\n \n-extern tree unqualified_name_lookup_error\t(tree);\n-extern tree unqualified_fn_lookup_error\t\t(tree);\n+extern tree unqualified_name_lookup_error\t(tree,\n+\t\t\t\t\t\t location_t = UNKNOWN_LOCATION);\n+extern tree unqualified_fn_lookup_error\t\t(cp_expr);\n extern tree build_lang_decl\t\t\t(enum tree_code, tree, tree);\n extern tree build_lang_decl_loc\t\t\t(location_t, enum tree_code, tree, tree);\n extern void retrofit_lang_decl\t\t\t(tree);"}, {"sha": "43827e5717906fa3a618c4e850fa7c5715d8d054", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -443,27 +443,29 @@ handle_pragma_java_exceptions (cpp_reader* /*dfile*/)\n    IDENTIFIER_NODE) failed.  Returns the ERROR_MARK_NODE.  */\n \n tree\n-unqualified_name_lookup_error (tree name)\n+unqualified_name_lookup_error (tree name, location_t loc)\n {\n+  if (loc == UNKNOWN_LOCATION)\n+    loc = EXPR_LOC_OR_LOC (name, input_location);\n+\n   if (IDENTIFIER_OPNAME_P (name))\n     {\n       if (name != ansi_opname (ERROR_MARK))\n-\terror (\"%qD not defined\", name);\n+\terror_at (loc, \"%qD not defined\", name);\n     }\n   else\n     {\n       if (!objc_diagnose_private_ivar (name))\n \t{\n-\t  error (\"%qD was not declared in this scope\", name);\n-\t  suggest_alternatives_for (location_of (name), name);\n+\t  error_at (loc, \"%qD was not declared in this scope\", name);\n+\t  suggest_alternatives_for (loc, name);\n \t}\n       /* Prevent repeated error messages by creating a VAR_DECL with\n \t this NAME in the innermost block scope.  */\n       if (local_bindings_p ())\n \t{\n \t  tree decl;\n-\t  decl = build_decl (input_location,\n-\t\t\t     VAR_DECL, name, error_mark_node);\n+\t  decl = build_decl (loc, VAR_DECL, name, error_mark_node);\n \t  DECL_CONTEXT (decl) = current_function_decl;\n \t  push_local_binding (name, decl, 0);\n \t  /* Mark the variable as used so that we do not get warnings\n@@ -475,13 +477,18 @@ unqualified_name_lookup_error (tree name)\n   return error_mark_node;\n }\n \n-/* Like unqualified_name_lookup_error, but NAME is an unqualified-id\n-   used as a function.  Returns an appropriate expression for\n-   NAME.  */\n+/* Like unqualified_name_lookup_error, but NAME_EXPR is an unqualified-id\n+   NAME, encapsulated with its location in a CP_EXPR, used as a function.\n+   Returns an appropriate expression for NAME.  */\n \n tree\n-unqualified_fn_lookup_error (tree name)\n+unqualified_fn_lookup_error (cp_expr name_expr)\n {\n+  tree name = name_expr.get_value ();\n+  location_t loc = name_expr.get_location ();\n+  if (loc == UNKNOWN_LOCATION)\n+    loc = input_location;\n+\n   if (processing_template_decl)\n     {\n       /* In a template, it is invalid to write \"f()\" or \"f(3)\" if no\n@@ -494,7 +501,7 @@ unqualified_fn_lookup_error (tree name)\n \t Note that we have the exact wording of the following message in\n \t the manual (trouble.texi, node \"Name lookup\"), so they need to\n \t be kept in synch.  */\n-      permerror (input_location, \"there are no arguments to %qD that depend on a template \"\n+      permerror (loc, \"there are no arguments to %qD that depend on a template \"\n \t\t \"parameter, so a declaration of %qD must be available\",\n \t\t name, name);\n \n@@ -503,7 +510,7 @@ unqualified_fn_lookup_error (tree name)\n \t  static bool hint;\n \t  if (!hint)\n \t    {\n-\t      inform (input_location, \"(if you use %<-fpermissive%>, G++ will accept your \"\n+\t      inform (loc, \"(if you use %<-fpermissive%>, G++ will accept your \"\n \t\t     \"code, but allowing the use of an undeclared name is \"\n \t\t     \"deprecated)\");\n \t      hint = true;\n@@ -512,7 +519,7 @@ unqualified_fn_lookup_error (tree name)\n       return name;\n     }\n \n-  return unqualified_name_lookup_error (name);\n+  return unqualified_name_lookup_error (name, loc);\n }\n \n /* Wrapper around build_lang_decl_loc(). Should gradually move to"}, {"sha": "8e682c537955456dd69a54f71c3ee2754f795fce", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -2210,6 +2210,7 @@ perform_koenig_lookup (cp_expr fn, vec<tree, va_gc> *args,\n   tree functions = NULL_TREE;\n   tree tmpl_args = NULL_TREE;\n   bool template_id = false;\n+  location_t loc = fn.get_location ();\n \n   if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n     {\n@@ -2245,7 +2246,7 @@ perform_koenig_lookup (cp_expr fn, vec<tree, va_gc> *args,\n \t{\n \t  /* The unqualified name could not be resolved.  */\n \t  if (complain)\n-\t    fn = unqualified_fn_lookup_error (identifier);\n+\t    fn = unqualified_fn_lookup_error (cp_expr (identifier, loc));\n \t  else\n \t    fn = identifier;\n \t}"}, {"sha": "4859224ed56be65ef88571399c42d4cd693b67ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -1,3 +1,33 @@\n+2016-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/71238\n+\t* g++.dg/parse/pr71238.C: New.\n+\t* g++.dg/concepts/friend1.C: Test column numbers too.\n+\t* g++.dg/cpp0x/initlist31.C: Likewise.\n+\t* g++.dg/cpp0x/pr51420.C: Likewise.\n+\t* g++.dg/cpp0x/udlit-declare-neg.C: Likewise.\n+\t* g++.dg/cpp0x/udlit-member-neg.C: Likewise.\n+\t* g++.dg/ext/builtin3.C: Likewise.\n+\t* g++.dg/lookup/friend12.C: Likewise.\n+\t* g++.dg/lookup/friend7.C: Likewise.\n+\t* g++.dg/lookup/koenig1.C: Likewise.\n+\t* g++.dg/lookup/koenig5.C: Likewise.\n+\t* g++.dg/lookup/used-before-declaration.C: Likewise.\n+\t* g++.dg/overload/koenig1.C: Likewise.\n+\t* g++.dg/template/crash65.C: Likewise.\n+\t* g++.dg/template/friend57.C: Likewise.\n+\t* g++.dg/warn/Wshadow-5.C: Likewise.\n+\t* g++.dg/warn/Wunused-8.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900211_01.C: Likewise.\n+\t* g++.old-deja/g++.jason/lineno5.C: Likewise.\n+\t* g++.old-deja/g++.jason/member.C: Likewise.\n+\t* g++.old-deja/g++.jason/report.C: Likewise.\n+\t* g++.old-deja/g++.jason/scoping12.C: Likewise.\n+\t* g++.old-deja/g++.law/visibility20.C: Likewise.\n+\t* g++.old-deja/g++.ns/koenig5.C: Likewise.\n+\t* g++.old-deja/g++.other/static5.C: Likewise.\n+\t* g++.old-deja/g++.pt/overload2.C: Likewise.\n+\n 2016-05-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/tree-ssa/peel1.c: New testcase."}, {"sha": "c78940ce813704c8c7714d5a38e780d99de6f29b", "filename": "gcc/testsuite/g++.dg/concepts/friend1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -24,7 +24,7 @@ struct X { } x;\n int main() {\n   // f(0); // OK\n   f(nt); // { dg-error \"cannot call\" }\n-  f(x);  // { dg-error \"not declared\" }\n+  f(x);  // { dg-error \"3:'f' was not declared\" }\n \n   S<int> si;\n   si == si; // OK"}, {"sha": "a8a29f9c853d10b2b667673dbc8ef0527e63696b", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist31.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -8,6 +8,6 @@ struct string { string(std::initializer_list<char>) { } };\n void f() {\n   auto y =\n   {\n-    string(Equation()) // { dg-error \"not declared\" }\n+    string(Equation()) // { dg-error \"12:'Equation' was not declared\" }\n   }; // { dg-error \"unable to deduce\" }\n }"}, {"sha": "fc70d46cc90ed24ce4940faeaebcca0707972e74", "filename": "gcc/testsuite/g++.dg/cpp0x/pr51420.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51420.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51420.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51420.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -3,6 +3,6 @@\n void\n foo()\n {\n-  float x = operator\"\" _F();  //  { dg-error  \"was not declared in this scope\" }\n+  float x = operator\"\" _F();  //  { dg-error  \"13:'operator\\\"\\\"_F' was not declared in this scope\" }\n   float y = 0_F;  //  { dg-error  \"unable to find numeric literal operator\" }\n }"}, {"sha": "721f87d4e66ec63e60959ee9768bd3a440ee4c85", "filename": "gcc/testsuite/g++.dg/cpp0x/udlit-declare-neg.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-declare-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-declare-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-declare-neg.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -2,14 +2,14 @@\n \n //  Check that undeclared literal operator calls and literals give appropriate errors.\n \n-int i = operator\"\" _Bar('x');  // { dg-error \"was not declared in this scope\" }\n+int i = operator\"\" _Bar('x');  // { dg-error \"9:'operator\\\"\\\"_Bar' was not declared in this scope\" }\n int j = 'x'_Bar;  // { dg-error \"unable to find character literal operator|with|argument\" }\n \n-int ii = operator\"\" _BarCharStr(\"Howdy, Pardner!\");  // { dg-error \"was not declared in this scope\" }\n+int ii = operator\"\" _BarCharStr(\"Howdy, Pardner!\");  // { dg-error \"10:'operator\\\"\\\"_BarCharStr' was not declared in this scope\" }\n int jj = \"Howdy, Pardner!\"_BarCharStr;  // { dg-error \"unable to find string literal operator|Possible missing length argument\" }\n \n-unsigned long long iULL = operator\"\" _BarULL(666ULL);  // { dg-error \"was not declared in this scope\" }\n+unsigned long long iULL = operator\"\" _BarULL(666ULL);  // { dg-error \"27:'operator\\\"\\\"_BarULL' was not declared in this scope\" }\n unsigned long long jULL = 666_BarULL;  // { dg-error \"unable to find numeric literal operator\" }\n \n-long double iLD = operator\"\" _BarLD(666.0L);  // { dg-error \"was not declared in this scope\" }\n+long double iLD = operator\"\" _BarLD(666.0L);  // { dg-error \"19:'operator\\\"\\\"_BarLD' was not declared in this scope\" }\n long double jLD = 666.0_BarLD;  // { dg-error \"unable to find numeric literal operator\" }"}, {"sha": "b6820661e22c391657caca7d2708f8da08c62c7a", "filename": "gcc/testsuite/g++.dg/cpp0x/udlit-member-neg.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-member-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-member-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-member-neg.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -7,7 +7,7 @@ public:\n   int operator\"\" _Bar(char32_t);  // { dg-error \"must be a non-member function\" }\n };\n \n-int i = operator\"\" _Bar(U'x');  // { dg-error \"was not declared in this scope\" }\n+int i = operator\"\" _Bar(U'x');  // { dg-error \"9:'operator\\\"\\\"_Bar' was not declared in this scope\" }\n int j = U'x'_Bar;  // { dg-error \"unable to find character literal operator\" }\n \n int"}, {"sha": "f168db62488da51ad3b9e956bc1296f36997fe8e", "filename": "gcc/testsuite/g++.dg/ext/builtin3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -9,6 +9,6 @@ extern \"C\" int printf(char*, ...); // { dg-message \"std::printf\" }\n }\n \n void foo() {\n-  printf(\"abc\"); \t\t// { dg-error \"not declared\" }\n+  printf(\"abc\"); \t\t// { dg-error \"3:'printf' was not declared\" }\n   // { dg-message \"suggested alternative\" \"suggested alternative\" { target *-*-* } 12 }\n }"}, {"sha": "98f508bbe86bf1630e8d853339dfa3c21fb8fc91", "filename": "gcc/testsuite/g++.dg/lookup/friend12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend12.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -6,5 +6,5 @@ void foo()\n   {\n     friend void bar();\t\t// { dg-error \"without prior declaration\" }\n   };\n-  bar();\t\t\t// { dg-error \"not declared\" }\n+  bar();\t\t\t// { dg-error \"3:'bar' was not declared\" }\n }"}, {"sha": "a1e1f3ee9a8471d161011a7235336578139d530e", "filename": "gcc/testsuite/g++.dg/lookup/friend7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend7.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -11,7 +11,7 @@ int main()\n struct S { friend void g(); friend void h(S); };\n struct T { friend void g(); friend void h(T); };\n void i() {\n-  g();\t\t\t// { dg-error \"not declared\" }\n+  g();\t\t\t// { dg-error \"3:'g' was not declared\" }\n   S s;\n   h(s);\n   T t;"}, {"sha": "081211bab1a588234ef8756e3f344255023f9c57", "filename": "gcc/testsuite/g++.dg/lookup/koenig1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -9,5 +9,5 @@ class X;\n \n void foo() {\n   X x(1); // { dg-error \"incomplete type\" \"\" }\n-  bar(x); // { dg-error \"not declared\" \"\" }\n+  bar(x); // { dg-error \"3:'bar' was not declared\" \"\" }\n }"}, {"sha": "ac35165e618fcfdd4aea0831cda76653a1664c0b", "filename": "gcc/testsuite/g++.dg/lookup/koenig5.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -31,19 +31,19 @@ void g (N::A *a, M::B *b, O::C *c)\n {\n   One (a); // ok\n   One (a, b); // ok\n-  One (b); // { dg-error \"not declared\" }\n+  One (b); // { dg-error \"3:'One' was not declared\" }\n   // { dg-message \"suggested alternatives\" \"suggested alternative for One\" { target *-*-* } 34 }\n \n   Two (c); // ok\n   Two (a, c); // ok\n-  Two (a); // { dg-error \"not declared\" }\n+  Two (a); // { dg-error \"3:'Two' was not declared\" }\n   // { dg-message \"suggested alternatives\" \"suggested alternative for Two\" { target *-*-* } 39 }\n   Two (a, a); // error masked by earlier error\n   Two (b); // error masked by earlier error\n   Two (a, b); // error masked by earlier error\n   \n   Three (b); // ok\n   Three (a, b); // ok\n-  Three (a); // { dg-error \"not declared\" }\n+  Three (a); // { dg-error \"3:'Three' was not declared\" }\n   // { dg-message \"suggested alternatives\" \"suggested alternative for Three\" { target *-*-* } 47 }\n }"}, {"sha": "f5dd6efe6ff248d2c13d7bac74e02d6659982335", "filename": "gcc/testsuite/g++.dg/lookup/used-before-declaration.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fused-before-declaration.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fused-before-declaration.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fused-before-declaration.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -1,5 +1,5 @@\n // Copyroght (C) 2003 Free Software Foundation\n // Origin: PR/12832, Jonathan Wakely <redi@gcc.gnu.org>\n \n-void f() { g(); }               // { dg-error \"not declared\" \"\" }\n+void f() { g(); }               // { dg-error \"12:'g' was not declared\" \"\" }\n void g() { }"}, {"sha": "cd82bf25af34e41e72dcdc56e0349fcfbc1eb228", "filename": "gcc/testsuite/g++.dg/overload/koenig1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -13,7 +13,7 @@ void g ()\n {\n   B *bp;\n   N::A *ap;\n-  f (bp);\t\t\t// { dg-error \"not declared\" }\n+  f (bp);\t\t\t// { dg-error \"3:'f' was not declared\" }\n   // { dg-message \"suggested alternative\" \"suggested alternative\" { target *-*-* } 16 }\n   f (ap);\n }"}, {"sha": "894e8284eb1f8fc971d178dc173ec2c81b8f37ed", "filename": "gcc/testsuite/g++.dg/parse/pr71238.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71238.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71238.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71238.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/71238\n+\n+int main()\n+{\n+    int x=myFunc(3234);  // { dg-error \"11:'myFunc' was not declared\" }\n+}"}, {"sha": "68878c525aca2e12282db074cda6e00ff30888bf", "filename": "gcc/testsuite/g++.dg/template/crash65.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash65.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -3,5 +3,5 @@\n struct A\n {\n   template<int> template<typename T> friend void foo(T) {} // { dg-error \"parameter\" }\n-  void bar() { foo(0); } // { dg-error \"foo\" }\n+  void bar() { foo(0); } // { dg-error \"16:'foo' was not declared\" }\n };"}, {"sha": "92c786718af1605458bcbc186db4b359ff595580", "filename": "gcc/testsuite/g++.dg/template/friend57.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend57.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -15,7 +15,7 @@ int\n main ()\n {\n   f(1);\n-  g(1); // { dg-error \"'g' was not declared in this scope\" }\n+  g(1); // { dg-error \"3:'g' was not declared in this scope\" }\n   g(S());\n   h(1);\n }"}, {"sha": "7a90ec9c99760dfbcb2c4c2751f1495132cc88c9", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -7,7 +7,7 @@\n int f (int n)\n {\n     int bar (int n) { return n++; } // { dg-error \"a function-definition is not allowed here\" }\n-    return bar (n); // { dg-error \"was not declared in this scope\" }\n+    return bar (n); // { dg-error \"12:'bar' was not declared in this scope\" }\n }\n \n int g (int i)"}, {"sha": "db9583bab3d76bc7adea52566c8f0de31d7b9d37", "filename": "gcc/testsuite/g++.dg/warn/Wunused-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -5,5 +5,5 @@ int main ()\n {\n   // We should not see an \"unused\" warning about \"whatever\" on the\n   // next line.\n-  return whatever (); // { dg-error \"declared\" }\n+  return whatever (); // { dg-error \"10:'whatever' was not declared\" }\n }"}, {"sha": "08a5c0ed1bf847605958b411a686ff36a00da341", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900211_01.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900211_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900211_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900211_01.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -10,7 +10,7 @@\n \n void global_function_0 ()\n {\n-  global_function_1 ();\t\t/* { dg-error \"\" } */\n+  global_function_1 ();\t\t/* { dg-error \"3:'global_function_1' was not declared\" } */\n }\n \n int main () { return 0; }"}, {"sha": "aa278070146b7fe58e824f439b54ed769470fef3", "filename": "gcc/testsuite/g++.old-deja/g++.jason/lineno5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno5.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -6,5 +6,5 @@ template <class T> class A;\n int main()\n {\n   A<int> *p;\n-  undef1();// { dg-error \"\" } \n+  undef1();// { dg-error \"3:'undef1' was not declared\" } \n }"}, {"sha": "af800b1f2a6f12527607cab5a90652063bded464", "filename": "gcc/testsuite/g++.old-deja/g++.jason/member.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmember.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmember.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmember.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -5,31 +5,31 @@ struct Y\n   struct X\n     {\n       int A;\n-      int Y::X::* foo () { undef1(1); return &Y::X::A; }// { dg-error \"\" } foo().*\n+      int Y::X::* foo () { undef1(1); return &Y::X::A; }// { dg-error \"28:'undef1' was not declared\" } foo().*\n       int bar () { return A; }\n     };\n };\n \n int Y::X::* foo ()\n {\n-  undef2(1);// { dg-error \"\" } foo().*\n+  undef2(1);// { dg-error \"3:'undef2' was not declared\" } foo().*\n   return &Y::X::A;\n }\n \n int Y::X::* (* foo2 ())()\n {\n-  undef3(1);// { dg-error \"\" } foo().*\n+  undef3(1);// { dg-error \"3:'undef3' was not declared\" } foo().*\n   return foo;\n }\n \n int (Y::X::* bar2 ()) ()\n {\n-  undef4(1);// { dg-error \"\" } foo\\(\\).*\n+  undef4(1);// { dg-error \"3:'undef4' was not declared\" } foo\\(\\).*\n   return Y::X::bar;// { dg-error \"\" } foo\\(\\).*\n }\n \n int Y::X::* (Y::X::* foo3 ())()\n {\n-  undef5(1);// { dg-error \"\" } foo().*\n+  undef5(1);// { dg-error \"3:'undef5' was not declared\" } foo().*\n   return Y::X::foo;// { dg-error \"\" } foo().*\n }"}, {"sha": "7faf30bcb9949ba13e106d10707bac1a99538504", "filename": "gcc/testsuite/g++.old-deja/g++.jason/report.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -37,7 +37,7 @@ int foo (int a = (**bar) (s))\n \n int foo2 (int (*a)(int) = &foo)\n {\n-   undef4 (1); // { dg-error \"\" } implicit declaration\n+   undef4 (1); // { dg-error \"4:'undef4' was not declared\" } implicit declaration\n   return 1;\n }\n \n@@ -55,7 +55,7 @@ bar2 baz (X::Y y)\t        // { dg-error \"\" } in this context\n   X::Y f;\t\t\t// { dg-error \"\" } in this context\n   bar2 wa [5];\n   wa[0] = baz(f);\n-  undef2 (1); // { dg-error \"\" } implicit declaration\n+  undef2 (1); // { dg-error \"3:'undef2' was not declared\" } implicit declaration\n }\t\t\t\t// { dg-warning \"no return statement\" }\n \n int ninny ()\n@@ -70,5 +70,5 @@ int ninny ()\n \n int darg (char X::*p)\n {\n-   undef3 (1); // { dg-error \"\" } implicit declaration\n+   undef3 (1); // { dg-error \"4:'undef3' was not declared\" } implicit declaration\n }\t\t\t\t// { dg-warning \"no return statement\" }"}, {"sha": "35731e78f67180d091f56d002202727f9c0e3957", "filename": "gcc/testsuite/g++.old-deja/g++.jason/scoping12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping12.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -6,5 +6,5 @@ void f ()\n   };\n }\n void h () {\n-  g ();\t\t\t\t// { dg-error \"\" } no g in scope\n+  g ();\t\t\t\t// { dg-error \"3:'g' was not declared\" } no g in scope\n }"}, {"sha": "9edb03c947a5ebf74a99ae0db18c2c1e56b26304", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility20.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -31,6 +31,6 @@ int main() {\n     Base b;\n     Derived d;\n     d.noticeThisFunction(&b);\n-    printf(\"gpptest run\\n\");// { dg-error \"\" } .*\n+    printf(\"gpptest run\\n\");// { dg-error \"5:'printf' was not declared\" } .*\n }\n "}, {"sha": "635f35e011840dd173cd4569c7a38fa849dfbc03", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -14,6 +14,6 @@ void g()\n   foo(new X);            // ok -- DR 218 says that we find the global\n \t\t\t // foo variable first, and therefore do not\n \t\t\t // perform argument-dependent lookup.\n-  bar(new X);            // { dg-error \"not declared\" }\n+  bar(new X);            // { dg-error \"3:'bar' was not declared\" }\n   // { dg-message \"suggested alternative\" \"suggested alternative\" { target *-*-* } 17 }\n }"}, {"sha": "50e5c4acb0e158ec679216b20a826a35cf41fbe4", "filename": "gcc/testsuite/g++.old-deja/g++.other/static5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -9,7 +9,7 @@ struct S\n inline void f()\n {\n   static S s;\n-  atexit (0); // { dg-error \"\" } implicit declaration\n+  atexit (0); // { dg-error \"3:'atexit' was not declared\" } implicit declaration\n }\n \n "}, {"sha": "b438543d445e4e0d5a7791ca3e71df38ccb2061d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/overload2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f6675b74a6d16ab44202ac0e49587da8f7d4cf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload2.C?ref=b2f6675b74a6d16ab44202ac0e49587da8f7d4cf", "patch": "@@ -12,5 +12,5 @@ int\n main()\n {\n \tC<char*>\tc;\n-\tchar*\t\tp = Z(c.O); //{ dg-error \"\" } ambiguous c.O\n+\tchar*\t\tp = Z(c.O); //{ dg-error \"13:'Z' was not declared\" } ambiguous c.O\n }"}]}