{"sha": "be3914df4cc863fa52e3b74ad84ee683a4621e76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzOTE0ZGY0Y2M4NjNmYTUyZTNiNzRhZDg0ZWU2ODNhNDYyMWU3Ng==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-10-17T20:39:45Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-10-17T20:39:45Z"}, "message": "re PR target/23424 (cris.md rtl canonicalization bug)\n\n\tPR target/23424\n\t* md.texi (Modifiers) <%>: Clarify that % doesn't work\n\tafter register allocation.\n\nFrom-SVN: r105517", "tree": {"sha": "8a2a1f88d5029481be0a6ff7c8ffe3dd7ae55588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a2a1f88d5029481be0a6ff7c8ffe3dd7ae55588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be3914df4cc863fa52e3b74ad84ee683a4621e76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3914df4cc863fa52e3b74ad84ee683a4621e76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3914df4cc863fa52e3b74ad84ee683a4621e76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3914df4cc863fa52e3b74ad84ee683a4621e76/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3fdec9ea50940a23eb1a82be77aba3aa178a6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3fdec9ea50940a23eb1a82be77aba3aa178a6de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3fdec9ea50940a23eb1a82be77aba3aa178a6de"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "ef2f059539cfd04615cc430ac8f7ec0a7e85d371", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3914df4cc863fa52e3b74ad84ee683a4621e76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3914df4cc863fa52e3b74ad84ee683a4621e76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be3914df4cc863fa52e3b74ad84ee683a4621e76", "patch": "@@ -1,3 +1,9 @@\n+2005-10-17  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/23424\n+\t* md.texi (Modifiers) <%>: Clarify that % doesn't work\n+\tafter register allocation.\n+\n 2005-10-17  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/m32c.c (m32c_pushm_popm): Don't mark epilogue insns"}, {"sha": "36b0273907073a9df86c0679bc7da50bfaef63df", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3914df4cc863fa52e3b74ad84ee683a4621e76/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3914df4cc863fa52e3b74ad84ee683a4621e76/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=be3914df4cc863fa52e3b74ad84ee683a4621e76", "patch": "@@ -1552,7 +1552,10 @@ instruction is defined:\n GCC can only handle one commutative pair in an asm; if you use more,\n the compiler may fail.  Note that you need not use the modifier if\n the two alternatives are strictly identical; this would only waste\n-time in the reload pass.\n+time in the reload pass.  The modifier is not operational after\n+register allocation, so the result of @code{define_peephole2}\n+and @code{define_split}s performed after reload cannot rely on\n+@samp{%} to make the intended insn match.\n \n @cindex @samp{#} in constraint\n @item #"}]}