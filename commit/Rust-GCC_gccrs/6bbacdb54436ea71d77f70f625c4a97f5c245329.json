{"sha": "6bbacdb54436ea71d77f70f625c4a97f5c245329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiYWNkYjU0NDM2ZWE3MWQ3N2Y3MGY2MjVjNGE5N2Y1YzI0NTMyOQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-01-29T18:03:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-01-29T18:03:42Z"}, "message": "Revert revsion 229087 changes in lra-spills.c\n\nr229087, which caused PR 69530, was supposed to fix PR 67609.  r229458\nhas made r229087 unnecessary.\n\ngcc/\n\n\tPR target/69530\n\t* lra-splill.c (lra_final_code_change): Revert r229087 by\n\tremoving all sub-registers.\n\ngcc/testsuite/\n\n\tPR target/69530\n\t* gcc.target/i386/pr69530.c: New test.\n\nFrom-SVN: r232991", "tree": {"sha": "0787ea896024d70a70c4e78b0743bf040352ca60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0787ea896024d70a70c4e78b0743bf040352ca60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bbacdb54436ea71d77f70f625c4a97f5c245329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbacdb54436ea71d77f70f625c4a97f5c245329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bbacdb54436ea71d77f70f625c4a97f5c245329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbacdb54436ea71d77f70f625c4a97f5c245329/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af932cdb8a5246ceb6330fe56277305e5a65dbb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af932cdb8a5246ceb6330fe56277305e5a65dbb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af932cdb8a5246ceb6330fe56277305e5a65dbb9"}], "stats": {"total": 68, "additions": 30, "deletions": 38}, "files": [{"sha": "48fdab630fa4bb0eaf6a86578075c974cf229601", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bbacdb54436ea71d77f70f625c4a97f5c245329", "patch": "@@ -1,3 +1,9 @@\n+2016-01-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/69530\n+\t* lra-splill.c (lra_final_code_change): Revert r229087 by\n+\tremoving all sub-registers.\n+\n 2016-01-29  Steve Ellcey  <sellcey@imgtec.com>\n \n \tPR target/65604"}, {"sha": "5709ef13e8d9ee666641fffc70c8ac3b76f89d0e", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 8, "deletions": 38, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=6bbacdb54436ea71d77f70f625c4a97f5c245329", "patch": "@@ -760,44 +760,14 @@ lra_final_code_change (void)\n \t  \n \t  struct lra_static_insn_data *static_id = id->insn_static_data;\n \t  bool insn_change_p = false;\n-\t  \n-          for (i = id->insn_static_data->n_operands - 1; i >= 0; i--)\n-\t    {\n-\t      if (! DEBUG_INSN_P (insn) && static_id->operand[i].is_operator)\n-\t\tcontinue;\n-\t      \n-\t      rtx op = *id->operand_loc[i];\n-\t      \n-\t      if (static_id->operand[i].type == OP_OUT\n-\t\t  && GET_CODE (op) == SUBREG && REG_P (SUBREG_REG (op))\n-\t\t  && ! LRA_SUBREG_P (op))\n-\t\t{\n-\t\t  hard_regno = REGNO (SUBREG_REG (op));\n-\t\t  /* We can not always remove sub-registers of\n-\t\t     hard-registers as we may lose information that\n-\t\t     only a part of registers is changed and\n-\t\t     subsequent optimizations may do wrong\n-\t\t     transformations (e.g. dead code eliminations).\n-\t\t     We can not also keep all sub-registers as the\n-\t\t     subsequent optimizations can not handle all such\n-\t\t     cases.  Here is a compromise which works.  */\n-\t\t  if ((GET_MODE_SIZE (GET_MODE (op))\n-\t\t       < GET_MODE_SIZE (GET_MODE (SUBREG_REG (op))))\n-\t\t      && (hard_regno_nregs[hard_regno][GET_MODE (SUBREG_REG (op))]\n-\t\t\t  == hard_regno_nregs[hard_regno][GET_MODE (op)])\n-#ifdef STACK_REGS\n-\t\t      && (hard_regno < FIRST_STACK_REG\n-\t\t\t  || hard_regno > LAST_STACK_REG)\n-#endif\n-\t\t      )\n-\t\t    continue;\n-\t\t}\n-\t      if (alter_subregs (id->operand_loc[i], ! DEBUG_INSN_P (insn)))\n-\t\t{\n-\t\t  lra_update_dup (id, i);\n-\t\t  insn_change_p = true;\n-\t\t}\n-\t    }\n+\n+\t  for (i = id->insn_static_data->n_operands - 1; i >= 0; i--)\n+\t    if ((DEBUG_INSN_P (insn) || ! static_id->operand[i].is_operator)\n+\t\t&& alter_subregs (id->operand_loc[i], ! DEBUG_INSN_P (insn)))\n+\t      {\n+\t\tlra_update_dup (id, i);\n+\t\tinsn_change_p = true;\n+\t      }\n \t  if (insn_change_p)\n \t    lra_update_operator_dups (id);\n \t}"}, {"sha": "4d8fa237895f9025a2125e842d9794808ab4ff45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bbacdb54436ea71d77f70f625c4a97f5c245329", "patch": "@@ -1,3 +1,8 @@\n+2016-01-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/69530\n+\t* gcc.target/i386/pr69530.c: New test.\n+\n 2016-01-29  Steve Ellcey  <sellcey@imgtec.com>\n \n \tPR target/65604"}, {"sha": "9146d1daf536c5d6d59e193d62a65ffc6bffb61b", "filename": "gcc/testsuite/gcc.target/i386/pr69530.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69530.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbacdb54436ea71d77f70f625c4a97f5c245329/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69530.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69530.c?ref=6bbacdb54436ea71d77f70f625c4a97f5c245329", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O -fno-forward-propagate -fno-split-wide-types -mavx \" } */\n+\n+typedef unsigned __int128 v32u128 __attribute__ ((vector_size (32)));\n+\n+v32u128\n+foo (v32u128 v32u128_0)\n+{\n+  v32u128_0[0] *= v32u128_0[1];\n+  return v32u128_0;\n+}"}]}