{"sha": "173c6344dfc0870f9e7f2c5326159d3de3dd7265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczYzYzNDRkZmMwODcwZjllN2YyYzUzMjYxNTlkM2RlM2RkNzI2NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-07T07:57:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-07T07:57:31Z"}, "message": "(finclude): Set fp->buf earlier, so it's freed on error.\n\nFrom-SVN: r2348", "tree": {"sha": "0c70ae36b4c9da33083eef3ad9c2d19ae3ac7e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c70ae36b4c9da33083eef3ad9c2d19ae3ac7e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/173c6344dfc0870f9e7f2c5326159d3de3dd7265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173c6344dfc0870f9e7f2c5326159d3de3dd7265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173c6344dfc0870f9e7f2c5326159d3de3dd7265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173c6344dfc0870f9e7f2c5326159d3de3dd7265/comments", "author": null, "committer": null, "parents": [{"sha": "c9d929d737bddd47bd8b16ab5b87776d4c8ef5f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d929d737bddd47bd8b16ab5b87776d4c8ef5f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d929d737bddd47bd8b16ab5b87776d4c8ef5f3"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "adaec4698575b27ea8de85234e092bf14b1d8493", "filename": "gcc/cccp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173c6344dfc0870f9e7f2c5326159d3de3dd7265/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173c6344dfc0870f9e7f2c5326159d3de3dd7265/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=173c6344dfc0870f9e7f2c5326159d3de3dd7265", "patch": "@@ -4087,6 +4087,7 @@ finclude (f, fname, op, system_header_p, dirptr)\n \n     st_size = 0;\n     basep = (U_CHAR *) xmalloc (bsize + 2);\n+    fp->buf = basep; /* So it will get freed, on error.  */\n     bufp = basep;\n \n     for (;;) {\n@@ -4100,10 +4101,10 @@ finclude (f, fname, op, system_header_p, dirptr)\n       if (bsize == st_size) {\t/* Buffer is full! */\n \t  bsize *= 2;\n \t  basep = (U_CHAR *) xrealloc (basep, bsize + 2);\n+\t  fp->buf = basep;\n \t  bufp = basep + st_size;\t/* May have moved */\n \t}\n     }\n-    fp->buf = basep;\n     fp->bufp = fp->buf;\n     fp->length = st_size;\n   }"}]}