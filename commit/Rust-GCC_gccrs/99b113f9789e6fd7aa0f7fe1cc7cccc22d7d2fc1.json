{"sha": "99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTliMTEzZjk3ODllNmZkN2FhMGY3ZmUxY2M3Y2NjYzIyZDdkMmZjMQ==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2012-05-09T07:10:45Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2012-05-09T07:10:45Z"}, "message": "predict-1.c: Remove the replicated text in this test.\n\ngcc/testsuite\n\n\t* gcc.dg/predict-1.c: Remove the replicated text in this test.\n\t* gcc.dg/predict-2.c: Likewise.\n\t* gcc.dg/predict-3.c: Likewise.\n\t* gcc.dg/predict-4.c: Likewise.\n\t* gcc.dg/predict-5.c: Likewise.\n\t* gcc.dg/predict-6.c: Likewise.\n\nFrom-SVN: r187315", "tree": {"sha": "0a2f8163e3c7cf2990cd62e6491aab158640cc42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2f8163e3c7cf2990cd62e6491aab158640cc42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d6bf48c3ea3b48f462be944e46ced4bf3f08884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6bf48c3ea3b48f462be944e46ced4bf3f08884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6bf48c3ea3b48f462be944e46ced4bf3f08884"}], "stats": {"total": 171, "additions": 16, "deletions": 155}, "files": [{"sha": "77f56a5f64452b199f5523432aaaa857c9c1debf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -136,15 +136,15 @@\n \n 2012-05-08  Dehao Chen  <dehao@google.com>\n \n-\t* predict.c (find_qualified_ssa_name): New\n-\t(find_ssa_name_in_expr): New\n-\t(find_ssa_name_in_assign_stmt): New\n-\t(is_comparison_with_loop_invariant_p): New\n-\t(is_bound_expr_similar): New\n-\t(predict_iv_comparison): New\n+\t* predict.c (find_qualified_ssa_name): New.\n+\t(find_ssa_name_in_expr): New.\n+\t(find_ssa_name_in_assign_stmt): New.\n+\t(is_comparison_with_loop_invariant_p): New.\n+\t(is_bound_expr_similar): New.\n+\t(predict_iv_comparison): New.\n \t(predict_loops): Add heuristic for loop-nested branches that compare an\n \tinduction variable to a loop bound variable.\n-\t* predict.def (PRED_LOOP_IV_COMPARE): New macro\n+\t* predict.def (PRED_LOOP_IV_COMPARE): New macro.\n \n 2012-05-08  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "5a09dc1d6eea14b61501c850cc2f3b11a0c60e6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -1,3 +1,12 @@\n+2012-05-09  Dehao Chen  <dehao@google.com>\n+\n+\t* gcc.dg/predict-1.c: Remove the replicated text in this test.\n+\t* gcc.dg/predict-2.c: Likewise.\n+\t* gcc.dg/predict-3.c: Likewise.\n+\t* gcc.dg/predict-4.c: Likewise.\n+\t* gcc.dg/predict-5.c: Likewise.\n+\t* gcc.dg/predict-6.c: Likewise.\n+\n 2012-05-08  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/53272"}, {"sha": "5c9a5a930a5655b3384e126df358cec07081b690", "filename": "gcc/testsuite/gcc.dg/predict-1.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-1.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -25,30 +25,3 @@ void foo (int bound)\n \n /* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 0.0%\" 5 \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar(int);\n-\n-void foo (int bound)\n-{\n-  int i, ret = 0;\n-  for (i = 0; i < bound; i++)\n-    {\n-      if (i > bound)\n-\tglobal += bar (i);\n-      if (i >= bound + 2)\n-\tglobal += bar (i);\n-      if (i > bound - 2)\n-\tglobal += bar (i);\n-      if (i + 2 > bound)\n-\tglobal += bar (i);\n-      if (i == 10)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 0.0%\" 5 \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "55ca1d0bc7eb538031f9e888695ebeea7f81b6b2", "filename": "gcc/testsuite/gcc.dg/predict-2.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-2.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -25,30 +25,3 @@ void foo (int base, int bound)\n \n /* { dg-final { scan-tree-dump-not \"loop iv compare heuristics\" \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar(int);\n-\n-void foo (int base, int bound)\n-{\n-  int i, ret = 0;\n-  for (i = base; i < bound; i++)\n-    {\n-      if (i > bound * bound)\n-\tglobal += bar (i);\n-      if (i > bound + 10)\n-\tglobal += bar (i);\n-      if (i <= bound + 10)\n-\tglobal += bar (i);\n-      if (i > base + 10)\n-\tglobal += bar (i);\n-      if (i < base - 10)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump-not \"loop iv compare heuristics\" \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "8881bde30b6f2866e6bad9df05bbc463f887f9b6", "filename": "gcc/testsuite/gcc.dg/predict-3.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-3.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -23,28 +23,3 @@ void foo (int bound)\n \n /* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 100.0%\" 4 \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar(int);\n-\n-void foo (int bound)\n-{\n-  int i, ret = 0;\n-  for (i = 0; i <= bound; i++)\n-    {\n-      if (i < bound - 2)\n-\tglobal += bar (i);\n-      if (i <= bound)\n-\tglobal += bar (i);\n-      if (i + 1 < bound)\n-\tglobal += bar (i);\n-      if (i != bound)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 100.0%\" 4 \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "17a50b9ead515c1abe6ae10b941a1e4db7cfc9c8", "filename": "gcc/testsuite/gcc.dg/predict-4.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-4.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -17,22 +17,3 @@ void foo (int bound)\n \n /* { dg-final { scan-tree-dump \"loop iv compare heuristics: 50.0%\" \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar(int);\n-\n-void foo (int bound)\n-{\n-  int i, ret = 0;\n-  for (i = 0; i < 10; i++)\n-    {\n-      if (i < 5)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump \"loop iv compare heuristics: 50.0%\" \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "f2fe339b6cbc8a7883307f16160e4668df5c1a6d", "filename": "gcc/testsuite/gcc.dg/predict-5.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-5.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -23,28 +23,3 @@ void foo (int base, int bound)\n \n /* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 100.0%\" 4 \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar (int);\n-\n-void foo (int base, int bound)\n-{\n-  int i, ret = 0;\n-  for (i = base; i <= bound; i++)\n-    {\n-      if (i > base)\n-\tglobal += bar (i);\n-      if (i > base + 1)\n-\tglobal += bar (i);\n-      if (i >= base + 3)\n-\tglobal += bar (i);\n-      if (i - 2 >= base)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 100.0%\" 4 \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "bf769fd2cf8e65a3d70134ba110deab6ee092cd5", "filename": "gcc/testsuite/gcc.dg/predict-6.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-6.c?ref=99b113f9789e6fd7aa0f7fe1cc7cccc22d7d2fc1", "patch": "@@ -23,28 +23,3 @@ void foo (int base, int bound)\n \n /* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 0.0%\" 4 \"profile_estimate\"} } */\n /* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n-\n-extern int global;\n-\n-int bar (int);\n-\n-void foo (int base, int bound)\n-{\n-  int i, ret = 0;\n-  for (i = base; i <= bound; i++)\n-    {\n-      if (i < base)\n-\tglobal += bar (i);\n-      if (i < base + 1)\n-\tglobal += bar (i);\n-      if (i <= base + 3)\n-\tglobal += bar (i);\n-      if (i - 1 < base)\n-\tglobal += bar (i);\n-    }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"loop iv compare heuristics: 0.0%\" 4 \"profile_estimate\"} } */\n-/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}]}