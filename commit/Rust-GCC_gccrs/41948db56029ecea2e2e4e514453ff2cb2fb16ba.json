{"sha": "41948db56029ecea2e2e4e514453ff2cb2fb16ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5NDhkYjU2MDI5ZWNlYTJlMmU0ZTUxNDQ1M2ZmMmNiMmZiMTZiYQ==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2001-05-18T19:14:19Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-05-18T19:14:19Z"}, "message": "configure.in (gcc_cv_as_eh_frame): Cope with old assemblers.\n\n        * configure.in (gcc_cv_as_eh_frame): Cope with old assemblers.\n        * configure: Regenerate.\n\nFrom-SVN: r42274", "tree": {"sha": "403089f126c59344921e82825e9a9dff6719c6d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403089f126c59344921e82825e9a9dff6719c6d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41948db56029ecea2e2e4e514453ff2cb2fb16ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41948db56029ecea2e2e4e514453ff2cb2fb16ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41948db56029ecea2e2e4e514453ff2cb2fb16ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41948db56029ecea2e2e4e514453ff2cb2fb16ba/comments", "author": null, "committer": null, "parents": [{"sha": "28e8acb68f8a427552bc9f2d4cae12a1ac477855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e8acb68f8a427552bc9f2d4cae12a1ac477855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e8acb68f8a427552bc9f2d4cae12a1ac477855"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "6637b38fd90be19a9aa378673d9ccd58e3f7650e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41948db56029ecea2e2e4e514453ff2cb2fb16ba", "patch": "@@ -1,3 +1,8 @@\n+2001-05-18  Stan Shebs  <shebs@apple.com>\n+\n+\t* configure.in (gcc_cv_as_eh_frame): Cope with old assemblers.\n+\t* configure: Regenerate.\n+\n 2001-05-18  Per Bothner  <per@bothner.com>\n \n         Changes needed for java/jvspec.c"}, {"sha": "a6f60d5ed20f46d6146695b2c0ef9dfbd3aa2e3e", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=41948db56029ecea2e2e4e514453ff2cb2fb16ba", "patch": "@@ -6897,7 +6897,8 @@ if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   fi\n elif test x$gcc_cv_as != x; then\n \t# Check if this is GAS.\n-\tas_ver=`$gcc_cv_as --version 2>/dev/null | head -1`\n+\tas_ver=`$gcc_cv_as --version < /dev/null 2> /dev/null | head -1`\n+\trm -f a.out 2> /dev/null\n \tif echo \"$as_ver\" | grep GNU > /dev/null; then\n \t\t# Versions up to and including 2.11.0 may mis-optimize\n \t\t# .eh_frame data.  Try something.\n@@ -6965,7 +6966,7 @@ echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:6969: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:6970: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6993,7 +6994,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:6997: checking assembler supports -relax\" >&5\n+echo \"configure:6998: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7023,7 +7024,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:7027: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:7028: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7068,7 +7069,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:7072: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:7073: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7107,7 +7108,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:7111: checking assembler instructions\" >&5\n+echo \"configure:7112: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7136,7 +7137,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:7140: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:7141: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -7321,7 +7322,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:7325: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:7326: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "3bc7ab9422e07e39e20811cdd2fdd5e722ed5623", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41948db56029ecea2e2e4e514453ff2cb2fb16ba/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=41948db56029ecea2e2e4e514453ff2cb2fb16ba", "patch": "@@ -1418,7 +1418,8 @@ if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   fi\n elif test x$gcc_cv_as != x; then\n \t# Check if this is GAS.\n-\tas_ver=`$gcc_cv_as --version 2>/dev/null | head -1`\n+\tas_ver=`$gcc_cv_as --version < /dev/null 2> /dev/null | head -1`\n+\trm -f a.out 2> /dev/null\n \tif echo \"$as_ver\" | grep GNU > /dev/null; then\n \t\t# Versions up to and including 2.11.0 may mis-optimize\n \t\t# .eh_frame data.  Try something."}]}