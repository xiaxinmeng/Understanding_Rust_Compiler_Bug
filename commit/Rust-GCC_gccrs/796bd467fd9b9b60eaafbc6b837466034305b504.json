{"sha": "796bd467fd9b9b60eaafbc6b837466034305b504", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2YmQ0NjdmZDliOWI2MGVhYWZiYzZiODM3NDY2MDM0MzA1YjUwNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-06T12:31:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-06T12:31:52Z"}, "message": "re PR target/82108 (Wrong vectorized code generated for x86_64)\n\n2017-09-06  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82108\n\t* tree-vect-stmts.c (vectorizable_load): Fix pointer adjustment\n\tfor gap in the non-permutation SLP case.\n\n\t* gcc.dg/vect/pr82108.c: New testcase.\n\nFrom-SVN: r251790", "tree": {"sha": "729c263dbc6edad7f59883e404ea1d02b03e678c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/729c263dbc6edad7f59883e404ea1d02b03e678c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/796bd467fd9b9b60eaafbc6b837466034305b504", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796bd467fd9b9b60eaafbc6b837466034305b504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796bd467fd9b9b60eaafbc6b837466034305b504", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796bd467fd9b9b60eaafbc6b837466034305b504/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e9cb4046164bb8debe8b3c07c00158b7319739a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9cb4046164bb8debe8b3c07c00158b7319739a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9cb4046164bb8debe8b3c07c00158b7319739a"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "97ed8d3334888261889ee9eaca033624f8bebc88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=796bd467fd9b9b60eaafbc6b837466034305b504", "patch": "@@ -1,3 +1,9 @@\n+2017-09-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82108\n+\t* tree-vect-stmts.c (vectorizable_load): Fix pointer adjustment\n+\tfor gap in the non-permutation SLP case.\n+\n 2017-09-06  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/82078"}, {"sha": "c7119a8edfd212bbf41f9e42d108a1a2281510a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=796bd467fd9b9b60eaafbc6b837466034305b504", "patch": "@@ -1,3 +1,8 @@\n+2017-09-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82108\n+\t* gcc.dg/vect/pr82108.c: New testcase.\n+\n 2017-09-06  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/82078"}, {"sha": "5b8faf1aefbd771ae83698bfb50a0f9308352a98", "filename": "gcc/testsuite/gcc.dg/vect/pr82108.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr82108.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr82108.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr82108.c?ref=796bd467fd9b9b60eaafbc6b837466034305b504", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target vect_float } */\n+\n+#include \"tree-vect.h\"\n+\n+void __attribute__((noinline,noclone))\n+downscale_2 (const float* src, int src_n, float* dst)\n+{\n+  int i;\n+\n+  for (i = 0; i < src_n; i += 2) {\n+      const float* a = src;\n+      const float* b = src + 4;\n+\n+      dst[0] = (a[0] + b[0]) / 2;\n+      dst[1] = (a[1] + b[1]) / 2;\n+      dst[2] = (a[2] + b[2]) / 2;\n+      dst[3] = (a[3] + b[3]) / 2;\n+\n+      src += 2 * 4;\n+      dst +=     4;\n+  }\n+}\n+\n+int main ()\n+{\n+  const float in[4 * 4] = {\n+      1, 2, 3, 4,\n+      5, 6, 7, 8,\n+\n+      1, 2, 3, 4,\n+      5, 6, 7, 8\n+  };\n+  float out[2 * 4];\n+\n+  check_vect ();\n+\n+  downscale_2 (in, 4, out);\n+\n+  if (out[0] != 3 || out[1] != 4 || out[2] != 5 || out[3] != 6\n+      || out[4] != 3 || out[5] != 4 || out[6] != 5 || out[7] != 6)\n+    __builtin_abort ();\n+  \n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "df93022f7cc83ebfcbcb2060d58e0217cbaa084e", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796bd467fd9b9b60eaafbc6b837466034305b504/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=796bd467fd9b9b60eaafbc6b837466034305b504", "patch": "@@ -7213,7 +7213,6 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n     {\n       first_stmt = GROUP_FIRST_ELEMENT (stmt_info);\n       group_size = GROUP_SIZE (vinfo_for_stmt (first_stmt));\n-      int group_gap = GROUP_GAP (vinfo_for_stmt (first_stmt));\n       /* For SLP vectorization we directly vectorize a subchain\n          without permutation.  */\n       if (slp && ! SLP_TREE_LOAD_PERMUTATION (slp_node).exists ())\n@@ -7256,7 +7255,8 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t  else\n \t    {\n \t      vec_num = SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node);\n-\t      group_gap_adj = group_gap;\n+\t      group_gap_adj\n+\t\t= group_size - SLP_INSTANCE_GROUP_SIZE (slp_node_instance);\n \t    }\n     \t}\n       else"}]}