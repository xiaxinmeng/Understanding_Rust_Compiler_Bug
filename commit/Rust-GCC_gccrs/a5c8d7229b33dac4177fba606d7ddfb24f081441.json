{"sha": "a5c8d7229b33dac4177fba606d7ddfb24f081441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVjOGQ3MjI5YjMzZGFjNDE3N2ZiYTYwNmQ3ZGRmYjI0ZjA4MTQ0MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T05:47:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T05:47:25Z"}, "message": "In the first part (instead of va-*.h), define __gnuc_va_list, as in gstdarg.h.\n\n In the first part (instead of va-*.h), define\n__gnuc_va_list, as in gstdarg.h.  Always use __gunc_va_list\nas basis for defining va_list.\nMove interaction with BSD-NET2 down to where va_list itself is defined.\n\nFrom-SVN: r2336", "tree": {"sha": "fde5da233ceca82907d9f552ba22fc59ecea2478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fde5da233ceca82907d9f552ba22fc59ecea2478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5c8d7229b33dac4177fba606d7ddfb24f081441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c8d7229b33dac4177fba606d7ddfb24f081441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c8d7229b33dac4177fba606d7ddfb24f081441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c8d7229b33dac4177fba606d7ddfb24f081441/comments", "author": null, "committer": null, "parents": [{"sha": "3041f3be0262e4f34faf464c0de531d06428aafa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3041f3be0262e4f34faf464c0de531d06428aafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3041f3be0262e4f34faf464c0de531d06428aafa"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "d8c0864aaf95dcc3cac1f0f1a0e10579d51ee9bb", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5c8d7229b33dac4177fba606d7ddfb24f081441/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5c8d7229b33dac4177fba606d7ddfb24f081441/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=a5c8d7229b33dac4177fba606d7ddfb24f081441", "patch": "@@ -2,7 +2,7 @@\n /* Use the system's macros with the system's compiler.  */\n #include <varargs.h>\n #else\n-/* Record that varargs.h is defined; this turns off stdarg.h.  */\n+/* Record that this is varargs.h; this turns off stdarg.h.  */\n \n #ifndef _VARARGS_H\n #define _VARARGS_H\n@@ -64,30 +64,15 @@\n /* The ... causes current_function_varargs to be set in cc1.  */\n #define va_dcl    int __builtin_va_alist; __va_ellipsis\n \n-#ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n-#undef _VA_LIST\n-#endif\n+/* Define __gnuc_va_list, just as in gstdarg.h.  */\n \n-/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n-/* But in 4.3bsd-net2, _VA_LIST_ has another meaning.  So ignore it.  */\n-#if !defined (_VA_LIST_) || defined (_ANSI_H_)\n-/* The macro _VA_LIST is used in SCO Unix 3.2.  */\n-#ifndef _VA_LIST\n-#ifndef _VA_LIST_\n-#define _VA_LIST_\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n+#ifdef __svr4__\n+typedef char *__gnuc_va_list;\n+#else\n+typedef void *__gnuc_va_list;\n #endif\n-#define _VA_LIST\n-/* Make this a macro rather than a typedef, so we can undef any other defn.  */\n-#define va_list __va___list\n-typedef char * __va___list;\n-#endif /* _VA_LIST */\n-#endif /* !defined (_VA_LIST_) || defined (_ANSI_H_) */\n-\n-/*  In 4.3bsd-net2, it is said we must #undef this.\n-    I hope this successfully identifies that system.\n-    I don't know why this works--rms.  */\n-#ifdef _ANSI_H_\n-#undef _VA_LIST_\n #endif\n \n #define va_start(AP)  AP=(char *) &__builtin_va_alist\n@@ -112,14 +97,19 @@ typedef char * __va___list;\n #endif /* not sparc */\n #endif /* not _VARARGS_H */\n \n-#ifdef __GNUC_VA_LIST\n-/* If an include file defined __GNUC_VA_LIST,\n-   copy it into va_list.  */\n+/* Define va_list from __gnuc_va_list.  */\n \n #ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n #undef _VA_LIST\n #endif\n \n+/*  In 4.3bsd-net2, _VA_LIST_ is defined by machine/ansi.h, but no\n+    typedef for va_list is in that file.  Undef _VA_LIST_ here\n+    so we do define va_list.  */\n+#ifdef _ANSI_H_\n+#undef _VA_LIST_\n+#endif\n+\n /* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n #ifndef _VA_LIST_\n /* The macro _VA_LIST is used in SCO Unix 3.2.  */\n@@ -129,6 +119,17 @@ typedef char * __va___list;\n typedef __gnuc_va_list va_list;\n #endif /* _VA_LIST */\n #endif /* _VA_LIST_ */\n-#endif /* __GNUC_VA_LIST */\n+\n+/*  I think that in 4.3bsd-net2 there is some need\n+    to leave _VA_LIST_ undefined after.  I don't know why. -- rms.  */\n+#ifdef _ANSI_H_\n+#undef _VA_LIST_\n+#endif\n+\n+/* The next BSD release (if there is one) wants this symbol to be\n+   undefined instead of _VA_LIST_.  */\n+#ifdef _BSD_VA_LIST\n+#undef _BSD_VA_LIST\n+#endif\n \n #endif /* __GNUC__ */"}]}