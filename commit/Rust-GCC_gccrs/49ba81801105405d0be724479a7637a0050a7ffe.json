{"sha": "49ba81801105405d0be724479a7637a0050a7ffe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliYTgxODAxMTA1NDA1ZDBiZTcyNDQ3OWE3NjM3YTAwNTBhN2ZmZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-04-29T22:44:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-04-29T22:44:18Z"}, "message": "gengtype.c (open_base_files): Add lto-streamer.h\n\n\n\t* gengtype.c (open_base_files): Add lto-streamer.h\n\t* cgraph.h (cgraph_local_info): lto_file_data is now in GGC.\n\t(pass_ipa_cp): GGC collect.\n\t* toplev. (compile_file): Do not output symbols.\n\t* ipa-inline.c (pass_ipa_inline): Add ggc collect.\n\t* timevar.def (TV_VARPOOL, TV_IPA_LTO_DECL_INIT_IO,\n\tTV_IPA_LTO_DECL_MERGE, TV_IPA_LTO_CGRAPH_MERGE, TV_VAROUT): New.\n\t* lto-section-in.c: Include ggc.h\n\t(lto_new_in_decl_state): Alloc in GGC.\n\t(lto_delete_in_decl_state): Likewise.\n\t* ipa.c (pass_ipa_function_visibility, pass_ipa_whole_program): Collect.\n\n\t* lto/lto.c (lto_read_in_decl_state): Use GGC.\n\t(lto_wpa_write_files): Announce what we are writting.\n\t(all_file_decl_data): New.\n\t(read_cgraph_and_symbols): Use GGC; correct timevars.\n\t(do_whole_program_analysis): Collect.\n\t* lto/Make-lang.in (lto.o): Fix dependency.\n\t* Makefile.in (GTFILES): Add lto-streamer.h.\n\t* varpool.c (varpool_analyze_pending_decls): Use TV_VARPOOL.\n\t(varpool_assemble_pending_decls): Use VAROUT.\n\t* lto-streamer.h (lto_tree_ref_table): Annotate.\n\t(lto_in_decl_state): Annotate.\n\t(lto_file_decl_data): Annotate.\n\nFrom-SVN: r158912", "tree": {"sha": "541cdf07e080cc1b6304972a831de1ff8675d8dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/541cdf07e080cc1b6304972a831de1ff8675d8dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49ba81801105405d0be724479a7637a0050a7ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ba81801105405d0be724479a7637a0050a7ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ba81801105405d0be724479a7637a0050a7ffe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ba81801105405d0be724479a7637a0050a7ffe/comments", "author": null, "committer": null, "parents": [{"sha": "5a7338267d552eb9aea90cf8faa2ce7d3a2015a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7338267d552eb9aea90cf8faa2ce7d3a2015a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7338267d552eb9aea90cf8faa2ce7d3a2015a4"}], "stats": {"total": 128, "additions": 98, "deletions": 30}, "files": [{"sha": "6abbab31411fde3c976f8f2a8071de42f529429e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -1,3 +1,17 @@\n+2010-04-29  Jan HUbicka  <jh@suse.cz>\n+\n+\t* gengtype.c (open_base_files): Add lto-streamer.h\n+\t* cgraph.h (cgraph_local_info): lto_file_data is now in GGC.\n+\t(pass_ipa_cp): GGC collect.\n+\t* toplev. (compile_file): Do not output symbols.\n+\t* ipa-inline.c (pass_ipa_inline): Add ggc collect.\n+\t* timevar.def (TV_VARPOOL, TV_IPA_LTO_DECL_INIT_IO,\n+\tTV_IPA_LTO_DECL_MERGE, TV_IPA_LTO_CGRAPH_MERGE, TV_VAROUT): New.\n+\t* lto-section-in.c: Include ggc.h\n+\t(lto_new_in_decl_state): Alloc in GGC.\n+\t(lto_delete_in_decl_state): Likewise.\n+\t* ipa.c (pass_ipa_function_visibility, pass_ipa_whole_program): Collect.\n+\n 2010-04-29  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/42895"}, {"sha": "9c7a253ed8485dba26a239eabaf8fd5f46056105", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -3623,6 +3623,7 @@ GTFILES = $(CPP_ID_DATA_H) $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(srcdir)/lto-symtab.c \\\n   $(srcdir)/tree-ssa-alias.h \\\n   $(srcdir)/ipa-prop.h \\\n+  $(srcdir)/lto-streamer.h \\\n   @all_gtfiles@\n \n # Compute the list of GT header files from the corresponding C sources,"}, {"sha": "cc691297b628aedccbd40c14e613f07f4ce40a34", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -87,7 +87,7 @@ struct GTY(()) cgraph_thunk_info {\n \n struct GTY(()) cgraph_local_info {\n   /* File stream where this node is being written to.  */\n-  struct lto_file_decl_data * GTY ((skip)) lto_file_data;\n+  struct lto_file_decl_data * lto_file_data;\n \n   struct inline_summary inline_summary;\n "}, {"sha": "27d5be2c4ab4ffd8252a627bc4cd83a389feeaae", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -1571,7 +1571,7 @@ open_base_files (void)\n       \"optabs.h\", \"libfuncs.h\", \"debug.h\", \"ggc.h\", \"cgraph.h\",\n       \"tree-flow.h\", \"reload.h\", \"cpp-id-data.h\", \"tree-chrec.h\",\n       \"cfglayout.h\", \"except.h\", \"output.h\", \"gimple.h\", \"cfgloop.h\",\n-      \"target.h\", \"ipa-prop.h\", NULL\n+      \"target.h\", \"ipa-prop.h\", \"lto-streamer.h\", NULL\n     };\n     const char *const *ifp;\n     outf_p gtype_desc_c;"}, {"sha": "942475bc271848969c29c83f3d81abecd99d584e", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -1340,7 +1340,7 @@ struct ipa_opt_pass_d pass_ipa_cp =\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n   TODO_dump_cgraph | TODO_dump_func |\n-  TODO_remove_functions /* todo_flags_finish */\n+  TODO_remove_functions | TODO_ggc_collect /* todo_flags_finish */\n  },\n  ipcp_generate_summary,\t\t\t/* generate_summary */\n  ipcp_write_summary,\t\t\t/* write_summary */"}, {"sha": "3bab2059cf37896724895cf296a3d9bcde6a9c92", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -2134,7 +2134,7 @@ struct ipa_opt_pass_d pass_ipa_inline =\n   0,\t\t\t\t\t/* properties_destroyed */\n   TODO_remove_functions,\t\t/* todo_flags_finish */\n   TODO_dump_cgraph | TODO_dump_func\n-  | TODO_remove_functions\t\t/* todo_flags_finish */\n+  | TODO_remove_functions | TODO_ggc_collect\t/* todo_flags_finish */\n  },\n  inline_generate_summary,\t\t/* generate_summary */\n  inline_write_summary,\t\t\t/* write_summary */"}, {"sha": "6519b26cec15e1ddb70c82c9ae44b6010e095039", "filename": "gcc/ipa.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -537,7 +537,8 @@ struct simple_ipa_opt_pass pass_ipa_function_and_variable_visibility =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_remove_functions | TODO_dump_cgraph/* todo_flags_finish */\n+  TODO_remove_functions | TODO_dump_cgraph\n+  | TODO_ggc_collect\t\t\t/* todo_flags_finish */\n  }\n };\n \n@@ -592,7 +593,8 @@ struct ipa_opt_pass_d pass_ipa_whole_program_visibility =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_cgraph | TODO_remove_functions/* todo_flags_finish */\n+  TODO_remove_functions | TODO_dump_cgraph\n+  | TODO_ggc_collect\t\t\t/* todo_flags_finish */\n  },\n  NULL,\t\t\t\t\t/* generate_summary */\n  NULL,\t\t\t\t\t/* write_summary */"}, {"sha": "aea1c1decd479900d3a02c31d6f2e016dc64c66b", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"lto-streamer.h\"\n #include \"lto-compress.h\"\n+#include \"ggc.h\"\n \n /* Section names.  These must correspond to the values of\n    enum lto_section_type.  */\n@@ -433,7 +434,7 @@ lto_new_in_decl_state (void)\n {\n   struct lto_in_decl_state *state;\n \n-  state = ((struct lto_in_decl_state *) xmalloc (sizeof (*state)));\n+  state = ((struct lto_in_decl_state *) ggc_alloc (sizeof (*state)));\n   memset (state, 0, sizeof (*state));\n   return state;\n }\n@@ -447,8 +448,8 @@ lto_delete_in_decl_state (struct lto_in_decl_state *state)\n \n   for (i = 0; i < LTO_N_DECL_STREAMS; i++)\n     if (state->streams[i].trees)\n-      free (state->streams[i].trees);\n-  free (state);\n+      ggc_free (state->streams[i].trees);\n+  ggc_free (state);\n }\n \n /* Hashtable helpers. lto_in_decl_states are hash by their function decls. */"}, {"sha": "173f921489e9ab5963d6148d452a75f7b758c01a", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -467,10 +467,10 @@ struct lto_cgraph_encoder_d\n typedef struct lto_cgraph_encoder_d *lto_cgraph_encoder_t;\n \n /* Mapping from indices to trees.  */\n-struct lto_tree_ref_table\n+struct GTY(()) lto_tree_ref_table\n {\n   /* Array of referenced trees . */\n-  tree *trees;\n+  tree * GTY((length (\"%h.size\"))) trees;\n \n   /* Size of array. */\n   unsigned int size;\n@@ -496,7 +496,7 @@ struct lto_tree_ref_encoder\n \n \n /* Structure to hold states of input scope.  */\n-struct lto_in_decl_state\n+struct GTY(()) lto_in_decl_state\n {\n   /* Array of lto_in_decl_buffers to store type and decls streams. */\n   struct lto_tree_ref_table streams[LTO_N_DECL_STREAMS];\n@@ -534,7 +534,7 @@ DEF_VEC_ALLOC_P(lto_out_decl_state_ptr, heap);\n    by lto.  This structure contains the tables that are needed by the\n    serialized functions and ipa passes to connect themselves to the\n    global types and decls as they are reconstituted.  */\n-struct lto_file_decl_data\n+struct GTY(()) lto_file_decl_data\n {\n   /* Decl state currently used. */\n   struct lto_in_decl_state *current_decl_state;\n@@ -544,22 +544,22 @@ struct lto_file_decl_data\n   struct lto_in_decl_state *global_decl_state;\n \n   /* Table of cgraph nodes present in this file.  */\n-  lto_cgraph_encoder_t cgraph_node_encoder;\n+  lto_cgraph_encoder_t GTY((skip)) cgraph_node_encoder;\n \n   /* Hash table maps lto-related section names to location in file.  */\n-  htab_t function_decl_states;\n+  htab_t GTY((param_is (struct lto_in_decl_state))) function_decl_states;\n \n   /* The .o file that these offsets relate to.  */\n-  const char *file_name;\n+  const char *GTY((skip)) file_name;\n \n   /* Nonzero if this file should be recompiled with LTRANS.  */\n   unsigned needs_ltrans_p : 1;\n \n   /* Hash table maps lto-related section names to location in file.  */\n-  htab_t section_hash_table;\n+  htab_t GTY((skip)) section_hash_table;\n \n   /* Hash new name of renamed global declaration to its original name.  */\n-  htab_t renaming_hash_table;\n+  htab_t GTY((skip)) renaming_hash_table;\n };\n \n struct lto_char_ptr_base"}, {"sha": "52663e75078ed2b3fc17b2bbe18fb58a1eb9630c", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -1,3 +1,18 @@\n+2010-04-28  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto/lto.c (lto_read_in_decl_state): Use GGC.\n+\t(lto_wpa_write_files): Announce what we are writting.\n+\t(all_file_decl_data): New.\n+\t(read_cgraph_and_symbols): Use GGC; correct timevars.\n+\t(do_whole_program_analysis): Collect.\n+\t* lto/Make-lang.in (lto.o): Fix dependency.\n+\t* Makefile.in (GTFILES): Add lto-streamer.h.\n+\t* varpool.c (varpool_analyze_pending_decls): Use TV_VARPOOL.\n+\t(varpool_assemble_pending_decls): Use VAROUT.\n+\t* lto-streamer.h (lto_tree_ref_table): Annotate.\n+\t(lto_in_decl_state): Annotate.\n+\t(lto_file_decl_data): Annotate.\n+\n 2010-04-28  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_varpool_node_sets): New."}, {"sha": "7963bf07ccc1c54ac4e5e1026e020ec8e019a4e8", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -85,7 +85,7 @@ lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h opts.h \\\n \t$(CGRAPH_H) $(GGC_H) tree-ssa-operands.h $(TREE_PASS_H) \\\n \tlanghooks.h vec.h $(BITMAP_H) pointer-set.h $(IPA_PROP_H) \\\n \t$(COMMON_H) $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n-\t$(LTO_TAGS_H) $(LTO_STREAMER_H)\n+\t$(LTO_TAGS_H) $(LTO_STREAMER_H) gt-lto-lto.h\n lto/lto-elf.o: lto/lto-elf.c $(CONFIG_H) coretypes.h $(SYSTEM_H) \\\n \ttoplev.h $(LTO_H) $(TM_H) $(LIBIBERTY_H) $(GGC_H) $(LTO_STREAMER_H)\n lto/lto-coff.o: lto/lto-coff.c $(CONFIG_H) coretypes.h $(SYSTEM_H) \\"}, {"sha": "ae3d90eaf4cb1492377271cf7ceee70cfab59bc5", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -170,7 +170,7 @@ lto_read_in_decl_state (struct data_in *data_in, const uint32_t *data,\n   for (i = 0; i < LTO_N_DECL_STREAMS; i++)\n     {\n       uint32_t size = *data++;\n-      tree *decls = (tree *) xcalloc (size, sizeof (tree));\n+      tree *decls = GGC_NEWVEC (tree, size);\n \n       for (j = 0; j < size; j++)\n \t{\n@@ -235,7 +235,7 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n \n   /* Read in per-function decl states and enter them in hash table.  */\n   decl_data->function_decl_states =\n-    htab_create (37, lto_hash_in_decl_state, lto_eq_in_decl_state, free);\n+    htab_create_ggc (37, lto_hash_in_decl_state, lto_eq_in_decl_state, NULL);\n \n   for (i = 1; i < num_decl_states; i++)\n     {\n@@ -376,7 +376,7 @@ lto_file_read (lto_file *file, FILE *resolution_file)\n   \n   resolutions = lto_resolution_read (resolution_file, file);\n \n-  file_data = XCNEW (struct lto_file_decl_data);\n+  file_data = GGC_NEW (struct lto_file_decl_data);\n   file_data->file_name = file->filename;\n   file_data->section_hash_table = lto_obj_build_section_table (file);\n   file_data->renaming_hash_table = lto_create_renaming_table ();\n@@ -936,6 +936,9 @@ lto_wpa_write_files (void)\n \t  if (!file)\n \t    fatal_error (\"lto_obj_file_open() failed\");\n \n+\t  if (!quiet_flag)\n+\t    fprintf (stderr, \" %s\", temp_filename);\n+\n \t  lto_set_current_out_file (file);\n \n \t  ipa_write_optimization_summaries (set, vset);\n@@ -1657,6 +1660,7 @@ lto_read_all_file_options (void)\n   lto_reissue_options ();\n }\n \n+static GTY((length (\"lto_stats.num_input_files + 1\"))) struct lto_file_decl_data **all_file_decl_data;\n \n /* Read all the symbols from the input files FNAMES.  NFILES is the\n    number of files requested in the command line.  Instantiate a\n@@ -1667,7 +1671,6 @@ static void\n read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n {\n   unsigned int i, last_file_ix;\n-  struct lto_file_decl_data **all_file_decl_data;\n   FILE *resolution;\n   struct cgraph_node *node;\n \n@@ -1676,7 +1679,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   timevar_push (TV_IPA_LTO_DECL_IO);\n \n   /* Set the hooks so that all of the ipa passes can read in their data.  */\n-  all_file_decl_data = XNEWVEC (struct lto_file_decl_data *, nfiles + 1);\n+  all_file_decl_data = GGC_CNEWVEC (struct lto_file_decl_data *, nfiles + 1);\n   lto_set_in_hooks (all_file_decl_data, get_section_data, free_section_data);\n \n   /* Read the resolution file.  */\n@@ -1723,6 +1726,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \n       lto_obj_file_close (current_lto_file);\n       current_lto_file = NULL;\n+      ggc_collect ();\n     }\n \n   if (resolution_file_name)\n@@ -1733,24 +1737,30 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   /* Set the hooks so that all of the ipa passes can read in their data.  */\n   lto_set_in_hooks (all_file_decl_data, get_section_data, free_section_data);\n \n-  /* Each pass will set the appropriate timer.  */\n   timevar_pop (TV_IPA_LTO_DECL_IO);\n \n   if (!quiet_flag)\n     fprintf (stderr, \"\\nReading the callgraph\\n\");\n \n+  timevar_push (TV_IPA_LTO_CGRAPH_IO);\n   /* Read the callgraph.  */\n   input_cgraph ();\n+  timevar_pop (TV_IPA_LTO_CGRAPH_IO);\n \n   if (!quiet_flag)\n     fprintf (stderr, \"Merging declarations\\n\");\n \n+  timevar_push (TV_IPA_LTO_DECL_MERGE);\n   /* Merge global decls.  */\n   lto_symtab_merge_decls ();\n \n   /* Fixup all decls and types and free the type hash tables.  */\n   lto_fixup_decls (all_file_decl_data);\n   free_gimple_type_tables ();\n+  ggc_collect ();\n+\n+  timevar_pop (TV_IPA_LTO_DECL_MERGE);\n+  /* Each pass will set the appropriate timer.  */\n \n   if (!quiet_flag)\n     fprintf (stderr, \"Reading summaries\\n\");\n@@ -1762,7 +1772,9 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n     ipa_read_summaries ();\n \n   /* Finally merge the cgraph according to the decl merging decisions.  */\n+  timevar_push (TV_IPA_LTO_CGRAPH_MERGE);\n   lto_symtab_merge_cgraph_nodes ();\n+  ggc_collect ();\n \n   if (flag_ltrans)\n     for (node = cgraph_nodes; node; node = node->next)\n@@ -1776,8 +1788,9 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \t\t\t node->ipa_transforms_to_apply,\n \t\t\t (ipa_opt_pass)&pass_ipa_inline);\n       }\n+  timevar_pop (TV_IPA_LTO_CGRAPH_MERGE);\n \n-  timevar_push (TV_IPA_LTO_DECL_IO);\n+  timevar_push (TV_IPA_LTO_DECL_INIT_IO);\n \n   /* FIXME lto. This loop needs to be changed to use the pass manager to\n      call the ipa passes directly.  */\n@@ -1791,7 +1804,9 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   /* Indicate that the cgraph is built and ready.  */\n   cgraph_function_flags_ready = true;\n \n-  timevar_pop (TV_IPA_LTO_DECL_IO);\n+  timevar_pop (TV_IPA_LTO_DECL_INIT_IO);\n+  ggc_free (all_file_decl_data);\n+  all_file_decl_data = NULL;\n }\n \n \n@@ -1874,6 +1889,12 @@ do_whole_program_analysis (void)\n   /* Reading in the cgraph uses different timers, start timing WPA now.  */\n   timevar_push (TV_WHOPR_WPA);\n \n+  if (pre_ipa_mem_report)\n+    {\n+      fprintf (stderr, \"Memory consumption before IPA\\n\");\n+      dump_memory_report (false);\n+    }\n+\n   cgraph_function_flags_ready = true;\n   bitmap_obstack_initialize (NULL);\n   ipa_register_cgraph_hooks ();\n@@ -1895,9 +1916,16 @@ do_whole_program_analysis (void)\n       fflush (stderr);\n     }\n   output_files = lto_wpa_write_files ();\n+  ggc_collect ();\n   if (!quiet_flag)\n     fprintf (stderr, \"\\n\");\n \n+  if (post_ipa_mem_report)\n+    {\n+      fprintf (stderr, \"Memory consumption after IPA\\n\");\n+      dump_memory_report (false);\n+    }\n+\n   /* Show the LTO report before launching LTRANS.  */\n   if (flag_lto_report)\n     print_lto_report ();"}, {"sha": "e9ec4550dd293cdb3794360a93176a4d9bd58951", "filename": "gcc/timevar.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -49,10 +49,14 @@ DEFTIMEVAR (TV_PCH_CPP_RESTORE       , \"PCH preprocessor state restore\")\n \n DEFTIMEVAR (TV_CGRAPH                , \"callgraph construction\")\n DEFTIMEVAR (TV_CGRAPHOPT             , \"callgraph optimization\")\n+DEFTIMEVAR (TV_VARPOOL               , \"varpool construction\")\n DEFTIMEVAR (TV_IPA_CONSTANT_PROP     , \"ipa cp\")\n DEFTIMEVAR (TV_IPA_LTO_GIMPLE_IO     , \"ipa lto gimple I/O\")\n DEFTIMEVAR (TV_IPA_LTO_DECL_IO       , \"ipa lto decl I/O\")\n+DEFTIMEVAR (TV_IPA_LTO_DECL_INIT_IO  , \"ipa lto decl init I/O\")\n DEFTIMEVAR (TV_IPA_LTO_CGRAPH_IO     , \"ipa lto cgraph I/O\")\n+DEFTIMEVAR (TV_IPA_LTO_DECL_MERGE    , \"ipa lto decl merge\")\n+DEFTIMEVAR (TV_IPA_LTO_CGRAPH_MERGE  , \"ipa lto cgraph merge\")\n DEFTIMEVAR (TV_LTO                   , \"lto\")\n DEFTIMEVAR (TV_WHOPR_WPA             , \"whopr wpa\")\n DEFTIMEVAR (TV_WHOPR_WPA_IO          , \"whopr wpa I/O\")\n@@ -216,6 +220,7 @@ DEFTIMEVAR (TV_REORDER_BLOCKS        , \"reorder blocks\")\n DEFTIMEVAR (TV_SHORTEN_BRANCH        , \"shorten branches\")\n DEFTIMEVAR (TV_REG_STACK             , \"reg stack\")\n DEFTIMEVAR (TV_FINAL                 , \"final\")\n+DEFTIMEVAR (TV_VAROUT                , \"variable output\")\n DEFTIMEVAR (TV_SYMOUT                , \"symout\")\n DEFTIMEVAR (TV_VAR_TRACKING          , \"variable tracking\")\n DEFTIMEVAR (TV_TREE_IFCOMBINE        , \"tree if-combine\")"}, {"sha": "d176a882bb0256fe93747eba3d76db39a5a8d973", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -1056,7 +1056,7 @@ compile_file (void)\n      what's left of the symbol table output.  */\n   timevar_pop (TV_PARSE);\n \n-  if (flag_syntax_only)\n+  if (flag_syntax_only || flag_wpa)\n     return;\n \n   ggc_protect_identifiers = false;"}, {"sha": "5a98a7c04c69c9d4df653467789381af2bd7d27d", "filename": "gcc/varpool.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba81801105405d0be724479a7637a0050a7ffe/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=49ba81801105405d0be724479a7637a0050a7ffe", "patch": "@@ -399,8 +399,8 @@ bool\n varpool_analyze_pending_decls (void)\n {\n   bool changed = false;\n-  timevar_push (TV_CGRAPH);\n \n+  timevar_push (TV_VARPOOL);\n   while (varpool_first_unanalyzed_node)\n     {\n       tree decl = varpool_first_unanalyzed_node->decl;\n@@ -424,7 +424,7 @@ varpool_analyze_pending_decls (void)\n \trecord_references_in_initializer (decl, analyzed);\n       changed = true;\n     }\n-  timevar_pop (TV_CGRAPH);\n+  timevar_pop (TV_VARPOOL);\n   return changed;\n }\n \n@@ -518,6 +518,7 @@ varpool_assemble_pending_decls (void)\n   if (errorcount || sorrycount)\n     return false;\n \n+  timevar_push (TV_VAROUT);\n   /* EH might mark decls as needed during expansion.  This should be safe since\n      we don't create references to new function, but it should not be used\n      elsewhere.  */\n@@ -539,6 +540,7 @@ varpool_assemble_pending_decls (void)\n   /* varpool_nodes_queue is now empty, clear the pointer to the last element\n      in the queue.  */\n   varpool_last_needed_node = NULL;\n+  timevar_pop (TV_VAROUT);\n   return changed;\n }\n "}]}