{"sha": "778087e0f54285de1eec5c3bf3657392779b52bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc4MDg3ZTBmNTQyODVkZTFlZWM1YzNiZjM2NTczOTI3NzliNTJiZg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-11-10T17:26:04Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-11-11T00:00:32Z"}, "message": "IBM Z: Fix bootstrap breakage due to HAVE_TF macro\n\nCommit e627cda56865 (\"IBM Z: Store long doubles in vector registers\nwhen possible\") introduced HAVE_TF macro which expands to a logical\n\"or\" of HAVE_ constants.  Not all of these constants are available in\nGENERATOR_FILE context, so a hack was used: simply expand to true in\nthis case, because the actual value matters only during compiler\nruntime and not during generation.\n\nHowever, one aspect of this value matters during generation after all:\nwhether or not it's a constant, which in this case it appears to be.\nThis results in incorrect values in insn-flags.h and broken bootstrap\nfor some configurations.\n\nFix by using a dummy value that is not a constant.\n\ngcc/ChangeLog:\n\n2020-11-10  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* config/s390/s390.h (HAVE_TF): Use opaque value when\n\tGENERATOR_FILE is defined.", "tree": {"sha": "3c7eac37cda1990f80b0bf7bea0185446b69d5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7eac37cda1990f80b0bf7bea0185446b69d5a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/778087e0f54285de1eec5c3bf3657392779b52bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778087e0f54285de1eec5c3bf3657392779b52bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/778087e0f54285de1eec5c3bf3657392779b52bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778087e0f54285de1eec5c3bf3657392779b52bf/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dfbc52264fc64db22e75f385be9efae3d0eba46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dfbc52264fc64db22e75f385be9efae3d0eba46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dfbc52264fc64db22e75f385be9efae3d0eba46"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "bc579a3dadd12ad5911e63aed617ea4d15ef9a4a", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778087e0f54285de1eec5c3bf3657392779b52bf/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778087e0f54285de1eec5c3bf3657392779b52bf/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=778087e0f54285de1eec5c3bf3657392779b52bf", "patch": "@@ -1187,8 +1187,9 @@ struct GTY(()) machine_function\n #define TARGET_INDIRECT_BRANCH_TABLE s390_indirect_branch_table\n \n #ifdef GENERATOR_FILE\n-/* gencondmd.c is built before insn-flags.h.  */\n-#define HAVE_TF(icode) true\n+/* gencondmd.c is built before insn-flags.h.  Use an arbitrary opaque value\n+   that cannot be optimized away by gen_insn.  */\n+#define HAVE_TF(icode) TARGET_HARD_FLOAT\n #else\n #define HAVE_TF(icode) (HAVE_##icode##_fpr || HAVE_##icode##_vr)\n #endif"}]}