{"sha": "85dbf7e2258db10de674de971de026bdcd75e9a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkYmY3ZTIyNThkYjEwZGU2NzRkZTk3MWRlMDI2YmRjZDc1ZTlhNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-01-18T19:35:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T19:35:11Z"}, "message": "200x-xx-xx Nathan Sidwell <nathan@codesourcery.com>\n\ngcc/\n200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\n\t* config/m68k/m68k.h (REGISTER_MOVE_COST): Simplify definition.\n\t(STACK_GROWS_DOWNWARD): Define to 1.\n\t(FUNCTION_VALUE, LIBCALL_VALUE, FUNCTION_VALUE_REGNO_P): Equivocate\n\tcomments, emphasizing that these values are only defaults.\n\t* config/m68k/linux.h (LINK_SPEC): Fix formatting in #undef.\n\t* config/m68k/m68k.c (const_method): Remove trailing whitespace.\n\nFrom-SVN: r120920", "tree": {"sha": "14fe60886df13d3ff55c2ff2ad6f61a266f0e584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14fe60886df13d3ff55c2ff2ad6f61a266f0e584"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85dbf7e2258db10de674de971de026bdcd75e9a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85dbf7e2258db10de674de971de026bdcd75e9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85dbf7e2258db10de674de971de026bdcd75e9a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85dbf7e2258db10de674de971de026bdcd75e9a5/comments", "author": null, "committer": null, "parents": [{"sha": "565e35c947856aca0d02fd0db6456a5ba1611739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/565e35c947856aca0d02fd0db6456a5ba1611739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/565e35c947856aca0d02fd0db6456a5ba1611739"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "9719e09c818a2a2ad05524c7e4d65baafdcd7597", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85dbf7e2258db10de674de971de026bdcd75e9a5", "patch": "@@ -1,3 +1,12 @@\n+2007-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (REGISTER_MOVE_COST): Simplify definition.\n+\t(STACK_GROWS_DOWNWARD): Define to 1.\n+\t(FUNCTION_VALUE, LIBCALL_VALUE, FUNCTION_VALUE_REGNO_P): Equivocate\n+\tcomments, emphasizing that these values are only defaults.\n+\t* config/m68k/linux.h (LINK_SPEC): Fix formatting in #undef.\n+\t* config/m68k/m68k.c (const_method): Remove trailing whitespace.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k.md (cmpsi): Remove outdated flag_pic handling."}, {"sha": "cdb88170dc00081dd4bd6c46773bde2f8ec3287e", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=85dbf7e2258db10de674de971de026bdcd75e9a5", "patch": "@@ -82,7 +82,7 @@ Boston, MA 02110-1301, USA.  */\n \n #define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n \n-#undef\tLINK_SPEC\n+#undef LINK_SPEC\n #define LINK_SPEC \"-m m68kelf %{shared} \\\n   %{!shared: \\\n     %{!static: \\"}, {"sha": "25b8f0cfa2f996a802430bfb13d64bd9d6bfd1d0", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=85dbf7e2258db10de674de971de026bdcd75e9a5", "patch": "@@ -1754,7 +1754,7 @@ const_method (rtx constant)\n \n   /* The ColdFire doesn't have byte or word operations.  */\n   /* FIXME: This may not be useful for the m68060 either.  */\n-  if (!TARGET_COLDFIRE) \n+  if (!TARGET_COLDFIRE)\n     {\n       /* if -256 < N < 256 but N is not in range for a moveq\n \t N^ff will be, so use moveq #N^ff, dreg; not.b dreg.  */"}, {"sha": "3d46ee9c37c84acd55e8d0948fd9a64fe11b0aee", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85dbf7e2258db10de674de971de026bdcd75e9a5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=85dbf7e2258db10de674de971de026bdcd75e9a5", "patch": "@@ -577,13 +577,11 @@ extern enum reg_class regno_reg_class[];\n \n /* Moves between fp regs and other regs are two insns.  */\n #define REGISTER_MOVE_COST(MODE, CLASS1, CLASS2)\t\\\n-  (((CLASS1) == FP_REGS && (CLASS2) != FP_REGS)\t        \\\n-    || ((CLASS2) == FP_REGS && (CLASS1) != FP_REGS)\t\\\n-    ? 4 : 2)\n+  ((((CLASS1) == FP_REGS) != ((CLASS2) == FP_REGS)) ? 4 : 2)\n \f\n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n #define STARTING_FRAME_OFFSET 0\n \n@@ -608,14 +606,14 @@ extern enum reg_class regno_reg_class[];\n \t    == void_type_node)))\t\t\t\t\\\n    ? (SIZE) : 0)\n \n-/* On the m68k the return value is always in D0.  */\n+/* On the m68k the return value defaults to D0.  */\n #define FUNCTION_VALUE(VALTYPE, FUNC)  \\\n   gen_rtx_REG (TYPE_MODE (VALTYPE), 0)\n \n-/* On the m68k the return value is always in D0.  */\n+/* On the m68k the return value defaults to D0.  */\n #define LIBCALL_VALUE(MODE)  gen_rtx_REG (MODE, 0)\n \n-/* On the m68k, D0 is the only register used.  */\n+/* On the m68k, D0 is usually the only register used.  */\n #define FUNCTION_VALUE_REGNO_P(N) ((N) == 0)\n \n /* Define this to be true when FUNCTION_VALUE_REGNO_P is true for"}]}