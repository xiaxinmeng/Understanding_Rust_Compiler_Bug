{"sha": "beb019d346b903c16b9fd349937de444b6a8b6c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViMDE5ZDM0NmI5MDNjMTZiOWZkMzQ5OTM3ZGU0NDRiNmE4YjZjMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-21T14:27:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-21T22:04:22Z"}, "message": "c++: Constant expression parsing and parameters.\n\nThe difference between a \"potential\" constant-expression and a regular\nconstant-expression is the treatment of parameters; in a constexpr function,\na parameter is potentially constant when evaluating a call to that function,\nbut it is not constant during parsing of the function.\ncp_parser_constant_expression should check the latter rather than the\nformer.\n\ngcc/cp/ChangeLog:\n\n\t* cp-tree.h (is_rvalue_constant_expression): Declare.\n\t* constexpr.c (is_rvalue_constant_expression): New.\n\t* parser.c (cp_parser_constant_expression): Use it.\n\t* decl.c (cp_finish_decl): Try to treat a constexpr initializer in a\n\ttemplate as constant.", "tree": {"sha": "712206ff4c6993253a99a11b9736f06d069f998a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712206ff4c6993253a99a11b9736f06d069f998a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beb019d346b903c16b9fd349937de444b6a8b6c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb019d346b903c16b9fd349937de444b6a8b6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb019d346b903c16b9fd349937de444b6a8b6c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb019d346b903c16b9fd349937de444b6a8b6c0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f602147b6abbe05f862d3feda8290d4cf5c583f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f602147b6abbe05f862d3feda8290d4cf5c583f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f602147b6abbe05f862d3feda8290d4cf5c583f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "98c974e657f6d36f0fa456f2d7b3d7af5480395a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=beb019d346b903c16b9fd349937de444b6a8b6c0", "patch": "@@ -8359,6 +8359,14 @@ is_constant_expression (tree t)\n   return potential_constant_expression_1 (t, false, true, true, tf_none);\n }\n \n+/* As above, but expect an rvalue.  */\n+\n+bool\n+is_rvalue_constant_expression (tree t)\n+{\n+  return potential_constant_expression_1 (t, true, true, true, tf_none);\n+}\n+\n /* Like above, but complain about non-constant expressions.  */\n \n bool"}, {"sha": "db125a3a1db9c40a0ff4b621f468e8edfac2021c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=beb019d346b903c16b9fd349937de444b6a8b6c0", "patch": "@@ -7939,6 +7939,7 @@ extern tree constexpr_fn_retval\t\t(tree);\n extern tree ensure_literal_type_for_constexpr_object (tree);\n extern bool potential_constant_expression       (tree);\n extern bool is_constant_expression (tree);\n+extern bool is_rvalue_constant_expression (tree);\n extern bool is_nondependent_constant_expression (tree);\n extern bool is_nondependent_static_init_expression (tree);\n extern bool is_static_init_expression    (tree);"}, {"sha": "6d1c08e064aec2150fd7c470dd4ff59dfbac99df", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=beb019d346b903c16b9fd349937de444b6a8b6c0", "patch": "@@ -7612,7 +7612,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  init = boolean_true_node;\n \t}\n       else if (init\n-\t       && init_const_expr_p\n+\t       && (init_const_expr_p || DECL_DECLARED_CONSTEXPR_P (decl))\n \t       && !TYPE_REF_P (type)\n \t       && decl_maybe_constant_var_p (decl)\n \t       && !(dep_init = value_dependent_init_p (init)))"}, {"sha": "6a0ef4d76ee2f0c46b914735a47f251fe9a858bc", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb019d346b903c16b9fd349937de444b6a8b6c0/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=beb019d346b903c16b9fd349937de444b6a8b6c0", "patch": "@@ -10184,10 +10184,10 @@ cp_parser_constant_expression (cp_parser* parser,\n       if (TREE_TYPE (expression)\n \t  && TREE_CODE (TREE_TYPE (expression)) == ARRAY_TYPE)\n \tdecay = build_address (expression);\n-      bool is_const = potential_rvalue_constant_expression (decay);\n+      bool is_const = is_rvalue_constant_expression (decay);\n       parser->non_integral_constant_expression_p = !is_const;\n       if (!is_const && !allow_non_constant_p)\n-\trequire_potential_rvalue_constant_expression (decay);\n+\trequire_rvalue_constant_expression (decay);\n     }\n   if (allow_non_constant_p)\n     *non_constant_p = parser->non_integral_constant_expression_p;"}]}