{"sha": "1a59ccf25df49415490423382d31db15fa9c7796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1OWNjZjI1ZGY0OTQxNTQ5MDQyMzM4MmQzMWRiMTVmYTljNzc5Ng==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-10-25T23:53:41Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-10-25T23:53:41Z"}, "message": "C: detect more missing semicolons (PR c/7356)\n\nc_parser_declaration_or_fndef has logic for parsing what might be\neither a declaration or a function definition.\n\nThis patch adds a test to detect cases where a semicolon would have\nterminated the decls as a declaration, where the token that follows\nwould start a new declaration specifier, and updates the error message\naccordingly, with a fix-it hint.\n\nThis addresses PR c/7356, fixing the case of a stray token before a\n#include that previously gave inscrutable output, and improving e.g.:\n\n  int i\n  int j;\n\nfrom:\n\n  t.c:2:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'int'\n   int j;\n   ^~~\n\nto:\n\n  t.c:1:6: error: expected ';' before 'int'\n   int i\n        ^\n        ;\n   int j;\n   ~~~\n\ngcc.dg/noncompile/920923-1.c needs a slight update, as the output for\nthe first line changes from:\n\n  920923-1.c:2:14: error: expected '=', ',', ';', 'asm' or\n  '__attribute__' before 'unsigned'\n   typedef BYTE unsigned char; /* { dg-error \"expected\" } */\n                ^~~~~~~~\n\nto:\n  920923-1.c:2:13: error: expected ';' before 'unsigned'\n   typedef BYTE unsigned char; /* { dg-error \"expected\" } */\n               ^~~~~~~~~\n               ;\n  920923-1.c:2:1: warning: useless type name in empty declaration\n   typedef BYTE unsigned char; /* { dg-error \"expected\" } */\n   ^~~~~~~\n\nThe patch also adds a test for PR c/44515 as a baseline.\n\ngcc/c/ChangeLog:\n\tPR c/7356\n\t* c-parser.c (c_parser_declaration_or_fndef): Detect missing\n\tsemicolons.\n\ngcc/testsuite/ChangeLog:\n\tPR c/7356\n\tPR c/44515\n\t* c-c++-common/pr44515.c: New test case.\n\t* gcc.dg/pr7356-2.c: New test case.\n\t* gcc.dg/pr7356.c: New test case.\n\t* gcc.dg/spellcheck-typenames.c: Update the \"singed\" char \"TODO\"\n\tcase to reflect changes to output.\n\t* gcc.dg/noncompile/920923-1.c: Add dg-warning to reflect changes\n\tto output.\n\nFrom-SVN: r254093", "tree": {"sha": "26de80d706d83e84643afb24d388f3b4e9e65252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26de80d706d83e84643afb24d388f3b4e9e65252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a59ccf25df49415490423382d31db15fa9c7796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a59ccf25df49415490423382d31db15fa9c7796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a59ccf25df49415490423382d31db15fa9c7796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a59ccf25df49415490423382d31db15fa9c7796/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b661358bcd72a70bbf4b903db1f0f8de98a6bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b661358bcd72a70bbf4b903db1f0f8de98a6bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b661358bcd72a70bbf4b903db1f0f8de98a6bbd"}], "stats": {"total": 124, "additions": 117, "deletions": 7}, "files": [{"sha": "5d028b45490b6ce50cce2ebc0bd8ac787342e95e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -1,3 +1,9 @@\n+2017-10-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/7356\n+\t* c-parser.c (c_parser_declaration_or_fndef): Detect missing\n+\tsemicolons.\n+\n 2017-10-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/81706"}, {"sha": "68c45fd87d2c340fb1cff28f6af22ebabfc00ead", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -2241,11 +2241,37 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n \t}\n       if (!start_function (specs, declarator, all_prefix_attrs))\n \t{\n-\t  /* This can appear in many cases looking nothing like a\n-\t     function definition, so we don't give a more specific\n-\t     error suggesting there was one.  */\n-\t  c_parser_error (parser, \"expected %<=%>, %<,%>, %<;%>, %<asm%> \"\n-\t\t\t  \"or %<__attribute__%>\");\n+\t  /* At this point we've consumed:\n+\t       declaration-specifiers declarator\n+\t     and the next token isn't CPP_EQ, CPP_COMMA, CPP_SEMICOLON,\n+\t     RID_ASM, RID_ATTRIBUTE, or RID_IN,\n+\t     but the\n+\t       declaration-specifiers declarator\n+\t     aren't grokkable as a function definition, so we have\n+\t     an error.  */\n+\t  gcc_assert (!c_parser_next_token_is (parser, CPP_SEMICOLON));\n+\t  if (c_parser_next_token_starts_declspecs (parser))\n+\t    {\n+\t      /* If we have\n+\t\t   declaration-specifiers declarator decl-specs\n+\t\t then assume we have a missing semicolon, which would\n+\t\t give us:\n+\t\t   declaration-specifiers declarator  decl-specs\n+\t\t\t\t\t\t    ^\n+\t\t\t\t\t\t    ;\n+\t\t   <~~~~~~~~~ declaration ~~~~~~~~~~>\n+\t\t Use c_parser_require to get an error with a fix-it hint.  */\n+\t      c_parser_require (parser, CPP_SEMICOLON, \"expected %<;%>\");\n+\t      parser->error = false;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* This can appear in many cases looking nothing like a\n+\t\t function definition, so we don't give a more specific\n+\t\t error suggesting there was one.  */\n+\t      c_parser_error (parser, \"expected %<=%>, %<,%>, %<;%>, %<asm%> \"\n+\t\t\t      \"or %<__attribute__%>\");\n+\t    }\n \t  if (nested)\n \t    c_pop_function_context ();\n \t  break;"}, {"sha": "e2f7e4db6a9d8f1df0506fbfa66d422aefd1d1ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -1,3 +1,15 @@\n+2017-10-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/7356\n+\tPR c/44515\n+\t* c-c++-common/pr44515.c: New test case.\n+\t* gcc.dg/pr7356-2.c: New test case.\n+\t* gcc.dg/pr7356.c: New test case.\n+\t* gcc.dg/spellcheck-typenames.c: Update the \"singed\" char \"TODO\"\n+\tcase to reflect changes to output.\n+\t* gcc.dg/noncompile/920923-1.c: Add dg-warning to reflect changes\n+\tto output.\n+\n 2017-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/fold-cond_expr-1.c: Rename to..."}, {"sha": "dbb7750907c3c8451c1a490699bfada96b9f4312", "filename": "gcc/testsuite/c-c++-common/pr44515.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44515.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44515.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44515.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+void bar(void);\n+void foo(void)\n+{\n+  bar() /* { dg-error \"expected ';' before '.' token\" } */\n+}\n+/* { dg-begin-multiline-output \"\" }\n+   bar()\n+        ^\n+        ;\n+ }\n+ ~       \n+   { dg-end-multiline-output \"\" } */"}, {"sha": "006a07131f9cdc8f968ef0605108cbcc4d905b93", "filename": "gcc/testsuite/gcc.dg/noncompile/920923-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -1,5 +1,6 @@\n /* { dg-message \"undeclared identifier is reported only once\" \"reminder for mmu_base\" { target *-*-* } 0 } */\n typedef BYTE unsigned char;\t/* { dg-error \"expected\" } */\n+/* { dg-warning \"useless type name in empty declaration\" \"\"  { target *-*-* } .-1 } */\n typedef int item_n;\n typedef int perm_set;\n struct PENT { caddr_t v_addr; };/* { dg-error \"unknown type name\" } */"}, {"sha": "ad679756978ddc0ef99709b4261a3d75d76eb8a3", "filename": "gcc/testsuite/gcc.dg/pr7356-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356-2.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+int i /* { dg-error \"6: expected ';' before 'int'\" } */\n+int j;\n+/* { dg-begin-multiline-output \"\" }\n+ int i \n+      ^\n+      ;\n+ int j;\n+ ~~~   \n+   { dg-end-multiline-output \"\" } */\n+\n+\n+void test (void)\n+{\n+  int i /* { dg-error \"8: expected ';' before 'int'\" } */\n+  int j;\n+\n+  /* { dg-begin-multiline-output \"\" }\n+   int i \n+        ^\n+        ;\n+   int j;\n+   ~~~   \n+     { dg-end-multiline-output \"\" } */\n+}\n+\n+int old_style_params (first, second)\n+     int first;\n+     int second;\n+{\n+  return first + second;\n+}"}, {"sha": "84baf078b96394aaa62a39b515c7e7b571e2b8cc", "filename": "gcc/testsuite/gcc.dg/pr7356.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr7356.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+a /* { dg-line stray_token } */\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <string.h>\n+int main(int argc, char** argv)\n+{\n+  return 0;\n+}\n+\n+/* { dg-error \"expected ';' before '.*'\" \"\" { target *-*-* } stray_token } */\n+/* { dg-begin-multiline-output \"\" }\n+ a\n+  ^\n+  ;\n+   { dg-end-multiline-output \"\" } */"}, {"sha": "3717ad89f1bd06451ab51e134051bead5558f865", "filename": "gcc/testsuite/gcc.dg/spellcheck-typenames.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-typenames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a59ccf25df49415490423382d31db15fa9c7796/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-typenames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-typenames.c?ref=1a59ccf25df49415490423382d31db15fa9c7796", "patch": "@@ -100,8 +100,9 @@ baz value; /* { dg-error \"1: unknown type name .baz.; use .enum. keyword to refe\n    { dg-end-multiline-output \"\" } */\n \n /* TODO: it would be better to detect the \"singed\" vs \"signed\" typo here.  */\n-singed char ch; /* { dg-error \"8: before .char.\" } */\n+singed char ch; /* { dg-error \"7: before .char.\" } */\n /* { dg-begin-multiline-output \"\" }\n  singed char ch;\n-        ^~~~\n+       ^~~~~\n+       ;\n    { dg-end-multiline-output \"\" } */"}]}