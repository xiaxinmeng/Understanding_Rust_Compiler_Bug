{"sha": "7f82286eb63dadda3412c05f9ca7dd8e10ebaea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y4MjI4NmViNjNkYWRkYTM0MTJjMDVmOWNhN2RkOGUxMGViYWVhNQ==", "commit": {"author": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-02-02T19:58:06Z"}, "committer": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-02-02T19:58:06Z"}, "message": "re PR c++/37140 (type inherited from base class not recognized)\n\n2014-02-02  Fabien Chene  <fabien@gcc.gnu.org>\n        PR c++/37140\n        * parser.c (cp_parser_nonclass_name): Call strip_using_decl and\n\tmove the code handling dependent USING_DECLs...\n        * name-lookup.c (strip_using_decl): ...Here.\n\n2014-02-02  Fabien Chene  <fabien@gcc.gnu.org>\n\n        PR c++/37140\n        * g++.dg/template/using27.C: New.\n\t* g++.dg/template/using28.C: New.\n\t* g++.dg/template/using29.C: New.\n\nFrom-SVN: r207407", "tree": {"sha": "8fec9e0051d93a23c33a7add6efb3d2cacf3f324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fec9e0051d93a23c33a7add6efb3d2cacf3f324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5/comments", "author": null, "committer": null, "parents": [{"sha": "2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "ea16061f2ae7d510c5cb6294da2dacc5c55d9f8b", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f82286eb63dadda3412c05f9ca7dd8e10ebaea5/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=7f82286eb63dadda3412c05f9ca7dd8e10ebaea5", "patch": "@@ -406,7 +406,8 @@ pop_bindings_and_leave_scope (void)\n   leave_scope ();\n }\n \n-/* Strip non dependent using declarations.  */\n+/* Strip non dependent using declarations. If DECL is dependent,\n+   surreptitiously create a typename_type and return it.  */\n \n tree\n strip_using_decl (tree decl)\n@@ -416,6 +417,23 @@ strip_using_decl (tree decl)\n \n   while (TREE_CODE (decl) == USING_DECL && !DECL_DEPENDENT_P (decl))\n     decl = USING_DECL_DECLS (decl);\n+\n+  if (TREE_CODE (decl) == USING_DECL && DECL_DEPENDENT_P (decl)\n+      && USING_DECL_TYPENAME_P (decl))\n+    {\n+      /* We have found a type introduced by a using\n+\t declaration at class scope that refers to a dependent\n+\t type.\n+\t     \n+\t using typename :: [opt] nested-name-specifier unqualified-id ;\n+      */\n+      decl = make_typename_type (TREE_TYPE (decl),\n+\t\t\t\t DECL_NAME (decl),\n+\t\t\t\t typename_type, tf_error);\n+      if (decl != error_mark_node)\n+\tdecl = TYPE_NAME (decl);\n+    }\n+\n   return decl;\n }\n "}]}