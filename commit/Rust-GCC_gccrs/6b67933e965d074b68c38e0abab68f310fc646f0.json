{"sha": "6b67933e965d074b68c38e0abab68f310fc646f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2NzkzM2U5NjVkMDc0YjY4YzM4ZTBhYmFiNjhmMzEwZmM2NDZmMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-11T23:20:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-11T23:20:14Z"}, "message": "(rs6000_abi): New enumeration to describe which ABI we're conforming to.\n\n(rs6000_stack): Use abi enum, not AIX vs. V.4 boolean.\n(ASM_OUTPUT_OPTIONS): New macro to print output options in .s file.\n(ASM_FILE_START): Use it.\n(output_options,rs6000_float_const): Declare new functions.\n\nFrom-SVN: r10316", "tree": {"sha": "55b82c2b6ed4079468d1741f1031f30f197c875c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b82c2b6ed4079468d1741f1031f30f197c875c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b67933e965d074b68c38e0abab68f310fc646f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b67933e965d074b68c38e0abab68f310fc646f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b67933e965d074b68c38e0abab68f310fc646f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b67933e965d074b68c38e0abab68f310fc646f0/comments", "author": null, "committer": null, "parents": [{"sha": "6c99c37ba9c501cf387a81d1e2b5c40c710dc571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c99c37ba9c501cf387a81d1e2b5c40c710dc571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c99c37ba9c501cf387a81d1e2b5c40c710dc571"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "823ebcae61e3c06fccd8f37318c8620dc13f5587", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b67933e965d074b68c38e0abab68f310fc646f0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b67933e965d074b68c38e0abab68f310fc646f0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6b67933e965d074b68c38e0abab68f310fc646f0", "patch": "@@ -853,6 +853,13 @@ enum reg_class { NO_REGS, BASE_REGS, GENERAL_REGS, FLOAT_REGS,\n \f\n /* Stack layout; function entry, exit and calling.  */\n \n+/* Enumeration to give which calling sequence to use.  */\n+enum rs6000_abi {\n+  ABI_NONE,\n+  ABI_AIX,\t\t\t/* IBM's AIX */\n+  ABI_V4\t\t\t/* System V.4/eabi */\n+};\n+\n /* Structure used to define the rs6000 stack */\n typedef struct rs6000_stack {\n   int first_gp_reg_save;\t/* first callee saved GP register used */\n@@ -861,7 +868,7 @@ typedef struct rs6000_stack {\n   int cr_save_p;\t\t/* true if the CR reg needs to be saved */\n   int push_p;\t\t\t/* true if we need to allocate stack space */\n   int calls_p;\t\t\t/* true if the function makes any calls */\n-  int v4_call_p;\t\t/* true if V.4 calling sequence used */\n+  enum rs6000_abi abi;\t\t/* which ABI to use */\n   int gp_save_offset;\t\t/* offset to save GP regs from initial SP */\n   int fp_save_offset;\t\t/* offset to save FP regs from initial SP */\n   int lr_save_offset;\t\t/* offset to save LR from initial SP */\n@@ -1799,6 +1806,12 @@ extern int rs6000_trunc_used;\n \f\n /* Control the assembler format that we output.  */\n \n+/* Common macro to output the options used to the asm file.  */\n+#define ASM_OUTPUT_OPTIONS(FILE)\t\t\t\t\t \\\n+  output_options (FILE,\t\t\t\t\t\t\t \\\n+\t\t  f_options, sizeof (f_options) / sizeof (f_options[0]), \\\n+\t\t  W_options, sizeof (W_options) / sizeof (W_options[0])) \\\n+\n /* Output at beginning of assembler file.\n \n    Initialize the section names for the RS/6000 at this point.\n@@ -1816,6 +1829,7 @@ extern int rs6000_trunc_used;\n \n #define ASM_FILE_START(FILE)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_OPTIONS (FILE);\t\t\t\t\t\\\n   rs6000_gen_section_name (&xcoff_bss_section_name,\t\t\\\n \t\t\t   main_input_filename, \".bss_\");\t\\\n   rs6000_gen_section_name (&xcoff_private_data_section_name,\t\\\n@@ -2464,7 +2478,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t\t       GT, LEU, LTU, GEU, GTU}},\n \n /* Declare functions in rs6000.c */\n+extern void output_options ();\n extern void rs6000_override_options ();\n+extern struct rtx_def *rs6000_float_const ();\n extern struct rtx_def *rs6000_immed_double_const ();\n extern int direct_return ();\n extern int any_operand ();"}]}