{"sha": "cd683f6da56b08d6cde14e25cd453ea0cc88521f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2ODNmNmRhNTZiMDhkNmNkZTE0ZTI1Y2Q0NTNlYTBjYzg4NTIxZg==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2006-02-26T12:55:43Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2006-02-26T12:55:43Z"}, "message": "re PR middle-end/25125 ((short) ((int)(unsigned short) + (int)) is done in the wrong type)\n\n        PR tree-optimization/25125\n        * gcc.dg/vect/wrapv-vect-7.c, gcc.dg/vect/wrapv-vect-reduc-2char.c,\n        gcc.dg/vect/wrapv-vect-reduc-2short.c: New tests.\n\nFrom-SVN: r111452", "tree": {"sha": "687f67cd60715ef075012c48a78d199dd90f9b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/687f67cd60715ef075012c48a78d199dd90f9b5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd683f6da56b08d6cde14e25cd453ea0cc88521f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd683f6da56b08d6cde14e25cd453ea0cc88521f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd683f6da56b08d6cde14e25cd453ea0cc88521f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd683f6da56b08d6cde14e25cd453ea0cc88521f/comments", "author": null, "committer": null, "parents": [{"sha": "afa38a953b6a862b3c5cb5632981a3b2d61969c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa38a953b6a862b3c5cb5632981a3b2d61969c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa38a953b6a862b3c5cb5632981a3b2d61969c3"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "3040961e53eb2403e6b64c9d8a2334824aeac39b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd683f6da56b08d6cde14e25cd453ea0cc88521f", "patch": "@@ -1,3 +1,9 @@\n+2006-02-26  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/25125\n+\t* gcc.dg/vect/wrapv-vect-7.c, gcc.dg/vect/wrapv-vect-reduc-2char.c,\n+\tgcc.dg/vect/wrapv-vect-reduc-2short.c: New tests.\n+\n 2006-02-26  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimizations/26359"}, {"sha": "ffc5eaca5cafbfdb5630b7fd51afccf28c311188", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-7.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-7.c?ref=cd683f6da56b08d6cde14e25cd453ea0cc88521f", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 128\n+\n+int main1 ()\n+{\n+  int i;\n+  short sa[N];\n+  short sb[N];\n+  \n+  for (i = 0; i < N; i++)\n+    {\n+      sb[i] = 5;\n+    }\n+\n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    {\n+      if (sb[i] != 5)\n+        abort ();\n+    }\n+  \n+  for (i = 0; i < N; i++)\n+    {\n+      sa[i] = sb[i] + (short)100;\n+    }\n+\n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    {\n+      if (sa[i] != 105)\n+        abort ();\n+    }\n+  \n+  return 0;\n+}\n+\n+int main (void)\n+{ \n+  check_vect ();\n+  \n+  return main1 ();\n+}\n+\n+/* Fails for 32-bit targets that don't vectorize PLUS.  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "aecf8a512e1d9fe781f57ac8fb42960685f1a327", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-reduc-2char.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c?ref=cd683f6da56b08d6cde14e25cd453ea0cc88521f", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+#define DIFF 121\n+\n+void main1 (signed char x, signed char max_result, signed char min_result)\n+{\n+  int i;\n+  signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+  signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  signed char diff = 2;\n+  signed char max = x;\n+  signed char min = x;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (signed char)(b[i] - c[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  check_vect ();\n+  \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4476c83d0e7b718d194454027db4b52d8b9417ef", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-reduc-2short.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd683f6da56b08d6cde14e25cd453ea0cc88521f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c?ref=cd683f6da56b08d6cde14e25cd453ea0cc88521f", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+#define DIFF 242\n+\n+void main1 (short x, short max_result, short min_result)\n+{\n+  int i;\n+  short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  short diff = 2;\n+  short max = x;\n+  short min = x;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (short)(b[i] - c[i]);\n+  }\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  check_vect ();\n+  \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}