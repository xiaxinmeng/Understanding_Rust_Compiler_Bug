{"sha": "7792cf668e8efe4d158172f80b6c217fc64d9ddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc5MmNmNjY4ZThlZmU0ZDE1ODE3MmY4MGI2YzIxN2ZjNjRkOWRkYw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-05-18T08:44:18Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-05-18T08:44:18Z"}, "message": "Darwin, objective-c - register gnu-runtime headers correctly.\n\nDarwin is able to use two runtimes for objective-c; the\ndefault is its native \"NeXT\" runtime, but also it can build\ncode using the \"gnu-runtime\".  In order to do this, we have to\nbe able to find the gnu-runtime headers (which are installed\ninto the compiler's tree).\n\nThe process to do this is erroneously prepending the sysroot\nto this when a sysroot is in force.  The gnu-runtime headers have\nnever been installed in a Darwin (macOS) SDK so we must make\nsure that they are found local to the compiler.\n\ngcc/\n\n2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin-c.c (darwin_register_objc_includes): Do not\n\tprepend the sysroot when building gnu-runtime header search\n\tpaths.\n\nFrom-SVN: r271371", "tree": {"sha": "e286cc46662ddfdceb4fbbb5c80fbdb3f3074137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e286cc46662ddfdceb4fbbb5c80fbdb3f3074137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7792cf668e8efe4d158172f80b6c217fc64d9ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7792cf668e8efe4d158172f80b6c217fc64d9ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7792cf668e8efe4d158172f80b6c217fc64d9ddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7792cf668e8efe4d158172f80b6c217fc64d9ddc/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5219955ccd44eaca6fd12b39acafc24c04602e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5219955ccd44eaca6fd12b39acafc24c04602e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5219955ccd44eaca6fd12b39acafc24c04602e97"}], "stats": {"total": 45, "additions": 21, "deletions": 24}, "files": [{"sha": "727fa43d2b49ee3924351a2c408088c994b6de23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7792cf668e8efe4d158172f80b6c217fc64d9ddc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7792cf668e8efe4d158172f80b6c217fc64d9ddc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7792cf668e8efe4d158172f80b6c217fc64d9ddc", "patch": "@@ -1,3 +1,9 @@\n+2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin-c.c (darwin_register_objc_includes): Do not\n+\tprepend the sysroot when building gnu-runtime header search\n+\tpaths.\n+\n 2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (darwin_file_end): Use switch_to_section ()"}, {"sha": "aa5d2f20b1e723bf62c29c86db1f85c39d54d848", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 15, "deletions": 24, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7792cf668e8efe4d158172f80b6c217fc64d9ddc/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7792cf668e8efe4d158172f80b6c217fc64d9ddc/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=7792cf668e8efe4d158172f80b6c217fc64d9ddc", "patch": "@@ -463,41 +463,32 @@ static const char *framework_defaults [] =\n /* Register the GNU objective-C runtime include path if STDINC.  */\n \n void\n-darwin_register_objc_includes (const char *sysroot, const char *iprefix,\n-\t\t\t       int stdinc)\n+darwin_register_objc_includes (const char *sysroot ATTRIBUTE_UNUSED,\n+\t\t\t       const char *iprefix, int stdinc)\n {\n-  const char *fname;\n-  size_t len;\n-  /* We do not do anything if we do not want the standard includes. */\n-  if (!stdinc)\n-    return;\n-\n-  fname = GCC_INCLUDE_DIR \"-gnu-runtime\";\n-\n-  /* Register the GNU OBJC runtime include path if we are compiling  OBJC\n-    with GNU-runtime.  */\n+  /* If we want standard includes;  Register the GNU OBJC runtime include\n+     path if we are compiling OBJC with GNU-runtime.\n+     This path is compiler-relative, we don't want to prepend the sysroot\n+     since it's not expected to find the headers there.  */\n \n-  if (c_dialect_objc () && !flag_next_runtime)\n+  if (stdinc && c_dialect_objc () && !flag_next_runtime)\n     {\n+      const char *fname = GCC_INCLUDE_DIR \"-gnu-runtime\";\n       char *str;\n-      /* See if our directory starts with the standard prefix.\n+      size_t len;\n+\n+     /* See if our directory starts with the standard prefix.\n \t \"Translate\" them, i.e. replace /usr/local/lib/gcc... with\n \t IPREFIX and search them first.  */\n-      if (iprefix && (len = cpp_GCC_INCLUDE_DIR_len) != 0 && !sysroot\n+      if (iprefix && (len = cpp_GCC_INCLUDE_DIR_len) != 0\n \t  && !strncmp (fname, cpp_GCC_INCLUDE_DIR, len))\n \t{\n \t  str = concat (iprefix, fname + len, NULL);\n-          /* FIXME: wrap the headers for C++awareness.  */\n-\t  add_path (str, INC_SYSTEM, /*c++aware=*/false, false);\n+\t  add_path (str, INC_SYSTEM, /*c++aware=*/true, false);\n \t}\n \n-      /* Should this directory start with the sysroot?  */\n-      if (sysroot)\n-\tstr = concat (sysroot, fname, NULL);\n-      else\n-\tstr = update_path (fname, \"\");\n-\n-      add_path (str, INC_SYSTEM, /*c++aware=*/false, false);\n+      str = update_path (fname, \"\");\n+      add_path (str, INC_SYSTEM, /*c++aware=*/true, false);\n     }\n }\n "}]}