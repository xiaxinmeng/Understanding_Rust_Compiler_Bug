{"sha": "fb4c4640407a161b72fd927e5610778d52c96e26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0YzQ2NDA0MDdhMTYxYjcyZmQ5MjdlNTYxMDc3OGQ1MmM5NmUyNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2009-06-13T23:15:48Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2009-06-13T23:15:48Z"}, "message": "cfgcleanup.c (old_insns_match_p): Remove code to substitute REG_EQUAL/REG_EQUIV notes.\n\n\t* cfgcleanup.c (old_insns_match_p): Remove code to substitute\n\tREG_EQUAL/REG_EQUIV notes.\n\nFrom-SVN: r148463", "tree": {"sha": "9489fc11925987ca7f50e7654a1d3be8e3a1f844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9489fc11925987ca7f50e7654a1d3be8e3a1f844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb4c4640407a161b72fd927e5610778d52c96e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4c4640407a161b72fd927e5610778d52c96e26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4c4640407a161b72fd927e5610778d52c96e26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4c4640407a161b72fd927e5610778d52c96e26/comments", "author": null, "committer": null, "parents": [{"sha": "1d24fdd92a0189c05fedccebfdfb696fee999a4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d24fdd92a0189c05fedccebfdfb696fee999a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d24fdd92a0189c05fedccebfdfb696fee999a4d"}], "stats": {"total": 39, "additions": 5, "deletions": 34}, "files": [{"sha": "99a578fd7683e74cdd9859218eab0997ad20ed5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4c4640407a161b72fd927e5610778d52c96e26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4c4640407a161b72fd927e5610778d52c96e26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb4c4640407a161b72fd927e5610778d52c96e26", "patch": "@@ -1,3 +1,8 @@\n+2009-06-14  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* cfgcleanup.c (old_insns_match_p): Remove code to substitute\n+\tREG_EQUAL/REG_EQUIV notes.\n+\n 2009-06-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/40389"}, {"sha": "3d1fbb297018b941125f185ad5058fc6f6c38bbf", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4c4640407a161b72fd927e5610778d52c96e26/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4c4640407a161b72fd927e5610778d52c96e26/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=fb4c4640407a161b72fd927e5610778d52c96e26", "patch": "@@ -1009,40 +1009,6 @@ old_insns_match_p (int mode ATTRIBUTE_UNUSED, rtx i1, rtx i2)\n       ? rtx_renumbered_equal_p (p1, p2) : rtx_equal_p (p1, p2))\n     return true;\n \n-  /* Do not do EQUIV substitution after reload.  First, we're undoing the\n-     work of reload_cse.  Second, we may be undoing the work of the post-\n-     reload splitting pass.  */\n-  /* ??? Possibly add a new phase switch variable that can be used by\n-     targets to disallow the troublesome insns after splitting.  */\n-  if (!reload_completed)\n-    {\n-      /* The following code helps take care of G++ cleanups.  */\n-      rtx equiv1 = find_reg_equal_equiv_note (i1);\n-      rtx equiv2 = find_reg_equal_equiv_note (i2);\n-\n-      if (equiv1 && equiv2\n-\t  /* If the equivalences are not to a constant, they may\n-\t     reference pseudos that no longer exist, so we can't\n-\t     use them.  */\n-\t  && (! reload_completed\n-\t      || (CONSTANT_P (XEXP (equiv1, 0))\n-\t\t  && rtx_equal_p (XEXP (equiv1, 0), XEXP (equiv2, 0)))))\n-\t{\n-\t  rtx s1 = single_set (i1);\n-\t  rtx s2 = single_set (i2);\n-\t  if (s1 != 0 && s2 != 0\n-\t      && rtx_renumbered_equal_p (SET_DEST (s1), SET_DEST (s2)))\n-\t    {\n-\t      validate_change (i1, &SET_SRC (s1), XEXP (equiv1, 0), 1);\n-\t      validate_change (i2, &SET_SRC (s2), XEXP (equiv2, 0), 1);\n-\t      if (! rtx_renumbered_equal_p (p1, p2))\n-\t\tcancel_changes (0);\n-\t      else if (apply_change_group ())\n-\t\treturn true;\n-\t    }\n-\t}\n-    }\n-\n   return false;\n }\n \f"}]}