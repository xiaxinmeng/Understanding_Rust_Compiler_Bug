{"sha": "8f215dcec4fcb98282552e156ecfa4b54f01f6db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyMTVkY2VjNGZjYjk4MjgyNTUyZTE1NmVjZmE0YjU0ZjAxZjZkYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-06-02T12:50:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-06-02T12:50:08Z"}, "message": "c-common.c (c_get_alias_set): Check whether signed_type did not return its argument before calling...\n\n\t* c-common.c (c_get_alias_set): Check whether signed_type did not\n\treturn its argument before calling get_alias_set on the result.\n\nFrom-SVN: r34356", "tree": {"sha": "3855d7ea3081fbc868ff162effb41193a7d8e24d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3855d7ea3081fbc868ff162effb41193a7d8e24d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f215dcec4fcb98282552e156ecfa4b54f01f6db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f215dcec4fcb98282552e156ecfa4b54f01f6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f215dcec4fcb98282552e156ecfa4b54f01f6db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f215dcec4fcb98282552e156ecfa4b54f01f6db/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bec7ddd796b113feda02b8d3b731611acc7bb341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec7ddd796b113feda02b8d3b731611acc7bb341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec7ddd796b113feda02b8d3b731611acc7bb341"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "c0e6bff72f771bcd1989e7a6bf8415f20c0556d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f215dcec4fcb98282552e156ecfa4b54f01f6db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f215dcec4fcb98282552e156ecfa4b54f01f6db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f215dcec4fcb98282552e156ecfa4b54f01f6db", "patch": "@@ -1,3 +1,8 @@\n+2000-06-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-common.c (c_get_alias_set): Check whether signed_type did not\n+\treturn its argument before calling get_alias_set on the result.\n+\n 2000-06-02  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* expr.c (emit_group_load): Fix typo, GET_MODE not GET_CODE."}, {"sha": "979c380e9414ee1dea5c677292e8627c9f415739", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f215dcec4fcb98282552e156ecfa4b54f01f6db/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f215dcec4fcb98282552e156ecfa4b54f01f6db/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8f215dcec4fcb98282552e156ecfa4b54f01f6db", "patch": "@@ -3298,8 +3298,13 @@ c_get_alias_set (t)\n      unsigned variants of the same type.  We treat the signed\n      variant as canonical.  */\n   if (TREE_CODE (t) == INTEGER_TYPE && TREE_UNSIGNED (t))\n-    return get_alias_set (signed_type (t));\n+    {\n+      tree t1 = signed_type (t);\n \n+      /* t1 == t can happen for boolean nodes which are always unsigned.  */\n+      if (t1 != t)\n+\treturn get_alias_set (t1);\n+    }\n   else if (POINTER_TYPE_P (t))\n     {\n       tree t1;"}]}