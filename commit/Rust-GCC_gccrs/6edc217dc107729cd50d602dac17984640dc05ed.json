{"sha": "6edc217dc107729cd50d602dac17984640dc05ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVkYzIxN2RjMTA3NzI5Y2Q1MGQ2MDJkYWMxNzk4NDY0MGRjMDVlZA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-01-09T20:30:50Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-01-09T20:30:50Z"}, "message": "invoke.texi: Add -maltivec={be,le} options...\n\n2014-01-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* doc/invoke.texi: Add -maltivec={be,le} options, and document\n\tdefault element-order behavior for -maltivec.\n\t* config/rs6000/rs6000.opt: Add -maltivec={be,le} options.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Ensure\n\tthat -maltivec={le,be} implies -maltivec; disallow -maltivec=le\n\twhen targeting big endian, at least for now.\n\t* config/rs6000/rs6000.h: Add #define of VECTOR_ELT_ORDER_BIG.\n\nFrom-SVN: r206494", "tree": {"sha": "086a6b17e64ed1abeefee2b7a417fe2b46f29c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/086a6b17e64ed1abeefee2b7a417fe2b46f29c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6edc217dc107729cd50d602dac17984640dc05ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc217dc107729cd50d602dac17984640dc05ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edc217dc107729cd50d602dac17984640dc05ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc217dc107729cd50d602dac17984640dc05ed/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3396aba5384e904199530f8efea4c1eaaab51605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3396aba5384e904199530f8efea4c1eaaab51605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3396aba5384e904199530f8efea4c1eaaab51605"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "87f1e29e3e08cfb282c961d1733ee89e6e79e5a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6edc217dc107729cd50d602dac17984640dc05ed", "patch": "@@ -1,3 +1,13 @@\n+2014-01-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* doc/invoke.texi: Add -maltivec={be,le} options, and document\n+\tdefault element-order behavior for -maltivec.\n+\t* config/rs6000/rs6000.opt: Add -maltivec={be,le} options.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Ensure\n+\tthat -maltivec={le,be} implies -maltivec; disallow -maltivec=le\n+\twhen targeting big endian, at least for now.\n+\t* config/rs6000/rs6000.h: Add #define of VECTOR_ELT_ORDER_BIG.\n+\n 2014-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/47735"}, {"sha": "500acb7d762e133713b57a9512e603a239123e3c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6edc217dc107729cd50d602dac17984640dc05ed", "patch": "@@ -3238,6 +3238,18 @@ rs6000_option_override_internal (bool global_init_p)\n       && !(processor_target_table[tune_index].target_enable & OPTION_MASK_HTM))\n     rs6000_isa_flags |= ~rs6000_isa_flags_explicit & OPTION_MASK_STRICT_ALIGN;\n \n+  /* -maltivec={le,be} implies -maltivec.  */\n+  if (rs6000_altivec_element_order != 0)\n+    rs6000_isa_flags |= OPTION_MASK_ALTIVEC;\n+\n+  /* Disallow -maltivec=le in big endian mode for now.  This is not\n+     known to be useful for anyone.  */\n+  if (BYTES_BIG_ENDIAN && rs6000_altivec_element_order == 1)\n+    {\n+      warning (0, N_(\"-maltivec=le not allowed for big-endian targets\"));\n+      rs6000_altivec_element_order = 0;\n+    }\n+\n   /* Add some warnings for VSX.  */\n   if (TARGET_VSX)\n     {"}, {"sha": "fdbe965ec0232d1ae5b86044387774871666aff4", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6edc217dc107729cd50d602dac17984640dc05ed", "patch": "@@ -468,6 +468,15 @@ extern int rs6000_vector_align[];\n    ? rs6000_vector_align[(MODE)]\t\t\t\t\t\\\n    : (int)GET_MODE_BITSIZE ((MODE)))\n \n+/* Determine the element order to use for vector instructions.  By\n+   default we use big-endian element order when targeting big-endian,\n+   and little-endian element order when targeting little-endian.  For\n+   programs being ported from BE Power to LE Power, it can sometimes\n+   be useful to use big-endian element order when targeting little-endian.\n+   This is set via -maltivec=be, for example.  */\n+#define VECTOR_ELT_ORDER_BIG                                  \\\n+  (BYTES_BIG_ENDIAN || (rs6000_altivec_element_order == 2))\n+\n /* Alignment options for fields in structures for sub-targets following\n    AIX-like ABI.\n    ALIGN_POWER word-aligns FP doubles (default AIX ABI)."}, {"sha": "3240a7516bb9c53ccc29d67538ad1a9ad3fd79cf", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=6edc217dc107729cd50d602dac17984640dc05ed", "patch": "@@ -140,6 +140,14 @@ maltivec\n Target Report Mask(ALTIVEC) Var(rs6000_isa_flags)\n Use AltiVec instructions\n \n+maltivec=le\n+Target Report RejectNegative Var(rs6000_altivec_element_order, 1) Save\n+Generate Altivec instructions using little-endian element order\n+\n+maltivec=be\n+Target Report RejectNegative Var(rs6000_altivec_element_order, 2)\n+Generate Altivec instructions using big-endian element order\n+\n mhard-dfp\n Target Report Mask(DFP) Var(rs6000_isa_flags)\n Use decimal floating point instructions"}, {"sha": "9e16b3b14229a506581e0d343fdf9e15b8043fb0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc217dc107729cd50d602dac17984640dc05ed/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6edc217dc107729cd50d602dac17984640dc05ed", "patch": "@@ -18890,6 +18890,38 @@ the AltiVec instruction set.  You may also need to set\n @option{-mabi=altivec} to adjust the current ABI with AltiVec ABI\n enhancements.\n \n+When @option{-maltivec} is used, rather than @option{-maltivec=le} or\n+@option{-maltivec=be}, the element order for Altivec intrinsics such\n+as @code{vec_splat}, @code{vec_extract}, and @code{vec_insert} will\n+match array element order corresponding to the endianness of the\n+target.  That is, element zero identifies the leftmost element in a\n+vector register when targeting a big-endian platform, and identifies\n+the rightmost element in a vector register when targeting a\n+little-endian platform.\n+\n+@item -maltivec=be\n+@opindex maltivec=be\n+Generate Altivec instructions using big-endian element order,\n+regardless of whether the target is big- or little-endian.  This is\n+the default when targeting a big-endian platform.\n+\n+The element order is used to interpret element numbers in Altivec\n+intrinsics such as @code{vec_splat}, @code{vec_extract}, and\n+@code{vec_insert}.  By default, these will match array element order\n+corresponding to the endianness for the target.\n+\n+@item -maltivec=le\n+@opindex maltivec=le\n+Generate Altivec instructions using little-endian element order,\n+regardless of whether the target is big- or little-endian.  This is\n+the default when targeting a little-endian platform.  This option is\n+currently ignored when targeting a big-endian platform.\n+\n+The element order is used to interpret element numbers in Altivec\n+intrinsics such as @code{vec_splat}, @code{vec_extract}, and\n+@code{vec_insert}.  By default, these will match array element order\n+corresponding to the endianness for the target.\n+\n @item -mvrsave\n @itemx -mno-vrsave\n @opindex mvrsave"}]}