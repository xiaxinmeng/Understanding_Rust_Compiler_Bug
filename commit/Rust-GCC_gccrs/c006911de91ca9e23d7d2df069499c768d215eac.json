{"sha": "c006911de91ca9e23d7d2df069499c768d215eac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAwNjkxMWRlOTFjYTllMjNkN2QyZGYwNjk0OTljNzY4ZDIxNWVhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-07T10:09:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-07T10:12:22Z"}, "message": "powerpc: Fix -fstack-clash-protection -mprefixed-addr ICE [PR93122]\n\nAs mentioned in the PR, the following testcase ICEs because rs, while valid\nadd_operand is not valid add_cint_operand and so gen_add3_insn fails,\nbecause it doesn't meet the expander predicates.\n\nHere is what I meant as the alternative, i.e. don't check any predicates,\njust gen_add3_insn, if that fails, force rs into register and retry.\nAnd, add REG_FRAME_RELATED_EXPR note always when we haven't emitted a single\ninsn that has rtl exactly matching what we'd add the REG_FRAME_RELATED_EXPR\nwith (in that case, dwarf2cfi.c is able to figure it out by itself, no need\nto waste compile time memory).\n\n2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93122\n\t* config/rs6000/rs6000-logue.c\n\t(rs6000_emit_probe_stack_range_stack_clash): Always use gen_add3_insn,\n\tif it fails, move rs into end_addr and retry.  Add\n\tREG_FRAME_RELATED_EXPR note whenever it returns more than one insn or\n\tthe insn pattern doesn't describe well what exactly happens to\n\tdwarf2cfi.c.\n\n\t* gcc.target/powerpc/pr93122.c: New test.", "tree": {"sha": "6f83adbbdb0062f67f1ebb49045153b1c3e6b3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f83adbbdb0062f67f1ebb49045153b1c3e6b3d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c006911de91ca9e23d7d2df069499c768d215eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c006911de91ca9e23d7d2df069499c768d215eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c006911de91ca9e23d7d2df069499c768d215eac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c006911de91ca9e23d7d2df069499c768d215eac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58e6cc32c4e36032701e3bc5caa136a35231b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58e6cc32c4e36032701e3bc5caa136a35231b5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58e6cc32c4e36032701e3bc5caa136a35231b5d"}], "stats": {"total": 61, "additions": 50, "deletions": 11}, "files": [{"sha": "a7babd25be41c7bc5cce5a39708a2cd18cdb1e3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c006911de91ca9e23d7d2df069499c768d215eac", "patch": "@@ -1,5 +1,13 @@\n 2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/93122\n+\t* config/rs6000/rs6000-logue.c\n+\t(rs6000_emit_probe_stack_range_stack_clash): Always use gen_add3_insn,\n+\tif it fails, move rs into end_addr and retry.  Add\n+\tREG_FRAME_RELATED_EXPR note whenever it returns more than one insn or\n+\tthe insn pattern doesn't describe well what exactly happens to\n+\tdwarf2cfi.c.\n+\n \tPR target/93594\n \t* config/i386/predicates.md (avx_identity_operand): Remove.\n \t* config/i386/sse.md (*avx_vec_concat<mode>_1): Remove."}, {"sha": "fecc3e6f780f9d709e326730549f7f04d4abbbc0", "filename": "gcc/config/rs6000/rs6000-logue.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c?ref=c006911de91ca9e23d7d2df069499c768d215eac", "patch": "@@ -1604,20 +1604,34 @@ rs6000_emit_probe_stack_range_stack_clash (HOST_WIDE_INT orig_size,\n       rtx end_addr\n \t= copy_reg ? gen_rtx_REG (Pmode, 0) : gen_rtx_REG (Pmode, 12);\n       rtx rs = GEN_INT (-rounded_size);\n-      rtx_insn *insn;\n-      if (add_operand (rs, Pmode))\n-\tinsn = emit_insn (gen_add3_insn (end_addr, stack_pointer_rtx, rs));\n+      rtx_insn *insn = gen_add3_insn (end_addr, stack_pointer_rtx, rs);\n+      if (insn == NULL)\n+\t{\n+\t  emit_move_insn (end_addr, rs);\n+\t  insn = gen_add3_insn (end_addr, end_addr, stack_pointer_rtx);\n+\t  gcc_assert (insn);\n+\t}\n+      bool add_note = false;\n+      if (!NONJUMP_INSN_P (insn) || NEXT_INSN (insn))\n+\tadd_note = true;\n       else\n \t{\n-\t  emit_move_insn (end_addr, GEN_INT (-rounded_size));\n-\t  insn = emit_insn (gen_add3_insn (end_addr, end_addr,\n-\t\t\t\t\t   stack_pointer_rtx));\n-\t  /* Describe the effect of INSN to the CFI engine.  */\n-\t  add_reg_note (insn, REG_FRAME_RELATED_EXPR,\n-\t\t\tgen_rtx_SET (end_addr,\n-\t\t\t\t     gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\t   rs)));\n+\t  rtx set = single_set (insn);\n+\t  if (set == NULL_RTX\n+\t      || SET_DEST (set) != end_addr\n+\t      || GET_CODE (SET_SRC (set)) != PLUS\n+\t      || XEXP (SET_SRC (set), 0) != stack_pointer_rtx\n+\t      || XEXP (SET_SRC (set), 1) != rs)\n+\t    add_note = true;\n \t}\n+      insn = emit_insn (insn);\n+      /* Describe the effect of INSN to the CFI engine, unless it\n+\t is a single insn that describes it itself.  */\n+      if (add_note)\n+\tadd_reg_note (insn, REG_FRAME_RELATED_EXPR,\n+\t\t      gen_rtx_SET (end_addr,\n+\t\t\t\t   gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n+\t\t\t\t\t\t rs)));\n       RTX_FRAME_RELATED_P (insn) = 1;\n \n       /* Emit the loop.  */"}, {"sha": "0c21d75dc1663957e63d9be1beafc5c1bfcd103f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c006911de91ca9e23d7d2df069499c768d215eac", "patch": "@@ -1,3 +1,8 @@\n+2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93122\n+\t* gcc.target/powerpc/pr93122.c: New test.\n+\n 2020-02-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/89404"}, {"sha": "158e6788edb1a1e4b93e96714d8841d44c2fc2e9", "filename": "gcc/testsuite/gcc.target/powerpc/pr93122.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c006911de91ca9e23d7d2df069499c768d215eac/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93122.c?ref=c006911de91ca9e23d7d2df069499c768d215eac", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/93122 */\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-fstack-clash-protection -mprefixed-addr -mfuture\" } */\n+\n+void bar (char *);\n+\n+void\n+foo (void)\n+{\n+  char s[4294967296];\n+  bar (s);\n+}"}]}