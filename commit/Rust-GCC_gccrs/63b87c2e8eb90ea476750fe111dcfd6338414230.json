{"sha": "63b87c2e8eb90ea476750fe111dcfd6338414230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiODdjMmU4ZWI5MGVhNDc2NzUwZmUxMTFkY2ZkNjMzODQxNDIzMA==", "commit": {"author": {"name": "Christian Cornelssen", "email": "ccorn@cs.tu-berlin.de", "date": "2003-01-31T19:35:22Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-01-31T19:35:22Z"}, "message": "configure.in: Adjust command to source config-ml.in to account for changes to the...\n\n2003-01-31  Christian Cornelssen  <ccorn@cs.tu-berlin.de>,\n            Andreas Schwab  <schwab@suse.de>\n\n        * configure.in: Adjust command to source config-ml.in to account\n        for changes to the libffi_basedir definition.\n        (libffi_basedir): Remove ${srcdir} from value and include trailing\n        slash if nonempty.\n\n        * configure: Regenerate.\n\nCo-Authored-By: Andreas Schwab <schwab@suse.de>\n\nFrom-SVN: r62193", "tree": {"sha": "ba570e6c44eaf9923a8ee9720c3cbfa907dfa820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba570e6c44eaf9923a8ee9720c3cbfa907dfa820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63b87c2e8eb90ea476750fe111dcfd6338414230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b87c2e8eb90ea476750fe111dcfd6338414230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b87c2e8eb90ea476750fe111dcfd6338414230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b87c2e8eb90ea476750fe111dcfd6338414230/comments", "author": null, "committer": null, "parents": [{"sha": "aba4e92ee15c81f59fe282a6dc019afb96efde37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aba4e92ee15c81f59fe282a6dc019afb96efde37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aba4e92ee15c81f59fe282a6dc019afb96efde37"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "6d1157193ef7c3e012d0f969d8ec1cbf8ade53d2", "filename": "libffi/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=63b87c2e8eb90ea476750fe111dcfd6338414230", "patch": "@@ -1,3 +1,13 @@\n+2003-01-31  Christian Cornelssen  <ccorn@cs.tu-berlin.de>,\n+\t    Andreas Schwab  <schwab@suse.de>\n+\n+        * configure.in: Adjust command to source config-ml.in to account\n+\tfor changes to the libffi_basedir definition.\n+\t(libffi_basedir): Remove ${srcdir} from value and include trailing\n+\tslash if nonempty.\n+\t\n+        * configure: Regenerate.\n+\n 2003-01-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* src/powerpc/ppc_closure.S: Recode to fit shared libs."}, {"sha": "7732150c7f3f96cbecd8226398b4704338c64f67", "filename": "libffi/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=63b87c2e8eb90ea476750fe111dcfd6338414230", "patch": "@@ -633,16 +633,16 @@ fi\n \n if test \"${srcdir}\" = \".\"; then\n   if test \"${with_target_subdir}\" != \".\"; then\n-    libffi_basedir=\"${srcdir}/${with_multisrctop}..\"\n+    libffi_basedir=\"${with_multisrctop}..\"\n   else\n-    libffi_basedir=\"${srcdir}/${with_multisrctop}\"\n+    libffi_basedir=\"${with_multisrctop}\"\n   fi\n else\n-  libffi_basedir=\"${srcdir}\"\n+  libffi_basedir=\n fi\n \n ac_aux_dir=\n-for ac_dir in ${libffi_basedir}/.. $srcdir/${libffi_basedir}/..; do\n+for ac_dir in ${libffi_basedir}.. $srcdir/${libffi_basedir}..; do\n   if test -f $ac_dir/install-sh; then\n     ac_aux_dir=$ac_dir\n     ac_install_sh=\"$ac_aux_dir/install-sh -c\"\n@@ -654,7 +654,7 @@ for ac_dir in ${libffi_basedir}/.. $srcdir/${libffi_basedir}/..; do\n   fi\n done\n if test -z \"$ac_aux_dir\"; then\n-  { echo \"configure: error: can not find install-sh or install.sh in ${libffi_basedir}/.. $srcdir/${libffi_basedir}/..\" 1>&2; exit 1; }\n+  { echo \"configure: error: can not find install-sh or install.sh in ${libffi_basedir}.. $srcdir/${libffi_basedir}..\" 1>&2; exit 1; }\n fi\n ac_config_guess=$ac_aux_dir/config.guess\n ac_config_sub=$ac_aux_dir/config.sub\n@@ -4094,7 +4094,7 @@ test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n \n if test -n \"$CONFIG_FILES\"; then\n    LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-   ac_file=Makefile . ${libffi_basedir}/../config-ml.in\n+   ac_file=Makefile . ${srcdir}/${libffi_basedir}/../config-ml.in\n fi\n \n exit 0"}, {"sha": "b79c09037d1663310606a32d1d3fba86d44c89f3", "filename": "libffi/configure.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b87c2e8eb90ea476750fe111dcfd6338414230/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=63b87c2e8eb90ea476750fe111dcfd6338414230", "patch": "@@ -22,15 +22,15 @@ dnl --with-target-subdir, --with-multisrctop, --with-multisubdir\n \n if test \"${srcdir}\" = \".\"; then\n   if test \"${with_target_subdir}\" != \".\"; then\n-    libffi_basedir=\"${srcdir}/${with_multisrctop}..\"\n+    libffi_basedir=\"${with_multisrctop}..\"\n   else\n-    libffi_basedir=\"${srcdir}/${with_multisrctop}\"\n+    libffi_basedir=\"${with_multisrctop}\"\n   fi\n else\n-  libffi_basedir=\"${srcdir}\"\n+  libffi_basedir=\n fi\n AC_SUBST(libffi_basedir)\n-AC_CONFIG_AUX_DIR(${libffi_basedir}/..)\n+AC_CONFIG_AUX_DIR(${libffi_basedir}..)\n \n AC_CANONICAL_HOST\n \n@@ -186,7 +186,7 @@ AC_OUTPUT(include/Makefile include/ffi.h Makefile,\n [\n if test -n \"$CONFIG_FILES\"; then\n    LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-   ac_file=Makefile . ${libffi_basedir}/../config-ml.in\n+   ac_file=Makefile . ${srcdir}/${libffi_basedir}/../config-ml.in\n fi\n ],\n srcdir=${srcdir}"}]}