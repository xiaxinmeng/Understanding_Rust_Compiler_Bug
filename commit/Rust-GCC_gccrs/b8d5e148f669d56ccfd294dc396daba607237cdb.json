{"sha": "b8d5e148f669d56ccfd294dc396daba607237cdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhkNWUxNDhmNjY5ZDU2Y2NmZDI5NGRjMzk2ZGFiYTYwNzIzN2NkYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-09T16:03:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-09T16:03:25Z"}, "message": "Allow inner-loop reductions with variable-length vectors\n\nWhile working on PR 86871, I noticed we were being overly restrictive\nwhen handling variable-length vectors.  For:\n\n  for (i : ...)\n    {\n      res = ...;\n      for (j : ...)\n        res op= ...;\n      a[i] = res;\n    }\n\nwe don't need a reduction operation (although we do for double\nreductions like:\n\n  res = ...;\n  for (i : ...)\n    for (j : ...)\n      res op= ...;\n  a[i] = res;\n\nwhich must still be rejected).\n\n2018-08-08  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-loop.c (vectorizable_reduction): Allow inner-loop\n\treductions for variable-length vectors.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/reduc_8.c: New test.\n\nFrom-SVN: r263451", "tree": {"sha": "30024b7111392033a7f7ca3969997417773fc6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30024b7111392033a7f7ca3969997417773fc6fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8d5e148f669d56ccfd294dc396daba607237cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d5e148f669d56ccfd294dc396daba607237cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d5e148f669d56ccfd294dc396daba607237cdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d5e148f669d56ccfd294dc396daba607237cdb/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56b61d7fc4f38c1a3fd51bf3315b0338513a2d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b61d7fc4f38c1a3fd51bf3315b0338513a2d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b61d7fc4f38c1a3fd51bf3315b0338513a2d2d"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "839dfc3c2c2dd349cd450758f4372c892a80e09a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8d5e148f669d56ccfd294dc396daba607237cdb", "patch": "@@ -1,3 +1,8 @@\n+2018-08-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-loop.c (vectorizable_reduction): Allow inner-loop\n+\treductions for variable-length vectors.\n+\n 2018-08-09  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR other/84889"}, {"sha": "8ea8530243dc71334d5ed6078dc669ff423e8476", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8d5e148f669d56ccfd294dc396daba607237cdb", "patch": "@@ -1,3 +1,7 @@\n+2018-08-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/reduc_8.c: New test.\n+\n 2018-08-09  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR other/84889"}, {"sha": "3913b8848c0b82c74d90b9d611b0680f49f98a4a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/reduc_8.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Freduc_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Freduc_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Freduc_8.c?ref=b8d5e148f669d56ccfd294dc396daba607237cdb", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+\n+int\n+reduc (int *restrict a, int *restrict b, int *restrict c)\n+{\n+  for (int i = 0; i < 100; ++i)\n+    {\n+      int res = 0;\n+      for (int j = 0; j < 100; ++j)\n+\tif (b[i + j] != 0)\n+\t  res = c[i + j];\n+      a[i] = res;\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tcmpne\\tp[0-9]+\\.s, } 1 } } */\n+/* We ought to use the CMPNE result for the SEL too.  */\n+/* { dg-final { scan-assembler-not {\\tcmpeq\\tp[0-9]+\\.s, } { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tsel\\tz[0-9]+\\.s, } 1 } } */"}, {"sha": "c167aec326e827e46fdd80b37678ed76b35605f7", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d5e148f669d56ccfd294dc396daba607237cdb/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b8d5e148f669d56ccfd294dc396daba607237cdb", "patch": "@@ -6714,6 +6714,7 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n     }\n \n   if (reduction_type != EXTRACT_LAST_REDUCTION\n+      && (!nested_cycle || double_reduc)\n       && reduc_fn == IFN_LAST\n       && !nunits_out.is_constant ())\n     {"}]}