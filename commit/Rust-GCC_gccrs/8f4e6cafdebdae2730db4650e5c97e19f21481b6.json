{"sha": "8f4e6cafdebdae2730db4650e5c97e19f21481b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0ZTZjYWZkZWJkYWUyNzMwZGI0NjUwZTVjOTdlMTlmMjE0ODFiNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-25T17:43:58Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-25T17:43:58Z"}, "message": "re PR rtl-optimization/10315 ([powerpc] ICE: in extract_insn, at recog.c:2175)\n\n        PR opt/10315\n        * config/rs6000/rs6000.c (rs6000_emit_move): Only elide proper\n        checks during reload; use validize_mem instead of adjust_address.\n\nFrom-SVN: r66071", "tree": {"sha": "8945e69cf52d725d790b6183b34adb0155c86999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8945e69cf52d725d790b6183b34adb0155c86999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f4e6cafdebdae2730db4650e5c97e19f21481b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f4e6cafdebdae2730db4650e5c97e19f21481b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f4e6cafdebdae2730db4650e5c97e19f21481b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f4e6cafdebdae2730db4650e5c97e19f21481b6/comments", "author": null, "committer": null, "parents": [{"sha": "bb751e4780148937c6c35162519be89ec834d357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb751e4780148937c6c35162519be89ec834d357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb751e4780148937c6c35162519be89ec834d357"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "2c378a824be3310bbdbf14b74579e83531926708", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f4e6cafdebdae2730db4650e5c97e19f21481b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f4e6cafdebdae2730db4650e5c97e19f21481b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f4e6cafdebdae2730db4650e5c97e19f21481b6", "patch": "@@ -1,3 +1,9 @@\n+2003-04-25  Richard  Henderson  <rth@redhat.com>\n+\n+        PR opt/10315 \n+        * config/rs6000/rs6000.c (rs6000_emit_move): Only elide proper\n+        checks during reload; use validize_mem instead of adjust_address.\n+\n 2003-04-26  Ben Elliston  <bje@wasabisystems.com>\n \n \t* config/arm/arm.c (arm_adjust_cost): Correct logic that tests the"}, {"sha": "66e6e5205cf46b144fbb85a5eda05ddc00baa658", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f4e6cafdebdae2730db4650e5c97e19f21481b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f4e6cafdebdae2730db4650e5c97e19f21481b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8f4e6cafdebdae2730db4650e5c97e19f21481b6", "patch": "@@ -2851,16 +2851,15 @@ rs6000_emit_move (dest, source, mode)\n \t}\n     }\n \n-  /* Handle the case where reload calls us with an invalid address;\n-     and the case of CONSTANT_P_RTX.  */\n-  if (!ALTIVEC_VECTOR_MODE (mode)\n+  /* Handle the case where reload calls us with an invalid address.  */\n+  if (reload_in_progress && mode == Pmode\n       && (! general_operand (operands[1], mode)\n-\t  || ! nonimmediate_operand (operands[0], mode)\n-\t  || GET_CODE (operands[1]) == CONSTANT_P_RTX))\n-    {\n-      emit_insn (gen_rtx_SET (VOIDmode, operands[0], operands[1]));\n-      return;\n-    }\n+\t  || ! nonimmediate_operand (operands[0], mode)))\n+    goto emit_set;\n+\n+  /* Handle the case of CONSTANT_P_RTX.  */\n+  if (GET_CODE (operands[1]) == CONSTANT_P_RTX)\n+    goto emit_set;\n   \n   /* FIXME:  In the long term, this switch statement should go away\n      and be replaced by a sequence of tests based on things like\n@@ -3088,13 +3087,11 @@ rs6000_emit_move (dest, source, mode)\n   /* Above, we may have called force_const_mem which may have returned\n      an invalid address.  If we can, fix this up; otherwise, reload will\n      have to deal with it.  */\n-  if (GET_CODE (operands[1]) == MEM\n-      && ! memory_address_p (mode, XEXP (operands[1], 0))\n-      && ! reload_in_progress)\n-    operands[1] = adjust_address (operands[1], mode, 0);\n+  if (GET_CODE (operands[1]) == MEM && ! reload_in_progress)\n+    operands[1] = validize_mem (operands[1]);\n \n+ emit_set:\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], operands[1]));\n-  return;\n }\n \f\n /* Initialize a variable CUM of type CUMULATIVE_ARGS"}]}