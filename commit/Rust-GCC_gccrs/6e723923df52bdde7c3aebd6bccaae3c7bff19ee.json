{"sha": "6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3MjM5MjNkZjUyYmRkZTdjM2FlYmQ2YmNjYWFlM2M3YmZmMTllZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-07T10:01:49Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-07T10:01:49Z"}, "message": "[nvptx] Force vl32 if calling vector-partitionable routines\n\nWith PTX_MAX_VECTOR_LENGTH set to larger than PTX_WARP_SIZE, routines can be\ncalled from offloading regions with vector-size set to larger than warp size.\nOTOH, vector-partitionable routines assume warp-sized vector length.\n\nDetect if we're calling a vector-partitionable routine from an offloading\nregion, and if so, fall back to warp-sized vector length in that region.\n\n2019-01-07  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/85486\n\t* config/nvptx/nvptx.c (has_vector_partitionable_routine_calls_p): New\n\tfunction.\n\t(nvptx_goacc_validate_dims): Force vl32 if calling vector-partitionable\n\troutines.\n\nFrom-SVN: r267640", "tree": {"sha": "56290fe75d9fead37fbc9cb053d1e010cb3120f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56290fe75d9fead37fbc9cb053d1e010cb3120f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e723923df52bdde7c3aebd6bccaae3c7bff19ee/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d471bdec413c333f2067c0723c61ad045f3589e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d471bdec413c333f2067c0723c61ad045f3589e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d471bdec413c333f2067c0723c61ad045f3589e3"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "ae2e85cae6aca343827d2e7fbabadcd21e1d5d20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e723923df52bdde7c3aebd6bccaae3c7bff19ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e723923df52bdde7c3aebd6bccaae3c7bff19ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "patch": "@@ -1,3 +1,11 @@\n+2019-01-07  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/85486\n+\t* config/nvptx/nvptx.c (has_vector_partitionable_routine_calls_p): New\n+\tfunction.\n+\t(nvptx_goacc_validate_dims): Force vl32 if calling vector-partitionable\n+\troutines.\n+\n 2019-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (vec_extract<mode><ssehalfvecmodelower>): Use"}, {"sha": "7fdc285b6f8eba0c16c337a3619523be5d75aed1", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e723923df52bdde7c3aebd6bccaae3c7bff19ee/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e723923df52bdde7c3aebd6bccaae3c7bff19ee/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "patch": "@@ -59,6 +59,7 @@\n #include \"builtins.h\"\n #include \"omp-general.h\"\n #include \"omp-low.h\"\n+#include \"omp-offload.h\"\n #include \"gomp-constants.h\"\n #include \"dumpfile.h\"\n #include \"internal-fn.h\"\n@@ -5496,6 +5497,40 @@ nvptx_apply_dim_limits (int dims[])\n     dims[GOMP_DIM_VECTOR] = PTX_WARP_SIZE;\n }\n \n+/* Return true if FNDECL contains calls to vector-partitionable routines.  */\n+\n+static bool\n+has_vector_partitionable_routine_calls_p (tree fndecl)\n+{\n+  if (!fndecl)\n+    return false;\n+\n+  basic_block bb;\n+  FOR_EACH_BB_FN (bb, DECL_STRUCT_FUNCTION (fndecl))\n+    for (gimple_stmt_iterator i = gsi_start_bb (bb); !gsi_end_p (i);\n+\t gsi_next_nondebug (&i))\n+      {\n+\tgimple *stmt = gsi_stmt (i);\n+\tif (gimple_code (stmt) != GIMPLE_CALL)\n+\t  continue;\n+\n+\ttree callee = gimple_call_fndecl (stmt);\n+\tif (!callee)\n+\t  continue;\n+\n+\ttree attrs  = oacc_get_fn_attrib (callee);\n+\tif (attrs == NULL_TREE)\n+\t  return false;\n+\n+\tint partition_level = oacc_fn_attrib_level (attrs);\n+\tbool seq_routine_p = partition_level == GOMP_DIM_MAX;\n+\tif (!seq_routine_p)\n+\t  return true;\n+      }\n+\n+  return false;\n+}\n+\n /* As nvptx_goacc_validate_dims, but does not return bool to indicate whether\n    DIMS has changed.  */\n \n@@ -5611,6 +5646,16 @@ nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n     old_dims[i] = dims[i];\n \n   const char *vector_reason = NULL;\n+  if (offload_region_p && has_vector_partitionable_routine_calls_p (decl))\n+    {\n+      if (dims[GOMP_DIM_VECTOR] > PTX_WARP_SIZE)\n+\t{\n+\t  vector_reason = G_(\"using vector_length (%d) due to call to\"\n+\t\t\t     \" vector-partitionable routine, ignoring %d\");\n+\t  dims[GOMP_DIM_VECTOR] = PTX_WARP_SIZE;\n+\t}\n+    }\n+\n   if (dims[GOMP_DIM_VECTOR] == 0)\n     {\n       vector_reason = G_(\"using vector_length (%d), ignoring runtime setting\");"}]}