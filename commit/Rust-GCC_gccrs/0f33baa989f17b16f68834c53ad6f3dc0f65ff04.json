{"sha": "0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzM2JhYTk4OWYxN2IxNmY2ODgzNGM1M2FkNmYzZGMwZjY1ZmYwNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2013-02-06T08:53:32Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2013-02-06T08:53:32Z"}, "message": "re PR rtl-optimization/56131 (gcc.dg/pr56035.c ICEs gcc on sparc-linux)\n\n2013-02-06  Tom de Vries  <tom@codesourcery.com>\n\n\tPR rtl-optimization/56131\n\t* cfgrtl.c (delete_insn): Use NOTE_BASIC_BLOCK instead of BLOCK_FOR_INSN\n\tto get the bb of a NOTE_INSN_BASIC_BLOCK.  Handle the case that the bb\n\tof the label is NULL.  Add comment.\n\nFrom-SVN: r195784", "tree": {"sha": "ca54b3585d08d40b34f312f18036389003e459f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca54b3585d08d40b34f312f18036389003e459f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f33baa989f17b16f68834c53ad6f3dc0f65ff04/comments", "author": null, "committer": null, "parents": [{"sha": "c8ab2cfaff7352e54df917ace1ce91e9ccd82506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ab2cfaff7352e54df917ace1ce91e9ccd82506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ab2cfaff7352e54df917ace1ce91e9ccd82506"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "44e77f9986b8815f74a2a1a01b9fb94f107e7f09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f33baa989f17b16f68834c53ad6f3dc0f65ff04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f33baa989f17b16f68834c53ad6f3dc0f65ff04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "patch": "@@ -1,3 +1,10 @@\n+2013-02-06  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR rtl-optimization/56131\n+\t* cfgrtl.c (delete_insn): Use NOTE_BASIC_BLOCK instead of BLOCK_FOR_INSN\n+\tto get the bb of a NOTE_INSN_BASIC_BLOCK.  Handle the case that the bb\n+\tof the label is NULL.  Add comment.\n+\n 2013-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.h (struct tree_decl_with_vis): Remove thread_local field."}, {"sha": "c6ed44f8a7e7041bd8c3100f9095c42b394c121f", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f33baa989f17b16f68834c53ad6f3dc0f65ff04/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f33baa989f17b16f68834c53ad6f3dc0f65ff04/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=0f33baa989f17b16f68834c53ad6f3dc0f65ff04", "patch": "@@ -135,18 +135,24 @@ delete_insn (rtx insn)\n       if (! can_delete_label_p (insn))\n \t{\n \t  const char *name = LABEL_NAME (insn);\n-\t  basic_block bb = BLOCK_FOR_INSN (insn);\n+\t  basic_block bb, label_bb = BLOCK_FOR_INSN (insn);\n \t  rtx bb_note = NEXT_INSN (insn);\n \n \t  really_delete = false;\n \t  PUT_CODE (insn, NOTE);\n \t  NOTE_KIND (insn) = NOTE_INSN_DELETED_LABEL;\n \t  NOTE_DELETED_LABEL_NAME (insn) = name;\n \n-\t  if (bb_note != NULL_RTX && NOTE_INSN_BASIC_BLOCK_P (bb_note)\n-\t      && BLOCK_FOR_INSN (bb_note) == bb)\n+\t  /* If the note following the label starts a basic block, and the\n+\t     label is a member of the same basic block, interchange the two.\n+\t     If the label is not marked with a bb, assume it's the same bb.  */\n+\t  if (bb_note != NULL_RTX\n+\t      && NOTE_INSN_BASIC_BLOCK_P (bb_note)\n+\t      && (label_bb == NOTE_BASIC_BLOCK (bb_note)\n+\t\t  || label_bb == NULL))\n \t    {\n \t      reorder_insns_nobb (insn, insn, bb_note);\n+\t      bb = NOTE_BASIC_BLOCK (bb_note);\n \t      BB_HEAD (bb) = bb_note;\n \t      if (BB_END (bb) == bb_note)\n \t\tBB_END (bb) = insn;"}]}