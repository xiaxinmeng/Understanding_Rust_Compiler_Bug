{"sha": "51631875a2fa0af62ebda7484ac48368e1805dff", "node_id": "C_kwDOANBUbNoAKDUxNjMxODc1YTJmYTBhZjYyZWJkYTc0ODRhYzQ4MzY4ZTE4MDVkZmY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-23T21:55:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-23T22:48:33Z"}, "message": "libstdc++: Fix std::spanstream move assignment [PR104032]\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/104032\n\t* include/std/spanstream (basic_spanbuf(basic_spanbuf&&)): Use\n\tmem-initializer for _M_buf.\n\t(basic_spanbuf::Operator=(basic_spanbuf&&)): Fix ill-formed\n\tmember access.\n\t* testsuite/27_io/spanstream/2.cc: New test.", "tree": {"sha": "16d1b93a54834466479bd6a9c362ebb02f69eac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d1b93a54834466479bd6a9c362ebb02f69eac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51631875a2fa0af62ebda7484ac48368e1805dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51631875a2fa0af62ebda7484ac48368e1805dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51631875a2fa0af62ebda7484ac48368e1805dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51631875a2fa0af62ebda7484ac48368e1805dff/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "416b6fc7483b1b4daaab2dc25cc9a916178ba376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/416b6fc7483b1b4daaab2dc25cc9a916178ba376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/416b6fc7483b1b4daaab2dc25cc9a916178ba376"}], "stats": {"total": 128, "additions": 124, "deletions": 4}, "files": [{"sha": "000bda52a1ebc0205abdb7b5d8a0fb87e66e304b", "filename": "libstdc++-v3/include/std/spanstream", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51631875a2fa0af62ebda7484ac48368e1805dff/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspanstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51631875a2fa0af62ebda7484ac48368e1805dff/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspanstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspanstream?ref=51631875a2fa0af62ebda7484ac48368e1805dff", "patch": "@@ -75,18 +75,25 @@ template<typename _CharT, typename _Traits = char_traits<_CharT>>\n \n     basic_spanbuf(const basic_spanbuf&) = delete;\n \n-    /// Move constructor. In this implementation `rhs` is left unchanged.\n+    /** Move constructor.\n+     *\n+     * Transfers the buffer and pointers into the get and put areas from\n+     * `__rhs` to `*this`.\n+     *\n+     * In this implementation `rhs` is left unchanged,\n+     * but that is not guaranteed by the standard.\n+     */\n     basic_spanbuf(basic_spanbuf&& __rhs)\n-    : __streambuf_type(__rhs), _M_mode(__rhs._M_mode)\n-    { span(__rhs._M_buf); }\n+    : __streambuf_type(__rhs), _M_mode(__rhs._M_mode), _M_buf(__rhs._M_buf)\n+    { }\n \n     // [spanbuf.assign], assignment and swap\n     basic_spanbuf& operator=(const basic_spanbuf&) = delete;\n \n     basic_spanbuf&\n     operator=(basic_spanbuf&& __rhs)\n     {\n-      basic_spanbuf(std::move(__rhs))->swap(*this);\n+      basic_spanbuf(std::move(__rhs)).swap(*this);\n       return *this;\n     }\n "}, {"sha": "a13a50b0dcea32adc2d72e0826a735a38efb5db6", "filename": "libstdc++-v3/testsuite/27_io/spanstream/2.cc", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51631875a2fa0af62ebda7484ac48368e1805dff/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fspanstream%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51631875a2fa0af62ebda7484ac48368e1805dff/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fspanstream%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fspanstream%2F2.cc?ref=51631875a2fa0af62ebda7484ac48368e1805dff", "patch": "@@ -0,0 +1,113 @@\n+// { dg-options \"-std=gnu++23\" }\n+// { dg-do run { target c++23 } }\n+\n+#include <spanstream>\n+#include <testsuite_hooks.h>\n+\n+using std::ispanstream;\n+using std::ospanstream;\n+using std::span;\n+\n+void\n+test_move()\n+{\n+  char c;\n+  {\n+    const char str[] = \"chars\";\n+    std::ispanstream a(str);\n+    std::ispanstream b = std::move(a);\n+    VERIFY( b.span().data() == str && b.span().size() == 6 );\n+    VERIFY( b >> c );\n+    VERIFY( c == 'c' );\n+\n+    a = std::move(b);\n+    VERIFY( a.span().data() == str && a.span().size() == 6 );\n+    VERIFY( a >> c >> c );\n+    VERIFY( c == 'a' );\n+  }\n+\n+  {\n+    char buf[10] = {};\n+    std::ospanstream a(buf);\n+    std::ospanstream b = std::move(a);\n+    VERIFY( b << 'c' );\n+    VERIFY( buf[0] == 'c' );\n+    VERIFY( !std::char_traits<char>::compare(buf, \"c\", 2) );\n+\n+    a = std::move(b);\n+    VERIFY( a << 'h' << 'a' << \"rs\" );\n+    VERIFY( !std::char_traits<char>::compare(buf, \"chars\", 6) );\n+  }\n+\n+  {\n+    char buf[10] = {};\n+    std::spanstream a(buf);\n+    std::spanstream b = std::move(a);\n+    VERIFY( b.span().empty() );\n+    VERIFY( b << 'c' );\n+    VERIFY( buf[0] == 'c' );\n+    VERIFY( !std::char_traits<char>::compare(buf, \"c\", 2) );\n+    VERIFY( b.span().data() == buf && b.span().size() == 1 );\n+    VERIFY( b >> c );\n+    VERIFY( c == 'c' );\n+\n+    a = std::move(b);\n+    VERIFY( a.span().data() == buf && a.span().size() == 1 );\n+    VERIFY( a << 'h' << 'a' << \"rs\" );\n+    VERIFY( !std::char_traits<char>::compare(buf, \"chars\", 6) );\n+    VERIFY( a.span().data() == buf && a.span().size() == 5 );\n+  }\n+}\n+\n+void\n+test_swap()\n+{\n+  {\n+    const char str1[] = \"chars\";\n+    const char str2[] = \"STRING\";\n+    std::ispanstream a(str1);\n+    std::ispanstream b(str2);\n+    a.swap(b);\n+    VERIFY( a.span().data() == str2 && a.span().size() == 7 );\n+    VERIFY( b.span().data() == str1 && b.span().size() == 6 );\n+    char c;\n+    VERIFY( a >> c );\n+    VERIFY( c == 'S' );\n+    VERIFY( b >> c );\n+    VERIFY( c == 'c' );\n+\n+    swap(a, b);\n+    VERIFY( a.span().data() == str1 && a.span().size() == 6 );\n+    VERIFY( b.span().data() == str2 && b.span().size() == 7 );\n+    VERIFY( a >> c >> c );\n+    VERIFY( c == 'a' );\n+    VERIFY( b >> c >> c );\n+    VERIFY( c == 'R' );\n+  }\n+\n+  {\n+    char buf1[] = \"xxxxxxxxxxxxxxx\";\n+    char buf2[] = \"xxxxxxxxxxxxxxx\";\n+    std::ospanstream a(buf1);\n+    std::ospanstream b(buf2);\n+    a.swap(b);\n+    VERIFY( a << \"STR\" );\n+    VERIFY( !std::char_traits<char>::compare(buf2, \"STRx\", 4) );\n+    VERIFY( b << 'c' << 'h' );\n+    VERIFY( !std::char_traits<char>::compare(buf1, \"chx\", 3) );\n+\n+    swap(a, b);\n+    VERIFY( a.span().size() == 2 );\n+    VERIFY( b.span().size() == 3 );\n+    VERIFY( a << 'a' << \"rs\" );\n+    VERIFY( !std::char_traits<char>::compare(buf1, \"charsx\", 6) );\n+    VERIFY( b << \"IN\" << 'G' );\n+    VERIFY( !std::char_traits<char>::compare(buf2, \"STRINGx\", 7) );\n+  }\n+}\n+\n+int main()\n+{\n+  test_move();\n+  test_swap();\n+}"}]}