{"sha": "1e6734153b66968c2dd35dfaaba68ab6bcfde868", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2NzM0MTUzYjY2OTY4YzJkZDM1ZGZhYWJhNjhhYjZiY2ZkZTg2OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-30T12:52:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-30T12:52:38Z"}, "message": "re PR libstdc++/46718 ([c++0x] nullptr_t must be scalar)\n\n2010-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/46718\n\t* include/std/type_traits (__is_nullptr_t): Add.\n\t(is_scalar): Use the latter.\n\t* testsuite/20_util/is_scalar/value.cc: New.\n\t* testsuite/20_util/is_scalar/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_scalar/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n\tAdjust dg-error line numbers.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n\nFrom-SVN: r167294", "tree": {"sha": "a2c0217a08ff8f46000d2143a910bf8fc98e874d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2c0217a08ff8f46000d2143a910bf8fc98e874d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6734153b66968c2dd35dfaaba68ab6bcfde868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6734153b66968c2dd35dfaaba68ab6bcfde868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6734153b66968c2dd35dfaaba68ab6bcfde868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6734153b66968c2dd35dfaaba68ab6bcfde868/comments", "author": null, "committer": null, "parents": [{"sha": "7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c475d115929dfd4d1640e58fcffbb91a0f0bdad"}], "stats": {"total": 153, "additions": 147, "deletions": 6}, "files": [{"sha": "f72cb372c135d700112b33a6020b702adadffad5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -1,3 +1,18 @@\n+2010-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/46718\n+\t* include/std/type_traits (__is_nullptr_t): Add.\n+\t(is_scalar): Use the latter.\n+\t* testsuite/20_util/is_scalar/value.cc: New.\n+\t* testsuite/20_util/is_scalar/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_scalar/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n+\tAdjust dg-error line numbers.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n+\n 2010-11-28  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/46689"}, {"sha": "8f5b5c993e27eaaecc5bb9d2e1d2a26c4133295e", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -250,6 +250,18 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     struct is_function<_Res(_ArgTypes......) const volatile>\n     : public true_type { };\n \n+  template<typename>\n+    struct __is_nullptr_t_helper\n+    : public false_type { };\n+  _DEFINE_SPEC(0, __is_nullptr_t_helper, std::nullptr_t, true)\n+\n+  // __is_nullptr_t (extension).\n+  template<typename _Tp>\n+    struct __is_nullptr_t\n+    : public integral_constant<bool, (__is_nullptr_t_helper<typename\n+\t\t\t\t      remove_cv<_Tp>::type>::value)>\n+    { };\n+\n   // composite type traits.\n   \n   /// is_arithmetic\n@@ -284,7 +296,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     : public integral_constant<bool, (is_arithmetic<_Tp>::value\n \t\t\t\t      || is_enum<_Tp>::value\n \t\t\t\t      || is_pointer<_Tp>::value\n-\t\t\t\t      || is_member_pointer<_Tp>::value)>\n+\t\t\t\t      || is_member_pointer<_Tp>::value\n+\t\t\t\t      || __is_nullptr_t<_Tp>::value)>\n     { };\n \n   /// is_compound"}, {"sha": "32f2d23f9add10cbc2bea90b136515b37ac2efa1", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1119 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1132 }\n \n #include <utility>\n "}, {"sha": "1ff9ddc74b21f83dc7ae0f0d0e8d91f4dd190016", "filename": "libstdc++-v3/testsuite/20_util/is_scalar/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Fexplicit_instantiation.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_scalar<test_type>;\n+}"}, {"sha": "b2d0dd17c48ae803104c233fff6ed3a2dd2308a9", "filename": "libstdc++-v3/testsuite/20_util/is_scalar/requirements/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Frequirements%2Ftypedefs.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -0,0 +1,36 @@\n+// 2010-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_scalar<int>                 test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "7d6521ed6f4e16e090e10cb6878f5a085afc86c8", "filename": "libstdc++-v3/testsuite/20_util/is_scalar/value.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_scalar%2Fvalue.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2010-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::is_scalar;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<is_scalar, int>(true)) );\n+  VERIFY( (test_category<is_scalar, float>(true)) );\n+  VERIFY( (test_category<is_scalar, EnumType>(true)) );\n+  VERIFY( (test_category<is_scalar, int*>(true)) );\n+  VERIFY( (test_category<is_scalar, int(*)(int)>(true)) );\n+  VERIFY( (test_category<is_scalar, int (ClassType::*)>(true)) );\n+  VERIFY( (test_category<is_scalar, int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_category<is_scalar, std::nullptr_t>(true)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<is_scalar, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "205da120f9087ca33cc8e74944c546c19e4efa87", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1082 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1046 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1095 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1059 }"}, {"sha": "c6e00075178bccd046704a8b90326378f505aed4", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6734153b66968c2dd35dfaaba68ab6bcfde868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=1e6734153b66968c2dd35dfaaba68ab6bcfde868", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1005 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 969 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1018 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 982 }"}]}