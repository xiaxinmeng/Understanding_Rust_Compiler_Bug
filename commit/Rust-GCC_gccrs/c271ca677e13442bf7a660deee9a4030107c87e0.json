{"sha": "c271ca677e13442bf7a660deee9a4030107c87e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI3MWNhNjc3ZTEzNDQyYmY3YTY2MGRlZWU5YTQwMzAxMDdjODdlMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-02T10:04:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-02T10:04:14Z"}, "message": "re PR target/64113 (Gcc on Alpha: Error: No lda !gpdisp!282 was found)\n\n\tPR target/64113\n\t* config/alpha/alpha.md (call_value_osf_tlsgd): Do not split insn\n\tusing post-reload splitter.  Use peephole2 pass instead.\n\t(call_value_osf_tlsldm): Ditto.\n\t(TLS_CALL): New int iterator.\n\t(tls): New int attribute.\n\t(call_value_osf_<tls>): Merge insn pattern from call_value_osf_tlsgd\n\tand call_value_tlsldm using TLS_CALL int iterator.\n\nFrom-SVN: r218264", "tree": {"sha": "810aed1c6e3b5d12aedc50aff3ac03f08cf261e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/810aed1c6e3b5d12aedc50aff3ac03f08cf261e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c271ca677e13442bf7a660deee9a4030107c87e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c271ca677e13442bf7a660deee9a4030107c87e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c271ca677e13442bf7a660deee9a4030107c87e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c271ca677e13442bf7a660deee9a4030107c87e0/comments", "author": null, "committer": null, "parents": [{"sha": "1c9b0448575999937e22d02d77e5f94300679f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9b0448575999937e22d02d77e5f94300679f89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c9b0448575999937e22d02d77e5f94300679f89"}], "stats": {"total": 78, "additions": 54, "deletions": 24}, "files": [{"sha": "139881a66feeb0c7f8019ab9431b15afbdcc9508", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c271ca677e13442bf7a660deee9a4030107c87e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c271ca677e13442bf7a660deee9a4030107c87e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c271ca677e13442bf7a660deee9a4030107c87e0", "patch": "@@ -1,5 +1,16 @@\n+2014-12-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/64113\n+\t* config/alpha/alpha.md (call_value_osf_tlsgd): Do not split insn\n+\tusing post-reload splitter.  Use peephole2 pass instead.\n+\t(call_value_osf_tlsldm): Ditto.\n+\t(TLS_CALL): New int iterator.\n+\t(tls): New int attribute.\n+\t(call_value_osf_<tls>): Merge insn pattern from call_value_osf_tlsgd\n+\tand call_value_tlsldm using TLS_CALL int iterator.\n+\n 2014-12-02  Richard Biener  <rguenther@suse.de>\n-\tPrathamesh Kulkarni  <bilbotheelffriend@gmail.com>\n+\t    Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>\n \n \t* genmatch.c: Include hash-set.h.\n \t(fatal_at): Add source_location overload.\n@@ -45,7 +56,7 @@\n 2014-12-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/59278\n-\tcombine (reg_dead_at_p): Consider REG_UNUSED notes.\n+\t* combine (reg_dead_at_p): Consider REG_UNUSED notes.\n \n 2014-12-01  Segher Boessenkool  <segher@kernel.crashing.org>\n "}, {"sha": "f352928b10325520440047dc292cf1074bf25be6", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 41, "deletions": 22, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c271ca677e13442bf7a660deee9a4030107c87e0/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c271ca677e13442bf7a660deee9a4030107c87e0/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=c271ca677e13442bf7a660deee9a4030107c87e0", "patch": "@@ -5984,47 +5984,67 @@\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"*,*,8\")])\n \n-(define_insn_and_split \"call_value_osf_tlsgd\"\n+(define_int_iterator TLS_CALL\n+\t[UNSPEC_TLSGD_CALL\n+\t UNSPEC_TLSLDM_CALL])\n+\n+(define_int_attr tls\n+\t[(UNSPEC_TLSGD_CALL \"tlsgd\")\n+\t (UNSPEC_TLSLDM_CALL \"tlsldm\")])\n+\n+(define_insn \"call_value_osf_<tls>\"\n   [(set (match_operand 0)\n \t(call (mem:DI (match_operand:DI 1 \"symbolic_operand\"))\n \t      (const_int 0)))\n-   (unspec [(match_operand:DI 2 \"const_int_operand\")] UNSPEC_TLSGD_CALL)\n+   (unspec [(match_operand:DI 2 \"const_int_operand\")] TLS_CALL)\n    (use (reg:DI 29))\n    (clobber (reg:DI 26))]\n   \"HAVE_AS_TLS\"\n-  \"#\"\n-  \"&& reload_completed\"\n+  \"ldq $27,%1($29)\\t\\t!literal!%2\\;jsr $26,($27),%1\\t\\t!lituse_<tls>!%2\\;ldah $29,0($26)\\t\\t!gpdisp!%*\\;lda $29,0($29)\\t\\t!gpdisp!%*\"\n+  [(set_attr \"type\" \"jsr\")\n+   (set_attr \"length\" \"16\")])\n+\n+;; We must use peep2 instead of a split because we need accurate life\n+;; information for $gp.\n+(define_peephole2\n+  [(parallel\n+    [(set (match_operand 0)\n+\t  (call (mem:DI (match_operand:DI 1 \"symbolic_operand\"))\n+\t\t(const_int 0)))\n+     (unspec [(match_operand:DI 2 \"const_int_operand\")] TLS_CALL)\n+     (use (reg:DI 29))\n+     (clobber (reg:DI 26))])]\n+  \"HAVE_AS_TLS && reload_completed\n+   && peep2_regno_dead_p (1, 29)\"\n   [(set (match_dup 3)\n \t(unspec:DI [(match_dup 5)\n \t\t    (match_dup 1)\n \t\t    (match_dup 2)] UNSPEC_LITERAL))\n    (parallel [(set (match_dup 0)\n \t\t   (call (mem:DI (match_dup 3))\n \t\t\t (const_int 0)))\n-\t      (set (match_dup 5)\n-\t\t   (unspec:DI [(match_dup 5) (match_dup 4)] UNSPEC_LDGP1))\n+\t      (use (match_dup 5))\n \t      (use (match_dup 1))\n-\t      (use (unspec [(match_dup 2)] UNSPEC_TLSGD_CALL))\n+\t      (use (unspec [(match_dup 2)] TLS_CALL))\n \t      (clobber (reg:DI 26))])\n    (set (match_dup 5)\n \t(unspec:DI [(match_dup 5) (match_dup 4)] UNSPEC_LDGP2))]\n {\n   operands[3] = gen_rtx_REG (Pmode, 27);\n   operands[4] = GEN_INT (alpha_next_sequence_number++);\n   operands[5] = pic_offset_table_rtx;\n-}\n-  [(set_attr \"type\" \"multi\")])\n+})\n \n-(define_insn_and_split \"call_value_osf_tlsldm\"\n-  [(set (match_operand 0)\n-\t(call (mem:DI (match_operand:DI 1 \"symbolic_operand\"))\n-\t      (const_int 0)))\n-   (unspec [(match_operand:DI 2 \"const_int_operand\")] UNSPEC_TLSLDM_CALL)\n-   (use (reg:DI 29))\n-   (clobber (reg:DI 26))]\n-  \"HAVE_AS_TLS\"\n-  \"#\"\n-  \"&& reload_completed\"\n+(define_peephole2\n+  [(parallel\n+    [(set (match_operand 0)\n+\t  (call (mem:DI (match_operand:DI 1 \"symbolic_operand\"))\n+\t\t(const_int 0)))\n+     (unspec [(match_operand:DI 2 \"const_int_operand\")] TLS_CALL)\n+     (use (reg:DI 29))\n+     (clobber (reg:DI 26))])]\n+  \"HAVE_AS_TLS && reload_completed\n+   && !peep2_regno_dead_p (1, 29)\"\n   [(set (match_dup 3)\n \t(unspec:DI [(match_dup 5)\n \t\t    (match_dup 1)\n@@ -6035,16 +6055,15 @@\n \t      (set (match_dup 5)\n \t\t   (unspec:DI [(match_dup 5) (match_dup 4)] UNSPEC_LDGP1))\n \t      (use (match_dup 1))\n-\t      (use (unspec [(match_dup 2)] UNSPEC_TLSLDM_CALL))\n+\t      (use (unspec [(match_dup 2)] TLS_CALL))\n \t      (clobber (reg:DI 26))])\n    (set (match_dup 5)\n \t(unspec:DI [(match_dup 5) (match_dup 4)] UNSPEC_LDGP2))]\n {\n   operands[3] = gen_rtx_REG (Pmode, 27);\n   operands[4] = GEN_INT (alpha_next_sequence_number++);\n   operands[5] = pic_offset_table_rtx;\n-}\n-  [(set_attr \"type\" \"multi\")])\n+})\n \n (define_insn \"*call_value_osf_1\"\n   [(set (match_operand 0)"}]}