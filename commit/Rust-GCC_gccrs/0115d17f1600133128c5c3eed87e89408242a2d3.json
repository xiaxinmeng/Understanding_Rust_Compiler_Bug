{"sha": "0115d17f1600133128c5c3eed87e89408242a2d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDExNWQxN2YxNjAwMTMzMTI4YzVjM2VlZDg3ZTg5NDA4MjQyYTJkMw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2011-11-21T00:41:12Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2011-11-21T00:41:12Z"}, "message": "static-object.mk (c_flags-$o): Save c_flags.\n\n\t* static-object.mk (c_flags-$o): Save c_flags.\n\t($(base)$(objext)): Use it.\n\nFrom-SVN: r181544", "tree": {"sha": "fae1d7eb79926b1754a393bb15196f0806e31376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae1d7eb79926b1754a393bb15196f0806e31376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0115d17f1600133128c5c3eed87e89408242a2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0115d17f1600133128c5c3eed87e89408242a2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0115d17f1600133128c5c3eed87e89408242a2d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0115d17f1600133128c5c3eed87e89408242a2d3/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0a49ff5a37a8f7de24ceb744c30a34cda1c9681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a49ff5a37a8f7de24ceb744c30a34cda1c9681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a49ff5a37a8f7de24ceb744c30a34cda1c9681"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "dbe5f06645d0c799774dba405587ab3841ef0bdd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0115d17f1600133128c5c3eed87e89408242a2d3/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0115d17f1600133128c5c3eed87e89408242a2d3/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0115d17f1600133128c5c3eed87e89408242a2d3", "patch": "@@ -1,3 +1,8 @@\n+2011-11-20  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* static-object.mk (c_flags-$o): Save c_flags.\n+\t($(base)$(objext)): Use it.\n+\n 2011-11-18  Steve Ellcey  <sje@cup.hp.com>\n \n \t* Makefile.in (c_flags): Set to -fno-exceptions to build libunwind."}, {"sha": "930f009cd4219538380b846bc1593fd9292ad954", "filename": "libgcc/static-object.mk", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0115d17f1600133128c5c3eed87e89408242a2d3/libgcc%2Fstatic-object.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0115d17f1600133128c5c3eed87e89408242a2d3/libgcc%2Fstatic-object.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fstatic-object.mk?ref=0115d17f1600133128c5c3eed87e89408242a2d3", "patch": "@@ -6,10 +6,15 @@ iter-items := $(filter-out $o,$(iter-items))\n \n base := $(basename $(notdir $o))\n \n+# Copy c_flags to a rule-specific copy and use the copy, to avoid the\n+# following rules being affected by later changes to c_flags in the\n+# including file.\n+c_flags-$o := $(c_flags)\n+\n ifeq ($(suffix $o),.c)\n \n $(base)$(objext): $o\n-\t$(gcc_compile) $(c_flags) -c $< $(vis_hide)\n+\t$(gcc_compile) $(c_flags-$<) -c $< $(vis_hide)\n \n else\n "}]}