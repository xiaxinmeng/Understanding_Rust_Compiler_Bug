{"sha": "e84296c66c1d63552db6dd6571edd92619a00e53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0Mjk2YzY2YzFkNjM1NTJkYjZkZDY1NzFlZGQ5MjYxOWEwMGU1Mw==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2007-11-16T23:24:53Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-11-16T23:24:53Z"}, "message": "sysv.S: Load correct cr to compare if we have long double.\n\n2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/powerpc/sysv.S: Load correct cr to compare if we have long double.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/ffi.c: Add a comment to show which part goes into cr6.\n\t* testsuite/libffi.call/return_ldl.c: New test.\n\nFrom-SVN: r130247", "tree": {"sha": "bc0fd671d12c5cacb37413d21af623ab8d556f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0fd671d12c5cacb37413d21af623ab8d556f19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e84296c66c1d63552db6dd6571edd92619a00e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84296c66c1d63552db6dd6571edd92619a00e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84296c66c1d63552db6dd6571edd92619a00e53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84296c66c1d63552db6dd6571edd92619a00e53/comments", "author": null, "committer": null, "parents": [{"sha": "f5fd0cf12def6df8ac3c6a95e886c73debc21677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5fd0cf12def6df8ac3c6a95e886c73debc21677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5fd0cf12def6df8ac3c6a95e886c73debc21677"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "8aaef6e581bcf1a3847eaa7b80c1084f13ef2175", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=e84296c66c1d63552db6dd6571edd92619a00e53", "patch": "@@ -1,3 +1,10 @@\n+2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* src/powerpc/sysv.S: Load correct cr to compare if we have long double.\n+\t* src/powerpc/linux64.S: Likewise.\n+\t* src/powerpc/ffi.c: Add a comment to show which part goes into cr6.\n+\t* testsuite/libffi.call/return_ldl.c: New test.\n+\n 2007-09-04    <aph@redhat.com>\n \n \t* src/arm/sysv.S (UNWIND): New."}, {"sha": "eaa4c869be814be4178a1a6636717065fe3dd472", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=e84296c66c1d63552db6dd6571edd92619a00e53", "patch": "@@ -40,7 +40,8 @@ enum {\n   FLAG_RETURNS_NOTHING  = 1 << (31-30), /* These go in cr7 */\n   FLAG_RETURNS_FP       = 1 << (31-29),\n   FLAG_RETURNS_64BITS   = 1 << (31-28),\n-  FLAG_RETURNS_128BITS  = 1 << (31-27),\n+\n+  FLAG_RETURNS_128BITS  = 1 << (31-27), /* cr6  */\n \n   FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),\n   FLAG_FP_ARGUMENTS     = 1 << (31- 6), /* cr1.eq; specified by ABI */"}, {"sha": "2cfebbf1c57b09c0074c6811c7a01223d8c0b058", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=e84296c66c1d63552db6dd6571edd92619a00e53", "patch": "@@ -125,6 +125,7 @@ ffi_call_LINUX64:\n .Lfp_return_value:\n \tbf\t28, .Lfloat_return_value\n \tstfd\t%f1, 0(%r30)\n+\tmtcrf\t0x02, %r31 /* cr6  */\n \tbf\t27, .Ldone_return_value\n \tstfd\t%f2, 8(%r30)\n \tb\t.Ldone_return_value"}, {"sha": "9682016d2fa3628a4425a22dd1fe4ffa09381f30", "filename": "libffi/src/powerpc/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=e84296c66c1d63552db6dd6571edd92619a00e53", "patch": "@@ -121,6 +121,7 @@ L(done_return_value):\n L(fp_return_value):\n \tbf\t28,L(float_return_value)\n \tstfd\t%f1,0(%r30)\n+\tmtcrf   0x02,%r31 /* cr6  */\n \tbf\t27,L(done_return_value)\n \tstfd\t%f2,8(%r30)\n \tb\tL(done_return_value)"}, {"sha": "413bf94a67d14ca2046f8fc5b65674a2b4134b78", "filename": "libffi/testsuite/libffi.call/return_ldl.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ldl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84296c66c1d63552db6dd6571edd92619a00e53/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ldl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ldl.c?ref=e84296c66c1d63552db6dd6571edd92619a00e53", "patch": "@@ -0,0 +1,34 @@\n+/* Area:\tffi_call\n+   Purpose:\tCheck return value long double.\n+   Limitations:\tnone.\n+   PR:\t\tnone.\n+   Originator:\t<andreast@gcc.gnu.org> 20071113  */\n+\n+/* { dg-do run } */\n+#include \"ffitest.h\"\n+\n+static long double return_ldl(long double ldl)\n+{\n+  return 2*ldl;\n+}\n+int main (void)\n+{\n+  ffi_cif cif;\n+  ffi_type *args[MAX_ARGS];\n+  void *values[MAX_ARGS];\n+  long double ldl, rldl;\n+\n+  args[0] = &ffi_type_longdouble;\n+  values[0] = &ldl;\n+\n+  /* Initialize the cif */\n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n+\t\t     &ffi_type_longdouble, args) == FFI_OK);\n+\n+  for (ldl = -127.0; ldl <  127.0; ldl++)\n+    {\n+      ffi_call(&cif, FFI_FN(return_ldl), &rldl, values);\n+      CHECK(rldl ==  2 * ldl);\n+    }\n+  exit(0);\n+}"}]}