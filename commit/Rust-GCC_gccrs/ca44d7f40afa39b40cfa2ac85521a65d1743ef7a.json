{"sha": "ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0NGQ3ZjQwYWZhMzliNDBjZmEyYWM4NTUyMWE2NWQxNzQzZWY3YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-19T08:08:28Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-19T08:08:28Z"}, "message": "Detect mixed usage of spaces and tabs.\n\n2018-11-19  Martin Liska  <mliska@suse.cz>\n\n\t* check_GNU_style_lib.py: Detect mixed usage\n\tof spaces and tabs.\n\nFrom-SVN: r266261", "tree": {"sha": "27d3d936bfcef596eba6eeb87c09cc6cf26bbf89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d3d936bfcef596eba6eeb87c09cc6cf26bbf89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "662076c9faa2a712196faa766482c79632091828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662076c9faa2a712196faa766482c79632091828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662076c9faa2a712196faa766482c79632091828"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "64dcdfcb76a8e475b7f458bc53959e7e6c47bc84", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "patch": "@@ -1,3 +1,8 @@\n+2018-11-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* check_GNU_style_lib.py: Detect mixed usage\n+\tof spaces and tabs.\n+\n 2018-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc_update (files_and_dependencies): Handle libphobos."}, {"sha": "ac3682fb2aff1f375e4aabecf8cad21300c17e11", "filename": "contrib/check_GNU_style_lib.py", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a/contrib%2Fcheck_GNU_style_lib.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca44d7f40afa39b40cfa2ac85521a65d1743ef7a/contrib%2Fcheck_GNU_style_lib.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style_lib.py?ref=ca44d7f40afa39b40cfa2ac85521a65d1743ef7a", "patch": "@@ -99,6 +99,18 @@ def check(self, filename, lineno, line):\n                 line.replace(self.expanded_tab, error_string(ws_char * ts)),\n                 'blocks of 8 spaces should be replaced with tabs', i)\n \n+class SpacesAndTabsMixedCheck:\n+    def __init__(self):\n+        self.re = re.compile('\\ \\t')\n+\n+    def check(self, filename, lineno, line):\n+        stripped = line.lstrip()\n+        start = line[:len(line) - len(stripped)]\n+        if self.re.search(line):\n+            return CheckError(filename, lineno,\n+                error_string(start.replace('\\t', ws_char * ts)) + line[len(start):],\n+                'a space should not precede a tab', 0)\n+\n class TrailingWhitespaceCheck:\n     def __init__(self):\n         self.re = re.compile('(\\s+)$')\n@@ -236,12 +248,27 @@ def test_trailing_whitespace_check_basic(self):\n         r = self.check.check('foo', 123, 'a = 123;\\t')\n         self.assertIsNotNone(r)\n \n+class SpacesAndTabsMixedTest(unittest.TestCase):\n+    def setUp(self):\n+        self.check = SpacesAndTabsMixedCheck()\n+\n+    def test_trailing_whitespace_check_basic(self):\n+        r = self.check.check('foo', 123, '   \\ta = 123;')\n+        self.assertEqual('foo', r.filename)\n+        self.assertEqual(0, r.column)\n+        self.assertIsNotNone(r.console_error)\n+        r = self.check.check('foo', 123, '   \\t  a = 123;')\n+        self.assertIsNotNone(r.console_error)\n+        r = self.check.check('foo', 123, '\\t  a = 123;')\n+        self.assertIsNone(r)\n+\n def check_GNU_style_file(file, file_encoding, format):\n     checks = [LineLengthCheck(), SpacesCheck(), TrailingWhitespaceCheck(),\n         SentenceSeparatorCheck(), SentenceEndOfCommentCheck(),\n         SentenceDotEndCheck(), FunctionParenthesisCheck(),\n         SquareBracketCheck(), ClosingParenthesisCheck(),\n-        BracesOnSeparateLineCheck(), TrailinigOperatorCheck()]\n+        BracesOnSeparateLineCheck(), TrailinigOperatorCheck(),\n+        SpacesAndTabsMixedCheck()]\n     errors = []\n \n     patch = PatchSet(file, encoding=file_encoding)"}]}