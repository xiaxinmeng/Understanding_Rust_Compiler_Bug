{"sha": "d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc3NjFiMmQ2NGYwMmNlN2I5ZmQ3YzM1NGMyZjViOTg4MDUyMzVjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:35:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:35:52Z"}, "message": "[multiple changes]\n\n2013-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_ch10.adb: Minor reformatting.\n\t* exp_disp.adb: Minor comment update.\n\t* comperr.ads, osint.ads, rtsfind.adb, sem_prag.adb: Minor addition of\n\tNo_Return pragmas.\n\n2013-02-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* targparm.ads, sem_ch13.adb (Support_Nondefault_SSO): New target\n\tparameter, defaulted to False for now, indicates targets where\n\tnon-default scalar storage order may be specified.\n\n2013-02-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* sprint.adb (Write_Itype): Treat E_Record_Subtype_With_Private\n\tsame as E_Record_Subtype.  Display E_Class_Wide_Subtype as\n\tsubtype, not type.\n\nFrom-SVN: r195797", "tree": {"sha": "eb7188a0eeffb5040590e4c4c719f34aa0054d7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb7188a0eeffb5040590e4c4c719f34aa0054d7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/comments", "author": null, "committer": null, "parents": [{"sha": "6d840d998086aa54b0a43c45b7a323f0408bf308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d840d998086aa54b0a43c45b7a323f0408bf308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d840d998086aa54b0a43c45b7a323f0408bf308"}], "stats": {"total": 87, "additions": 64, "deletions": 23}, "files": [{"sha": "d41a8d1300f1e0c5dff104b4c777125edbdec2fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -1,3 +1,22 @@\n+2013-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch10.adb: Minor reformatting.\n+\t* exp_disp.adb: Minor comment update.\n+\t* comperr.ads, osint.ads, rtsfind.adb, sem_prag.adb: Minor addition of\n+\tNo_Return pragmas.\n+\n+2013-02-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* targparm.ads, sem_ch13.adb (Support_Nondefault_SSO): New target\n+\tparameter, defaulted to False for now, indicates targets where\n+\tnon-default scalar storage order may be specified.\n+\n+2013-02-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sprint.adb (Write_Itype): Treat E_Record_Subtype_With_Private\n+\tsame as E_Record_Subtype.  Display E_Class_Wide_Subtype as\n+\tsubtype, not type.\n+\n 2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch3.adb (Complete_Private_Subtype): Inherit the"}, {"sha": "ba3cb6b8f66f43f2e7a065d8d766316fae8c2339", "filename": "gcc/ada/comperr.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fcomperr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fcomperr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.ads?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,7 @@ package Comperr is\n      (X            : String;\n       Code         : Integer := 0;\n       Fallback_Loc : String := \"\");\n+   pragma No_Return (Compiler_Abort);\n    --  Signals an internal compiler error. Never returns control. Depending on\n    --  processing may end up raising Unrecoverable_Error, or exiting directly.\n    --  The message output is a \"bug box\" containing the first string passed as"}, {"sha": "9288e8477344ec1baadd31f478afe6e13cb54a62", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -4181,9 +4181,7 @@ package body Exp_Ch6 is\n          if Is_Entity_Name (N) and then Present (Entity (N)) then\n             E := Entity (N);\n \n-            if Is_Formal (E)\n-              and then Scope (E) = Subp\n-            then\n+            if Is_Formal (E) and then Scope (E) = Subp then\n                A := Renamed_Object (E);\n \n                --  Rewrite the occurrence of the formal into an occurrence of"}, {"sha": "bc4ab5099f53165f458b8b7414d69ada3e1b3fa6", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4132,6 +4132,9 @@ package body Exp_Disp is\n          --  Nb_Prim. If the tagged type has no primitives we add a dummy\n          --  slot whose address will be the tag of this type.\n \n+         --  ???codepeer???\n+         --  Nb_Prim cannot be zero here, so this test is wrong\n+\n          if Nb_Prim = 0 then\n             New_Node := Make_Integer_Literal (Loc, 1);\n          else"}, {"sha": "cbbcd92a1934b52a59699c11648e70fcf024ba0c", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -637,6 +637,7 @@ package Osint is\n    --  Set_Exit_Status as the last action of the program.\n \n    procedure OS_Exit_Through_Exception (Status : Integer);\n+   pragma No_Return;\n    --  Set the Current_Exit_Status, then raise Types.Terminate_Program\n \n    type Exit_Code_Type is ("}, {"sha": "5327da54aac73a9ae77d926106a567553dd9707c", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -148,6 +148,7 @@ package body Rtsfind is\n    --  value in RTU_Id.\n \n    procedure Load_Fail (S : String; U_Id : RTU_Id; Id : RE_Id);\n+   pragma No_Return (Load_Fail);\n    --  Internal procedure called if we can't successfully locate or process a\n    --  run-time unit. The parameters give information about the error message\n    --  to be given. S is a reason for failing to compile the file and U_Id is"}, {"sha": "a4241afabd71ecede067132b1bb738dfded5c4d1", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -4741,11 +4741,10 @@ package body Sem_Ch10 is\n       --  compiling the body of the child unit.\n \n       if P = Cunit_Entity (Current_Sem_Unit)\n-        or else\n-         (Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Body\n-            and then P = Main_Unit_Entity\n-            and then\n-              Is_Ancestor_Unit (Cunit (Main_Unit), Cunit (Current_Sem_Unit)))\n+        or else (Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Body\n+                  and then P = Main_Unit_Entity\n+                  and then Is_Ancestor_Unit\n+                             (Cunit (Main_Unit), Cunit (Current_Sem_Unit)))\n       then\n          return;\n       end if;"}, {"sha": "92df5569df617917dc23ee06f6826d8ff8164b5c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -3622,9 +3622,17 @@ package body Sem_Ch13 is\n                   Flag_Non_Static_Expr\n                     (\"Scalar_Storage_Order requires static expression!\", Expr);\n \n-               else\n-                  if (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n+               elsif (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n+\n+                  --  Here for the case of a non-default (i.e. non-confirming)\n+                  --  Scalar_Storage_Order attribute definition.\n+\n+                  if Support_Nondefault_SSO_On_Target then\n                      Set_Reverse_Storage_Order (Base_Type (U_Ent), True);\n+                  else\n+                     Error_Msg_N\n+                       (\"non-default Scalar_Storage_Order \"\n+                        & \"not supported on target\", Expr);\n                   end if;\n                end if;\n             end if;"}, {"sha": "130cba6de6264b14814e5273d11a4b70e764cb9d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -10255,21 +10255,23 @@ package body Sem_Ch3 is\n               Protected_Kind   =>\n             Copy_Node (Priv, Full);\n \n-            Set_Has_Discriminants (Full, Has_Discriminants (Full_Base));\n+            Set_Has_Discriminants\n+                             (Full, Has_Discriminants (Full_Base));\n             Set_Has_Unknown_Discriminants\n-              (Full, Has_Unknown_Discriminants (Full_Base));\n-            Set_First_Entity      (Full, First_Entity (Full_Base));\n-            Set_Last_Entity       (Full, Last_Entity (Full_Base));\n+                             (Full, Has_Unknown_Discriminants (Full_Base));\n+            Set_First_Entity (Full, First_Entity (Full_Base));\n+            Set_Last_Entity  (Full, Last_Entity (Full_Base));\n \n          when others =>\n             Copy_Node (Full_Base, Full);\n+\n             Set_Chars         (Full, Chars (Priv));\n             Conditional_Delay (Full, Priv);\n             Set_Sloc          (Full, Sloc (Priv));\n       end case;\n \n-      Set_Next_Entity (Full, Save_Next_Entity);\n-      Set_Homonym     (Full, Save_Homonym);\n+      Set_Next_Entity               (Full, Save_Next_Entity);\n+      Set_Homonym                   (Full, Save_Homonym);\n       Set_Associated_Node_For_Itype (Full, Related_Nod);\n \n       --  Set common attributes for all subtypes: kind, convention, etc."}, {"sha": "1a34b3423f5308601281ef22294176945ff8d5ff", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -1924,6 +1924,7 @@ package body Sem_Prag is\n \n       procedure Check_Loop_Invariant_Variant_Placement is\n          procedure Placement_Error (Constr : Node_Id);\n+         pragma No_Return (Placement_Error);\n          --  Node Constr denotes the last loop restricted construct before we\n          --  encountered an illegal relation between enclosing constructs. Emit\n          --  an error depending on what Constr was.\n@@ -6049,6 +6050,7 @@ package body Sem_Prag is\n                S2 : constant String_Id := Strval (New_Name);\n \n                procedure Mismatch;\n+               pragma No_Return (Mismatch);\n                --  Called if names do not match\n \n                --------------\n@@ -6154,9 +6156,11 @@ package body Sem_Prag is\n          Mech_Name_Id : Name_Id;\n \n          procedure Bad_Class;\n+         pragma No_Return (Bad_Class);\n          --  Signal bad descriptor class name\n \n          procedure Bad_Mechanism;\n+         pragma No_Return (Bad_Mechanism);\n          --  Signal bad mechanism name\n \n          ---------------"}, {"sha": "27173504aed0e08fcef3c0fe8684673f4729be1e", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -4145,7 +4145,7 @@ package body Sprint is\n \n                   --  Record subtypes\n \n-                  when E_Record_Subtype =>\n+                  when E_Record_Subtype | E_Record_Subtype_With_Private =>\n                      Write_Header (False);\n                      Write_Str (\"record\");\n                      Indent_Begin;\n@@ -4170,7 +4170,7 @@ package body Sprint is\n \n                   when E_Class_Wide_Type    |\n                        E_Class_Wide_Subtype =>\n-                     Write_Header;\n+                     Write_Header (Ekind (Typ) = E_Class_Wide_Type);\n                      Write_Name_With_Col_Check (Chars (Etype (Typ)));\n                      Write_Str (\"'Class\");\n "}, {"sha": "52a6ee45235227a0054a4ce39a31b7f74278352d", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -436,6 +436,11 @@ package Targparm is\n    --  the source program may not contain explicit 64-bit shifts. In addition,\n    --  the code generated for packed arrays will avoid the use of long shifts.\n \n+   Support_Nondefault_SSO_On_Target : Boolean := False;\n+   --  If True, the back end supports the non-default Scalar_Storage_Order\n+   --  (i.e. allows non-confirming Scalar_Storage_Order attribute definition\n+   --  clauses).\n+\n    --------------------\n    -- Indirect Calls --\n    --------------------"}]}