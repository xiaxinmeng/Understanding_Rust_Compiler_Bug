{"sha": "65d932637ed3ffb25d08011a02e8ed0129f1aecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVkOTMyNjM3ZWQzZmZiMjVkMDgwMTFhMDJlOGVkMDEyOWYxYWVjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-21T17:05:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-21T17:05:33Z"}, "message": "revert: configure.ac: Add -std=c++98 to stage1_cxxflags.\n\nRevert:\n       * configure.ac: Add -std=c++98 to stage1_cxxflags.\n       * Makefile.tpl (STAGE1_CXXFLAGS): And substitute it.\n       * Makefile.in, configure: Regenerate.\n\nFrom-SVN: r223494", "tree": {"sha": "470a042921d378f12568552a5b4504b9408d094a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/470a042921d378f12568552a5b4504b9408d094a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65d932637ed3ffb25d08011a02e8ed0129f1aecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d932637ed3ffb25d08011a02e8ed0129f1aecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d932637ed3ffb25d08011a02e8ed0129f1aecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d932637ed3ffb25d08011a02e8ed0129f1aecb/comments", "author": null, "committer": null, "parents": [{"sha": "3ecf9d13a14e1ec6a383c668ce0f1c36e63bf587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ecf9d13a14e1ec6a383c668ce0f1c36e63bf587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ecf9d13a14e1ec6a383c668ce0f1c36e63bf587"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "d742bf253d04115bcd48795da7d4fcebe04f5f00", "filename": "ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d932637ed3ffb25d08011a02e8ed0129f1aecb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d932637ed3ffb25d08011a02e8ed0129f1aecb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=65d932637ed3ffb25d08011a02e8ed0129f1aecb", "patch": "@@ -1,9 +1,3 @@\n-2015-05-21  Jason Merrill  <jason@redhat.com>\n-\n-\t* configure.ac: Add -std=c++98 to stage1_cxxflags.\n-\t* Makefile.tpl (STAGE1_CXXFLAGS): And substitute it.\n-\t* Makefile.in, configure: Regenerate.\n-\n 2015-05-16  James Bowman  <james.bowman@ftdichip.com>\n \n \t* configure.ac: FT32 target added."}, {"sha": "24f51a413c1cf94f262ff895ee390af5535c98e7", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d932637ed3ffb25d08011a02e8ed0129f1aecb/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d932637ed3ffb25d08011a02e8ed0129f1aecb/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=65d932637ed3ffb25d08011a02e8ed0129f1aecb", "patch": "@@ -487,7 +487,6 @@ STAGEfeedback_CONFIGURE_FLAGS = $(STAGE_CONFIGURE_FLAGS)\n # only ones useful for building stage2.\n \n STAGE1_CFLAGS = @stage1_cflags@\n-STAGE1_CXXFLAGS = @stage1_cxxflags@\n STAGE1_CHECKING = @stage1_checking@\n STAGE1_LANGUAGES = @stage1_languages@\n # * We force-disable intermodule optimizations, even if"}, {"sha": "660e1e44bb91b493097287209b519bd8e21cdb6f", "filename": "Makefile.tpl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d932637ed3ffb25d08011a02e8ed0129f1aecb/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d932637ed3ffb25d08011a02e8ed0129f1aecb/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=65d932637ed3ffb25d08011a02e8ed0129f1aecb", "patch": "@@ -440,7 +440,6 @@ STAGE[+id+]_CONFIGURE_FLAGS = $(STAGE_CONFIGURE_FLAGS)\n # only ones useful for building stage2.\n \n STAGE1_CFLAGS = @stage1_cflags@\n-STAGE1_CXXFLAGS = @stage1_cxxflags@\n STAGE1_CHECKING = @stage1_checking@\n STAGE1_LANGUAGES = @stage1_languages@\n # * We force-disable intermodule optimizations, even if"}, {"sha": "d8043298ad0908298ccb53267d8e6f4e59b22b0d", "filename": "configure", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d932637ed3ffb25d08011a02e8ed0129f1aecb/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d932637ed3ffb25d08011a02e8ed0129f1aecb/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=65d932637ed3ffb25d08011a02e8ed0129f1aecb", "patch": "@@ -559,7 +559,6 @@ compare_exclusions\n host_shared\n stage2_werror_flag\n stage1_checking\n-stage1_cxxflags\n stage1_cflags\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -14756,13 +14755,6 @@ case $build in\n       *) stage1_cflags=\"-g -J\" ;;\n     esac ;;\n esac\n-stage1_cxxflags='$(STAGE1_CFLAGS)'\n-if test \"$GCC\" = yes; then\n-  # Build stage 1 in C++98 mode to ensure that a C++98 compiler can still\n-  # start the bootstrap.\n-  stage1_cxxflags=\"$stage1_cxxflags -std=c++98\"\n-fi\n-\n \n \n "}, {"sha": "4da04b76fdf80fcd679f2ff4e7161c3796397455", "filename": "configure.ac", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d932637ed3ffb25d08011a02e8ed0129f1aecb/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d932637ed3ffb25d08011a02e8ed0129f1aecb/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=65d932637ed3ffb25d08011a02e8ed0129f1aecb", "patch": "@@ -3476,15 +3476,8 @@ case $build in\n       *) stage1_cflags=\"-g -J\" ;;\n     esac ;;\n esac\n-stage1_cxxflags='$(STAGE1_CFLAGS)'\n-if test \"$GCC\" = yes; then\n-  # Build stage 1 in C++98 mode to ensure that a C++98 compiler can still\n-  # start the bootstrap.\n-  stage1_cxxflags=\"$stage1_cxxflags -std=c++98\"\n-fi\n \n AC_SUBST(stage1_cflags)\n-AC_SUBST(stage1_cxxflags)\n \n # Enable --enable-checking in stage1 of the compiler.\n AC_ARG_ENABLE(stage1-checking,"}]}