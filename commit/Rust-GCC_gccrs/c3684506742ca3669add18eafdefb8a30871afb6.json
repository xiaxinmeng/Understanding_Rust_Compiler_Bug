{"sha": "c3684506742ca3669add18eafdefb8a30871afb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM2ODQ1MDY3NDJjYTM2NjlhZGQxOGVhZmRlZmI4YTMwODcxYWZiNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-02-20T18:53:29Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-02-20T18:53:29Z"}, "message": "re PR middle-end/82123 (spurious -Wformat-overflow warning for converted vars)\n\n\tPR middle-end/82123\n\tPR tree-optimization/81592\n\tPR middle-end/79257\n\t* gimple-ssa-sprintf.c (sprintf_dom_walker::handle_gimple_call): Query\n\tthe EVRP range analyzer for range data rather than using global data.\n\nFrom-SVN: r257853", "tree": {"sha": "def948dee512f3b6736f65b68b140725b979d59d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/def948dee512f3b6736f65b68b140725b979d59d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3684506742ca3669add18eafdefb8a30871afb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3684506742ca3669add18eafdefb8a30871afb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3684506742ca3669add18eafdefb8a30871afb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3684506742ca3669add18eafdefb8a30871afb6/comments", "author": null, "committer": null, "parents": [{"sha": "aa67d03c30f907fd47adfadff3fb7c58c0b437d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa67d03c30f907fd47adfadff3fb7c58c0b437d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa67d03c30f907fd47adfadff3fb7c58c0b437d1"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "3dad6fe44b10cc1c08b14bc6619c280ee9a3e97e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3684506742ca3669add18eafdefb8a30871afb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3684506742ca3669add18eafdefb8a30871afb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3684506742ca3669add18eafdefb8a30871afb6", "patch": "@@ -3,6 +3,8 @@\n \tPR middle-end/82123\n \tPR tree-optimization/81592\n \tPR middle-end/79257\n+\t* gimple-ssa-sprintf.c (sprintf_dom_walker::handle_gimple_call): Query\n+\tthe EVRP range analyzer for range data rather than using global data.\n \t* gimple-ssa-sprintf.c: Include alloc-pool.h, vr-values.h and \n \tgimple-ssa-evrp-analyze.h\n \t(class sprintf_dom_walker): Add after_dom_children member function."}, {"sha": "4b2de6d2aa45e439b4f1ce76bffdad4eadea8306", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3684506742ca3669add18eafdefb8a30871afb6/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3684506742ca3669add18eafdefb8a30871afb6/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=c3684506742ca3669add18eafdefb8a30871afb6", "patch": "@@ -3903,16 +3903,13 @@ sprintf_dom_walker::handle_gimple_call (gimple_stmt_iterator *gsi)\n \t  /* Try to determine the range of values of the argument\n \t     and use the greater of the two at level 1 and the smaller\n \t     of them at level 2.  */\n-\t  wide_int min, max;\n-\t  enum value_range_type range_type\n-\t    = get_range_info (size, &min, &max);\n-\t  if (range_type == VR_RANGE)\n-\t    {\n-\t      dstsize\n-\t\t= (warn_level < 2\n-\t\t   ? wi::fits_uhwi_p (max) ? max.to_uhwi () : max.to_shwi ()\n-\t\t   : wi::fits_uhwi_p (min) ? min.to_uhwi () : min.to_shwi ());\n-\t    }\n+\t  value_range *vr = evrp_range_analyzer.get_value_range (size);\n+\t  if (vr->type == VR_RANGE\n+\t      && TREE_CODE (vr->min) == INTEGER_CST\n+\t      && TREE_CODE (vr->max) == INTEGER_CST)\n+\t    dstsize = (warn_level < 2\n+\t\t       ? TREE_INT_CST_LOW (vr->max)\n+\t\t       : TREE_INT_CST_LOW (vr->min));\n \n \t  /* The destination size is not constant.  If the function is\n \t     bounded (e.g., snprintf) a lower bound of zero doesn't"}]}