{"sha": "a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyNGI3MGYxMDY0YmVhYTk5ZDQzM2Y2ZTgyZTRjYjRjOWJmMjk0NQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-25T14:26:58Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-25T14:26:58Z"}, "message": "system.h [...]: Wrap C function declarations in extern \"C\".\n\n\t* system.h [__cplusplus]: Wrap C function declarations in extern \"C\".\n-This line, and those below, will be ignored--\n\nM    ChangeLog\nM    system.h\n\nFrom-SVN: r176748", "tree": {"sha": "c36b78c8587a510ed8115e947d3bcae844686652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36b78c8587a510ed8115e947d3bcae844686652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a024b70f1064beaa99d433f6e82e4cb4c9bf2945/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d1c74214ef76216ad529b233dfac63ccf0cf7b5"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "b7d8d00b1bc0cb61e5ca445bace581c4c35a5807", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a024b70f1064beaa99d433f6e82e4cb4c9bf2945/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a024b70f1064beaa99d433f6e82e4cb4c9bf2945/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "patch": "@@ -1,3 +1,7 @@\n+2011-07-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* system.h [__cplusplus]: Wrap C function declarations in extern \"C\".\n+\n 2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "0f15e12737ada3b7adbfdb9829bfb15fdc6b18fb", "filename": "libcpp/system.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a024b70f1064beaa99d433f6e82e4cb4c9bf2945/libcpp%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a024b70f1064beaa99d433f6e82e4cb4c9bf2945/libcpp%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fsystem.h?ref=a024b70f1064beaa99d433f6e82e4cb4c9bf2945", "patch": "@@ -84,6 +84,10 @@ along with GCC; see the file COPYING3.  If not see\n #  define fputc(C, Stream) fputc_unlocked (C, Stream)\n # endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n # ifdef HAVE_CLEARERR_UNLOCKED\n #  undef clearerr\n #  define clearerr(Stream) clearerr_unlocked (Stream)\n@@ -164,6 +168,10 @@ extern int fprintf_unlocked (FILE *, const char *, ...);\n #  endif\n # endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif\n \n /* ??? Glibc's fwrite/fread_unlocked macros cause\n@@ -286,10 +294,18 @@ extern int errno;\n    here.  These checks will be in the undefined state while configure\n    is running so be careful to test \"defined (HAVE_DECL_*)\".  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #if defined (HAVE_DECL_ABORT) && !HAVE_DECL_ABORT\n extern void abort (void);\n #endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #if HAVE_SYS_STAT_H\n # include <sys/stat.h>\n #endif"}]}