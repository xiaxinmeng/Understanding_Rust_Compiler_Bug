{"sha": "2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNjNzk2N2ZiZWVmMzFkNDZkZjQ5YTlhYWE5MmFmMWNkZGI5ZmNhNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:19:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:19:35Z"}, "message": "[multiple changes]\n\n2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb, exp_util.adb, sem_ch13.adb, exp_unst.adb: Minor\n\treformatting.\n\n2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Denotes_Iterator): Use root type to determine\n\twhether the ultimate ancestor is the predefined iterator\n\tinterface pakage.\n\t* exp_ch5.adb (Expand_Iterator_Over_Container): simplify code\n\tand avoid reuse of Pack local variable.\n\n2016-04-21  Olivier Hainque  <hainque@adacore.com>\n\n\t* system-vxworks-arm.ads, system-vxworks-sparcv9.ads,\n\tsystem-vxworks-ppc.ads, system-vxworks-m68k.ads,\n\tsystem-vxworks-mips.ads, system-vxworks-x86.ads: Define\n\tExecutable_Extension to \".out\".\n\nFrom-SVN: r235304", "tree": {"sha": "a0f96d464018beb2ce97514538154507b8f8218a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f96d464018beb2ce97514538154507b8f8218a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/comments", "author": null, "committer": null, "parents": [{"sha": "29a56f611a6c48dc6af556a02c0494ef928274d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a56f611a6c48dc6af556a02c0494ef928274d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a56f611a6c48dc6af556a02c0494ef928274d3"}], "stats": {"total": 228, "additions": 148, "deletions": 80}, "files": [{"sha": "8ba447ef9d5d6426d164f9cfa87af9fd09a554e2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -1,3 +1,23 @@\n+2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb, exp_util.adb, sem_ch13.adb, exp_unst.adb: Minor\n+\treformatting.\n+\n+2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Denotes_Iterator): Use root type to determine\n+\twhether the ultimate ancestor is the predefined iterator\n+\tinterface pakage.\n+\t* exp_ch5.adb (Expand_Iterator_Over_Container): simplify code\n+\tand avoid reuse of Pack local variable.\n+\n+2016-04-21  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* system-vxworks-arm.ads, system-vxworks-sparcv9.ads,\n+\tsystem-vxworks-ppc.ads, system-vxworks-m68k.ads,\n+\tsystem-vxworks-mips.ads, system-vxworks-x86.ads: Define\n+\tExecutable_Extension to \".out\".\n+\n 2016-04-21  Javier Miranda  <miranda@adacore.com>\n \n \t* frontend.adb: Update call to Unnest_Subprograms."}, {"sha": "2f7e5d1dad9926dd1df8166d501ba183cc2bb6cd", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 88, "deletions": 60, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3605,25 +3605,31 @@ package body Exp_Ch5 is\n       Container     : Node_Id;\n       Container_Typ : Entity_Id)\n    is\n-      Id  : constant Entity_Id  := Defining_Identifier (I_Spec);\n-      Loc : constant Source_Ptr := Sloc (N);\n-\n-      I_Kind   : constant Entity_Kind := Ekind (Id);\n-      Cursor   : Entity_Id;\n-      Iterator : Entity_Id;\n-      New_Loop : Node_Id;\n-      Stats    : constant List_Id := Statements (N);\n+      Id       : constant Entity_Id   := Defining_Identifier (I_Spec);\n+      Elem_Typ : constant Entity_Id   := Etype (Id);\n+      Id_Kind  : constant Entity_Kind := Ekind (Id);\n+      Loc      : constant Source_Ptr  := Sloc (N);\n+      Stats    : constant List_Id     := Statements (N);\n \n-      Element_Type : constant Entity_Id := Etype (Id);\n-      Iter_Type    : Entity_Id;\n-      Pack         : Entity_Id;\n-      Decl         : Node_Id;\n-      Name_Init    : Name_Id;\n-      Name_Step    : Name_Id;\n+      Cursor    : Entity_Id;\n+      Decl      : Node_Id;\n+      Iter_Type : Entity_Id;\n+      Iterator  : Entity_Id;\n+      Name_Init : Name_Id;\n+      Name_Step : Name_Id;\n+      New_Loop  : Node_Id;\n \n-      Fast_Element_Access_Op, Fast_Step_Op : Entity_Id := Empty;\n+      Fast_Element_Access_Op : Entity_Id := Empty;\n+      Fast_Step_Op           : Entity_Id := Empty;\n       --  Only for optimized version of \"for ... of\"\n \n+      Iter_Pack : Entity_Id;\n+      --  The package in which the iterator interface is instantiated. This is\n+      --  typically an instance within the container package.\n+\n+      Pack : Entity_Id;\n+      --  The package in which the container type is declared\n+\n    begin\n       --  Determine the advancement and initialization steps for the cursor.\n       --  Analysis of the expanded loop will verify that the container has a\n@@ -3658,8 +3664,6 @@ package body Exp_Ch5 is\n          Pack := Scope (Container_Typ);\n       end if;\n \n-      Iter_Type := Etype (Name (I_Spec));\n-\n       if Of_Present (I_Spec) then\n          Handle_Of : declare\n             Container_Arg : Node_Id;\n@@ -3734,6 +3738,8 @@ package body Exp_Ch5 is\n                end if;\n             end Get_Default_Iterator;\n \n+            --  Local variables\n+\n             Default_Iter : Entity_Id;\n             Ent          : Entity_Id;\n \n@@ -3760,6 +3766,12 @@ package body Exp_Ch5 is\n \n             Iter_Type := Etype (Default_Iter);\n \n+            --  The iterator type, which is a class-wide type, may itself be\n+            --  derived locally, so the desired instantiation is the scope of\n+            --  the root type of the iterator type.\n+\n+            Iter_Pack := Scope (Root_Type (Etype (Iter_Type)));\n+\n             --  Find declarations needed for \"for ... of\" optimization\n \n             Ent := First_Entity (Pack);\n@@ -3798,28 +3810,35 @@ package body Exp_Ch5 is\n                          New_List (New_Copy_Tree (Container_Arg)))));\n             end if;\n \n-            --  The iterator type, which is a class-wide type, may itself be\n-            --  derived locally, so the desired instantiation is the scope of\n-            --  the root type of the iterator type. Currently, Pack is the\n-            --  container instance; this overwrites it with the iterator\n-            --  package.\n+            --  Rewrite domain of iteration as a call to the default iterator\n+            --  for the container type. The formal may be an access parameter\n+            --  in which case we must build a reference to the container.\n \n-            Pack := Scope (Root_Type (Etype (Iter_Type)));\n+            declare\n+               Arg : Node_Id;\n+            begin\n+               if Is_Access_Type (Etype (First_Entity (Default_Iter))) then\n+                  Arg :=\n+                    Make_Attribute_Reference (Loc,\n+                      Prefix         => Container_Arg,\n+                      Attribute_Name => Name_Unrestricted_Access);\n+               else\n+                  Arg := Container_Arg;\n+               end if;\n \n-            --  Rewrite domain of iteration as a call to the default iterator\n-            --  for the container type.\n+               Rewrite (Name (I_Spec),\n+                 Make_Function_Call (Loc,\n+                   Name                   =>\n+                     New_Occurrence_Of (Default_Iter, Loc),\n+                   Parameter_Associations => New_List (Arg)));\n+            end;\n \n-            Rewrite (Name (I_Spec),\n-              Make_Function_Call (Loc,\n-                Name                   =>\n-                  New_Occurrence_Of (Default_Iter, Loc),\n-                Parameter_Associations => New_List (Container_Arg)));\n             Analyze_And_Resolve (Name (I_Spec));\n \n             --  Find cursor type in proper iterator package, which is an\n             --  instantiation of Iterator_Interfaces.\n \n-            Ent := First_Entity (Pack);\n+            Ent := First_Entity (Iter_Pack);\n             while Present (Ent) loop\n                if Chars (Ent) = Name_Cursor then\n                   Set_Etype (Cursor, Etype (Ent));\n@@ -3834,7 +3853,7 @@ package body Exp_Ch5 is\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Id,\n                    Subtype_Mark        =>\n-                     New_Occurrence_Of (Element_Type, Loc),\n+                     New_Occurrence_Of (Elem_Typ, Loc),\n                    Name                =>\n                      Make_Explicit_Dereference (Loc,\n                        Prefix =>\n@@ -3849,16 +3868,16 @@ package body Exp_Ch5 is\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Id,\n                    Subtype_Mark        =>\n-                     New_Occurrence_Of (Element_Type, Loc),\n+                     New_Occurrence_Of (Elem_Typ, Loc),\n                    Name                =>\n                      Make_Indexed_Component (Loc,\n                        Prefix      => Relocate_Node (Container_Arg),\n                        Expressions =>\n                          New_List (New_Occurrence_Of (Cursor, Loc))));\n             end if;\n \n-            --  The defining identifier in the iterator is user-visible\n-            --  and must be visible in the debugger.\n+            --  The defining identifier in the iterator is user-visible and\n+            --  must be visible in the debugger.\n \n             Set_Debug_Info_Needed (Id);\n \n@@ -3878,18 +3897,25 @@ package body Exp_Ch5 is\n             Prepend_To (Stats, Decl);\n          end Handle_Of;\n \n-      --  X in Iterate (S) : type of iterator is type of explicitly\n-      --  given Iterate function, and the loop variable is the cursor.\n-      --  It will be assigned in the loop and must be a variable.\n+      --  X in Iterate (S) : type of iterator is type of explicitly given\n+      --  Iterate function, and the loop variable is the cursor. It will be\n+      --  assigned in the loop and must be a variable.\n \n       else\n+         Iter_Type := Etype (Name (I_Spec));\n+\n+         --  The iterator type, which is a class-wide type, may itself be\n+         --  derived locally, so the desired instantiation is the scope of\n+         --  the root type of the iterator type, as in the \"of\" case.\n+\n+         Iter_Pack := Scope (Root_Type (Etype (Iter_Type)));\n          Cursor := Id;\n       end if;\n \n       Iterator := Make_Temporary (Loc, 'I');\n \n-      --  For both iterator forms, add a call to the step operation to\n-      --  advance the cursor. Generate:\n+      --  For both iterator forms, add a call to the step operation to advance\n+      --  the cursor. Generate:\n \n       --     Cursor := Iterator.Next (Cursor);\n \n@@ -3899,8 +3925,9 @@ package body Exp_Ch5 is\n \n       if Present (Fast_Element_Access_Op) and then Present (Fast_Step_Op) then\n          declare\n-            Step_Call : Node_Id;\n             Curs_Name : constant Node_Id := New_Occurrence_Of (Cursor, Loc);\n+            Step_Call : Node_Id;\n+\n          begin\n             Step_Call :=\n               Make_Procedure_Call_Statement (Loc,\n@@ -3948,16 +3975,16 @@ package body Exp_Ch5 is\n               Condition =>\n                 Make_Function_Call (Loc,\n                   Name                   =>\n-                    New_Occurrence_Of (\n-                     Next_Entity (First_Entity (Pack)), Loc),\n-                  Parameter_Associations =>\n-                    New_List (New_Occurrence_Of (Cursor, Loc)))),\n+                    New_Occurrence_Of\n+                      (Next_Entity (First_Entity (Iter_Pack)), Loc),\n+                  Parameter_Associations => New_List (\n+                    New_Occurrence_Of (Cursor, Loc)))),\n \n           Statements => Stats,\n           End_Label  => Empty);\n \n-      --  If present, preserve identifier of loop, which can be used in\n-      --  an exit statement in the body.\n+      --  If present, preserve identifier of loop, which can be used in an exit\n+      --  statement in the body.\n \n       if Present (Identifier (N)) then\n          Set_Identifier (New_Loop, Relocate_Node (Identifier (N)));\n@@ -3971,22 +3998,23 @@ package body Exp_Ch5 is\n       Insert_Action (N,\n         Make_Object_Renaming_Declaration (Loc,\n           Defining_Identifier => Iterator,\n-          Subtype_Mark  => New_Occurrence_Of (Iter_Type, Loc),\n-          Name          => Relocate_Node (Name (I_Spec))));\n+          Subtype_Mark        => New_Occurrence_Of (Iter_Type, Loc),\n+          Name                => Relocate_Node (Name (I_Spec))));\n \n       --  Create declaration for cursor\n \n       declare\n          Cursor_Decl : constant Node_Id :=\n-           Make_Object_Declaration (Loc,\n-             Defining_Identifier => Cursor,\n-             Object_Definition   =>\n-               New_Occurrence_Of (Etype (Cursor), Loc),\n-             Expression          =>\n-               Make_Selected_Component (Loc,\n-                 Prefix        => New_Occurrence_Of (Iterator, Loc),\n-                 Selector_Name =>\n-                   Make_Identifier (Loc, Name_Init)));\n+                         Make_Object_Declaration (Loc,\n+                           Defining_Identifier => Cursor,\n+                           Object_Definition   =>\n+                             New_Occurrence_Of (Etype (Cursor), Loc),\n+                           Expression          =>\n+                             Make_Selected_Component (Loc,\n+                               Prefix        =>\n+                                 New_Occurrence_Of (Iterator, Loc),\n+                               Selector_Name =>\n+                                 Make_Identifier (Loc, Name_Init)));\n \n       begin\n          --  The cursor is only modified in expanded code, so it appears\n@@ -3999,7 +4027,7 @@ package body Exp_Ch5 is\n          Set_Assignment_OK (Cursor_Decl);\n \n          Insert_Action (N, Cursor_Decl);\n-         Set_Ekind (Cursor, I_Kind);\n+         Set_Ekind (Cursor, Id_Kind);\n       end;\n \n       --  If the range of iteration is given by a function call that returns"}, {"sha": "d1475e7d1eadf641e937a6b3da5e482b9bec89ae", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -1721,7 +1721,6 @@ package body Exp_Unst is\n    ------------------------\n \n    procedure Unnest_Subprograms (N : Node_Id) is\n-\n       function Search_Subprograms (N : Node_Id) return Traverse_Result;\n       --  Tree visitor that search for outer level procedures with nested\n       --  subprograms and invokes Unnest_Subprogram()\n@@ -1732,9 +1731,7 @@ package body Exp_Unst is\n \n       function Search_Subprograms (N : Node_Id) return Traverse_Result is\n       begin\n-         if Nkind_In (N, N_Subprogram_Body,\n-                         N_Subprogram_Body_Stub)\n-         then\n+         if Nkind_In (N, N_Subprogram_Body, N_Subprogram_Body_Stub) then\n             declare\n                Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n "}, {"sha": "52f5157e40cca726389a06a13a74e9fbd847c41f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -1728,11 +1728,12 @@ package body Exp_Util is\n    ----------------------------------------\n \n    function Containing_Package_With_Ext_Axioms\n-     (E : Entity_Id) return Entity_Id is\n+     (E : Entity_Id) return Entity_Id\n+   is\n    begin\n       --  E is the package or generic package which is externally axiomatized\n \n-      if Ekind_In (E, E_Package, E_Generic_Package)\n+      if Ekind_In (E, E_Generic_Package, E_Package)\n         and then Has_Annotate_Pragma_For_External_Axiomatization (E)\n       then\n          return E;\n@@ -1758,6 +1759,7 @@ package body Exp_Util is\n          declare\n             Par  : constant Node_Id := Parent (E);\n             Decl : Node_Id;\n+\n          begin\n             if Nkind (Par) = N_Defining_Program_Unit_Name then\n                Decl := Parent (Par);"}, {"sha": "777964e2d3d0e267aefb4a4e3bf7c20a69a78b22", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -8438,11 +8438,11 @@ package body Sem_Ch13 is\n       --  Entity for argument of separate Predicate procedure when exceptions\n       --  are present in expression.\n \n-      FDecl         : Node_Id;\n-      --  The function declaration.\n+      FDecl : Node_Id;\n+      --  The function declaration\n \n-      SId            : Entity_Id;\n-      --  Its entity.\n+      SId : Entity_Id;\n+      --  Its entity\n \n       Raise_Expression_Present : Boolean := False;\n       --  Set True if Expr has at least one Raise_Expression\n@@ -8725,6 +8725,7 @@ package body Sem_Ch13 is\n             Add_Call (Atyp);\n          end if;\n       end;\n+\n       --  Add Predicates for the current type\n \n       Add_Predicates;\n@@ -8842,7 +8843,7 @@ package body Sem_Ch13 is\n                Insert_Before_And_Analyze (N, FDecl);\n             end if;\n \n-            Insert_After_And_Analyze  (N, FBody);\n+            Insert_After_And_Analyze (N, FBody);\n \n             --  Static predicate functions are always side-effect free, and\n             --  in most cases dynamic predicate functions are as well. Mark\n@@ -9065,7 +9066,8 @@ package body Sem_Ch13 is\n       Loc : constant Source_Ptr := Sloc (Typ);\n \n       Object_Entity : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc, Chars => New_Internal_Name ('I'));\n+                        Make_Defining_Identifier (Loc,\n+                          Chars => New_Internal_Name ('I'));\n \n       --  The formal parameter of the function\n \n@@ -12613,9 +12615,10 @@ package body Sem_Ch13 is\n             then\n                Find_Selected_Component (Parent (N));\n             end if;\n+\n             return Skip;\n \n-         elsif Nkind (N) = N_Identifier and then  Chars (N) /= Chars (E) then\n+         elsif Nkind (N) = N_Identifier and then Chars (N) /= Chars (E) then\n             Find_Direct_Name (N);\n             Set_Entity (N, Empty);\n          end if;\n@@ -12625,6 +12628,8 @@ package body Sem_Ch13 is\n \n       procedure Resolve_Aspect_Expression is new Traverse_Proc (Resolve_Name);\n \n+   --  Start of processing for Resolve_Aspect_Expressions\n+\n    begin\n       ASN := First_Rep_Item (E);\n       while Present (ASN) loop\n@@ -12637,21 +12642,21 @@ package body Sem_Ch13 is\n                --  subprograms, or that may mention current instances of\n                --  types. These will require special handling (???TBD).\n \n-               when Aspect_Predicate |\n+               when Aspect_Predicate         |\n                     Aspect_Predicate_Failure |\n                     Aspect_Invariant =>\n                   null;\n \n                when Aspect_Static_Predicate |\n                     Aspect_Dynamic_Predicate =>\n \n-                  --  build predicate function specification and preanalyze\n+                  --  Build predicate function specification and preanalyze\n                   --  expression after type replacement.\n \n                   if No (Predicate_Function (E)) then\n                      declare\n                         FDecl : constant Node_Id :=\n-                           Build_Predicate_Function_Declaration (E);\n+                                  Build_Predicate_Function_Declaration (E);\n                         pragma Unreferenced (FDecl);\n                      begin\n                         Resolve_Aspect_Expression (Expr);"}, {"sha": "615a7d25e75bdb2e2c0d35e1dae4b5aa74db59cd", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -11826,8 +11826,9 @@ package body Sem_Ch3 is\n \n       if Has_Predicates (Priv) then\n          Set_Has_Predicates (Full);\n+\n          if Present (Predicate_Function (Priv))\n-            and then No (Predicate_Function (Full))\n+           and then No (Predicate_Function (Full))\n          then\n             Set_Predicate_Function (Full, Predicate_Function (Priv));\n          end if;"}, {"sha": "0702cc71970af1f6b05368b2cf6cd53c744b07e2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -12650,11 +12650,14 @@ package body Sem_Util is\n \n       function Denotes_Iterator (Iter_Typ : Entity_Id) return Boolean is\n       begin\n+         --  Check that the name matches, and that the ultimate ancestor is in\n+         --  a predefined unit, i.e the one that declares iterator interfaces.\n+\n          return\n            Nam_In (Chars (Iter_Typ), Name_Forward_Iterator,\n                                      Name_Reversible_Iterator)\n              and then Is_Predefined_File_Name\n-                        (Unit_File_Name (Get_Source_Unit (Iter_Typ)));\n+                     (Unit_File_Name (Get_Source_Unit (Root_Type (Iter_Typ))));\n       end Denotes_Iterator;\n \n       --  Local variables"}, {"sha": "16cd2b0d5a21584bdcd758811a5568aad20f9c15", "filename": "gcc/ada/system-vxworks-arm.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-arm.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (VxWorks Version ARM)                           --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -161,4 +161,6 @@ private\n    Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}, {"sha": "1fab781a7da16bf4f7c88cdc31e7e59285f5098d", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -157,4 +157,6 @@ private\n    Frontend_Exceptions       : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}, {"sha": "5cba6cd932b923fdfa1bb0257b102e3125ec1491", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -157,4 +157,6 @@ private\n    Frontend_Exceptions       : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}, {"sha": "ea2eff982325bac3ccf15a506e76d9d6562d2cf5", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -164,4 +164,6 @@ private\n    Frontend_Exceptions       : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}, {"sha": "a7c0b5a0a47a8a693f0e0399ea0de151262d5065", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -159,4 +159,6 @@ private\n    Frontend_Exceptions       : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}, {"sha": "22f42f3c6da01c25fe009667e83024d39ec6eacc", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7967fbeef31d46df49a9aaa92af1cddb9fca6/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=2cc7967fbeef31d46df49a9aaa92af1cddb9fca6", "patch": "@@ -161,4 +161,6 @@ private\n    Frontend_Exceptions       : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n \n+   Executable_Extension : constant String := \".out\";\n+\n end System;"}]}