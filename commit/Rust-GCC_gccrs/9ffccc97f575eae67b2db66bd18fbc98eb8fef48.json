{"sha": "9ffccc97f575eae67b2db66bd18fbc98eb8fef48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZmY2NjOTdmNTc1ZWFlNjdiMmRiNjZiZDE4ZmJjOThlYjhmZWY0OA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-03-22T17:25:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-03-22T17:25:56Z"}, "message": "New test case.\n\nFrom-SVN: r32686", "tree": {"sha": "a8c86ca804ed0791272f8ca7876757e80d87fce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8c86ca804ed0791272f8ca7876757e80d87fce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ffccc97f575eae67b2db66bd18fbc98eb8fef48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffccc97f575eae67b2db66bd18fbc98eb8fef48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ffccc97f575eae67b2db66bd18fbc98eb8fef48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffccc97f575eae67b2db66bd18fbc98eb8fef48/comments", "author": null, "committer": null, "parents": [{"sha": "de76b467535988c00f9bc1bd97d9674ddfe84ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de76b467535988c00f9bc1bd97d9674ddfe84ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de76b467535988c00f9bc1bd97d9674ddfe84ed1"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "3108fbd2d07fb26d20e5ebd04e0e74e2866ffbc0", "filename": "gcc/testsuite/g++.old-deja/g++.abi/primary.C", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffccc97f575eae67b2db66bd18fbc98eb8fef48/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fprimary.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffccc97f575eae67b2db66bd18fbc98eb8fef48/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fprimary.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fprimary.C?ref=9ffccc97f575eae67b2db66bd18fbc98eb8fef48", "patch": "@@ -0,0 +1,72 @@\n+// Test to see that primary bases are selected correctly.\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+#if defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100\n+\n+// S1 is a nearly-empty base.\n+\n+struct S1\n+{\n+  virtual void f ()\n+  {\n+  }\n+};\n+\n+// S2 is a dynamic, but not nearly-empty, base.\n+\n+struct S2\n+{\n+  virtual void g ()\n+  {\n+  }\n+    \n+  int i;\n+};\n+\n+// S1 should be the primary base.\n+\n+struct T1 : public S1, public S2\n+{\n+};\n+\n+// S2 should be the primary base.\n+\n+struct T2 : public S2, public S1\n+{\n+};\n+\n+// S2 should be the primary base.\n+\n+struct T3 : virtual public S1, public S2\n+{\n+};\n+\n+// S1 should be the primary base.\n+\n+struct T4 : virtual public S1, virtual public S2\n+{\n+};\n+\n+// Check that Y is the primary base for X.  Otherwise, return N.\n+#define CHECK_PRIMARY_BASE(X, Y, N)\t\t\\\n+  {\t\t\t\t\t\t\\\n+    X x;\t\t\t\t\t\\\n+    if ((void*) &x != (void *) (Y*) (&x))\t\\\n+      return N;\t\t\t\t\t\\\n+  }\n+\n+int main ()\n+{\n+  CHECK_PRIMARY_BASE (T1, S1, 1);\n+  CHECK_PRIMARY_BASE (T2, S2, 2);\n+  CHECK_PRIMARY_BASE (T3, S2, 3);\n+  CHECK_PRIMARY_BASE (T4, S1, 4);\n+}\n+\n+#else /* !(defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100) */\n+\n+int main () \n+{\n+}\n+\n+#endif /* !(defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100) */"}]}