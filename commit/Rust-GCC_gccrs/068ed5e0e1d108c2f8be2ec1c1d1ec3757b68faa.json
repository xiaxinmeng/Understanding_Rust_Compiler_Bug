{"sha": "068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY4ZWQ1ZTBlMWQxMDhjMmY4YmUyZWMxYzFkMWVjMzc1N2I2OGZhYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-14T12:05:59Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-14T12:05:59Z"}, "message": "re PR fortran/51800 (Error: Automatic array 'dummy' at (1) cannot have an initializer)\n\n2012-01-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51800\n        * resolve.c (build_default_init_expr): Also initialize\n        nonconstant-length strings with -finit-character=<n>.\n\n2012-01-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51800\n        * gfortran.dg/init_flag_8.f90: New.\n        * gfortran.dg/init_flag_9.f90: New.\n\nFrom-SVN: r183180", "tree": {"sha": "50997e7300b321cc0e3089d7c56761ff75d584ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50997e7300b321cc0e3089d7c56761ff75d584ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74250065e2402e80c5b2a69e251104f67e8ebd10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74250065e2402e80c5b2a69e251104f67e8ebd10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74250065e2402e80c5b2a69e251104f67e8ebd10"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "2ed3e4b04b765f0beadf09a819aef61e36713922", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "patch": "@@ -1,3 +1,9 @@\n+2012-01-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51800\n+\t* resolve.c (build_default_init_expr): Also initialize\n+\tnonconstant-length strings with -finit-character=<n>.\n+\n 2011-01-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51816"}, {"sha": "352d22d0e010b6138f4da74fafe53be4e6cf3f00", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "patch": "@@ -10143,6 +10143,26 @@ build_default_init_expr (gfc_symbol *sym)\n \t  gfc_free_expr (init_expr);\n \t  init_expr = NULL;\n \t}\n+      if (!init_expr && gfc_option.flag_init_character == GFC_INIT_CHARACTER_ON\n+\t  && sym->ts.u.cl->length)\n+\t{\n+\t  gfc_actual_arglist *arg;\n+\t  init_expr = gfc_get_expr ();\n+\t  init_expr->where = sym->declared_at;\n+\t  init_expr->ts = sym->ts;\n+\t  init_expr->expr_type = EXPR_FUNCTION;\n+\t  init_expr->value.function.isym =\n+\t\tgfc_intrinsic_function_by_id (GFC_ISYM_REPEAT);\n+\t  init_expr->value.function.name = \"repeat\";\n+\t  arg = gfc_get_actual_arglist ();\n+\t  arg->expr = gfc_get_character_expr (sym->ts.kind, &sym->declared_at,\n+\t\t\t\t\t      NULL, 1);\n+\t  arg->expr->value.character.string[0]\n+\t\t= gfc_option.flag_init_character_value;\n+\t  arg->next = gfc_get_actual_arglist ();\n+\t  arg->next->expr = gfc_copy_expr (sym->ts.u.cl->length);\n+\t  init_expr->value.function.actual = arg;\n+\t}\n       break;\n \t  \n     default:\n@@ -10169,10 +10189,12 @@ apply_default_init_local (gfc_symbol *sym)\n   if (init == NULL)\n     return;\n \n-  /* For saved variables, we don't want to add an initializer at \n-     function entry, so we just add a static initializer.  */\n+  /* For saved variables, we don't want to add an initializer at function\n+     entry, so we just add a static initializer. Note that automatic variables\n+     are stack allocated even with -fno-automatic.  */\n   if (sym->attr.save || sym->ns->save_all \n-      || gfc_option.flag_max_stack_var_size == 0)\n+      || (gfc_option.flag_max_stack_var_size == 0\n+\t  && (!sym->attr.dimension || !is_non_constant_shape_array (sym))))\n     {\n       /* Don't clobber an existing initializer!  */\n       gcc_assert (sym->value == NULL);"}, {"sha": "40e5d87d1c40eb8297bcb1fee01344e9090da39d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "patch": "@@ -1,3 +1,9 @@\n+2012-01-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51800\n+\t* gfortran.dg/init_flag_8.f90: New.\n+\t* gfortran.dg/init_flag_9.f90: New.\n+\n 2011-01-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51816"}, {"sha": "b3ccc03989d032c67add1f3c9cbc8bd33ba6c481", "filename": "gcc/testsuite/gfortran.dg/init_flag_8.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_8.f90?ref=068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! { dg-options \"-fno-automatic -finit-local-zero\" }\n+!\n+! PR fortran/51800\n+!\n+! Contributed by Mario Baumann\n+!\n+      SUBROUTINE FOO( N, A )\n+      IMPLICIT NONE\n+      INTEGER :: N\n+      INTEGER :: A(1:N)\n+      INTEGER :: J\n+      INTEGER :: DUMMY(1:N)\n+      DO J=1,N\n+         DUMMY(J) = 0\n+         A(J) = DUMMY(J)\n+      END DO \n+      END SUBROUTINE FOO"}, {"sha": "512396455bd02e3957ba787756ab08f4906c1fae", "filename": "gcc/testsuite/gfortran.dg/init_flag_9.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_9.f90?ref=068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+! { dg-options \"-finit-character=89\" }\n+!\n+! PR fortran/51800\n+!\n+\n+subroutine foo(n)\n+  character(len=n) :: str\n+!  print *, str\n+  if (str /= repeat ('Y', n)) call abort()\n+end subroutine foo\n+\n+call foo(3)\n+call foo(10)\n+end"}]}