{"sha": "d57f1617211f3309887c6ee18fca97ea7029ebc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3ZjE2MTcyMTFmMzMwOTg4N2M2ZWUxOGZjYTk3ZWE3MDI5ZWJjNw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2004-06-10T21:06:07Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2004-06-10T21:06:07Z"}, "message": "re PR target/15653 (Gcc 3.4 ICE on valid code)\n\n2004-06-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/15653\n\t* haifa-sched.c (schedule_block): Finish cycle after issuing asm\n\tinsn.\n\nFrom-SVN: r82942", "tree": {"sha": "82e7ddb63b466a4273220496cb85c8b9ec5c360e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82e7ddb63b466a4273220496cb85c8b9ec5c360e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d57f1617211f3309887c6ee18fca97ea7029ebc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57f1617211f3309887c6ee18fca97ea7029ebc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d57f1617211f3309887c6ee18fca97ea7029ebc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57f1617211f3309887c6ee18fca97ea7029ebc7/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "322afd16ae583cc9c71d4177ce8318307a7a568a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322afd16ae583cc9c71d4177ce8318307a7a568a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/322afd16ae583cc9c71d4177ce8318307a7a568a"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "6a1b4db0d09406b96a2fa6022248f97a0275dac9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d57f1617211f3309887c6ee18fca97ea7029ebc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d57f1617211f3309887c6ee18fca97ea7029ebc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d57f1617211f3309887c6ee18fca97ea7029ebc7", "patch": "@@ -1,3 +1,9 @@\n+2004-06-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/15653\n+\t* haifa-sched.c (schedule_block): Finish cycle after issuing asm\n+\tinsn.\n+\n 2004-06-10  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR web/15263"}, {"sha": "033aaae17579c0e2d81ff767ca960b3cca8f7da1", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d57f1617211f3309887c6ee18fca97ea7029ebc7/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d57f1617211f3309887c6ee18fca97ea7029ebc7/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=d57f1617211f3309887c6ee18fca97ea7029ebc7", "patch": "@@ -2378,6 +2378,7 @@ schedule_block (int b, int rgn_n_insns)\n \t{\n \t  rtx insn;\n \t  int cost;\n+\t  bool asm_p = false;\n \n \t  if (sched_verbose >= 2)\n \t    {\n@@ -2435,9 +2436,9 @@ schedule_block (int b, int rgn_n_insns)\n \t      memcpy (temp_state, curr_state, dfa_state_size);\n \t      if (recog_memoized (insn) < 0)\n \t\t{\n-\t\t  if (!first_cycle_insn_p\n-\t\t      && (GET_CODE (PATTERN (insn)) == ASM_INPUT\n-\t\t\t  || asm_noperands (PATTERN (insn)) >= 0))\n+\t\t  asm_p = (GET_CODE (PATTERN (insn)) == ASM_INPUT\n+\t\t\t   || asm_noperands (PATTERN (insn)) >= 0);\n+\t\t  if (!first_cycle_insn_p && asm_p)\n \t\t    /* This is asm insn which is tryed to be issued on the\n \t\t       cycle not first.  Issue it on the next cycle.  */\n \t\t    cost = 1;\n@@ -2552,6 +2553,10 @@ schedule_block (int b, int rgn_n_insns)\n \t    can_issue_more--;\n \n \t  advance = schedule_insn (insn, &ready, clock_var);\n+\n+\t  /* After issuing an asm insn we should start a new cycle.  */\n+\t  if (advance == 0 && asm_p)\n+\t    advance = 1;\n \t  if (advance != 0)\n \t    break;\n "}]}