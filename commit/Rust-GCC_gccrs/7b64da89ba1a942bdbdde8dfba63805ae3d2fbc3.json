{"sha": "7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I2NGRhODliYTFhOTQyYmRiZGRlOGRmYmE2MzgwNWFlM2QyZmJjMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-12-12T10:53:05Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-12-12T10:53:05Z"}, "message": "(arm_gen_constant, case IOR,XOR): Don't invert a constant if loading\nit into a temporary.\n\nFrom-SVN: r13290", "tree": {"sha": "c7815837ada8a990ebecd62d6a0f613ed2f02637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7815837ada8a990ebecd62d6a0f613ed2f02637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3/comments", "author": null, "committer": null, "parents": [{"sha": "89418a92574448338464cb3503942a29a10e3eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89418a92574448338464cb3503942a29a10e3eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89418a92574448338464cb3503942a29a10e3eb8"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "fb4705cf40546910dbb35b31237049e6b4daa03f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "patch": "@@ -701,8 +701,8 @@ arm_gen_constant (code, mode, val, target, source, subtargets, generate)\n \n     case IOR:\n     case XOR:\n-      /* If we have IOR or XOR, and the inverse of the constant can be loaded\n-\t in a single instruction, and we can find a temporary to put it in,\n+      /* If we have IOR or XOR, and the constant can be loaded in a\n+\t single instruction, and we can find a temporary to put it in,\n \t then this can be done in two instructions instead of 3-4.  */\n       if (subtargets\n \t  || (reload_completed && ! reg_mentioned_p (target, source)))\n@@ -713,8 +713,7 @@ arm_gen_constant (code, mode, val, target, source, subtargets, generate)\n \t\t{\n \t\t  rtx sub = subtargets ? gen_reg_rtx (mode) : target;\n \n-\t\t  emit_insn (gen_rtx (SET, VOIDmode, sub,\n-\t\t\t\t      GEN_INT (ARM_SIGN_EXTEND (~ val))));\n+\t\t  emit_insn (gen_rtx (SET, VOIDmode, sub, GEN_INT (val)));\n \t\t  emit_insn (gen_rtx (SET, VOIDmode, target, \n \t\t\t\t      gen_rtx (code, mode, source, sub)));\n \t\t}"}]}