{"sha": "1adfc03bfe5852370d96336666abfbec6e40060e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFkZmMwM2JmZTU4NTIzNzBkOTYzMzY2NjZhYmZiZWM2ZTQwMDYwZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-07-30T17:38:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-30T17:38:04Z"}, "message": "exp_ch9.adb: Minor reformatting\n\n2008-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb: Minor reformatting\n\nFrom-SVN: r138328", "tree": {"sha": "f089af94a00b55cf9ca8006a95f1c3bbb64b429e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f089af94a00b55cf9ca8006a95f1c3bbb64b429e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1adfc03bfe5852370d96336666abfbec6e40060e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1adfc03bfe5852370d96336666abfbec6e40060e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1adfc03bfe5852370d96336666abfbec6e40060e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1adfc03bfe5852370d96336666abfbec6e40060e/comments", "author": null, "committer": null, "parents": [{"sha": "35596784bce48f0115713211d8a50a8fcbf5765d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35596784bce48f0115713211d8a50a8fcbf5765d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35596784bce48f0115713211d8a50a8fcbf5765d"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "574d01f0ac83adaf4228d570cf141e9bd7428c5d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1adfc03bfe5852370d96336666abfbec6e40060e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1adfc03bfe5852370d96336666abfbec6e40060e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=1adfc03bfe5852370d96336666abfbec6e40060e", "patch": "@@ -1661,26 +1661,26 @@ package body Exp_Ch9 is\n             if Ekind (Subp_Id) = E_Function then\n                return\n                  Make_Subprogram_Body (Loc,\n-                   Specification => Body_Spec,\n-                   Declarations => Empty_List,\n+                   Specification              => Body_Spec,\n+                   Declarations               => Empty_List,\n                    Handled_Statement_Sequence =>\n                      Make_Handled_Sequence_Of_Statements (Loc,\n                        Statements => New_List (\n                          Make_Simple_Return_Statement (Loc,\n                            Make_Function_Call (Loc,\n-                             Name => Nam,\n+                             Name                   => Nam,\n                              Parameter_Associations => Actuals)))));\n \n             else\n                return\n                  Make_Subprogram_Body (Loc,\n-                   Specification => Body_Spec,\n-                   Declarations => Empty_List,\n+                   Specification              => Body_Spec,\n+                   Declarations               => Empty_List,\n                    Handled_Statement_Sequence =>\n                      Make_Handled_Sequence_Of_Statements (Loc,\n                        Statements => New_List (\n                          Make_Procedure_Call_Statement (Loc,\n-                           Name => Nam,\n+                           Name                   => Nam,\n                            Parameter_Associations => Actuals))));\n             end if;\n          end;\n@@ -1860,11 +1860,10 @@ package body Exp_Ch9 is\n             declare\n                Obj_Param : constant Node_Id :=\n                              First (Parameter_Specifications (Iface_Op_Spec));\n-\n             begin\n                if not Out_Present (Obj_Param)\n                  and then Nkind (Parameter_Type (Obj_Param)) /=\n-                            N_Access_Definition\n+                                                         N_Access_Definition\n                then\n                   return False;\n                end if;\n@@ -2044,10 +2043,11 @@ package body Exp_Ch9 is\n             Obj_Param :=\n               Make_Parameter_Specification (Loc,\n                 Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, Name_uO),\n-                In_Present  => In_Present  (First_Param),\n-                Out_Present => Out_Present (First_Param),\n-                Parameter_Type => Obj_Param_Typ);\n+                  Make_Defining_Identifier (Loc,\n+                    Chars => Name_uO),\n+                In_Present          => In_Present  (First_Param),\n+                Out_Present         => Out_Present (First_Param),\n+                Parameter_Type      => Obj_Param_Typ);\n \n          --  If we are dealing with a primitive declared between two views,\n          --  create a default parameter.\n@@ -2069,14 +2069,14 @@ package body Exp_Ch9 is\n          if Ekind (Subp_Id) = E_Function then\n             return\n               Make_Function_Specification (Loc,\n-                Defining_Unit_Name => Wrapper_Id,\n+                Defining_Unit_Name       => Wrapper_Id,\n                 Parameter_Specifications => New_Formals,\n-                Result_Definition =>\n+                Result_Definition        =>\n                   New_Copy (Result_Definition (Parent (Subp_Id))));\n          else\n             return\n               Make_Procedure_Specification (Loc,\n-                Defining_Unit_Name => Wrapper_Id,\n+                Defining_Unit_Name       => Wrapper_Id,\n                 Parameter_Specifications => New_Formals);\n          end if;\n       end;\n@@ -11385,7 +11385,7 @@ package body Exp_Ch9 is\n    begin\n       return\n         (Ekind (Id) = E_Function or else Ekind (Id) = E_Procedure)\n-           and then Is_Private_Primitive (Id);\n+          and then Is_Private_Primitive (Id);\n    end Is_Private_Primitive_Subprogram;\n \n    ------------------"}]}