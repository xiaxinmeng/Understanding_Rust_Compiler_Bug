{"sha": "3fbd5c2cfd1abfe548156e87901c9c1802566c06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZiZDVjMmNmZDFhYmZlNTQ4MTU2ZTg3OTAxYzljMTgwMjU2NmMwNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-10-26T13:33:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-10-26T13:33:07Z"}, "message": "* stmt.c (expand_asm_operands): Accept `=' or `+' at any position.\n\nFrom-SVN: r23356", "tree": {"sha": "c09ae6f0110582acadb55c81214522cbf8adbcf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c09ae6f0110582acadb55c81214522cbf8adbcf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fbd5c2cfd1abfe548156e87901c9c1802566c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fbd5c2cfd1abfe548156e87901c9c1802566c06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fbd5c2cfd1abfe548156e87901c9c1802566c06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fbd5c2cfd1abfe548156e87901c9c1802566c06/comments", "author": null, "committer": null, "parents": [{"sha": "386c8529ddcd9d50f52ff12eec084dee39a6eb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386c8529ddcd9d50f52ff12eec084dee39a6eb1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386c8529ddcd9d50f52ff12eec084dee39a6eb1d"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "f7265a61294401e133aad3da971bb151b3735878", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbd5c2cfd1abfe548156e87901c9c1802566c06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbd5c2cfd1abfe548156e87901c9c1802566c06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fbd5c2cfd1abfe548156e87901c9c1802566c06", "patch": "@@ -1,3 +1,7 @@\n+Mon Oct 26 13:32:31 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* stmt.c (expand_asm_operands): Accept `=' or `+' at any position.\n+\n Mon Oct 26 12:53:14 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* tm.texi (ASM_OUTPUT_MAX_SKIP_ALIGN): Document."}, {"sha": "33702dbecf3172870ba985557a427d67cfc195aa", "filename": "gcc/stmt.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbd5c2cfd1abfe548156e87901c9c1802566c06/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbd5c2cfd1abfe548156e87901c9c1802566c06/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3fbd5c2cfd1abfe548156e87901c9c1802566c06", "patch": "@@ -1230,6 +1230,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n       tree val = TREE_VALUE (tail);\n       tree type = TREE_TYPE (val);\n       char *constraint;\n+      char *p;\n       int c_len;\n       int j;\n       int is_inout = 0;\n@@ -1247,13 +1248,31 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n       c_len = TREE_STRING_LENGTH (TREE_PURPOSE (tail)) - 1;\n       constraint = TREE_STRING_POINTER (TREE_PURPOSE (tail));\n \n-      if (c_len == 0\n-\t  || (constraint[0] != '=' && constraint[0] != '+'))\n+      /* Allow the `=' or `+' to not be at the beginning of the string,\n+\t since it wasn't explicitly documented that way, and there is a\n+\t large body of code that puts it last.  Swap the character to\n+\t the front, so as not to uglify any place else.  */\n+      switch (c_len)\n \t{\n+\tdefault:\n+\t  if ((p = strchr (constraint, '=')) != NULL)\n+\t    break;\n+\t  if ((p = strchr (constraint, '+')) != NULL)\n+\t    break;\n+\tcase 0:\n \t  error (\"output operand constraint lacks `='\");\n \t  return;\n \t}\n \n+      if (p != constraint)\n+\t{\n+\t  j = *p;\n+\t  bcopy (constraint, constraint+1, p-constraint);\n+\t  *constraint = j;\n+\n+\t  warning (\"output constraint `%c' for operand %d is not at the beginning\", j, i);\n+\t}\n+\n       is_inout = constraint[0] == '+';\n       /* Replace '+' with '='.  */\n       constraint[0] = '=';"}]}