{"sha": "b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgwMmFlNWM2ZmVjY2ZmYWE5ODc4NWIzYTRmM2U3ZWVjZDA4OWIxMw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2013-03-27T21:54:50Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-03-27T21:54:50Z"}, "message": "config.build: Add support for cygwin x64 target.\n\n        * config.build: Add support for cygwin x64 target.\n        * config.gcc: Likewise.\n        * config.host: Likewise.\n        * configure.ac: Likewise\n        * configure: Regenerated.\n\nFrom-SVN: r197171", "tree": {"sha": "b427cd629e6eecab8c62e4b8f3588776b007c4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b427cd629e6eecab8c62e4b8f3588776b007c4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/comments", "author": null, "committer": null, "parents": [{"sha": "8fecb5614a8806df1bea0c9e99a93d28db145823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fecb5614a8806df1bea0c9e99a93d28db145823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fecb5614a8806df1bea0c9e99a93d28db145823"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "cd2a415818e3c823c58df5bc1fb511d1aa096e4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -1,3 +1,11 @@\n+2013-03-27  Kai Tietz  <ktietz@redhat.com>\n+\n+        * config.build: Add support for cygwin x64 target.\n+        * config.gcc: Likewise.\n+        * config.host: Likewise.\n+        * configure.ac: Likewise\n+        * configure: Regenerated.\n+\n 2013-03-27 Kai Tietz  <ktietz@redhat.com>\n \n \t* config/i386/cygwin-stdint.h: Add support for cygwin x64 target."}, {"sha": "12d52480f103c11c69800aba3636539f855909d8", "filename": "gcc/config.build", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.build", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.build", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.build?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -60,7 +60,7 @@ case $build in\n     # IBM 360/370/390 Architecture\n     build_xm_defines='FATAL_EXIT_CODE=12'\n     ;;\n-  i[34567]86-*-cygwin* )\n+  i[34567]86-*-cygwin* | x86_64-*-cygwin* )\n     build_xm_file=i386/xm-cygwin.h\n     build_exeext=.exe\n     ;;"}, {"sha": "e51db91478c74213059ac1d680260cd663bda2fc", "filename": "gcc/config.gcc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -1456,6 +1456,22 @@ i[34567]86-*-cygwin*)\n \tfi\n \tuse_gcc_stdint=wrap\n \t;;\n+x86_64-*-cygwin*)\n+\tneed_64bit_isa=yes\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h i386/cygwin-w64.h i386/cygwin-stdint.h\"\n+\txm_file=i386/xm-cygwin.h\n+\ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc i386/t-cygwin-w64\"\n+\ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n+\textra_options=\"${extra_options} i386/cygming.opt\"\n+\textra_objs=\"winnt.o winnt-stubs.o\"\n+\tc_target_objs=\"${c_target_objs} msformat-c.o\"\n+\tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\"\n+\tif test x$enable_threads = xyes; then\n+\t\tthread_file='posix'\n+\tfi\n+\tuse_gcc_stdint=wrap\n+\ttm_defines=\"${tm_defines} TARGET_CYGWIN64=1\"\n+\t;;\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h\"\n \txm_file=i386/xm-mingw32.h"}, {"sha": "9c2a771e911847909002974afda02084acad47c9", "filename": "gcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -214,7 +214,7 @@ case ${host} in\n         ;;\n     esac\n     ;;\n-  i[34567]86-*-cygwin*)\n+  i[34567]86-*-cygwin* | x86_64-*-cygwin*)\n     host_xm_file=i386/xm-cygwin.h\n     out_host_hook_obj=host-cygwin.o\n     host_xmake_file=\"${host_xmake_file} i386/x-cygwin\""}, {"sha": "b8389066859c9e58a8366a8a305bec45c258c416", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -4893,7 +4893,9 @@ case \"${target}\" in\n     hppa*64*-*-hpux*)\n \t# PIC is the default for 64-bit PA HP-UX.\n \t;;\n-    i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)\n+    i[34567]86-*-cygwin* | x86_64-*-cygwin*)\n+\t;;\n+    i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t;;\n     i[34567]86-*-interix[3-9]*)\n \t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n@@ -7079,7 +7081,7 @@ else\n     powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux* | s390*-*-linux* | \\\n     i?86*-*-gnu* | \\\n     i?86*-*-mingw* | x86_64*-*-mingw* | \\\n-    i?86*-*-cygwin*)\n+    i?86*-*-cygwin* | x86_64*-*-cygwin*)\n       enable_decimal_float=yes\n       ;;\n     *)\n@@ -24276,7 +24278,7 @@ fi\n \t# wrappers to aid in interposing and redirecting operators new, delete,\n \t# etc., as per n2800 #17.6.4.6 [replacement.functions].  Check if we\n \t# are configuring for a version of Cygwin that exports the wrappers.\n-\tif test x$host = x$target; then\n+\tif test x$host = x$target && test x$host_cpu = xi686; then\n \t  ac_fn_c_check_func \"$LINENO\" \"__wrap__Znaj\" \"ac_cv_func___wrap__Znaj\"\n if test \"x$ac_cv_func___wrap__Znaj\" = x\"\"yes; then :\n   gcc_ac_cygwin_dll_wrappers=yes"}, {"sha": "068c66ae9a3ea9c9098b9a7d38696c4edcdefff0", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b802ae5c6feccffaa98785b3a4f3e7eecd089b13/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b802ae5c6feccffaa98785b3a4f3e7eecd089b13", "patch": "@@ -3624,7 +3624,7 @@ changequote([,])dnl\n \t# wrappers to aid in interposing and redirecting operators new, delete,\n \t# etc., as per n2800 #17.6.4.6 [replacement.functions].  Check if we\n \t# are configuring for a version of Cygwin that exports the wrappers.\n-\tif test x$host = x$target; then\n+\tif test x$host = x$target && test x$host_cpu = xi686; then\n \t  AC_CHECK_FUNC([__wrap__Znaj],[gcc_ac_cygwin_dll_wrappers=yes],[gcc_ac_cygwin_dll_wrappers=no])\n \telse\n \t  # Can't check presence of libc functions during cross-compile, so"}]}