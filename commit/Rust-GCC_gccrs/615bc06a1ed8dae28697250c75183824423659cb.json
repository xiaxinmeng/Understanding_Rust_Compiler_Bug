{"sha": "615bc06a1ed8dae28697250c75183824423659cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE1YmMwNmExZWQ4ZGFlMjg2OTcyNTBjNzUxODM4MjQ0MjM2NTljYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-29T18:28:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-29T18:28:44Z"}, "message": "tree-ssa-ccp.c (ccp_fold): Return immediately after calling fold_unary and fold_binary.\n\n\t* tree-ssa-ccp.c (ccp_fold): Return immediately after calling\n\tfold_unary and fold_binary.\n\nFrom-SVN: r100326", "tree": {"sha": "5ba8ee17cf19ab92be34d48f223a755255a48115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ba8ee17cf19ab92be34d48f223a755255a48115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/615bc06a1ed8dae28697250c75183824423659cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615bc06a1ed8dae28697250c75183824423659cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615bc06a1ed8dae28697250c75183824423659cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615bc06a1ed8dae28697250c75183824423659cb/comments", "author": null, "committer": null, "parents": [{"sha": "f84d510d21d5c36219041be19f651dad4087939c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84d510d21d5c36219041be19f651dad4087939c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84d510d21d5c36219041be19f651dad4087939c"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "bb4a382cf5aadd1c26fc8742f26a034968e5cd5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615bc06a1ed8dae28697250c75183824423659cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615bc06a1ed8dae28697250c75183824423659cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=615bc06a1ed8dae28697250c75183824423659cb", "patch": "@@ -1,3 +1,8 @@\n+2005-05-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-ssa-ccp.c (ccp_fold): Return immediately after calling\n+\tfold_unary and fold_binary.\n+\n 2005-05-29  Roger Sayle  <roger@eyesopen.com>\n \n \t* reg-stack.c (propagate_stack): Always copy the source stack to"}, {"sha": "f3db346bf6bdc10b17ee4b5609e2ca421792d645", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615bc06a1ed8dae28697250c75183824423659cb/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615bc06a1ed8dae28697250c75183824423659cb/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=615bc06a1ed8dae28697250c75183824423659cb", "patch": "@@ -849,12 +849,7 @@ ccp_fold (tree stmt)\n \t    op0 = get_value (op0, true)->value;\n \t}\n \n-      retval = fold_unary (code, TREE_TYPE (rhs), op0);\n-\n-      /* If we folded, but did not create an invariant, then we can not\n-\t use this expression.  */\n-      if (retval && ! is_gimple_min_invariant (retval))\n-\treturn NULL;\n+      return fold_unary (code, TREE_TYPE (rhs), op0);\n     }\n \n   /* Binary and comparison operators.  We know one or both of the\n@@ -885,12 +880,7 @@ ccp_fold (tree stmt)\n \t    op1 = val->value;\n \t}\n \n-      retval = fold_binary (code, TREE_TYPE (rhs), op0, op1);\n-\n-      /* If we folded, but did not create an invariant, then we can not\n-\t use this expression.  */\n-      if (retval && ! is_gimple_min_invariant (retval))\n-\treturn NULL;\n+      return fold_binary (code, TREE_TYPE (rhs), op0, op1);\n     }\n \n   /* We may be able to fold away calls to builtin functions if their"}]}