{"sha": "53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkZWRlMTVkZTU4NDA1NmViZjZlYjRmOGQ1N2FhMzY1ZDljMGU3Yg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-09-03T18:38:20Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-09-03T18:38:20Z"}, "message": "simplify.c (gfc_simplify_modulo): Re-arrange code to test whether 'P' is zero and issue an error if it is.\n\n2018-09-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\t* simplify.c (gfc_simplify_modulo): Re-arrange code to test whether\n\t'P' is zero and issue an error if it is.\n\t* gfortran.dg/modulo_check: New test.\n\nFrom-SVN: r264070", "tree": {"sha": "70f8bd51ec0da448da82c87376abc014eafe0de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70f8bd51ec0da448da82c87376abc014eafe0de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/comments", "author": null, "committer": null, "parents": [{"sha": "a5e8b0607431fdefa0dba2bcf477a1695ac5d227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e8b0607431fdefa0dba2bcf477a1695ac5d227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e8b0607431fdefa0dba2bcf477a1695ac5d227"}], "stats": {"total": 78, "additions": 49, "deletions": 29}, "files": [{"sha": "7cfb94ee1152ac9d5061cfd58d67d40e46dd1bb1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "patch": "@@ -1,3 +1,8 @@\n+2018-09-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* simplify.c (gfc_simplify_modulo): Re-arrange code to test whether\n+\t'P' is zero and issue an error if it is.\n+\n 2018-08-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/86328"}, {"sha": "d35bbbaaa1b3d35bd38822c985fa455f25d08669", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 32, "deletions": 29, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "patch": "@@ -5525,54 +5525,57 @@ gfc_simplify_modulo (gfc_expr *a, gfc_expr *p)\n   gfc_expr *result;\n   int kind;\n \n-  if (a->expr_type != EXPR_CONSTANT || p->expr_type != EXPR_CONSTANT)\n+  /* First check p.  */\n+  if (p->expr_type != EXPR_CONSTANT)\n     return NULL;\n \n-  kind = a->ts.kind > p->ts.kind ? a->ts.kind : p->ts.kind;\n-  result = gfc_get_constant_expr (a->ts.type, kind, &a->where);\n-\n-  switch (a->ts.type)\n+  /* p shall not be 0.  */\n+  switch (p->ts.type)\n     {\n       case BT_INTEGER:\n \tif (mpz_cmp_ui (p->value.integer, 0) == 0)\n \t  {\n-\t    /* Result is processor-dependent. This processor just opts\n-\t      to not handle it at all.  */\n-\t    gfc_error (\"Second argument of MODULO at %L is zero\", &a->where);\n-\t    gfc_free_expr (result);\n+\t    gfc_error (\"Argument %qs of MODULO at %L shall not be zero\",\n+\t\t\t\"P\", &p->where);\n \t    return &gfc_bad_expr;\n \t  }\n-\tmpz_fdiv_r (result->value.integer, a->value.integer, p->value.integer);\n-\n \tbreak;\n-\n       case BT_REAL:\n \tif (mpfr_cmp_ui (p->value.real, 0) == 0)\n \t  {\n-\t    /* Result is processor-dependent.  */\n-\t    gfc_error (\"Second argument of MODULO at %L is zero\", &p->where);\n-\t    gfc_free_expr (result);\n+\t    gfc_error (\"Argument %qs of MODULO at %L shall not be zero\",\n+\t\t\t\"P\", &p->where);\n \t    return &gfc_bad_expr;\n \t  }\n-\n-\tgfc_set_model_kind (kind);\n-\tmpfr_fmod (result->value.real, a->value.real, p->value.real,\n-\t\t   GFC_RND_MODE);\n-\tif (mpfr_cmp_ui (result->value.real, 0) != 0)\n-\t  {\n-\t    if (mpfr_signbit (a->value.real) != mpfr_signbit (p->value.real))\n-\t      mpfr_add (result->value.real, result->value.real, p->value.real,\n-\t\t\tGFC_RND_MODE);\n-\t  }\n-\telse\n-\t  mpfr_copysign (result->value.real, result->value.real,\n-\t\t\t p->value.real, GFC_RND_MODE);\n \tbreak;\n-\n       default:\n \tgfc_internal_error (\"gfc_simplify_modulo(): Bad arguments\");\n     }\n \n+  if (a->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  kind = a->ts.kind > p->ts.kind ? a->ts.kind : p->ts.kind;\n+  result = gfc_get_constant_expr (a->ts.type, kind, &a->where);\n+\n+  if (a->ts.type == BT_INTEGER)\n+\tmpz_fdiv_r (result->value.integer, a->value.integer, p->value.integer);\n+  else\n+    {\n+      gfc_set_model_kind (kind);\n+      mpfr_fmod (result->value.real, a->value.real, p->value.real,\n+                 GFC_RND_MODE);\n+      if (mpfr_cmp_ui (result->value.real, 0) != 0)\n+        {\n+          if (mpfr_signbit (a->value.real) != mpfr_signbit (p->value.real))\n+            mpfr_add (result->value.real, result->value.real, p->value.real,\n+                      GFC_RND_MODE);\n+\t    }\n+\t  else\n+        mpfr_copysign (result->value.real, result->value.real,\n+                       p->value.real, GFC_RND_MODE);\n+    }\n+\n   return range_check (result, \"MODULO\");\n }\n "}, {"sha": "436b4ab854488e93fb9b264fce9928ea3155ea60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "patch": "@@ -1,3 +1,7 @@\n+2018-09-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* gfortran.dg/modulo_check: New test.\n+\n 2018-09-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87177"}, {"sha": "8819a2f8e4e9e3be48dada6bece5dbab5241a4a3", "filename": "gcc/testsuite/gfortran.dg/modulo_check.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodulo_check.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dede15de584056ebf6eb4f8d57aa365d9c0e7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodulo_check.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodulo_check.f90?ref=53dede15de584056ebf6eb4f8d57aa365d9c0e7b", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! Test checks on modulo with p == 0\n+program p\n+   logical :: a(2) = (modulo([2,3],0) == 0)     ! { dg-error \"shall not be zero\" }\n+   integer :: b = count(modulo([2,3],0) == 0)   ! { dg-error \"shall not be zero\" }\n+   integer :: c = all(modulo([2,3],0) == 0)     ! { dg-error \"shall not be zero\" }\n+   integer :: d = any(modulo([2,3],0) == 0)     ! { dg-error \"shall not be zero\" }\n+end program"}]}