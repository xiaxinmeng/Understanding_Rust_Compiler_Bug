{"sha": "6a391e06f953c3390b14020d8cacb6d55f81b2b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzOTFlMDZmOTUzYzMzOTBiMTQwMjBkOGNhY2I2ZDU1ZjgxYjJiOQ==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-05-28T09:28:30Z"}, "committer": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-07-13T12:49:21Z"}, "message": "doc: Clarify __builtin_return_address [PR94891]\n\nThe expected semantics and valid usage of __builtin_return_address is\nnot clear since it exposes implementation internals that are normally\nnot meaningful to portable c code.\n\nThis documentation change tries to clarify the semantics in case the\nreturn address is stored in a mangled form. This affects AArch64 when\npointer authentication is used for the return address signing (i.e.\n-mbranch-protection=pac-ret).\n\n2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n\ngcc/ChangeLog:\n\n\tPR target/94891\n\t* doc/extend.texi: Update the text for  __builtin_return_address.", "tree": {"sha": "d878d8aa94ea53ab4e4896c433f15cbff427f3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d878d8aa94ea53ab4e4896c433f15cbff427f3ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a391e06f953c3390b14020d8cacb6d55f81b2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a391e06f953c3390b14020d8cacb6d55f81b2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a391e06f953c3390b14020d8cacb6d55f81b2b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a391e06f953c3390b14020d8cacb6d55f81b2b9/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b097c7a27fb0796b2653a1d003cbf6b7a69d8961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b097c7a27fb0796b2653a1d003cbf6b7a69d8961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b097c7a27fb0796b2653a1d003cbf6b7a69d8961"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "0fb7e27d9ce06dbf34530808ccb2f0ee541dc4d5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a391e06f953c3390b14020d8cacb6d55f81b2b9/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a391e06f953c3390b14020d8cacb6d55f81b2b9/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6a391e06f953c3390b14020d8cacb6d55f81b2b9", "patch": "@@ -11159,18 +11159,31 @@ The @var{level} argument must be a constant integer.\n \n On some machines it may be impossible to determine the return address of\n any function other than the current one; in such cases, or when the top\n-of the stack has been reached, this function returns @code{0} or a\n-random value.  In addition, @code{__builtin_frame_address} may be used\n+of the stack has been reached, this function returns an unspecified\n+value.  In addition, @code{__builtin_frame_address} may be used\n to determine if the top of the stack has been reached.\n \n Additional post-processing of the returned value may be needed, see\n @code{__builtin_extract_return_addr}.\n \n+The stored representation of the return address in memory may be different\n+from the address returned by @code{__builtin_return_address}.  For example,\n+on AArch64 the stored address may be mangled with return address signing\n+whereas the address returned by @code{__builtin_return_address} is not.\n+\n Calling this function with a nonzero argument can have unpredictable\n effects, including crashing the calling program.  As a result, calls\n that are considered unsafe are diagnosed when the @option{-Wframe-address}\n option is in effect.  Such calls should only be made in debugging\n situations.\n+\n+On targets where code addresses are representable as @code{void *},\n+@smallexample\n+void *addr = __builtin_extract_return_addr (__builtin_return_address (0));\n+@end smallexample\n+gives the code address where the current function would return.  For example,\n+such an address may be used with @code{dladdr} or other interfaces that work\n+with code addresses.\n @end deftypefn\n \n @deftypefn {Built-in Function} {void *} __builtin_extract_return_addr (void *@var{addr})"}]}