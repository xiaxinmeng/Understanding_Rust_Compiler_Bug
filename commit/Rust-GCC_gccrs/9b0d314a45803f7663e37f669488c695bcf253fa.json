{"sha": "9b0d314a45803f7663e37f669488c695bcf253fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwZDMxNGE0NTgwM2Y3NjYzZTM3ZjY2OTQ4OGM2OTViY2YyNTNmYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-05T14:50:27Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-05T14:50:27Z"}, "message": "Fix computation of precision.\n\n\t* graphite-clast-to-gimple.c (precision_for_value): Removed.\n\t(precision_for_interval): Removed.\n\t(gcc_type_for_interval): Use mpz_sizeinbase.\n\nFrom-SVN: r175860", "tree": {"sha": "f649f29ec8e18e7034c629d9eb4065c4b49a92ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f649f29ec8e18e7034c629d9eb4065c4b49a92ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b0d314a45803f7663e37f669488c695bcf253fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0d314a45803f7663e37f669488c695bcf253fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0d314a45803f7663e37f669488c695bcf253fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0d314a45803f7663e37f669488c695bcf253fa/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81d6d0802dd662e98d229b128f7cc5117e1e99d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d6d0802dd662e98d229b128f7cc5117e1e99d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d6d0802dd662e98d229b128f7cc5117e1e99d3"}], "stats": {"total": 84, "additions": 15, "deletions": 69}, "files": [{"sha": "d08e4a3cb754cdd85f0f4ade2cf2461836201ac9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0d314a45803f7663e37f669488c695bcf253fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0d314a45803f7663e37f669488c695bcf253fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b0d314a45803f7663e37f669488c695bcf253fa", "patch": "@@ -1,3 +1,9 @@\n+2011-07-05  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (precision_for_value): Removed.\n+\t(precision_for_interval): Removed.\n+\t(gcc_type_for_interval): Use mpz_sizeinbase.\n+\n 2011-07-05  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-ppl.h (value_max): Correct computation of max."}, {"sha": "6b17631e40853ba63d6793ef72c163ceebe5edf4", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 9, "deletions": 69, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0d314a45803f7663e37f669488c695bcf253fa/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0d314a45803f7663e37f669488c695bcf253fa/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=9b0d314a45803f7663e37f669488c695bcf253fa", "patch": "@@ -379,87 +379,27 @@ clast_to_gcc_expression (tree type, struct clast_expr *e,\n   return NULL_TREE;\n }\n \n-/* Return the precision needed to represent the value VAL.  */\n-\n-static int\n-precision_for_value (mpz_t val)\n-{\n-  mpz_t x, y, two;\n-  int precision;\n-\n-  mpz_init (x);\n-  mpz_init (y);\n-  mpz_init (two);\n-  mpz_set_si (x, 2);\n-  mpz_set (y, val);\n-  mpz_set_si (two, 2);\n-  precision = 1;\n-\n-  if (mpz_sgn (y) < 0)\n-    mpz_neg (y, y);\n-\n-  while (mpz_cmp (y, x) >= 0)\n-    {\n-      mpz_mul (x, x, two);\n-      precision++;\n-    }\n-\n-  mpz_clear (x);\n-  mpz_clear (y);\n-  mpz_clear (two);\n-\n-  return precision;\n-}\n-\n-/* Return the precision needed to represent the values between LOW and\n-   UP.  */\n-\n-static int\n-precision_for_interval (mpz_t low, mpz_t up)\n-{\n-  mpz_t diff;\n-  int precision;\n-\n-  gcc_assert (mpz_cmp (low, up) <= 0);\n-\n-  mpz_init (diff);\n-  mpz_sub (diff, up, low);\n-  precision = precision_for_value (diff);\n-  mpz_clear (diff);\n-\n-  return precision;\n-}\n-\n-/* Return a type that could represent the integer value VAL.  */\n+/* Return a type that could represent the values between V1 and V2.  */\n \n static tree\n-gcc_type_for_interval (mpz_t low, mpz_t up)\n+gcc_type_for_interval (mpz_t v1, mpz_t v2)\n {\n-  bool unsigned_p = true;\n-  int precision, prec_up, prec_int;\n+  bool unsigned_p;\n   tree type;\n   enum machine_mode mode;\n-\n-  gcc_assert (mpz_cmp (low, up) <= 0);\n-\n-  prec_up = precision_for_value (up);\n-  prec_int = precision_for_interval (low, up);\n-  precision = MAX (prec_up, prec_int);\n+  int precision = MAX (mpz_sizeinbase (v1, 2),\n+\t\t       mpz_sizeinbase (v2, 2));\n \n   if (precision > BITS_PER_WORD)\n     {\n       gloog_error = true;\n       return integer_type_node;\n     }\n \n-  if (mpz_sgn (low) <= 0)\n-    unsigned_p = false;\n-\n-  else if (precision < BITS_PER_WORD)\n-    {\n-      unsigned_p = false;\n-      precision++;\n-    }\n+  if (mpz_cmp (v1, v2) <= 0)\n+    unsigned_p = (mpz_sgn (v1) >= 0);\n+  else\n+    unsigned_p = (mpz_sgn (v2) >= 0);\n \n   mode = smallest_mode_for_size (precision, MODE_INT);\n   precision = GET_MODE_PRECISION (mode);"}]}