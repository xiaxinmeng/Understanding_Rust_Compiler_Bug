{"sha": "b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhODBjMGQyYmI3YmQ0YjdjYjZmYzBjNTZlYTcyM2EyZGQ4OTMxYw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-15T14:55:15Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-15T14:55:15Z"}, "message": "(assign_stack_temp): Compute size of slot after\nassign_stack_local has accounted for alignment.\n\nFrom-SVN: r8438", "tree": {"sha": "8a24cd572b095504765ffa323b5345c856740c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a24cd572b095504765ffa323b5345c856740c42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c/comments", "author": null, "committer": null, "parents": [{"sha": "ce3b28797522623ff8b6d1ae6aa30318a450a45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3b28797522623ff8b6d1ae6aa30318a450a45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3b28797522623ff8b6d1ae6aa30318a450a45c"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "1a206a9b4cf239c74e31d95f4cc4b6ddaa2b11ea", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b2a80c0d2bb7bd4b7cb6fc0c56ea723a2dd8931c", "patch": "@@ -856,11 +856,21 @@ assign_stack_temp (mode, size, keep)\n   /* If we still didn't find one, make a new temporary.  */\n   if (p == 0)\n     {\n+      int frame_offset_old = frame_offset;\n       p = (struct temp_slot *) oballoc (sizeof (struct temp_slot));\n-      p->size = size;\n       /* If the temp slot mode doesn't indicate the alignment,\n \t use the largest possible, so no one will be disappointed.  */\n       p->slot = assign_stack_local (mode, size, mode == BLKmode ? -1 : 0);\n+      /* The following slot size computation is necessary because we don't\n+\t know the actual size of the temporary slot until assign_stack_local\n+\t has performed all the frame alignment and size rounding for the\n+\t requested temporary.  Otherwise combine_temp_slots won't think that\n+\t adjacent slots really are adjacent.  */\n+#ifdef FRAME_GROWS_DOWNWARD\n+      p->size = frame_offset_old - frame_offset;\n+#else\n+      p->size = frame_offset - frame_offset_old;\n+#endif\n       p->address = 0;\n       p->next = temp_slots;\n       temp_slots = p;"}]}