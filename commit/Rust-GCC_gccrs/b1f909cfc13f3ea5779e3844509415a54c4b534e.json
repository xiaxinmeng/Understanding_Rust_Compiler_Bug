{"sha": "b1f909cfc13f3ea5779e3844509415a54c4b534e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFmOTA5Y2ZjMTNmM2VhNTc3OWUzODQ0NTA5NDE1YTU0YzRiNTM0ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-08-15T23:38:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:21Z"}, "message": "[Ada] Build support units for 128-bit integer types on 64-bit platforms\n\ngcc/ada/\n\n\t* Makefile.rtl (64-bit platforms): Add GNATRTL_128BIT_PAIRS to\n\tthe LIBGNAT_TARGET_PAIRS list and also GNATRTL_128BIT_OBJS to\n\tthe EXTRA_GNATRTL_NONTASKING_OBJS list.", "tree": {"sha": "540979a7c1cb31c8a3a0de231171e87f9a31adc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/540979a7c1cb31c8a3a0de231171e87f9a31adc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1f909cfc13f3ea5779e3844509415a54c4b534e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1f909cfc13f3ea5779e3844509415a54c4b534e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1f909cfc13f3ea5779e3844509415a54c4b534e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1f909cfc13f3ea5779e3844509415a54c4b534e/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1019e23137b0e05c0cae1959ded69cba9466f3b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1019e23137b0e05c0cae1959ded69cba9466f3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1019e23137b0e05c0cae1959ded69cba9466f3b5"}], "stats": {"total": 220, "additions": 160, "deletions": 60}, "files": [{"sha": "589ba68251d7b0ea7a2009733c4d2b137f0e91df", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 160, "deletions": 60, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1f909cfc13f3ea5779e3844509415a54c4b534e/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1f909cfc13f3ea5779e3844509415a54c4b534e/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=b1f909cfc13f3ea5779e3844509415a54c4b534e", "patch": "@@ -1060,6 +1060,11 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7% vxworks7spe\n     EXTRA_GNATRTL_NONTASKING_OBJS+=s-stchop.o\n   endif\n \n+  ifeq ($(strip $(filter-out powerpc64, $(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+    EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+  endif\n+\n   TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n \n   ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n@@ -1263,20 +1268,7 @@ endif\n # x86/x86_64 VxWorks\n ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(target_vendor) $(target_os))),)\n \n-  EH_MECHANISM=-gcc\n-\n-  VX=$(strip $(if $(filter vxworks7%, $(target_os)), vxworks7, vxworks))\n-  SVX=system-$(VX)\n-\n-  ifeq ($(strip $(filter-out x86_64, $(target_cpu))),)\n-     X86CPU=x86_64\n-     LIBGNAT_TARGET_PAIRS=$(X86_64_TARGET_PAIRS)\n-  else\n-     X86CPU=x86\n-     LIBGNAT_TARGET_PAIRS=$(X86_TARGET_PAIRS)\n-  endif\n-\n-  LIBGNAT_TARGET_PAIRS+= \\\n+  LIBGNAT_TARGET_PAIRS= \\\n   a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n   i-vxwork.ads<libgnat/i-vxwork__x86.ads \\\n   a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n@@ -1301,8 +1293,23 @@ ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(targ\n   g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n   $(ATOMICS_TARGET_PAIRS)\n \n+  VX=$(strip $(if $(filter vxworks7%, $(target_os)), vxworks7, vxworks))\n+  SVX=system-$(VX)\n+\n+  ifeq ($(strip $(filter-out x86_64, $(target_cpu))),)\n+     X86CPU=x86_64\n+     LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+     LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+     EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+  else\n+     X86CPU=x86\n+     LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+  endif\n+\n   TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n \n+  EH_MECHANISM=-gcc\n+\n   # The CPU setting for VxSim varies with the\n   # host (Windows or Linux)\n   # target (VxWorks6 or VxWorks7)\n@@ -1382,7 +1389,7 @@ ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(targ\n         endif\n       endif\n \n-      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n+      EXTRA_GNATRTL_NONTASKING_OBJS += i-vxwork.o i-vxwoio.o\n     endif\n   endif\n \n@@ -1406,12 +1413,37 @@ endif\n # ARM and Aarch64 VxWorks\n ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n \n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n+  a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n+  a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n+  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+\n   ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n     ARCH_STR=aarch64\n     VX=vxworks7\n     EH_MECHANISM=-gcc\n     SIGTRAMP_OBJ=sigtramp-vxworks.o\n-    LIBGNAT_TARGET_PAIRS += a-nallfl.ads<libgnat/a-nallfl__wraplf.ads\n+    LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS) \\\n+      a-nallfl.ads<libgnat/a-nallfl__wraplf.ads\n+    EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n   else\n     ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n       ARCH_STR=arm\n@@ -1429,31 +1461,9 @@ ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vend\n     endif\n   endif\n \n-  SVX=system-$(VX)\n+  LIBGNAT_TARGET_PAIRS += s-vxwork.ads<libgnarl/s-vxwork__$(ARCH_STR).ads\n \n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n-  a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n-  a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n-  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__$(ARCH_STR).ads \\\n-  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+  SVX=system-$(VX)\n \n   TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n \n@@ -1498,9 +1508,8 @@ ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vend\n     endif\n   endif\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o \\\n-    s-stchop.o\n-  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += i-vxwork.o i-vxwoio.o s-stchop.o\n+  EXTRA_GNATRTL_TASKING_OBJS += i-vxinco.o s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n@@ -1563,10 +1572,12 @@ ifeq ($(strip $(filter-out aarch64 %qnx,$(target_cpu) $(target_os))),)\n   g-soliop.ads<libgnat/g-soliop__qnx.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-qnx-aarch64.ads\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS = $(GNATRTL_128BIT_OBJS)\n   EXTRA_GNATRTL_TASKING_OBJS=s-qnx.o\n   EXTRA_LIBGNAT_OBJS+=sigtramp-qnx.o\n   EXTRA_LIBGNAT_SRCS+=sigtramp.h\n@@ -1579,7 +1590,7 @@ ifeq ($(strip $(filter-out aarch64 %qnx,$(target_cpu) $(target_os))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-# Sparc Solaris\n+# SPARC Solaris\n ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n@@ -1603,6 +1614,18 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(\n \n   EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n \n+  ifeq ($(strip $(filter-out sparc64 sparcv9,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/sparcv8plus)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/sparcv9)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n+\n   EH_MECHANISM=-gcc\n   THREADSLIB = -lposix4 -lthread\n   MISCLIB = -lposix4 -lnsl -lsocket\n@@ -1612,7 +1635,7 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-# x86 and x86-64 solaris\n+# x86 and x86-64 Solaris\n ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n@@ -1636,6 +1659,8 @@ ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n     ifeq ($(strip $(MULTISUBDIR)),/amd64)\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n     else\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n@@ -1647,6 +1672,8 @@ ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n     else\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n     endif\n   endif\n \n@@ -1682,6 +1709,8 @@ ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n \n   ifeq ($(strip $(MULTISUBDIR)),/64)\n     LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+    LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+    EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n   else\n     LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n   endif\n@@ -1779,8 +1808,13 @@ ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n   s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n   s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-freebsd.ads\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS = $(GNATRTL_128BIT_OBJS)\n+\n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EH_MECHANISM=-gcc\n@@ -1806,8 +1840,11 @@ ifeq ($(strip $(filter-out %aarch64 freebsd%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-freebsd.ads\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS = $(GNATRTL_128BIT_OBJS)\n+\n   GNATLIB_SHARED = gnatlib-shared-dual\n \n   EH_MECHANISM=-gcc\n@@ -1863,12 +1900,14 @@ ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)\n   $(TRASYM_DWARF_UNIX_PAIRS) \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(X86_64_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-freebsd.ads\n \n   GNATLIB_SHARED = gnatlib-shared-dual\n \n   EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n   EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n \n   EH_MECHANISM=-gcc\n   THREADSLIB= -lpthread\n@@ -1892,11 +1931,13 @@ ifeq ($(strip $(filter-out %86_64 dragonfly%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(X86_64_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-dragonfly-x86_64.ads\n \n   GNATLIB_SHARED = gnatlib-shared-dual\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n \n   EH_MECHANISM=-gcc\n   THREADSLIB= -lpthread\n@@ -1922,6 +1963,18 @@ ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n   system.ads<libgnat/system-linux-s390.ads\n \n+  ifeq ($(strip $(filter-out s390x,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/64)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n+\n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n@@ -2211,7 +2264,7 @@ endif\n \n # PowerPC and e500v2 Linux\n ifeq ($(strip $(filter-out powerpc% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n   a-exetim.ads<libgnarl/a-exetim__default.ads \\\n   a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n@@ -2223,21 +2276,30 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(target_cpu) $(target_os))),)\n   s-linux.ads<libgnarl/s-linux.ads \\\n   s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n   s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n   $(TRASYM_DWARF_UNIX_PAIRS) \\\n   s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<libgnat/system-linux-ppc.ads\n \n-  LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) \\\n-    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-    s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-    s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-    s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-    s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-    s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-    s-taspri.ads<libgnarl/s-taspri__posix.ads\n+  ifeq ($(strip $(filter-out powerpc64,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/64)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n@@ -2304,10 +2366,12 @@ ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n   s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-linux-arm.ads\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS = $(GNATRTL_128BIT_OBJS)\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n   THREADSLIB=-lpthread -lrt\n@@ -2316,7 +2380,7 @@ ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-# Sparc Linux\n+# SPARC Linux\n ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n@@ -2333,6 +2397,18 @@ ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n   system.ads<libgnat/system-linux-sparc.ads\n \n+  ifeq ($(strip $(filter-out sparc64 sparcv9,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/64)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n+\n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n@@ -2450,11 +2526,13 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(target_cpu) $(target_os))),)\n   s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-linux-ia64.ads\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJ\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n   THREADSLIB=-lpthread -lrt\n@@ -2479,9 +2557,11 @@ ifeq ($(strip $(filter-out ia64% hp hpux%,$(target_cpu) $(target_vendor) $(targe\n   $(TRASYM_DWARF_UNIX_PAIRS) \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-hpux-ia64.ads\n \n   EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n \n   MISCLIB=\n   EH_MECHANISM=-gcc\n@@ -2510,10 +2590,12 @@ ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n   s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  $(GNATRTL_128BIT_PAIRS) \\\n   system.ads<libgnat/system-linux-alpha.ads\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS = $(GNATRTL_128BIT_OBJS)\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   MISCLIB=\n@@ -2617,6 +2699,18 @@ ifeq ($(strip $(filter-out riscv% linux%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n   system.ads<libgnat/system-linux-riscv.ads\n \n+  ifeq ($(strip $(filter-out riscv64,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/lib32)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/lib64)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n+\n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n@@ -2650,11 +2744,13 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n     ifeq ($(strip $(MULTISUBDIR)),/x86_64)\n       SO_OPTS += -m64\n       LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n     else\n       LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n     endif\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+    EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n   endif\n \n   ifeq ($(strip $(filter-out %x86_64,$(target_cpu))),)\n@@ -2671,9 +2767,11 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n     else\n       LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n     endif\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+    EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n     EXTRA_GNATRTL_TASKING_OBJS=a-exetim.o\n   endif\n \n@@ -2707,8 +2805,10 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       s-intman.adb<libgnarl/s-intman__susv3.adb \\\n       s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n       $(ATOMICS_TARGET_PAIRS) \\\n-      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+      $(GNATRTL_128BIT_PAIRS)\n \n+    EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n     EXTRA_LIBGNAT_OBJS+=sigtramp-ios.o\n     EXTRA_LIBGNAT_SRCS+=sigtramp.h\n     LIBGNAT_TARGET_PAIRS += \\"}]}