{"sha": "8da3776f936b487f5bdf94f372890c3f13604021", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRhMzc3NmY5MzZiNDg3ZjViZGY5NGYzNzI4OTBjM2YxMzYwNDAyMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-05-27T11:43:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-27T11:43:17Z"}, "message": "trans.c (Call_to_gnu): Do not initialize the temporary created out of addressability concerns if...\n\n\t* gcc-interface/trans.c (Call_to_gnu): Do not initialize the temporary\n\tcreated out of addressability concerns if it's for the _Init parameter\n\tof an initialization procedure.\n\nFrom-SVN: r271659", "tree": {"sha": "e3cd18fc2893e5af81c0e85d4589d48a3a03cef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3cd18fc2893e5af81c0e85d4589d48a3a03cef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8da3776f936b487f5bdf94f372890c3f13604021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da3776f936b487f5bdf94f372890c3f13604021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da3776f936b487f5bdf94f372890c3f13604021", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da3776f936b487f5bdf94f372890c3f13604021/comments", "author": null, "committer": null, "parents": [{"sha": "b9778c45fc1cd361c3012e30aeb02b53cb3e531c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9778c45fc1cd361c3012e30aeb02b53cb3e531c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9778c45fc1cd361c3012e30aeb02b53cb3e531c"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "8c3e7fb88ae1b67252daa529ef2028a129fcd002", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da3776f936b487f5bdf94f372890c3f13604021/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da3776f936b487f5bdf94f372890c3f13604021/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8da3776f936b487f5bdf94f372890c3f13604021", "patch": "@@ -1,3 +1,9 @@\n+2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Call_to_gnu): Do not initialize the temporary\n+\tcreated out of addressability concerns if it's for the _Init parameter\n+\tof an initialization procedure.\n+\n 2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-builtin-types.def: New file."}, {"sha": "be9cbd4f6267c9d73b8dd8f078be6ac06421d853", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da3776f936b487f5bdf94f372890c3f13604021/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da3776f936b487f5bdf94f372890c3f13604021/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=8da3776f936b487f5bdf94f372890c3f13604021", "patch": "@@ -5313,13 +5313,23 @@ Call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n \t  /* Create an explicit temporary holding the copy.  */\n \t  if (atomic_p)\n \t    gnu_name = build_atomic_load (gnu_name, sync);\n-\t  gnu_temp\n-\t    = create_init_temporary (\"A\", gnu_name, &gnu_stmt, gnat_actual);\n \n-\t  /* But initialize it on the fly like for an implicit temporary as\n-\t     we aren't necessarily having a statement list.  */\n-\t  gnu_name = build_compound_expr (TREE_TYPE (gnu_name), gnu_stmt,\n-\t\t\t\t\t  gnu_temp);\n+\t  /* Do not initialize it for the _Init parameter of an initialization\n+\t     procedure since no data is meant to be passed in.  */\n+\t  if (Ekind (gnat_formal) == E_Out_Parameter\n+\t      && Is_Entity_Name (Name (gnat_node))\n+\t      && Is_Init_Proc (Entity (Name (gnat_node))))\n+\t    gnu_name = gnu_temp = create_temporary (\"A\", TREE_TYPE (gnu_name));\n+\n+\t  /* Initialize it on the fly like for an implicit temporary in the\n+\t     other cases, as we don't necessarily have a statement list.  */\n+\t  else\n+\t    {\n+\t      gnu_temp = create_init_temporary (\"A\", gnu_name, &gnu_stmt,\n+\t\t\t\t\t\tgnat_actual);\n+\t      gnu_name = build_compound_expr (TREE_TYPE (gnu_name), gnu_stmt,\n+\t\t\t\t\t      gnu_temp);\n+\t    }\n \n \t  /* Set up to move the copy back to the original if needed.  */\n \t  if (!in_param)"}]}