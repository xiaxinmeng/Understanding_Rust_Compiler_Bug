{"sha": "42924ed71f51fd6c33483ca202fc5a1ccff9b770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5MjRlZDcxZjUxZmQ2YzMzNDgzY2EyMDJmYzVhMWNjZmY5Yjc3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-29T21:06:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-29T21:06:18Z"}, "message": "re PR c++/34270 (ICE applying __decltype to ternary expression)\n\n\tPR c++/34270\n\t* tree.c (lvalue_p_1) <case COND_EXPR>: Handle x ?: y\n\tin templates.\n\t* typeck.c (is_bitfield_expr_with_lowered_type) <case COND_EXPR>:\n\tLikewise.\n\n\t* g++.dg/template/cond7.C: New test.\n\nFrom-SVN: r130520", "tree": {"sha": "db5bbe7937dfe1c59279606fdf0f8cc8c952cdb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db5bbe7937dfe1c59279606fdf0f8cc8c952cdb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42924ed71f51fd6c33483ca202fc5a1ccff9b770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42924ed71f51fd6c33483ca202fc5a1ccff9b770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42924ed71f51fd6c33483ca202fc5a1ccff9b770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42924ed71f51fd6c33483ca202fc5a1ccff9b770/comments", "author": null, "committer": null, "parents": [{"sha": "7a547b936c01964cfcc9543db0d86c008f7269da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a547b936c01964cfcc9543db0d86c008f7269da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a547b936c01964cfcc9543db0d86c008f7269da"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "5ff2fa330db38a4debd0b8ef8cffac0112d3ac84", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=42924ed71f51fd6c33483ca202fc5a1ccff9b770", "patch": "@@ -1,5 +1,11 @@\n 2007-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/34270\n+\t* tree.c (lvalue_p_1) <case COND_EXPR>: Handle x ?: y\n+\tin templates.\n+\t* typeck.c (is_bitfield_expr_with_lowered_type) <case COND_EXPR>:\n+\tLikewise.\n+\n \tPR c++/34267\n \tPR c++/34268\n \t* parser.c (cp_parser_decltype): Don't call finish_id_expression\n@@ -25,7 +31,7 @@\n \n 2007-11-25  Richard Guenther  <rguenther@suse.de>\n \n-\tdecl.c (poplevel): Use BLOCK_CHAIN.\n+\t* decl.c (poplevel): Use BLOCK_CHAIN.\n \n 2007-11-24  Ollie Wild  <aaw@google.com>\n "}, {"sha": "c885d0888780cd54103dfc23d992e50524f2bedf", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=42924ed71f51fd6c33483ca202fc5a1ccff9b770", "patch": "@@ -160,7 +160,9 @@ lvalue_p_1 (const_tree ref,\n       break;\n \n     case COND_EXPR:\n-      op1_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 1),\n+      op1_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 1)\n+\t\t\t\t    ? TREE_OPERAND (ref, 1)\n+\t\t\t\t    : TREE_OPERAND (ref, 0),\n \t\t\t\t    treat_class_rvalues_as_lvalues);\n       op2_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 2),\n \t\t\t\t    treat_class_rvalues_as_lvalues);"}, {"sha": "c43eb793584121dc3e3ccd6022eb886ae8fd8173", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=42924ed71f51fd6c33483ca202fc5a1ccff9b770", "patch": "@@ -1419,7 +1419,9 @@ is_bitfield_expr_with_lowered_type (const_tree exp)\n   switch (TREE_CODE (exp))\n     {\n     case COND_EXPR:\n-      if (!is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 1)))\n+      if (!is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 1)\n+\t\t\t\t\t       ? TREE_OPERAND (exp, 1)\n+\t\t\t\t\t       : TREE_OPERAND (exp, 0)))\n \treturn NULL_TREE;\n       return is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 2));\n "}, {"sha": "1a40211687223374228e3a5cf0933463f4f4ecb5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42924ed71f51fd6c33483ca202fc5a1ccff9b770", "patch": "@@ -1,5 +1,8 @@\n 2007-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/34270\n+\t* g++.dg/template/cond7.C: New test.\n+\n \tPR c++/34267\n \tPR c++/34268\n \t* g++.dg/cpp0x/decltype7.C: New test."}, {"sha": "ce1c77e593ba19a45bc3e3f494cfb7fedf3886f0", "filename": "gcc/testsuite/g++.dg/template/cond7.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42924ed71f51fd6c33483ca202fc5a1ccff9b770/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond7.C?ref=42924ed71f51fd6c33483ca202fc5a1ccff9b770", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/34270\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+void foo ()\n+{\n+  __typeof__ (0 ?: 0) x;\n+  __decltype (0 ?: 0) y;\n+}\n+\n+template<int> void bar ()\n+{\n+  __typeof__ (0 ?: 0) x;\n+  __decltype (0 ?: 0) y;\n+}"}]}