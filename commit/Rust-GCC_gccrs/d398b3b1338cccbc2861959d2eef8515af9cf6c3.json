{"sha": "d398b3b1338cccbc2861959d2eef8515af9cf6c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5OGIzYjEzMzhjY2NiYzI4NjE5NTlkMmVlZjg1MTVhZjljZjZjMw==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-03-22T07:42:38Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-03-22T07:42:38Z"}, "message": "(PREFERRED_RELOAD_CLASS): Only narrow MODE_FLOAT reloads from ALL_REGS to GENERAL_REGS.\n\n(PREFERRED_RELOAD_CLASS): Only narrow MODE_FLOAT reloads from ALL_REGS to\nGENERAL_REGS.\n(PREFERRED_OUTPUT_RELOAD_CLASS): Deleted.\n(INIT_EXPANDERS): New macro.\n\nFrom-SVN: r3828", "tree": {"sha": "ebe9ea91e048736441872250eac04c8560120954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe9ea91e048736441872250eac04c8560120954"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d398b3b1338cccbc2861959d2eef8515af9cf6c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d398b3b1338cccbc2861959d2eef8515af9cf6c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d398b3b1338cccbc2861959d2eef8515af9cf6c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d398b3b1338cccbc2861959d2eef8515af9cf6c3/comments", "author": null, "committer": null, "parents": [{"sha": "5e82e7bddbb58ea12883ecbe66f74137b076d676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e82e7bddbb58ea12883ecbe66f74137b076d676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e82e7bddbb58ea12883ecbe66f74137b076d676"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "f6d2bee352bb7383804d607678f3a148106e0e52", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d398b3b1338cccbc2861959d2eef8515af9cf6c3/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d398b3b1338cccbc2861959d2eef8515af9cf6c3/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d398b3b1338cccbc2861959d2eef8515af9cf6c3", "patch": "@@ -529,21 +529,16 @@ extern enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n    reloaded into floating registers (since no move-insn can do that)\n    and we ensure that QImodes aren't reloaded into the esi or edi reg.  */\n \n-/* Don't put float CONST_DOUBLE into fp regs.\n+/* Put float CONST_DOUBLE in the constant pool instead of fp regs.\n    QImode must go into class Q_REGS.\n-   MODE_INT must not go into FLOAT_REGS. */\n+   Narrow ALL_REGS to GENERAL_REGS.  This supports allowing movsf and\n+   movdf to do mem-to-mem moves through integer regs. */\n \n #define PREFERRED_RELOAD_CLASS(X,CLASS)\t\\\n   (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != VOIDmode ? NO_REGS\t\\\n    : GET_MODE (X) == QImode && ! reg_class_subset_p (CLASS, Q_REGS) ? Q_REGS \\\n-   : (FLOAT_CLASS_P (CLASS)\t\t\t\t\t\t\\\n-      && (GET_MODE (X) == VOIDmode\t\t\t\t\t\\\n-\t  || GET_MODE_CLASS (GET_MODE (X)) == MODE_INT)) ? GENERAL_REGS\t\\\n-   : (CLASS) == ALL_REGS ? GENERAL_REGS\t\t\t\t\t\\\n-   : (CLASS))\n-\n-#define PREFERRED_OUTPUT_RELOAD_CLASS(X,CLASS)\t\\\n-  ((CLASS) == ALL_REGS ? GENERAL_REGS\t\t\\\n+   : ((CLASS) == ALL_REGS\t\t\t\t\t\t\\\n+      && GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT) ? GENERAL_REGS\t\\\n    : (CLASS))\n \n /* If we are copying between general and FP registers, we need a memory\n@@ -1090,6 +1085,13 @@ do\t\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)\n+\n+/* Initialize data used by insn expanders.  This is called from\n+   init_emit, once for each function, before code is generated.\n+   For 386, clear stack slot assignments remembered from previous\n+   functions. */\n+\n+#define INIT_EXPANDERS clear_386_stack_locals ()\n \f\n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction.  */"}]}