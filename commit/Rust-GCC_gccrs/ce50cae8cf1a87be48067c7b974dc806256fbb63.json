{"sha": "ce50cae8cf1a87be48067c7b974dc806256fbb63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1MGNhZThjZjFhODdiZTQ4MDY3YzdiOTc0ZGM4MDYyNTZmYmI2Mw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-02-13T17:55:02Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-02-13T17:55:02Z"}, "message": "s390.c (s390_final_chunkify): Re-run shorten_branches after emitting ltorg insns.\n\n\t* config/s390/s390.c (s390_final_chunkify): Re-run shorten_branches\n\tafter emitting ltorg insns.\n\n\t* config/s390/s390.md (*cmpdf_ccs_0, *cmpdf_ccs, *cmpsf_ccs_0,\n\t*cmpsf_ccs, truncdfsf2_ieee, *adddf3, *addsf3, *subdf3, *subsf3,\n\t*muldf3, *mulsf3, *divdf3, *divsf3, *negdf2, *negsf2, *absdf2,\n\t*abssf2): Fix \"op_type\" attribute.\n\nFrom-SVN: r49739", "tree": {"sha": "e07ea06b7ebfa8faa0cd53faad79022cb18e4c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07ea06b7ebfa8faa0cd53faad79022cb18e4c81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce50cae8cf1a87be48067c7b974dc806256fbb63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce50cae8cf1a87be48067c7b974dc806256fbb63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce50cae8cf1a87be48067c7b974dc806256fbb63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce50cae8cf1a87be48067c7b974dc806256fbb63/comments", "author": null, "committer": null, "parents": [{"sha": "57d5032b06dc706d2c1801f27ac2788a970e5707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d5032b06dc706d2c1801f27ac2788a970e5707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d5032b06dc706d2c1801f27ac2788a970e5707"}], "stats": {"total": 72, "additions": 45, "deletions": 27}, "files": [{"sha": "349100284fc6f815fdf0b11718c02a507f5b47b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce50cae8cf1a87be48067c7b974dc806256fbb63", "patch": "@@ -1,3 +1,13 @@\n+2002-02-13  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_final_chunkify): Re-run shorten_branches\n+\tafter emitting ltorg insns.\n+\n+\t* config/s390/s390.md (*cmpdf_ccs_0, *cmpdf_ccs, *cmpsf_ccs_0,\n+\t*cmpsf_ccs, truncdfsf2_ieee, *adddf3, *addsf3, *subdf3, *subsf3,\n+\t*muldf3, *mulsf3, *divdf3, *divsf3, *negdf2, *negsf2, *absdf2,\n+\t*abssf2): Fix \"op_type\" attribute.\n+\n 2002-02-13  Douglas B Rupp  <rupp@gnat.com>\n \n \t* mkconfig.sh: Avoid using a subshell redirect."}, {"sha": "178b32ef2336d3b8e7ed3299a81916648b5c00c5", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=ce50cae8cf1a87be48067c7b974dc806256fbb63", "patch": "@@ -2650,21 +2650,29 @@ s390_final_chunkify (chunkify)\n \t} \n     }\n   ltorg_uids[max_ltorg] = 0;\n-  for (insn=get_insns (),uids=0; insn;insn = next_real_insn (insn)) \n+\n+  if (max_ltorg > 0)\n+    {\n+      for (insn = get_insns (), uids = 0; insn; insn = next_real_insn (insn)) \n+        if (INSN_UID (insn) == ltorg_uids[uids]) \n+\t  {\n+\t    INSN_ADDRESSES_NEW (emit_insn_after (gen_ltorg (\n+\t\t\t        gen_rtx_CONST_INT (Pmode, ltorg_uids[++uids])),\n+\t\t\t\t\t       insn), -1);\n+\t  } \n+\n+      init_insn_lengths ();\n+      shorten_branches (get_insns ());\n+    }\n+\n+  for (insn = get_insns (); insn; insn = next_real_insn (insn)) \n     {\n       if (GET_RTX_CLASS (GET_CODE (insn)) != 'i')\n \tcontinue;\n-      if (INSN_UID (insn) == ltorg_uids[uids]) \n-\t{\n-\t  INSN_ADDRESSES_NEW (emit_insn_after (gen_ltorg (\n-\t\t\t      gen_rtx_CONST_INT (Pmode, ltorg_uids[++uids])),\n-\t\t\t\t\t       insn), -1);\n-\t} \n       if (GET_CODE (insn) == JUMP_INSN) \n-\t{\n-\t  insn = check_and_change_labels (insn, ltorg_uids);\n-\t}\n+\tinsn = check_and_change_labels (insn, ltorg_uids);\n     }\n+\n   if (chunkify) \n     {\n     for (insn=get_insns (); insn;insn = next_insn (insn)) "}, {"sha": "112116a2c2a414fbda3b121d248758e9138159c9", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce50cae8cf1a87be48067c7b974dc806256fbb63/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ce50cae8cf1a87be48067c7b974dc806256fbb63", "patch": "@@ -722,7 +722,7 @@\n                  (match_operand:DF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltdbr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")])\n+   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*cmpdf_ccs_0_ibm\"\n   [(set (reg 33)\n@@ -740,7 +740,7 @@\n   \"@\n    cdbr\\\\t%0,%1\n    cdb\\\\t%0,%1\"\n-   [(set_attr \"op_type\" \"RR,RX\")\n+   [(set_attr \"op_type\" \"RRE,RXE\")\n     (set_attr \"atype\"   \"reg,mem\")])  \n \n (define_insn \"*cmpdf_ccs_ibm\"\n@@ -763,7 +763,7 @@\n                  (match_operand:SF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltebr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")])\n+   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*cmpsf_ccs_0_ibm\"\n   [(set (reg 33)\n@@ -781,7 +781,7 @@\n   \"@\n    cebr\\\\t%0,%1\n    ceb\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RX\")\n+  [(set_attr \"op_type\" \"RRE,RXE\")\n    (set_attr \"atype\"   \"reg,mem\")])\n \n (define_insn \"*cmpsf_ccs\"\n@@ -2999,7 +2999,7 @@\n         (float_truncate:SF (match_operand:DF 1 \"general_operand\" \"f\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ledbr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"truncdfsf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -3304,7 +3304,7 @@\n   \"@\n    adbr\\\\t%0,%2\n    adb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*adddf3_ibm\"\n@@ -3341,7 +3341,7 @@\n   \"@\n    aebr\\\\t%0,%2\n    aeb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*addsf3\"\n@@ -3502,7 +3502,7 @@\n   \"@\n    sdbr\\\\t%0,%2\n    sdb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*subdf3_ibm\"\n@@ -3539,7 +3539,7 @@\n   \"@\n    sebr\\\\t%0,%2\n    seb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n (define_insn \"*subsf3_ibm\"\n@@ -3658,7 +3658,7 @@\n   \"@\n    mdbr\\\\t%0,%2\n    mdb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n@@ -3697,7 +3697,7 @@\n   \"@\n    meebr\\\\t%0,%2\n    meeb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fmul\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n@@ -4135,7 +4135,7 @@\n   \"@\n    ddbr\\\\t%0,%2\n    ddb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n@@ -4174,7 +4174,7 @@\n   \"@\n    debr\\\\t%0,%2\n    deb\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fdiv\")\n    (set_attr \"atype\"    \"reg,mem\")])\n \n@@ -5012,7 +5012,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcdbr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*negdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -5040,7 +5040,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcebr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -5097,7 +5097,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpdbr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*absdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -5125,7 +5125,7 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpebr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*abssf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")"}]}