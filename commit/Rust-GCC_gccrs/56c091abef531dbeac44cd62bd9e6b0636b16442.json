{"sha": "56c091abef531dbeac44cd62bd9e6b0636b16442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZjMDkxYWJlZjUzMWRiZWFjNDRjZDYyYmQ5ZTZiMDYzNmIxNjQ0Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-02-29T15:40:20Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-02-29T15:40:20Z"}, "message": "Poison ENABLE_CHECKING macro\n\n\t* system.h: Poison ENABLE_CHECKING macro.\n\nFrom-SVN: r233817", "tree": {"sha": "887a0b79b5be45e2bedc77f16822c28e29f9cc5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/887a0b79b5be45e2bedc77f16822c28e29f9cc5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56c091abef531dbeac44cd62bd9e6b0636b16442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c091abef531dbeac44cd62bd9e6b0636b16442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c091abef531dbeac44cd62bd9e6b0636b16442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c091abef531dbeac44cd62bd9e6b0636b16442/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce40915e90234dda80325aa0b8b51bb1a5017b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce40915e90234dda80325aa0b8b51bb1a5017b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce40915e90234dda80325aa0b8b51bb1a5017b3b"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "966e06dd761e4db97ef3d38aaac54c97e029a7f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c091abef531dbeac44cd62bd9e6b0636b16442/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c091abef531dbeac44cd62bd9e6b0636b16442/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56c091abef531dbeac44cd62bd9e6b0636b16442", "patch": "@@ -8,6 +8,10 @@\n \t(eliminate_plus_minus_pair): Use ops_equal_values_p\n \t(repropagate_negates): Do not use get_unary_op here.\n \n+2016-02-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* system.h: Poison ENABLE_CHECKING macro.\n+\n 2016-02-29  Martin Liska  <mliska@suse.cz>\n \n \t* hsa-gen.c (gen_body_from_gimple): Dump only if TDF_DETAILS"}, {"sha": "cb545410a15899ed4f5ebf1919f90ebdb415b36a", "filename": "gcc/system.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c091abef531dbeac44cd62bd9e6b0636b16442/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c091abef531dbeac44cd62bd9e6b0636b16442/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=56c091abef531dbeac44cd62bd9e6b0636b16442", "patch": "@@ -1014,6 +1014,10 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n #undef rindex\n  #pragma GCC poison bcopy bzero bcmp rindex\n \n+/* Poison ENABLE_CHECKING macro that should be replaced with\n+   'if (flag_checking)', or with CHECKING_P macro.  */\n+#pragma GCC poison ENABLE_CHECKING\n+\n #endif /* GCC >= 3.0 */\n \n /* This macro allows casting away const-ness to pass -Wcast-qual"}]}