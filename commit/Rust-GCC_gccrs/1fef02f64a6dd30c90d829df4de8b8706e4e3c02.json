{"sha": "1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlZjAyZjY0YTZkZDMwYzkwZDgyOWRmNGRlOGI4NzA2ZTRlM2MwMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-04T23:57:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-04T23:57:47Z"}, "message": "tree.c (build1): Set TREE_SIDE_EFFECTS for expressions that always have side-effects.\n\n        * tree.c (build1): Set TREE_SIDE_EFFECTS for expressions that\n        always have side-effects.  Use memset not bzero.\n        (make_node): Likewise.\n\nFrom-SVN: r29817", "tree": {"sha": "20e436ee3b77b4492f29da18678815fee347348a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20e436ee3b77b4492f29da18678815fee347348a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fef02f64a6dd30c90d829df4de8b8706e4e3c02/comments", "author": null, "committer": null, "parents": [{"sha": "8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "a8a273419030d2e1c90dbcce841290441974cda6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fef02f64a6dd30c90d829df4de8b8706e4e3c02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fef02f64a6dd30c90d829df4de8b8706e4e3c02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "patch": "@@ -1,3 +1,9 @@\n+Mon Oct  4 16:56:11 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* tree.c (build1): Set TREE_SIDE_EFFECTS for expressions that\n+\talways have side-effects.  Use memset not bzero.\n+\t(make_node): Likewise.\n+\n Mon Oct  4 16:22:20 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* stmt.c (expand_anon_union_decl): When any of the elements of the\n@@ -36,7 +42,7 @@ Mon Oct  4 02:31:20 1999  Mark Mitchell  <mark@codesourcery.com>\n Mon Oct  4 02:12:41 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* tree.c (make_node): Set TREE_SIDE_EFFECTS for expressions that\n-\tare always have side-effects.\n+\talways have side-effects.\n \n Sun Oct  3 14:14:16 1999  Jeffrey A Law  (law@cygnus.com)\n "}, {"sha": "8f707474d237484b9099b99b4d2dfd096b4842d4", "filename": "gcc/tree.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fef02f64a6dd30c90d829df4de8b8706e4e3c02/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fef02f64a6dd30c90d829df4de8b8706e4e3c02/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1fef02f64a6dd30c90d829df4de8b8706e4e3c02", "patch": "@@ -1028,7 +1028,7 @@ make_node (code)\n   else\n     {\n       t = (tree) obstack_alloc (obstack, length);\n-      bzero ((PTR) t, length);\n+      memset ((PTR) t, 0, length);\n     }\n \n #ifdef GATHER_STATISTICS\n@@ -3115,8 +3115,10 @@ build1 (code, type, node)\n   if (ggc_p)\n     t = ggc_alloc_tree (length);\n   else\n-    t = (tree) obstack_alloc (obstack, length);\n-  bzero ((PTR) t, length);\n+    {\n+      t = (tree) obstack_alloc (obstack, length);\n+      memset ((PTR) t, 0, length);\n+    }\n \n #ifdef GATHER_STATISTICS\n   tree_node_counts[(int)kind]++;\n@@ -3138,6 +3140,25 @@ build1 (code, type, node)\n \tTREE_RAISES (t) = 1;\n     }\n \n+  switch (code)\n+    {\n+    case INIT_EXPR:\n+    case MODIFY_EXPR:\n+    case VA_ARG_EXPR:\n+    case RTL_EXPR:\n+    case PREDECREMENT_EXPR:\n+    case PREINCREMENT_EXPR:\n+    case POSTDECREMENT_EXPR:\n+    case POSTINCREMENT_EXPR:\n+      /* All of these have side-effects, no matter what their\n+\t operands are.  */\n+      TREE_SIDE_EFFECTS (t) = 1;\n+      break;\n+\t  \n+    default:\n+      break;\n+    }\n+\n   return t;\n }\n "}]}