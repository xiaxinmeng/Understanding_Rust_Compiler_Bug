{"sha": "20e19db49ec468766f78a6d3a0f3b69980be2974", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBlMTlkYjQ5ZWM0Njg3NjZmNzhhNmQzYTBmM2I2OTk4MGJlMjk3NA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-31T04:59:45Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-31T04:59:45Z"}, "message": "sh.md (UNSPECV_SP_SWITCH_B): New.\n\n* config/sh/sh.md (UNSPECV_SP_SWITCH_B): New.\n(UNSPECV_SP_SWITCH_E): New.\n(sp_switch_1): Change to an unspec.\n(sp_switch_2): Change to an unspec.  Don't use post-inc when we\nreplace $r15.\n* config/sh/sh.c (sh_expand_prologue): Use the constant pool to\nreference the new stack's address\n\nFrom-SVN: r150306", "tree": {"sha": "169c07117c4dd277b8bdd8871069c4ab09f34342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/169c07117c4dd277b8bdd8871069c4ab09f34342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20e19db49ec468766f78a6d3a0f3b69980be2974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e19db49ec468766f78a6d3a0f3b69980be2974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20e19db49ec468766f78a6d3a0f3b69980be2974", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e19db49ec468766f78a6d3a0f3b69980be2974/comments", "author": null, "committer": null, "parents": [{"sha": "e60d414986c11bed356d02c1a4a9b8cf4c00c675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60d414986c11bed356d02c1a4a9b8cf4c00c675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60d414986c11bed356d02c1a4a9b8cf4c00c675"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "6f24540a9fa6b09425bb521b012042e2e4badee6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20e19db49ec468766f78a6d3a0f3b69980be2974/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20e19db49ec468766f78a6d3a0f3b69980be2974/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20e19db49ec468766f78a6d3a0f3b69980be2974", "patch": "@@ -1,3 +1,13 @@\n+2009-07-31  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/sh/sh.md (UNSPECV_SP_SWITCH_B): New.\n+\t(UNSPECV_SP_SWITCH_E): New.\n+\t(sp_switch_1): Change to an unspec.\n+\t(sp_switch_2): Change to an unspec.  Don't use post-inc when we\n+\treplace $r15.\n+\t* config/sh/sh.c (sh_expand_prologue): Use the constant pool to\n+\treference the new stack's address\n+\n 2009-07-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* Makefile.in (OBJS-common): Added dependence on graphite-blocking.o,"}, {"sha": "5b555f83e1a09817a80bd22d7df5b200dccc92b0", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20e19db49ec468766f78a6d3a0f3b69980be2974/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20e19db49ec468766f78a6d3a0f3b69980be2974/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=20e19db49ec468766f78a6d3a0f3b69980be2974", "patch": "@@ -6743,13 +6743,19 @@ sh_expand_prologue (void)\n   /* If we're supposed to switch stacks at function entry, do so now.  */\n   if (sp_switch_attr)\n     {\n+      rtx lab, newsrc;\n       /* The argument specifies a variable holding the address of the\n \t stack the interrupt function should switch to/from at entry/exit.  */\n+      tree arg = TREE_VALUE ( TREE_VALUE (sp_switch_attr));\n       const char *s\n-\t= ggc_strdup (TREE_STRING_POINTER (TREE_VALUE (sp_switch_attr)));\n+\t= ggc_strdup (TREE_STRING_POINTER (arg));\n       rtx sp_switch = gen_rtx_SYMBOL_REF (Pmode, s);\n \n-      emit_insn (gen_sp_switch_1 (sp_switch));\n+      lab = add_constant (sp_switch, SImode, 0);\n+      newsrc = gen_rtx_LABEL_REF (VOIDmode, lab);\n+      newsrc = gen_const_mem (SImode, newsrc);\n+\n+      emit_insn (gen_sp_switch_1 (newsrc));\n     }\n \n   d = calc_live_regs (&live_regs_mask);"}]}