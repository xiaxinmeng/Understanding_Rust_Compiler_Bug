{"sha": "adcf6b325095112c75af4dbb69628605dcaf2e32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjZjZiMzI1MDk1MTEyYzc1YWY0ZGJiNjk2Mjg2MDVkY2FmMmUzMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-10-18T10:34:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T10:34:56Z"}, "message": "sinfo.ads, sinfo.adb: Change Has_Pragma_CPU to Flag14 (Flag10 is standard field).\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads, sinfo.adb: Change Has_Pragma_CPU to Flag14 (Flag10 is\n\tstandard field).\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* s-stausa.adb, s-taprop-linux.adb, s-taprop-mingw.adb, s-tassta.ads:\n\tMinor reformatting.\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_strm.adb (Build_Elementary_Input_Call): Check\n\tNo_Default_Stream_Attributes.\n\t(Build_Elementary_Write_Call): Check No_Default_Stream_Attributes\n\t* s-rident.ads: Add restriction No_Default_Stream_Attributes\n\tPut restriction No_Allocators_After_Elaboration in alpha order\n\nFrom-SVN: r165626", "tree": {"sha": "1b8e214d778fdfd8d8a13ab7a5c90cf30fac3388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b8e214d778fdfd8d8a13ab7a5c90cf30fac3388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adcf6b325095112c75af4dbb69628605dcaf2e32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcf6b325095112c75af4dbb69628605dcaf2e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adcf6b325095112c75af4dbb69628605dcaf2e32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcf6b325095112c75af4dbb69628605dcaf2e32/comments", "author": null, "committer": null, "parents": [{"sha": "8918fe18ab24b24cba7575face37f1726a23ef19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8918fe18ab24b24cba7575face37f1726a23ef19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8918fe18ab24b24cba7575face37f1726a23ef19"}], "stats": {"total": 91, "additions": 60, "deletions": 31}, "files": [{"sha": "83d3e78a3709c3914f3bec860c865caf322a8bc9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -1,3 +1,21 @@\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb: Change Has_Pragma_CPU to Flag14 (Flag10 is\n+\tstandard field).\n+\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-stausa.adb, s-taprop-linux.adb, s-taprop-mingw.adb, s-tassta.ads:\n+\tMinor reformatting.\n+\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_strm.adb (Build_Elementary_Input_Call): Check\n+\tNo_Default_Stream_Attributes.\n+\t(Build_Elementary_Write_Call): Check No_Default_Stream_Attributes\n+\t* s-rident.ads: Add restriction No_Default_Stream_Attributes\n+\tPut restriction No_Allocators_After_Elaboration in alpha order\n+\n 2010-10-18  Jose Ruiz  <ruiz@adacore.com>\n \n \t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Add field corresponding"}, {"sha": "83f88a28410643f758c54c19e2fee1b261243778", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -29,6 +29,8 @@ with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n@@ -455,6 +457,8 @@ package body Exp_Strm is\n       Lib_RE  : RE_Id;\n \n    begin\n+      Check_Restriction (No_Default_Stream_Attributes, N);\n+\n       --  Compute the size of the stream element. This is either the size of\n       --  the first subtype or if given the size of the Stream_Size attribute.\n \n@@ -667,6 +671,8 @@ package body Exp_Strm is\n       Libent  : Entity_Id;\n \n    begin\n+      Check_Restriction (No_Default_Stream_Attributes, N);\n+\n       --  Compute the size of the stream element. This is either the size of\n       --  the first subtype or if given the size of the Stream_Size attribute.\n "}, {"sha": "9423694afad9cb5e4756c2289f2716a46ac8cf2e", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -62,16 +62,17 @@ package System.Rident is\n       No_Abort_Statements,                     -- (RM D.7(5), H.4(3))\n       No_Access_Subprograms,                   -- (RM H.4(17))\n       No_Allocators,                           -- (RM H.4(7))\n-      No_Anonymous_Allocators,                 -- Ada 2012\n+      No_Allocators_After_Elaboration,         -- Ada 2012 (RM D.7(19.1/2))\n+      No_Anonymous_Allocators,                 -- Ada 2012 (RM H.4(8/1))\n       No_Asynchronous_Control,                 -- (RM D.7(10))\n       No_Calendar,                             -- GNAT\n+      No_Default_Stream_Attributes,            -- Ada 2012 (RM 13.12.1(4/2))\n       No_Delay,                                -- (RM H.4(21))\n       No_Direct_Boolean_Operators,             -- GNAT\n       No_Dispatch,                             -- (RM H.4(19))\n       No_Dispatching_Calls,                    -- GNAT\n       No_Dynamic_Attachment,                   -- GNAT\n       No_Dynamic_Priorities,                   -- (RM D.9(9))\n-      No_Allocators_After_Elaboration,         -- Ada 2012\n       No_Enumeration_Maps,                     -- GNAT\n       No_Entry_Calls_In_Elaboration_Code,      -- GNAT\n       No_Entry_Queue,                          -- GNAT (Ravenscar)"}, {"sha": "e85bc46bf97c2ed0e63803aa5e631fed7a7842d9", "filename": "gcc/ada/s-stausa.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.adb?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -263,10 +263,11 @@ package body System.Stack_Usage is\n       Guard : constant Integer := 256;\n       --  Guard space between the Current_Stack_Level'Address and the last\n       --  allocated byte on the stack.\n+\n    begin\n-      if Analyzer.Top_Pattern_Mark /= 0 then\n-         --  Easiest and most accurate method: the top of the stack is known.\n+      --  Easiest and most accurate method: the top of the stack is known.\n \n+      if Analyzer.Top_Pattern_Mark /= 0 then\n          Analyzer.Pattern_Size :=\n            Stack_Size (Analyzer.Top_Pattern_Mark,\n                        To_Stack_Address (Current_Stack_Level'Address))\n@@ -283,19 +284,23 @@ package body System.Stack_Usage is\n \n          declare\n             Pattern : aliased Stack_Slots\n-              (1 .. Analyzer.Pattern_Size / Bytes_Per_Pattern);\n+                        (1 .. Analyzer.Pattern_Size / Bytes_Per_Pattern);\n             for Pattern'Address use Analyzer.Stack_Overlay_Address;\n+\n          begin\n             if System.Parameters.Stack_Grows_Down then\n-               for I in reverse Pattern'Range loop\n-                  Pattern (I) := Analyzer.Pattern;\n+               for J in reverse Pattern'Range loop\n+                  Pattern (J) := Analyzer.Pattern;\n                end loop;\n+\n                Analyzer.Bottom_Pattern_Mark :=\n                  To_Stack_Address (Pattern (Pattern'Last)'Address);\n+\n             else\n-               for I in Pattern'Range loop\n-                  Pattern (I) := Analyzer.Pattern;\n+               for J in Pattern'Range loop\n+                  Pattern (J) := Analyzer.Pattern;\n                end loop;\n+\n                Analyzer.Bottom_Pattern_Mark :=\n                  To_Stack_Address (Pattern (Pattern'First)'Address);\n             end if;\n@@ -310,6 +315,7 @@ package body System.Stack_Usage is\n                        To_Stack_Address (Current_Stack_Level'Address));\n \n          if Stack_Used_When_Filling > Analyzer.Pattern_Size then\n+\n             --  In this case, the known size of the stack is too small, we've\n             --  already taken more than expected, so there's no possible\n             --  computation"}, {"sha": "6dcb10528442ea2b4efe53748a13d10381240ab7", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -851,8 +851,8 @@ package body System.Task_Primitives.Operations is\n       --  more appropriate.\n \n       if pthread_attr_setaffinity_np'Address = System.Null_Address then\n-         --  Nothing to do with the affinities if there is not the underlying\n-         --  support.\n+\n+         --  Nothing to do with the affinities if no underlying support\n \n          null;\n \n@@ -861,10 +861,8 @@ package body System.Task_Primitives.Operations is\n       elsif T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n          declare\n             CPU_Set : aliased cpu_set_t := (bits => (others => False));\n-\n          begin\n             CPU_Set.bits (Integer (T.Common.Base_CPU)) := True;\n-\n             Result :=\n               pthread_attr_setaffinity_np\n                 (Attributes'Access,\n@@ -1340,10 +1338,8 @@ package body System.Task_Primitives.Operations is\n       then\n          declare\n             CPU_Set : aliased cpu_set_t := (bits => (others => False));\n-\n          begin\n             CPU_Set.bits (Integer (Environment_Task.Common.Base_CPU)) := True;\n-\n             Result :=\n               pthread_setaffinity_np\n                 (Environment_Task.Common.LL.Thread,"}, {"sha": "768bc3f102ab72488e61ec0f1d8067987999e171", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -955,6 +955,7 @@ package body System.Task_Primitives.Operations is\n       --  Step 4: Handle pragma CPU and Task_Info\n \n       if T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n+\n          --  The CPU numbering in pragma CPU starts at 1 while the subprogram\n          --  to set the affinity starts at 0, therefore we must substract 1.\n \n@@ -1116,9 +1117,10 @@ package body System.Task_Primitives.Operations is\n          --  The CPU numbering in pragma CPU starts at 1 while the subprogram\n          --  to set the affinity starts at 0, therefore we must substract 1.\n \n-         Result := SetThreadIdealProcessor\n-           (Environment_Task.Common.LL.Thread,\n-            ProcessorId (Environment_Task.Common.Base_CPU) - 1);\n+         Result :=\n+           SetThreadIdealProcessor\n+             (Environment_Task.Common.LL.Thread,\n+              ProcessorId (Environment_Task.Common.Base_CPU) - 1);\n          pragma Assert (Result = 1);\n       end if;\n    end Initialize;"}, {"sha": "6b8c7d7df3b0f2ed9fc30df4a10eff1efa8c2277", "filename": "gcc/ada/s-tassta.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-tassta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fs-tassta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.ads?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -184,15 +184,15 @@ package System.Tasking.Stages is\n    --  Compiler interface only. Do not call from within the RTS.\n    --  This must be called to create a new task.\n    --\n-   --  Priority is the task's priority (assumed to be in the\n-   --   System.Any_Priority'Range)\n+   --  Priority is the task's priority (assumed to be in range of type\n+   --   System.Any_Priority)\n    --  Size is the stack size of the task to create\n    --  Task_Info is the task info associated with the created task, or\n    --   Unspecified_Task_Info if none.\n-   --  CPU is the task affinity. We pass it as an Integer because the\n-   --   undefined value is not in the range of CPU_Range. Static range\n-   --   checks are performed when analyzing the pragma, and dynamic ones are\n-   --   performed before setting the affinity at run time.\n+   --  CPU is the task affinity. Passed as an Integer because the undefined\n+   --   value is not in the range of CPU_Range. Static range checks are\n+   --   performed when analyzing the pragma, and dynamic ones are performed\n+   --   before setting the affinity at run time.\n    --  Relative_Deadline is the relative deadline associated with the created\n    --   task by means of a pragma Relative_Deadline, or 0.0 if none.\n    --  State is the compiler generated task's procedure body"}, {"sha": "a8f7d8b9624a0bfbe2054bb9b4f3f4ae3b7b7f67", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -1459,7 +1459,7 @@ package body Sinfo is\n       pragma Assert (False\n         or else NT (N).Nkind = N_Subprogram_Body\n         or else NT (N).Nkind = N_Task_Definition);\n-      return Flag10 (N);\n+      return Flag14 (N);\n    end Has_Pragma_CPU;\n \n    function Has_Pragma_Priority\n@@ -4438,7 +4438,7 @@ package body Sinfo is\n       pragma Assert (False\n         or else NT (N).Nkind = N_Subprogram_Body\n         or else NT (N).Nkind = N_Task_Definition);\n-      Set_Flag10 (N, Val);\n+      Set_Flag14 (N, Val);\n    end Set_Has_Pragma_CPU;\n \n    procedure Set_Has_Pragma_Priority"}, {"sha": "c5a82ec8b06a723ba073bfe9f4ac084361f9ab8a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcf6b325095112c75af4dbb69628605dcaf2e32/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=adcf6b325095112c75af4dbb69628605dcaf2e32", "patch": "@@ -1133,7 +1133,7 @@ package Sinfo is\n    --    generate elaboration code, and non-preelaborated packages which do\n    --    not generate elaboration code.\n \n-   --  Has_Pragma_CPU (Flag10-Sem)\n+   --  Has_Pragma_CPU (Flag14-Sem)\n    --    A flag present in N_Subprogram_Body and N_Task_Definition nodes to\n    --    flag the presence of a CPU pragma in the declaration sequence (public\n    --    or private in the task case).\n@@ -4491,7 +4491,7 @@ package Sinfo is\n       --  Is_Task_Master (Flag5-Sem)\n       --  Was_Originally_Stub (Flag13-Sem)\n       --  Has_Relative_Deadline_Pragma (Flag9-Sem)\n-      --  Has_Pragma_CPU (Flag10-Sem)\n+      --  Has_Pragma_CPU (Flag14-Sem)\n \n       ------------------------------\n       -- Parameterized Expression --\n@@ -4975,7 +4975,7 @@ package Sinfo is\n       --  Has_Task_Info_Pragma (Flag7-Sem)\n       --  Has_Task_Name_Pragma (Flag8-Sem)\n       --  Has_Relative_Deadline_Pragma (Flag9-Sem)\n-      --  Has_Pragma_CPU (Flag10-Sem)\n+      --  Has_Pragma_CPU (Flag14-Sem)\n \n       --------------------\n       -- 9.1  Task Item --\n@@ -8324,7 +8324,7 @@ package Sinfo is\n      (N : Node_Id) return Boolean;    -- Flag17\n \n    function Has_Pragma_CPU\n-     (N : Node_Id) return Boolean;    -- Flag10\n+     (N : Node_Id) return Boolean;    -- Flag14\n \n    function Has_Pragma_Priority\n      (N : Node_Id) return Boolean;    -- Flag6\n@@ -9275,7 +9275,7 @@ package Sinfo is\n      (N : Node_Id; Val : Boolean := True);    -- Flag17\n \n    procedure Set_Has_Pragma_CPU\n-     (N : Node_Id; Val : Boolean := True);    -- Flag10\n+     (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n    procedure Set_Has_Pragma_Priority\n      (N : Node_Id; Val : Boolean := True);    -- Flag6"}]}