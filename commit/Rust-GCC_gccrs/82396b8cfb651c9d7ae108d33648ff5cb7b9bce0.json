{"sha": "82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzOTZiOGNmYjY1MWM5ZDdhZTEwOGQzMzY0OGZmNWNiN2I5YmNlMA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2019-02-08T19:01:10Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-02-08T19:01:10Z"}, "message": "re PR middle-end/88560 (armv8_2-fp16-move-1.c and related regressions after r266385)\n\n2019-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/88560\n\t* lra-constraints.c (process_alt_operands): Don't increase reject\n\tfor memory when offset memory is required.\n\nFrom-SVN: r268705", "tree": {"sha": "bb50011d2aa6310db157168cf89875fe372226ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb50011d2aa6310db157168cf89875fe372226ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b74ab8eb4275b704d46dc4db07f98a0913e04ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b74ab8eb4275b704d46dc4db07f98a0913e04ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b74ab8eb4275b704d46dc4db07f98a0913e04ca0"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "9e5a140b0e12e0b26ca535eac48eaa85323df4cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "patch": "@@ -1,3 +1,9 @@\n+2019-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/88560\n+\t* lra-constraints.c (process_alt_operands): Don't increase reject\n+\tfor memory when offset memory is required.\n+\n 2019-02-08  Robin Dapp  <rdapp@linux.ibm.com>\n \n \t* config/s390/vector.md: Implement vector copysign."}, {"sha": "17ea2c53bbc487ac9868c85b65814827afd1bcaf", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82396b8cfb651c9d7ae108d33648ff5cb7b9bce0/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=82396b8cfb651c9d7ae108d33648ff5cb7b9bce0", "patch": "@@ -2796,29 +2796,32 @@ process_alt_operands (int only_alternative)\n \t\t\t      (GET_MODE (op), this_alternative, cl)))))\n \t\tlosers++;\n \n-\t      /* Input reloads can be inherited more often than output\n-\t\t reloads can be removed, so penalize output\n-\t\t reloads.  */\n-\t      if (!REG_P (op) || curr_static_id->operand[nop].type != OP_IN)\n-\t\t{\n-\t\t  if (lra_dump_file != NULL)\n-\t\t    fprintf\n-\t\t      (lra_dump_file,\n-\t\t       \"            %d Non input pseudo reload: reject++\\n\",\n-\t\t       nop);\n-\t\t  reject++;\n-\t\t}\n-\n \t      if (MEM_P (op) && offmemok)\n \t\taddr_losers++;\n-\t      else if (curr_static_id->operand[nop].type == OP_INOUT)\n+\t      else\n \t\t{\n-\t\t  if (lra_dump_file != NULL)\n-\t\t    fprintf\n-\t\t      (lra_dump_file,\n-\t\t       \"            %d Input/Output reload: reject+=%d\\n\",\n-\t\t       nop, LRA_LOSER_COST_FACTOR);\n-\t\t  reject += LRA_LOSER_COST_FACTOR;\n+\t\t  /* Input reloads can be inherited more often than\n+\t\t     output reloads can be removed, so penalize output\n+\t\t     reloads.  */\n+\t\t  if (!REG_P (op) || curr_static_id->operand[nop].type != OP_IN)\n+\t\t    {\n+\t\t      if (lra_dump_file != NULL)\n+\t\t\tfprintf\n+\t\t\t  (lra_dump_file,\n+\t\t\t   \"            %d Non input pseudo reload: reject++\\n\",\n+\t\t\t   nop);\n+\t\t      reject++;\n+\t\t    }\n+\n+\t\t  if (curr_static_id->operand[nop].type == OP_INOUT)\n+\t\t    {\n+\t\t      if (lra_dump_file != NULL)\n+\t\t\tfprintf\n+\t\t\t  (lra_dump_file,\n+\t\t\t   \"            %d Input/Output reload: reject+=%d\\n\",\n+\t\t\t   nop, LRA_LOSER_COST_FACTOR);\n+\t\t      reject += LRA_LOSER_COST_FACTOR;\n+\t\t    }\n \t\t}\n \t    }\n "}]}