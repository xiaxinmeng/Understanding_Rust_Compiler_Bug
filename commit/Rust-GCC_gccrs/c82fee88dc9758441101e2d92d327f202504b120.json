{"sha": "c82fee88dc9758441101e2d92d327f202504b120", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyZmVlODhkYzk3NTg0NDExMDFlMmQ5MmQzMjdmMjAyNTA0YjEyMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-03-28T21:19:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-03-28T21:19:23Z"}, "message": "cfgexpand.c (expand_gimple_cond): Always set the source location and block before expanding the statement.\n\n\t* cfgexpand.c (expand_gimple_cond): Always set the source location and\n\tblock before expanding the statement.\n\t(expand_gimple_stmt_1): Likewise.  Set them here...\n\t(expand_gimple_stmt): ...and not here.  Tidy.\n\t* cfglayout.c (curr_insn_locator): Return 0 if the current location is\n\tunknown.\n\nFrom-SVN: r171629", "tree": {"sha": "5546780c03b01934b934347daf34220cf6414108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5546780c03b01934b934347daf34220cf6414108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c82fee88dc9758441101e2d92d327f202504b120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c82fee88dc9758441101e2d92d327f202504b120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c82fee88dc9758441101e2d92d327f202504b120", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c82fee88dc9758441101e2d92d327f202504b120/comments", "author": null, "committer": null, "parents": [{"sha": "e45425ecf8afa3ce7cbae97f267538c7d1e5650c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45425ecf8afa3ce7cbae97f267538c7d1e5650c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45425ecf8afa3ce7cbae97f267538c7d1e5650c"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "6af0e4c2dcc4c259c91a1d045f3d6dc9bae2f890", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c82fee88dc9758441101e2d92d327f202504b120/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c82fee88dc9758441101e2d92d327f202504b120/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c82fee88dc9758441101e2d92d327f202504b120", "patch": "@@ -1,3 +1,12 @@\n+2011-03-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgexpand.c (expand_gimple_cond): Always set the source location and\n+\tblock before expanding the statement.\n+\t(expand_gimple_stmt_1): Likewise.  Set them here...\n+\t(expand_gimple_stmt): ...and not here.  Tidy.\n+\t* cfglayout.c (curr_insn_locator): Return 0 if the current location is\n+\tunknown.\n+\n 2011-03-28  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* Makefile.in: New rule for cprop.o."}, {"sha": "da40aaec67560992fe0d290766c37182e9f00974", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 14, "deletions": 24, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c82fee88dc9758441101e2d92d327f202504b120/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c82fee88dc9758441101e2d92d327f202504b120/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=c82fee88dc9758441101e2d92d327f202504b120", "patch": "@@ -1745,11 +1745,8 @@ expand_gimple_cond (basic_block bb, gimple stmt)\n   last2 = last = get_last_insn ();\n \n   extract_true_false_edges_from_block (bb, &true_edge, &false_edge);\n-  if (gimple_has_location (stmt))\n-    {\n-      set_curr_insn_source_location (gimple_location (stmt));\n-      set_curr_insn_block (gimple_block (stmt));\n-    }\n+  set_curr_insn_source_location (gimple_location (stmt));\n+  set_curr_insn_block (gimple_block (stmt));\n \n   /* These flags have no purpose in RTL land.  */\n   true_edge->flags &= ~EDGE_TRUE_VALUE;\n@@ -1896,6 +1893,10 @@ static void\n expand_gimple_stmt_1 (gimple stmt)\n {\n   tree op0;\n+\n+  set_curr_insn_source_location (gimple_location (stmt));\n+  set_curr_insn_block (gimple_block (stmt));\n+\n   switch (gimple_code (stmt))\n     {\n     case GIMPLE_GOTO:\n@@ -2052,32 +2053,21 @@ expand_gimple_stmt_1 (gimple stmt)\n static rtx\n expand_gimple_stmt (gimple stmt)\n {\n-  int lp_nr = 0;\n-  rtx last = NULL;\n   location_t saved_location = input_location;\n+  rtx last = get_last_insn ();\n+  int lp_nr;\n \n-  last = get_last_insn ();\n-\n-  /* If this is an expression of some kind and it has an associated line\n-     number, then emit the line number before expanding the expression.\n-\n-     We need to save and restore the file and line information so that\n-     errors discovered during expansion are emitted with the right\n-     information.  It would be better of the diagnostic routines\n-     used the file/line information embedded in the tree nodes rather\n-     than globals.  */\n   gcc_assert (cfun);\n \n+  /* We need to save and restore the current source location so that errors\n+     discovered during expansion are emitted with the right location.  But\n+     it would be better if the diagnostic routines used the source location\n+     embedded in the tree nodes rather than globals.  */\n   if (gimple_has_location (stmt))\n-    {\n-      input_location = gimple_location (stmt);\n-      set_curr_insn_source_location (input_location);\n-\n-      /* Record where the insns produced belong.  */\n-      set_curr_insn_block (gimple_block (stmt));\n-    }\n+    input_location = gimple_location (stmt);\n \n   expand_gimple_stmt_1 (stmt);\n+\n   /* Free any temporaries used to evaluate this statement.  */\n   free_temp_slots ();\n "}, {"sha": "464663642c716f2efc6482797e48254732fa1922", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c82fee88dc9758441101e2d92d327f202504b120/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c82fee88dc9758441101e2d92d327f202504b120/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=c82fee88dc9758441101e2d92d327f202504b120", "patch": "@@ -323,7 +323,7 @@ get_curr_insn_block (void)\n int\n curr_insn_locator (void)\n {\n-  if (curr_rtl_loc == -1)\n+  if (curr_rtl_loc == -1 || curr_location == UNKNOWN_LOCATION)\n     return 0;\n   if (last_block != curr_block)\n     {"}]}