{"sha": "f65e3801ce5cc7be12b40ce8827718d158643a72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1ZTM4MDFjZTVjYzdiZTEyYjQwY2U4ODI3NzE4ZDE1ODY0M2E3Mg==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-05-15T07:41:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-15T07:41:00Z"}, "message": "ia64.c (ia64_emit_probe_stack_range): Adjust calls to plus_constant.\n\n\t* config/ia64/ia64.c (ia64_emit_probe_stack_range): Adjust calls to\n\tplus_constant.\n\nFrom-SVN: r187499", "tree": {"sha": "5093ddf1cbe45d763ff9127df20575e224f318c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5093ddf1cbe45d763ff9127df20575e224f318c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f65e3801ce5cc7be12b40ce8827718d158643a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65e3801ce5cc7be12b40ce8827718d158643a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65e3801ce5cc7be12b40ce8827718d158643a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65e3801ce5cc7be12b40ce8827718d158643a72/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f301837ea38782f232b7db3e1e0eb51a03819240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f301837ea38782f232b7db3e1e0eb51a03819240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f301837ea38782f232b7db3e1e0eb51a03819240"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "608a68a2fb5f6083bbe7d8fbaffb7c19c1441a15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65e3801ce5cc7be12b40ce8827718d158643a72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65e3801ce5cc7be12b40ce8827718d158643a72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f65e3801ce5cc7be12b40ce8827718d158643a72", "patch": "@@ -1,3 +1,8 @@\n+2012-05-15  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/ia64/ia64.c (ia64_emit_probe_stack_range): Adjust calls to\n+\tplus_constant.\n+\n 2012-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_init_constructor): Do a block move for very"}, {"sha": "8fb5b40da73b745d39b295c6844b4314fe92effc", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65e3801ce5cc7be12b40ce8827718d158643a72/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65e3801ce5cc7be12b40ce8827718d158643a72/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=f65e3801ce5cc7be12b40ce8827718d158643a72", "patch": "@@ -3276,7 +3276,7 @@ ia64_emit_probe_stack_range (HOST_WIDE_INT first, HOST_WIDE_INT size, int sol)\n \t size is at least 4096 - (96 + 2) * 8 = 3312 bytes, which is enough.\n \t Also compute the address of the last probe for the memory stack\n \t (which grows towards lower addresses).  */\n-      emit_insn (gen_rtx_SET (VOIDmode, r3, plus_constant (r3, 4095)));\n+      emit_insn (gen_rtx_SET (VOIDmode, r3, plus_constant (Pmode, r3, 4095)));\n       emit_insn (gen_rtx_SET (VOIDmode, r2,\n \t\t\t      gen_rtx_PLUS (Pmode, stack_pointer_rtx, r2)));\n \n@@ -3328,12 +3328,12 @@ ia64_emit_probe_stack_range (HOST_WIDE_INT first, HOST_WIDE_INT size, int sol)\n       for (i = 2 * PROBE_INTERVAL; i < size; i += PROBE_INTERVAL)\n \t{\n \t  emit_insn (gen_rtx_SET (VOIDmode, r2,\n-\t\t\t\t  plus_constant (r2, -PROBE_INTERVAL)));\n+\t\t\t\t  plus_constant (Pmode, r2, -PROBE_INTERVAL)));\n \t  emit_stack_probe (r2);\n \t}\n \n       emit_insn (gen_rtx_SET (VOIDmode, r2,\n-\t\t\t      plus_constant (r2,\n+\t\t\t      plus_constant (Pmode, r2,\n \t\t\t\t\t     (i - PROBE_INTERVAL) - size)));\n       emit_stack_probe (r2);\n     }\n@@ -3394,7 +3394,8 @@ ia64_emit_probe_stack_range (HOST_WIDE_INT first, HOST_WIDE_INT size, int sol)\n       if (size != rounded_size)\n \t{\n \t  emit_insn (gen_rtx_SET (VOIDmode, r2,\n-\t\t\t\t  plus_constant (r2, rounded_size - size)));\n+\t\t\t\t  plus_constant (Pmode, r2,\n+\t\t\t\t\t\t rounded_size - size)));\n \t  emit_stack_probe (r2);\n \t}\n     }"}]}