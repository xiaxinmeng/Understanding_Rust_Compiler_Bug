{"sha": "d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4Y2Q1NDNjYWI1ZTVkZGY0NWZjYzNmYjEzMzI2MzJhYTgzYjIxZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-04-02T18:36:01Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-04-02T18:36:01Z"}, "message": "* config/h8300/h8300.md (a peephole2): New.\n\nFrom-SVN: r65172", "tree": {"sha": "3cf04ae57e1efad08e98ad49d8599bf522117724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cf04ae57e1efad08e98ad49d8599bf522117724"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e/comments", "author": null, "committer": null, "parents": [{"sha": "b30abdf2561e7b54a82b0f2a53ddf62bc412aeaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30abdf2561e7b54a82b0f2a53ddf62bc412aeaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30abdf2561e7b54a82b0f2a53ddf62bc412aeaf"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "5642785312f37ff5523701936eb9d7a412d9c874", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "patch": "@@ -1,3 +1,7 @@\n+2003-04-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a peephole2): New.\n+\n 2003-04-02  Richard Henderson  <rth@redhat.com>\n \n \t* except.c (sjlj_find_directly_reachable_regions): Recognize when"}, {"sha": "4b545431b4589880d5a61d5ba4284856debed4ef", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d98cd543cab5e5ddf45fcc3fb1332632aa83b21e/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=d98cd543cab5e5ddf45fcc3fb1332632aa83b21e", "patch": "@@ -4101,6 +4101,9 @@\n ;; dead 0xffffff?? except -1 and -2 eq/ne   xor.b and not.l\n ;; dead 0xffff??ff                  eq/ne   xor.b and not.l\n ;;\n+;; live     1                       geu/ltu copy and shlr.l\n+;; live     3 (H8S)                 geu/ltu copy and shlr.l\n+;;\n ;; dead     1                       geu/ltu shlr.l\n ;; dead     3 (H8S)                 geu/ltu shlr.l\n ;;\n@@ -4225,6 +4228,48 @@\n \t\t      (pc)))]\n   \"operands[4] = GEN_INT (INTVAL (operands[1]) ^ -1);\")\n \n+;; Transform\n+;;\n+;;\tcmp.l\t#1,er0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tmov.l\ter0,er1\n+;;\tshlr.l\ter1\n+;;\tbne\t.L1\n+\n+(define_peephole2\n+  [(match_scratch:SI 4 \"r\")\n+   (set (cc0)\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"const_int_operand\" \"\")))\n+   (set (pc)\n+\t(if_then_else (match_operator 2 \"gtuleu_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && !peep2_reg_dead_p (1, operands[0])\n+   && (INTVAL (operands[1]) == 1\n+\t|| (TARGET_H8300S && INTVAL (operands[1]) == 3))\"\n+  [(set (match_dup 4)\n+\t(match_dup 0))\n+   (parallel [(set (match_dup 4)\n+\t\t   (lshiftrt:SI (match_dup 4)\n+\t\t\t\t(match_dup 6)))\n+\t      (clobber (scratch:QI))])\n+   (set (cc0)\n+\t(match_dup 4))\n+   (set (pc)\n+\t(if_then_else (match_dup 5)\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))]\n+  \"operands[5] = ((GET_CODE (operands[2]) == GTU) ?\n+\t\t  gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx) :\n+\t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\n+   operands[6] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n+\n ;; Transform\n ;;\n ;;\tcmp.l\t#1,er0"}]}