{"sha": "702d2020441d58a06cd7b161483d9c099e56c72b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyZDIwMjA0NDFkNThhMDZjZDdiMTYxNDgzZDljMDk5ZTU2YzcyYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:37:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:37:54Z"}, "message": "[multiple changes]\n\n2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n\n\t* s-taprop-vxworks.adb, s-taprop-mingw.adb, s-taprop-linux.adb,\n\ts-taprop-solaris.adb (Create_Task): Not_A_Specific_CPU can be assigned\n\tto any dispatching domain.\n\n2011-08-31  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\n2011-08-31  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch6.adb (Get_Generic_Parent_Type): Don't query Subtype_Indication\n\ton nodes for which it is not defined.\n\t(Is_Non_Overriding_Operation): Exit the loop when we find a generic\n\tparent type.\n\n2011-08-31  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch3.adb (Process_Full_View): Disable legality check if\n\tIn_Instance, to avoid spurious errors.\n\t* sem_ch12.adb (Validate_Derived_Type_Instance): Disable legality check\n\tif In_Instance, to avoid spurious errors.\n\n2011-08-31  Pascal Obry  <obry@adacore.com>\n\n\t* a-direct.adb: Use Dir_Seps everywhere to properly handle all\n\tdirectory speparators.\n\t(Compose): Use Dir_Seps to handle both forms.\n\t(Create_Path): Use Dir_Seps instead of explicit check, no semantic\n\tchanges.\n\t(Extension): Use Dir_Seps to handle both forms.\n\n2011-08-31  Pascal Obry  <obry@adacore.com>\n\n\t* prj-conf.adb: Minor reformatting.\n\nFrom-SVN: r178372", "tree": {"sha": "87048b5ff4d217dd7e8fcd9e17b9a880972dc532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87048b5ff4d217dd7e8fcd9e17b9a880972dc532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/702d2020441d58a06cd7b161483d9c099e56c72b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702d2020441d58a06cd7b161483d9c099e56c72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/702d2020441d58a06cd7b161483d9c099e56c72b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702d2020441d58a06cd7b161483d9c099e56c72b/comments", "author": null, "committer": null, "parents": [{"sha": "67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67645bdee6a5c57b2ce51bbafbb69cf510ebf189"}], "stats": {"total": 232, "additions": 151, "deletions": 81}, "files": [{"sha": "1fb208879d72a9896bc316d88ba3438f2f243217", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -1,3 +1,40 @@\n+2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprop-vxworks.adb, s-taprop-mingw.adb, s-taprop-linux.adb,\n+\ts-taprop-solaris.adb (Create_Task): Not_A_Specific_CPU can be assigned\n+\tto any dispatching domain.\n+\n+2011-08-31  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\n+2011-08-31  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch6.adb (Get_Generic_Parent_Type): Don't query Subtype_Indication\n+\ton nodes for which it is not defined.\n+\t(Is_Non_Overriding_Operation): Exit the loop when we find a generic\n+\tparent type.\n+\n+2011-08-31  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Full_View): Disable legality check if\n+\tIn_Instance, to avoid spurious errors.\n+\t* sem_ch12.adb (Validate_Derived_Type_Instance): Disable legality check\n+\tif In_Instance, to avoid spurious errors.\n+\n+2011-08-31  Pascal Obry  <obry@adacore.com>\n+\n+\t* a-direct.adb: Use Dir_Seps everywhere to properly handle all\n+\tdirectory speparators.\n+\t(Compose): Use Dir_Seps to handle both forms.\n+\t(Create_Path): Use Dir_Seps instead of explicit check, no semantic\n+\tchanges.\n+\t(Extension): Use Dir_Seps to handle both forms.\n+\n+2011-08-31  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-conf.adb: Minor reformatting.\n+\n 2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n \n \t* aspects.ads (Aspect_Id, Aspect_Argument, Aspect_Names): Add the"}, {"sha": "b9dee7fdcddd177fb73765a4f212943bea6c70bb", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -32,7 +32,7 @@\n with Ada.Calendar;               use Ada.Calendar;\n with Ada.Calendar.Formatting;    use Ada.Calendar.Formatting;\n with Ada.Directories.Validity;   use Ada.Directories.Validity;\n-with Ada.Strings.Maps;\n+with Ada.Strings.Maps;           use Ada; use Ada.Strings.Maps;\n with Ada.Strings.Fixed;\n with Ada.Strings.Unbounded;      use Ada.Strings.Unbounded;\n with Ada.Unchecked_Conversion;\n@@ -61,8 +61,7 @@ package body Ada.Directories is\n    pragma Import (C, Dir_Separator, \"__gnat_dir_separator\");\n    --  Running system default directory separator\n \n-   Dir_Seps : constant Ada.Strings.Maps.Character_Set :=\n-                Ada.Strings.Maps.To_Set (\"/\\\");\n+   Dir_Seps : constant Character_Set := Strings.Maps.To_Set (\"/\\\");\n    --  UNIX and DOS style directory separators\n \n    Max_Path : Integer;\n@@ -175,7 +174,7 @@ package body Ada.Directories is\n \n          --  Add a directory separator if needed\n \n-         if Last /= 0 and then Result (Last) /= Dir_Separator then\n+         if Last /= 0 and then not Is_In (Result (Last), Dir_Seps) then\n             Last := Last + 1;\n             Result (Last) := Dir_Separator;\n          end if;\n@@ -457,17 +456,13 @@ package body Ada.Directories is\n \n             --  Look for the end of an intermediate directory\n \n-            if New_Dir (J) /= Dir_Separator and then\n-               New_Dir (J) /= '/'\n-            then\n+            if not Is_In (New_Dir (J), Dir_Seps) then\n                Last := J;\n \n             --  We have found a new intermediate directory each time we find\n             --  a first directory separator.\n \n-            elsif New_Dir (J - 1) /= Dir_Separator and then\n-                  New_Dir (J - 1) /= '/'\n-            then\n+            elsif not Is_In (New_Dir (J - 1), Dir_Seps) then\n \n                --  No need to create the directory if it already exists\n \n@@ -664,7 +659,7 @@ package body Ada.Directories is\n             --  If a directory separator is found before a dot, there is no\n             --  extension.\n \n-            if Name (Pos) = Dir_Separator then\n+            if Is_In (Name (Pos), Dir_Seps) then\n                return Empty_String;\n \n             elsif Name (Pos) = '.' then"}, {"sha": "3811e19c083813cb217463c55d7ffe9e498076da", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -7920,7 +7920,12 @@ package body Exp_Ch4 is\n       --  Insert explicit dereference if required\n \n       if Is_Access_Type (Ptyp) then\n-         Set_Etype (P, Ptyp); -- in case it's private\n+\n+         --  First set prefix type to proper access type, in case it currently\n+         --  has a private (non-access) view of this type.\n+\n+         Set_Etype (P, Ptyp);\n+\n          Insert_Explicit_Dereference (P);\n          Analyze_And_Resolve (P, Designated_Type (Ptyp));\n "}, {"sha": "ae1d0c6ed7ab8a1630bd216d73aea8582d1ce28f", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 47, "deletions": 40, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -162,12 +162,12 @@ package body Prj.Conf is\n                --  configuration list.\n \n                declare\n-                  Conf_List : String_List_Id := Conf_Attr.Value.Values;\n-                  Conf_Elem : String_Element;\n                   User_List : constant String_List_Id :=\n                                 User_Attr.Value.Values;\n-                  New_List : String_List_Id;\n-                  New_Elem : String_Element;\n+                  Conf_List : String_List_Id := Conf_Attr.Value.Values;\n+                  Conf_Elem : String_Element;\n+                  New_List  : String_List_Id;\n+                  New_Elem  : String_Element;\n \n                begin\n                   --  Create new list\n@@ -525,7 +525,7 @@ package body Prj.Conf is\n             if Proj.Project.Qualifier = Aggregate then\n                declare\n                   List : Aggregated_Project_List :=\n-                    Proj.Project.Aggregated_Projects;\n+                           Proj.Project.Aggregated_Projects;\n                begin\n                   while List /= null loop\n                      Debug_Output\n@@ -549,12 +549,13 @@ package body Prj.Conf is\n    ------------------\n \n    function Check_Target\n-     (Config_File  : Project_Id;\n+     (Config_File        : Project_Id;\n       Autoconf_Specified : Boolean;\n-      Project_Tree : Prj.Project_Tree_Ref;\n-      Target       : String := \"\") return Boolean\n+      Project_Tree       : Prj.Project_Tree_Ref;\n+      Target             : String := \"\") return Boolean\n    is\n-      Shared : constant Shared_Project_Tree_Data_Access := Project_Tree.Shared;\n+      Shared   : constant Shared_Project_Tree_Data_Access :=\n+                   Project_Tree.Shared;\n       Variable : constant Variable_Value :=\n                    Value_Of\n                      (Name_Target, Config_File.Decl.Attributes, Shared);\n@@ -712,6 +713,7 @@ package body Prj.Conf is\n       -------------------------\n \n       function Get_Config_Switches return Argument_List_Access is\n+\n          package Language_Htable is new GNAT.HTable.Simple_HTable\n            (Header_Num => Prj.Header_Num,\n             Element    => Name_Id,\n@@ -731,6 +733,10 @@ package body Prj.Conf is\n          --  Add all --config switches for this project. This is also called\n          --  for aggregate projects.\n \n+         -------------------------------------\n+         -- Add_Config_Switches_For_Project --\n+         -------------------------------------\n+\n          procedure Add_Config_Switches_For_Project\n            (Project    : Project_Id;\n             Tree       : Project_Tree_Ref;\n@@ -828,9 +834,9 @@ package body Prj.Conf is\n \n       begin\n          For_Every_Imported_Project\n-           (By         => Project,\n-            Tree       => Project_Tree,\n-            With_State => Dummy,\n+           (By                 => Project,\n+            Tree               => Project_Tree,\n+            With_State         => Dummy,\n             Include_Aggregated => True);\n \n          Name  := Language_Htable.Get_First;\n@@ -859,10 +865,10 @@ package body Prj.Conf is\n \n             declare\n                Config_Command : constant String :=\n-                 \"--config=\" & Get_Name_String (Name);\n+                                  \"--config=\" & Get_Name_String (Name);\n \n                Runtime_Name   : constant String :=\n-                 Runtime_Name_For (Name);\n+                                  Runtime_Name_For (Name);\n \n             begin\n                if Variable = Nil_Variable_Value\n@@ -876,7 +882,7 @@ package body Prj.Conf is\n \n                   declare\n                      Compiler_Command : constant String :=\n-                       Get_Name_String (Variable.Value);\n+                                          Get_Name_String (Variable.Value);\n \n                   begin\n                      if Is_Absolute_Path (Compiler_Command) then\n@@ -1245,8 +1251,8 @@ package body Prj.Conf is\n       end if;\n \n       if Config_File_Path = null then\n-         if (not Allow_Automatic_Generation) and then\n-            Config_File_Name /= \"\"\n+         if (not Allow_Automatic_Generation)\n+           and then Config_File_Name /= \"\"\n          then\n             Raise_Invalid_Config\n               (\"could not locate main configuration project \"\n@@ -1386,18 +1392,18 @@ package body Prj.Conf is\n \n       Prj.Initialize (Project_Tree);\n \n-      Main_Project      := No_Project;\n+      Main_Project := No_Project;\n       Automatically_Generated := False;\n \n       Prj.Part.Parse\n-        (In_Tree                => Project_Node_Tree,\n-         Project                => User_Project_Node,\n-         Project_File_Name      => Project_File_Name,\n-         Errout_Handling        => Prj.Part.Finalize_If_Error,\n-         Packages_To_Check      => Packages_To_Check,\n-         Current_Directory      => Current_Directory,\n-         Is_Config_File         => False,\n-         Env                    => Env);\n+        (In_Tree           => Project_Node_Tree,\n+         Project           => User_Project_Node,\n+         Project_File_Name => Project_File_Name,\n+         Errout_Handling   => Prj.Part.Finalize_If_Error,\n+         Packages_To_Check => Packages_To_Check,\n+         Current_Directory => Current_Directory,\n+         Is_Config_File    => False,\n+         Env               => Env);\n \n       if User_Project_Node = Empty_Node then\n          User_Project_Node := Empty_Node;\n@@ -1442,9 +1448,10 @@ package body Prj.Conf is\n       On_Load_Config             : Config_File_Hook := null;\n       Reset_Tree                 : Boolean := True)\n    is\n-      Shared : constant Shared_Project_Tree_Data_Access := Project_Tree.Shared;\n+      Shared              : constant Shared_Project_Tree_Data_Access :=\n+                              Project_Tree.Shared;\n       Main_Config_Project : Project_Id;\n-      Success : Boolean;\n+      Success             : Boolean;\n \n    begin\n       Main_Project := No_Project;\n@@ -1468,10 +1475,10 @@ package body Prj.Conf is\n          if not Is_Absolute_Path (Project_Tree.Source_Info_File_Name.all) then\n             declare\n                Obj_Dir : constant Variable_Value :=\n-                 Value_Of\n-                   (Name_Object_Dir,\n-                    Main_Project.Decl.Attributes,\n-                    Shared);\n+                           Value_Of\n+                             (Name_Object_Dir,\n+                              Main_Project.Decl.Attributes,\n+                              Shared);\n \n             begin\n                if Obj_Dir = Nil_Variable_Value or else Obj_Dir.Default then\n@@ -1523,16 +1530,16 @@ package body Prj.Conf is\n       --  Finish processing the user's project\n \n       Prj.Proc.Process_Project_Tree_Phase_2\n-        (In_Tree                    => Project_Tree,\n-         Project                    => Main_Project,\n-         Success                    => Success,\n-         From_Project_Node          => User_Project_Node,\n-         From_Project_Node_Tree     => Project_Node_Tree,\n-         Env                        => Env);\n+        (In_Tree                => Project_Tree,\n+         Project                => Main_Project,\n+         Success                => Success,\n+         From_Project_Node      => User_Project_Node,\n+         From_Project_Node_Tree => Project_Node_Tree,\n+         Env                    => Env);\n \n       if Success then\n-         if Project_Tree.Source_Info_File_Name /= null and then\n-            not Project_Tree.Source_Info_File_Exists\n+         if Project_Tree.Source_Info_File_Name /= null\n+           and then not Project_Tree.Source_Info_File_Exists\n          then\n             Write_Source_Info_File (Project_Tree);\n          end if;"}, {"sha": "a80d14947db8fe7ff67058f25fc1c78258a2c8b9", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -823,6 +823,7 @@ package body System.Task_Primitives.Operations is\n       --  processors for the domain.\n \n       if T.Common.Domain /= null and then\n+        T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU and then\n         (T.Common.Base_CPU not in T.Common.Domain'Range\n          or else not T.Common.Domain (T.Common.Base_CPU))\n       then"}, {"sha": "0d380da2c52336f2c010ae3654472ea86c3f0a72", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -895,12 +895,15 @@ package body System.Task_Primitives.Operations is\n       Result         : DWORD;\n       Entry_Point    : PTHREAD_START_ROUTINE;\n \n+      use type System.Multiprocessors.CPU_Range;\n+\n    begin\n       --  Check whether both Dispatching_Domain and CPU are specified for the\n       --  task, and the CPU value is not contained within the range of\n       --  processors for the domain.\n \n       if T.Common.Domain /= null and then\n+        T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU and then\n         (T.Common.Base_CPU not in T.Common.Domain'Range\n          or else not T.Common.Domain (T.Common.Base_CPU))\n       then"}, {"sha": "042fed252126dc3a96f7ab54edaad5bc46fe82b4", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -974,13 +974,15 @@ package body System.Task_Primitives.Operations is\n       --  actual use.\n \n       use System.Task_Info;\n+      use type System.Multiprocessors.CPU_Range;\n \n    begin\n       --  Check whether both Dispatching_Domain and CPU are specified for the\n       --  task, and the CPU value is not contained within the range of\n       --  processors for the domain.\n \n       if T.Common.Domain /= null and then\n+        T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU and then\n         (T.Common.Base_CPU not in T.Common.Domain'Range\n          or else not T.Common.Domain (T.Common.Base_CPU))\n       then"}, {"sha": "f0e9e038a83c472ae8add1e93745fcc6af16f756", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -890,12 +890,15 @@ package body System.Task_Primitives.Operations is\n    is\n       Adjusted_Stack_Size : size_t;\n \n+      use type System.Multiprocessors.CPU_Range;\n+\n    begin\n       --  Check whether both Dispatching_Domain and CPU are specified for the\n       --  task, and the CPU value is not contained within the range of\n       --  processors for the domain.\n \n       if T.Common.Domain /= null and then\n+        T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU and then\n         (T.Common.Base_CPU not in T.Common.Domain'Range\n          or else not T.Common.Domain (T.Common.Base_CPU))\n       then"}, {"sha": "af9555d7faefa1d3fa1f477834a11110853c2894", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -10418,11 +10418,15 @@ package body Sem_Ch12 is\n            and then not Is_Limited_Type (A_Gen_T)\n            and then Ada_Version >= Ada_2012\n          then\n-            Error_Msg_NE\n-              (\"actual for non-limited & cannot be a limited type\", Actual,\n-               Gen_T);\n-            Explain_Limited_Type (Act_T, Actual);\n-            Abandon_Instantiation (Actual);\n+            if In_Instance then\n+               null;\n+            else\n+               Error_Msg_NE\n+                 (\"actual for non-limited & cannot be a limited type\", Actual,\n+                  Gen_T);\n+               Explain_Limited_Type (Act_T, Actual);\n+               Abandon_Instantiation (Actual);\n+            end if;\n          end if;\n       end Validate_Derived_Type_Instance;\n \n@@ -10556,11 +10560,15 @@ package body Sem_Ch12 is\n          if Is_Limited_Type (Act_T)\n            and then not Is_Limited_Type (A_Gen_T)\n          then\n-            Error_Msg_NE\n-              (\"actual for non-limited & cannot be a limited type\", Actual,\n-               Gen_T);\n-            Explain_Limited_Type (Act_T, Actual);\n-            Abandon_Instantiation (Actual);\n+            if In_Instance then\n+               null;\n+            else\n+               Error_Msg_NE\n+                 (\"actual for non-limited & cannot be a limited type\", Actual,\n+                  Gen_T);\n+               Explain_Limited_Type (Act_T, Actual);\n+               Abandon_Instantiation (Actual);\n+            end if;\n \n          elsif Known_To_Have_Preelab_Init (A_Gen_T)\n            and then not Has_Preelaborable_Initialization (Act_T)"}, {"sha": "542ffee3f515ce9ae4e257bf9367d66aa1389427", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -2868,8 +2868,8 @@ package body Sem_Ch3 is\n \n       --   2. Those generated by the Expression\n \n-      --   3. Those used to constrained the Object Definition with the\n-      --       expression constraints when it is unconstrained\n+      --   3. Those used to constrain the Object Definition with the\n+      --       expression constraints when the definition is unconstrained\n \n       --  They must be generated in this order to avoid order of elaboration\n       --  issues. Thus the first step (after entering the name) is to analyze\n@@ -17399,9 +17399,13 @@ package body Sem_Ch3 is\n         and then (Is_Limited_Type (Full_T)\n                    or else Is_Limited_Composite (Full_T))\n       then\n-         Error_Msg_N\n-           (\"completion of nonlimited type cannot be limited\", Full_T);\n-         Explain_Limited_Type (Full_T, Full_T);\n+         if In_Instance then\n+            null;\n+         else\n+            Error_Msg_N\n+              (\"completion of nonlimited type cannot be limited\", Full_T);\n+            Explain_Limited_Type (Full_T, Full_T);\n+         end if;\n \n       elsif Is_Abstract_Type (Full_T)\n         and then not Is_Abstract_Type (Priv_T)"}, {"sha": "242cfcbca046dbba579847613c8832bb8c112661", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702d2020441d58a06cd7b161483d9c099e56c72b/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=702d2020441d58a06cd7b161483d9c099e56c72b", "patch": "@@ -7214,6 +7214,7 @@ package body Sem_Ch6 is\n \n       function Get_Generic_Parent_Type (F_Typ : Entity_Id) return Entity_Id is\n          G_Typ : Entity_Id;\n+         Defn  : Node_Id;\n          Indic : Node_Id;\n \n       begin\n@@ -7226,19 +7227,21 @@ package body Sem_Ch6 is\n             --  is needed for cases where a full derived type has been\n             --  rewritten.)\n \n-            Indic := Subtype_Indication\n-                       (Type_Definition (Original_Node (Parent (F_Typ))));\n+            Defn := Type_Definition (Original_Node (Parent (F_Typ)));\n+            if Nkind (Defn) = N_Derived_Type_Definition then\n+               Indic := Subtype_Indication (Defn);\n \n-            if Nkind (Indic) = N_Subtype_Indication then\n-               G_Typ := Entity (Subtype_Mark (Indic));\n-            else\n-               G_Typ := Entity (Indic);\n-            end if;\n+               if Nkind (Indic) = N_Subtype_Indication then\n+                  G_Typ := Entity (Subtype_Mark (Indic));\n+               else\n+                  G_Typ := Entity (Indic);\n+               end if;\n \n-            if Nkind (Parent (G_Typ)) = N_Subtype_Declaration\n-              and then Present (Generic_Parent_Type (Parent (G_Typ)))\n-            then\n-               return Generic_Parent_Type (Parent (G_Typ));\n+               if Nkind (Parent (G_Typ)) = N_Subtype_Declaration\n+                 and then Present (Generic_Parent_Type (Parent (G_Typ)))\n+               then\n+                  return Generic_Parent_Type (Parent (G_Typ));\n+               end if;\n             end if;\n          end if;\n \n@@ -7295,9 +7298,10 @@ package body Sem_Ch6 is\n         and then In_Private_Part (Current_Scope)\n         and then Comes_From_Source (New_E)\n       then\n-         --  We examine the formals and result subtype of the inherited\n-         --  operation, to determine whether their type is derived from (the\n-         --  instance of) a generic type.\n+         --  We examine the formals and result type of the inherited operation,\n+         --  to determine whether their type is derived from (the instance of)\n+         --  a generic type. The first such formal or result type is the one\n+         --  tested.\n \n          Formal := First_Formal (Prev_E);\n          while Present (Formal) loop\n@@ -7308,6 +7312,7 @@ package body Sem_Ch6 is\n             end if;\n \n             G_Typ := Get_Generic_Parent_Type (F_Typ);\n+            exit when Present (G_Typ);\n \n             Next_Formal (Formal);\n          end loop;"}]}