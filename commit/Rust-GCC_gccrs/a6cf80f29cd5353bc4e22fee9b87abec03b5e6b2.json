{"sha": "a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjZjgwZjI5Y2Q1MzUzYmM0ZTIyZmVlOWI4N2FiZWMwM2I1ZTZiMg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-11-05T18:17:20Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-11-05T18:17:20Z"}, "message": "rs6000.c (compute_vrsave_mask): Correct off-by-one error.\n\n\t* config/rs6000/rs6000.c (compute_vrsave_mask): Correct off-by-one\n\terror.\n\nFrom-SVN: r73276", "tree": {"sha": "d80cb05ec00f652d9cc8f48403dc97afa290b60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d80cb05ec00f652d9cc8f48403dc97afa290b60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "142d1f57d6c4a40bcf07a243bf71465bf72b1012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142d1f57d6c4a40bcf07a243bf71465bf72b1012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142d1f57d6c4a40bcf07a243bf71465bf72b1012"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8f40fac01f3dbc2bfacd4c5096f0cca4b734f517", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "patch": "@@ -12,6 +12,9 @@\n \n 2003-11-05  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/rs6000/rs6000.c (compute_vrsave_mask): Correct off-by-one\n+\terror.\n+\n \t* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Darwin\n \tneeds VRSAVE.\n "}, {"sha": "f2bc8d5dd627cad221c73750edb1fa4a33166346", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a6cf80f29cd5353bc4e22fee9b87abec03b5e6b2", "patch": "@@ -10109,7 +10109,7 @@ compute_vrsave_mask (void)\n      them in again.  More importantly, the mask we compute here is\n      used to generate CLOBBERs in the set_vrsave insn, and we do not\n      wish the argument registers to die.  */\n-  for (i = cfun->args_info.vregno; i >= ALTIVEC_ARG_MIN_REG; --i)\n+  for (i = cfun->args_info.vregno - 1; i >= ALTIVEC_ARG_MIN_REG; --i)\n     mask &= ~ALTIVEC_REG_BIT (i);\n \n   /* Similarly, remove the return value from the set.  */"}]}