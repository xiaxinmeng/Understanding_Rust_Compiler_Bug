{"sha": "23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNhYzdkN2U2Y2Y0OTg2ODJmMTBmNDFjYTg1ZWEyOTgxZWM1M2MyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-22T14:53:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-22T14:53:20Z"}, "message": "explow.c (set_mem_attributes): Avoid returning a bogus alias set from a new MEM.\n\n        * explow.c (set_mem_attributes): Avoid returning a bogus alias set\n        from a new MEM.\n\nFrom-SVN: r45108", "tree": {"sha": "4bd5e8caffe00fb80b6c35339582c999062a2e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bd5e8caffe00fb80b6c35339582c999062a2e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ac7d7e6cf498682f10f41ca85ea2981ec53c26/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2270623af33a51bb6776a775bee05f142db83e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2270623af33a51bb6776a775bee05f142db83e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2270623af33a51bb6776a775bee05f142db83e7c"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b180df7533f5bcb557f7e643b151985f81e2d16c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ac7d7e6cf498682f10f41ca85ea2981ec53c26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ac7d7e6cf498682f10f41ca85ea2981ec53c26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "patch": "@@ -1,5 +1,8 @@\n 2001-08-22  Jason Merrill  <jason_merrill@redhat.com>\n \n+\t* explow.c (set_mem_attributes): Avoid returning a bogus alias set\n+\tfrom a new MEM.\n+\n \t* jump.c (squeeze_notes): Take parms by reference.  Handle END being\n \ta squeezable note.\n \t* rtl.h: Adjust."}, {"sha": "d01067de7ff12f806540643a0b7bad335b6b16fe", "filename": "gcc/explow.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ac7d7e6cf498682f10f41ca85ea2981ec53c26/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ac7d7e6cf498682f10f41ca85ea2981ec53c26/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=23ac7d7e6cf498682f10f41ca85ea2981ec53c26", "patch": "@@ -670,7 +670,16 @@ set_mem_attributes (ref, t, objectp)\n      here, because, in C and C++, the fact that a location is accessed\n      through a const expression does not mean that the value there can\n      never change.  */\n+\n+  /* If we have already set DECL_RTL = ref, get_alias_set will get the\n+     wrong answer, as it assumes that DECL_RTL already has the right alias\n+     info.  Callers should not set DECL_RTL until after the call to\n+     set_mem_attributes.  */\n+  if (DECL_P (t) && ref == DECL_RTL_IF_SET (t))\n+    abort ();\n+\n   set_mem_alias_set (ref, get_alias_set (t));\n+\n   MEM_VOLATILE_P (ref) = TYPE_VOLATILE (type);\n   MEM_IN_STRUCT_P (ref) = AGGREGATE_TYPE_P (type);\n "}]}