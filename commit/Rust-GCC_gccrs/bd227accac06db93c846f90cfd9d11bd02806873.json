{"sha": "bd227accac06db93c846f90cfd9d11bd02806873", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyMjdhY2NhYzA2ZGI5M2M4NDZmOTBjZmQ5ZDExYmQwMjgwNjg3Mw==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "1999-05-08T01:46:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-05-08T01:46:13Z"}, "message": "Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n\nFranz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n        * rs6000.h (RS6000_VARARGS_OFFSET): Die die die.\n        (CUMULATIVE_ARGS): Remove varargs_offset; update commentary.\n        * rs6000.c (setup_incoming_varargs): Fix typo last change.\n        (init_cumulative_args): Remove varargs_offset references.\n        * rs6000/linux.h (NO_IMPLICIT_EXTERN_C): Define.\n        (MD_EXEC_PREFIX, MD_STARTFILE_PREFIX): Undefine.\n\nFrom-SVN: r26835", "tree": {"sha": "4bc93e75118777f5021caede4466fee56fa214d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bc93e75118777f5021caede4466fee56fa214d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd227accac06db93c846f90cfd9d11bd02806873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd227accac06db93c846f90cfd9d11bd02806873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd227accac06db93c846f90cfd9d11bd02806873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd227accac06db93c846f90cfd9d11bd02806873/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccc4ae070d86aebd022b7609c8477bd46a7695c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc4ae070d86aebd022b7609c8477bd46a7695c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc4ae070d86aebd022b7609c8477bd46a7695c7"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "7f408e8767cf14c3278917dc4fd03a77f8e092de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd227accac06db93c846f90cfd9d11bd02806873", "patch": "@@ -1,3 +1,13 @@\n+Sat May  8 01:43:02 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* rs6000.h (RS6000_VARARGS_OFFSET): Die die die.\n+\t(CUMULATIVE_ARGS): Remove varargs_offset; update commentary.\n+\t* rs6000.c (setup_incoming_varargs): Fix typo last change.\n+\t(init_cumulative_args): Remove varargs_offset references.\n+\n+\t* rs6000/linux.h (NO_IMPLICIT_EXTERN_C): Define.\n+\t(MD_EXEC_PREFIX, MD_STARTFILE_PREFIX): Undefine.\n+\n Sat May  8 01:34:19 1999  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n \t* reload1.c (gen_mode_int): New function."}, {"sha": "13e3df2b44cf4beed78cb19a227a891bcb4292e1", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=bd227accac06db93c846f90cfd9d11bd02806873", "patch": "@@ -22,6 +22,12 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"rs6000/sysv4.h\"\n \n+/* Don't assume anything about the header files. */\n+#define NO_IMPLICIT_EXTERN_C\n+\n+#undef MD_EXEC_PREFIX\n+#undef MD_STARTFILE_PREFIX\n+\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \\\n  \"-DPPC -D__ELF__ -Dpowerpc -Acpu(powerpc) -Amachine(powerpc)\""}, {"sha": "108f0d4bc0b79a89e7c1ec199dbc3eb9dfb724d2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=bd227accac06db93c846f90cfd9d11bd02806873", "patch": "@@ -1258,11 +1258,7 @@ init_cumulative_args (cum, fntype, libname, incoming)\n   cum->call_cookie = CALL_NORMAL;\n \n   if (incoming)\n-    {\n-      cum->nargs_prototype = 1000;\t\t/* don't return a PARALLEL */\n-      if (abi == ABI_V4 || abi == ABI_SOLARIS)\n-\tcum->varargs_offset = RS6000_VARARGS_OFFSET;\n-    }\n+    cum->nargs_prototype = 1000;\t\t/* don't return a PARALLEL */\n \n   else if (cum->prototype)\n     cum->nargs_prototype = (list_length (TYPE_ARG_TYPES (fntype)) - 1\n@@ -1294,9 +1290,6 @@ init_cumulative_args (cum, fntype, libname, incoming)\n \t\t   tree_code_name[ (int)TREE_CODE (ret_type) ]);\n \t}\n \n-      if ((abi == ABI_V4 || abi == ABI_SOLARIS) && incoming)\n-\tfprintf (stderr, \" varargs = %d, \", cum->varargs_offset);\n-\n       if (cum->call_cookie & CALL_NT_DLLIMPORT)\n \tfprintf (stderr, \" dllimport,\");\n \n@@ -1634,7 +1627,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n       rs6000_sysv_varargs_p = 1;\n       if (! no_rtl)\n \tsave_area = plus_constant (virtual_stack_vars_rtx,\n-\t\t\t\t   - RS6000_VARARGS_OFFSET);\n+\t\t\t\t   - RS6000_VARARGS_SIZE);\n     }\n   else\n     rs6000_sysv_varargs_p = 0;"}, {"sha": "05f4f9343e4faef1f0bd26caeab644ed4ce91178", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd227accac06db93c846f90cfd9d11bd02806873/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=bd227accac06db93c846f90cfd9d11bd02806873", "patch": "@@ -1282,11 +1282,6 @@ extern int rs6000_sysv_varargs_p;\n #define RS6000_VARARGS_SIZE \\\n   ((GP_ARG_NUM_REG * (TARGET_32BIT ? 4 : 8)) + (FP_ARG_NUM_REG * 8) + 8)\n \n-/* Offset of V.4 varargs area */\n-#define RS6000_VARARGS_OFFSET\t\t\t\t\t\t\\\n-  (RS6000_ALIGN (current_function_outgoing_args_size, 8)\t\t\\\n-   + RS6000_SAVE_AREA)\n-\n /* Offset within stack frame to start allocating local variables at.\n    If FRAME_GROWS_DOWNWARD, this is the offset to the END of the\n    first local allocated.  Otherwise, it is the offset to the BEGINNING\n@@ -1439,17 +1434,15 @@ extern int rs6000_sysv_varargs_p;\n    floating-point register number, and the third says how many more args we\n    have prototype types for.\n \n-   The System V.4 varargs/stdarg support requires that this structure's size\n-   be a multiple of sizeof(int), and that WORDS, FREGNO, NARGS_PROTOTYPE,\n-   ORIG_NARGS, and VARARGS_OFFSET be the first five ints.  */\n+   The varargs/stdarg support requires that this structure's size\n+   be a multiple of sizeof(int). */\n \n typedef struct rs6000_args\n {\n   int words;\t\t\t/* # words uses for passing GP registers */\n   int fregno;\t\t\t/* next available FP register */\n   int nargs_prototype;\t\t/* # args left in the current prototype */\n   int orig_nargs;\t\t/* Original value of nargs_prototype */\n-  int varargs_offset;\t\t/* offset of the varargs save area */\n   int prototype;\t\t/* Whether a prototype was defined */\n   int call_cookie;\t\t/* Do special things for this call */\n } CUMULATIVE_ARGS;"}]}