{"sha": "196379c6f705582c047916b79e0ea1feded3b9cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2Mzc5YzZmNzA1NTgyYzA0NzkxNmI3OWUwZWExZmVkZWQzYjljZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2010-06-22T07:11:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T07:11:35Z"}, "message": "sem_res.adb (Resolve_Call): If the call is rewritten as an indexed of a parameterless function call...\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Call): If the call is rewritten as an indexed of\n\ta parameterless function call, preserve parentheses of original\n\texpression, for proper handling by pretty printer.\n\t* sem_attr.adb (Analyze_Attribute, case 'Old): Add guard to Process\n\tprocedure, to handle quietly identifiers that have no entity names.\n\t* exp_util.adb (Get_Current_Value_Condition): If the parent of an\n\telsif_part is missing, it has been rewritten as a nested if, and there\n\tis no useful information on the current value of the variable.\n\nFrom-SVN: r161136", "tree": {"sha": "bb1f6d153df51a982dba32067afdaeffdb5f2a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb1f6d153df51a982dba32067afdaeffdb5f2a79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196379c6f705582c047916b79e0ea1feded3b9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196379c6f705582c047916b79e0ea1feded3b9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196379c6f705582c047916b79e0ea1feded3b9cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196379c6f705582c047916b79e0ea1feded3b9cf/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0d103851aea8fdb96bde64a44b8bac395ef6384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d103851aea8fdb96bde64a44b8bac395ef6384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0d103851aea8fdb96bde64a44b8bac395ef6384"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "ec822d3dc27b39d50756d3fdbfad6de3ce695aed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=196379c6f705582c047916b79e0ea1feded3b9cf", "patch": "@@ -1,3 +1,14 @@\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): If the call is rewritten as an indexed of\n+\ta parameterless function call, preserve parentheses of original\n+\texpression, for proper handling by pretty printer.\n+\t* sem_attr.adb (Analyze_Attribute, case 'Old): Add guard to Process\n+\tprocedure, to handle quietly identifiers that have no entity names.\n+\t* exp_util.adb (Get_Current_Value_Condition): If the parent of an\n+\telsif_part is missing, it has been rewritten as a nested if, and there\n+\tis no useful information on the current value of the variable.\n+\n 2010-06-22  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch3.adb (Build_Discriminal): Set default scopes for newly created"}, {"sha": "f948ee15f2c6dd6c3a5b791052471c134320c0b7", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=196379c6f705582c047916b79e0ea1feded3b9cf", "patch": "@@ -2007,6 +2007,17 @@ package body Exp_Util is\n             --  unknown before the ELSE part or after the IF statement.\n \n          elsif Nkind (CV) = N_Elsif_Part then\n+\n+            --  if the Elsif_Part had condition_actions, the elsif has been\n+            --  rewritten as a nested if, and the original elsif_part is\n+            --  detached from the tree, so there is no way to obtain useful\n+            --  information on the current value of the variable.\n+            --  Can this be improved ???\n+\n+            if No (Parent (CV)) then\n+               return;\n+            end if;\n+\n             Stm := Parent (CV);\n \n             --  Before start of ELSIF part"}, {"sha": "a3dfdf0b4987e576e31ec94b9eb504260a056489", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=196379c6f705582c047916b79e0ea1feded3b9cf", "patch": "@@ -3652,6 +3652,7 @@ package body Sem_Attr is\n             function Process (N : Node_Id) return Traverse_Result is\n             begin\n                if Is_Entity_Name (N)\n+                 and then Present (Entity (N))\n                  and then not Is_Formal (Entity (N))\n                  and then Enclosing_Subprogram (Entity (N)) = Subp\n                then"}, {"sha": "89b5e1b4b39bc2617f68d909e3e6fa701ce904b0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196379c6f705582c047916b79e0ea1feded3b9cf/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=196379c6f705582c047916b79e0ea1feded3b9cf", "patch": "@@ -5085,7 +5085,10 @@ package body Sem_Res is\n \n                   --  Since we are correcting a node classification error made\n                   --  by the parser, we call Replace rather than Rewrite.\n+                  --  Preserve the parenthesis count of the node, for use by\n+                  --  tools.\n \n+                  Set_Paren_Count (Index_Node, Paren_Count (N));\n                   Replace (N, Index_Node);\n                   Set_Etype (Prefix (N), Ret_Type);\n                   Set_Etype (N, Typ);"}]}