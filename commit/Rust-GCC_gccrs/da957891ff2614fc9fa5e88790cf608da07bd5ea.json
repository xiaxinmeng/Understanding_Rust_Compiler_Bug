{"sha": "da957891ff2614fc9fa5e88790cf608da07bd5ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5NTc4OTFmZjI2MTRmYzlmYTVlODg3OTBjZjYwOGRhMDdiZDVlYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-10-30T17:48:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-30T17:48:46Z"}, "message": "i386.md (avx2_vec_dup<mode>): Macroize insn from avx2_vec_dup{v8sf,v4sf} using VF1 mode iterator.\n\n\t* config/i386/i386.md (avx2_vec_dup<mode>): Macroize insn from\n\tavx2_vec_dup{v8sf,v4sf} using VF1 mode iterator.\n\t(vec_dupv4sf): Remove expander.\n\t(vec_dupv4sf): Merge from *vec_dupv4sf and *vec_dupv4sf_avx.\n\t(vec_dupv2df): Remove expander.\n\t(vec_dupv2df): Merge from *vec_dupv2df and *vec_dupv2df_sse3.\n\t(*vec_concatv2df): Merge *vec_concatv2df_sse3.\n\t(*vec_dupv4si): Merge *vec_dupv4si_avx.\n\t(*vec_dupv2di): Merge *vec_dupv2di_sse3.\n\nFrom-SVN: r180685", "tree": {"sha": "8d3e3475e6c49b75f280e0cf084a5c314997cfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d3e3475e6c49b75f280e0cf084a5c314997cfcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da957891ff2614fc9fa5e88790cf608da07bd5ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da957891ff2614fc9fa5e88790cf608da07bd5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da957891ff2614fc9fa5e88790cf608da07bd5ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da957891ff2614fc9fa5e88790cf608da07bd5ea/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9db8f45d5d6cb5b6b66f241411f5a44cd72e3eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db8f45d5d6cb5b6b66f241411f5a44cd72e3eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db8f45d5d6cb5b6b66f241411f5a44cd72e3eac"}], "stats": {"total": 192, "additions": 63, "deletions": 129}, "files": [{"sha": "26bb1a95871b7fe9bccec143bbb5bc30fea8e380", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da957891ff2614fc9fa5e88790cf608da07bd5ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da957891ff2614fc9fa5e88790cf608da07bd5ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da957891ff2614fc9fa5e88790cf608da07bd5ea", "patch": "@@ -1,3 +1,15 @@\n+2011-10-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (avx2_vec_dup<mode>): Macroize insn from\n+\tavx2_vec_dup{v8sf,v4sf} using VF1 mode iterator.\n+\t(vec_dupv4sf): Remove expander.\n+\t(vec_dupv4sf): Merge from *vec_dupv4sf and *vec_dupv4sf_avx.\n+\t(vec_dupv2df): Remove expander.\n+\t(vec_dupv2df): Merge from *vec_dupv2df and *vec_dupv2df_sse3.\n+\t(*vec_concatv2df): Merge *vec_concatv2df_sse3.\n+\t(*vec_dupv4si): Merge *vec_dupv4si_avx.\n+\t(*vec_dupv2di): Merge *vec_dupv2di_sse3.\n+\n 2011-10-30  Dmitry Plotnikov  <dplotnikov@ispras.ru>\n \n \t* tree-cfg.c (verify_gimple_assign_unary): Allow vector conversions."}, {"sha": "095997930002eb72b9a8f27bdd9a7f2356711312", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 51, "deletions": 129, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da957891ff2614fc9fa5e88790cf608da07bd5ea/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da957891ff2614fc9fa5e88790cf608da07bd5ea/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=da957891ff2614fc9fa5e88790cf608da07bd5ea", "patch": "@@ -3662,62 +3662,32 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_expand \"vec_dupv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n-\t(vec_duplicate:V4SF\n-\t  (match_operand:SF 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE\"\n-{\n-  if (!TARGET_AVX)\n-    operands[1] = force_reg (SFmode, operands[1]);\n-})\n-\n-(define_insn \"avx2_vec_dupv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_duplicate:V4SF\n+(define_insn \"avx2_vec_dup<mode>\"\n+  [(set (match_operand:VF1 0 \"register_operand\" \"=x\")\n+\t(vec_duplicate:VF1\n \t  (vec_select:SF\n \t    (match_operand:V4SF 1 \"register_operand\" \"x\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX2\"\n   \"vbroadcastss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n     (set_attr \"prefix\" \"vex\")\n-    (set_attr \"mode\" \"V4SF\")])\n+    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*vec_dupv4sf_avx\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n+(define_insn \"vec_dupv4sf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x,x\")\n \t(vec_duplicate:V4SF\n-\t  (match_operand:SF 1 \"nonimmediate_operand\" \"x,m\")))]\n-  \"TARGET_AVX\"\n+\t  (match_operand:SF 1 \"nonimmediate_operand\" \"x,m,0\")))]\n+  \"TARGET_SSE\"\n   \"@\n    vshufps\\t{$0, %1, %1, %0|%0, %1, %1, 0}\n-   vbroadcastss\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog1,ssemov\")\n-   (set_attr \"length_immediate\" \"1,0\")\n-   (set_attr \"prefix_extra\" \"0,1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"avx2_vec_dupv8sf\"\n-  [(set (match_operand:V8SF 0 \"register_operand\" \"=x\")\n-\t(vec_duplicate:V8SF\n-\t  (vec_select:SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)]))))]\n-  \"TARGET_AVX2\"\n-  \"vbroadcastss\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V8SF\")])\n-\n-(define_insn \"*vec_dupv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_duplicate:V4SF\n-\t  (match_operand:SF 1 \"register_operand\" \"0\")))]\n-  \"TARGET_SSE\"\n-  \"shufps\\t{$0, %0, %0|%0, %0, 0}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"length_immediate\" \"1\")\n+   vbroadcastss\\t{%1, %0|%0, %1}\n+   shufps\\t{$0, %0, %0|%0, %0, 0}\"\n+  [(set_attr \"isa\" \"avx,avx,noavx\")\n+   (set_attr \"type\" \"sselog1,ssemov,sselog1\")\n+   (set_attr \"length_immediate\" \"1,0,1\")\n+   (set_attr \"prefix_extra\" \"0,1,*\")\n+   (set_attr \"prefix\" \"vex,vex,orig\")\n    (set_attr \"mode\" \"V4SF\")])\n \n ;; Although insertps takes register source, we prefer\n@@ -4820,69 +4790,43 @@\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"DF,DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,V1DF\")])\n \n-(define_expand \"vec_dupv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"\")\n-\t(vec_duplicate:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n-{\n-  if (!TARGET_SSE3)\n-    operands[1] = force_reg (DFmode, operands[1]);\n-})\n-\n-(define_insn \"*vec_dupv2df_sse3\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(vec_duplicate:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE3\"\n-  \"%vmovddup\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*vec_dupv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+(define_insn \"vec_dupv2df\"\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x\")\n \t(vec_duplicate:V2DF\n-\t  (match_operand:DF 1 \"register_operand\" \"0\")))]\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,xm\")))]\n   \"TARGET_SSE2\"\n-  \"unpcklpd\\t%0, %0\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   unpcklpd\\t%0, %0\n+   %vmovddup\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"noavx,sse3\")\n+   (set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix\" \"orig,maybe_vex\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-(define_insn \"*vec_concatv2df_sse3\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \"xm\")\n-\t  (match_dup 1)))]\n-  \"TARGET_SSE3\"\n-  \"%vmovddup\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"DF\")])\n-\n (define_insn \"*vec_concatv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x,x,x,x,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x,x,x,x,x,x,x\")\n \t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,x,0,x,m,0,0\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" x,x,m,m,C,x,m\")))]\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,x,m,0,x,m,0,0\")\n+\t  (match_operand:DF 2 \"vector_move_operand\"  \" x,x,1,m,m,C,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n    vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovddup\\t{%1, %0|%0, %1}\n    movhpd\\t{%2, %0|%0, %2}\n    vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n    %vmovsd\\t{%1, %0|%0, %1}\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"isa\" \"sse2_noavx,avx,sse2_noavx,avx,sse2,noavx,noavx\")\n+  [(set_attr \"isa\" \"sse2_noavx,avx,sse3,sse2_noavx,avx,sse2,noavx,noavx\")\n    (set (attr \"type\")\n      (if_then_else\n-       (eq_attr \"alternative\" \"0,1\")\n+       (eq_attr \"alternative\" \"0,1,2\")\n        (const_string \"sselog\")\n        (const_string \"ssemov\")))\n-   (set_attr \"prefix_data16\" \"*,*,1,*,*,*,*\")\n-   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig\")\n-   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF,DF,V4SF,V2SF\")])\n+   (set_attr \"prefix_data16\" \"*,*,*,1,*,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex,orig,orig\")\n+   (set_attr \"mode\" \"V2DF,V2DF,DF,V1DF,V1DF,DF,V4SF,V2SF\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n@@ -7537,58 +7481,36 @@\n    (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,orig,orig\")\n    (set_attr \"mode\" \"V2SF,TI,TI,TI,V4SF,V2SF\")])\n \n-(define_insn \"*vec_dupv4si_avx\"\n-  [(set (match_operand:V4SI 0 \"register_operand\"     \"=x,x\")\n-\t(vec_duplicate:V4SI\n-\t  (match_operand:SI 1 \"nonimmediate_operand\" \" x,m\")))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vpshufd\\t{$0, %1, %0|%0, %1, 0}\n-   vbroadcastss\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog1,ssemov\")\n-   (set_attr \"length_immediate\" \"1,0\")\n-   (set_attr \"prefix_extra\" \"0,1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI,V4SF\")])\n-\n (define_insn \"*vec_dupv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\"     \"=x,x,x\")\n \t(vec_duplicate:V4SI\n-\t  (match_operand:SI 1 \"register_operand\" \" x,0\")))]\n+\t  (match_operand:SI 1 \"nonimmediate_operand\" \" x,m,0\")))]\n   \"TARGET_SSE\"\n   \"@\n-   pshufd\\t{$0, %1, %0|%0, %1, 0}\n+   %vpshufd\\t{$0, %1, %0|%0, %1, 0}\n+   vbroadcastss\\t{%1, %0|%0, %1}\n    shufps\\t{$0, %0, %0|%0, %0, 0}\"\n-  [(set_attr \"isa\" \"sse2,*\")\n-   (set_attr \"type\" \"sselog1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"TI,V4SF\")])\n-\n-(define_insn \"*vec_dupv2di_sse3\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=x,x,x\")\n-\t(vec_duplicate:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\" \" 0,x,m\")))]\n-  \"TARGET_SSE3\"\n-  \"@\n-   punpcklqdq\\t%0, %0\n-   vpunpcklqdq\\t{%d1, %0|%0, %d1}\n-   %vmovddup\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,*\")\n-   (set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix\" \"orig,vex,maybe_vex\")\n-   (set_attr \"mode\" \"TI,TI,DF\")])\n+  [(set_attr \"isa\" \"sse2,avx,noavx\")\n+   (set_attr \"type\" \"sselog1,ssemov,sselog1\")\n+   (set_attr \"length_immediate\" \"1,0,1\")\n+   (set_attr \"prefix_extra\" \"0,1,*\")\n+   (set_attr \"prefix\" \"maybe_vex,vex,orig\")\n+   (set_attr \"mode\" \"TI,V4SF,V4SF\")])\n \n (define_insn \"*vec_dupv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=x,x,x,x\")\n \t(vec_duplicate:V2DI\n-\t  (match_operand:DI 1 \"register_operand\" \" 0,0\")))]\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \" 0,x,m,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    punpcklqdq\\t%0, %0\n+   vpunpcklqdq\\t{%d1, %0|%0, %d1}\n+   %vmovddup\\t{%1, %0|%0, %1}\n    movlhps\\t%0, %0\"\n-  [(set_attr \"isa\" \"sse2,*\")\n-   (set_attr \"type\" \"sselog1,ssemov\")\n-   (set_attr \"mode\" \"TI,V4SF\")])\n+  [(set_attr \"isa\" \"sse2_noavx,avx,sse3,noavx\")\n+   (set_attr \"type\" \"sselog1,sselog1,sselog1,ssemov\")\n+   (set_attr \"prefix\" \"orig,vex,maybe_vex,orig\")\n+   (set_attr \"mode\" \"TI,TI,DF,V4SF\")])\n \n (define_insn \"*vec_concatv2si_sse4_1\"\n   [(set (match_operand:V2SI 0 \"register_operand\"     \"=x, x,x,x, x, *y,*y\")"}]}