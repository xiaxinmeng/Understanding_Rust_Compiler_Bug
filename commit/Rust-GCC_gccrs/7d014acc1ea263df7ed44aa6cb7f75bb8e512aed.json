{"sha": "7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QwMTRhY2MxZWEyNjNkZjdlZDQ0YWE2Y2I3Zjc1YmI4ZTUxMmFlZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-27T19:02:51Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-27T19:02:51Z"}, "message": "i386: Remove %q modifier from two pmov insn templates [PR95355]\n\n2020-05-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\tPR target/95355\n\t* config/i386/sse.md\n\t(<mask_codefor>avx512f_<code>v16qiv16si2<mask_name>):\n\tRemove %q operand modifier from insn template.\n\t(avx512f_<code>v8hiv8di2<mask_name>): Ditto.\n\ngcc/testsuite/ChangeLog:\n\tPR target/95355\n\t* gcc.target/i386/pr95355.c: New test.", "tree": {"sha": "b03400cc1e679d390ee62df005f682181cc4d28a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b03400cc1e679d390ee62df005f682181cc4d28a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c98bd673ef93836f03491201f1c63929ea429cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98bd673ef93836f03491201f1c63929ea429cd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98bd673ef93836f03491201f1c63929ea429cd6"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "1cf1b8cea3b29dd4a1bb1f96596c34b215089393", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "patch": "@@ -17559,7 +17559,7 @@\n \t(any_extend:V16SI\n \t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX512F\"\n-  \"vpmov<extsuffix>bd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n+  \"vpmov<extsuffix>bd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n@@ -17935,7 +17935,7 @@\n \t(any_extend:V8DI\n \t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX512F\"\n-  \"vpmov<extsuffix>wq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n+  \"vpmov<extsuffix>wq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])"}, {"sha": "3e4faba19f290e530435a813a9f97251ee1c5a51", "filename": "gcc/testsuite/gcc.target/i386/pr95355.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95355.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d014acc1ea263df7ed44aa6cb7f75bb8e512aed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95355.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95355.c?ref=7d014acc1ea263df7ed44aa6cb7f75bb8e512aed", "patch": "@@ -0,0 +1,20 @@\n+/* PR target/95355 */\n+/* { dg-do assemble { target avx512dq } } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-require-effective-target masm_intel } */\n+/* { dg-options \"-O -fno-tree-dominator-opts -fno-tree-fre -ftree-slp-vectorize -fno-tree-ter -mavx512dq -masm=intel\" } */\n+\n+typedef int __attribute__((__vector_size__(64))) U;\n+typedef __int128 __attribute__((__vector_size__(32))) V;\n+\n+U i;\n+V j;\n+\n+int\n+foo(unsigned char l)\n+{\n+  V m = j % 999;\n+  U n = l <= i;\n+  V o = ((union { U a; V b[2]; }) n).b[0] + m;\n+  return o[0];\n+}"}]}