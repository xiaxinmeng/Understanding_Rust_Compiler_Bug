{"sha": "7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q3OTNlOWIyNWMxYmY0YTEyMjExM2FiMWU1NGFhYjUyOGVlMzJhMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-04-26T21:28:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-04-26T21:28:47Z"}, "message": "re PR bootstrap/6445 (ICE bootstrapping objc for i386-rtems)\n\n\tPR bootstrap/6445\n\t* config/i386/i386.md (untyped_call): Return the value in a float\n\tregister if TARGET_FLOAT_RETURNS_IN_80387, not just if\n\tTARGET_80387.\n\n\tPR c++/6497\n\t* method.c (do_build_assign_ref): Pass a derivation to\n\tbuild_method_call when calling base class assignment operators.\n\n\tPR c++/6497\n\t* g++.dg/inherit/access2.C: New test.\n\n\tPR bootstrap/6445\n\t* gcc.dg/20020426-1.c: New test.\n\nFrom-SVN: r52809", "tree": {"sha": "27f5f676c426e55be8c661c27357c35963978b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27f5f676c426e55be8c661c27357c35963978b65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/comments", "author": null, "committer": null, "parents": [{"sha": "48ba95387db27bf3d27d866b05b81f283ca9c5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ba95387db27bf3d27d866b05b81f283ca9c5bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48ba95387db27bf3d27d866b05b81f283ca9c5bd"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "05394caf8edd69641e6938656c0c98669a91f9e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "patch": "@@ -1,3 +1,10 @@\n+2002-04-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR bootstrap/6445\n+\t* config/i386/i386.md (untyped_call): Return the value in a float\n+\tregister if TARGET_FLOAT_RETURNS_IN_80387, not just if\n+\tTARGET_80387.\n+\n 2002-04-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree.c (tree_int_cst_lt): Compare constants whose types differ"}, {"sha": "4e9ef3ce8ad449a41f99353ba328780fdcae9e9e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "patch": "@@ -1,3 +1,9 @@\n+2002-04-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/6497\n+\t* method.c (do_build_assign_ref): Pass a derivation to\n+\tbuild_method_call when calling base class assignment operators.\n+\n 2002-04-26  Richard Henderson  <rth@redhat.com>\n \n \t* parse.y (yyoverflow): Revert."}, {"sha": "b689067822310d0edd5e42ff1a1eeeea2076ccfd", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "patch": "@@ -636,7 +636,7 @@ do_build_assign_ref (fndecl)\n \t  tree expr = build_method_call (dst,\n \t\t\t\t\t ansi_assopname (NOP_EXPR),\n \t\t\t\t\t build_tree_list (NULL_TREE, src),\n-\t\t\t\t\t NULL,\n+\t\t\t\t\t binfo,\n \t\t\t\t\t LOOKUP_NORMAL | LOOKUP_NONVIRTUAL);\n \t  finish_expr_stmt (expr);\n \t}"}, {"sha": "ffaf4aa2c253964e827f53b2244453db07d99e62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "patch": "@@ -1,3 +1,13 @@\n+2002-04-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/6497\n+\t* g++.dg/inherit/access2.C: New test.\n+\t\n+2002-04-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR bootstrap/6445\n+\t* gcc.dg/20020426-1.c: New test.\n+\n 2002-04-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* g++.dg/abi/enum1.C: New test."}, {"sha": "94523e7298a789aa93be8c3ed0ab9137483648ef", "filename": "gcc/testsuite/gcc.dg/20020426-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d793e9b25c1bf4a122113ab1e54aab528ee32a1/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-1.c?ref=7d793e9b25c1bf4a122113ab1e54aab528ee32a1", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-msoft-float -mfp-ret-in-387\" } */\n+\n+void f() {\n+  __builtin_apply(0, 0, 0);\n+}"}]}