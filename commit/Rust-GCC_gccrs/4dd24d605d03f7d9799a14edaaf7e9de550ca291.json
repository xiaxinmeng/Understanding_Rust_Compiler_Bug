{"sha": "4dd24d605d03f7d9799a14edaaf7e9de550ca291", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkMjRkNjA1ZDAzZjdkOTc5OWExNGVkYWFmN2U5ZGU1NTBjYTI5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-06T00:18:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-06T00:18:05Z"}, "message": "(output_{pro,epi}log): Round var size to quadword boundary.\n\nFrom-SVN: r6699", "tree": {"sha": "b9151226be90afe86abab72bcb93cd486ee26bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9151226be90afe86abab72bcb93cd486ee26bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dd24d605d03f7d9799a14edaaf7e9de550ca291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd24d605d03f7d9799a14edaaf7e9de550ca291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dd24d605d03f7d9799a14edaaf7e9de550ca291", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd24d605d03f7d9799a14edaaf7e9de550ca291/comments", "author": null, "committer": null, "parents": [{"sha": "acd94aaf191a1c09fe1154b58c7409a95846d6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd94aaf191a1c09fe1154b58c7409a95846d6a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd94aaf191a1c09fe1154b58c7409a95846d6a5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "3a1977e18e1cc88b9aa5779fae63887b5b8768a2", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd24d605d03f7d9799a14edaaf7e9de550ca291/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd24d605d03f7d9799a14edaaf7e9de550ca291/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=4dd24d605d03f7d9799a14edaaf7e9de550ca291", "patch": "@@ -1207,10 +1207,11 @@ output_prolog (file, size)\n      FILE *file;\n      int size;\n {\n-  HOST_WIDE_INT frame_size = ((size + current_function_outgoing_args_size\n+  HOST_WIDE_INT vars_size = (size + 7) & ~7;\n+  HOST_WIDE_INT frame_size = ((vars_size + current_function_outgoing_args_size\n \t\t\t       + current_function_pretend_args_size\n \t\t\t       + alpha_sa_size () + 15) & ~15);\n-  HOST_WIDE_INT reg_offset = size + current_function_outgoing_args_size;\n+  HOST_WIDE_INT reg_offset = vars_size + current_function_outgoing_args_size;\n   HOST_WIDE_INT start_reg_offset = reg_offset;\n   HOST_WIDE_INT actual_start_reg_offset = start_reg_offset;\n   rtx insn;\n@@ -1408,10 +1409,11 @@ output_epilog (file, size)\n      int size;\n {\n   rtx insn = get_last_insn ();\n-  HOST_WIDE_INT frame_size = ((size + current_function_outgoing_args_size\n+  HOST_WIDE_INT vars_size = (size + 7) & ~7;\n+  HOST_WIDE_INT frame_size = ((vars_size + current_function_outgoing_args_size\n \t\t\t       + current_function_pretend_args_size\n \t\t\t       + alpha_sa_size () + 15) & ~15);\n-  HOST_WIDE_INT reg_offset = size + current_function_outgoing_args_size;\n+  HOST_WIDE_INT reg_offset = vars_size + current_function_outgoing_args_size;\n   HOST_WIDE_INT frame_size_from_reg_save = frame_size - reg_offset;\n   int reg_offset_base_reg = 30;\n   int i;"}]}