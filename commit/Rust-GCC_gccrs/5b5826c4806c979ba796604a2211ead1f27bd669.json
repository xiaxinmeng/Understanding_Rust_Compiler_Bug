{"sha": "5b5826c4806c979ba796604a2211ead1f27bd669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI1ODI2YzQ4MDZjOTc5YmE3OTY2MDRhMjIxMWVhZDFmMjdiZDY2OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-09T08:22:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-09T08:22:20Z"}, "message": "re PR tree-optimization/66419 (FAIL: gcc.target/aarch64/aapcs64/va_arg-6.c execution,  -O3 -g)\n\n2015-06-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66419\n\t* tree-vect-slp.c (vect_supported_load_permutation_p): Properly\n\tconsider GROUP_GAP when detecting a perfect subchain.\n\n\t* gcc.dg/vect/bb-slp-37.c: New testcase.\n\nFrom-SVN: r224271", "tree": {"sha": "47494085c8681dd36a05a04cc55a1a75b463255b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47494085c8681dd36a05a04cc55a1a75b463255b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b5826c4806c979ba796604a2211ead1f27bd669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5826c4806c979ba796604a2211ead1f27bd669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5826c4806c979ba796604a2211ead1f27bd669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5826c4806c979ba796604a2211ead1f27bd669/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a210a19b06b72e2a4e0486dbb28adca80536b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a210a19b06b72e2a4e0486dbb28adca80536b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a210a19b06b72e2a4e0486dbb28adca80536b40"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "c4897caab10025a72010d5a9aa06d6bb24ea16c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b5826c4806c979ba796604a2211ead1f27bd669", "patch": "@@ -1,3 +1,9 @@\n+2015-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66419\n+\t* tree-vect-slp.c (vect_supported_load_permutation_p): Properly\n+\tconsider GROUP_GAP when detecting a perfect subchain.\n+\n 2015-06-09  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_select_section): When -mes0 is active"}, {"sha": "80fba49c3de5d8c2eeb02a0bed9b923e3a7b160b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b5826c4806c979ba796604a2211ead1f27bd669", "patch": "@@ -1,3 +1,8 @@\n+2015-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66419\n+\t* gcc.dg/vect/bb-slp-37.c: New testcase.\n+\n 2015-06-09  Shiva Chen  <shiva0217@gmail.com>\n \n \t* gcc.target/arm/stl-cond.c: New test."}, {"sha": "dbbba87985b064b128db39dd11d7dc41c418feef", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-37.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-37.c?ref=5b5826c4806c979ba796604a2211ead1f27bd669", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+\n+int a[16];\n+int b[4];\n+\n+void __attribute__((noinline))\n+foo (void)\n+{\n+  b[0] = a[0];\n+  b[1] = a[4];\n+  b[2] = a[8];\n+  b[3] = a[12];\n+}\n+\n+int main()\n+{\n+  int i;\n+  check_vect ();\n+  for (i = 0; i < 16; ++i)\n+    {\n+      a[i] = i;\n+      __asm__ volatile (\"\");\n+    }\n+  foo ();\n+  if (b[0] != 0 || b[1] != 4 || b[2] != 8 || b[3] != 12)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "660c8b27519a7143016599be2fa430dcba8fbac4", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5826c4806c979ba796604a2211ead1f27bd669/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=5b5826c4806c979ba796604a2211ead1f27bd669", "patch": "@@ -1439,7 +1439,9 @@ vect_supported_load_permutation_p (slp_instance slp_instn)\n           next_load = NULL;\n           FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (node), j, load)\n             {\n-              if (j != 0 && next_load != load)\n+              if (j != 0\n+\t\t  && (next_load != load\n+\t\t      || GROUP_GAP (vinfo_for_stmt (load)) != 1))\n \t\t{\n \t\t  subchain_p = false;\n \t\t  break;"}]}