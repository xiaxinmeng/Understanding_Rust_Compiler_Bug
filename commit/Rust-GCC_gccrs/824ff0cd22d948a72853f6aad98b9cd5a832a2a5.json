{"sha": "824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0ZmYwY2QyMmQ5NDhhNzI4NTNmNmFhZDk4YjljZDVhODMyYTJhNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-09-24T13:47:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-09-24T13:47:26Z"}, "message": "re PR middle-end/36143 (FAIL: g++.dg/tree-ssa/pr19637.C)\n\n2009-09-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36143\n\tPR tree-optimization/38747\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n\tcreate VIEW_CONVERT_EXPRs for TBAA compatible accesses.\n\n\t* gcc.dg/tree-ssa/fre-vce-1.c: XFAIL.\n\t* gcc.dg/tree-ssa/forwprop-6.c: Likewise.\n\t* g++.dg/torture/pr38747.C: New testcase.\n\t* g++.dg/tree-ssa/pr19637.C: Un-XFAIL.\n\nFrom-SVN: r152122", "tree": {"sha": "d59cda303be54e77c4ec9ffea649d8ef8215be09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d59cda303be54e77c4ec9ffea649d8ef8215be09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f13dd777c1c0f76000172eb4426ccea1fd4d79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f13dd777c1c0f76000172eb4426ccea1fd4d79d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f13dd777c1c0f76000172eb4426ccea1fd4d79d"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "000521be80289f2de693bf9d9ecf9856bfe3c55d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -1,3 +1,10 @@\n+2009-09-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36143\n+\tPR tree-optimization/38747\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n+\tcreate VIEW_CONVERT_EXPRs for TBAA compatible accesses.\n+\n 2009-09-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/41457"}, {"sha": "bf75ec26ae8dc9b375d8893ccd5e7c4258ae778f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -1,3 +1,12 @@\n+2009-09-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36143\n+\tPR tree-optimization/38747\n+\t* gcc.dg/tree-ssa/fre-vce-1.c: XFAIL.\n+\t* gcc.dg/tree-ssa/forwprop-6.c: Likewise.\n+\t* g++.dg/torture/pr38747.C: New testcase.\n+\t* g++.dg/tree-ssa/pr19637.C: Un-XFAIL.\n+\n 2009-09-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/nested_proc.adb: New test."}, {"sha": "0f18a2f225f481ee00464512389923680977f65a", "filename": "gcc/testsuite/g++.dg/torture/pr38747.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38747.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38747.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38747.C?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+extern \"C\" void abort (void);\n+inline void *operator new (__SIZE_TYPE__, void *__p) throw () { return __p; }\n+\n+int __attribute__((noinline))\n+foo(void)\n+{\n+  float f = 0;\n+  int *i = new (&f) int (1);\n+  return *(int *)&f;\n+}\n+\n+int main()\n+{\n+  if (foo() != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "2d1dcceba42f59b286e210d8e1086ef730b845fa", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19637.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19637.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19637.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19637.C?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -29,6 +29,5 @@ int foo_void_offset(void)\n   return reinterpret_cast<Foo *>(&i[0])->i[0];\n }\n \n-/* Regarding the xfail, see PR36143.  */\n-/* { dg-final { scan-tree-dump-times \"return 1;\" 3 \"dom1\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"return 1;\" 3 \"dom1\" } } */\n /* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "54e51097e4cfb67930b59da13fbedb5374897e65", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-6.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -17,6 +17,11 @@ void f(void)\n }\n \n /* We should be able to convert the cast to a VCE in forwprop1,\n-   even if there is an aliasing violation. */\n-/* { dg-final { scan-tree-dump-times \"VIEW_CONVERT_EXPR\" 1 \"forwprop1\"} } */\n+   even if there is an aliasing violation.\n+   ???  While this would be useful and nice to our users in this\n+   particular situation before doing this transformation we have to\n+   assure that a is killed by a dominating store via type float for\n+   it to be valid.  Then we might as well handle the situation by\n+   value-numbering, removing the load alltogether.  */\n+/* { dg-final { scan-tree-dump-times \"VIEW_CONVERT_EXPR\" 1 \"forwprop1\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "340f56893caa69924518accf85241af6118da034", "filename": "gcc/testsuite/gcc.dg/tree-ssa/fre-vce-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -32,6 +32,7 @@ void a2 (struct s1 sv, int i)\n }\n \n /* { dg-final { scan-tree-dump-times \"sv_\\[0-9\\]\\\\\\(D\\\\\\)->i\" 2 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"sv.i\" 2 \"fre\" } } */\n-\n+/* We can't value-number *(float *)&sv.i as VIEW_CONVERT_EXPR of the\n+   value of sv.i.  */\n+/* { dg-final { scan-tree-dump-times \"sv.i\" 2 \"fre\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "87795a282233af7256f4fa7fb86d3fa335d8e2c7", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824ff0cd22d948a72853f6aad98b9cd5a832a2a5/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=824ff0cd22d948a72853f6aad98b9cd5a832a2a5", "patch": "@@ -831,7 +831,9 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n       && !TYPE_VOLATILE (TREE_TYPE (rhs))\n       && !TYPE_VOLATILE (TREE_TYPE (TREE_OPERAND (def_rhs, 0)))\n       && operand_equal_p (TYPE_SIZE (TREE_TYPE (rhs)),\n-\t\t\t  TYPE_SIZE (TREE_TYPE (TREE_OPERAND (def_rhs, 0))), 0)) \n+\t\t\t  TYPE_SIZE (TREE_TYPE (TREE_OPERAND (def_rhs, 0))), 0)\n+      /* Make sure we only do TBAA compatible replacements.  */\n+      && get_alias_set (TREE_OPERAND (def_rhs, 0)) == get_alias_set (rhs))\n    {\n      tree def_rhs_base, new_rhs = unshare_expr (TREE_OPERAND (def_rhs, 0));\n      new_rhs = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (rhs), new_rhs);"}]}