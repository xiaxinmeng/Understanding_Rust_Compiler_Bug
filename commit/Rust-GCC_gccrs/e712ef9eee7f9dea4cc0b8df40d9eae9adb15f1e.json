{"sha": "e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxMmVmOWVlZTdmOWRlYTRjYzBiOGRmNDBkOWVhZTlhZGIxNWYxZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-29T11:26:45Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-29T11:28:16Z"}, "message": "Use gsi_bb instead of iterator->bb.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-ccp.c (gsi_prev_dom_bb_nondebug): Use gsi_bb\n\tinstead of gimple_stmt_iterator::bb.\n\t* tree-ssa-math-opts.c (insert_reciprocals): Likewise.\n\t* tree-vectorizer.h: Likewise.", "tree": {"sha": "9ace1e8ff116d93c940a8bbb5b90613217fd7af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ace1e8ff116d93c940a8bbb5b90613217fd7af9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl750FAACgkQTcGC3A+n\nN4WSwwf+MNuEbyzgEi/4i0Lx2AU95SCPsWtr/uARLy5OqfYJ3YYfN4YgxzwiYNmP\nNyzN01CtZGRe21ru/gMq5KWlACIHuikZY9I7kpK9P/Df/ZhPG1VnJNuX7v3Xc0XU\nhhhT16nCba8d+oHyHsKgPphwHYqoWbRKANPUfd6DUegXsAtq0ohOx8pW34U4gWtq\nJU2dwTzj7aY3XdOH38YFcuj06YuTMLANvI1eTK7hpPMv0U/nePsu1hrWMgwoqEW1\nL+NPPIu0VmKFKncWKHtfaRh0v0/KDsFBmdbnXoEg8dw3OeaM+pYD7go+lcYbBHIf\nCbpopx9iyxaPf440a3KZEiw+2WZ7Bw==\n=/aUo\n-----END PGP SIGNATURE-----", "payload": "tree 9ace1e8ff116d93c940a8bbb5b90613217fd7af9\nparent eff23b7961fb77b939944252529c9b64f69dbb8c\nauthor Martin Liska <mliska@suse.cz> 1593430005 +0200\ncommitter Martin Liska <mliska@suse.cz> 1593430096 +0200\n\nUse gsi_bb instead of iterator->bb.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-ccp.c (gsi_prev_dom_bb_nondebug): Use gsi_bb\n\tinstead of gimple_stmt_iterator::bb.\n\t* tree-ssa-math-opts.c (insert_reciprocals): Likewise.\n\t* tree-vectorizer.h: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff23b7961fb77b939944252529c9b64f69dbb8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff23b7961fb77b939944252529c9b64f69dbb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff23b7961fb77b939944252529c9b64f69dbb8c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7e3921869b8582a192fcd513ad196f3a6fc6d578", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "patch": "@@ -2159,7 +2159,7 @@ gsi_prev_dom_bb_nondebug (gimple_stmt_iterator *i)\n   gsi_prev_nondebug (i);\n   while (gsi_end_p (*i))\n     {\n-      dom = get_immediate_dominator (CDI_DOMINATORS, i->bb);\n+      dom = get_immediate_dominator (CDI_DOMINATORS, gsi_bb (*i));\n       if (dom == NULL || dom == ENTRY_BLOCK_PTR_FOR_FN (cfun))\n \treturn;\n "}, {"sha": "8423caa3ee3c2e88c6321d637bdc92044a942102", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "patch": "@@ -446,7 +446,7 @@ insert_reciprocals (gimple_stmt_iterator *def_gsi, struct occurrence *occ,\n \t  if (should_insert_square_recip)\n \t    gsi_insert_before (&gsi, new_square_stmt, GSI_SAME_STMT);\n \t}\n-      else if (def_gsi && occ->bb == def_gsi->bb)\n+      else if (def_gsi && occ->bb == gsi_bb (*def_gsi))\n \t{\n \t  /* Case 2: insert right after the definition.  Note that this will\n \t     never happen if the definition statement can throw, because in"}, {"sha": "c393d7e5fa64b749fad0cc7a156ebcb6d2564764", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e", "patch": "@@ -869,7 +869,7 @@ typedef class _bb_vec_info : public vec_info\n   {\n     const_reverse_iterator begin = region_end;\n     if (*begin == NULL)\n-      begin = const_reverse_iterator (gsi_last_bb (region_end.bb));\n+      begin = const_reverse_iterator (gsi_last_bb (gsi_bb (region_end)));\n     else\n       ++begin;\n "}]}