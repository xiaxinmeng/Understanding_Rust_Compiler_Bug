{"sha": "7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhNzRlNGMyZjRjYThiNGE4MTkwOTkxMjdiNjI2M2I0ZTAyNTdjNw==", "commit": {"author": {"name": "Stan Cox", "email": "scox@equinox.cygnus.com", "date": "1998-03-20T08:28:06Z"}, "committer": {"name": "Stan Cox", "email": "scox@gcc.gnu.org", "date": "1998-03-20T08:28:06Z"}, "message": "(pop_stack): Define. Pops any register on stack and adjusts the stack.\n\nFrom-SVN: r18723", "tree": {"sha": "c4112c62a48f37e443683918129eaac35c46595d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4112c62a48f37e443683918129eaac35c46595d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7/comments", "author": null, "committer": null, "parents": [{"sha": "3cd730af0b5066d735f75406180d2e89b45a1bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd730af0b5066d735f75406180d2e89b45a1bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd730af0b5066d735f75406180d2e89b45a1bab"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "d745315f29c37a827d8932f56383f0782962468a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "patch": "@@ -1,3 +1,9 @@\n+Fri Mar 20 11:19:40 1998  Stan Cox  <scox@equinox.cygnus.com>\n+\n+\t* reg-stack.c (pop_stack): Define. Pops any register on the\n+\tregstack and adjusts regstack.\n+\t(compare_for_stack_reg): Use pop_stack.\n+\t\n Thu Mar 19 23:51:01 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* configure.in (hppa1.0-hp-hpux10): Handle threads for this"}, {"sha": "af94021e9cb0883ca44871ccaa0b400d0a75b697", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa74e4c2f4ca8b4a819099127b6263b4e0257c7/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=7aa74e4c2f4ca8b4a819099127b6263b4e0257c7", "patch": "@@ -315,6 +315,32 @@ straighten_stack (insn, regstack)\n   \n   change_stack (insn, regstack, &temp_stack, emit_insn_after);\n }\n+\n+/* Pop a register from the stack */\n+\n+static void\n+pop_stack (regstack, regno)\n+     stack regstack;\n+     int   regno;\n+{\n+  int top = regstack->top;\n+\n+  CLEAR_HARD_REG_BIT (regstack->reg_set, regno);\n+  regstack->top--;\n+  /* If regno was not at the top of stack then adjust stack */\n+  if (regstack->reg [top] != regno)\n+    {\n+      int i;\n+      for (i = regstack->top; i >= 0; i--)\n+\tif (regstack->reg [i] == regno)\n+\t  {\n+\t    int j;\n+\t    for (j = i; j < top; j++)\n+\t      regstack->reg [j] = regstack->reg [j + 1];\n+\t    break;\n+\t  }\n+    }\n+}\n \f\n /* Return non-zero if any stack register is mentioned somewhere within PAT.  */\n \n@@ -2067,9 +2093,8 @@ compare_for_stack_reg (insn, regstack, pat)\n \n   if (src1_note)\n     {\n-      CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (XEXP (src1_note, 0)));\n+      pop_stack (regstack, REGNO (XEXP (src1_note, 0)));\n       replace_reg (&XEXP (src1_note, 0), FIRST_STACK_REG);\n-      regstack->top--;\n     }\n \n   /* If the second operand dies, handle that.  But if the operands are\n@@ -2088,9 +2113,8 @@ compare_for_stack_reg (insn, regstack, pat)\n       if (get_hard_regnum (regstack, XEXP (src2_note, 0)) == FIRST_STACK_REG\n \t  && src1_note)\n \t{\n-\t  CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (XEXP (src2_note, 0)));\n+\t  pop_stack (regstack, REGNO (XEXP (src2_note, 0)));\n \t  replace_reg (&XEXP (src2_note, 0), FIRST_STACK_REG + 1);\n-\t  regstack->top--;\n \t}\n       else\n \t{"}]}