{"sha": "a8733ebff646c02dbe622118ac6a39ba7d352d47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3MzNlYmZmNjQ2YzAyZGJlNjIyMTE4YWM2YTM5YmE3ZDM1MmQ0Nw==", "commit": {"author": {"name": "Rodrigo Rivas Costa", "email": "rodrigorivascosta@gmail.com", "date": "2010-09-13T17:38:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-13T17:38:34Z"}, "message": "semantics.c (finish_for_stmt): Always test flag_new_for_scope.\n\n\t* semantics.c (finish_for_stmt): Always test flag_new_for_scope.\n\t(begin_range_for_stmt): Likewise.\n\nFrom-SVN: r164251", "tree": {"sha": "717b544d1775023285f8c65f95d89b44c9e13991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/717b544d1775023285f8c65f95d89b44c9e13991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8733ebff646c02dbe622118ac6a39ba7d352d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8733ebff646c02dbe622118ac6a39ba7d352d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8733ebff646c02dbe622118ac6a39ba7d352d47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8733ebff646c02dbe622118ac6a39ba7d352d47/comments", "author": {"login": "rodrigorc", "id": 1128630, "node_id": "MDQ6VXNlcjExMjg2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1128630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigorc", "html_url": "https://github.com/rodrigorc", "followers_url": "https://api.github.com/users/rodrigorc/followers", "following_url": "https://api.github.com/users/rodrigorc/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigorc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigorc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigorc/subscriptions", "organizations_url": "https://api.github.com/users/rodrigorc/orgs", "repos_url": "https://api.github.com/users/rodrigorc/repos", "events_url": "https://api.github.com/users/rodrigorc/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigorc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e196b22163a6c1a723648b3f09501ebd586fa1c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e196b22163a6c1a723648b3f09501ebd586fa1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e196b22163a6c1a723648b3f09501ebd586fa1c0"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "ee9944cad5a2636103593b4ed63535946d43d240", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8733ebff646c02dbe622118ac6a39ba7d352d47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8733ebff646c02dbe622118ac6a39ba7d352d47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a8733ebff646c02dbe622118ac6a39ba7d352d47", "patch": "@@ -1,3 +1,8 @@\n+2010-09-13  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n+\n+\t* semantics.c (finish_for_stmt): Always test flag_new_for_scope.\n+\t(begin_range_for_stmt): Likewise.\n+\n 2010-09-11  Rodrigo Rivas <rodrigorivascosta@gmail.com>\n \n \tImplement range-based for-statements."}, {"sha": "dc815686c1e5b66eb9fb4eb432ea3b8fb170484f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8733ebff646c02dbe622118ac6a39ba7d352d47/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8733ebff646c02dbe622118ac6a39ba7d352d47/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=a8733ebff646c02dbe622118ac6a39ba7d352d47", "patch": "@@ -882,21 +882,13 @@ finish_for_expr (tree expr, tree for_stmt)\n void\n finish_for_stmt (tree for_stmt)\n {\n-  bool scoped;\n-\n   if (TREE_CODE (for_stmt) == RANGE_FOR_STMT)\n-    {\n-      RANGE_FOR_BODY (for_stmt) = do_poplevel (RANGE_FOR_BODY (for_stmt));\n-      scoped = true;\n-    }\n+    RANGE_FOR_BODY (for_stmt) = do_poplevel (RANGE_FOR_BODY (for_stmt));\n   else\n-    {\n-      FOR_BODY (for_stmt) = do_poplevel (FOR_BODY (for_stmt));\n-      scoped = flag_new_for_scope > 0;\n-    }\n+    FOR_BODY (for_stmt) = do_poplevel (FOR_BODY (for_stmt));\n \n   /* Pop the scope for the body of the loop.  */\n-  if (scoped)\n+  if (flag_new_for_scope > 0)\n     {\n       tree scope = TREE_CHAIN (for_stmt);\n       TREE_CHAIN (for_stmt) = NULL;\n@@ -913,10 +905,12 @@ tree\n begin_range_for_stmt (void)\n {\n   tree r;\n+\n   r = build_stmt (input_location, RANGE_FOR_STMT,\n \t\t  NULL_TREE, NULL_TREE, NULL_TREE);\n-  /* We can ignore flag_new_for_scope here. */\n-  TREE_CHAIN (r) = do_pushlevel (sk_for);\n+\n+  if (flag_new_for_scope > 0)\n+    TREE_CHAIN (r) = do_pushlevel (sk_for);\n \n   return r;\n }"}]}