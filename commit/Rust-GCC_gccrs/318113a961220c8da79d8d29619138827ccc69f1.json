{"sha": "318113a961220c8da79d8d29619138827ccc69f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE4MTEzYTk2MTIyMGM4ZGE3OWQ4ZDI5NjE5MTM4ODI3Y2NjNjlmMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-01T13:39:14Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-06T09:03:20Z"}, "message": "rs6000: Fix restored rs6000_long_double_type_size\n\nAs mentioned in the \"Fallout: save/restore target options in handle_optimize_attribute\"\nthread, we need to support target option restore\nof rs6000_long_double_type_size == FLOAT_PRECISION_TFmode.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): When\n\ta target option is restored, it can have\n\trs6000_long_double_type_size set to FLOAT_PRECISION_TFmode\n\tand error should not be emitted.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/powerpc/pragma-optimize.c: New test.", "tree": {"sha": "b1665e4eb7e9f7314fcf2c213d90cb5a07964665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1665e4eb7e9f7314fcf2c213d90cb5a07964665"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/318113a961220c8da79d8d29619138827ccc69f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/318113a961220c8da79d8d29619138827ccc69f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/318113a961220c8da79d8d29619138827ccc69f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/318113a961220c8da79d8d29619138827ccc69f1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd351c76c23187fdc74d9af6874a54e2e84c4d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd351c76c23187fdc74d9af6874a54e2e84c4d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd351c76c23187fdc74d9af6874a54e2e84c4d25"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "5b1c06b09fc0ac7154c3e0c1c549c069a24ee288", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/318113a961220c8da79d8d29619138827ccc69f1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/318113a961220c8da79d8d29619138827ccc69f1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=318113a961220c8da79d8d29619138827ccc69f1", "patch": "@@ -4189,6 +4189,8 @@ rs6000_option_override_internal (bool global_init_p)\n       else\n \trs6000_long_double_type_size = default_long_double_size;\n     }\n+  else if (rs6000_long_double_type_size == FLOAT_PRECISION_TFmode)\n+    ; /* The option value can be seen when cl_target_option_restore is called.  */\n   else if (rs6000_long_double_type_size == 128)\n     rs6000_long_double_type_size = FLOAT_PRECISION_TFmode;\n   else if (global_options_set.x_rs6000_ieeequad)"}, {"sha": "e8ba63a0667df4c306756d6d0dfcc564ce32969f", "filename": "gcc/testsuite/gcc.target/powerpc/pragma-optimize.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/318113a961220c8da79d8d29619138827ccc69f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpragma-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/318113a961220c8da79d8d29619138827ccc69f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpragma-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpragma-optimize.c?ref=318113a961220c8da79d8d29619138827ccc69f1", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-O2 -mlong-double-128 -mabi=ibmlongdouble\" } */\n+\n+extern unsigned long int x;\n+extern float f (float);\n+extern __typeof (f) f_power8;\n+extern __typeof (f) f_power9;\n+extern __typeof (f) f __attribute__ ((ifunc (\"f_ifunc\")));\n+static __attribute__ ((optimize (1))) __typeof (f) *\n+f_ifunc (void)\n+{\n+  __typeof (f) *res = x ? f_power9 : f_power8;\n+  return res;\n+}"}]}