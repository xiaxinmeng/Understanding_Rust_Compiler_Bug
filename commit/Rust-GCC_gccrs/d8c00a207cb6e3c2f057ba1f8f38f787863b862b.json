{"sha": "d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhjMDBhMjA3Y2I2ZTNjMmYwNTdiYTFmOGYzOGY3ODc4NjNiODYyYg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-10-11T17:37:50Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-10-11T17:37:50Z"}, "message": "re PR fortran/38439 (I/O PD edit descriptor inconsistency)\n\n2009-10-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/38439\n\t* io/format.c (parse_format_list): Add check for tokens not allowed\n\tafter P specifier. Fix comments.  Remove un-needed code. Fix the\n\tdefault exponent list. Correct pointer assignment error.\n\nFrom-SVN: r152644", "tree": {"sha": "b2e07bc5053e75a7565dc119b945a3886ea72ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2e07bc5053e75a7565dc119b945a3886ea72ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c00a207cb6e3c2f057ba1f8f38f787863b862b/comments", "author": null, "committer": null, "parents": [{"sha": "652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "0984287c4b7d8428ff1e503579a3aa940cc625f2", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c00a207cb6e3c2f057ba1f8f38f787863b862b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c00a207cb6e3c2f057ba1f8f38f787863b862b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "patch": "@@ -1,3 +1,10 @@\n+2009-10-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/38439\n+\t* io/format.c (parse_format_list): Add check for tokens not allowed\n+\tafter P specifier. Fix comments.  Remove un-needed code. Fix the\n+\tdefault exponent list. Correct pointer assignment error.\n+\n 2009-10-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/35862"}, {"sha": "7e46e3a25df58456f2a972bf02af9e139af98ad9", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c00a207cb6e3c2f057ba1f8f38f787863b862b/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c00a207cb6e3c2f057ba1f8f38f787863b862b/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=d8c00a207cb6e3c2f057ba1f8f38f787863b862b", "patch": "@@ -706,6 +706,12 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n \t  goto data_desc;\n \t}\n \n+      if (t != FMT_COMMA && t != FMT_RPAREN && t != FMT_SLASH)\n+\t{\n+\t  fmt->error = \"Comma required after P descriptor\";\n+\t  goto finished;\n+\t}\n+\n       fmt->saved_token = t;\n       goto optional_comma;\n \n@@ -734,7 +740,7 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n       goto between_desc;\n \n     case FMT_STRING:\n-      /* TODO: Find out why is is necessary to turn off format caching.  */\n+      /* TODO: Find out why it is necessary to turn off format caching.  */\n       saveit = false;\n       get_fnode (fmt, &head, &tail, FMT_STRING);\n       tail->u.string.p = fmt->string;\n@@ -851,19 +857,6 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n  data_desc:\n   switch (t)\n     {\n-    case FMT_P:\n-      t = format_lex (fmt);\n-      if (t == FMT_POSINT)\n-\t{\n-\t  fmt->error = \"Repeat count cannot follow P descriptor\";\n-\t  goto finished;\n-\t}\n-\n-      fmt->saved_token = t;\n-      get_fnode (fmt, &head, &tail, FMT_P);\n-\n-      goto optional_comma;\n-\n     case FMT_L:\n       t = format_lex (fmt);\n       if (t != FMT_POSINT)\n@@ -971,6 +964,7 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n \t    }\n \t  fmt->saved_token = t;\n \t  tail->u.real.d = 0;\n+\t  tail->u.real.e = -1;\n \t  break;\n \t}\n \n@@ -982,11 +976,11 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n \t}\n \n       tail->u.real.d = fmt->value;\n+      tail->u.real.e = -1;\n \n-      if (t == FMT_D || t == FMT_F)\n+      if (t2 == FMT_D || t2 == FMT_F)\n \tbreak;\n \n-      tail->u.real.e = -1;\n \n       /* Look for optional exponent */\n       t = format_lex (fmt);"}]}