{"sha": "30a830e9692c8cec556127a6adae0b406069da6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhODMwZTk2OTJjOGNlYzU1NjEyN2E2YWRhZTBiNDA2MDY5ZGE2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-29T10:02:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-29T10:02:46Z"}, "message": "(reload addsi3): New pattern to avoid reload lossage with register\neliminations.\n\nFrom-SVN: r10091", "tree": {"sha": "fa0db83df36e4323f4c691f709cbc66d28ef80fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa0db83df36e4323f4c691f709cbc66d28ef80fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a830e9692c8cec556127a6adae0b406069da6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a830e9692c8cec556127a6adae0b406069da6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a830e9692c8cec556127a6adae0b406069da6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a830e9692c8cec556127a6adae0b406069da6e/comments", "author": null, "committer": null, "parents": [{"sha": "46f9b8286325de315c27246a30e43001ebf85042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f9b8286325de315c27246a30e43001ebf85042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f9b8286325de315c27246a30e43001ebf85042"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "de8e0812c5aaed7975bb376995dda3bcf64b53a8", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a830e9692c8cec556127a6adae0b406069da6e/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a830e9692c8cec556127a6adae0b406069da6e/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=30a830e9692c8cec556127a6adae0b406069da6e", "patch": "@@ -2537,6 +2537,25 @@\n   [(set_attr \"type\" \"binary,binary\")\n    (set_attr \"length\" \"4,4\")])\n \n+;; Disgusting kludge to work around reload bugs with frame pointer\n+;; elimination.  Similar to other magic reload patterns in the\n+;; indexed memory operations.\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n+\t(plus:SI (plus:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n+\t\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t (match_operand:SI 3 \"const_int_operand\" \"rL\")))]\n+  \"reload_in_progress\"\n+  \"*\n+{\n+  if (GET_CODE (operands[3]) == CONST_INT)\n+    return \\\"ldo %3(%2),%0\\;addl %1,%0,%0\\\";\n+  else\n+    return \\\"addl %3,%2,%0\\;addl %1,%0,%0\\\";\n+}\"\n+  [(set_attr \"type\" \"binary\")\n+   (set_attr \"length\" \"8\")])\n+\n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\" \"r\")"}]}