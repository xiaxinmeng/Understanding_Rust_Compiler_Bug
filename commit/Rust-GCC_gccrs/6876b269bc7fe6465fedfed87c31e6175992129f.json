{"sha": "6876b269bc7fe6465fedfed87c31e6175992129f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg3NmIyNjliYzdmZTY0NjVmZWRmZWQ4N2MzMWU2MTc1OTkyMTI5Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-03-04T17:08:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-03-04T22:32:10Z"}, "message": "c++: Fix [[no_unique_address]] and default mem-init [PR90432]\n\noutput_constructor doesn't like two consecutive entries with fields at the\nsame position; let's avoid adding the one for the empty field.\n\ngcc/cp/ChangeLog\n2020-03-04  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/90432\n\t* init.c (perform_member_init): Don't do aggregate initialization of\n\tempty field.\n\t* constexpr.c (cx_check_missing_mem_inits): Don't enforce\n\tinitialization of empty field.", "tree": {"sha": "932e196928b06bdf75240404f18593556310a575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/932e196928b06bdf75240404f18593556310a575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6876b269bc7fe6465fedfed87c31e6175992129f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6876b269bc7fe6465fedfed87c31e6175992129f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6876b269bc7fe6465fedfed87c31e6175992129f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6876b269bc7fe6465fedfed87c31e6175992129f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10bbbb591cfe6cac200e926a73f3b8065147ce84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bbbb591cfe6cac200e926a73f3b8065147ce84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10bbbb591cfe6cac200e926a73f3b8065147ce84"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "254e5a310966a7ba49c98bde308197c9da48ee84", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6876b269bc7fe6465fedfed87c31e6175992129f", "patch": "@@ -1,3 +1,11 @@\n+2020-03-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/90432\n+\t* init.c (perform_member_init): Don't do aggregate initialization of\n+\tempty field.\n+\t* constexpr.c (cx_check_missing_mem_inits): Don't enforce\n+\tinitialization of empty field.\n+\n 2020-03-04  Martin Liska  <mliska@suse.cz>\n \n \t* method.c: Wrap array in ctor with braces in order"}, {"sha": "521c87f62103a08a1cf12a690c952295943dc222", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=6876b269bc7fe6465fedfed87c31e6175992129f", "patch": "@@ -831,6 +831,9 @@ cx_check_missing_mem_inits (tree ctype, tree body, bool complain)\n \t    /* A flexible array can't be intialized here, so don't complain\n \t       that it isn't.  */\n \t    continue;\n+\t  if (DECL_SIZE (field) && integer_zerop (DECL_SIZE (field)))\n+\t    /* An empty field doesn't need an initializer.  */\n+\t    continue;\n \t  ftype = strip_array_types (ftype);\n \t  if (type_has_constexpr_default_constructor (ftype))\n \t    {"}, {"sha": "27623cf4db19503f08d064ccd929fe021f3677fe", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=6876b269bc7fe6465fedfed87c31e6175992129f", "patch": "@@ -865,6 +865,11 @@ perform_member_init (tree member, tree init)\n \t}\n       if (init == error_mark_node)\n \treturn;\n+      if (DECL_SIZE (member) && integer_zerop (DECL_SIZE (member))\n+\t  && !TREE_SIDE_EFFECTS (init))\n+\t/* Don't add trivial initialization of an empty base/field, as they\n+\t   might not be ordered the way the back-end expects.  */\n+\treturn;\n       /* A FIELD_DECL doesn't really have a suitable lifetime, but\n \t make_temporary_var_for_ref_to_temp will treat it as automatic and\n \t set_up_extended_ref_temp wants to use the decl in a warning.  */"}, {"sha": "07108b8b71519fee39510056590220fbcfb50022", "filename": "gcc/testsuite/g++.dg/cpp2a/no_unique_address3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fno_unique_address3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6876b269bc7fe6465fedfed87c31e6175992129f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fno_unique_address3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fno_unique_address3.C?ref=6876b269bc7fe6465fedfed87c31e6175992129f", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/90432\n+// { dg-do compile { target c++11 } }\n+\n+struct empty {};\n+\n+struct has_empty {\n+  [[no_unique_address]] empty brace_or_equal_initialized{};\n+};\n+\n+struct has_value {\n+  int non_zero = 1;\n+};\n+\n+struct pair : has_empty, has_value {};\n+\n+pair a;"}]}