{"sha": "b4147b63ad2d8dace41f33d62ac341b7c64ae905", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQxNDdiNjNhZDJkOGRhY2U0MWYzM2Q2MmFjMzQxYjdjNjRhZTkwNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-02T10:27:31Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-02T10:27:31Z"}, "message": "df-scan.c (df_scan_start_dump): Add space between regno and regname.\n\n\t* df-scan.c (df_scan_start_dump): Add space between regno and regname.\n\nFrom-SVN: r224021", "tree": {"sha": "1c7c3559ca74259c4912c15cbcf2ed9410389341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c7c3559ca74259c4912c15cbcf2ed9410389341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4147b63ad2d8dace41f33d62ac341b7c64ae905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4147b63ad2d8dace41f33d62ac341b7c64ae905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4147b63ad2d8dace41f33d62ac341b7c64ae905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4147b63ad2d8dace41f33d62ac341b7c64ae905/comments", "author": null, "committer": null, "parents": [{"sha": "2f07b722ed0302ded58710b6d8485d85d785b4ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f07b722ed0302ded58710b6d8485d85d785b4ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f07b722ed0302ded58710b6d8485d85d785b4ee"}], "stats": {"total": 51, "additions": 33, "deletions": 18}, "files": [{"sha": "f09b8ee4ae8d4dc1f89f917a3893b32d4441fdd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4147b63ad2d8dace41f33d62ac341b7c64ae905/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4147b63ad2d8dace41f33d62ac341b7c64ae905/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4147b63ad2d8dace41f33d62ac341b7c64ae905", "patch": "@@ -1,3 +1,7 @@\n+2015-06-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* df-scan.c (df_scan_start_dump): Add space between regno and regname.\n+\n 2015-06-02  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/48052\n@@ -195,7 +199,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* ipa-inline-analysis.c (edge_set_predicate): Use new type-based pool allocator.\n+\t* ipa-inline-analysis.c (edge_set_predicate): Use new type-based\n+\tpool allocator.\n \t(set_hint_predicate): Likewise.\n \t(inline_summary_alloc): Likewise.\n \t(reset_inline_edge_summary): Likewise.\n@@ -222,7 +227,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-structalias.c (new_var_info): Use new type-based pool allocator.\n+\t* tree-ssa-structalias.c (new_var_info): Use new type-based\n+\tpool allocator.\n \t(new_constraint): Likewise.\n \t(init_alias_vars): Likewise.\n \t(delete_points_to_sets): Likewise.\n@@ -235,7 +241,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-sccvn.c (vn_reference_insert): Use new type-based pool allocator.\n+\t* tree-ssa-sccvn.c (vn_reference_insert): Use new type-based\n+\tpool allocator.\n \t(vn_reference_insert_pieces): Likewise.\n \t(vn_phi_insert): Likewise.\n \t(visit_reference_op_call): Likewise.\n@@ -247,7 +254,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-reassoc.c (add_to_ops_vec): Use new type-based pool allocator.\n+\t* tree-ssa-reassoc.c (add_to_ops_vec): Use new type-based\n+\tpool allocator.\n \t(add_repeat_to_ops_vec): Likewise.\n \t(get_ops): Likewise.\n \t(maybe_optimize_range_tests): Likewise.\n@@ -256,7 +264,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-pre.c (get_or_alloc_expr_for_name): Use new type-based pool allocator.\n+\t* tree-ssa-pre.c (get_or_alloc_expr_for_name): Use new type-based\n+\tpool allocator.\n \t(bitmap_set_new): Likewise.\n \t(get_or_alloc_expr_for_constant): Likewise.\n \t(get_or_alloc_expr_for): Likewise.\n@@ -276,20 +285,23 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* regcprop.c (free_debug_insn_changes): Use new type-based pool allocator.\n+\t* regcprop.c (free_debug_insn_changes): Use new type-based\n+\tpool allocator.\n \t(replace_oldest_value_reg): Likewise.\n \t(pass_cprop_hardreg::execute): Likewise.\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* ira-build.c (initiate_cost_vectors): Use new type-based pool allocator.\n+\t* ira-build.c (initiate_cost_vectors): Use new type-based\n+\tpool allocator.\n \t(ira_allocate_cost_vector): Likewise.\n \t(ira_free_cost_vector): Likewise.\n \t(finish_cost_vectors): Likewise.\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* sel-sched-ir.c (alloc_sched_pools): Use new type-based pool allocator.\n+\t* sel-sched-ir.c (alloc_sched_pools): Use new type-based\n+\tpool allocator.\n \t(free_sched_pools): Likewise.\n \t* sel-sched-ir.h (_list_alloc): Likewise.\n \t(_list_remove): Likewise.\n@@ -330,7 +342,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* df-scan.c (struct df_scan_problem_data):Use new type-based pool allocator.\n+\t* df-scan.c (struct df_scan_problem_data):Use new type-based\n+\tpool allocator.\n \t(df_scan_free_internal) Likewise.\n \t(df_scan_alloc) Likewise.\n \t(df_grow_reg_info) Likewise.\n@@ -372,20 +385,23 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* cfg.c (initialize_original_copy_tables):Use new type-based pool allocator.\n+\t* cfg.c (initialize_original_copy_tables):Use new type-based\n+\tpool allocator.\n \t(free_original_copy_tables) Likewise.\n \t(copy_original_table_clear) Likewise.\n \t(copy_original_table_set) Likewise.\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* asan.c (asan_mem_ref_get_alloc_pool):Use new type-based pool allocator.\n+\t* asan.c (asan_mem_ref_get_alloc_pool):Use new type-based\n+\tpool allocator.\n \t(asan_mem_ref_new) Likewise.\n \t(free_mem_ref_resources) Likewise.\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* var-tracking.c (variable_htab_free):Use new type-based pool allocator.\n+\t* var-tracking.c (variable_htab_free):Use new type-based\n+\tpool allocator.\n \t(attrs_list_clear) Likewise.\n \t(attrs_list_insert) Likewise.\n \t(attrs_list_copy) Likewise.\n@@ -419,7 +435,8 @@\n \n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n-\t* ira-color.c (init_update_cost_records):Use new type-based pool allocator.\n+\t* ira-color.c (init_update_cost_records):Use new type-based\n+\tpool allocator.\n \t(get_update_cost_record) Likewise.\n \t(free_update_cost_record_list) Likewise.\n \t(finish_update_cost_records) Likewise.\n@@ -790,10 +807,8 @@\n \t* config/frv/frv.h (DRIVER_SELF_SPECS): Use FPIC_SPEC,\n \tNO_FPIC_SPEC and NO_FPIE1_AND_FPIC1_SPEC.\n \t(ASM_SPEC): Use FPIE1_OR_FPIC1_SPEC and FPIE2_OR_FPIC2_SPEC.\n-\t* config/m68k/m68k.h (ASM_PCREL_SPEC): Use FPIC_SPEC and\n-\tNO_FPIC_SPEC.\n-\t* config/mips/gnu-user.h (NO_SHARED_SPECS): Use\n-\tNO_FPIE_AND_FPIC_SPEC.\n+\t* config/m68k/m68k.h (ASM_PCREL_SPEC): Use FPIC_SPEC and NO_FPIC_SPEC.\n+\t* config/mips/gnu-user.h (NO_SHARED_SPECS): Use NO_FPIE_AND_FPIC_SPEC.\n \t* config/mips/vxworks.h (SUBTARGET_ASM_SPEC): Use FPIC_SPEC.\n \t* config/rs6000/freebsd64.h (ASM_SPEC32): Likewise.\n \t* config/rs6000/vxworks.h (ASM_SPEC): Likewise."}, {"sha": "74f7375e3e030d0fbce8a69ba4c8767b903a54aa", "filename": "gcc/df-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4147b63ad2d8dace41f33d62ac341b7c64ae905/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4147b63ad2d8dace41f33d62ac341b7c64ae905/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=b4147b63ad2d8dace41f33d62ac341b7c64ae905", "patch": "@@ -365,7 +365,7 @@ df_scan_start_dump (FILE *file ATTRIBUTE_UNUSED)\n   fprintf (file, \";;  regs ever live \\t\");\n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     if (df_regs_ever_live_p (i))\n-      fprintf (file, \" %d[%s]\", i, reg_names[i]);\n+      fprintf (file, \" %d [%s]\", i, reg_names[i]);\n   fprintf (file, \"\\n;;  ref usage \\t\");\n \n   for (i = 0; i < (int)df->regs_inited; i++)"}]}