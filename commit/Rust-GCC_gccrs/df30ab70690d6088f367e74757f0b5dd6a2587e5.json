{"sha": "df30ab70690d6088f367e74757f0b5dd6a2587e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzMGFiNzA2OTBkNjA4OGYzNjdlNzQ3NTdmMGI1ZGQ2YTI1ODdlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-28T12:36:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-29T06:23:37Z"}, "message": "fix regression with MEM commoning\n\nThis fixes a regression when canonicalizing refs for LIM PR84362.\nThis possibly unshares and rewrites the refs in the internal data\nand thus pointer equality no longer works in ref_always_accessed\ncomputation.\n\n2020-04-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-im.c (ref_always_accessed::operator ()):\n\tJust check whether the stmt stores.", "tree": {"sha": "c3e50145f5e2ba929017c2d63714e8aec891f12c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e50145f5e2ba929017c2d63714e8aec891f12c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df30ab70690d6088f367e74757f0b5dd6a2587e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df30ab70690d6088f367e74757f0b5dd6a2587e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df30ab70690d6088f367e74757f0b5dd6a2587e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df30ab70690d6088f367e74757f0b5dd6a2587e5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d2290caad0dba52b285b47057b7c0e4e8d21feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2290caad0dba52b285b47057b7c0e4e8d21feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2290caad0dba52b285b47057b7c0e4e8d21feb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "c4afdb053f72f69cee486eb85c9abaf3769946e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df30ab70690d6088f367e74757f0b5dd6a2587e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df30ab70690d6088f367e74757f0b5dd6a2587e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df30ab70690d6088f367e74757f0b5dd6a2587e5", "patch": "@@ -1,3 +1,8 @@\n+2020-04-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-im.c (ref_always_accessed::operator ()):\n+\tJust check whether the stmt stores.\n+\n 2020-04-28  Alexandre Oliva <oliva@adacore.com>\n \n \tPR target/94812"}, {"sha": "abd5f702b91ad80f7038e69be7f1f71d19c20098", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df30ab70690d6088f367e74757f0b5dd6a2587e5/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df30ab70690d6088f367e74757f0b5dd6a2587e5/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=df30ab70690d6088f367e74757f0b5dd6a2587e5", "patch": "@@ -2179,20 +2179,21 @@ ref_always_accessed::operator () (mem_ref_loc *loc)\n {\n   class loop *must_exec;\n \n-  if (!get_lim_data (loc->stmt))\n+  struct lim_aux_data *lim_data = get_lim_data (loc->stmt);\n+  if (!lim_data)\n     return false;\n \n   /* If we require an always executed store make sure the statement\n-     stores to the reference.  */\n+     is a store.  */\n   if (stored_p)\n     {\n       tree lhs = gimple_get_lhs (loc->stmt);\n       if (!lhs\n-\t  || lhs != *loc->ref)\n+\t  || !(DECL_P (lhs) || REFERENCE_CLASS_P (lhs)))\n \treturn false;\n     }\n \n-  must_exec = get_lim_data (loc->stmt)->always_executed_in;\n+  must_exec = lim_data->always_executed_in;\n   if (!must_exec)\n     return false;\n "}]}