{"sha": "3688e13db33177ac065aa0064ebd68e0afbadc66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4OGUxM2RiMzMxNzdhYzA2NWFhMDA2NGViZDY4ZTBhZmJhZGM2Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-14T15:13:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-14T15:13:19Z"}, "message": "re PR tree-optimization/68060 (ICE on valid code at -O3 on x86_64-linux-gnu in vect_get_vec_def_for_operand, at tree-vect-stmts.c:1413)\n\n2016-01-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68060\n\t* tree-vect-loop.c (vect_is_simple_reduction): Check the\n\touter loop reduction is only used in the inner loop before\n\tdetecting a double reduction.\n\n\t* gcc.dg/torture/pr68060-1.c: New testcase.\n\t* gcc.dg/torture/pr68060-2.c: Likewise.\n\nFrom-SVN: r232367", "tree": {"sha": "8eb78b811d515f9b30d20fdf5618d44d172cbe7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb78b811d515f9b30d20fdf5618d44d172cbe7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3688e13db33177ac065aa0064ebd68e0afbadc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3688e13db33177ac065aa0064ebd68e0afbadc66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3688e13db33177ac065aa0064ebd68e0afbadc66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3688e13db33177ac065aa0064ebd68e0afbadc66/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "77e379cfa022c8ff42749c2e90b74adb7a3aa995", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3688e13db33177ac065aa0064ebd68e0afbadc66", "patch": "@@ -1,3 +1,10 @@\n+2016-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68060\n+\t* tree-vect-loop.c (vect_is_simple_reduction): Check the\n+\touter loop reduction is only used in the inner loop before\n+\tdetecting a double reduction.\n+\n 2016-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/68269"}, {"sha": "e10a21433f41a48741a74728fb413c5fa8ab5468", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3688e13db33177ac065aa0064ebd68e0afbadc66", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68060\n+\t* gcc.dg/torture/pr68060-1.c: New testcase.\n+\t* gcc.dg/torture/pr68060-2.c: Likewise.\n+\n 2016-01-14  Nick Clifton  <nickc@redhat.com>\n \n \t* lib/target-supports.exp"}, {"sha": "8830d8786e2fa8b9129eda6d92ba38c5b0da142a", "filename": "gcc/testsuite/gcc.dg/torture/pr68060-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-1.c?ref=3688e13db33177ac065aa0064ebd68e0afbadc66", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+int a, b, c;\n+\n+int\n+main ()\n+{\n+  for (; c; c++)\n+    for (a = 0; a < 4; a++)\n+      {\n+\tc &= 5;\n+\tfor (b = 0; b < 2; b++)\n+\t  c |= 1;\n+      }\n+  return 0; \n+}"}, {"sha": "974ddc796f69313e4f1f082648008bb2b01eae05", "filename": "gcc/testsuite/gcc.dg/torture/pr68060-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68060-2.c?ref=3688e13db33177ac065aa0064ebd68e0afbadc66", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+void fn2 ();\n+\n+int a, b, c;\n+\n+void fn1()\n+{\n+  for (;;) {\n+      int *d;\n+      fn2();\n+      c = 0;\n+      for (; c <= 3; c++) {\n+\t  *d ^= 9;\n+\t  b = 0;\n+\t  for (; b <= 3; b++)\n+\t    *d ^= a;\n+      }\n+  }\n+}"}, {"sha": "b095f8fbafb8540ea963b4f604f8c083c30d58f1", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3688e13db33177ac065aa0064ebd68e0afbadc66/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=3688e13db33177ac065aa0064ebd68e0afbadc66", "patch": "@@ -2591,7 +2591,7 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple *phi,\n   struct loop *vect_loop = LOOP_VINFO_LOOP (loop_info);\n   edge latch_e = loop_latch_edge (loop);\n   tree loop_arg = PHI_ARG_DEF_FROM_EDGE (phi, latch_e);\n-  gimple *def_stmt, *def1 = NULL, *def2 = NULL;\n+  gimple *def_stmt, *def1 = NULL, *def2 = NULL, *phi_use_stmt = NULL;\n   enum tree_code orig_code, code;\n   tree op1, op2, op3 = NULL_TREE, op4 = NULL_TREE;\n   tree type;\n@@ -2640,6 +2640,8 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple *phi,\n \t\t\t     \"reduction used in loop.\\n\");\n           return NULL;\n         }\n+\n+      phi_use_stmt = use_stmt;\n     }\n \n   if (TREE_CODE (loop_arg) != SSA_NAME)\n@@ -2722,7 +2724,8 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple *phi,\n \t  && flow_bb_inside_loop_p (loop, gimple_bb (def_stmt))\n           && loop->inner\n           && flow_bb_inside_loop_p (loop->inner, gimple_bb (def1))\n-          && is_gimple_assign (def1))\n+          && is_gimple_assign (def1)\n+\t  && flow_bb_inside_loop_p (loop->inner, gimple_bb (phi_use_stmt)))\n         {\n           if (dump_enabled_p ())\n             report_vect_op (MSG_NOTE, def_stmt,"}]}