{"sha": "3bfe36dce0149d6163d757c25998e1210ae6f828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmZTM2ZGNlMDE0OWQ2MTYzZDc1N2MyNTk5OGUxMjEwYWU2ZjgyOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-04-15T15:54:36Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-04-15T15:54:36Z"}, "message": "linux.h (FUNCTION_VALUE_REGNO_P): Use macros for register numbers more.\n\n\t* config/m68k/linux.h (FUNCTION_VALUE_REGNO_P): Use macros for\n\tregister numbers more.\n\t* config/m68k/m68k.h (STACK_POINTER_REGNUM,\n\tFRAME_POINTER_REGNUM, STATIC_CHAIN_REGNUM,\n\tM68K_STRUCT_VALUE_REGNUM, FUNCTION_VALUE, LIBCALL_VALUE,\n\tFUNCTION_VALUE_REGNO_P): Likewise.\n\t* config/m68k/m68kelf.h (M68K_STRUCT_VALUE_REGNUM,\n\tSTATIC_CHAIN_REGNUM): Likewise.\n\t* config/m68k/m68kemb.h (FUNCTION_VALUE_REGNO_P): Likewise.\n\t* config/m68k/netbsd-elf.h (M68K_STRUCT_VALUE_REGNUM,\n\tSTATIC_CHAIN_REGNUM, FUNCTION_VALUE_REGNO_P): Likewise.\n\t* config/m68k/m68k.md (FP_REG): New.\n\nFrom-SVN: r123850", "tree": {"sha": "22ab5ca57e4ca463c0e3c9b7d6b3dce3f9ad8d55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22ab5ca57e4ca463c0e3c9b7d6b3dce3f9ad8d55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bfe36dce0149d6163d757c25998e1210ae6f828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfe36dce0149d6163d757c25998e1210ae6f828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bfe36dce0149d6163d757c25998e1210ae6f828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfe36dce0149d6163d757c25998e1210ae6f828/comments", "author": null, "committer": null, "parents": [{"sha": "9a3db5a366f36a48e6879ed17b9c5dbf87442808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3db5a366f36a48e6879ed17b9c5dbf87442808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3db5a366f36a48e6879ed17b9c5dbf87442808"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "40d06b41044e4d8b2cda5dc23e6f6268a5ccc4dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -1,3 +1,18 @@\n+2007-04-15  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* config/m68k/linux.h (FUNCTION_VALUE_REGNO_P): Use macros for\n+\tregister numbers more.\n+\t* config/m68k/m68k.h (STACK_POINTER_REGNUM,\n+\tFRAME_POINTER_REGNUM, STATIC_CHAIN_REGNUM,\n+\tM68K_STRUCT_VALUE_REGNUM, FUNCTION_VALUE, LIBCALL_VALUE,\n+\tFUNCTION_VALUE_REGNO_P): Likewise.\n+\t* config/m68k/m68kelf.h (M68K_STRUCT_VALUE_REGNUM,\n+\tSTATIC_CHAIN_REGNUM): Likewise.\n+\t* config/m68k/m68kemb.h (FUNCTION_VALUE_REGNO_P): Likewise.\n+\t* config/m68k/netbsd-elf.h (M68K_STRUCT_VALUE_REGNUM,\n+\tSTATIC_CHAIN_REGNUM, FUNCTION_VALUE_REGNO_P): Likewise.\n+\t* config/m68k/m68k.md (FP_REG): New.\n+\n 2007-04-15  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/m68k/m68k.h (PREFERRED_STACK_BOUNDARY): Prefer 32-bit"}, {"sha": "31d0a58d2e39ba8af83469da25dbe7eea874ddaf", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -160,7 +160,7 @@ Boston, MA 02110-1301, USA.  */\n \n #undef FUNCTION_VALUE_REGNO_P\n #define FUNCTION_VALUE_REGNO_P(N) \\\n-  ((N) == 0 || (N) == 8 || (TARGET_68881 && (N) == 16))\n+  ((N) == D0_REG || (N) == A0_REG || (TARGET_68881 && (N) == FP0_REG))\n \n /* Define this to be true when FUNCTION_VALUE_REGNO_P is true for\n    more than one register.  */"}, {"sha": "6b3248af5277e0c94747932259a55e1c98043d97", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -425,12 +425,12 @@ Boston, MA 02110-1301, USA.  */\n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */\n \n-#define STACK_POINTER_REGNUM 15\n+#define STACK_POINTER_REGNUM SP_REG\n \n /* Most m68k targets use %a6 as a frame pointer.  The AmigaOS\n    ABI uses %a6 for shared library calls, therefore the frame\n    pointer is shifted to %a5 on this target.  */\n-#define FRAME_POINTER_REGNUM 14\n+#define FRAME_POINTER_REGNUM FP_REG\n \n #define FRAME_POINTER_REQUIRED 0\n \n@@ -440,12 +440,12 @@ Boston, MA 02110-1301, USA.  */\n  */\n #define ARG_POINTER_REGNUM 24\n \n-#define STATIC_CHAIN_REGNUM 8\n+#define STATIC_CHAIN_REGNUM A0_REG\n #define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX \"a0\"\n \n /* Register in which address to store a structure value\n    is passed to a function.  */\n-#define M68K_STRUCT_VALUE_REGNUM 9\n+#define M68K_STRUCT_VALUE_REGNUM A1_REG\n \n \f\n \n@@ -593,13 +593,13 @@ extern enum reg_class regno_reg_class[];\n \n /* On the m68k the return value defaults to D0.  */\n #define FUNCTION_VALUE(VALTYPE, FUNC)  \\\n-  gen_rtx_REG (TYPE_MODE (VALTYPE), 0)\n+  gen_rtx_REG (TYPE_MODE (VALTYPE), D0_REG)\n \n /* On the m68k the return value defaults to D0.  */\n-#define LIBCALL_VALUE(MODE)  gen_rtx_REG (MODE, 0)\n+#define LIBCALL_VALUE(MODE)  gen_rtx_REG (MODE, D0_REG)\n \n /* On the m68k, D0 is usually the only register used.  */\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0)\n+#define FUNCTION_VALUE_REGNO_P(N) ((N) == D0_REG)\n \n /* Define this to be true when FUNCTION_VALUE_REGNO_P is true for\n    more than one register."}, {"sha": "185f59844cd5b34b6ff0444f7767f2133e031655", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -129,6 +129,7 @@\n    (A0_REG\t\t8)\n    (A1_REG\t\t9)\n    (PIC_REG\t\t13)\n+   (FP_REG\t\t14)\n    (SP_REG\t\t15)\n    (FP0_REG\t\t16)\n   ])"}, {"sha": "eb2c34872b8cb49ac11155719e8e096674d16b88", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -81,13 +81,13 @@ do {\t\t\t\t\t\t\t\t\\\n    function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0.  */\n \n #undef M68K_STRUCT_VALUE_REGNUM\n-#define M68K_STRUCT_VALUE_REGNUM 8\n+#define M68K_STRUCT_VALUE_REGNUM A0_REG\n \n /* The static chain regnum defaults to a0, but we use that for\n    structure return, so have to use a1 for the static chain.  */\n \n #undef STATIC_CHAIN_REGNUM\n-#define STATIC_CHAIN_REGNUM 9\n+#define STATIC_CHAIN_REGNUM A1_REG\n #undef M68K_STATIC_CHAIN_REG_NAME\n #define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX \"a1\"\n "}, {"sha": "5d917f91c4ce0355ac5aca8ab348c4c1d2f0987f", "filename": "gcc/config/m68k/m68kemb.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kemb.h?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -26,7 +26,8 @@\n   m68k_libcall_value (MODE)\n \n #undef FUNCTION_VALUE_REGNO_P\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (TARGET_68881 && (N) == 16))\n+#define FUNCTION_VALUE_REGNO_P(N)\t\t\t\\\n+  ((N) == D0_REG || (TARGET_68881 && (N) == FP0_REG))\n \n #undef NEEDS_UNTYPED_CALL\n #define NEEDS_UNTYPED_CALL 1"}, {"sha": "705afed60b81a0373c778e1069b5ba6fccd62235", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe36dce0149d6163d757c25998e1210ae6f828/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=3bfe36dce0149d6163d757c25998e1210ae6f828", "patch": "@@ -224,15 +224,15 @@ while (0)\n    function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0. */\n \n #undef M68K_STRUCT_VALUE_REGNUM\n-#define M68K_STRUCT_VALUE_REGNUM 8\n+#define M68K_STRUCT_VALUE_REGNUM A0_REG\n \n \n /* Register in which static-chain is passed to a function.  The\n    default isn m68k.h is a0, but that is already the struct value\n    regnum.  Make it a1 instead.  */\n \n #undef STATIC_CHAIN_REGNUM\n-#define STATIC_CHAIN_REGNUM 9\n+#define STATIC_CHAIN_REGNUM A1_REG\n #undef M68K_STATIC_CHAIN_REG_NAME\n #define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX \"a1\"\n \n@@ -253,7 +253,7 @@ while (0)\n \n #undef FUNCTION_VALUE_REGNO_P\n #define FUNCTION_VALUE_REGNO_P(N)\t\t\t\t\t\\\n-  ((N) == 0 || (N) == 8 || (TARGET_68881 && (N) == 16))\n+  ((N) == D0_REG || (N) == A0_REG || (TARGET_68881 && (N) == FP0_REG))\n \n \n /* Define this to be true when FUNCTION_VALUE_REGNO_P is true for"}]}