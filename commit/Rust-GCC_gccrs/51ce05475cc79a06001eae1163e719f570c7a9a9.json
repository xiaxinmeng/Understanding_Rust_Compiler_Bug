{"sha": "51ce05475cc79a06001eae1163e719f570c7a9a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjZTA1NDc1Y2M3OWEwNjAwMWVhZTExNjNlNzE5ZjU3MGM3YTlhOQ==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2013-10-24T17:28:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-10-24T17:28:11Z"}, "message": "re PR other/58712 (issues found by --enable-checking=valgrind)\n\n        PR ipa/58712\n        * cgraph.c (cgraph_create_edge_1): Add indirect_unknown_callee\n        as argument.\n        (cgraph_create_edge): Use the new argument.\n        (cgraph_create_indirect_edge): Likewise.\n\nFrom-SVN: r204026", "tree": {"sha": "fae08a5e55e655a3b6b16ff9f5faa818a6b4fc0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae08a5e55e655a3b6b16ff9f5faa818a6b4fc0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51ce05475cc79a06001eae1163e719f570c7a9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ce05475cc79a06001eae1163e719f570c7a9a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ce05475cc79a06001eae1163e719f570c7a9a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ce05475cc79a06001eae1163e719f570c7a9a9/comments", "author": null, "committer": null, "parents": [{"sha": "c0f5c38c51a1380cc26694158a2f867f3765ec9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f5c38c51a1380cc26694158a2f867f3765ec9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f5c38c51a1380cc26694158a2f867f3765ec9b"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "eb381b4daa8dbb663d7a9813e2707b54e265a4ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ce05475cc79a06001eae1163e719f570c7a9a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ce05475cc79a06001eae1163e719f570c7a9a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51ce05475cc79a06001eae1163e719f570c7a9a9", "patch": "@@ -1,3 +1,11 @@\n+2013-10-24  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\t\n+\tPR ipa/58712\n+\t* cgraph.c (cgraph_create_edge_1): Add indirect_unknown_callee\n+\tas argument.\n+\t(cgraph_create_edge): Use the new argument.\n+\t(cgraph_create_indirect_edge): Likewise.\n+\n 2013-10-24  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc/config/arc/arc.c (arc_ccfsm_post_advance): Also handle"}, {"sha": "3f6c334de04d69187ecdd1744e2fc4c90a5447b6", "filename": "gcc/cgraph.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ce05475cc79a06001eae1163e719f570c7a9a9/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ce05475cc79a06001eae1163e719f570c7a9a9/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=51ce05475cc79a06001eae1163e719f570c7a9a9", "patch": "@@ -817,7 +817,8 @@ cgraph_set_call_stmt (struct cgraph_edge *e, gimple new_stmt,\n \n static struct cgraph_edge *\n cgraph_create_edge_1 (struct cgraph_node *caller, struct cgraph_node *callee,\n-\t\t       gimple call_stmt, gcov_type count, int freq)\n+\t\t       gimple call_stmt, gcov_type count, int freq,\n+\t\t       bool indir_unknown_callee)\n {\n   struct cgraph_edge *edge;\n \n@@ -877,6 +878,7 @@ cgraph_create_edge_1 (struct cgraph_node *caller, struct cgraph_node *callee,\n   edge->indirect_info = NULL;\n   edge->indirect_inlining_edge = 0;\n   edge->speculative = false;\n+  edge->indirect_unknown_callee = indir_unknown_callee;\n   if (call_stmt && caller->call_site_hash)\n     cgraph_add_edge_to_call_site_hash (edge);\n \n@@ -890,9 +892,8 @@ cgraph_create_edge (struct cgraph_node *caller, struct cgraph_node *callee,\n \t\t    gimple call_stmt, gcov_type count, int freq)\n {\n   struct cgraph_edge *edge = cgraph_create_edge_1 (caller, callee, call_stmt,\n-\t\t\t\t\t\t   count, freq);\n+\t\t\t\t\t\t   count, freq, false);\n \n-  edge->indirect_unknown_callee = 0;\n   initialize_inline_failed (edge);\n \n   edge->next_caller = callee->callers;\n@@ -929,10 +930,9 @@ cgraph_create_indirect_edge (struct cgraph_node *caller, gimple call_stmt,\n \t\t\t     gcov_type count, int freq)\n {\n   struct cgraph_edge *edge = cgraph_create_edge_1 (caller, NULL, call_stmt,\n-\t\t\t\t\t\t   count, freq);\n+\t\t\t\t\t\t   count, freq, true);\n   tree target;\n \n-  edge->indirect_unknown_callee = 1;\n   initialize_inline_failed (edge);\n \n   edge->indirect_info = cgraph_allocate_init_indirect_info ();"}]}