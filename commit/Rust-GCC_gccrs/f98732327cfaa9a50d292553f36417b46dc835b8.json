{"sha": "f98732327cfaa9a50d292553f36417b46dc835b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4NzMyMzI3Y2ZhYTlhNTBkMjkyNTUzZjM2NDE3YjQ2ZGM4MzViOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-05-20T17:37:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-20T17:37:57Z"}, "message": "typeck.c (get_member_function_from_ptrfunc): Don't try to look up a virtual function in a dummy object.\n\n\t* typeck.c (get_member_function_from_ptrfunc): Don't try to look\n\tup a virtual function in a dummy object.\n\nFrom-SVN: r210651", "tree": {"sha": "7d2012e4c44832ffa223ea3e002005d27a4999b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d2012e4c44832ffa223ea3e002005d27a4999b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f98732327cfaa9a50d292553f36417b46dc835b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98732327cfaa9a50d292553f36417b46dc835b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98732327cfaa9a50d292553f36417b46dc835b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98732327cfaa9a50d292553f36417b46dc835b8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a852a67c020e0c07e12f1bb09d68553103eee387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a852a67c020e0c07e12f1bb09d68553103eee387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a852a67c020e0c07e12f1bb09d68553103eee387"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "dd183cc56f4481a0578de7613763a483ea81bbde", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98732327cfaa9a50d292553f36417b46dc835b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98732327cfaa9a50d292553f36417b46dc835b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f98732327cfaa9a50d292553f36417b46dc835b8", "patch": "@@ -1,3 +1,8 @@\n+2014-05-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (get_member_function_from_ptrfunc): Don't try to look\n+\tup a virtual function in a dummy object.\n+\n 2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60373"}, {"sha": "b671c92d730023d7db9fa1f593f20a93c3e5241b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98732327cfaa9a50d292553f36417b46dc835b8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98732327cfaa9a50d292553f36417b46dc835b8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f98732327cfaa9a50d292553f36417b46dc835b8", "patch": "@@ -3253,6 +3253,12 @@ get_member_function_from_ptrfunc (tree *instance_ptrptr, tree function,\n \t\t    && !TYPE_POLYMORPHIC_P (basetype)\n \t\t    && resolves_to_fixed_type_p (instance_ptr, 0));\n \n+      /* If we don't really have an object (i.e. in an ill-formed\n+\t conversion from PMF to pointer), we can't resolve virtual\n+\t functions anyway.  */\n+      if (!nonvirtual && is_dummy_object (instance_ptr))\n+\tnonvirtual = true;\n+\n       if (TREE_SIDE_EFFECTS (instance_ptr))\n \tinstance_ptr = instance_save_expr = save_expr (instance_ptr);\n "}]}