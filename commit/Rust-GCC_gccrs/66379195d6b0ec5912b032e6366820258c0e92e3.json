{"sha": "66379195d6b0ec5912b032e6366820258c0e92e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzNzkxOTVkNmIwZWM1OTEyYjAzMmU2MzY2ODIwMjU4YzBlOTJlMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-05-23T09:23:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-05-23T09:23:40Z"}, "message": "re PR middle-end/53161 (ICE with weakref function and a function which takes vector types)\n\n\n\tPR middle-end/53161\n\t* symtab.c (symtab_register_node): Fix ordering issue.\n\nFrom-SVN: r187798", "tree": {"sha": "4986305f859a5ad3363c50db643ae1108d0ee0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4986305f859a5ad3363c50db643ae1108d0ee0e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66379195d6b0ec5912b032e6366820258c0e92e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66379195d6b0ec5912b032e6366820258c0e92e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66379195d6b0ec5912b032e6366820258c0e92e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66379195d6b0ec5912b032e6366820258c0e92e3/comments", "author": null, "committer": null, "parents": [{"sha": "b8ce6b9cc0db94756438606b8bae88d14f14f668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ce6b9cc0db94756438606b8bae88d14f14f668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ce6b9cc0db94756438606b8bae88d14f14f668"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "ee5d71801b3293bc6066f69e5b279596825fae4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66379195d6b0ec5912b032e6366820258c0e92e3", "patch": "@@ -1,3 +1,8 @@\n+2012-05-22  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/53161\n+\t* symtab.c (symtab_register_node): Fix ordering issue.\n+\n 2012-05-22  Steven Drake <sbd@NetBSD.org>\n \n \t* gcc.c (do_spec_1): Add %M spec token to output multilib_os_dir."}, {"sha": "665ceae41e06221bd129cec0502078a0a3dfbaa7", "filename": "gcc/symtab.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=66379195d6b0ec5912b032e6366820258c0e92e3", "patch": "@@ -177,11 +177,13 @@ symtab_register_node (symtab_node node)\n   if (*slot == NULL)\n     *slot = node;\n \n-  insert_to_assembler_name_hash (node);\n+  ipa_empty_ref_list (&node->symbol.ref_list);\n \n   node->symbol.order = symtab_order++;\n \n-  ipa_empty_ref_list (&node->symbol.ref_list);\n+  /* Be sure to do this last; C++ FE might create new nodes via\n+     DECL_ASSEMBLER_NAME langhook!  */\n+  insert_to_assembler_name_hash (node);\n }\n \n /* Make NODE to be the one symtab hash is pointing to.  Used when reshaping tree"}, {"sha": "09bc357bebf1597a3d5492ec43cc424d61861f48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66379195d6b0ec5912b032e6366820258c0e92e3", "patch": "@@ -1,3 +1,8 @@\n+2012-05-22  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/53161\n+\t* g++.dg/torture/pr53161.C: New testcase.\n+\n 2012-05-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/53389"}, {"sha": "766f2942b3d558676520243ca6ee589a963ca53a", "filename": "gcc/testsuite/g++.dg/torture/pr53161.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53161.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66379195d6b0ec5912b032e6366820258c0e92e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53161.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53161.C?ref=66379195d6b0ec5912b032e6366820258c0e92e3", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-options \"-std=c++11\" } */\n+void gg();\n+static __typeof(gg) __gthrw_gg __attribute__((__weakref__(\"gg\")));\n+\n+template<typename R,typename... A>\n+struct data {\n+ template<typename Y,typename X>\n+ data(Y& y,R(X::*f)(A...));\n+};\n+\n+template<typename Y,typename X,typename R,typename... A>\n+data<R,A...> make_data(Y& y,R(X::*f)(A...)) {\n+ return data<R,A...>(y,f);\n+}\n+\n+void global(data<void>);\n+\n+struct test {\n+ void bar() {}\n+ void doit() { global(make_data(*this,&test::bar)); }\n+};\n+"}]}