{"sha": "49e90211a68eab8bda19cd4ed04025da8e05e8da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllOTAyMTFhNjhlYWI4YmRhMTljZDRlZDA0MDI1ZGE4ZTA1ZThkYQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-03-29T16:16:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:16:25Z"}, "message": "freeze.adb (Freeze_Record_Type): If the type of the component is an itype whose parent is controlled and not yet...\n\n2005-03-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type): If the type of the component is an\n\titype whose parent is controlled and not yet frozen, do not create a\n\tfreeze node for the itype if expansion is disabled.\n\nFrom-SVN: r97174", "tree": {"sha": "6f7aa357a3a82fdd054ec438326beaa3f3799de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f7aa357a3a82fdd054ec438326beaa3f3799de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e90211a68eab8bda19cd4ed04025da8e05e8da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e90211a68eab8bda19cd4ed04025da8e05e8da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e90211a68eab8bda19cd4ed04025da8e05e8da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e90211a68eab8bda19cd4ed04025da8e05e8da/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8adcacefcdb939e68ee0672191f6657e440f8f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adcacefcdb939e68ee0672191f6657e440f8f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adcacefcdb939e68ee0672191f6657e440f8f92"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "8ba5fe8a1f8d4db9fb387aa40798eb4825df6e64", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e90211a68eab8bda19cd4ed04025da8e05e8da/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e90211a68eab8bda19cd4ed04025da8e05e8da/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=49e90211a68eab8bda19cd4ed04025da8e05e8da", "patch": "@@ -78,7 +78,7 @@ package body Freeze is\n      (Decl  : Node_Id;\n       New_S : Entity_Id;\n       After : in out Node_Id);\n-   --  Build body for a renaming declaration, insert in tree and analyze.\n+   --  Build body for a renaming declaration, insert in tree and analyze\n \n    procedure Check_Address_Clause (E : Entity_Id);\n    --  Apply legality checks to address clauses for object declarations,\n@@ -393,7 +393,7 @@ package body Freeze is\n              Parameter_Associations => Actuals);\n       end if;\n \n-      --  Create entities for subprogram body and formals.\n+      --  Create entities for subprogram body and formals\n \n       Set_Defining_Unit_Name (Spec,\n         Make_Defining_Identifier (Loc, Chars => Chars (New_S)));\n@@ -1422,7 +1422,7 @@ package body Freeze is\n       procedure Check_Current_Instance (Comp_Decl : Node_Id) is\n \n          function Process (N : Node_Id) return Traverse_Result;\n-         --  Process routine to apply check to given node.\n+         --  Process routine to apply check to given node\n \n          -------------\n          -- Process --\n@@ -1530,29 +1530,35 @@ package body Freeze is\n             then\n                Set_First_Entity (Rec, First_Entity (Base_Type (Rec)));\n \n-            --  If this is an internal type without a declaration, as for a\n+            --  If this is an internal type without a declaration, as for\n             --  record component, the base type may not yet be frozen, and its\n             --  controller has not been created. Add an explicit freeze node\n-            --  for the itype, so it will be frozen after the base type.\n+            --  for the itype, so it will be frozen after the base type. This\n+            --  freeze node is used to communicate with the expander, in order\n+            --  to create the controller for the enclosing record, and it is\n+            --  deleted afterwards (see exp_ch3). It must not be created when\n+            --  expansion is off, because it might appear in the wrong context\n+            --  for the back end.\n \n             elsif Is_Itype (Rec)\n               and then Has_Delayed_Freeze (Base_Type (Rec))\n               and then\n                 Nkind (Associated_Node_For_Itype (Rec)) =\n-                  N_Component_Declaration\n+                                                     N_Component_Declaration\n+              and then Expander_Active\n             then\n                Ensure_Freeze_Node (Rec);\n             end if;\n          end if;\n \n-         --  Freeze components and embedded subtypes.\n+         --  Freeze components and embedded subtypes\n \n          Comp := First_Entity (Rec);\n          Prev := Empty;\n \n          while Present (Comp) loop\n \n-            --  First handle the (real) component case.\n+            --  First handle the (real) component case\n \n             if Ekind (Comp) = E_Component\n               or else Ekind (Comp) = E_Discriminant\n@@ -3388,7 +3394,7 @@ package body Freeze is\n          Nam := Empty;\n       end if;\n \n-      --  For an allocator freeze designated type if not frozen already.\n+      --  For an allocator freeze designated type if not frozen already\n \n       --  For an aggregate whose component type is an access type, freeze\n       --  the designated type now, so that its freeze  does not appear within\n@@ -4834,7 +4840,7 @@ package body Freeze is\n       Nam  : Entity_Id)\n    is\n       Ent : constant Entity_Id := Entity (Nam);\n-      --  The object to which the address clause applies.\n+      --  The object to which the address clause applies\n \n       Init : Node_Id;\n       Old  : Entity_Id := Empty;"}]}