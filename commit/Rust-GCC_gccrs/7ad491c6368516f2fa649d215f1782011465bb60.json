{"sha": "7ad491c6368516f2fa649d215f1782011465bb60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FkNDkxYzYzNjg1MTZmMmZhNjQ5ZDIxNWYxNzgyMDExNDY1YmI2MA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-05-16T02:30:38Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-05-16T02:30:38Z"}, "message": "PR tree-optimization/85753 - missing -Wrestrict on memcpy into a member array\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/85753\n\t* gimple-ssa-warn-restrict.c (builtin_memref::builtin_memref): Handle\n\tRECORD_TYPE in addition to ARRAY_TYPE.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/85753\n\t* gcc.dg/Wrestrict-10.c: Adjust.\n\t* gcc.dg/Wrestrict-16.c: New test.\n\nFrom-SVN: r260280", "tree": {"sha": "15808048f761f3c987381ce81093173c0965ad25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15808048f761f3c987381ce81093173c0965ad25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ad491c6368516f2fa649d215f1782011465bb60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad491c6368516f2fa649d215f1782011465bb60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad491c6368516f2fa649d215f1782011465bb60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad491c6368516f2fa649d215f1782011465bb60/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4a148963e82ff2f34c794de0ad7ad3fa2e7b123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a148963e82ff2f34c794de0ad7ad3fa2e7b123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a148963e82ff2f34c794de0ad7ad3fa2e7b123"}], "stats": {"total": 142, "additions": 122, "deletions": 20}, "files": [{"sha": "80097cbd96f5bbeca1d7cd6a4b730bb255896a25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ad491c6368516f2fa649d215f1782011465bb60", "patch": "@@ -1,3 +1,9 @@\n+2018-05-15  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/85753\n+\t* gimple-ssa-warn-restrict.c (builtin_memref::builtin_memref): Handle\n+\tRECORD_TYPE in addition to ARRAY_TYPE.\n+\n 2018-05-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/85643"}, {"sha": "9f23f57c426d1b0943d6235ae15dd25fb6cf2067", "filename": "gcc/gimple-ssa-warn-restrict.c", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Fgimple-ssa-warn-restrict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Fgimple-ssa-warn-restrict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-restrict.c?ref=7ad491c6368516f2fa649d215f1782011465bb60", "patch": "@@ -263,27 +263,29 @@ builtin_memref::builtin_memref (tree expr, tree size)\n   else\n     sizrange[1] = maxobjsize;\n \n+  if (!DECL_P (base))\n+    return;\n+\n+  /* If the offset could be in the range of the referenced object\n+     constrain its bounds so neither exceeds those of the object.  */\n+  if (offrange[0] < 0 && offrange[1] > 0)\n+    offrange[0] = 0;\n+\n+  offset_int maxoff = maxobjsize;\n   tree basetype = TREE_TYPE (base);\n-  if (DECL_P (base) && TREE_CODE (basetype) == ARRAY_TYPE)\n+  if (TREE_CODE (basetype) == ARRAY_TYPE\n+      && ref\n+      && array_at_struct_end_p (ref))\n+    ;   /* Use the maximum possible offset for last member arrays.  */\n+  else if (tree basesize = TYPE_SIZE_UNIT (basetype))\n+    maxoff = wi::to_offset (basesize);\n+\n+  if (offrange[0] >= 0)\n     {\n-      /* If the offset could be in range of the referenced object\n-\t constrain its bounds so neither exceeds those of the object.  */\n-      if (offrange[0] < 0 && offrange[1] > 0)\n-\toffrange[0] = 0;\n-\n-      offset_int maxoff = maxobjsize;\n-      if (ref && array_at_struct_end_p (ref))\n-\t;   /* Use the maximum possible offset for last member arrays.  */\n-      else if (tree basesize = TYPE_SIZE_UNIT (basetype))\n-\tmaxoff = wi::to_offset (basesize);\n-\n-      if (offrange[0] >= 0)\n-\t{\n-\t  if (offrange[1] < 0)\n-\t    offrange[1] = offrange[0] <= maxoff ? maxoff : maxobjsize;\n-\t  else if (offrange[0] <= maxoff && offrange[1] > maxoff)\n-\t    offrange[1] = maxoff;\n-\t}\n+      if (offrange[1] < 0)\n+\toffrange[1] = offrange[0] <= maxoff ? maxoff : maxobjsize;\n+      else if (offrange[0] <= maxoff && offrange[1] > maxoff)\n+\toffrange[1] = maxoff;\n     }\n }\n "}, {"sha": "00f3c62ab7317c721c729be676a606f7708f69a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ad491c6368516f2fa649d215f1782011465bb60", "patch": "@@ -1,3 +1,9 @@\n+2018-05-15  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/85753\n+\t* gcc.dg/Wrestrict-10.c: Adjust.\n+\t* gcc.dg/Wrestrict-16.c: New test.\n+\n 2018-05-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/85643"}, {"sha": "c412e42bacc932ae8bd9a4690ebc29d4074f86e7", "filename": "gcc/testsuite/gcc.dg/Wrestrict-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-10.c?ref=7ad491c6368516f2fa649d215f1782011465bb60", "patch": "@@ -58,7 +58,7 @@ test_arr_strncat_2 (void)\n void __attribute__ ((noclone, noinline))\n test_arr_strcpy_1 (void)\n {\n-  strcpy (&b.a[i], b.a);\n+  strcpy (&b.a[i], b.a);            /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n }\n \n void __attribute__ ((noclone, noinline))"}, {"sha": "196d2c5cbc7d4aa3afec444fb2c90e38b06a383e", "filename": "gcc/testsuite/gcc.dg/Wrestrict-16.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad491c6368516f2fa649d215f1782011465bb60/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-16.c?ref=7ad491c6368516f2fa649d215f1782011465bb60", "patch": "@@ -0,0 +1,88 @@\n+/* PR tree-optimization/85753 - missing -Wrestrict on memcpy into a member\n+   array\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall -ftrack-macro-expansion=0\" } */\n+\n+#define memcpy   __builtin_memcpy\n+\n+char a[16];\n+\n+struct { char a[16]; } x;\n+\n+/* Exercise aggregate types.  */\n+\n+void test_aggr_idx_nowarn (int i, int j)\n+{\n+  memcpy (&a[i], &a[j], 7);\n+  memcpy (&x.a[i], &x.a[j], 7);\n+}\n+\n+void test_aggr_idx_warn (int i, int j)\n+{\n+  memcpy (&a[i], &a[j], 9);       /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  memcpy (&x.a[i], &x.a[j], 9);   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+}\n+\n+void test_aggr_off_nowarn (int i, int j)\n+{\n+  memcpy (a + i, a + j, 5);\n+  memcpy (x.a + i, x.a + j, 5);\n+}\n+\n+void test_aggr_off_warn (int i, int j)\n+{\n+  memcpy (a + i, a + j, 9);       /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  memcpy (x.a + i, x.a + j, 9);   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+}\n+\n+\n+void sink (void*);\n+\n+#define T(call) sink (call)\n+\n+\n+/* Also exercise basic types.  */\n+\n+#ifdef __UINT32_TYPE__\n+\n+__UINT32_TYPE__ i32;\n+\n+void test_basic_32 (int i, int j)\n+{\n+  char *p = (char*)&i32;\n+\n+  T (memcpy (&p[i], &p[j], 1));\n+  T (memcpy (&p[i], &p[j], 2));\n+  T (memcpy (&p[i], &p[j], 3));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+\n+  T (memcpy (p + i, p + j, 1));\n+  T (memcpy (p + i, p + j, 2));\n+  T (memcpy (p + i, p + j, 3));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+}\n+\n+#endif\n+\n+#ifdef __UINT64_TYPE__\n+\n+__UINT64_TYPE__ i64;\n+\n+void test_basic_64 (int i, int j)\n+{\n+  char *p = (char*)&i64;\n+\n+  T (memcpy (&p[i], &p[j], 1));\n+  T (memcpy (&p[i], &p[j], 2));\n+  T (memcpy (&p[i], &p[j], 3));\n+  T (memcpy (&p[i], &p[j], 5));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  T (memcpy (&p[i], &p[j], 6));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  T (memcpy (&p[i], &p[j], 7));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+\n+  T (memcpy (p + i, p + j, 1));\n+  T (memcpy (p + i, p + j, 2));\n+  T (memcpy (p + i, p + j, 3));\n+  T (memcpy (p + i, p + j, 5));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  T (memcpy (p + i, p + j, 6));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+  T (memcpy (p + i, p + j, 7));   /* { dg-warning \"\\\\\\[-Wrestrict\" } */\n+}\n+\n+#endif"}]}