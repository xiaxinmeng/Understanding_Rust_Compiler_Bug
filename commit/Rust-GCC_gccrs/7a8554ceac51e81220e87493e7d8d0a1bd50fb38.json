{"sha": "7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E4NTU0Y2VhYzUxZTgxMjIwZTg3NDkzZTdkOGQwYTFiZDUwZmIzOA==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2004-08-19T07:16:59Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2004-08-19T07:16:59Z"}, "message": "tree-vectorizer.c (vect_can_force_dr_alignment_p): Replace STACK_BOUDARY with PREFERRED_STACK_BOUNDARY.\n\n\t* tree-vectorizer.c (vect_can_force_dr_alignment_p): Replace\n        STACK_BOUDARY with PREFERRED_STACK_BOUNDARY.\n\nFrom-SVN: r86240", "tree": {"sha": "22ecc34ea7040ce17954b4d1c0498b46fd60edad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22ecc34ea7040ce17954b4d1c0498b46fd60edad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/comments", "author": null, "committer": null, "parents": [{"sha": "deb4af0138cc17c332454154044f830c80a11398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb4af0138cc17c332454154044f830c80a11398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb4af0138cc17c332454154044f830c80a11398"}], "stats": {"total": 134, "additions": 106, "deletions": 28}, "files": [{"sha": "69960b010ffdb61cd41ff58bfa43dd1fe8947f72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -1,3 +1,8 @@\n+2004-08-19  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* tree-vectorizer.c (vect_can_force_dr_alignment_p): Replace \n+\tSTACK_BOUDARY with PREFERRED_STACK_BOUNDARY.\n+\n 2004-08-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* bpabi.h (FPUTYPE_DEFAULT): Set it to FPUTYPE_VFP."}, {"sha": "007f3dc36a262253334cce1a49a6810e83745f17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 82, "deletions": 1, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -1,3 +1,20 @@\n+2004-08-19  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/vect-1.c: Remove xfail from i?86-*-* x86_64-*-* due\n+\tto usage of PREFERRED_STACK_BOUNDARY in the vectorizer.\n+\t* gcc.dg/vect/vect-2.c: Likewise.\n+\t* gcc.dg/vect/vect-3.c: Likewise.\n+\t* gcc.dg/vect/vect-4.c: Likewise.\n+\t* gcc.dg/vect/vect-5.c: Likewise.\n+\t* gcc.dg/vect/vect-6.c: Likewise.\n+\t* gcc.dg/vect/vect-7.c: Likewise.\n+\t* gcc.dg/vect/vect-25.c: Likewise.\n+\t* gcc.dg/vect/vect-31.c: Likewise.\n+\t* gcc.dg/vect/vect-32.c: Likewise.\n+\t* gcc.dg/vect/vect-34.c: Likewise.\n+\t* gcc.dg/vect/vect-36.c: Likewise.\n+\t* gcc.dg/vect/vect-all.c: Likewise.\n+\n 2004-08-18  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/17068\n@@ -32,7 +49,71 @@\n 2004-08-17  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* gcc.dg/vect: New directory for vectorizer tests.\n-\t(vect-*.c): New tests. \n+\t* gcc.dg/vect/tree-vect.h: New file.\n+\t* gcc.dg/vect/vect.exp: New file.\n+\t* gcc.dg/vect/pr16105.c.c: New test.\n+\t* gcc.dg/vect/vect-1.c: New test.\n+\t* gcc.dg/vect/vect-2.c: New test.\n+\t* gcc.dg/vect/vect-3.c: New test.\n+\t* gcc.dg/vect/vect-4.c: New test.\n+\t* gcc.dg/vect/vect-5.c: New test.\n+\t* gcc.dg/vect/vect-6.c: New test.\n+\t* gcc.dg/vect/vect-7.c: New test.\n+\t* gcc.dg/vect/vect-8.c: New test.\n+\t* gcc.dg/vect/vect-9.c: New test.\n+\t* gcc.dg/vect/vect-10.c: New test.\n+\t* gcc.dg/vect/vect-11.c: New test.\n+\t* gcc.dg/vect/vect-12.c: New test.\n+\t* gcc.dg/vect/vect-13.c: New test.\n+\t* gcc.dg/vect/vect-14.c: New test.\n+\t* gcc.dg/vect/vect-15.c: New test.\n+\t* gcc.dg/vect/vect-16.c: New test.\n+\t* gcc.dg/vect/vect-17.c: New test.\n+\t* gcc.dg/vect/vect-18.c: New test.\n+\t* gcc.dg/vect/vect-19.c: New test.\n+\t* gcc.dg/vect/vect-20.c: New test.\n+\t* gcc.dg/vect/vect-21.c: New test.\n+\t* gcc.dg/vect/vect-22.c: New test.\n+\t* gcc.dg/vect/vect-23.c: New test.\n+\t* gcc.dg/vect/vect-24.c: New test.\n+\t* gcc.dg/vect/vect-25.c: New test.\n+\t* gcc.dg/vect/vect-26.c: New test.\n+\t* gcc.dg/vect/vect-27.c: New test.\n+\t* gcc.dg/vect/vect-28.c: New test.\n+\t* gcc.dg/vect/vect-29.c: New test.\n+\t* gcc.dg/vect/vect-30.c: New test.\n+\t* gcc.dg/vect/vect-31.c: New test.\n+\t* gcc.dg/vect/vect-32.c: New test.\n+\t* gcc.dg/vect/vect-33.c: New test.\n+\t* gcc.dg/vect/vect-34.c: New test.\n+\t* gcc.dg/vect/vect-35.c: New test.\n+\t* gcc.dg/vect/vect-36.c: New test.\n+\t* gcc.dg/vect/vect-37.c: New test.\n+\t* gcc.dg/vect/vect-38.c: New test.\n+\t* gcc.dg/vect/vect-40.c: New test.\n+\t* gcc.dg/vect/vect-41.c: New test.\n+\t* gcc.dg/vect/vect-42.c: New test.\n+\t* gcc.dg/vect/vect-43.c: New test.\n+\t* gcc.dg/vect/vect-44.c: New test.\n+\t* gcc.dg/vect/vect-45.c: New test.\n+\t* gcc.dg/vect/vect-46.c: New test.\n+\t* gcc.dg/vect/vect-47.c: New test.\n+\t* gcc.dg/vect/vect-48.c: New test.\n+\t* gcc.dg/vect/vect-49.c: New test.\n+\t* gcc.dg/vect/vect-50.c: New test.\n+\t* gcc.dg/vect/vect-51.c: New test.\n+\t* gcc.dg/vect/vect-52.c: New test.\n+\t* gcc.dg/vect/vect-53.c: New test.\n+\t* gcc.dg/vect/vect-54.c: New test.\n+\t* gcc.dg/vect/vect-55.c: New test.\n+\t* gcc.dg/vect/vect-56.c: New test.\n+\t* gcc.dg/vect/vect-57.c: New test.\n+\t* gcc.dg/vect/vect-58.c: New test.\n+\t* gcc.dg/vect/vect-59.c: New test.\n+\t* gcc.dg/vect/vect-60.c: New test.\n+\t* gcc.dg/vect/vect-61.c: New test.\n+\t* gcc.dg/vect/vect-all.c: New test.\n+\t* gcc.dg/vect/vect-none.c: New test.\n \n 2004-08-17  Paul Brook  <paul@codesourcery.com>\n "}, {"sha": "fc6d7ef0e94816166825b5d644a5d1f3ccb84a17", "filename": "gcc/testsuite/gcc.dg/vect/vect-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -98,5 +98,4 @@ foo (int n)\n   fbar (a);\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */"}, {"sha": "aa862c111f6a44db40420c726f99b252d1912b0b", "filename": "gcc/testsuite/gcc.dg/vect/vect-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -36,5 +36,4 @@ int main (void)\n   return main1 ();\n } \n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "36db45d084e272a858d90681a49b67a631b6551b", "filename": "gcc/testsuite/gcc.dg/vect/vect-25.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -52,5 +52,4 @@ int main (void)\n   return main1 (m, &m);\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */"}, {"sha": "1f3d0f84ac0b3e6d56ef645460673d6a3d5bf989", "filename": "gcc/testsuite/gcc.dg/vect/vect-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -47,8 +47,7 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n \n \n "}, {"sha": "4742ca7510f894ec9828877df1cc965a23f373d5", "filename": "gcc/testsuite/gcc.dg/vect/vect-31.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -88,5 +88,4 @@ int main (void)\n   return main1 ();\n } \n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */"}, {"sha": "bf5af33724e5ef31d210bc044c8d2db48d25c5ac", "filename": "gcc/testsuite/gcc.dg/vect/vect-32.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -37,5 +37,4 @@ int main (void)\n   return main1 ();\n } \n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "dc77060174f201a22bd3d7b45dd778e098d04ce1", "filename": "gcc/testsuite/gcc.dg/vect/vect-34.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -38,5 +38,4 @@ int main (void)\n   return main1 ();\n } \n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "ce89097bfdcc39bd6c485d2605c346b29d9cf4f9", "filename": "gcc/testsuite/gcc.dg/vect/vect-36.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -43,5 +43,4 @@ int main (void)\n   return main1 ();\n } \n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "f4e0671249f3677e4a78ed9562dc04df5e8d86d6", "filename": "gcc/testsuite/gcc.dg/vect/vect-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -38,5 +38,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "3719dafa7aeed794788c94ef617af58ac7072c7d", "filename": "gcc/testsuite/gcc.dg/vect/vect-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -54,5 +54,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */"}, {"sha": "afe0d58782e7a8b8428d3c587f85b2730f854d2b", "filename": "gcc/testsuite/gcc.dg/vect/vect-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -55,7 +55,6 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n \n "}, {"sha": "ca4e9c2b4231a4a2d5505b4e373f3afe3068634f", "filename": "gcc/testsuite/gcc.dg/vect/vect-7.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -48,5 +48,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */"}, {"sha": "bfdbcd6360f8f334eb08aa0acca6598d27d440e4", "filename": "gcc/testsuite/gcc.dg/vect/vect-all.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -214,5 +214,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* xfail: local arrays can't be aligned on a boundary greater than STACK_BOUNDARY */\n-/* { dg-final { scan-tree-dump-times \"vectorized 10 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 10 loops\" 1 \"vect\" } } */"}, {"sha": "89ebe9062e7e074cf4b73fbcc9e63d2d44a2fafa", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8554ceac51e81220e87493e7d8d0a1bd50fb38/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=7a8554ceac51e81220e87493e7d8d0a1bd50fb38", "patch": "@@ -527,7 +527,12 @@ vect_can_force_dr_alignment_p (tree decl, unsigned int alignment)\n   if (TREE_STATIC (decl))\n     return (alignment <= MAX_OFILE_ALIGNMENT);\n   else\n-    return (alignment <= STACK_BOUNDARY);\n+    /* This is not 100% correct.  The absolute correct stack alignment\n+       is STACK_BOUNDARY.  We're supposed to hope, but not assume, that\n+       PREFERRED_STACK_BOUNDARY is honored by all translation units.\n+       However, until someone implements forced stack alignment, SSE\n+       isn't really usable without this.  */  \n+    return (alignment <= PREFERRED_STACK_BOUNDARY); \n }\n \n "}]}