{"sha": "bda4aa3673267bdb20b67326072ee3e7e2b29698", "node_id": "C_kwDOANBUbNoAKGJkYTRhYTM2NzMyNjdiZGIyMGI2NzMyNjA3MmVlM2U3ZTJiMjk2OTg", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-02T07:31:46Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-02T09:10:09Z"}, "message": "options: fix ASAN issue during saving of opt. options\n\ngcc/ChangeLog:\n\n\t* toplev.c (toplev::main): save_decoded_options[0] is program\n\tname and so it should be skipped.", "tree": {"sha": "4bc5d212de20f12a480961665b21347bb1004e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bc5d212de20f12a480961665b21347bb1004e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bda4aa3673267bdb20b67326072ee3e7e2b29698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda4aa3673267bdb20b67326072ee3e7e2b29698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda4aa3673267bdb20b67326072ee3e7e2b29698", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda4aa3673267bdb20b67326072ee3e7e2b29698/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc0beded58a909d6bcdc4af669d89341cdd601c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0beded58a909d6bcdc4af669d89341cdd601c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0beded58a909d6bcdc4af669d89341cdd601c3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d952319ad95b89444fa138a8d9824291f69b7607", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda4aa3673267bdb20b67326072ee3e7e2b29698/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda4aa3673267bdb20b67326072ee3e7e2b29698/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bda4aa3673267bdb20b67326072ee3e7e2b29698", "patch": "@@ -2338,7 +2338,7 @@ toplev::main (int argc, char **argv)\n \t\t\t\t\t\t&save_decoded_options_count);\n \n   /* Save Optimization decoded options.  */\n-  for (unsigned i = 0; i < save_decoded_options_count; ++i)\n+  for (unsigned i = 1; i < save_decoded_options_count; ++i)\n     if (cl_options[save_decoded_options[i].opt_index].flags & CL_OPTIMIZATION)\n       save_opt_decoded_options.safe_push (save_decoded_options[i]);\n "}]}