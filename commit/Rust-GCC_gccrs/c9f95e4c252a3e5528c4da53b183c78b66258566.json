{"sha": "c9f95e4c252a3e5528c4da53b183c78b66258566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlmOTVlNGMyNTJhM2U1NTI4YzRkYTUzYjE4M2M3OGI2NjI1ODU2Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T14:42:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T14:42:22Z"}, "message": "[multiple changes]\n\n2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications, Library_Unit_Aspects):\n\tAspect specification is legal on a local instantiation of a\n\tlibrary-level generic unit.\n\n2014-10-10  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Set Front_End_Inlining\n\tif inlining has been enabled via -gnatn and the target is not GCC.\n\n2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Freezing a subprogram does\n\tnot always freeze its profile.\tIn particular, an attribute\n\treference that takes the access type does not freeze the types\n\tof the formals.\n\nFrom-SVN: r216090", "tree": {"sha": "4e89aa071c2c8b341feee15fcf146fadb30f2631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e89aa071c2c8b341feee15fcf146fadb30f2631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9f95e4c252a3e5528c4da53b183c78b66258566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f95e4c252a3e5528c4da53b183c78b66258566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f95e4c252a3e5528c4da53b183c78b66258566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f95e4c252a3e5528c4da53b183c78b66258566/comments", "author": null, "committer": null, "parents": [{"sha": "32a21096039a8a589a9dea3c977f9d18a37a39be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32a21096039a8a589a9dea3c977f9d18a37a39be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32a21096039a8a589a9dea3c977f9d18a37a39be"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "50e654ca3d93277e3d131cc32d96b1b831b4676f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9f95e4c252a3e5528c4da53b183c78b66258566", "patch": "@@ -1,3 +1,21 @@\n+2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications, Library_Unit_Aspects):\n+\tAspect specification is legal on a local instantiation of a\n+\tlibrary-level generic unit.\n+\n+2014-10-10  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Set Front_End_Inlining\n+\tif inlining has been enabled via -gnatn and the target is not GCC.\n+\n+2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Freezing a subprogram does\n+\tnot always freeze its profile.\tIn particular, an attribute\n+\treference that takes the access type does not freeze the types\n+\tof the formals.\n+\n 2014-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.adb (Adjust_Name_Case): New procedure."}, {"sha": "bdc2ea15e7c66e00c2184190422ac2ff7e905f93", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c9f95e4c252a3e5528c4da53b183c78b66258566", "patch": "@@ -4004,7 +4004,17 @@ package body Freeze is\n             --  any extra formal parameters are created since we now know\n             --  whether the subprogram will use a foreign convention.\n \n-            if not Is_Internal (E) then\n+            --  In Ada 2012, freezing a subprogram does not always freeze\n+            --  the corresponding profile (see AI05-019). An attribute\n+            --  reference is not a freezing point of the profile.\n+            --  Other constructs that should not freeze ???\n+\n+            if Ada_Version > Ada_2005\n+              and then Nkind (N) = N_Attribute_Reference\n+            then\n+               null;\n+\n+            elsif not Is_Internal (E) then\n                declare\n                   F_Type    : Entity_Id;\n                   R_Type    : Entity_Id;"}, {"sha": "545d1436b3bdb6c759e1f8ba84eebb1aff70d7c7", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=c9f95e4c252a3e5528c4da53b183c78b66258566", "patch": "@@ -583,6 +583,12 @@ procedure Gnat1drv is\n          end if;\n       end if;\n \n+      --  Treat -gnatn as equivalent to -gnatN for non-GCC targets\n+\n+      if Inline_Active and then not Front_End_Inlining then\n+         Front_End_Inlining := VM_Target /= No_VM or else AAMP_On_Target;\n+      end if;\n+\n       --  Set back end inlining indication\n \n       Back_End_Inlining :="}, {"sha": "ca11c72e37ba6c24e8c50589b43d22b58a66831c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f95e4c252a3e5528c4da53b183c78b66258566/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c9f95e4c252a3e5528c4da53b183c78b66258566", "patch": "@@ -3018,12 +3018,15 @@ package body Sem_Ch13 is\n                   --  of a package declaration, the pragma needs to be inserted\n                   --  in the list of declarations for the associated package.\n                   --  There is no issue of visibility delay for these aspects.\n+                  --  Aspect is legal on a local instantiation of a library-\n+                  --  level generic unit.\n \n                   if A_Id in Library_Unit_Aspects\n                     and then\n                       Nkind_In (N, N_Package_Declaration,\n                                    N_Generic_Package_Declaration)\n                     and then Nkind (Parent (N)) /= N_Compilation_Unit\n+                    and then not Is_Generic_Instance (Defining_Entity (N))\n                   then\n                      Error_Msg_N\n                        (\"incorrect context for library unit aspect&\", Id);"}]}