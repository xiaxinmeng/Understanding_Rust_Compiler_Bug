{"sha": "97111dccf97d8b4dbf7c1ef11c72827295a72466", "node_id": "C_kwDOANBUbNoAKDk3MTExZGNjZjk3ZDhiNGRiZjdjMWVmMTFjNzI4MjcyOTVhNzI0NjY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-24T13:00:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-24T14:23:36Z"}, "message": "libstdc++: Make net::ip::basic_endpoint comparisons constexpr\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/internet (basic_endpoint): Add missing\n\tconstexpr to comparison operators.\n\t* testsuite/experimental/net/internet/endpoint/cons.cc: New test.", "tree": {"sha": "161f69e2f295e35b93797c245e7f6fc232af8145", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/161f69e2f295e35b93797c245e7f6fc232af8145"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97111dccf97d8b4dbf7c1ef11c72827295a72466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97111dccf97d8b4dbf7c1ef11c72827295a72466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97111dccf97d8b4dbf7c1ef11c72827295a72466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97111dccf97d8b4dbf7c1ef11c72827295a72466/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e9bac232fe4b8fcc815761a7c0932b0db49b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e9bac232fe4b8fcc815761a7c0932b0db49b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e9bac232fe4b8fcc815761a7c0932b0db49b25"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "cae07f466da3a167f00a160099a4686fd6f38b84", "filename": "libstdc++-v3/include/experimental/internet", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97111dccf97d8b4dbf7c1ef11c72827295a72466/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97111dccf97d8b4dbf7c1ef11c72827295a72466/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet?ref=97111dccf97d8b4dbf7c1ef11c72827295a72466", "patch": "@@ -1626,19 +1626,19 @@ namespace ip\n    */\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator==(const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     { return __a.address() == __b.address() && __a.port() == __b.port(); }\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator!=(const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     { return !(__a == __b); }\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator< (const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     {\n@@ -1647,19 +1647,19 @@ namespace ip\n     }\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator> (const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     { return __b < __a; }\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator<=(const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     { return !(__b < __a); }\n \n   template<typename _InternetProtocol>\n-    inline bool\n+    constexpr bool\n     operator>=(const basic_endpoint<_InternetProtocol>& __a,\n \t       const basic_endpoint<_InternetProtocol>& __b)\n     { return !(__a < __b); }"}, {"sha": "1b5c92c0b5808d064fc2f3195d43317553d8e916", "filename": "libstdc++-v3/testsuite/experimental/net/internet/endpoint/cons.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97111dccf97d8b4dbf7c1ef11c72827295a72466/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Fendpoint%2Fcons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97111dccf97d8b4dbf7c1ef11c72827295a72466/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Fendpoint%2Fcons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Fendpoint%2Fcons.cc?ref=97111dccf97d8b4dbf7c1ef11c72827295a72466", "patch": "@@ -0,0 +1,66 @@\n+// { dg-do run { target c++14 } }\n+// { dg-require-effective-target net_ts_ip }\n+// { dg-add-options net_ts }\n+\n+#include <experimental/internet>\n+#include <testsuite_hooks.h>\n+\n+using namespace std::experimental::net;\n+\n+constexpr void\n+test_default()\n+{\n+  ip::tcp::endpoint t1;\n+  VERIFY( t1.protocol() == ip::tcp::v4() );\n+  VERIFY( t1.address() == ip::address() );\n+  VERIFY( t1.port() == 0 );\n+\n+  ip::udp::endpoint t2;\n+  VERIFY( t2.protocol() == ip::udp::v4() );\n+  VERIFY( t2.address() == ip::address() );\n+  VERIFY( t2.port() == 0 );\n+}\n+\n+constexpr void\n+test_proto()\n+{\n+  ip::tcp::endpoint t1(ip::tcp::v4(), 22);\n+  VERIFY( t1.protocol() == ip::tcp::v4() );\n+  VERIFY( t1.address() == ip::address_v4() );\n+  VERIFY( t1.port() == 22 );\n+\n+  ip::tcp::endpoint t2(ip::tcp::v6(), 80);\n+  VERIFY( t2.protocol() == ip::tcp::v6() );\n+  VERIFY( t2.address() == ip::address_v6() );\n+  VERIFY( t2.port() == 80 );\n+}\n+\n+constexpr void\n+test_addr()\n+{\n+  ip::address_v4 a1(ip::address_v4::bytes_type(1, 2, 3, 4));\n+  ip::tcp::endpoint t1(a1, 22);\n+  VERIFY( t1.protocol() == ip::tcp::v4() );\n+  VERIFY( t1.address() == a1 );\n+  VERIFY( t1.port() == 22 );\n+\n+  ip::address_v6 a2(ip::address_v6::bytes_type(21,22,23,24,25,26,27,28,29));\n+  ip::tcp::endpoint t2(a2, 80);\n+  VERIFY( t2.protocol() == ip::tcp::v6() );\n+  VERIFY( t2.address() == a2 );\n+  VERIFY( t2.port() == 80 );\n+}\n+\n+int main()\n+{\n+  test_default();\n+  test_proto();\n+  test_addr();\n+\n+  constexpr bool c = [] {\n+    test_default();\n+    test_proto();\n+    test_addr();\n+    return true;\n+  };\n+}"}]}