{"sha": "2a97bf746e871b2c9eaa261068560584c49dd27d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE5N2JmNzQ2ZTg3MWIyYzllYWEyNjEwNjg1NjA1ODRjNDlkZDI3ZA==", "commit": {"author": {"name": "Volker Reichelt", "email": "v.reichelt@netcologne.de", "date": "2008-04-09T06:40:38Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2008-04-09T06:40:38Z"}, "message": "parser.c (cp_parser_non_integral_constant_expression): Build error message with CONCAT rather than using \"%s\".\n\n\t* parser.c (cp_parser_non_integral_constant_expression): Build error\n\tmessage with CONCAT rather than using \"%s\".\n\t(cp_parser_primary_expression): Fix quotation.\n\t(cp_parser_postfix_expression): Likewise.\n\t(cp_parser_postfix_dot_deref_expression): Likewise.\n\t(cp_parser_unary_expression): Likewise.\n\t(cp_parser_new_expression): Likewise.\n\t(cp_parser_delete_expression): Likewise.\n\nFrom-SVN: r134128", "tree": {"sha": "5af86992cbccaf13b59acbf6f8bafdcf822da6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af86992cbccaf13b59acbf6f8bafdcf822da6b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a97bf746e871b2c9eaa261068560584c49dd27d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a97bf746e871b2c9eaa261068560584c49dd27d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a97bf746e871b2c9eaa261068560584c49dd27d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a97bf746e871b2c9eaa261068560584c49dd27d/comments", "author": {"login": "VReichelt", "id": 85767072, "node_id": "MDQ6VXNlcjg1NzY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/85767072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VReichelt", "html_url": "https://github.com/VReichelt", "followers_url": "https://api.github.com/users/VReichelt/followers", "following_url": "https://api.github.com/users/VReichelt/following{/other_user}", "gists_url": "https://api.github.com/users/VReichelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/VReichelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VReichelt/subscriptions", "organizations_url": "https://api.github.com/users/VReichelt/orgs", "repos_url": "https://api.github.com/users/VReichelt/repos", "events_url": "https://api.github.com/users/VReichelt/events{/privacy}", "received_events_url": "https://api.github.com/users/VReichelt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a4833712f129816b9fa1e45b2bfb915cd3143fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4833712f129816b9fa1e45b2bfb915cd3143fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4833712f129816b9fa1e45b2bfb915cd3143fc"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "39aea39beac4f3899fb8eeb675d1dc3712bcdc0d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a97bf746e871b2c9eaa261068560584c49dd27d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a97bf746e871b2c9eaa261068560584c49dd27d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2a97bf746e871b2c9eaa261068560584c49dd27d", "patch": "@@ -1,5 +1,14 @@\n 2008-04-09  Volker Reichelt  <v.reichelt@netcologne.de>\n \n+\t* parser.c (cp_parser_non_integral_constant_expression): Build error\n+\tmessage with CONCAT rather than using \"%s\".\n+\t(cp_parser_primary_expression): Fix quotation.\n+\t(cp_parser_postfix_expression): Likewise.\n+\t(cp_parser_postfix_dot_deref_expression): Likewise.\n+\t(cp_parser_unary_expression): Likewise.\n+\t(cp_parser_new_expression): Likewise.\n+\t(cp_parser_delete_expression): Likewise.\n+\n \t* parser.c (cp_parser_asm_specification_opt): Print CPP_CLOSE_PAREN\n \tas `)', not as `('.  Fix quotation.\n \t(cp_parser_consume_semicolon_at_end_of_statement): Fix quotation."}, {"sha": "a5777ddb52740a55d9a19dd9f7446eccd8f845cf", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a97bf746e871b2c9eaa261068560584c49dd27d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a97bf746e871b2c9eaa261068560584c49dd27d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2a97bf746e871b2c9eaa261068560584c49dd27d", "patch": "@@ -2264,7 +2264,13 @@ cp_parser_non_integral_constant_expression (cp_parser  *parser,\n     {\n       if (!parser->allow_non_integral_constant_expression_p)\n \t{\n-\t  error (\"%s cannot appear in a constant-expression\", thing);\n+\t  /* Don't use `%s' to print THING, because quotations (`%<', `%>')\n+\t     in the message need to be interpreted.  */\n+\t  char *message = concat (thing,\n+\t\t\t\t  \" cannot appear in a constant-expression\",\n+\t\t\t\t  NULL);\n+\t  error (message);\n+\t  free (message);\n \t  return true;\n \t}\n     }\n@@ -3230,8 +3236,7 @@ cp_parser_primary_expression (cp_parser *parser,\n \t      return error_mark_node;\n \t    }\n \t  /* Pointers cannot appear in constant-expressions.  */\n-\t  if (cp_parser_non_integral_constant_expression (parser,\n-\t\t\t\t\t\t\t  \"`this'\"))\n+\t  if (cp_parser_non_integral_constant_expression (parser, \"%<this%>\"))\n \t    return error_mark_node;\n \t  return finish_this_expr ();\n \n@@ -3276,7 +3281,7 @@ cp_parser_primary_expression (cp_parser *parser,\n \t    /* Using `va_arg' in a constant-expression is not\n \t       allowed.  */\n \t    if (cp_parser_non_integral_constant_expression (parser,\n-\t\t\t\t\t\t\t    \"`va_arg'\"))\n+\t\t\t\t\t\t\t    \"%<va_arg%>\"))\n \t      return error_mark_node;\n \t    return build_x_va_arg (expression, type);\n \t  }\n@@ -4399,7 +4404,7 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \tparser->type_definition_forbidden_message = saved_message;\n \t/* `typeid' may not appear in an integral constant expression.  */\n \tif (cp_parser_non_integral_constant_expression(parser,\n-\t\t\t\t\t\t       \"`typeid' operator\"))\n+\t\t\t\t\t\t       \"%<typeid%> operator\"))\n \t  return error_mark_node;\n       }\n       break;\n@@ -4955,7 +4960,7 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n      constant-expressions.  */\n   if (!for_offsetof\n       && (cp_parser_non_integral_constant_expression\n-\t  (parser, token_type == CPP_DEREF ? \"'->'\" : \"`.'\")))\n+\t  (parser, token_type == CPP_DEREF ? \"%<->%>\" : \"%<.%>\")))\n     postfix_expression = error_mark_node;\n \n   return postfix_expression;\n@@ -5368,13 +5373,13 @@ cp_parser_unary_expression (cp_parser *parser, bool address_p, bool cast_p)\n       switch (unary_operator)\n \t{\n \tcase INDIRECT_REF:\n-\t  non_constant_p = \"`*'\";\n+\t  non_constant_p = \"%<*%>\";\n \t  expression = build_x_indirect_ref (cast_expression, \"unary *\",\n                                              tf_warning_or_error);\n \t  break;\n \n \tcase ADDR_EXPR:\n-\t  non_constant_p = \"`&'\";\n+\t  non_constant_p = \"%<&%>\";\n \t  /* Fall through.  */\n \tcase BIT_NOT_EXPR:\n \t  expression = build_x_unary_op (unary_operator, cast_expression,\n@@ -5384,7 +5389,7 @@ cp_parser_unary_expression (cp_parser *parser, bool address_p, bool cast_p)\n \tcase PREINCREMENT_EXPR:\n \tcase PREDECREMENT_EXPR:\n \t  non_constant_p = (unary_operator == PREINCREMENT_EXPR\n-\t\t\t    ? \"`++'\" : \"`--'\");\n+\t\t\t    ? \"%<++%>\" : \"%<--%>\");\n \t  /* Fall through.  */\n \tcase UNARY_PLUS_EXPR:\n \tcase NEGATE_EXPR:\n@@ -5505,7 +5510,7 @@ cp_parser_new_expression (cp_parser* parser)\n \n   /* A new-expression may not appear in an integral constant\n      expression.  */\n-  if (cp_parser_non_integral_constant_expression (parser, \"`new'\"))\n+  if (cp_parser_non_integral_constant_expression (parser, \"%<new%>\"))\n     return error_mark_node;\n \n   /* Create a representation of the new-expression.  */\n@@ -5768,7 +5773,7 @@ cp_parser_delete_expression (cp_parser* parser)\n \n   /* A delete-expression may not appear in an integral constant\n      expression.  */\n-  if (cp_parser_non_integral_constant_expression (parser, \"`delete'\"))\n+  if (cp_parser_non_integral_constant_expression (parser, \"%<delete%>\"))\n     return error_mark_node;\n \n   return delete_sanity (expression, NULL_TREE, array_p, global_scope_p);"}]}