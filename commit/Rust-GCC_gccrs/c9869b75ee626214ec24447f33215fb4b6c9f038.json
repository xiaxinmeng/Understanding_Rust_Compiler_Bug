{"sha": "c9869b75ee626214ec24447f33215fb4b6c9f038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4NjliNzVlZTYyNjIxNGVjMjQ0NDdmMzMyMTVmYjRiNmM5ZjAzOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-03-16T23:45:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-03-16T23:45:28Z"}, "message": "fold-const.c (fold): Fix a few cases when the returned result is not of the same type as the input.\n\n\t* fold-const.c (fold): Fix a few cases when the returned result\n\tis not of the same type as the input.\n\nFrom-SVN: r32597", "tree": {"sha": "8be480c93bcf9552a35b2f3938d918504f513389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8be480c93bcf9552a35b2f3938d918504f513389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9869b75ee626214ec24447f33215fb4b6c9f038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9869b75ee626214ec24447f33215fb4b6c9f038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9869b75ee626214ec24447f33215fb4b6c9f038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9869b75ee626214ec24447f33215fb4b6c9f038/comments", "author": null, "committer": null, "parents": [{"sha": "b1801c0246be659c50616cda377cd982087e01c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1801c0246be659c50616cda377cd982087e01c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1801c0246be659c50616cda377cd982087e01c6"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "fffbf78f28f6d9a294bfc2767c0bfeb2bdd53955", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9869b75ee626214ec24447f33215fb4b6c9f038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9869b75ee626214ec24447f33215fb4b6c9f038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9869b75ee626214ec24447f33215fb4b6c9f038", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 16 18:52:32 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* fold-const.c (fold): Fix a few cases when the returned result\n+\tis not of the same type as the input.\n+\n 2000-03-16  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.h (ASM_OUTPUT_MI_THUNK): Fix compile time"}, {"sha": "904e93dd08cb1fb1a5ba4ba72927583f29404f0b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9869b75ee626214ec24447f33215fb4b6c9f038/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9869b75ee626214ec24447f33215fb4b6c9f038/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=c9869b75ee626214ec24447f33215fb4b6c9f038", "patch": "@@ -5226,7 +5226,7 @@ fold (expr)\n       if (TREE_CODE (TREE_TYPE (arg0)) != COMPLEX_TYPE)\n \treturn arg0;\n       else if (TREE_CODE (arg0) == COMPLEX_EXPR)\n-\treturn build (COMPLEX_EXPR, TREE_TYPE (arg0),\n+\treturn build (COMPLEX_EXPR, type,\n \t\t      TREE_OPERAND (arg0, 0),\n \t\t      negate_expr (TREE_OPERAND (arg0, 1)));\n       else if (TREE_CODE (arg0) == COMPLEX_CST)\n@@ -5525,7 +5525,7 @@ fold (expr)\n       if (! FLOAT_TYPE_P (type))\n \t{\n \t  if (! wins && integer_zerop (arg0))\n-\t    return negate_expr (arg1);\n+\t    return convert (type, negate_expr (arg1));\n \t  if (integer_zerop (arg1))\n \t    return non_lvalue (convert (type, arg0));\n \n@@ -5548,7 +5548,7 @@ fold (expr)\n \t{\n \t  /* Except with IEEE floating point, 0-x equals -x.  */\n \t  if (! wins && real_zerop (arg0))\n-\t    return negate_expr (arg1);\n+\t    return convert (type, negate_expr (arg1));\n \t  /* Except with IEEE floating point, x-0 equals x.  */\n \t  if (real_zerop (arg1))\n \t    return non_lvalue (convert (type, arg0));\n@@ -6819,7 +6819,8 @@ fold (expr)\n \t    switch (comp_code)\n \t      {\n \t      case EQ_EXPR:\n-\t\treturn pedantic_non_lvalue (negate_expr (arg1));\n+\t\treturn\n+\t\t  pedantic_non_lvalue (convert (type, negate_expr (arg1)));\n \t      case NE_EXPR:\n \t\treturn pedantic_non_lvalue (convert (type, arg1));\n \t      case GE_EXPR:"}]}