{"sha": "c2744d090c494a09ee44df504f6e4f1d2a8915bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI3NDRkMDkwYzQ5NGEwOWVlNDRkZjUwNGY2ZTRmMWQyYTg5MTViZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-01T10:20:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-01T10:20:53Z"}, "message": "propagation_consistent.cc: Remove, cannot instantiate basic_string for non-PODs (21/1).\n\n2010-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tpropagation_consistent.cc: Remove, cannot instantiate basic_string\n\tfor non-PODs (21/1).\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tbasic.cc: Likewise.\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tgeneration_prohibited.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/exception/\n\tpropagation_consistent.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/exception/basic.cc:\n\tLikewise.\n\t* testsuite/ext/vstring/requirements/exception/\n\tgeneration_prohibited.cc: Likewise.\n\nFrom-SVN: r155546", "tree": {"sha": "7b53e380060f0fed5b27c5d1dc01ff0b6a322203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b53e380060f0fed5b27c5d1dc01ff0b6a322203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2744d090c494a09ee44df504f6e4f1d2a8915bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2744d090c494a09ee44df504f6e4f1d2a8915bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2744d090c494a09ee44df504f6e4f1d2a8915bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2744d090c494a09ee44df504f6e4f1d2a8915bf/comments", "author": null, "committer": null, "parents": [{"sha": "3c0f2830ac9f8a97acbceb5af706d518a46250a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f2830ac9f8a97acbceb5af706d518a46250a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0f2830ac9f8a97acbceb5af706d518a46250a1"}], "stats": {"total": 315, "additions": 16, "deletions": 299}, "files": [{"sha": "06b1a9d4862a1efa1a568806c98e8ed0a1d1e14b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2744d090c494a09ee44df504f6e4f1d2a8915bf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2744d090c494a09ee44df504f6e4f1d2a8915bf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c2744d090c494a09ee44df504f6e4f1d2a8915bf", "patch": "@@ -1,3 +1,19 @@\n+2010-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tpropagation_consistent.cc: Remove, cannot instantiate basic_string\n+\tfor non-PODs (21/1).\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tbasic.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tgeneration_prohibited.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/exception/\n+\tpropagation_consistent.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/exception/basic.cc:\n+\tLikewise.\n+\t* testsuite/ext/vstring/requirements/exception/\n+\tgeneration_prohibited.cc: Likewise.\n+\n 2009-12-31  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/21772 part 3"}, {"sha": "1f6b970d2bfcc44beec5a85a493bb3d1fecd72e2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/basic.cc", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,41 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-\n-// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <string>\n-#include <exception/safety.h>\n-\n-void\n-value()\n-{\n-  typedef __gnu_cxx::throw_value_limit value_type;\n-  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::basic_safety<test_type> test;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  value();\n-  return 0;\n-}"}, {"sha": "211d7c21d89ede630472cd990d23e0f2d6b5d8b5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/generation_prohibited.cc", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,54 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-\n-// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <string>\n-#include <exception/safety.h>\n-\n-void\n-char_allocator()\n-{\n-  typedef char value_type;\n-  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::generation_prohibited<test_type> test;\n-}\n-\n-void\n-wchar_allocator()\n-{\n-  typedef wchar_t value_type;\n-  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::generation_prohibited<test_type> test;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  // throw_allocator\n-  char_allocator();\n-  wchar_allocator();\n-\n-  return 0;\n-}"}, {"sha": "8e27a919ce136d513a6e86a7df1af5bf769c8207", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/propagation_consistent.cc", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,42 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-// { dg-do run { xfail *-*-* } }\n-\n-// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <string>\n-#include <exception/safety.h>\n-\n-void\n-value()\n-{\n-  typedef __gnu_cxx::throw_value_limit value_type;\n-  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::propagation_consistent<test_type> test;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  value();\n-  return 0;\n-}"}, {"sha": "a0042d488265e34ce828349fb630c45231000c69", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/basic.cc", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,55 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-\n-// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <ext/vstring.h>\n-#include <exception/safety.h>\n-\n-void\n-value()\n-{\n-#if 1\n-  typedef char value_type;\n-#else\n-  // XXX\n-  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n-  // not allowed in union\n-  // typedef __gnu_cxx::throw_value_limit value_type;\n-#endif\n-  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n-    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n-\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n-    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n-\n-  __gnu_test::basic_safety<test_type_rc> test_rc;\n-  __gnu_test::basic_safety<test_type_sso> test_sso;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  value();\n-  return 0;\n-}"}, {"sha": "4ffe0df3bc4a32b8809934f6a0167aa4d33f9cd7", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/generation_prohibited.cc", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,52 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-\n-// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <ext/vstring.h>\n-#include <exception/safety.h>\n-\n-void\n-char_instance()\n-{\n-  typedef char value_type;\n-  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::generation_prohibited<test_type> test;\n-}\n-\n-void\n-wchar_instance()\n-{\n-  typedef wchar_t value_type;\n-  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n-  __gnu_test::generation_prohibited<test_type> test;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  char_instance();\n-  wchar_instance();\n-  return 0;\n-}"}, {"sha": "09d8618ab80cc291baa924779cb1a3805871fad4", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/propagation_consistent.cc", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,55 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-require-cstdint \"\" }\n-\n-// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n-\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <ext/vstring.h>\n-#include <exception/safety.h>\n-\n-void\n-value()\n-{\n-#if 1\n-  typedef char value_type;\n-#else\n-  // XXX\n-  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n-  // not allowed in union\n-  // typedef __gnu_cxx::throw_value_limit value_type;\n-#endif\n-  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n-  typedef std::char_traits<value_type> traits_type;\n-\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n-    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n-\n-  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n-    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n-\n-  __gnu_test::propagation_consistent<test_type_rc> test_rc;\n-  __gnu_test::propagation_consistent<test_type_sso> test_sso;\n-}\n-\n-// Container requirement testing, exceptional behavior\n-int main()\n-{\n-  value();\n-  return 0;\n-}"}]}