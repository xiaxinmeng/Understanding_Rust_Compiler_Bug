{"sha": "5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2OGI3ZTYwYjBiMmYyNjYyNDQ3N2ZmMGI3ZWY5ZjI1OTVjOTMyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-13T07:23:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-13T07:23:51Z"}, "message": "re PR rtl-optimization/54127 (ICE in maybe_record_trace_start with asm goto, --target=powerpc-unknown-linux-gnu)\n\n\tPR rtl-optimization/54127\n\t* cfgrtl.c (force_nonfallthru_and_redirect): When redirecting\n\tasm goto labels from BB_HEAD (e->dest) to target bb, decrement\n\tLABEL_NUSES of BB_HEAD (e->dest) and increment LABEL_NUSES of\n\tBB_HEAD (target) appropriately and adjust JUMP_LABEL and/or\n\tREG_LABEL_TARGET and REG_LABEL_OPERAND.\n\n\t* gcc.dg/torture/pr54127.c: New test.\n\nFrom-SVN: r193470", "tree": {"sha": "eda1ced99836a0df02e841aa54853a4b335cfb58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda1ced99836a0df02e841aa54853a4b335cfb58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/comments", "author": null, "committer": null, "parents": [{"sha": "42b04d70a11b1987f5c04eff067de7e4fa345d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b04d70a11b1987f5c04eff067de7e4fa345d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b04d70a11b1987f5c04eff067de7e4fa345d7c"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "c5a80e1732b4ced28b44731c188239aebcb2dc35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "patch": "@@ -1,3 +1,12 @@\n+2012-11-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/54127\n+\t* cfgrtl.c (force_nonfallthru_and_redirect): When redirecting\n+\tasm goto labels from BB_HEAD (e->dest) to target bb, decrement\n+\tLABEL_NUSES of BB_HEAD (e->dest) and increment LABEL_NUSES of\n+\tBB_HEAD (target) appropriately and adjust JUMP_LABEL and/or\n+\tREG_LABEL_TARGET and REG_LABEL_OPERAND.\n+\n 2012-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* asan.c (instrument_builtin_call) <case BUILT_IN_BCOPY>: Fix up\n@@ -11,7 +20,7 @@\n \n 2012-11-12  David Edelsohn  <dje.gcc@gmail.com>\n \n-\t* asan.c: Include tm_p.h\n+\t* asan.c: Include tm_p.h.\n \n 2012-11-12  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n "}, {"sha": "8855bdf9861ce6e0fc86883489e3c94de873b10c", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "patch": "@@ -1424,14 +1424,46 @@ force_nonfallthru_and_redirect (edge e, basic_block target, rtx jump_label)\n       && (note = extract_asm_operands (PATTERN (BB_END (e->src)))))\n     {\n       int i, n = ASM_OPERANDS_LABEL_LENGTH (note);\n+      bool adjust_jump_target = false;\n \n       for (i = 0; i < n; ++i)\n \t{\n \t  if (XEXP (ASM_OPERANDS_LABEL (note, i), 0) == BB_HEAD (e->dest))\n-\t    XEXP (ASM_OPERANDS_LABEL (note, i), 0) = block_label (target);\n+\t    {\n+\t      LABEL_NUSES (XEXP (ASM_OPERANDS_LABEL (note, i), 0))--;\n+\t      XEXP (ASM_OPERANDS_LABEL (note, i), 0) = block_label (target);\n+\t      LABEL_NUSES (XEXP (ASM_OPERANDS_LABEL (note, i), 0))++;\n+\t      adjust_jump_target = true;\n+\t    }\n \t  if (XEXP (ASM_OPERANDS_LABEL (note, i), 0) == BB_HEAD (target))\n \t    asm_goto_edge = true;\n \t}\n+      if (adjust_jump_target)\n+\t{\n+\t  rtx insn = BB_END (e->src), note;\n+\t  rtx old_label = BB_HEAD (e->dest);\n+\t  rtx new_label = BB_HEAD (target);\n+\n+\t  if (JUMP_LABEL (insn) == old_label)\n+\t    {\n+\t      JUMP_LABEL (insn) = new_label;\n+\t      note = find_reg_note (insn, REG_LABEL_TARGET, new_label);\n+\t      if (note)\n+\t\tremove_note (insn, note);\n+\t    }\n+\t  else\n+\t    {\n+\t      note = find_reg_note (insn, REG_LABEL_TARGET, old_label);\n+\t      if (note)\n+\t\tremove_note (insn, note);\n+\t      if (JUMP_LABEL (insn) != new_label\n+\t\t  && !find_reg_note (insn, REG_LABEL_TARGET, new_label))\n+\t\tadd_reg_note (insn, REG_LABEL_TARGET, new_label);\n+\t    }\n+\t  while ((note = find_reg_note (insn, REG_LABEL_OPERAND, old_label))\n+\t\t != NULL_RTX)\n+\t    XEXP (note, 0) = new_label;\n+\t}\n     }\n \n   if (EDGE_COUNT (e->src->succs) >= 2 || abnormal_edge_flags || asm_goto_edge)"}, {"sha": "8a369247cb0c9c8625f29ccf5188e94b21871add", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "patch": "@@ -1,3 +1,8 @@\n+2012-11-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/54127\n+\t* gcc.dg/torture/pr54127.c: New test.\n+\n 2012-11-12  Steven Bosscher  <steven@gcc.gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "4f64998af0a0cf3cf20ed61e53ea7e5f115a0c1f", "filename": "gcc/testsuite/gcc.dg/torture/pr54127.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54127.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d68b7e60b0b2f26624477ff0b7ef9f2595c9325/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54127.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54127.c?ref=5d68b7e60b0b2f26624477ff0b7ef9f2595c9325", "patch": "@@ -0,0 +1,16 @@\n+/* PR rtl-optimization/54127 */\n+/* { dg-do compile } */\n+\n+extern void foo (void) __attribute__ ((__noreturn__));\n+\n+void\n+bar (int x)\n+{\n+  if (x < 0)\n+    foo ();\n+  if (x == 0)\n+    return;\n+  __asm goto (\"# %l[lab] %l[lab2]\" : : : : lab, lab2);\n+lab:;\n+lab2:;\n+}"}]}