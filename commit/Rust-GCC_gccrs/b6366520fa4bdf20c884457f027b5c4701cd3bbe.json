{"sha": "b6366520fa4bdf20c884457f027b5c4701cd3bbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzNjY1MjBmYTRiZGYyMGM4ODQ0NTdmMDI3YjVjNDcwMWNkM2JiZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2013-11-14T00:10:33Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2013-11-14T00:10:33Z"}, "message": "Factor out gimple_operand_equal_value_p from gimple_equal_p\n\n2013-11-14  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-ssa-tail-merge.c (gimple_operand_equal_value_p): Factor new\n\tfunction out of ...\n\t(gimple_equal_p): ... here.\n\nFrom-SVN: r204766", "tree": {"sha": "7e1b0ffad545bf8df57cda6af6edd135275bf156", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e1b0ffad545bf8df57cda6af6edd135275bf156"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6366520fa4bdf20c884457f027b5c4701cd3bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6366520fa4bdf20c884457f027b5c4701cd3bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6366520fa4bdf20c884457f027b5c4701cd3bbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6366520fa4bdf20c884457f027b5c4701cd3bbe/comments", "author": null, "committer": null, "parents": [{"sha": "d5ae1c255dcb4c19c7e3cbe77c0f62f9c998b109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ae1c255dcb4c19c7e3cbe77c0f62f9c998b109", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ae1c255dcb4c19c7e3cbe77c0f62f9c998b109"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "66d9c7b2e5eb0c810ecb9be4ec1114f64fe76770", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6366520fa4bdf20c884457f027b5c4701cd3bbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6366520fa4bdf20c884457f027b5c4701cd3bbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6366520fa4bdf20c884457f027b5c4701cd3bbe", "patch": "@@ -1,3 +1,9 @@\n+2013-11-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-ssa-tail-merge.c (gimple_operand_equal_value_p): Factor new\n+\tfunction out of ...\n+\t(gimple_equal_p): ... here.\n+\n 2013-11-14  Tom de Vries  <tom@codesourcery.com>\n \n \t* trans-mem.c (is_tm_ending): New function."}, {"sha": "ca69b23e4bb09acc6bfba7de37817edb6a333a56", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6366520fa4bdf20c884457f027b5c4701cd3bbe/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6366520fa4bdf20c884457f027b5c4701cd3bbe/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=b6366520fa4bdf20c884457f027b5c4701cd3bbe", "patch": "@@ -1076,6 +1076,24 @@ set_cluster (basic_block bb1, basic_block bb2)\n     gcc_unreachable ();\n }\n \n+/* Return true if gimple operands T1 and T2 have the same value.  */\n+\n+static bool\n+gimple_operand_equal_value_p (tree t1, tree t2)\n+{\n+  if (t1 == t2)\n+    return true;\n+\n+  if (t1 == NULL_TREE\n+      || t2 == NULL_TREE)\n+    return false;\n+\n+  if (operand_equal_p (t1, t2, 0))\n+    return true;\n+\n+  return gvn_uses_equal (t1, t2);\n+}\n+\n /* Return true if gimple statements S1 and S2 are equal.  Gimple_bb (s1) and\n    gimple_bb (s2) are members of SAME_SUCC.  */\n \n@@ -1104,9 +1122,7 @@ gimple_equal_p (same_succ same_succ, gimple s1, gimple s2)\n \t{\n \t  t1 = gimple_call_arg (s1, i);\n \t  t2 = gimple_call_arg (s2, i);\n-\t  if (operand_equal_p (t1, t2, 0))\n-\t    continue;\n-\t  if (gvn_uses_equal (t1, t2))\n+\t  if (gimple_operand_equal_value_p (t1, t2))\n \t    continue;\n \t  return false;\n \t}\n@@ -1136,14 +1152,12 @@ gimple_equal_p (same_succ same_succ, gimple s1, gimple s2)\n     case GIMPLE_COND:\n       t1 = gimple_cond_lhs (s1);\n       t2 = gimple_cond_lhs (s2);\n-      if (!operand_equal_p (t1, t2, 0)\n-\t  && !gvn_uses_equal (t1, t2))\n+      if (!gimple_operand_equal_value_p (t1, t2))\n \treturn false;\n \n       t1 = gimple_cond_rhs (s1);\n       t2 = gimple_cond_rhs (s2);\n-      if (!operand_equal_p (t1, t2, 0)\n-\t  && !gvn_uses_equal (t1, t2))\n+      if (!gimple_operand_equal_value_p (t1, t2))\n \treturn false;\n \n       code1 = gimple_expr_code (s1);"}]}