{"sha": "dc65aba7a4725d1b464c8c64a5f739ee910e8943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2NWFiYTdhNDcyNWQxYjQ2NGM4YzY0YTVmNzM5ZWU5MTBlODk0Mw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-01T11:21:40Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-07-30T08:31:36Z"}, "message": "Tune memcpy and memset for Zen cores.\n\nBased on the collected numbers in PR95435, I suggest the following\ntuning changes:\n\ngcc/ChangeLog:\n\n\tPR target/95435\n\t* config/i386/x86-tune-costs.h: Use libcall for large sizes for\n\t-m32. Start using libcall from 128+ bytes.", "tree": {"sha": "d09b112c9faf96dec7c972b1b4338c2ebe381ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d09b112c9faf96dec7c972b1b4338c2ebe381ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc65aba7a4725d1b464c8c64a5f739ee910e8943", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl8ihWgACgkQTcGC3A+n\nN4X+qQf6ArIi+XWbuEy/CldKXy6U6Fdju4OGdxHwGzGPjuIQDGHT8yN/2z9yp+CO\nlbKWR7LgewLg5a2183mppFpc4J+s535Kp9OhAvsR+YTqcw8Qxajo4mkFyXtf4KtS\nYWgMuWdJC61ctjpBH6Vq4LoOeq50D/vZqspAx/A9Xhcv41DXsMImfloRsYLJBBvE\nPVpaJHuitQyLioo9Kg0soYkleG9SibWh3JZpGn40YnCW1sJbMntOlccMVRjUSA7p\nkhhMHSPgiRrv/jPLEPE9GLc8nsWm+q2I5wFBvT/3BWE4vR0Vbm/uz3BTTpAwdpzn\nJKumWZCJWo15TMheYzxgvs0+sh8G/g==\n=2B3n\n-----END PGP SIGNATURE-----", "payload": "tree d09b112c9faf96dec7c972b1b4338c2ebe381ea3\nparent da346efd27eca48a8fe2e07d7e18b2c77ead0e2d\nauthor Martin Liska <mliska@suse.cz> 1591010500 +0200\ncommitter Martin Liska <mliska@suse.cz> 1596097896 +0200\n\nTune memcpy and memset for Zen cores.\n\nBased on the collected numbers in PR95435, I suggest the following\ntuning changes:\n\ngcc/ChangeLog:\n\n\tPR target/95435\n\t* config/i386/x86-tune-costs.h: Use libcall for large sizes for\n\t-m32. Start using libcall from 128+ bytes.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc65aba7a4725d1b464c8c64a5f739ee910e8943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc65aba7a4725d1b464c8c64a5f739ee910e8943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc65aba7a4725d1b464c8c64a5f739ee910e8943/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da346efd27eca48a8fe2e07d7e18b2c77ead0e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da346efd27eca48a8fe2e07d7e18b2c77ead0e2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da346efd27eca48a8fe2e07d7e18b2c77ead0e2d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3207404e51480a27ffe9ddb04ea72d2d962c37b9", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc65aba7a4725d1b464c8c64a5f739ee910e8943/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc65aba7a4725d1b464c8c64a5f739ee910e8943/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=dc65aba7a4725d1b464c8c64a5f739ee910e8943", "patch": "@@ -1314,20 +1314,20 @@ static stringop_algs znver1_memcpy[2] = {\n   /* 32-bit tuning.  */\n   {libcall, {{6, loop, false},\n \t     {14, unrolled_loop, false},\n-\t     {-1, rep_prefix_4_byte, false}}},\n+\t     {-1, libcall, false}}},\n   /* 64-bit tuning.  */\n   {libcall, {{16, loop, false},\n-\t     {8192, rep_prefix_8_byte, false},\n+\t     {128, rep_prefix_8_byte, false},\n \t     {-1, libcall, false}}}};\n static stringop_algs znver1_memset[2] = {\n   /* 32-bit tuning.  */\n   {libcall, {{8, loop, false},\n \t     {24, unrolled_loop, false},\n-\t     {2048, rep_prefix_4_byte, false},\n+\t     {128, rep_prefix_4_byte, false},\n \t     {-1, libcall, false}}},\n   /* 64-bit tuning.  */\n   {libcall, {{48, unrolled_loop, false},\n-\t     {8192, rep_prefix_8_byte, false},\n+\t     {128, rep_prefix_8_byte, false},\n \t     {-1, libcall, false}}}};\n struct processor_costs znver1_cost = {\n   {\n@@ -1460,7 +1460,7 @@ static stringop_algs znver2_memcpy[2] = {\n   /* 32-bit tuning.  */\n   {libcall, {{6, loop, false},\n \t     {14, unrolled_loop, false},\n-\t     {-1, rep_prefix_4_byte, false}}},\n+\t     {-1, libcall, false}}},\n   /* 64-bit tuning.  */\n   {libcall, {{16, loop, false},\n \t     {64, rep_prefix_4_byte, false},\n@@ -1469,7 +1469,7 @@ static stringop_algs znver2_memset[2] = {\n   /* 32-bit tuning.  */\n   {libcall, {{8, loop, false},\n \t     {24, unrolled_loop, false},\n-\t     {2048, rep_prefix_4_byte, false}\n+\t     {128, rep_prefix_4_byte, false},\n \t     {-1, libcall, false}}},\n   /* 64-bit tuning.  */\n   {libcall, {{24, rep_prefix_4_byte, false},"}]}