{"sha": "7cdab65f3d770345903023f357b6ca96bc85a002", "node_id": "C_kwDOANBUbNoAKDdjZGFiNjVmM2Q3NzAzNDU5MDMwMjNmMzU3YjZjYTk2YmM4NWEwMDI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T20:49:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-04T14:03:28Z"}, "message": "libstdc++: Make <cstdint> work freestanding [PR107134]\n\nWhen gcc/config.gcc defines use_gcc_stdin=wrap, GCC's <stdint.h> tries\nto use libc's <stdint.h> unless -ffreestanding is used.\n\nWhen libstdc++ is configured --disable-hosted-libstdcxx we want\n<cstdint> to work even without -ffreestanding being given. This is a\nkluge to make it include GCC's <stdint-gcc.h> directly even without\n-ffreestanding.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/107134\n\t* include/c_global/cstdint [!_GLIBCXX_HOSTED]: Include\n\t<stdint-gcc.h> directly.", "tree": {"sha": "de3f5a6ba651e98e074d40937684dfb37ce83f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de3f5a6ba651e98e074d40937684dfb37ce83f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cdab65f3d770345903023f357b6ca96bc85a002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cdab65f3d770345903023f357b6ca96bc85a002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cdab65f3d770345903023f357b6ca96bc85a002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cdab65f3d770345903023f357b6ca96bc85a002/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8189882fc89f6f410fc9bcf0f8226787316f83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8189882fc89f6f410fc9bcf0f8226787316f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8189882fc89f6f410fc9bcf0f8226787316f83"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "4b9df45a9ee956fb55b87d7d40face6ab1646be8", "filename": "libstdc++-v3/include/c_global/cstdint", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdab65f3d770345903023f357b6ca96bc85a002/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdab65f3d770345903023f357b6ca96bc85a002/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint?ref=7cdab65f3d770345903023f357b6ca96bc85a002", "patch": "@@ -37,7 +37,11 @@\n \n #include <bits/c++config.h>\n \n-#if _GLIBCXX_HAVE_STDINT_H\n+#if ! _GLIBCXX_HOSTED && __has_include(<stdint-gcc.h>)\n+// For --disable-hosted-libstdcxx we want GCC's own stdint-gcc.h header\n+// even when -ffreestanding isn't used.\n+# include <stdint-gcc.h>\n+#elif __has_include(<stdint.h>)\n # include <stdint.h>\n #endif\n \n@@ -80,9 +84,60 @@ namespace std\n   using ::uintmax_t;\n   using ::uintptr_t;\n #else // !_GLIBCXX_USE_C99_STDINT_TR1\n-  // Define the minimum needed for <ratio>, <chrono> etc.\n+\n   using intmax_t = __INTMAX_TYPE__;\n   using uintmax_t = __UINTMAX_TYPE__;\n+\n+#ifdef __INT8_TYPE__\n+  using int8_t = __INT8_TYPE__;\n+#endif\n+#ifdef __INT16_TYPE__\n+  using int16_t = __INT16_TYPE__;\n+#endif\n+#ifdef __INT32_TYPE__\n+  using int32_t = __INT32_TYPE__;\n+#endif\n+#ifdef __INT64_TYPE__\n+  using int64_t = __INT64_TYPE__;\n+#endif\n+\n+  using int_least8_t = __INT_LEAST8_TYPE__;\n+  using int_least16_t = __INT_LEAST16_TYPE__;\n+  using int_least32_t = __INT_LEAST32_TYPE__;\n+  using int_least64_t = __INT_LEAST64_TYPE__;\n+  using int_fast8_t = __INT_FAST8_TYPE__;\n+  using int_fast16_t = __INT_FAST16_TYPE__;\n+  using int_fast32_t = __INT_FAST32_TYPE__;\n+  using int_fast64_t = __INT_FAST64_TYPE__;\n+\n+#ifdef __INTPTR_TYPE__\n+  using intptr_t = __INTPTR_TYPE__;\n+#endif\n+\n+#ifdef __UINT8_TYPE__\n+  using uint8_t = __UINT8_TYPE__;\n+#endif\n+#ifdef __UINT16_TYPE__\n+  using uint16_t = __UINT16_TYPE__;\n+#endif\n+#ifdef __UINT32_TYPE__\n+  using uint32_t = __UINT32_TYPE__;\n+#endif\n+#ifdef __UINT64_TYPE__\n+  using uint64_t = __UINT64_TYPE__;\n+#endif\n+  using uint_least8_t = __UINT_LEAST8_TYPE__;\n+  using uint_least16_t = __UINT_LEAST16_TYPE__;\n+  using uint_least32_t = __UINT_LEAST32_TYPE__;\n+  using uint_least64_t = __UINT_LEAST64_TYPE__;\n+  using uint_fast8_t = __UINT_FAST8_TYPE__;\n+  using uint_fast16_t = __UINT_FAST16_TYPE__;\n+  using uint_fast32_t = __UINT_FAST32_TYPE__;\n+  using uint_fast64_t = __UINT_FAST64_TYPE__;\n+#ifdef __UINTPTR_TYPE__\n+  using uintptr_t = __UINTPTR_TYPE__;\n+#endif\n+\n #endif // _GLIBCXX_USE_C99_STDINT_TR1\n } // namespace std\n "}]}