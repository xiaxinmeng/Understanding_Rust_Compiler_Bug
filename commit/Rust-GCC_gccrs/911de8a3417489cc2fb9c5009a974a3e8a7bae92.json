{"sha": "911de8a3417489cc2fb9c5009a974a3e8a7bae92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExZGU4YTM0MTc0ODljYzJmYjljNTAwOWE5NzRhM2U4YTdiYWU5Mg==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2010-11-26T13:21:32Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2010-11-26T13:21:32Z"}, "message": "arm.c (arm_option_override): enable loop array prefetching at -O3 for suitable targets, and configure params.\n\n2010-11-26  Ian Bolton  <ian.bolton@arm.com>\n\n\t* config/arm/arm.c (arm_option_override): enable loop array\n\tprefetching at -O3 for suitable targets, and configure params.\n\t* config/arm/arm-protos.h (struct tune_params): Add fields for\n\tconfiguring loop array prefetching.\n\nFrom-SVN: r167175", "tree": {"sha": "dca4a3b79908c3d7ee8c9bcef378e46fb287cf55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dca4a3b79908c3d7ee8c9bcef378e46fb287cf55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/911de8a3417489cc2fb9c5009a974a3e8a7bae92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911de8a3417489cc2fb9c5009a974a3e8a7bae92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/911de8a3417489cc2fb9c5009a974a3e8a7bae92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911de8a3417489cc2fb9c5009a974a3e8a7bae92/comments", "author": null, "committer": null, "parents": [{"sha": "4d00efb6f42f48fee366ee15838756e1e37fb645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d00efb6f42f48fee366ee15838756e1e37fb645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d00efb6f42f48fee366ee15838756e1e37fb645"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "cc26014244d60cea2aa49a618b517df63b201a34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=911de8a3417489cc2fb9c5009a974a3e8a7bae92", "patch": "@@ -1,3 +1,10 @@\n+2010-11-26  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/arm/arm.c (arm_option_override): enable loop array\n+\tprefetching at -O3 for suitable targets, and configure params.\n+\t* config/arm/arm-protos.h (struct tune_params): Add fields for\n+\tconfiguring loop array prefetching.\n+\n 2010-11-26  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n \t* config/s390/2817.md (z196_crack): Add z196_g3 as possible slot."}, {"sha": "53923bdfbae407928e97f996d57aca8955a27860", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=911de8a3417489cc2fb9c5009a974a3e8a7bae92", "patch": "@@ -218,6 +218,9 @@ struct tune_params\n   bool (*rtx_costs) (rtx, RTX_CODE, RTX_CODE, int *, bool);\n   bool (*sched_adjust_cost) (rtx, rtx, rtx, int *);\n   int constant_limit;\n+  int num_prefetch_slots;\n+  int l1_cache_size;\n+  int l1_cache_line_size;\n };\n \n extern const struct tune_params *current_tune;"}, {"sha": "f9fbb197a8b82c69da2d19737823fc5c2131976b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 43, "deletions": 5, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911de8a3417489cc2fb9c5009a974a3e8a7bae92/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=911de8a3417489cc2fb9c5009a974a3e8a7bae92", "patch": "@@ -835,39 +835,51 @@ struct processors\n   const struct tune_params *const tune;\n };\n \n+\n+#define ARM_PREFETCH_NOT_BENEFICIAL 0, -1, -1\n+#define ARM_PREFETCH_BENEFICIAL(prefetch_slots,l1_size,l1_line_size) \\\n+  prefetch_slots, \\\n+  l1_size, \\\n+  l1_line_size\n+\n const struct tune_params arm_slowmul_tune =\n {\n   arm_slowmul_rtx_costs,\n   NULL,\n-  3\n+  3,\n+  ARM_PREFETCH_NOT_BENEFICIAL\n };\n \n const struct tune_params arm_fastmul_tune =\n {\n   arm_fastmul_rtx_costs,\n   NULL,\n-  1\n+  1,\n+  ARM_PREFETCH_NOT_BENEFICIAL\n };\n \n const struct tune_params arm_xscale_tune =\n {\n   arm_xscale_rtx_costs,\n   xscale_sched_adjust_cost,\n-  2\n+  2,\n+  ARM_PREFETCH_NOT_BENEFICIAL\n };\n \n const struct tune_params arm_9e_tune =\n {\n   arm_9e_rtx_costs,\n   NULL,\n-  1\n+  1,\n+  ARM_PREFETCH_NOT_BENEFICIAL\n };\n \n const struct tune_params arm_cortex_a9_tune =\n {\n   arm_9e_rtx_costs,\n   cortex_a9_sched_adjust_cost,\n-  1\n+  1,\n+  ARM_PREFETCH_BENEFICIAL(4,32,32)\n };\n \n \n@@ -1983,6 +1995,32 @@ arm_option_override (void)\n   if (TARGET_AAPCS_BASED && flag_strict_volatile_bitfields < 0)\n     flag_strict_volatile_bitfields = 1;\n \n+  /* Enable sw prefetching at -O3 for CPUS that have prefetch, and we have deemed\n+     it beneficial (signified by setting num_prefetch_slots to 1 or more.)  */\n+  if (flag_prefetch_loop_arrays < 0\n+      && HAVE_prefetch\n+      && optimize >= 3\n+      && current_tune->num_prefetch_slots > 0)\n+    flag_prefetch_loop_arrays = 1;\n+\n+  /* Set up parameters to be used in prefetching algorithm.  Do not override the\n+     defaults unless we are tuning for a core we have researched values for.  */\n+  if (current_tune->num_prefetch_slots > 0)\n+    maybe_set_param_value (PARAM_SIMULTANEOUS_PREFETCHES,\n+                           current_tune->num_prefetch_slots,\n+                           global_options.x_param_values,\n+                           global_options_set.x_param_values);\n+  if (current_tune->l1_cache_line_size >= 0)\n+    maybe_set_param_value (PARAM_L1_CACHE_LINE_SIZE,\n+                           current_tune->l1_cache_line_size,\n+                           global_options.x_param_values,\n+                           global_options_set.x_param_values);\n+  if (current_tune->l1_cache_size >= 0)\n+    maybe_set_param_value (PARAM_L1_CACHE_SIZE,\n+                           current_tune->l1_cache_size,\n+                           global_options.x_param_values,\n+                           global_options_set.x_param_values);\n+\n   /* Register global variables with the garbage collector.  */\n   arm_add_gc_roots ();\n }"}]}