{"sha": "c5f914a3c76702ed085f8bb753e594af8903699a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmOTE0YTNjNzY3MDJlZDA4NWY4YmI3NTNlNTk0YWY4OTAzNjk5YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-06-15T20:13:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-06-15T20:13:39Z"}, "message": "decl.c (wrapup_globals_for_namespace): Use DECL_SOURCE_LOCATION and \"%qF\" in warning_at instead of \"%q+F\" in warning.\n\n2016-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (wrapup_globals_for_namespace): Use DECL_SOURCE_LOCATION and\n\t\"%qF\" in warning_at instead of \"%q+F\" in warning.\n\t(check_redeclaration_exception_specification): Likewise in pedwarn\n\t(and error, inform, for consistency).\n\t* call.c (joust): Likewise.\n\nFrom-SVN: r237496", "tree": {"sha": "e8a605fde60cc07f3228892dea54e391946e7703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a605fde60cc07f3228892dea54e391946e7703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5f914a3c76702ed085f8bb753e594af8903699a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f914a3c76702ed085f8bb753e594af8903699a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5f914a3c76702ed085f8bb753e594af8903699a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f914a3c76702ed085f8bb753e594af8903699a/comments", "author": null, "committer": null, "parents": [{"sha": "d7e16fc536d3e954adceb395e20c76258186330b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e16fc536d3e954adceb395e20c76258186330b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e16fc536d3e954adceb395e20c76258186330b"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "d62ab39d43836d4d6f9d89774e7133797aa3697f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5f914a3c76702ed085f8bb753e594af8903699a", "patch": "@@ -1,3 +1,11 @@\n+2016-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (wrapup_globals_for_namespace): Use DECL_SOURCE_LOCATION and\n+\t\"%qF\" in warning_at instead of \"%q+F\" in warning.\n+\t(check_redeclaration_exception_specification): Likewise in pedwarn\n+\t(and error, inform, for consistency).\n+\t* call.c (joust): Likewise.\n+\n 2016-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70202"}, {"sha": "475b380a5f00db06d3db999bd6cdb8e554ac8f77", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c5f914a3c76702ed085f8bb753e594af8903699a", "patch": "@@ -9495,10 +9495,10 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn,\n \t\t\t\t     \"default argument mismatch in \"\n \t\t\t\t     \"overload resolution\"))\n \t\t\t{\n-\t\t\t  inform (input_location,\n-\t\t\t\t  \" candidate 1: %q+#F\", cand1->fn);\n-\t\t\t  inform (input_location,\n-\t\t\t\t  \" candidate 2: %q+#F\", cand2->fn);\n+\t\t\t  inform (DECL_SOURCE_LOCATION (cand1->fn),\n+\t\t\t\t  \" candidate 1: %q#F\", cand1->fn);\n+\t\t\t  inform (DECL_SOURCE_LOCATION (cand2->fn),\n+\t\t\t\t  \" candidate 2: %q#F\", cand2->fn);\n \t\t\t}\n \t\t    }\n \t\t  else"}, {"sha": "830b3f523dc617708cec96eb7245bf2e44bb17cc", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f914a3c76702ed085f8bb753e594af8903699a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c5f914a3c76702ed085f8bb753e594af8903699a", "patch": "@@ -914,8 +914,9 @@ wrapup_globals_for_namespace (tree name_space, void* data ATTRIBUTE_UNUSED)\n \t    && !DECL_ARTIFICIAL (decl)\n \t    && !TREE_NO_WARNING (decl))\n \t  {\n-\t    warning (OPT_Wunused_function,\n-\t\t     \"%q+F declared %<static%> but never defined\", decl);\n+\t    warning_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\tOPT_Wunused_function,\n+\t\t\t\"%qF declared %<static%> but never defined\", decl);\n \t    TREE_NO_WARNING (decl) = 1;\n \t  }\n     }\n@@ -1233,18 +1234,20 @@ check_redeclaration_exception_specification (tree new_decl,\n       && !comp_except_specs (new_exceptions, old_exceptions, ce_normal))\n     {\n       const char *msg\n-\t= \"declaration of %q+F has a different exception specifier\";\n+\t= \"declaration of %qF has a different exception specifier\";\n       bool complained = true;\n+      location_t new_loc = DECL_SOURCE_LOCATION (new_decl);\n       if (DECL_IN_SYSTEM_HEADER (old_decl))\n-\tcomplained = pedwarn (0, OPT_Wsystem_headers, msg, new_decl);\n+\tcomplained = pedwarn (new_loc, OPT_Wsystem_headers, msg, new_decl);\n       else if (!flag_exceptions)\n \t/* We used to silently permit mismatched eh specs with\n \t   -fno-exceptions, so make them a pedwarn now.  */\n-\tcomplained = pedwarn (0, OPT_Wpedantic, msg, new_decl);\n+\tcomplained = pedwarn (new_loc, OPT_Wpedantic, msg, new_decl);\n       else\n-\terror (msg, new_decl);\n+\terror_at (new_loc, msg, new_decl);\n       if (complained)\n-\tinform (0, \"from previous declaration %q+F\", old_decl);\n+\tinform (DECL_SOURCE_LOCATION (old_decl),\n+\t\t\"from previous declaration %qF\", old_decl);\n     }\n }\n "}]}