{"sha": "e7cd165c2fdf395c487a13db8c17a678620e2716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjZDE2NWMyZmRmMzk1YzQ4N2ExM2RiOGMxN2E2Nzg2MjBlMjcxNg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-10-17T08:47:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:47:56Z"}, "message": "sem_ch3.adb, [...]: Minor reformatting.\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, a-strsea.adb: Minor reformatting.\n\t* par-ch6.adb (P_Subprogram): Fix bad handling of null procedures.\n\nFrom-SVN: r216375", "tree": {"sha": "6811a4a831ed141a99af57fa3ea21ed2ffb9bd75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6811a4a831ed141a99af57fa3ea21ed2ffb9bd75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7cd165c2fdf395c487a13db8c17a678620e2716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cd165c2fdf395c487a13db8c17a678620e2716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cd165c2fdf395c487a13db8c17a678620e2716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cd165c2fdf395c487a13db8c17a678620e2716/comments", "author": null, "committer": null, "parents": [{"sha": "b98b57a59fb3130d4a9ffa275cba303fdf1b2a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98b57a59fb3130d4a9ffa275cba303fdf1b2a9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98b57a59fb3130d4a9ffa275cba303fdf1b2a9f"}], "stats": {"total": 100, "additions": 50, "deletions": 50}, "files": [{"sha": "45f4f31f79816322bb89ec61dec9abf389274748", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7cd165c2fdf395c487a13db8c17a678620e2716", "patch": "@@ -1,3 +1,8 @@\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, a-strsea.adb: Minor reformatting.\n+\t* par-ch6.adb (P_Subprogram): Fix bad handling of null procedures.\n+\n 2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Build_Derived_Enumeration_Type): Propagate aspect"}, {"sha": "82acd1a6bf3ca104fa0d76e94c2b355103b8924f", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=e7cd165c2fdf395c487a13db8c17a678620e2716", "patch": "@@ -482,7 +482,7 @@ package body Ada.Strings.Search is\n    is\n    begin\n \n-      --  AI05-056 : if source is empty result is always 0.\n+      --  AI05-056: If source is empty result is always zero\n \n       if Source'Length = 0 then\n          return 0;\n@@ -514,7 +514,7 @@ package body Ada.Strings.Search is\n    is\n    begin\n \n-      --  AI05-056 : if source is empty result is always 0.\n+      --  AI05-056: If source is empty result is always zero\n \n       if Source'Length = 0 then\n          return 0;"}, {"sha": "7cc2f5da1da451a762efa47008cda109d97d8c01", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=e7cd165c2fdf395c487a13db8c17a678620e2716", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -938,7 +938,7 @@ package body Ch6 is\n          Aspects := Get_Aspect_Specifications (Semicolon => False);\n \n          --  Aspects may be present on a subprogram body. The source parsed\n-         --  so far is that of its specification, go parse the body and attach\n+         --  so far is that of its specification. Go parse the body and attach\n          --  the collected aspects, if any, to the body.\n \n          if Token = Tok_Is then\n@@ -959,7 +959,14 @@ package body Ch6 is\n          --  Semicolon Used in Place of IS\" in body of Parser package)\n          --  Note that SIS_Missing_Semicolon_Message is already set properly.\n \n-         if Pf_Flags.Pbod then\n+         if Pf_Flags.Pbod\n+\n+           --  Disconnnect this processing if we have scanned a null procedure\n+           --  because in this case the spec is complete anyway with no body.\n+\n+           and then (Nkind (Specification_Node) /= N_Procedure_Specification\n+                      or else not Null_Present (Specification_Node))\n+         then\n             SIS_Labl := Scope.Table (Scope.Last).Labl;\n             SIS_Sloc := Scope.Table (Scope.Last).Sloc;\n             SIS_Ecol := Scope.Table (Scope.Last).Ecol;"}, {"sha": "473bff83716c4dbf355ba46fd18c261c5a78f23d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 33, "deletions": 45, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cd165c2fdf395c487a13db8c17a678620e2716/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e7cd165c2fdf395c487a13db8c17a678620e2716", "patch": "@@ -3285,19 +3285,20 @@ package body Sem_Ch3 is\n                --  Enter_Name will handle the visibility.\n \n                or else\n-                (Is_Discriminal (Id)\n+                 (Is_Discriminal (Id)\n                    and then Ekind (Discriminal_Link (Id)) =\n-                              E_Entry_Index_Parameter)\n+                                              E_Entry_Index_Parameter)\n \n                --  The current object is the renaming for a generic declared\n                --  within the instance.\n \n                or else\n-                (Ekind (Prev_Entity) = E_Package\n-                  and then Nkind (Parent (Prev_Entity)) =\n-                                         N_Package_Renaming_Declaration\n-                  and then not Comes_From_Source (Prev_Entity)\n-                  and then Is_Generic_Instance (Renamed_Entity (Prev_Entity))))\n+                 (Ekind (Prev_Entity) = E_Package\n+                   and then Nkind (Parent (Prev_Entity)) =\n+                                               N_Package_Renaming_Declaration\n+                   and then not Comes_From_Source (Prev_Entity)\n+                   and then\n+                     Is_Generic_Instance (Renamed_Entity (Prev_Entity))))\n          then\n             Prev_Entity := Empty;\n          end if;\n@@ -4236,9 +4237,7 @@ package body Sem_Ch3 is\n       Parent_Type := Find_Type_Of_Subtype_Indic (Indic);\n       Parent_Base := Base_Type (Parent_Type);\n \n-      if Parent_Type = Any_Type\n-        or else Etype (Parent_Type) = Any_Type\n-      then\n+      if Parent_Type = Any_Type or else Etype (Parent_Type) = Any_Type then\n          Set_Ekind (T, Ekind (Parent_Type));\n          Set_Etype (T, Any_Type);\n          goto Leave;\n@@ -6374,9 +6373,9 @@ package body Sem_Ch3 is\n          --  this right???\n \n          if Nkind (Indic) = N_Subtype_Indication then\n-            Apply_Range_Check (Range_Expression (Constraint (Indic)),\n-                               Parent_Type,\n-                               Source_Typ => Entity (Subtype_Mark (Indic)));\n+            Apply_Range_Check\n+              (Range_Expression (Constraint (Indic)), Parent_Type,\n+               Source_Typ => Entity (Subtype_Mark (Indic)));\n          end if;\n       end if;\n    end Build_Derived_Enumeration_Type;\n@@ -8024,7 +8023,7 @@ package body Sem_Ch3 is\n \n       elsif Is_Limited_Record (Parent_Type)\n         or else (Present (Full_View (Parent_Type))\n-                   and then Is_Limited_Record (Full_View (Parent_Type)))\n+                  and then Is_Limited_Record (Full_View (Parent_Type)))\n       then\n          if not Is_Interface (Parent_Type)\n            or else Is_Synchronized_Interface (Parent_Type)\n@@ -8210,7 +8209,7 @@ package body Sem_Ch3 is\n          Set_Is_Constrained\n            (Derived_Type,\n             not (Inherit_Discrims\n-                   or else Has_Unknown_Discriminants (Derived_Type)));\n+                  or else Has_Unknown_Discriminants (Derived_Type)));\n       end if;\n \n       --  STEP 3: initialize fields of derived type\n@@ -8607,7 +8606,7 @@ package body Sem_Ch3 is\n       --  Set SSO default for record or array type\n \n       if (Is_Array_Type (Derived_Type)\n-          or else Is_Record_Type (Derived_Type))\n+           or else Is_Record_Type (Derived_Type))\n         and then Is_Base_Type (Derived_Type)\n       then\n          Set_Default_SSO (Derived_Type);\n@@ -8909,8 +8908,7 @@ package body Sem_Ch3 is\n \n          elsif Nkind (Constr) = N_Range\n            or else (Nkind (Constr) = N_Attribute_Reference\n-                     and then\n-                    Attribute_Name (Constr) = Name_Range)\n+                     and then Attribute_Name (Constr) = Name_Range)\n          then\n             Error_Msg_N\n               (\"a range is not a valid discriminant constraint\", Constr);\n@@ -12181,7 +12179,8 @@ package body Sem_Ch3 is\n             Get_Index_Bounds (Old_Index, Lo_Expr, Hi_Expr);\n \n             if Is_Discriminant (Lo_Expr)\n-              or else Is_Discriminant (Hi_Expr)\n+                 or else\n+               Is_Discriminant (Hi_Expr)\n             then\n                Need_To_Create_Itype := True;\n             end if;\n@@ -12401,7 +12400,7 @@ package body Sem_Ch3 is\n                --  were declared in Typ's private view.\n \n                or else (Is_Private_Type (Discrim_Scope)\n-                        and then Chars (Discrim_Scope) = Chars (Typ))\n+                         and then Chars (Discrim_Scope) = Chars (Typ))\n \n                --  or else we are deriving from the full view and the\n                --  discriminant is declared in the private entity.\n@@ -13371,9 +13370,7 @@ package body Sem_Ch3 is\n          --  The tag and the possible parent component are unconditionally in\n          --  the subtype.\n \n-         if Is_Tagged_Type (Typ)\n-           or else Has_Controlled_Component (Typ)\n-         then\n+         if Is_Tagged_Type (Typ) or else Has_Controlled_Component (Typ) then\n             Old_C := First_Component (Typ);\n             while Present (Old_C) loop\n                if Nam_In (Chars (Old_C), Name_uTag, Name_uParent) then\n@@ -15015,8 +15012,8 @@ package body Sem_Ch3 is\n                      loop\n                         exit when No (Partial_View)\n                           or else (Has_Private_Declaration (Partial_View)\n-                                     and then\n-                                   Full_View (Partial_View) = Derived_Type);\n+                                    and then\n+                                      Full_View (Partial_View) = Derived_Type);\n \n                         Next_Entity (Partial_View);\n                      end loop;\n@@ -15373,9 +15370,7 @@ package body Sem_Ch3 is\n          --  subtype of Any_Type, and set a few attributes to prevent cascaded\n          --  errors. If this is a self-definition, emit error now.\n \n-         if T = Parent_Type\n-           or else T = Etype (Parent_Type)\n-         then\n+         if T = Parent_Type or else T = Etype (Parent_Type) then\n             Error_Msg_N (\"type cannot be used in its own definition\", Indic);\n          end if;\n \n@@ -15858,9 +15853,7 @@ package body Sem_Ch3 is\n    --  Start of processing for Expand_To_Stored_Constraint\n \n    begin\n-      if No (Constraint)\n-        or else Is_Empty_Elmt_List (Constraint)\n-      then\n+      if No (Constraint) or else Is_Empty_Elmt_List (Constraint) then\n          return No_Elist;\n       end if;\n \n@@ -16242,7 +16235,7 @@ package body Sem_Ch3 is\n \n          if Is_Type (Prev)\n            and then (Is_Tagged_Type (Prev)\n-                       or else Present (Class_Wide_Type (Prev)))\n+                      or else Present (Class_Wide_Type (Prev)))\n          then\n             --  Ada 2012 (AI05-0162): A private type may be the completion of\n             --  an incomplete type.\n@@ -16937,8 +16930,7 @@ package body Sem_Ch3 is\n       elsif Nkind (C) = N_Digits_Constraint then\n          return\n             Is_Decimal_Fixed_Point_Type (Entity (Subtype_Mark (N)))\n-              or else\n-            Present (Range_Constraint (C));\n+              or else Present (Range_Constraint (C));\n \n       elsif Nkind (C) = N_Delta_Constraint then\n          return Present (Range_Constraint (C));\n@@ -17028,7 +17020,7 @@ package body Sem_Ch3 is\n       --  Start of processing for Inherit_Component\n \n       begin\n-         pragma Assert (not Is_Tagged or else not Stored_Discrim);\n+         pragma Assert (not Is_Tagged or not Stored_Discrim);\n \n          Set_Parent (New_C, Parent (Old_C));\n \n@@ -17073,7 +17065,7 @@ package body Sem_Ch3 is\n             elsif (Is_Private_Type (Derived_Base)\n                     and then not Is_Generic_Type (Derived_Base))\n               or else (Is_Empty_Elmt_List (Discs)\n-                         and then not Expander_Active)\n+                        and then not Expander_Active)\n             then\n                Set_Etype (New_C, Etype (Old_C));\n \n@@ -17215,9 +17207,9 @@ package body Sem_Ch3 is\n         and then Present (First_Discriminant (Derived_Base))\n         and then\n           (not Is_Private_Type (Derived_Base)\n-             or else Is_Completely_Hidden\n-               (First_Stored_Discriminant (Derived_Base))\n-             or else Is_Generic_Type (Derived_Base))\n+            or else Is_Completely_Hidden\n+                      (First_Stored_Discriminant (Derived_Base))\n+            or else Is_Generic_Type (Derived_Base))\n       then\n          D := First_Discriminant (Derived_Base);\n          while Present (D) loop\n@@ -18779,9 +18771,7 @@ package body Sem_Ch3 is\n       begin\n          --  Abstract interfaces are only associated with tagged record types\n \n-         if not Is_Tagged_Type (Typ)\n-           or else not Is_Record_Type (Typ)\n-         then\n+         if not Is_Tagged_Type (Typ) or else not Is_Record_Type (Typ) then\n             return;\n          end if;\n \n@@ -20488,9 +20478,7 @@ package body Sem_Ch3 is\n \n       --  Normal case\n \n-      if Ada_Version < Ada_2005\n-        or else not Interface_Present (Def)\n-      then\n+      if Ada_Version < Ada_2005 or else not Interface_Present (Def) then\n          if Limited_Present (Def) then\n             Check_SPARK_05_Restriction (\"limited is not allowed\", N);\n          end if;"}]}