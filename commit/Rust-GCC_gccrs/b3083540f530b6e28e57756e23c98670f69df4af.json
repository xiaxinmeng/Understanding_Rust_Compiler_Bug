{"sha": "b3083540f530b6e28e57756e23c98670f69df4af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMwODM1NDBmNTMwYjZlMjhlNTc3NTZlMjNjOTg2NzBmNjlkZjRhZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T11:46:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T11:46:35Z"}, "message": "[multiple changes]\n\n2015-11-12  Tristan Gingold  <gingold@adacore.com>\n\n\t* snames.ads-tmpl: Name_Gnat_Extended_Ravenscar: New identifier.\n\t* s-rident.ads (Profile_Name): Add GNAT_Extended_Ravenscar.\n\t(Profile_Info): Add new entry for GNAT_Extended_Ravenscar.\n\t* sem_prag.adb (Set_Ravenscar_Profile): Add Profile parameter\n\tto handle various ravenscar profiles. Adjust error messages.\n\t(Analyze_Pragma): Handle GNAT_Extended_Ravenscar profile.\n\t* targparm.adb (Get_Target_Parameters): Handle\n\tGNAT_Extended_Ravenscar profile.\n\n2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Unreferenced_Entity): If the entity is an\n\tOut_Parameter the front-end does not emit any warning on it, so\n\tdo not suppress warnings on the entity because the backend might\n\tbe able to determine an uninitialized path and warn accordingly.\n\n2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Selected_Component): Diagnose an attempt\n\tto reference an internal entity from a synchronized type from\n\twithin the body of that type, when the prefix of the selected\n\tcomponent is not the current instance.\n\n2015-11-12  Ed Falis  <falis@adacore.com>\n\n\t* s-stchop-vxworks.adb: Clean up in stack checking code.\n\n2015-11-12  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch6.adb (Is_Build_In_Place_Function_Call):\n\tTest Expression (N) in N_Type_Conversion cases as well,\n\tsince conversions can occur in actual parameter contexts.\n\t(Make_Build_In_Place_Call_In_Anonymous_Context): Retrieve\n\tfunction call from Expression (Func_Call) when Nkind (Func_Call)\n\tis N_Type_Conversion, since conversions are allowed in \"anonymous\"\n\tcontexts (specifically, as actual parameters).\n\nFrom-SVN: r230242", "tree": {"sha": "a52654e9c790e644fe4fa78b2e42992e6f4cd24d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52654e9c790e644fe4fa78b2e42992e6f4cd24d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3083540f530b6e28e57756e23c98670f69df4af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3083540f530b6e28e57756e23c98670f69df4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3083540f530b6e28e57756e23c98670f69df4af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3083540f530b6e28e57756e23c98670f69df4af/comments", "author": null, "committer": null, "parents": [{"sha": "7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66"}], "stats": {"total": 213, "additions": 176, "deletions": 37}, "files": [{"sha": "52b839b7fc57ed977b70d4bd6a4f5750fb93c9ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -1,3 +1,42 @@\n+2015-11-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* snames.ads-tmpl: Name_Gnat_Extended_Ravenscar: New identifier.\n+\t* s-rident.ads (Profile_Name): Add GNAT_Extended_Ravenscar.\n+\t(Profile_Info): Add new entry for GNAT_Extended_Ravenscar.\n+\t* sem_prag.adb (Set_Ravenscar_Profile): Add Profile parameter\n+\tto handle various ravenscar profiles. Adjust error messages.\n+\t(Analyze_Pragma): Handle GNAT_Extended_Ravenscar profile.\n+\t* targparm.adb (Get_Target_Parameters): Handle\n+\tGNAT_Extended_Ravenscar profile.\n+\n+2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Unreferenced_Entity): If the entity is an\n+\tOut_Parameter the front-end does not emit any warning on it, so\n+\tdo not suppress warnings on the entity because the backend might\n+\tbe able to determine an uninitialized path and warn accordingly.\n+\n+2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): Diagnose an attempt\n+\tto reference an internal entity from a synchronized type from\n+\twithin the body of that type, when the prefix of the selected\n+\tcomponent is not the current instance.\n+\n+2015-11-12  Ed Falis  <falis@adacore.com>\n+\n+\t* s-stchop-vxworks.adb: Clean up in stack checking code.\n+\n+2015-11-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb (Is_Build_In_Place_Function_Call):\n+\tTest Expression (N) in N_Type_Conversion cases as well,\n+\tsince conversions can occur in actual parameter contexts.\n+\t(Make_Build_In_Place_Call_In_Anonymous_Context): Retrieve\n+\tfunction call from Expression (Func_Call) when Nkind (Func_Call)\n+\tis N_Type_Conversion, since conversions are allowed in \"anonymous\"\n+\tcontexts (specifically, as actual parameters).\n+\n 2015-11-12  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch4.adb (analyze_If_Expression): Reject IF-expression where"}, {"sha": "bdde498306a342a355740341ed1b4f08ca41955a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -6893,10 +6893,12 @@ package body Exp_Ch6 is\n          return False;\n       end if;\n \n-      --  Step past qualification or unchecked conversion (the latter can occur\n-      --  in cases of calls to 'Input).\n+      --  Step past qualification, type conversion (which can occur in actual\n+      --  parameter contexts), and unchecked conversion (which can occur in\n+      --  cases of calls to 'Input).\n \n       if Nkind_In (Exp_Node, N_Qualified_Expression,\n+                             N_Type_Conversion,\n                              N_Unchecked_Type_Conversion)\n       then\n          Exp_Node := Expression (N);\n@@ -7425,10 +7427,12 @@ package body Exp_Ch6 is\n       Return_Obj_Decl : Entity_Id;\n \n    begin\n-      --  Step past qualification or unchecked conversion (the latter can occur\n-      --  in cases of calls to 'Input).\n+      --  Step past qualification, type conversion (which can occur in actual\n+      --  parameter contexts), and unchecked conversion (which can occur in\n+      --  cases of calls to 'Input).\n \n       if Nkind_In (Func_Call, N_Qualified_Expression,\n+                              N_Type_Conversion,\n                               N_Unchecked_Type_Conversion)\n       then\n          Func_Call := Expression (Func_Call);"}, {"sha": "58c69d865fc1418b097452ef23c0302b053d5b0b", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -378,6 +378,7 @@ package System.Rident is\n      (No_Profile,\n       No_Implementation_Extensions,\n       Ravenscar,\n+      GNAT_Extended_Ravenscar,\n       Restricted);\n    --  Names of recognized profiles. No_Profile is used to indicate that a\n    --  restriction came from pragma Restrictions[_Warning], as opposed to\n@@ -500,6 +501,52 @@ package System.Rident is\n \n                         --  Value settings for Ravenscar (same as Restricted)\n \n+                        Value =>\n+                          (Max_Asynchronous_Select_Nesting => 0,\n+                           Max_Protected_Entries           => 1,\n+                           Max_Select_Alternatives         => 0,\n+                           Max_Task_Entries                => 0,\n+                           others                          => 0)),\n+\n+                     GNAT_Extended_Ravenscar  =>\n+\n+                     --  Restrictions for GNAT_Extended_Ravenscar =\n+                     --    Restricted profile ..\n+\n+                       (Set   =>\n+                          (No_Abort_Statements             => True,\n+                           No_Asynchronous_Control         => True,\n+                           No_Dynamic_Attachment           => True,\n+                           No_Dynamic_Priorities           => True,\n+                           No_Entry_Queue                  => True,\n+                           No_Local_Protected_Objects      => True,\n+                           No_Protected_Type_Allocators    => True,\n+                           No_Requeue_Statements           => True,\n+                           No_Task_Allocators              => True,\n+                           No_Task_Attributes_Package      => True,\n+                           No_Task_Hierarchy               => True,\n+                           No_Terminate_Alternatives       => True,\n+                           Max_Asynchronous_Select_Nesting => True,\n+                           Max_Protected_Entries           => True,\n+                           Max_Select_Alternatives         => True,\n+                           Max_Task_Entries                => True,\n+\n+                           --  plus these additional restrictions:\n+\n+                           No_Calendar                      => True,\n+                           No_Implicit_Task_Allocations     => True,\n+                           No_Implicit_Protected_Object_Allocations\n+                                                            => True,\n+                           No_Local_Timing_Events           => True,\n+                           No_Relative_Delay                => True,\n+                           No_Select_Statements             => True,\n+                           No_Specific_Termination_Handlers => True,\n+                           No_Task_Termination              => True,\n+                           Simple_Barriers                  => True,\n+                           others                           => False),\n+\n+                        --  Value settings for Ravenscar (same as Restricted)\n+\n                         Value =>\n                           (Max_Asynchronous_Select_Nesting => 0,\n                            Max_Protected_Entries           => 1,"}, {"sha": "06ec151ef39a16b684e4f05a48602894cfaa8ade", "filename": "gcc/ada/s-stchop-vxworks.adb", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fs-stchop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fs-stchop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop-vxworks.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1999-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the verson for VxWorks 5 and VxWorks MILS\n+--  This is the verson for VxWorks 5, VxWorks 6 Cert and VxWorks MILS\n \n --  This file should be kept synchronized with the general implementation\n --  provided by s-stchop.adb.\n@@ -47,9 +47,9 @@ package body System.Stack_Checking.Operations is\n    --  In order to have stack checking working appropriately on VxWorks we need\n    --  to extract the stack size information from the VxWorks kernel itself.\n \n-   --  For VxWorks 5 the library for showing task-related information needs to\n-   --  be linked into the VxWorks system, when using stack checking. The\n-   --  taskShow library can be linked into the VxWorks system by either:\n+   --  For VxWorks 5 & 6 the library for showing task-related information\n+   --  needs to be linked into the VxWorks system, when using stack checking.\n+   --   The taskShow library can be linked into the VxWorks system by either:\n \n    --    * defining INCLUDE_SHOW_ROUTINES in config.h when using\n    --      configuration header files, or\n@@ -60,10 +60,10 @@ package body System.Stack_Checking.Operations is\n    --  VxWorks MILS includes the necessary routine in taskLib, so nothing\n    --  special needs to be done there.\n \n-   Stack_Limit : Address :=\n-                   Boolean'Pos (Stack_Grows_Down) * Address'First\n-                   + Boolean'Pos (not Stack_Grows_Down) * Address'Last;\n-   pragma Export (C, Stack_Limit, \"__gnat_stack_limit\");\n+   Stack_Limit : Address;\n+\n+   pragma Import (C, Stack_Limit, \"__gnat_stack_limit\");\n+\n    --  Stack_Limit contains the limit of the stack. This variable is later made\n    --  a task variable (by calling taskVarAdd) and then correctly set to the\n    --  stack limit of the task. Before being so initialized its value must be\n@@ -106,11 +106,6 @@ package body System.Stack_Checking.Operations is\n    procedure Set_Stack_Limit_For_Current_Task is\n       use Interfaces.C;\n \n-      function Task_Var_Add (Tid : Interfaces.C.int; Var : Address)\n-                            return Interfaces.C.int;\n-      pragma Import (C, Task_Var_Add, \"taskVarAdd\");\n-      --  Import from VxWorks\n-\n       type OS_Stack_Info is record\n          Size  : Interfaces.C.int;\n          Base  : System.Address;\n@@ -134,20 +129,16 @@ package body System.Stack_Checking.Operations is\n \n       Get_Stack_Info (Stack_Info'Access);\n \n-      --  In s-stchop.adb, we check for overflow in the following operations,\n-      --  but we have no such check in this vxworks version. Why not ???\n-\n       if Stack_Grows_Down then\n-         Limit := Stack_Info.Base - Storage_Offset (Stack_Info.Size);\n+         Limit := Stack_Info.Base - Storage_Offset (Stack_Info.Size)\n+           + Storage_Offset'(16#12_000#);\n       else\n-         Limit := Stack_Info.Base + Storage_Offset (Stack_Info.Size);\n+         Limit := Stack_Info.Base + Storage_Offset (Stack_Info.Size)\n+           - Storage_Offset'(16#12_000#);\n       end if;\n \n-      --  Note: taskVarAdd implicitly calls taskVarInit if required\n+      Stack_Limit := Limit;\n \n-      if Task_Var_Add (0, Stack_Limit'Address) = 0 then\n-         Stack_Limit := Limit;\n-      end if;\n    end Set_Stack_Limit_For_Current_Task;\n \n end System.Stack_Checking.Operations;"}, {"sha": "373c9e86faecc86a00009705168477d33ce33079", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -4655,6 +4655,23 @@ package body Sem_Ch4 is\n                    Comp = First_Private_Entity (Base_Type (Prefix_Type));\n          end loop;\n \n+         --  If the scope is a current instance, the prefix cannot be an\n+         --  expression of the same type (that would represent an attempt\n+         --  to reach an internal operation of another synchronized object).\n+         --  This is legal if prefix is an access to such type and there is\n+         --  a dereference.\n+\n+         if In_Scope\n+           and then not Is_Entity_Name (Name)\n+           and then Nkind (Name) /= N_Explicit_Dereference\n+         then\n+            Error_Msg_NE (\"invalid reference to internal operation \"\n+               & \"of some object of type&\", N, Type_To_Use);\n+            Set_Entity (Sel, Any_Id);\n+            Set_Etype (Sel, Any_Type);\n+            return;\n+         end if;\n+\n          --  If there is no visible entity with the given name or none of the\n          --  visible entities are plausible interpretations, check whether\n          --  there is some other primitive operation with that name."}, {"sha": "4d696c49b19b89594babeb2f8300cfafdf2319bd", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -3737,10 +3737,11 @@ package body Sem_Prag is\n       --  Activate the set of configuration pragmas and permissions that make\n       --  up the Rational profile.\n \n-      procedure Set_Ravenscar_Profile (N : Node_Id);\n+      procedure Set_Ravenscar_Profile (Profile : Profile_Name; N : Node_Id);\n       --  Activate the set of configuration pragmas and restrictions that make\n-      --  up the Ravenscar Profile. N is the corresponding pragma node, which\n-      --  is used for error messages on any constructs violating the profile.\n+      --  up the Profile. Profile must be either GNAT_Extended_Ravencar or\n+      --  Ravenscar. N is the corresponding pragma node, which is used for\n+      --  error messages on any constructs violating the profile.\n \n       ----------------------------------\n       -- Acquire_Warning_Match_String --\n@@ -9654,20 +9655,40 @@ package body Sem_Prag is\n       --      No_Dependence => Ada.Task_Attributes\n       --      No_Dependence => System.Multiprocessors.Dispatching_Domains\n \n-      procedure Set_Ravenscar_Profile (N : Node_Id) is\n+      procedure Set_Ravenscar_Profile (Profile : Profile_Name; N : Node_Id) is\n          Prefix_Entity   : Entity_Id;\n          Selector_Entity : Entity_Id;\n          Prefix_Node     : Node_Id;\n          Node            : Node_Id;\n \n+         procedure Set_Error_Msg_To_Profile_Name;\n+         --  Set Error_Msg_String and Error_Msg_Strlen to the name of the\n+         --  profile.\n+\n+         -----------------------------------\n+         -- Set_Error_Msg_To_Profile_Name --\n+         -----------------------------------\n+\n+         procedure Set_Error_Msg_To_Profile_Name is\n+            Pragma_Args     : constant List_Id :=\n+                                Pragma_Argument_Associations (N);\n+            Profile_Name    : constant Node_Id :=\n+                                Get_Pragma_Arg (First (Pragma_Args));\n+         begin\n+            Get_Name_String (Chars (Profile_Name));\n+            Adjust_Name_Case (Sloc (Profile_Name));\n+            Error_Msg_Strlen := Name_Len;\n+            Error_Msg_String (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n+         end Set_Error_Msg_To_Profile_Name;\n       begin\n          --  pragma Task_Dispatching_Policy (FIFO_Within_Priorities)\n \n          if Task_Dispatching_Policy /= ' '\n            and then Task_Dispatching_Policy /= 'F'\n          then\n             Error_Msg_Sloc := Task_Dispatching_Policy_Sloc;\n-            Error_Pragma (\"Profile (Ravenscar) incompatible with policy#\");\n+            Set_Error_Msg_To_Profile_Name;\n+            Error_Pragma (\"Profile (~) incompatible with policy#\");\n \n          --  Set the FIFO_Within_Priorities policy, but always preserve\n          --  System_Location since we like the error message with the run time\n@@ -9687,7 +9708,8 @@ package body Sem_Prag is\n            and then Locking_Policy /= 'C'\n          then\n             Error_Msg_Sloc := Locking_Policy_Sloc;\n-            Error_Pragma (\"Profile (Ravenscar) incompatible with policy#\");\n+            Set_Error_Msg_To_Profile_Name;\n+            Error_Pragma (\"Profile (~) incompatible with policy#\");\n \n          --  Set the Ceiling_Locking policy, but preserve System_Location since\n          --  we like the error message with the run time name.\n@@ -9707,7 +9729,7 @@ package body Sem_Prag is\n          --  Set the corresponding restrictions\n \n          Set_Profile_Restrictions\n-           (Ravenscar, N, Warn => Treat_Restrictions_As_Warnings);\n+           (Profile, N, Warn => Treat_Restrictions_As_Warnings);\n \n          --  Set the No_Dependence restrictions\n \n@@ -18798,7 +18820,10 @@ package body Sem_Prag is\n \n             begin\n                if Chars (Argx) = Name_Ravenscar then\n-                  Set_Ravenscar_Profile (N);\n+                  Set_Ravenscar_Profile (Ravenscar, N);\n+\n+               elsif Chars (Argx) = Name_Gnat_Extended_Ravenscar then\n+                  Set_Ravenscar_Profile (GNAT_Extended_Ravenscar, N);\n \n                elsif Chars (Argx) = Name_Restricted then\n                   Set_Profile_Restrictions\n@@ -19721,7 +19746,7 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n             Check_Valid_Configuration_Pragma;\n-            Set_Ravenscar_Profile (N);\n+            Set_Ravenscar_Profile (Ravenscar, N);\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N"}, {"sha": "3b3bc2b0f8bcd3c186421be3d631c5f9a88cdad3", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -4217,8 +4217,12 @@ package body Sem_Warn is\n          end case;\n \n          --  Kill warnings on the entity on which the message has been posted\n+         --  (nothing is posted on out parameters because back end might be\n+         --  able to uncover an uninitialized path, and warn accordingly).\n \n-         Set_Warnings_Off (E);\n+         if Ekind (E) /= E_Out_Parameter then\n+            Set_Warnings_Off (E);\n+         end if;\n       end if;\n    end Warn_On_Unreferenced_Entity;\n "}, {"sha": "10878063b794d6aca1f5f8dc3d30d8afd89fa940", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -738,6 +738,7 @@ package Snames is\n    Name_Gcc                            : constant Name_Id := N + $;\n    Name_General                        : constant Name_Id := N + $;\n    Name_Gnat                           : constant Name_Id := N + $;\n+   Name_Gnat_Extended_Ravenscar        : constant Name_Id := N + $;\n    Name_Gnatprove                      : constant Name_Id := N + $;\n    Name_GPL                            : constant Name_Id := N + $;\n    Name_High_Order_First               : constant Name_Id := N + $;"}, {"sha": "33983c71d012db350078a64e9b0a6aeaee5cca9e", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3083540f530b6e28e57756e23c98670f69df4af/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=b3083540f530b6e28e57756e23c98670f69df4af", "patch": "@@ -293,6 +293,17 @@ package body Targparm is\n             P := P + 27;\n             goto Line_Loop_Continue;\n \n+         --  Test for pragma Profile (GNAT_Extended_Ravenscar);\n+\n+         elsif System_Text (P .. P + 40) =\n+                 \"pragma Profile (GNAT_Extended_Ravenscar);\"\n+         then\n+            Set_Profile_Restrictions (GNAT_Extended_Ravenscar);\n+            Opt.Task_Dispatching_Policy := 'F';\n+            Opt.Locking_Policy          := 'C';\n+            P := P + 27;\n+            goto Line_Loop_Continue;\n+\n          --  Test for pragma Profile (Restricted);\n \n          elsif System_Text (P .. P + 27) ="}]}