{"sha": "8d6419db2cd99949022cd76cf6b1d0f93be0394b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2NDE5ZGIyY2Q5OTk0OTAyMmNkNzZjZjZiMWQwZjkzYmUwMzk0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-25T13:53:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-25T13:53:50Z"}, "message": "re PR tree-optimization/89789 (Compile time hog during RPO VN)\n\n2019-03-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89789\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not allow lattice\n\tchanges from non-undefined back to undefined.\n\n\t* gcc.dg/torture/pr89789.c: New testcase.\n\nFrom-SVN: r269917", "tree": {"sha": "3cd097e459f74ad756f2e348123284a774b9b32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cd097e459f74ad756f2e348123284a774b9b32f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d6419db2cd99949022cd76cf6b1d0f93be0394b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6419db2cd99949022cd76cf6b1d0f93be0394b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6419db2cd99949022cd76cf6b1d0f93be0394b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6419db2cd99949022cd76cf6b1d0f93be0394b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be5ce04a6135e0aee4187ec1a1f167f403e0f856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5ce04a6135e0aee4187ec1a1f167f403e0f856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5ce04a6135e0aee4187ec1a1f167f403e0f856"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "3f72f505869d49a6a8ce4f193ea2406660f1ea2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d6419db2cd99949022cd76cf6b1d0f93be0394b", "patch": "@@ -1,3 +1,9 @@\n+2019-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89789\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not allow lattice\n+\tchanges from non-undefined back to undefined.\n+\n 2019-03-25  Thomas Otto  <thomas.otto@pdv-fs.de>\n \n \t* dwarf2out.c (comp_dir_string): cached_wd could be set to both a"}, {"sha": "7e1978bde74dab9280ae7cfc47ad40880a79c4f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d6419db2cd99949022cd76cf6b1d0f93be0394b", "patch": "@@ -1,3 +1,8 @@\n+2019-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89789\n+\t* gcc.dg/torture/pr89789.c: New testcase.\n+\n 2019-03-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/abi/lambda-static-1.C: New."}, {"sha": "2c19fab4c960d7b183fbc03dcb7a263271a6f509", "filename": "gcc/testsuite/gcc.dg/torture/pr89789.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89789.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89789.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89789.c?ref=8d6419db2cd99949022cd76cf6b1d0f93be0394b", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+int x2;\n+\n+void\n+m2 (void)\n+{\n+  goto gg;\n+\n+  int fz, vh = 0;\n+\n+  for (fz = 0; fz < 1; ++fz)\n+    {\n+      vh ^= x2;\n+\n+      if (0)\n+\t{\n+gg:\n+\t  x2 %= 1;\n+\t  x2 += vh;\n+\t}\n+    }\n+}"}, {"sha": "872f904ccc5cf4b90b94a772e5029327ab5993b0", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419db2cd99949022cd76cf6b1d0f93be0394b/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=8d6419db2cd99949022cd76cf6b1d0f93be0394b", "patch": "@@ -3746,10 +3746,13 @@ set_ssa_val_to (tree from, tree to)\n \t    }\n \t  return false;\n \t}\n-      else if (currval != VN_TOP\n-\t       && ! is_gimple_min_invariant (currval)\n-\t       && ! ssa_undefined_value_p (currval, false)\n-\t       && is_gimple_min_invariant (to))\n+      bool curr_invariant = is_gimple_min_invariant (currval);\n+      bool curr_undefined = (TREE_CODE (currval) == SSA_NAME\n+\t\t\t     && ssa_undefined_value_p (currval, false));\n+      if (currval != VN_TOP\n+\t  && !curr_invariant\n+\t  && !curr_undefined\n+\t  && is_gimple_min_invariant (to))\n \t{\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n@@ -3764,6 +3767,24 @@ set_ssa_val_to (tree from, tree to)\n \t    }\n \t  to = from;\n \t}\n+      else if (currval != VN_TOP\n+\t       && !curr_undefined\n+\t       && TREE_CODE (to) == SSA_NAME\n+\t       && ssa_undefined_value_p (to, false))\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"Forcing VARYING instead of changing \"\n+\t\t       \"value number of \");\n+\t      print_generic_expr (dump_file, from);\n+\t      fprintf (dump_file, \" from \");\n+\t      print_generic_expr (dump_file, currval);\n+\t      fprintf (dump_file, \" (non-undefined) to \");\n+\t      print_generic_expr (dump_file, to);\n+\t      fprintf (dump_file, \" (undefined)\\n\");\n+\t    }\n+\t  to = from;\n+\t}\n       else if (TREE_CODE (to) == SSA_NAME\n \t       && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (to))\n \tto = from;"}]}