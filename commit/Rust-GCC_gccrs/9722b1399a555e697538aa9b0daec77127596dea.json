{"sha": "9722b1399a555e697538aa9b0daec77127596dea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyMmIxMzk5YTU1NWU2OTc1MzhhYTliMGRhZWM3NzEyNzU5NmRlYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T08:23:50Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T08:23:50Z"}, "message": "Support DR entries for gcc-changelog.\n\n\t* gcc-changelog/git_commit.py: Support DR entries/\n\t* gcc-changelog/test_email.py: New test for it.\n\t* gcc-changelog/test_patches.txt: New patch for it.", "tree": {"sha": "c99c777e55c3885712855cbff6bb2d742c0edd4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c99c777e55c3885712855cbff6bb2d742c0edd4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9722b1399a555e697538aa9b0daec77127596dea", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7GOpYACgkQTcGC3A+n\nN4WgAQf+LdOzJqH8mV7ptPtS1Pt9msKBnoIWAxaoy8lu6wVMKT4L1ygVFikm0fMf\n/1UPZKcb74Z4WPcY39CA4K+sh3acc3DoLEvN1ofZSW5FJY0drXoVWxyyNmMANsj+\n6ceTzw/4uTqm7DzGk3ZCzb7Nn2j0HRNAmwgdym+YBnuiI60qb5uWoodq+FwBZbka\n7x+6IHMySXDOWmiScot3k+HL6q2Z8QpH46ShiRylcM+aN2Y4AOoWikq7KcDqtSzw\n9A4DRph8aSxAFiu6U16vNxhzMGzQomyn5vlzM2uXIMqlsg+0393FpwkcnU7Itwhs\n2cCIU4qWdIWsDzewz+bhoAuMyUaBhw==\n=hUjr\n-----END PGP SIGNATURE-----", "payload": "tree c99c777e55c3885712855cbff6bb2d742c0edd4b\nparent e7c7cdc5f427281c675b7a42a1554dfdaa03e185\nauthor Martin Liska <mliska@suse.cz> 1590049430 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590049430 +0200\n\nSupport DR entries for gcc-changelog.\n\n\t* gcc-changelog/git_commit.py: Support DR entries/\n\t* gcc-changelog/test_email.py: New test for it.\n\t* gcc-changelog/test_patches.txt: New patch for it.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9722b1399a555e697538aa9b0daec77127596dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9722b1399a555e697538aa9b0daec77127596dea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9722b1399a555e697538aa9b0daec77127596dea/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c7cdc5f427281c675b7a42a1554dfdaa03e185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c7cdc5f427281c675b7a42a1554dfdaa03e185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c7cdc5f427281c675b7a42a1554dfdaa03e185"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "d3251afb6e74051a00b3bd3979e2c3723d098af5", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9722b1399a555e697538aa9b0daec77127596dea/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9722b1399a555e697538aa9b0daec77127596dea/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=9722b1399a555e697538aa9b0daec77127596dea", "patch": "@@ -1,3 +1,9 @@\n+2020-05-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support DR entries/\n+\t* gcc-changelog/test_email.py: New test for it.\n+\t* gcc-changelog/test_patches.txt: New patch for it.\n+\n 2020-05-21  Martin Liska  <mliska@suse.cz>\n \n \t* mklog.py: Support DR parsing."}, {"sha": "e22d3a2d6f0085d45a368bb215a74637e61eede5", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=9722b1399a555e697538aa9b0daec77127596dea", "patch": "@@ -145,6 +145,7 @@\n additional_author_regex = re.compile(r'^\\t(?P<spaces>\\ *)?(?P<name>.*  <.*>)')\n changelog_regex = re.compile(r'^([a-z0-9+-/]*)/ChangeLog:?')\n pr_regex = re.compile(r'\\tPR (?P<component>[a-z+-]+\\/)?([0-9]+)$')\n+dr_regex = re.compile(r'\\tDR ([0-9]+)$')\n star_prefix_regex = re.compile(r'\\t\\*(?P<spaces>\\ *)(?P<content>.*)')\n \n LINE_LIMIT = 100\n@@ -297,7 +298,7 @@ def parse_lines(self):\n                 continue\n             if (changelog_regex.match(b) or self.find_changelog_location(b)\n                     or star_prefix_regex.match(b) or pr_regex.match(b)\n-                    or author_line_regex.match(b)):\n+                    or dr_regex.match(b) or author_line_regex.match(b)):\n                 self.changes = body[i:]\n                 return\n         self.errors.append(Error('cannot find a ChangeLog location in '\n@@ -350,6 +351,8 @@ def parse_changelog(self):\n                         continue\n                     else:\n                         pr_line = line.lstrip()\n+                elif dr_regex.match(line):\n+                    pr_line = line.lstrip()\n \n                 lowered_line = line.lower()\n                 if lowered_line.startswith(CO_AUTHORED_BY_PREFIX):"}, {"sha": "d522e6ef7e301e08edf13269b84f5943015c5502", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=9722b1399a555e697538aa9b0daec77127596dea", "patch": "@@ -272,3 +272,7 @@ def test_duplicate_top_level_author(self):\n         email = self.from_patch_glob('0001-Fortran-ProcPtr-function.patch')\n         assert not email.errors\n         assert len(email.changelog_entries[0].author_lines) == 1\n+\n+    def test_dr_entry(self):\n+        email = self.from_patch_glob('0001-c-C-20-DR-2237.patch')\n+        assert email.changelog_entries[0].prs == ['DR 2237']"}, {"sha": "3445c3d9f117c64db77714580d8980aa17981e01", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9722b1399a555e697538aa9b0daec77127596dea/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=9722b1399a555e697538aa9b0daec77127596dea", "patch": "@@ -2541,3 +2541,30 @@ index 00000000000..ecb0a43929f\n -- \n 2.26.2\n \n+=== 0001-c-C-20-DR-2237.patch ===\n+From 4b38d56dbac6742b038551a36ec80200313123a1 Mon Sep 17 00:00:00 2001\n+From: Marek Polacek <polacek@redhat.com>\n+Date: Sat, 4 Apr 2020 18:09:53 -0400\n+Subject: [PATCH] c++: C++20 DR 2237, disallow simple-template-id in cdtor.\n+\n+This patch implements DR 2237 which says that a simple-template-id is\n+no longer valid as the declarator-id of a constructor or destructor;\n+see [diff.cpp17.class]#2.  It is not explicitly stated but out-of-line\n+destructors with a simple-template-id are also meant to be ill-formed\n+now.  (Out-of-line constructors like that are invalid since DR1435 I\n+think.)  This change only applies to C++20; it is not a DR against C++17.\n+\n+I'm not crazy about the diagnostic in constructors but ISTM that\n+cp_parser_constructor_declarator_p shouldn't print errors.\n+\n+\tDR 2237\n+\t* parser.c (cp_parser_unqualified_id): Reject simple-template-id as\n+\tthe declarator-id of a destructor.\n+---\n+diff --git a/gcc/cp/parser.c b/gcc/cp/parser.c\n+index a6a5d975af3..a8082d39aca 100644\n+--- a/gcc/cp/parser.c\n++++ b/gcc/cp/parser.c\n+@@ -1 +1,2 @@\n+\n++"}]}