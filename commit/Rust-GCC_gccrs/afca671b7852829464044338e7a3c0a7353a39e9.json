{"sha": "afca671b7852829464044338e7a3c0a7353a39e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjYTY3MWI3ODUyODI5NDY0MDQ0MzM4ZTdhM2MwYTczNTNhMzllOQ==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2005-06-17T20:30:42Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2005-06-17T20:30:42Z"}, "message": "predicates.md (s5bit_cint_operand, [...]): New.\n\n        * config/rs6000/predicates.md (s5bit_cint_operand,\n        u5bit_cint_operand): New.\n        * config/rs6000/altivec.md (altivec_vspltb, altivec_vsplth,\n        altivec_vspltisw_v4sf): Use new 5 bit constant operand predicates.\n        * config/rs6000/rs6000.c (rs6000_expand_unop_builtin): Fix signed\n        5 bit constant check.\n\nFrom-SVN: r101133", "tree": {"sha": "6d7b0c59ce1ab4e41f91ce50479623e2ccf8f8ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7b0c59ce1ab4e41f91ce50479623e2ccf8f8ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afca671b7852829464044338e7a3c0a7353a39e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afca671b7852829464044338e7a3c0a7353a39e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afca671b7852829464044338e7a3c0a7353a39e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afca671b7852829464044338e7a3c0a7353a39e9/comments", "author": null, "committer": null, "parents": [{"sha": "599c25e213782e397e5bc16f942ffae0425f6fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599c25e213782e397e5bc16f942ffae0425f6fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599c25e213782e397e5bc16f942ffae0425f6fab"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "ae8f419a343f759aef566f9efa7698fa0dd028a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afca671b7852829464044338e7a3c0a7353a39e9", "patch": "@@ -1,3 +1,12 @@\n+2005-06-17  Devang Patel  <dpatel@apple.com>\n+\n+\t* config/rs6000/predicates.md (s5bit_cint_operand,\n+\tu5bit_cint_operand): New.\n+\t* config/rs6000/altivec.md (altivec_vspltb, altivec_vsplth,\n+\taltivec_vspltisw_v4sf): Use new 5 bit constant operand predicates.\n+\t* config/rs6000/rs6000.c (rs6000_expand_unop_builtin): Fix signed\n+\t5 bit constant check.\n+\t\n 2005-06-17  Richard Henderson  <rth@redhat.com>\n \n \t* local-alloc.c (update_equiv_regs): Update reg_equiv_init"}, {"sha": "847812dd4d65b602ebedabbe79f14c4b4fd3cbd0", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=afca671b7852829464044338e7a3c0a7353a39e9", "patch": "@@ -1167,7 +1167,7 @@\n         (vec_duplicate:V16QI\n \t (vec_select:QI (match_operand:V16QI 1 \"register_operand\" \"v\")\n \t\t\t(parallel\n-\t\t\t [(match_operand:QI 2 \"immediate_operand\" \"i\")]))))]\n+\t\t\t [(match_operand:QI 2 \"u5bit_cint_operand\" \"\")]))))]\n   \"TARGET_ALTIVEC\"\n   \"vspltb %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1177,7 +1177,7 @@\n \t(vec_duplicate:V8HI\n \t (vec_select:HI (match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t\t(parallel\n-\t\t\t [(match_operand:QI 2 \"immediate_operand\" \"i\")]))))]\n+\t\t\t [(match_operand:QI 2 \"u5bit_cint_operand\" \"\")]))))]\n   \"TARGET_ALTIVEC\"\n   \"vsplth %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1187,23 +1187,23 @@\n \t(vec_duplicate:V4SI\n \t (vec_select:SI (match_operand:V4SI 1 \"register_operand\" \"v\")\n \t\t\t(parallel\n-\t\t\t [(match_operand:QI 2 \"immediate_operand\" \"i\")]))))]\n+\t\t\t [(match_operand:QI 2 \"u5bit_cint_operand\" \"i\")]))))]\n   \"TARGET_ALTIVEC\"\n   \"vspltw %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vspltis<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:VI\n-\t (match_operand:QI 1 \"const_int_operand\" \"i\")))]\n+\t (match_operand:QI 1 \"s5bit_cint_operand\" \"i\")))]\n   \"TARGET_ALTIVEC\"\n   \"vspltis<VI_char> %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vspltisw_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:V4SF\n-\t (float:SF (match_operand:QI 1 \"const_int_operand\" \"i\"))))]\n+\t (float:SF (match_operand:QI 1 \"s5bit_cint_operand\" \"i\"))))]\n   \"TARGET_ALTIVEC\"\n   \"vspltisw %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])"}, {"sha": "a89b10c5b656e1c1ead5cba7522236a54e3e1a4e", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=afca671b7852829464044338e7a3c0a7353a39e9", "patch": "@@ -44,6 +44,16 @@\n   (and (match_code \"reg\")\n        (match_test \"XER_REGNO_P (REGNO (op))\")))\n \n+;; Return 1 if op is a signed 5-bit constant integer.\n+(define_predicate \"s5bit_cint_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"INTVAL (op) >= -16 && INTVAL (op) <= 15\")))\n+\n+;; Return 1 if op is a unsigned 5-bit constant integer.\n+(define_predicate \"u5bit_cint_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"INTVAL (op) >= 0 && INTVAL (op) <= 31\")))\n+\n ;; Return 1 if op is a signed 8-bit constant integer.\n ;; Integer multiplcation complete more quickly\n (define_predicate \"s8bit_cint_operand\""}, {"sha": "cf5432134639c9bfde7991734eb4b144948ba91a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afca671b7852829464044338e7a3c0a7353a39e9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=afca671b7852829464044338e7a3c0a7353a39e9", "patch": "@@ -6241,8 +6241,8 @@ rs6000_expand_unop_builtin (enum insn_code icode, tree arglist, rtx target)\n     {\n       /* Only allow 5-bit *signed* literals.  */\n       if (GET_CODE (op0) != CONST_INT\n-\t  || INTVAL (op0) > 0x1f\n-\t  || INTVAL (op0) < -0x1f)\n+\t  || INTVAL (op0) > 15\n+\t  || INTVAL (op0) < -16)\n \t{\n \t  error (\"argument 1 must be a 5-bit signed literal\");\n \t  return const0_rtx;"}]}