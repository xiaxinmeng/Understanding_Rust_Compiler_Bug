{"sha": "3abe6f904a6f63df38ad7c3304bf8d42c03b3044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FiZTZmOTA0YTZmNjNkZjM4YWQ3YzMzMDRiZjhkNDJjMDNiMzA0NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:59:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:59:42Z"}, "message": "(emit_reload_insns): Don't use gen_lowpart_common to get reload\nregister into proper mode.\n\nFrom-SVN: r4855", "tree": {"sha": "ba5323352fd47d7d95ee2dc682fab685237d35e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba5323352fd47d7d95ee2dc682fab685237d35e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3abe6f904a6f63df38ad7c3304bf8d42c03b3044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abe6f904a6f63df38ad7c3304bf8d42c03b3044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3abe6f904a6f63df38ad7c3304bf8d42c03b3044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abe6f904a6f63df38ad7c3304bf8d42c03b3044/comments", "author": null, "committer": null, "parents": [{"sha": "26f1a00ea1cbe0d9785292e5bb900ca2837647f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f1a00ea1cbe0d9785292e5bb900ca2837647f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26f1a00ea1cbe0d9785292e5bb900ca2837647f5"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c7ea46f6e5d4328f177da729f575cef64228b137", "filename": "gcc/reload1.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3abe6f904a6f63df38ad7c3304bf8d42c03b3044/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3abe6f904a6f63df38ad7c3304bf8d42c03b3044/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=3abe6f904a6f63df38ad7c3304bf8d42c03b3044", "patch": "@@ -5516,10 +5516,13 @@ emit_reload_insns (insn)\n \t    oldequiv_reg = SUBREG_REG (oldequiv);\n \n \t  /* Encapsulate both RELOADREG and OLDEQUIV into that mode,\n-\t     then load RELOADREG from OLDEQUIV.  */\n+\t     then load RELOADREG from OLDEQUIV.  Note that we cannot use\n+\t     gen_lowpart_common since it can do the wrong thing when\n+\t     RELOADREG has a multi-word mode.  Note that RELOADREG\n+\t     must always be a REG here.  */\n \n \t  if (GET_MODE (reloadreg) != mode)\n-\t    reloadreg = gen_lowpart_common (mode, reloadreg);\n+\t    reloadreg = gen_rtx (REG, mode, REGNO (reloadreg));\n \t  while (GET_CODE (oldequiv) == SUBREG && GET_MODE (oldequiv) != mode)\n \t    oldequiv = SUBREG_REG (oldequiv);\n \t  if (GET_MODE (oldequiv) != VOIDmode\n@@ -5981,7 +5984,7 @@ emit_reload_insns (insn)\n \t    }\n \n \t  if (GET_MODE (reloadreg) != mode)\n-\t    reloadreg = gen_lowpart_common (mode, reloadreg);\n+\t    reloadreg = gen_rtx (REG, mode, REGNO (reloadreg));\n \n #ifdef SECONDARY_OUTPUT_RELOAD_CLASS\n "}]}