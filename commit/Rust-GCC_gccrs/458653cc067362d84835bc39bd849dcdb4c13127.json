{"sha": "458653cc067362d84835bc39bd849dcdb4c13127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NjUzY2MwNjczNjJkODQ4MzViYzM5YmQ4NDlkY2RiNGMxMzEyNw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2011-03-19T17:25:18Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2011-03-19T17:25:18Z"}, "message": "re PR libfortran/35667 (HP-UX 10 has broken strtod)\n\n\tPR fortran/35667\n\t* io/io.h (convert_infnan): Declare.\n\t* io/read.c (convert_infnan): New.\n\t(read_f): Use convert_infnan to convert INFs and NANs.\n\t* list_read.c (parse_real, read_real): Likewise.\n\nFrom-SVN: r171182", "tree": {"sha": "aa07149d8de7f023c9512af98794aaa978652cd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa07149d8de7f023c9512af98794aaa978652cd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458653cc067362d84835bc39bd849dcdb4c13127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458653cc067362d84835bc39bd849dcdb4c13127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458653cc067362d84835bc39bd849dcdb4c13127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458653cc067362d84835bc39bd849dcdb4c13127/comments", "author": null, "committer": null, "parents": [{"sha": "16e329fbae1208a4d576fb8e383f827200c2bb41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e329fbae1208a4d576fb8e383f827200c2bb41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e329fbae1208a4d576fb8e383f827200c2bb41"}], "stats": {"total": 105, "additions": 101, "deletions": 4}, "files": [{"sha": "1f9da0a2bb0c24750500345bdf52a0015ac30089", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=458653cc067362d84835bc39bd849dcdb4c13127", "patch": "@@ -1,3 +1,11 @@\n+2011-03-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR fortran/35667\n+\t* io/io.h (convert_infnan): Declare.\n+\t* io/read.c (convert_infnan): New.\n+\t(read_f): Use convert_infnan to convert INFs and NANs.\n+\t* list_read.c (parse_real, read_real): Likewise.\n+\n 2011-03-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/47439"}, {"sha": "b48582d97812d34650a8eef50c49c84217e54b7c", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=458653cc067362d84835bc39bd849dcdb4c13127", "patch": "@@ -674,6 +674,9 @@ internal_proto(max_value);\n extern int convert_real (st_parameter_dt *, void *, const char *, int);\n internal_proto(convert_real);\n \n+extern int convert_infnan (st_parameter_dt *, void *, const char *, int);\n+internal_proto(convert_infnan);\n+\n extern void read_a (st_parameter_dt *, const fnode *, char *, int);\n internal_proto(read_a);\n "}, {"sha": "6e1cb699ab93885a0a774f0743655589e643b106", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=458653cc067362d84835bc39bd849dcdb4c13127", "patch": "@@ -1215,6 +1215,15 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n \n   return m;\n \n+ done_infnan:\n+  unget_char (dtp, c);\n+  push_char (dtp, '\\0');\n+\n+  m = convert_infnan (dtp, buffer, dtp->u.p.saved_string, length);\n+  free_saved (dtp);\n+\n+  return m;\n+\n  inf_nan:\n   /* Match INF and Infinity.  */\n   if ((c == 'i' || c == 'I')\n@@ -1235,7 +1244,7 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n \t     push_char (dtp, 'i');\n \t     push_char (dtp, 'n');\n \t     push_char (dtp, 'f');\n-\t     goto done;\n+\t     goto done_infnan;\n \t  }\n     } /* Match NaN.  */\n   else if (((c = next_char (dtp)) == 'a' || c == 'A')\n@@ -1259,7 +1268,7 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n \t  if (is_separator (c))\n \t    unget_char (dtp, c);\n \t}\n-      goto done;\n+      goto done_infnan;\n     }\n \n  bad:\n@@ -1718,7 +1727,15 @@ read_real (st_parameter_dt *dtp, void * dest, int length)\n     }\n \n   free_line (dtp);\n-  goto done;\n+  unget_char (dtp, c);\n+  eat_separator (dtp);\n+  push_char (dtp, '\\0');\n+  if (convert_infnan (dtp, dest, dtp->u.p.saved_string, length))\n+    return;\n+\n+  free_saved (dtp);\n+  dtp->u.p.saved_type = BT_REAL;\n+  return;\n \n  unwind:\n   if (dtp->u.p.namelist_mode)"}, {"sha": "d8d2a81a6d3a8cbf07db9e25d29c2b3618eb1263", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458653cc067362d84835bc39bd849dcdb4c13127/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=458653cc067362d84835bc39bd849dcdb4c13127", "patch": "@@ -189,6 +189,75 @@ convert_real (st_parameter_dt *dtp, void *dest, const char *buffer, int length)\n   return 0;\n }\n \n+/* convert_infnan()-- Convert character INF/NAN representation to the\n+   machine number.  Note: many architectures (e.g. IA-64, HP-PA) require\n+   that the storage pointed to by the dest argument is properly aligned\n+   for the type in question.  */\n+\n+int\n+convert_infnan (st_parameter_dt *dtp, void *dest, const char *buffer,\n+\t        int length)\n+{\n+  const char *s = buffer;\n+  int is_inf, plus = 1;\n+\n+  if (*s == '+')\n+    s++;\n+  else if (*s == '-')\n+    {\n+      s++;\n+      plus = 0;\n+    }\n+\n+  is_inf = *s == 'i';\n+\n+  switch (length)\n+    {\n+    case 4:\n+      if (is_inf)\n+\t*((GFC_REAL_4*) dest) = plus ? __builtin_inff () : -__builtin_inff ();\n+      else\n+\t*((GFC_REAL_4*) dest) = plus ? __builtin_nanf (\"\") : -__builtin_nanf (\"\");\n+      break;\n+\n+    case 8:\n+      if (is_inf)\n+\t*((GFC_REAL_8*) dest) = plus ? __builtin_inf () : -__builtin_inf ();\n+      else\n+\t*((GFC_REAL_8*) dest) = plus ? __builtin_nan (\"\") : -__builtin_nan (\"\");\n+      break;\n+\n+#if defined(HAVE_GFC_REAL_10)\n+    case 10:\n+      if (is_inf)\n+\t*((GFC_REAL_10*) dest) = plus ? __builtin_infl () : -__builtin_infl ();\n+      else\n+\t*((GFC_REAL_10*) dest) = plus ? __builtin_nanl (\"\") : -__builtin_nanl (\"\");\n+      break;\n+#endif\n+\n+#if defined(HAVE_GFC_REAL_16)\n+# if defined(GFC_REAL_16_IS_FLOAT128)\n+    case 16:\n+      *((GFC_REAL_16*) dest) = __qmath_(strtoflt128) (buffer, NULL);\n+      break;\n+# else\n+    case 16:\n+      if (is_inf)\n+\t*((GFC_REAL_16*) dest) = plus ? __builtin_infl () : -__builtin_infl ();\n+      else\n+\t*((GFC_REAL_16*) dest) = plus ? __builtin_nanl (\"\") : -__builtin_nanl (\"\");\n+      break;\n+# endif\n+#endif\n+\n+    default:\n+      internal_error (&dtp->common, \"Unsupported real kind during IO\");\n+    }\n+\n+  return 0;\n+}\n+\n \n /* read_l()-- Read a logical value */\n \n@@ -896,7 +965,7 @@ read_f (st_parameter_dt *dtp, const fnode *f, char *dest, int length)\n       else if (strcmp (save, \"nan\") != 0)\n \tgoto bad_float;\n \n-      convert_real (dtp, dest, buffer, length);\n+      convert_infnan (dtp, dest, buffer, length);\n       return;\n     }\n "}]}