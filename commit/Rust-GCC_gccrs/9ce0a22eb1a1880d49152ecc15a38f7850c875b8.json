{"sha": "9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNlMGEyMmViMWExODgwZDQ5MTUyZWNjMTVhMzhmNzg1MGM4NzViOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-24T23:47:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-24T23:47:35Z"}, "message": "acinclude.m4 ([GLIBCXX_CHECK_RANDOM_TR1]): Simplify, just use two test -r instead of an AC_TRY_RUN.\n\n2008-08-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* acinclude.m4 ([GLIBCXX_CHECK_RANDOM_TR1]): Simplify, just use\n\ttwo test -r instead of an AC_TRY_RUN.\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\nFrom-SVN: r139549", "tree": {"sha": "ad59f054344aa43ea9eab5f7fddfe2b1d0679a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad59f054344aa43ea9eab5f7fddfe2b1d0679a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/comments", "author": null, "committer": null, "parents": [{"sha": "8327f9c2da69615df75f9748308d6fdb38149cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8327f9c2da69615df75f9748308d6fdb38149cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8327f9c2da69615df75f9748308d6fdb38149cea"}], "stats": {"total": 81, "additions": 26, "deletions": 55}, "files": [{"sha": "623948a828bf6730c9fe25db8ca596ce401cbccf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "patch": "@@ -1,3 +1,10 @@\n+2008-08-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* acinclude.m4 ([GLIBCXX_CHECK_RANDOM_TR1]): Simplify, just use\n+\ttwo test -r instead of an AC_TRY_RUN.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n 2008-08-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* acinclude.m4 ([GLIBCXX_ENABLE_CLOCK_GETTIME]): Improve documentation."}, {"sha": "8ea21ceebbad2f8f7a42fce6f3e781a834d42f6b", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "patch": "@@ -1549,27 +1549,24 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n ])\n \n dnl\n-dnl Check whether \"dev/random\" and \"dev/urandom\" are available for the\n+dnl Check whether \"/dev/random\" and \"/dev/urandom\" are available for the\n dnl random_device of \"TR1\" (Chapter 5.1, \"Random number generation\").\n dnl\n AC_DEFUN([GLIBCXX_CHECK_RANDOM_TR1], [\n \n-  AC_MSG_CHECKING([for \"dev/random\" and \"dev/urandom\" for TR1 random_device])\n+  AC_MSG_CHECKING([for \"/dev/random\" and \"/dev/urandom\" for TR1 random_device])\n   AC_CACHE_VAL(glibcxx_cv_random_tr1, [\n-  AC_TRY_RUN([#include <stdio.h>\n-\t      int main()\n-\t      {\n-                return !(fopen(\"/dev/random\", \"r\")\n-                         && fopen(\"/dev/urandom\", \"r\"));\n-\t      }\t      \n-\t     ],\n-             [glibcxx_cv_random_tr1=yes], [glibcxx_cv_random_tr1=no],\n-\t     [glibcxx_cv_random_tr1=no])\n+    if test -r /dev/random && test -r /dev/urandom; then\n+      glibcxx_cv_random_tr1=yes;\n+    else\n+      glibcxx_cv_random_tr1=no;\n+    fi\n   ])\n   AC_MSG_RESULT($glibcxx_cv_random_tr1)\n+\n   if test x\"$glibcxx_cv_random_tr1\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_RANDOM_TR1, 1,\n-              [Define if dev/random and dev/urandom are available for\n+              [Define if /dev/random and /dev/urandom are available for\n \t       the random_device of TR1 (Chapter 5.1).])\n   fi\n "}, {"sha": "ae11784e71a7411c9b5d4e88f029559a712eb4d7", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "patch": "@@ -829,8 +829,8 @@\n /* Define if NLS translations are to be used. */\n #undef _GLIBCXX_USE_NLS\n \n-/* Define if dev/random and dev/urandom are available for the random_device of\n-   TR1 (Chapter 5.1). */\n+/* Define if /dev/random and /dev/urandom are available for the random_device\n+   of TR1 (Chapter 5.1). */\n #undef _GLIBCXX_USE_RANDOM_TR1\n \n /* Define if standard layout types are supported in C++200x. */"}, {"sha": "98b0934b5a2cbb1d639845d08d934414bfb7db46", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 8, "deletions": 41, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce0a22eb1a1880d49152ecc15a38f7850c875b8/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9ce0a22eb1a1880d49152ecc15a38f7850c875b8", "patch": "@@ -42631,56 +42631,23 @@ done\n   # For dev/random and dev/urandom for TR1.\n \n \n-  echo \"$as_me:$LINENO: checking for \\\"dev/random\\\" and \\\"dev/urandom\\\" for TR1 random_device\" >&5\n-echo $ECHO_N \"checking for \\\"dev/random\\\" and \\\"dev/urandom\\\" for TR1 random_device... $ECHO_C\" >&6\n+  echo \"$as_me:$LINENO: checking for \\\"/dev/random\\\" and \\\"/dev/urandom\\\" for TR1 random_device\" >&5\n+echo $ECHO_N \"checking for \\\"/dev/random\\\" and \\\"/dev/urandom\\\" for TR1 random_device... $ECHO_C\" >&6\n   if test \"${glibcxx_cv_random_tr1+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n-  if test \"$cross_compiling\" = yes; then\n-  glibcxx_cv_random_tr1=no\n-else\n-  cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-#include <stdio.h>\n-\t      int main()\n-\t      {\n-                return !(fopen(\"/dev/random\", \"r\")\n-                         && fopen(\"/dev/urandom\", \"r\"));\n-\t      }\n-\n-_ACEOF\n-rm -f conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  glibcxx_cv_random_tr1=yes\n-else\n-  echo \"$as_me: program exited with status $ac_status\" >&5\n-echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-( exit $ac_status )\n-glibcxx_cv_random_tr1=no\n-fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n-fi\n+    if test -r /dev/random && test -r /dev/urandom; then\n+      glibcxx_cv_random_tr1=yes;\n+    else\n+      glibcxx_cv_random_tr1=no;\n+    fi\n \n fi\n \n   echo \"$as_me:$LINENO: result: $glibcxx_cv_random_tr1\" >&5\n echo \"${ECHO_T}$glibcxx_cv_random_tr1\" >&6\n+\n   if test x\"$glibcxx_cv_random_tr1\" = x\"yes\"; then\n \n cat >>confdefs.h <<\\_ACEOF"}]}