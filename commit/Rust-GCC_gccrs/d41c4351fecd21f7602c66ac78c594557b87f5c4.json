{"sha": "d41c4351fecd21f7602c66ac78c594557b87f5c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxYzQzNTFmZWNkMjFmNzYwMmM2NmFjNzhjNTk0NTU3Yjg3ZjVjNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-03-17T22:57:27Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-03-17T22:57:27Z"}, "message": "ansidecl.h (ATTRIBUTE_NONNULL, [...]): New.\n\ninclude:\n\t* ansidecl.h (ATTRIBUTE_NONNULL, ATTRIBUTE_NULL_PRINTF,\n\tATTRIBUTE_NULL_PRINTF_1, ATTRIBUTE_NULL_PRINTF_2,\n\tATTRIBUTE_NULL_PRINTF_3, ATTRIBUTE_NULL_PRINTF_4,\n\tATTRIBUTE_NULL_PRINTF_5): New.\n\t(ATTRIBUTE_PRINTF): Add ATTRIBUTE_NONNULL.\n\ngcc:\n\t* dwarf2asm.h: Delete obsolete comment.\n\t(dw2_asm_output_data, dw2_asm_output_delta, dw2_asm_output_offset,\n\tdw2_asm_output_pcrel, dw2_asm_output_addr,\n\tdw2_asm_output_addr_rtx, dw2_asm_output_encoded_addr_rtx,\n\tdw2_asm_output_nstring, dw2_asm_output_data_uleb128,\n\tdw2_asm_output_data_sleb128, dw2_asm_output_delta_uleb128,\n\tdw2_asm_output_delta_sleb128): Add ATTRIBUTE_NULL_PRINTF.\n\nFrom-SVN: r64505", "tree": {"sha": "f8eebb237a7df33aff85f0a6d32405d2ea65a589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8eebb237a7df33aff85f0a6d32405d2ea65a589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d41c4351fecd21f7602c66ac78c594557b87f5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41c4351fecd21f7602c66ac78c594557b87f5c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d41c4351fecd21f7602c66ac78c594557b87f5c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41c4351fecd21f7602c66ac78c594557b87f5c4/comments", "author": null, "committer": null, "parents": [{"sha": "6970c06a4e8f9ff3524043bf64b51c6870693bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6970c06a4e8f9ff3524043bf64b51c6870693bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6970c06a4e8f9ff3524043bf64b51c6870693bc7"}], "stats": {"total": 76, "additions": 59, "deletions": 17}, "files": [{"sha": "26daccd8f196f359ef18d61263dc4a6ac5509323", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41c4351fecd21f7602c66ac78c594557b87f5c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41c4351fecd21f7602c66ac78c594557b87f5c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d41c4351fecd21f7602c66ac78c594557b87f5c4", "patch": "@@ -1,3 +1,13 @@\n+2003-03-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* dwarf2asm.h: Delete obsolete comment.\n+\t(dw2_asm_output_data, dw2_asm_output_delta, dw2_asm_output_offset,\n+\tdw2_asm_output_pcrel, dw2_asm_output_addr,\n+\tdw2_asm_output_addr_rtx, dw2_asm_output_encoded_addr_rtx,\n+\tdw2_asm_output_nstring, dw2_asm_output_data_uleb128,\n+\tdw2_asm_output_data_sleb128, dw2_asm_output_delta_uleb128,\n+\tdw2_asm_output_delta_sleb128): Add ATTRIBUTE_NULL_PRINTF.\n+\n 2003-03-17  Zack Weinberg <zack@codesourcery.com>\n \n \t* c-tree.h (struct lang_identifier): Remove error_locus field."}, {"sha": "8d6fd18bd89f53ba6e8e17e7d729c83fff3f6118", "filename": "gcc/dwarf2asm.h", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41c4351fecd21f7602c66ac78c594557b87f5c4/gcc%2Fdwarf2asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41c4351fecd21f7602c66ac78c594557b87f5c4/gcc%2Fdwarf2asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.h?ref=d41c4351fecd21f7602c66ac78c594557b87f5c4", "patch": "@@ -19,60 +19,56 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n \n-/* ??? Format checking yields \"null format string\" warnings, which is\n-   the way these routines are signaled that there is no associated\n-   debug information.  So the attributes are commented out.  */\n-\n extern void dw2_assemble_integer\tPARAMS ((int, rtx));\n \n extern void dw2_asm_output_data\t\tPARAMS ((int, unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_delta\tPARAMS ((int, const char *,\n \t\t\t\t\t\t const char *,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_4 */;\n+     ATTRIBUTE_NULL_PRINTF_4;\n \n extern void dw2_asm_output_offset\tPARAMS ((int, const char *,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_pcrel\tPARAMS ((int, const char *,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_addr\t\tPARAMS ((int, const char *,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_addr_rtx\tPARAMS ((int, rtx,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_encoded_addr_rtx PARAMS ((int, rtx,\n \t\t\t\t\t\t     const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_nstring\tPARAMS ((const char *, size_t,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_data_uleb128\tPARAMS ((unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_2 */;\n+     ATTRIBUTE_NULL_PRINTF_2;\n \n extern void dw2_asm_output_data_sleb128\tPARAMS ((HOST_WIDE_INT,\n \t\t\t\t\t\t const char *, ...))\n-     /* ATTRIBUTE_PRINTF_2 */;\n+     ATTRIBUTE_NULL_PRINTF_2;\n \n extern void dw2_asm_output_delta_uleb128 PARAMS ((const char *, const char *,\n \t\t\t\t\t\t  const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern void dw2_asm_output_delta_sleb128 PARAMS ((const char *, const char *,\n \t\t\t\t\t\t  const char *, ...))\n-     /* ATTRIBUTE_PRINTF_3 */;\n+     ATTRIBUTE_NULL_PRINTF_3;\n \n extern int size_of_uleb128\t\tPARAMS ((unsigned HOST_WIDE_INT));\n extern int size_of_sleb128\t\tPARAMS ((HOST_WIDE_INT));"}, {"sha": "51d2fc2158bd9a5472092a26d7ab205ee3693100", "filename": "include/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41c4351fecd21f7602c66ac78c594557b87f5c4/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41c4351fecd21f7602c66ac78c594557b87f5c4/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d41c4351fecd21f7602c66ac78c594557b87f5c4", "patch": "@@ -1,3 +1,11 @@\n+2003-03-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* ansidecl.h (ATTRIBUTE_NONNULL, ATTRIBUTE_NULL_PRINTF,\n+\tATTRIBUTE_NULL_PRINTF_1, ATTRIBUTE_NULL_PRINTF_2,\n+\tATTRIBUTE_NULL_PRINTF_3, ATTRIBUTE_NULL_PRINTF_4,\n+\tATTRIBUTE_NULL_PRINTF_5): New.\n+\t(ATTRIBUTE_PRINTF): Add ATTRIBUTE_NONNULL.\n+\n 2003-03-17  Jan Hubicka  <jh@suse.cz>\n \n \t* hashtab.h (htab_traverse_noresize): Declare."}, {"sha": "f8f2d737bf0aeb3b047c72079144d6339f038c80", "filename": "include/ansidecl.h", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41c4351fecd21f7602c66ac78c594557b87f5c4/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41c4351fecd21f7602c66ac78c594557b87f5c4/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=d41c4351fecd21f7602c66ac78c594557b87f5c4", "patch": "@@ -268,15 +268,43 @@ So instead we use the macro below and test it against specific values.  */\n #define ATTRIBUTE_NORETURN __attribute__ ((__noreturn__))\n #endif /* ATTRIBUTE_NORETURN */\n \n+/* Attribute `nonnull' was valid as of gcc 3.3.  */\n+#ifndef ATTRIBUTE_NONNULL\n+# if (GCC_VERSION >= 3003)\n+#  define ATTRIBUTE_NONNULL(m) __attribute__ ((__nonnull__ (m)))\n+# else\n+#  define ATTRIBUTE_NONNULL(m)\n+# endif /* GNUC >= 3.3 */\n+#endif /* ATTRIBUTE_NONNULL */\n+\n+/* Use ATTRIBUTE_PRINTF when the format specifier must not be NULL.\n+   This was the case for the `printf' format attribute by itself\n+   before GCC 3.3, but as of 3.3 we need to add the `nonnull'\n+   attribute to retain this behavior.  */\n #ifndef ATTRIBUTE_PRINTF\n-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))\n+#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)\n #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)\n #define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)\n #define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)\n #define ATTRIBUTE_PRINTF_4 ATTRIBUTE_PRINTF(4, 5)\n #define ATTRIBUTE_PRINTF_5 ATTRIBUTE_PRINTF(5, 6)\n #endif /* ATTRIBUTE_PRINTF */\n \n+/* Use ATTRIBUTE_NULL_PRINTF when the format specifier may be NULL.  A\n+   NULL format specifier was allowed as of gcc 3.3.  */\n+#ifndef ATTRIBUTE_NULL_PRINTF\n+# if (GCC_VERSION >= 3003)\n+#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))\n+# else\n+#  define ATTRIBUTE_NULL_PRINTF(m, n)\n+# endif /* GNUC >= 3.3 */\n+# define ATTRIBUTE_NULL_PRINTF_1 ATTRIBUTE_NULL_PRINTF(1, 2)\n+# define ATTRIBUTE_NULL_PRINTF_2 ATTRIBUTE_NULL_PRINTF(2, 3)\n+# define ATTRIBUTE_NULL_PRINTF_3 ATTRIBUTE_NULL_PRINTF(3, 4)\n+# define ATTRIBUTE_NULL_PRINTF_4 ATTRIBUTE_NULL_PRINTF(4, 5)\n+# define ATTRIBUTE_NULL_PRINTF_5 ATTRIBUTE_NULL_PRINTF(5, 6)\n+#endif /* ATTRIBUTE_NULL_PRINTF */\n+\n /* We use __extension__ in some places to suppress -pedantic warnings\n    about GCC extensions.  This feature didn't work properly before\n    gcc 2.8.  */"}]}