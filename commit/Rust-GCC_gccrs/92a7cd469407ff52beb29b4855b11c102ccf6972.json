{"sha": "92a7cd469407ff52beb29b4855b11c102ccf6972", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhN2NkNDY5NDA3ZmY1MmJlYjI5YjQ4NTViMTFjMTAyY2NmNjk3Mg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-10-02T12:18:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-02T12:18:15Z"}, "message": "sinfo.adb, [...]: Get rid of internal use of N_Return_Statement.\n\n2012-10-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.adb, sinfo.ads, sem_util.adb, sem_util.ads, types.h,\n\texp_ch4.adb, exp_ch6.adb: Get rid of internal use of N_Return_Statement.\n\nFrom-SVN: r191974", "tree": {"sha": "6d1f2423a24ad9551eef9a554cce629df742f692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d1f2423a24ad9551eef9a554cce629df742f692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a7cd469407ff52beb29b4855b11c102ccf6972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a7cd469407ff52beb29b4855b11c102ccf6972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a7cd469407ff52beb29b4855b11c102ccf6972", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a7cd469407ff52beb29b4855b11c102ccf6972/comments", "author": null, "committer": null, "parents": [{"sha": "c9a6b38f011c8ea884800662ee567910251a57d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a6b38f011c8ea884800662ee567910251a57d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a6b38f011c8ea884800662ee567910251a57d2"}], "stats": {"total": 101, "additions": 42, "deletions": 59}, "files": [{"sha": "9fac94cfcf203067bcf76954eb9dff6c58116ebb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -1,3 +1,8 @@\n+2012-10-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.adb, sinfo.ads, sem_util.adb, sem_util.ads, types.h,\n+\texp_ch4.adb, exp_ch6.adb: Get rid of internal use of N_Return_Statement.\n+\n 2012-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* types.h: Minor cosmetic fix."}, {"sha": "3e30446816cca07fe8e82459b9037cafee4296fe", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -10006,7 +10006,7 @@ package body Exp_Ch4 is\n                --  of the object designated by the result value identifies T.\n                --  Constraint_Error is raised if this check fails.\n \n-               if Nkind (Parent (N)) = Sinfo.N_Return_Statement then\n+               if Nkind (Parent (N)) = N_Simple_Return_Statement then\n                   declare\n                      Func     : Entity_Id;\n                      Func_Typ : Entity_Id;"}, {"sha": "592c1f54431066965867344ae3b457748a5edf08", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -4781,31 +4781,31 @@ package body Exp_Ch6 is\n             else\n                pragma Assert\n                  (Nkind\n-                    (First\n-                       (Statements (Handled_Statement_Sequence (Orig_Bod))))\n+                   (First\n+                     (Statements (Handled_Statement_Sequence (Orig_Bod))))\n                   = N_Block_Statement);\n \n                declare\n                   Blk_Stmt    : constant Node_Id :=\n                     First\n                       (Statements\n-                           (Handled_Statement_Sequence (Orig_Bod)));\n+                        (Handled_Statement_Sequence (Orig_Bod)));\n                   First_Stmt  : constant Node_Id :=\n                     First\n                       (Statements\n-                           (Handled_Statement_Sequence (Blk_Stmt)));\n+                        (Handled_Statement_Sequence (Blk_Stmt)));\n                   Second_Stmt : constant Node_Id := Next (First_Stmt);\n \n                begin\n                   pragma Assert\n                     (Nkind (First_Stmt) = N_Procedure_Call_Statement\n-                       and then Nkind (Second_Stmt) = Sinfo.N_Return_Statement\n-                       and then No (Next (Second_Stmt)));\n+                      and then Nkind (Second_Stmt) = N_Simple_Return_Statement\n+                      and then No (Next (Second_Stmt)));\n \n                   Bod :=\n                     Copy_Generic_Node\n                       (First\n-                         (Statements (Handled_Statement_Sequence (Orig_Bod))),\n+                        (Statements (Handled_Statement_Sequence (Orig_Bod))),\n                        Empty, Instantiating => True);\n                   Blk := Bod;\n \n@@ -5129,8 +5129,8 @@ package body Exp_Ch6 is\n          --  Remove the return statement\n \n          pragma Assert\n-           (Nkind (Last (Statements (Handled_Statement_Sequence (Blk))))\n-            = Sinfo.N_Return_Statement);\n+           (Nkind (Last (Statements (Handled_Statement_Sequence (Blk)))) =\n+                                                   N_Simple_Return_Statement);\n \n          Remove (Last (Statements (Handled_Statement_Sequence (Blk))));\n       end if;"}, {"sha": "f557033d4162c08bbfa495530adc82a5ce0f0f1d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -37,6 +37,7 @@ with Freeze;   use Freeze;\n with Lib;      use Lib;\n with Lib.Xref; use Lib.Xref;\n with Nlists;   use Nlists;\n+with Nmake;    use Nmake;\n with Output;   use Output;\n with Opt;      use Opt;\n with Restrict; use Restrict;"}, {"sha": "31276c795ddd033cf6b1324ca1da4815e8167ec7", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -28,7 +28,6 @@\n with Einfo;   use Einfo;\n with Exp_Tss; use Exp_Tss;\n with Namet;   use Namet;\n-with Nmake;   use Nmake;\n with Snames;  use Snames;\n with Types;   use Types;\n with Uintp;   use Uintp;\n@@ -1093,29 +1092,13 @@ package Sem_Util is\n    --  statement in Statements (HSS) that has Comes_From_Source set. If no\n    --  such statement exists, Empty is returned.\n \n-   function Make_Simple_Return_Statement\n-     (Sloc       : Source_Ptr;\n-      Expression : Node_Id := Empty) return Node_Id\n-     renames Make_Return_Statement;\n-   --  See Sinfo. We rename Make_Return_Statement to the correct Ada 2005\n-   --  terminology here. Clients should use Make_Simple_Return_Statement.\n-\n    function Matching_Static_Array_Bounds\n      (L_Typ : Node_Id;\n       R_Typ : Node_Id) return Boolean;\n    --  L_Typ and R_Typ are two array types. Returns True when they have the\n    --  same number of dimensions, and the same static bounds for each index\n    --  position.\n \n-   Make_Return_Statement : constant := -2 ** 33;\n-   --  Attempt to prevent accidental uses of Make_Return_Statement. If this\n-   --  and the one in Nmake are both potentially use-visible, it will cause\n-   --  a compilation error. Note that type and value are irrelevant.\n-\n-   N_Return_Statement : constant := -2 ** 33;\n-   --  Attempt to prevent accidental uses of N_Return_Statement; similar to\n-   --  Make_Return_Statement above.\n-\n    procedure Mark_Coextensions (Context_Nod : Node_Id; Root_Nod : Node_Id);\n    --  Given a node which designates the context of analysis and an origin in\n    --  the tree, traverse from Root_Nod and mark all allocators as either"}, {"sha": "32f7edaab252ab2ae438b06d380608c27cbc3763", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -370,7 +370,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Extended_Return_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       return Flag5 (N);\n    end By_Ref;\n \n@@ -427,7 +427,7 @@ package body Sinfo is\n      (N : Node_Id) return Boolean is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       return Flag18 (N);\n    end Comes_From_Extended_Return_Statement;\n \n@@ -958,7 +958,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Function_Call\n         or else NT (N).Nkind = N_Procedure_Call_Statement\n-        or else NT (N).Nkind = N_Return_Statement\n+        or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion);\n       return Flag13 (N);\n    end Do_Tag_Check;\n@@ -1234,7 +1234,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Pragma_Argument_Association\n         or else NT (N).Nkind = N_Qualified_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n-        or else NT (N).Nkind = N_Return_Statement\n+        or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n         or else NT (N).Nkind = N_Unchecked_Expression\n         or else NT (N).Nkind = N_Unchecked_Type_Conversion);\n@@ -2537,7 +2537,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Allocator\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Free_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       return Node2 (N);\n    end Procedure_To_Call;\n \n@@ -2670,7 +2670,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Extended_Return_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       return Node5 (N);\n    end Return_Statement_Entity;\n \n@@ -2862,7 +2862,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Allocator\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Free_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       return Node1 (N);\n    end Storage_Pool;\n \n@@ -3443,7 +3443,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Extended_Return_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       Set_Flag5 (N, Val);\n    end Set_By_Ref;\n \n@@ -3500,7 +3500,7 @@ package body Sinfo is\n      (N : Node_Id; Val : Boolean := True) is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       Set_Flag18 (N, Val);\n    end Set_Comes_From_Extended_Return_Statement;\n \n@@ -4031,7 +4031,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Function_Call\n         or else NT (N).Nkind = N_Procedure_Call_Statement\n-        or else NT (N).Nkind = N_Return_Statement\n+        or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion);\n       Set_Flag13 (N, Val);\n    end Set_Do_Tag_Check;\n@@ -4298,7 +4298,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Pragma_Argument_Association\n         or else NT (N).Nkind = N_Qualified_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n-        or else NT (N).Nkind = N_Return_Statement\n+        or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n         or else NT (N).Nkind = N_Unchecked_Expression\n         or else NT (N).Nkind = N_Unchecked_Type_Conversion);\n@@ -5601,7 +5601,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Allocator\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Free_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       Set_Node2 (N, Val); -- semantic field, no parent set\n    end Set_Procedure_To_Call;\n \n@@ -5734,7 +5734,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Extended_Return_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       Set_Node5 (N, Val); -- semantic field, no parent set\n    end Set_Return_Statement_Entity;\n \n@@ -5926,7 +5926,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Allocator\n         or else NT (N).Nkind = N_Extended_Return_Statement\n         or else NT (N).Nkind = N_Free_Statement\n-        or else NT (N).Nkind = N_Return_Statement);\n+        or else NT (N).Nkind = N_Simple_Return_Statement);\n       Set_Node1 (N, Val); -- semantic field, no parent set\n    end Set_Storage_Pool;\n "}, {"sha": "41998908b75db433ee8807053bdca293e7e77daf", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -4799,10 +4799,6 @@ package Sinfo is\n       -- 6.5  Return Statement --\n       ---------------------------\n \n-      --  RETURN_STATEMENT ::= return [EXPRESSION]; -- Ada 95\n-\n-      --  In Ada 2005, we have:\n-\n       --  SIMPLE_RETURN_STATEMENT ::= return [EXPRESSION];\n \n       --  EXTENDED_RETURN_STATEMENT ::=\n@@ -4813,11 +4809,12 @@ package Sinfo is\n \n       --  RETURN_SUBTYPE_INDICATION ::= SUBTYPE_INDICATION | ACCESS_DEFINITION\n \n-      --  So in Ada 2005, RETURN_STATEMENT is no longer a nonterminal, but\n-      --  \"return statement\" is defined in 6.5 to mean a\n-      --  SIMPLE_RETURN_STATEMENT or an EXTENDED_RETURN_STATEMENT.\n+      --  The term \"return statement\" is defined in 6.5 to mean either a\n+      --  SIMPLE_RETURN_STATEMENT or an EXTENDED_RETURN_STATEMENT. We avoid\n+      --  the use of this term, since it used to mean someting else in earlier\n+      --  versions of Ada.\n \n-      --  N_Return_Statement\n+      --  N_Simple_Return_Statement\n       --  Sloc points to RETURN\n       --  Return_Statement_Entity (Node5-Sem)\n       --  Expression (Node3) (set to Empty if no expression present)\n@@ -4827,12 +4824,6 @@ package Sinfo is\n       --  By_Ref (Flag5-Sem)\n       --  Comes_From_Extended_Return_Statement (Flag18-Sem)\n \n-      --  N_Return_Statement represents a simple_return_statement, and is\n-      --  renamed to be N_Simple_Return_Statement below. Clients should refer\n-      --  to N_Simple_Return_Statement. We retain N_Return_Statement because\n-      --  that's how gigi knows it. See also renaming of Make_Return_Statement\n-      --  as Make_Simple_Return_Statement in Sem_Util.\n-\n       --  Note: Return_Statement_Entity points to an E_Return_Statement\n \n       --  If a range check is required, then Do_Range_Check is set on the\n@@ -7785,7 +7776,7 @@ package Sinfo is\n       N_Null_Statement,\n       N_Raise_Statement,\n       N_Requeue_Statement,\n-      N_Return_Statement, -- renamed as N_Simple_Return_Statement below\n+      N_Simple_Return_Statement,\n       N_Extended_Return_Statement,\n       N_Selective_Accept,\n       N_Timed_Entry_Call,\n@@ -10942,7 +10933,7 @@ package Sinfo is\n         4 => False,   --  Next_Named_Actual (Node4-Sem)\n         5 => False),  --  unused\n \n-     N_Return_Statement =>\n+     N_Simple_Return_Statement =>\n        (1 => False,   --  Storage_Pool (Node1-Sem)\n         2 => False,   --  Procedure_To_Call (Node2-Sem)\n         3 => True,    --  Expression (Node3)\n@@ -12435,8 +12426,8 @@ package Sinfo is\n    --  These synonyms are to aid in transition, they should eventually be\n    --  removed when all remaining references to the obsolete name are gone.\n \n-   N_Simple_Return_Statement : constant Node_Kind := N_Return_Statement;\n-   --  Rename N_Return_Statement to be N_Simple_Return_Statement. Clients\n+   N_Return_Statement : constant Node_Kind := N_Simple_Return_Statement;\n+   --  Rename N_Simple_Return_Statement to be N_Return_Statement. Clients\n    --  should refer to N_Simple_Return_Statement.\n \n end Sinfo;"}, {"sha": "a4fa6cc7fa3fdd9eedb52c9c1532c002b5a3ba32", "filename": "gcc/ada/types.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a7cd469407ff52beb29b4855b11c102ccf6972/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=92a7cd469407ff52beb29b4855b11c102ccf6972", "patch": "@@ -384,3 +384,6 @@ typedef Int Mechanism_Type;\n #define SE_Object_Too_Large                34\n \n #define LAST_REASON_CODE                   34\n+\n+#define N_Return_Statement N_Simple_Return_Statement\n+/* temporary synonym for transition */"}]}