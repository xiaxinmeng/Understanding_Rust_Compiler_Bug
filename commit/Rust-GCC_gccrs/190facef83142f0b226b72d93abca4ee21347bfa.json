{"sha": "190facef83142f0b226b72d93abca4ee21347bfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkwZmFjZWY4MzE0MmYwYjIyNmI3MmQ5M2FiY2E0ZWUyMTM0N2JmYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-10-30T18:29:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-10-30T18:29:49Z"}, "message": "decl.c (grokdeclarator): Use declarator->id_loc in diagnostic about flexible array members.\n\n/cp\n2018-10-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Use declarator->id_loc in diagnostic\n\tabout flexible array members.\n\n/testsuite\n2018-10-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp1z/has-unique-obj-representations1.C: Test location too.\n\t* g++.dg/ext/flexarray-mangle-2.C: Likewise.\n\t* g++.dg/ext/flexarray-mangle.C: Likewise.\n\t* g++.dg/ext/flexarray-subst.C: Likewise.\n\t* g++.dg/ext/flexary10.C: Likewise.\n\t* g++.dg/ext/flexary11.C: Likewise.\n\t* g++.dg/ext/flexary14.C: Likewise.\n\t* g++.dg/ext/flexary16.C: Likewise.\n\t* g++.dg/ext/flexary26.C: Likewise.\n\t* g++.dg/ext/flexary27.C: Likewise.\n\t* g++.dg/ext/flexary7.C: Likewise.\n\t* g++.dg/ext/pr71290.C: Likewise.\n\nFrom-SVN: r265636", "tree": {"sha": "d3d2bc5b9a6a866b4c8419aac91c37fcda2cab36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d2bc5b9a6a866b4c8419aac91c37fcda2cab36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/190facef83142f0b226b72d93abca4ee21347bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/190facef83142f0b226b72d93abca4ee21347bfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/190facef83142f0b226b72d93abca4ee21347bfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/190facef83142f0b226b72d93abca4ee21347bfa/comments", "author": null, "committer": null, "parents": [{"sha": "6a6e0926b2477d2d99c92589878b9ced4abeb114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6e0926b2477d2d99c92589878b9ced4abeb114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6e0926b2477d2d99c92589878b9ced4abeb114"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "75fcc8adc58d46168274acad0788bc671e4a2d86", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -1,3 +1,8 @@\n+2018-10-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (grokdeclarator): Use declarator->id_loc in diagnostic\n+\tabout flexible array members.\n+\n 2018-10-29  David Malcolm  <dmalcolm@redhat.com>\n \n \t* cp-name-hint.h: New file."}, {"sha": "496ed98d9a5a495e07841bd4acf1696db0202ca4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -12210,7 +12210,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  /* Do not warn on flexible array members in system\n \t\t     headers because glibc uses them.  */;\n \t\telse if (name)\n-\t\t  pedwarn (input_location, OPT_Wpedantic,\n+\t\t  pedwarn (declarator->id_loc, OPT_Wpedantic,\n \t\t\t   \"ISO C++ forbids flexible array member %qs\", name);\n \t\telse\n \t\t  pedwarn (input_location, OPT_Wpedantic,"}, {"sha": "e3fa8007fd12bcad3b42f5dd3a69ad35caf5662c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -1,3 +1,18 @@\n+2018-10-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp1z/has-unique-obj-representations1.C: Test location too.\n+\t* g++.dg/ext/flexarray-mangle-2.C: Likewise.\n+\t* g++.dg/ext/flexarray-mangle.C: Likewise.\n+\t* g++.dg/ext/flexarray-subst.C: Likewise.\n+\t* g++.dg/ext/flexary10.C: Likewise.\n+\t* g++.dg/ext/flexary11.C: Likewise.\n+\t* g++.dg/ext/flexary14.C: Likewise.\n+\t* g++.dg/ext/flexary16.C: Likewise.\n+\t* g++.dg/ext/flexary26.C: Likewise.\n+\t* g++.dg/ext/flexary27.C: Likewise.\n+\t* g++.dg/ext/flexary7.C: Likewise.\n+\t* g++.dg/ext/pr71290.C: Likewise.\n+\n 2018-10-30  Paul Koning  <ni1d@arrl.net>\n \n \t* gcc.dg/tree-ssa/attr-alias.c: Skip if no weak support."}, {"sha": "e50e535922f0b523a98b3c738802d54514321fee", "filename": "gcc/testsuite/g++.dg/cpp1z/has-unique-obj-representations1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -9,7 +9,7 @@ struct V { int i : INTB * 3 / 4; int j : INTB / 4 + 1; };\n struct W {};\n struct X : public W { int i; void bar (); };\n struct Y {\n-  char a[3]; char b[];   // { dg-warning \"forbids flexible array member\" }\n+  char a[3]; char b[];   // { dg-warning \"19:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n struct Z { int a; float b; };\n struct A { int i : INTB * 2; int j; };\t\t\t// { dg-warning \"exceeds its type\" }"}, {"sha": "3d534e86c2e1344882ace35a68e5c04024b30a52", "filename": "gcc/testsuite/g++.dg/ext/flexarray-mangle-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  char a[];   // { dg-warning \"forbids flexible array member\" }\n+  char a[];   // { dg-warning \"8:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n // Declare but do not define function templates."}, {"sha": "9625459f9221bc8aa07c3239b1a4954cc7de685a", "filename": "gcc/testsuite/g++.dg/ext/flexarray-mangle.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  char a[];   // { dg-warning \"forbids flexible array member\" }\n+  char a[];   // { dg-warning \"8:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n // Declare but do not define function templates."}, {"sha": "8364a3e2922971a4dbd71797dc67d1df7feca0ed", "filename": "gcc/testsuite/g++.dg/ext/flexarray-subst.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -5,7 +5,7 @@\n \n struct A {\n   int n;\n-  char a[];   // { dg-warning \"forbids flexible array member\" }\n+  char a[];   // { dg-warning \"8:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n template <class>"}, {"sha": "7d71630d46bfa3a68b8caab818f2ae28c1dd6513", "filename": "gcc/testsuite/g++.dg/ext/flexary10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  int a[];  // { dg-warning \"forbids flexible array member\" }\n+  int a[];  // { dg-warning \"7:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n struct A foo (void)"}, {"sha": "058c1e7d1e6694113b239bb4f77a73461e86189e", "filename": "gcc/testsuite/g++.dg/ext/flexary11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  char a[];   // { dg-error \"forbids flexible array member\" }\n+  char a[];   // { dg-error \"8:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n void f ()"}, {"sha": "cda6635d8cfeb1e41e805888c13825aa9deb3950", "filename": "gcc/testsuite/g++.dg/ext/flexary14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -10,7 +10,7 @@ struct A<T[]> { typedef int X; };\n template <class T> int foo (T&, typename A<T>::X = 0) { return 0; }\n \n struct B {\n-  int n, a[];     // { dg-error \"forbids flexible array member\" }\n+  int n, a[];     // { dg-error \"10:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n void bar (B *b)"}, {"sha": "94eb6c8c577a855b464f284f7302b6412d37b6ac", "filename": "gcc/testsuite/g++.dg/ext/flexary16.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -12,7 +12,7 @@ struct container\n \n   struct incomplete {\n     int x;\n-    elem array[];  // { dg-warning \"forbids flexible array member\" }\n+    elem array[];  // { dg-warning \"10:ISO C\\\\+\\\\+ forbids flexible array member\" }\n   };\n };\n \n@@ -27,7 +27,7 @@ struct D: container<T>\n {\n   struct S {\n     int x;\n-    typename container<T>::elem array[];  // { dg-warning \"forbids flexible array member\" }\n+    typename container<T>::elem array[];  // { dg-warning \"33:ISO C\\\\+\\\\+ forbids flexible array member\" }\n   };\n };\n "}, {"sha": "e62e221cff51d137be132ee33d87ec23dce7dc3a", "filename": "gcc/testsuite/g++.dg/ext/flexary26.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary26.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -2,8 +2,8 @@\n // { dg-do compile }\n // { dg-options \"-Wpedantic\" }\n \n-struct S { const char *a; char b[]; };\t// { dg-warning \"forbids flexible array member\" }\n-struct T { int a; int b[]; };\t// { dg-warning \"forbids flexible array member\" }\n+struct S { const char *a; char b[]; };\t// { dg-warning \"32:ISO C\\\\+\\\\+ forbids flexible array member\" }\n+struct T { int a; int b[]; };\t// { dg-warning \"23:ISO C\\\\+\\\\+ forbids flexible array member\" }\n #if __cplusplus >= 201103L\n S c[] { \"\", \"\" };\t\t// { dg-error \"initialization of flexible array member in a nested context\" \"\" { target c++11 } }\n \t\t\t\t// { dg-warning \"initialization of a flexible array member\" \"\" { target c++11 } .-1 }"}, {"sha": "20c04b42f5870d60703bbb25e3061bc372c993b5", "filename": "gcc/testsuite/g++.dg/ext/flexary27.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary27.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -1,8 +1,8 @@\n // PR c++/81922\n // { dg-do compile }\n \n-struct S { const char *a; char b[]; };\t// { dg-error \"forbids flexible array member\" }\n-struct T { int a; int b[]; };\t// { dg-error \"forbids flexible array member\" }\n+struct S { const char *a; char b[]; };\t// { dg-error \"32:ISO C\\\\+\\\\+ forbids flexible array member\" }\n+struct T { int a; int b[]; };\t// { dg-error \"23:ISO C\\\\+\\\\+ forbids flexible array member\" }\n #if __cplusplus >= 201103L\n S c[] { \"\", \"\" };\t\t// { dg-error \"initialization of flexible array member in a nested context\" \"\" { target c++11 } }\n \t\t\t\t// { dg-error \"initialization of a flexible array member\" \"\" { target c++11 } .-1 }"}, {"sha": "62d869ee7ad40acf8edb158a9b5f1c2a5f06db39", "filename": "gcc/testsuite/g++.dg/ext/flexary7.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -5,7 +5,7 @@\n \n struct FlexChar {\n     int n;\n-    char a[];       // { dg-warning \"forbids flexible array member\" }\n+    char a[];       // { dg-warning \"10:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n struct FlexChar ac =\n@@ -18,7 +18,7 @@ typedef __WCHAR_TYPE__ wchar_t;\n \n struct FlexWchar {\n     int n;\n-    wchar_t a[];    // { dg-warning \"forbids flexible array member\" }\n+    wchar_t a[];    // { dg-warning \"13:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n struct FlexWchar awc =\n@@ -27,7 +27,7 @@ struct FlexWchar awc =\n \n struct FlexInt {\n     int n;\n-    int a[];        // { dg-warning \"forbids flexible array member\" }\n+    int a[];        // { dg-warning \"9:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n // Verify that no warning is issued for the case when a flexible array\n@@ -48,7 +48,7 @@ struct FlexInt ai2 =\n template <class T>\n struct FlexT {\n     int n;\n-    T a[];          // { dg-warning \"forbids flexible array member\" }\n+    T a[];          // { dg-warning \"7:ISO C\\\\+\\\\+ forbids flexible array member\" }\n };\n \n struct FlexT<char> atc ="}, {"sha": "7268294381c0b812ddfaa440ad51415811346ce6", "filename": "gcc/testsuite/g++.dg/ext/pr71290.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/190facef83142f0b226b72d93abca4ee21347bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C?ref=190facef83142f0b226b72d93abca4ee21347bfa", "patch": "@@ -1,17 +1,17 @@\n // PR c++/71290 - [6/7 Regression] Flexible array member is not diagnosed\n // with -pedantic\n \n-// { dg-do compile }s\n+// { dg-do compile }\n // { dg-options \"-Wall -Wpedantic\" }\n \n struct A\n {\n   int i;\n-  int arr[];   // { dg-warning \"forbids flexible array member .arr.\" }\n+  int arr[];   // { dg-warning \"7:ISO C\\\\+\\\\+ forbids flexible array member .arr.\" }\n };\n \n template <class T>\n struct B {\n   T n;\n-  T a[];       // { dg-warning \"forbids flexible array member .a.\" }\n+  T a[];       // { dg-warning \"5:ISO C\\\\+\\\\+ forbids flexible array member .a.\" }\n };"}]}