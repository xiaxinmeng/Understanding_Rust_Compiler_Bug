{"sha": "e4d91027850876962ec414f0446a12009753dc2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkOTEwMjc4NTA4NzY5NjJlYzQxNGYwNDQ2YTEyMDA5NzUzZGMyZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-10T02:41:43Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-10T02:41:43Z"}, "message": "decl2.c (finish_file): Avoid out-of-bounds array reference during memmove.\n\n        * decl2.c (finish_file): Avoid out-of-bounds array reference\n        during memmove.\n\nFrom-SVN: r71261", "tree": {"sha": "6a80ecd8204ee92d6262be1c1cf86e71b0b7bc0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a80ecd8204ee92d6262be1c1cf86e71b0b7bc0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4d91027850876962ec414f0446a12009753dc2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d91027850876962ec414f0446a12009753dc2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d91027850876962ec414f0446a12009753dc2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d91027850876962ec414f0446a12009753dc2d/comments", "author": null, "committer": null, "parents": [{"sha": "e62f462e1093bc9ce729021bcef66e9636159568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62f462e1093bc9ce729021bcef66e9636159568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62f462e1093bc9ce729021bcef66e9636159568"}], "stats": {"total": 75, "additions": 15, "deletions": 60}, "files": [{"sha": "bd1093fa0ef71a559c9be059446cc62116055185", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4d91027850876962ec414f0446a12009753dc2d", "patch": "@@ -1,3 +1,8 @@\n+2003-09-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* decl2.c (finish_file): Avoid out-of-bounds array reference\n+\tduring memmove.\n+\n 2003-09-09  Richard Henderson  <rth@redhat.com>\n \n \t* decl2.c (mark_member_pointers): Rename from"}, {"sha": "8c68a02f68ef2adda492b9ae0d1044cc2d78509f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e4d91027850876962ec414f0446a12009753dc2d", "patch": "@@ -2705,12 +2705,12 @@ finish_file ()\n   \t them to the beginning of the array, then get rid of the\n   \t leftovers.  */\n       n_new = VARRAY_ACTIVE_SIZE (unemitted_tinfo_decls) - n_old;\n-      memmove (&VARRAY_TREE (unemitted_tinfo_decls, 0),\n-  \t       &VARRAY_TREE (unemitted_tinfo_decls, n_old),\n-  \t       n_new * sizeof (tree));\n+      if (n_new)\n+\tmemmove (&VARRAY_TREE (unemitted_tinfo_decls, 0),\n+\t\t &VARRAY_TREE (unemitted_tinfo_decls, n_old),\n+\t\t n_new * sizeof (tree));\n       memset (&VARRAY_TREE (unemitted_tinfo_decls, n_new),\n-  \t      0,\n-  \t      n_old * sizeof (tree));\n+  \t      0, n_old * sizeof (tree));\n       VARRAY_ACTIVE_SIZE (unemitted_tinfo_decls) = n_new;\n \n       /* The list of objects with static storage duration is built up"}, {"sha": "b5d76cea29aef5f9d91f14dc8d2bbf5285c4be94", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 55, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d91027850876962ec414f0446a12009753dc2d/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e4d91027850876962ec414f0446a12009753dc2d", "patch": "@@ -2935,62 +2935,12 @@ expand_or_defer_fn (tree fn)\n   if (flag_syntax_only)\n     return;\n \n-  if (flag_unit_at_a_time && cgraph_global_info_ready)\n-    abort ();\n-\n-  if (flag_unit_at_a_time && !cgraph_global_info_ready)\n-    {\n-      if (at_eof)\n-\t{\n-\t  /* Compute the appropriate object-file linkage for inline\n-\t     functions.  */\n-\t  if (DECL_DECLARED_INLINE_P (fn))\n-\t    import_export_decl (fn);\n-\t  cgraph_finalize_function (fn, DECL_SAVED_TREE (fn));\n-\t}\n-      else\n-\t{\n-\t  if (!DECL_EXTERNAL (fn))\n-\t    {\n-\t      DECL_NOT_REALLY_EXTERN (fn) = 1;\n-\t      DECL_EXTERNAL (fn) = 1;\n-\t    }\n-\t  /* Remember this function.  In finish_file we'll decide if\n-\t     we actually need to write this function out.  */\n-\t  defer_fn (fn);\n-\t  /* Let the back-end know that this function exists.  */\n-\t  (*debug_hooks->deferred_inline_function) (fn);\n-\t}\n-      return;\n-    }\n-\n-\n-  /* If possible, avoid generating RTL for this function.  Instead,\n-     just record it as an inline function, and wait until end-of-file\n-     to decide whether to write it out or not.  */\n-  if (/* We have to generate RTL if it's not an inline function.  */\n-      (DECL_INLINE (fn) || DECL_COMDAT (fn))\n-      /* Or if we have to emit code for inline functions anyhow.  */\n-      && !flag_keep_inline_functions\n-      /* Or if we actually have a reference to the function.  */\n-      && !DECL_NEEDED_P (fn))\n-    {\n-      /* Set DECL_EXTERNAL so that assemble_external will be called as\n-\t necessary.  We'll clear it again in finish_file.  */\n-      if (!DECL_EXTERNAL (fn))\n-\t{\n-\t  DECL_NOT_REALLY_EXTERN (fn) = 1;\n-\t  DECL_EXTERNAL (fn) = 1;\n-\t}\n-      /* Remember this function.  In finish_file we'll decide if\n-\t we actually need to write this function out.  */\n-      defer_fn (fn);\n-      /* Let the back-end know that this function exists.  */\n-      (*debug_hooks->deferred_inline_function) (fn);\n-      return;\n-    }\n+  /* Compute the appropriate object-file linkage for inline functions.  */\n+  if (DECL_DECLARED_INLINE_P (fn))\n+    import_export_decl (fn);\n \n-  expand_body (fn);\n+  /* Expand or defer, at the whim of the compilation unit manager.  */\n+  cgraph_finalize_function (fn, DECL_SAVED_TREE (fn));\n }\n \n /* Helper function for walk_tree, used by finish_function to override all"}]}