{"sha": "2a34bece475923eef33afd72384e6b1072f1b671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzNGJlY2U0NzU5MjNlZWYzM2FmZDcyMzg0ZTZiMTA3MmYxYjY3MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-29T21:44:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-29T21:44:26Z"}, "message": "re PR rtl-optimization/39938 (build broke for cris-elf with dbr_schedule change)\n\n\tPR rtl-optimization/39938\n\t* Makefile.in (cfgrtl.o): Add $(INSN_ATTR_H).\n\t* cfgrtl.c: Include insn-attr.h.\n\t(rest_of_pass_free_cfg): New function.\n\t(pass_free_cfg): Use rest_of_pass_free_cfg as execute function.\n\t* resource.c (init_resource_info): Remove call to df_analyze.\n\nCo-Authored-By: Steven Bosscher <steven@gcc.gnu.org>\n\nFrom-SVN: r146988", "tree": {"sha": "0d37201627a351956722dc5abe40feb166b90596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d37201627a351956722dc5abe40feb166b90596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a34bece475923eef33afd72384e6b1072f1b671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a34bece475923eef33afd72384e6b1072f1b671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a34bece475923eef33afd72384e6b1072f1b671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a34bece475923eef33afd72384e6b1072f1b671/comments", "author": null, "committer": null, "parents": [{"sha": "5dc7911e0667bee8c5f2ec88327bc41605d2293e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc7911e0667bee8c5f2ec88327bc41605d2293e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc7911e0667bee8c5f2ec88327bc41605d2293e"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "888a769eb6d9b113df6f6265875c6e7fdeded31c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a34bece475923eef33afd72384e6b1072f1b671", "patch": "@@ -1,3 +1,13 @@\n+2009-04-29  Eric Botcazou  <ebotcazou@adacore.com>\n+            Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR rtl-optimization/39938\n+\t* Makefile.in (cfgrtl.o): Add $(INSN_ATTR_H).\n+\t* cfgrtl.c: Include insn-attr.h.\n+\t(rest_of_pass_free_cfg): New function.\n+\t(pass_free_cfg): Use rest_of_pass_free_cfg as execute function.\n+\t* resource.c (init_resource_info): Remove call to df_analyze.\n+\n 2009-04-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR target/39943"}, {"sha": "1a253489f81cde36fb4a43143944b81f35c69057", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2a34bece475923eef33afd72384e6b1072f1b671", "patch": "@@ -2802,7 +2802,8 @@ cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H)\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) insn-config.h $(EXPR_H) \\\n+   output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n+   insn-config.h $(EXPR_H) \\\n    $(CFGLAYOUT_H) $(CFGLOOP_H) $(OBSTACK_H) $(TARGET_H) $(TREE_H) \\\n    $(TREE_PASS_H) $(DF_H) $(GGC_H)\n cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\"}, {"sha": "a2c0e0f202686594babb29c19adae4f16bc4c303", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=2a34bece475923eef33afd72384e6b1072f1b671", "patch": "@@ -53,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n+#include \"insn-attr.h\"\n #include \"insn-config.h\"\n #include \"cfglayout.h\"\n #include \"expr.h\"\n@@ -408,13 +409,27 @@ free_bb_for_insn (void)\n   return 0;\n }\n \n+static unsigned int\n+rest_of_pass_free_cfg (void)\n+{\n+#ifdef DELAY_SLOTS\n+  /* The resource.c machinery uses DF but the CFG isn't guaranteed to be\n+     valid at that point so it would be too late to call df_analyze.  */\n+  if (optimize > 0 && flag_delayed_branch)\n+    df_analyze ();\n+#endif\n+\n+  free_bb_for_insn ();\n+  return 0;\n+}\n+\n struct rtl_opt_pass pass_free_cfg =\n {\n  {\n   RTL_PASS,\n   NULL,                                 /* name */\n   NULL,                                 /* gate */\n-  free_bb_for_insn,                     /* execute */\n+  rest_of_pass_free_cfg,                /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */"}, {"sha": "91b86c9573beb33275796234d012c9baa4af441f", "filename": "gcc/resource.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a34bece475923eef33afd72384e6b1072f1b671/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=2a34bece475923eef33afd72384e6b1072f1b671", "patch": "@@ -1200,8 +1200,6 @@ init_resource_info (rtx epilogue_insn)\n   FOR_EACH_BB (bb)\n     if (LABEL_P (BB_HEAD (bb)))\n       BLOCK_FOR_INSN (BB_HEAD (bb)) = bb;\n-\n-  df_analyze ();\n }\n \f\n /* Free up the resources allocated to mark_target_live_regs ().  This"}]}