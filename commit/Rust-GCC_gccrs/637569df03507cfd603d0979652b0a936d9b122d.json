{"sha": "637569df03507cfd603d0979652b0a936d9b122d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3NTY5ZGYwMzUwN2NmZDYwM2QwOTc5NjUyYjBhOTM2ZDliMTIyZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-25T00:16:53Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-25T00:16:53Z"}, "message": "Daily bump.", "tree": {"sha": "cd72e9cacb9158b8ee36f6fb168f39dd989ab3d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd72e9cacb9158b8ee36f6fb168f39dd989ab3d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637569df03507cfd603d0979652b0a936d9b122d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637569df03507cfd603d0979652b0a936d9b122d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637569df03507cfd603d0979652b0a936d9b122d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637569df03507cfd603d0979652b0a936d9b122d/comments", "author": null, "committer": null, "parents": [{"sha": "358832c46a378e5a0b8a2fa3c2739125e3e680c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/358832c46a378e5a0b8a2fa3c2739125e3e680c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/358832c46a378e5a0b8a2fa3c2739125e3e680c7"}], "stats": {"total": 165, "additions": 164, "deletions": 1}, "files": [{"sha": "0498c0f203ac46285a3fb37ecddf86a2810fd17f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,9 @@\n+2021-05-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Add note that ChangeLog entries\n+\tare added automatically.\n+\t* gcc-changelog/test_email.py: Update test.\n+\n 2021-05-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* gcc-changelog/git_email.py: Remove use of non-strict mode."}, {"sha": "d3c90e2877be91bb8aff6b48b257fb42e903e850", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,51 @@\n+2021-05-24  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* config/rs6000/genfusion.pl (gen_logical_addsubf): Refactor to\n+\tadd generation of logical-add and add-logical fusion pairs.\n+\t* config/rs6000/rs6000-cpus.def: Add new fusion to ISA 3.1 mask\n+\tand powerpc mask.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Turn on\n+\tlogical-add and add-logical fusion by default.\n+\t* config/rs6000/rs6000.opt: Add -mpower10-fusion-logical-add and\n+\t-mpower10-fusion-add-logical options.\n+\t* config/rs6000/fusion.md: Regenerate file.\n+\n+2021-05-24  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::legacy_equal_p): Check type when\n+\tcomparing VR_VARYING types.\n+\t(range_tests_legacy): Test comparing VARYING ranges of different\n+\tsizes.\n+\n+2021-05-24  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (neoversen1_tunings):\n+\tEnable AARCH64_EXTRA_TUNE_CHEAP_SHIFT_EXTEND.\n+\n+2021-05-24  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_classify_symbol): Use GOT for\n+\textern weak symbols.  Limit symbol offsets for non-GOT symbols with\n+\tPIC/PIE.\n+\n+2021-05-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/neon.md (vec_load_lanesxi<mode>)\n+\t(vec_store_lanexoi<mode>): Move ...\n+\t* config/arm/vec-common.md: here.\n+\n+2021-05-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/neon.md (vec_load_lanesoi<mode>)\n+\t(vec_store_lanesoi<mode>): Move ...\n+\t* config/arm/vec-common.md: here.\n+\n+2021-05-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/100660\n+\t* config/i386/i386.c (ix86_gimple_fold_builtin): Replacing\n+\tstmt with GIMPLE_NOP when lhs doesn't exist.\n+\n 2021-05-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/100722"}, {"sha": "e64bfabbbe33e50c671849bffc8ca547ba9a5f77", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1 +1 @@\n-20210524\n+20210525"}, {"sha": "e614039dd0cfe293b50f7bc580a3c8ce6f4ed69f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,12 @@\n+2021-05-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/86470\n+\t* trans-expr.c (gfc_copy_class_to_class): Add unshare_expr.\n+\t* trans-openmp.c (gfc_is_polymorphic_nonptr,\n+\tgfc_is_unlimited_polymorphic_nonptr): New.\n+\t(gfc_omp_clause_copy_ctor, gfc_omp_clause_dtor): Handle\n+\tpolymorphic scalars.\n+\n 2021-05-23  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/100551"}, {"sha": "7cc756b53b8c9f05a64eb85f643de3cdaceeeba0", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,9 @@\n+2021-05-24  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR go/100537\n+\t* go-gcc.cc (class Gcc_backend): Update methods that create\n+\tvariables to take a flags parameter.\n+\n 2021-01-28  Ian Lance Taylor  <iant@golang.org>\n \n \t* gospec.c (lang_specific_driver): Add -g if no debugging options"}, {"sha": "426f1c034b3d8dbf693173a89e23768c494a35fe", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,7 @@\n+2021-05-24  Wang Liushuai  <wangliushuai@bytedance.com>\n+\n+\t* lto-dump.c (get_size): Fix the NPD error about the thunk symbol.\n+\n 2021-04-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/98599"}, {"sha": "00550f6f56639015d4aeff93b253f0df98943e7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,36 @@\n+2021-05-24  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/fusion-p10-logadd.c: New file.\n+\n+2021-05-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/86470\n+\t* gfortran.dg/gomp/class-firstprivate-1.f90: New test.\n+\t* gfortran.dg/gomp/class-firstprivate-2.f90: New test.\n+\t* gfortran.dg/gomp/class-firstprivate-3.f90: New test.\n+\t* gfortran.dg/gomp/class-firstprivate-4.f90: New test.\n+\n+2021-05-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vld4.c: New test, derived from\n+\tslp-perm-3.c\n+\n+2021-05-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vld2.c: New test, derived from\n+\tslp-perm-2.c\n+\n+2021-05-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/100660\n+\t* gcc.target/i386/pr100660.c: New test.\n+\n+2021-05-24  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* gcc.dg/tree-ssa/phi-opt-10.c: Use \"\\[0-9\\]*\" instead of '.'\n+\twhen matching ssa name version.\n+\t* gcc.dg/tree-ssa/phi-opt-7.c: Likewise.\n+\n 2021-05-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/100722"}, {"sha": "8a5289a6cc7ca0589e3f67c82f25e9ab2efbafab", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,10 @@\n+2021-05-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/86470\n+\t* testsuite/libgomp.fortran/class-firstprivate-1.f90: New test.\n+\t* testsuite/libgomp.fortran/class-firstprivate-2.f90: New test.\n+\t* testsuite/libgomp.fortran/class-firstprivate-3.f90: New test.\n+\n 2021-05-22  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR testsuite/90115"}, {"sha": "3297f63feb1bf63250c9681ed373f53d3d8b8b4f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637569df03507cfd603d0979652b0a936d9b122d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637569df03507cfd603d0979652b0a936d9b122d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=637569df03507cfd603d0979652b0a936d9b122d", "patch": "@@ -1,3 +1,53 @@\n+2021-05-24  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/96088\n+\t* include/bits/hashtable_policy.h (_Select2nd): New.\n+\t(_NodeBuilder<>): New.\n+\t(_ReuseOrAllocNode<>::operator()): Use variadic template args.\n+\t(_AllocNode<>::operator()): Likewise.\n+\t* include/bits/hashtable.h\n+\t(_Hashtable<>::__node_builder_t): New.\n+\t(_Hashtable<>::_M_insert_unique<>(_Kt&&, _Arg&&, const _NodeGenerator&)):\n+\t New.\n+\t(_Hashtable<>::_S_forward_key): New.\n+\t(_Hashtable<>::_M_insert): Use latter.\n+\t(_Hashtable<>::_M_insert(const_iterator, _Arg&&, const _NodeGenerator&, false_type)):\n+\tInstantiate node first, compute hash code second.\n+\t* testsuite/23_containers/unordered_map/96088.cc: New test.\n+\t* testsuite/23_containers/unordered_multimap/96088.cc: New test.\n+\t* testsuite/23_containers/unordered_multiset/96088.cc: New test.\n+\t* testsuite/23_containers/unordered_set/96088.cc: New test.\n+\t* testsuite/util/replacement_memory_operators.h\n+\t(counter::_M_increment): New.\n+\t(counter::_M_decrement): New.\n+\t(counter::reset()): New.\n+\n+2021-05-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/100479\n+\t* include/std/ranges (__detail::__non_propagating_cache): Move\n+\tdefinition up to before that of _CachedPosition.  Make base\n+\tclass _Optional_base protected instead of private.  Add const\n+\toverload for operator*.\n+\t(__detail::_CachedPosition): Rewrite the partial specialization\n+\tfor forward ranges as a derived class of __non_propagating_cache.\n+\tRemove the size constraint on the partial specialization for\n+\trandom access ranges.  Add copy/move/copy-assignment/move-assignment\n+\tmembers to the offset partial specialization for random\n+\taccess ranges that propagate the cached value but additionally\n+\tinvalidate it in the source object on move.\n+\t* testsuite/std/ranges/adaptors/100479.cc: New test.\n+\n+2021-05-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/25_algorithms/inplace_merge/constrained.cc: Qualify\n+\tcall to ranges::next.\n+\t* testsuite/25_algorithms/is_sorted/constrained.cc: Likewise.\n+\t* testsuite/25_algorithms/is_sorted_until/constrained.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/swap_ranges/1.cc: Qualify call to\n+\tswap_ranges.\n+\n 2021-05-21  Patrick Palka  <ppalka@redhat.com>\n \n \tPR libstdc++/100606"}]}