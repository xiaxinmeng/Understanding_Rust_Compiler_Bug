{"sha": "c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "node_id": "C_kwDOANBUbNoAKGMxMzNiZGZhOWU3ZDkyMjU1MTBkMDBkYmI3MjcwY2MwNTJlNGU0ZWU", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-03-18T16:40:22Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-03-18T16:40:22Z"}, "message": "Fortran/OpenMP: Fix privatization of associated names\n\ngfc_omp_predetermined_sharing cases the associate-name pointer variable\nto be OMP_CLAUSE_DEFAULT_FIRSTPRIVATE, which is fine. However, the associated\nselector is shared. Thus, the target of associate-name pointer should not get\ncopied. (It was before but because of gfc_omp_privatize_by_reference returning\nfalse, the selector was not only wrongly copied but this was also not done\nproperly.)\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/103039\n\t* trans-openmp.cc (gfc_omp_clause_copy_ctor, gfc_omp_clause_dtor):\n\tOnly privatize pointer for associate names.\n\nlibgomp/ChangeLog:\n\n\tPR fortran/103039\n\t* testsuite/libgomp.fortran/associate4.f90: New test.", "tree": {"sha": "e45f4581f7ffa858ba92ef0665555e3fc70f235f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e45f4581f7ffa858ba92ef0665555e3fc70f235f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a42b1fa1a090ead96cc0f94a8060a9650c810d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a42b1fa1a090ead96cc0f94a8060a9650c810d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a42b1fa1a090ead96cc0f94a8060a9650c810d5"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "101924f5e7692797741f57f550901ea27d5f7b43", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "patch": "@@ -808,6 +808,11 @@ gfc_omp_clause_copy_ctor (tree clause, tree dest, tree src)\n   gcc_assert (OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_FIRSTPRIVATE\n \t      || OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_LINEAR);\n \n+  /* Privatize pointer, only; cf. gfc_omp_predetermined_sharing. */\n+  if (DECL_P (OMP_CLAUSE_DECL (clause))\n+      && GFC_DECL_ASSOCIATE_VAR_P (OMP_CLAUSE_DECL (clause)))\n+    return build2 (MODIFY_EXPR, TREE_TYPE (dest), dest, src);\n+\n   if (DECL_ARTIFICIAL (OMP_CLAUSE_DECL (clause))\n       && DECL_LANG_SPECIFIC (OMP_CLAUSE_DECL (clause))\n       && GFC_DECL_SAVED_DESCRIPTOR (OMP_CLAUSE_DECL (clause)))\n@@ -1321,6 +1326,11 @@ gfc_omp_clause_dtor (tree clause, tree decl)\n   tree type = TREE_TYPE (decl), tem;\n   tree decl_type = TREE_TYPE (OMP_CLAUSE_DECL (clause));\n \n+  /* Only pointer was privatized; cf. gfc_omp_clause_copy_ctor. */\n+  if (DECL_P (OMP_CLAUSE_DECL (clause))\n+      && GFC_DECL_ASSOCIATE_VAR_P (OMP_CLAUSE_DECL (clause)))\n+    return NULL_TREE;\n+\n   if (DECL_ARTIFICIAL (OMP_CLAUSE_DECL (clause))\n       && DECL_LANG_SPECIFIC (OMP_CLAUSE_DECL (clause))\n       && GFC_DECL_SAVED_DESCRIPTOR (OMP_CLAUSE_DECL (clause)))"}, {"sha": "f0949b5530d7b7cd02b968a843109f421c32b00d", "filename": "libgomp/testsuite/libgomp.fortran/associate4.f90", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c133bdfa9e7d9225510d00dbb7270cc052e4e4ee/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate4.f90?ref=c133bdfa9e7d9225510d00dbb7270cc052e4e4ee", "patch": "@@ -0,0 +1,92 @@\n+! PR fortran/51722\n+\n+module m\n+implicit none\n+\n+contains\n+\n+subroutine seltype\n+\n+type :: a\n+   integer :: p = 2\n+end type a\n+\n+type, extends(a) :: b\n+   integer :: cnt = 0\n+end type b\n+\n+integer :: k, s\n+class(a), pointer :: x\n+\n+allocate(a :: x)\n+s = 0\n+select type (y => x)\n+class is (a)\n+!$omp parallel do default(shared) private(k) reduction(+:s)\n+   do k = 1,10\n+      s = s + k*y%p\n+   end do\n+!$omp end parallel do\n+end select\n+\n+if (s /= 110) error stop\n+deallocate(x)\n+allocate(b :: x)\n+\n+s = 0\n+select type (y => x)\n+class is (b)\n+!$omp parallel do default(shared) private(k) reduction(+:s)\n+   do k = 1,10\n+      s = s + k*y%p\n+!$omp atomic update\n+      y%cnt = y%cnt + 2\n+   end do\n+!$omp end parallel do\n+if (s /= 110) error stop\n+if (y%p /= 2) error stop\n+if (y%cnt /= 10*2) error stop\n+end select\n+\n+deallocate(x)\n+\n+end subroutine seltype\n+\n+subroutine assoc\n+\n+type :: b\n+   integer :: r = 3\n+end type b\n+\n+type :: a\n+   integer :: p = 2\n+   class(b), pointer :: u => null()\n+end type a\n+\n+integer :: k, s\n+class(a), pointer :: x\n+\n+s = 0\n+allocate(a :: x)\n+allocate(b :: x%u)\n+\n+associate(f => x%u)\n+!$omp parallel do default(shared) private(k) reduction(+:s)\n+   do k = 1,10\n+      s = s + k*f%r\n+   end do\n+!$omp end parallel do\n+end associate\n+\n+deallocate(x%u)\n+deallocate(x)\n+\n+if (s /= 165) error stop\n+end subroutine assoc\n+end module m\n+\n+use m\n+implicit none (type, external)\n+call seltype\n+call assoc\n+end"}]}