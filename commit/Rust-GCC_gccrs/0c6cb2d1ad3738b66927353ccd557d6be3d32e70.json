{"sha": "0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2Y2IyZDFhZDM3MzhiNjY5MjczNTNjY2Q1NTdkNmJlM2QzMmU3MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2013-08-07T23:40:49Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2013-08-07T23:40:49Z"}, "message": "Makefile.am (SUBDIRS): Protect with ENABLE_VTABLE_VERIFY.\n\n2013-08-07  Benjamin Kosnik  <bkoz@rehat.com>\n\n\t* Makefile.am (SUBDIRS): Protect with ENABLE_VTABLE_VERIFY.\n\t* Makefile.in: Regenerate.\n\t* acinclude.m4 (LIBVTV_CONFIGURE): Move parts to..\n\t* configure.ac: ...here. Make configure more verbose, re-order.\n\t* configure: Regenerate.\n\nFrom-SVN: r201585", "tree": {"sha": "0fc17ee70a3ffdba97eb50442871c4f2fe15a091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fc17ee70a3ffdba97eb50442871c4f2fe15a091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/comments", "author": null, "committer": null, "parents": [{"sha": "00458156b852e5876ce2814db38741f9b59262ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00458156b852e5876ce2814db38741f9b59262ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00458156b852e5876ce2814db38741f9b59262ac"}], "stats": {"total": 213, "additions": 121, "deletions": 92}, "files": [{"sha": "fb896cceed548314580a8868b50faad01d428736", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -1,3 +1,11 @@\n+2013-08-07  Benjamin Kosnik  <bkoz@rehat.com>\n+\n+\t* Makefile.am (SUBDIRS): Protect with ENABLE_VTABLE_VERIFY.\n+\t* Makefile.in: Regenerate.\n+\t* acinclude.m4 (LIBVTV_CONFIGURE): Move parts to..\n+\t* configure.ac: ...here. Make configure more verbose, re-order.\n+\t* configure: Regenerate.\n+\n 2013-08-02  Caroline Tice  <cmtice@google.com>\n \n \tInitial check-in of new vtable verification feature."}, {"sha": "73acfb4e705f92851921020aecb1b7c67402de97", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -19,7 +19,11 @@\n ## along with this library; see the file COPYING3.  If not see\n ## <http://www.gnu.org/licenses/>.\n \n+if ENABLE_VTABLE_VERIFY\n SUBDIRS = testsuite\n+else\n+SUBDIRS = \n+endif\n \n ACLOCAL_AMFLAGS = -I .. -I ../config\n "}, {"sha": "d321bf1885c3b4adb676c38e1121ece8725dd2f4", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -37,7 +37,7 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n subdir = .\n-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/../depcomp \\\n \t$(am__libvtv_include_HEADERS_DIST)\n@@ -127,7 +127,7 @@ AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n \t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = $(SUBDIRS)\n+DIST_SUBDIRS = testsuite\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n AR = @AR@\n@@ -265,7 +265,8 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n-SUBDIRS = testsuite\n+@ENABLE_VTABLE_VERIFY_FALSE@SUBDIRS = \n+@ENABLE_VTABLE_VERIFY_TRUE@SUBDIRS = testsuite\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n # May be used by toolexeclibdir."}, {"sha": "53e62d24c11ac10e03056c76d1176643f7264bd8", "filename": "libvtv/acinclude.m4", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Facinclude.m4?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -30,17 +30,6 @@ dnl  - lots of tools, like CC and CXX\n dnl\n AC_DEFUN([LIBVTV_CONFIGURE], [\n \n-  # Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n-  AC_ARG_ENABLE(vtable-verify,\n-  [  --enable-vtable-verify    Enable vtable verification feature ],\n-  [case \"$enableval\" in\n-   yes) enable_vtable_verify=yes ;;\n-   no)  enable_vtable_verify=no ;;\n-   *)   enable_vtable_verify=no;;\n-   esac],\n-  [enable_vtable_verify=no])\n-  AM_CONDITIONAL(ENABLE_VTABLE_VERIFY, test $enable_vtable_verify = yes)\n-\n   # These need to be absolute paths, yet at the same time need to\n   # canonicalize only relative paths, because then amd will not unmount\n   # drives. Thus the use of PWDCMD: set it to 'pawd' or 'amq -w' if using amd."}, {"sha": "4386528332145adba3241bb94928b317fcb39521", "filename": "libvtv/configure", "status": "modified", "additions": 75, "deletions": 71, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -602,14 +602,6 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n-VTV_SUPPORTED_FALSE\n-VTV_SUPPORTED_TRUE\n-toplevel_srcdir\n-toplevel_builddir\n-libvtv_srcdir\n-libvtv_builddir\n-ENABLE_VTABLE_VERIFY_FALSE\n-ENABLE_VTABLE_VERIFY_TRUE\n XCFLAGS\n libtool_VERSION\n enable_static\n@@ -661,6 +653,10 @@ CFLAGS\n CC\n toolexeclibdir\n toolexecdir\n+toplevel_srcdir\n+toplevel_builddir\n+libvtv_srcdir\n+libvtv_builddir\n MAINT\n MAINTAINER_MODE_FALSE\n MAINTAINER_MODE_TRUE\n@@ -703,6 +699,8 @@ build_os\n build_vendor\n build_cpu\n build\n+ENABLE_VTABLE_VERIFY_FALSE\n+ENABLE_VTABLE_VERIFY_TRUE\n target_alias\n host_alias\n build_alias\n@@ -745,6 +743,7 @@ ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n enable_version_specific_runtime_libs\n+enable_vtable_verify\n enable_multilib\n enable_maintainer_mode\n enable_dependency_tracking\n@@ -754,7 +753,6 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n-enable_vtable_verify\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1383,6 +1381,7 @@ Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n+  --enable-vtable-verify    Enable vtable verification feature\n   --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n@@ -1393,7 +1392,6 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n-  --enable-vtable-verify    Enable vtable verification feature\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -2254,6 +2252,49 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $version_specific_libs\" >&5\n $as_echo \"$version_specific_libs\" >&6; }\n \n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-vtable-verify\" >&5\n+$as_echo_n \"checking for --enable-vtable-verify... \" >&6; }\n+# Check whether --enable-vtable-verify was given.\n+if test \"${enable_vtable_verify+set}\" = set; then :\n+  enableval=$enable_vtable_verify; case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac\n+else\n+  enable_vtable_verify=no\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_vtable_verify\" >&5\n+$as_echo \"$enable_vtable_verify\" >&6; }\n+\n+# See if supported.\n+unset VTV_SUPPORTED\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for vtable verification\" >&5\n+$as_echo_n \"checking for host support for vtable verification... \" >&6; }\n+. ${srcdir}/configure.tgt\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $VTV_SUPPORTED\" >&5\n+$as_echo \"$VTV_SUPPORTED\" >&6; }\n+\n+# Decide if it's usable.\n+use_vtable_verify=no\n+if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n+  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n+    use_vtable_verify=yes\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: using vtable verification\" >&5\n+$as_echo \"$as_me: using vtable verification\" >&6;}\n+  fi\n+fi\n+ if test $use_vtable_verify = yes; then\n+  ENABLE_VTABLE_VERIFY_TRUE=\n+  ENABLE_VTABLE_VERIFY_FALSE='#'\n+else\n+  ENABLE_VTABLE_VERIFY_TRUE='#'\n+  ENABLE_VTABLE_VERIFY_FALSE=\n+fi\n+\n+\n # Do not delete or change the following two lines.  For why, see\n # http://gcc.gnu.org/ml/libstdc++/2003-07/msg00451.html\n ac_aux_dir=\n@@ -2960,6 +3001,24 @@ fi\n \n \n \n+\n+\n+  # These need to be absolute paths, yet at the same time need to\n+  # canonicalize only relative paths, because then amd will not unmount\n+  # drives. Thus the use of PWDCMD: set it to 'pawd' or 'amq -w' if using amd.\n+  libvtv_builddir=`${PWDCMD-pwd}`\n+  case $srcdir in\n+    \\\\/$* | ?:\\\\/*) libvtv_srcdir=${srcdir} ;;\n+    *) libvtv_srcdir=`cd \"$srcdir\" && ${PWDCMD-pwd} || echo \"$srcdir\"` ;;\n+  esac\n+  toplevel_builddir=${libvtv_builddir}/..\n+  toplevel_srcdir=${libvtv_srcdir}/..\n+\n+\n+\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -11217,7 +11276,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11220 \"configure\"\n+#line 11279 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11323,7 +11382,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11326 \"configure\"\n+#line 11385 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14592,57 +14651,6 @@ else\n   multilib_arg=\n fi\n \n-\n-\n-  # Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n-  # Check whether --enable-vtable-verify was given.\n-if test \"${enable_vtable_verify+set}\" = set; then :\n-  enableval=$enable_vtable_verify; case \"$enableval\" in\n-   yes) enable_vtable_verify=yes ;;\n-   no)  enable_vtable_verify=no ;;\n-   *)   enable_vtable_verify=no;;\n-   esac\n-else\n-  enable_vtable_verify=no\n-fi\n-\n-   if test $enable_vtable_verify = yes; then\n-  ENABLE_VTABLE_VERIFY_TRUE=\n-  ENABLE_VTABLE_VERIFY_FALSE='#'\n-else\n-  ENABLE_VTABLE_VERIFY_TRUE='#'\n-  ENABLE_VTABLE_VERIFY_FALSE=\n-fi\n-\n-\n-  # These need to be absolute paths, yet at the same time need to\n-  # canonicalize only relative paths, because then amd will not unmount\n-  # drives. Thus the use of PWDCMD: set it to 'pawd' or 'amq -w' if using amd.\n-  libvtv_builddir=`${PWDCMD-pwd}`\n-  case $srcdir in\n-    \\\\/$* | ?:\\\\/*) libvtv_srcdir=${srcdir} ;;\n-    *) libvtv_srcdir=`cd \"$srcdir\" && ${PWDCMD-pwd} || echo \"$srcdir\"` ;;\n-  esac\n-  toplevel_builddir=${libvtv_builddir}/..\n-  toplevel_srcdir=${libvtv_srcdir}/..\n-\n-\n-\n-\n-\n-\n-# Get target configury.\n-unset VTV_SUPPORTED\n-. ${srcdir}/configure.tgt\n- if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  VTV_SUPPORTED_TRUE=\n-  VTV_SUPPORTED_FALSE='#'\n-else\n-  VTV_SUPPORTED_TRUE='#'\n-  VTV_SUPPORTED_FALSE=\n-fi\n-\n-\n ac_config_files=\"$ac_config_files Makefile\"\n \n \n@@ -14784,6 +14792,10 @@ LIBOBJS=$ac_libobjs\n LTLIBOBJS=$ac_ltlibobjs\n \n \n+if test -z \"${ENABLE_VTABLE_VERIFY_TRUE}\" && test -z \"${ENABLE_VTABLE_VERIFY_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_VTABLE_VERIFY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n  if test -n \"$EXEEXT\"; then\n   am__EXEEXT_TRUE=\n   am__EXEEXT_FALSE='#'\n@@ -14808,14 +14820,6 @@ if test -z \"${am__fastdepCXX_TRUE}\" && test -z \"${am__fastdepCXX_FALSE}\"; then\n   as_fn_error \"conditional \\\"am__fastdepCXX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${ENABLE_VTABLE_VERIFY_TRUE}\" && test -z \"${ENABLE_VTABLE_VERIFY_FALSE}\"; then\n-  as_fn_error \"conditional \\\"ENABLE_VTABLE_VERIFY\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n-if test -z \"${VTV_SUPPORTED_TRUE}\" && test -z \"${VTV_SUPPORTED_FALSE}\"; then\n-  as_fn_error \"conditional \\\"VTV_SUPPORTED\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_write_fail=0"}, {"sha": "4724312261600bf238be00ee4e72a53dac44d5b9", "filename": "libvtv/configure.ac", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6cb2d1ad3738b66927353ccd557d6be3d32e70/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=0c6cb2d1ad3738b66927353ccd557d6be3d32e70", "patch": "@@ -20,6 +20,34 @@ AC_ARG_ENABLE(version-specific-runtime-libs,\n [version_specific_libs=no])\n AC_MSG_RESULT($version_specific_libs)\n \n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+AC_MSG_CHECKING([for --enable-vtable-verify])\n+AC_ARG_ENABLE(vtable-verify,\n+[  --enable-vtable-verify    Enable vtable verification feature ],\n+[case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac],\n+[enable_vtable_verify=no])\n+AC_MSG_RESULT($enable_vtable_verify)\n+\n+# See if supported.\n+unset VTV_SUPPORTED\n+AC_MSG_CHECKING([for host support for vtable verification])\n+. ${srcdir}/configure.tgt\n+AC_MSG_RESULT($VTV_SUPPORTED)\n+\n+# Decide if it's usable.\n+use_vtable_verify=no\n+if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n+  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n+    use_vtable_verify=yes\n+    AC_MSG_NOTICE(using vtable verification)\n+  fi\n+fi \n+AM_CONDITIONAL(ENABLE_VTABLE_VERIFY, test $use_vtable_verify = yes)\n+\n # Do not delete or change the following two lines.  For why, see\n # http://gcc.gnu.org/ml/libstdc++/2003-07/msg00451.html\n AC_CANONICAL_SYSTEM\n@@ -31,6 +59,8 @@ AM_INIT_AUTOMAKE(foreign no-dist)\n AM_ENABLE_MULTILIB(, ..)\n AM_MAINTAINER_MODE\n \n+LIBVTV_CONFIGURE\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -102,13 +132,6 @@ else\n   multilib_arg=\n fi\n \n-LIBVTV_CONFIGURE\n-\n-# Get target configury.\n-unset VTV_SUPPORTED\n-. ${srcdir}/configure.tgt\n-AM_CONDITIONAL(VTV_SUPPORTED, [test \"x$VTV_SUPPORTED\" = \"xyes\"])\n-\n AC_CONFIG_FILES([Makefile])\n \n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then"}]}