{"sha": "0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNkMTFiNDBjZWNhMDk2ZTI4OGRjNWJiYWZmZWI3NzBkNzBiODhmMw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-04-17T12:36:35Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-04-17T12:36:35Z"}, "message": "remove properties stuff from register_dump_files_1\n\ngcc/\n\t* pass_manager.h (pass_manager::register_dump_files_1): Adjust.\n\t* passes.c (pass_manager::register_dump_files_1): Remove dead code\n\tdealing with properties.\n\t(pass_manager::register_dump_files): Adjust.\n\nFrom-SVN: r209477", "tree": {"sha": "22ce70ba43da7cbe83209f9c17173c3f99889e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22ce70ba43da7cbe83209f9c17173c3f99889e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/comments", "author": null, "committer": null, "parents": [{"sha": "4f148bbc73f5aeb52aec38785263c26811be308d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f148bbc73f5aeb52aec38785263c26811be308d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f148bbc73f5aeb52aec38785263c26811be308d"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "eb9450e55a34594f37e30b6bb334d33f3632c8a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "patch": "@@ -1,3 +1,10 @@\n+2014-04-17  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* pass_manager.h (pass_manager::register_dump_files_1): Adjust.\n+\t* passes.c (pass_manager::register_dump_files_1): Remove dead code\n+\tdealing with properties.\n+\t(pass_manager::register_dump_files): Adjust.\n+\n 2014-03-20  Mark Wielaard  <mjw@redhat.com>\n \n \t* dwarf2out.c (add_bound_info): If HOST_WIDE_INT is big enough,"}, {"sha": "830956794a1e94f12948a3608813190a6ce8a071", "filename": "gcc/pass_manager.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2Fpass_manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2Fpass_manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpass_manager.h?ref=0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "patch": "@@ -91,7 +91,7 @@ class pass_manager\n \n private:\n   void set_pass_for_id (int id, opt_pass *pass);\n-  int register_dump_files_1 (opt_pass *pass, int properties);\n+  void register_dump_files_1 (opt_pass *pass);\n   void register_dump_files (opt_pass *pass, int properties);\n \n private:"}, {"sha": "3f9590a74ecfa6ca5458ce0f16c9769a36ef0553", "filename": "gcc/passes.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11b40ceca096e288dc5bbaffeb770d70b88f3/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "patch": "@@ -708,33 +708,21 @@ pass_manager::register_one_dump_file (opt_pass *pass)\n \n /* Recursive worker function for register_dump_files.  */\n \n-int\n+void\n pass_manager::\n-register_dump_files_1 (opt_pass *pass, int properties)\n+register_dump_files_1 (opt_pass *pass)\n {\n   do\n     {\n-      int new_properties = (properties | pass->properties_provided)\n-\t\t\t   & ~pass->properties_destroyed;\n-\n       if (pass->name && pass->name[0] != '*')\n         register_one_dump_file (pass);\n \n       if (pass->sub)\n-        new_properties = register_dump_files_1 (pass->sub, new_properties);\n-\n-      /* If we have a gate, combine the properties that we could have with\n-         and without the pass being examined.  */\n-      if (pass->has_gate)\n-        properties &= new_properties;\n-      else\n-        properties = new_properties;\n+        register_dump_files_1 (pass->sub);\n \n       pass = pass->next;\n     }\n   while (pass);\n-\n-  return properties;\n }\n \n /* Register the dump files for the pass_manager starting at PASS.\n@@ -746,7 +734,7 @@ pass_manager::\n register_dump_files (opt_pass *pass,int properties)\n {\n   pass->properties_required |= properties;\n-  register_dump_files_1 (pass, properties);\n+  register_dump_files_1 (pass);\n }\n \n struct pass_registry"}]}