{"sha": "5f8ded66289f6f090a2a7960241708990d3da807", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4ZGVkNjYyODlmNmYwOTBhMmE3OTYwMjQxNzA4OTkwZDNkYTgwNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-29T13:41:25Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-29T13:41:25Z"}, "message": "tree.c (tree_code_name): Constify a char*.\n\n\t* tree.c (tree_code_name): Constify a char*.\n\n\t* tree.h (tree_code_name, decl_printable_name): Likewise.\n\n\t* function.h (struct function): Likewise.\n\n\t* toplev.c (decl_name, decl_printable_name): Likewise.\n\n\t* vax/vms.h (MAYBE_VMS_FUNCTION_PROLOGUE): Likewise.\n\n\t* objc/objc-act.c (decl_printable_name): Remove redundant prototype.\n\t(init_objc): Remove function pointer cast.\n\nFrom-SVN: r28966", "tree": {"sha": "271055b104ee1d42602d1a5fcd62c8a6183e3e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/271055b104ee1d42602d1a5fcd62c8a6183e3e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8ded66289f6f090a2a7960241708990d3da807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8ded66289f6f090a2a7960241708990d3da807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8ded66289f6f090a2a7960241708990d3da807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8ded66289f6f090a2a7960241708990d3da807/comments", "author": null, "committer": null, "parents": [{"sha": "31029ad7e8b763f6404f794ef3af6aeefcfb6f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31029ad7e8b763f6404f794ef3af6aeefcfb6f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31029ad7e8b763f6404f794ef3af6aeefcfb6f48"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "f07aec89e4c99952e6d5196d69eb0ea4c06d0cba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -1,3 +1,18 @@\n+Sun Aug 29 09:36:50 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* tree.c (tree_code_name): Constify a char*.\n+\n+\t* tree.h (tree_code_name, decl_printable_name): Likewise.\n+\n+\t* function.h (struct function): Likewise.\n+\n+\t* toplev.c (decl_name, decl_printable_name): Likewise.\n+\n+\t* vax/vms.h (MAYBE_VMS_FUNCTION_PROLOGUE): Likewise.\n+\n+\t* objc/objc-act.c (decl_printable_name): Remove redundant prototype.\n+\t(init_objc): Remove function pointer cast.\n+\n Sun Aug 29 05:01:17 1999  John David Anglin <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.md (interspace_jump): New pattern."}, {"sha": "1f84f63a2e8386339712460386f409af5e546268", "filename": "gcc/config/vax/vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Fconfig%2Fvax%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Fconfig%2Fvax%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvms.h?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -94,7 +94,7 @@ Boston, MA 02111-1307, USA.  */\n  * setting of -4 will end up adding them right back again, but don't bother.\n  */\n #define MAYBE_VMS_FUNCTION_PROLOGUE(FILE)\t\\\n-{ char *p = current_function_name;\t\t\\\n+{ const char *p = current_function_name;\t\\\n   int is_main = strcmp (\"main\", p) == 0;\t\\\n   while (!is_main && *p != '\\0')\t\t\\\n     {\t\t\t\t\t\t\\"}, {"sha": "86d2c3cf9f0669c72251f38a3952381b5c3e9131", "filename": "gcc/function.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -186,7 +186,7 @@ struct function\n   /* For function.c.  */\n \n   /* Name of this function.  */\n-  char *name;\n+  const char *name;\n   /* Points to the FUNCTION_DECL of this function. */\n   tree decl;\n \n@@ -280,7 +280,7 @@ struct function\n \n   /* Language-specific reason why the current function cannot be made\n      inline.  */\n-  char *cannot_inline;\n+  const char *cannot_inline;\n \n   /* Nonzero if instrumentation calls for function entry and exit should be\n      generated.  */"}, {"sha": "725959589e3fa61d347ba5f226b9294fde90b92f", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -203,9 +203,6 @@ static int check_methods_accessible\t\tPROTO((tree, tree,\n static void encode_aggregate_within\t\tPROTO((tree, int, int,\n \t\t\t\t\t               int, int));\n \n-/* We handle printing method names ourselves for ObjC */\n-extern char *(*decl_printable_name) ();\n-\n /* Misc. bookkeeping */\n \n typedef struct hashed_entry \t*hash;\n@@ -8213,7 +8210,7 @@ init_objc ()\n   synth_module_prologue ();\n \n   /* Change the default error function */\n-  decl_printable_name = (char* (*)()) objc_printable_name;\n+  decl_printable_name = objc_printable_name;\n }\n \f\n static void"}, {"sha": "c6cac416790d323eb85270a7c70680bd2fd569be", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -183,7 +183,7 @@ void pedwarn_with_file_and_line PVPROTO((const char *file,\n \t\t\t\t\t int line, const char *s, ...));\n void sorry PVPROTO((const char *s, ...));\n static void set_target_switch PROTO((const char *));\n-static char *decl_name PROTO((tree, int));\n+static const char *decl_name PROTO((tree, int));\n static void vmessage PROTO((const char *, const char *, va_list));\n static void v_message_with_file_and_line PROTO((const char *, int, int,\n \t\t\t\t\t\tconst char *, va_list));\n@@ -359,7 +359,7 @@ int sorrycount = 0;\n      2: and any other information that might be interesting, such as function\n         parameter types in C++.  */\n \n-char *(*decl_printable_name)\t\tPROTO ((tree, int));\n+const char *(*decl_printable_name)\tPROTO ((tree, int));\n \n /* Pointer to function to compute rtl for a language-specific tree code.  */\n \n@@ -1455,7 +1455,7 @@ fatal_io_error (name)\n \n /* This is the default decl_printable_name function.  */\n \n-static char *\n+static const char *\n decl_name (decl, verbosity)\n      tree decl;\n      int verbosity ATTRIBUTE_UNUSED;"}, {"sha": "c9abd06ffda40aadb5e7571a5396b35f0a0b56ab", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -193,7 +193,7 @@ int tree_code_length[MAX_TREE_CODES] = {\n    Used for printing out the tree and error messages.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LEN) NAME,\n \n-char *tree_code_name[MAX_TREE_CODES] = {\n+const char *tree_code_name[MAX_TREE_CODES] = {\n #include \"tree.def\"\n };\n #undef DEFTREECODE"}, {"sha": "bd9b34df035a3f095d031b65f3f1160bac91eff3", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8ded66289f6f090a2a7960241708990d3da807/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5f8ded66289f6f090a2a7960241708990d3da807", "patch": "@@ -63,7 +63,7 @@ extern int tree_code_length[MAX_TREE_CODES];\n \n /* Names of tree components.  */\n \n-extern char *tree_code_name[MAX_TREE_CODES];\n+extern const char *tree_code_name[MAX_TREE_CODES];\n \f\n /* Codes that identify the various built in functions\n    so that expand_call can identify them quickly.  */\n@@ -1928,7 +1928,7 @@ extern int all_types_permanent;\n      2: and any other information that might be interesting, such as function\n         parameter types in C++.  */\n \n-extern char *(*decl_printable_name)\t\tPROTO((tree, int));\n+extern const char *(*decl_printable_name)\tPROTO((tree, int));\n \n /* Pointer to function to finish handling an incomplete decl at the\n    end of compilation.  */"}]}