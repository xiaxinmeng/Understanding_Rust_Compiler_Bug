{"sha": "bebf94afe55f257942ca4bd378b4006f1f17a0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViZjk0YWZlNTVmMjU3OTQyY2E0YmQzNzhiNDAwNmYxZjE3YTBjOA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-01-10T18:45:38Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-01-10T18:45:38Z"}, "message": "re PR fortran/86322 (ICE in reference_record with data statement)\n\n2019-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/86322\n\t* decl.c (top_var_list): Set locus of expr.\n\t(gfc_match_data): Detect pointer on non-rightmost part-refs.\n\n2019-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/86322\n\t* gfortran.dg/pr86322_1.f90: New test.\n\t* gfortran.dg/pr86322_2.f90: Ditto.\n\t* gfortran.dg/pr86322_3.f90: Ditto.\n\nFrom-SVN: r267820", "tree": {"sha": "edc2cc445b82581019c86417e1883a4ceb9bedb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc2cc445b82581019c86417e1883a4ceb9bedb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebf94afe55f257942ca4bd378b4006f1f17a0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebf94afe55f257942ca4bd378b4006f1f17a0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebf94afe55f257942ca4bd378b4006f1f17a0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebf94afe55f257942ca4bd378b4006f1f17a0c8/comments", "author": null, "committer": null, "parents": [{"sha": "8b530f81133e4dd8f9a4aa8057f7bcc54845c9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b530f81133e4dd8f9a4aa8057f7bcc54845c9ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b530f81133e4dd8f9a4aa8057f7bcc54845c9ef"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "678970b4621efa74de75d6f1cd1823737b3b4ee6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -1,3 +1,9 @@\n+2019-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/86322\n+\t* decl.c (top_var_list): Set locus of expr.\n+\t(gfc_match_data): Detect pointer on non-rightmost part-refs.\n+\n 2019-01-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88376"}, {"sha": "e5bfc3bd5a4d5597524485566c4f497a7c1adc7e", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -337,6 +337,8 @@ top_var_list (gfc_data *d)\n \n       new_var = gfc_get_data_variable ();\n       *new_var = var;\n+      if (new_var->expr)\n+\tnew_var->expr->where = gfc_current_locus;\n \n       if (tail == NULL)\n \td->var = new_var;\n@@ -597,6 +599,7 @@ gfc_match_data (void)\n {\n   gfc_data *new_data;\n   gfc_expr *e;\n+  gfc_ref *ref;\n   match m;\n \n   /* Before parsing the rest of a DATA statement, check F2008:c1206.  */\n@@ -641,7 +644,7 @@ gfc_match_data (void)\n \t  bool invalid;\n \n \t  invalid = false;\n-\t  for (gfc_ref *ref = e->ref; ref; ref = ref->next)\n+\t  for (ref = e->ref; ref; ref = ref->next)\n \t    if ((ref->type == REF_COMPONENT\n \t\t && ref->u.c.component->attr.allocatable)\n \t\t|| (ref->type == REF_ARRAY\n@@ -655,6 +658,21 @@ gfc_match_data (void)\n \t\t\t \"near %C in DATA statement\");\n \t      goto cleanup;\n \t    }\n+\n+\t  /* F2008:C567 (R536) A data-i-do-object or a variable that appears\n+\t     as a data-stmt-object shall not be an object designator in which\n+\t     a pointer appears other than as the entire rightmost part-ref.  */\n+\t  ref = e->ref;\n+\t  if (e->symtree->n.sym->ts.type == BT_DERIVED\n+\t      && e->symtree->n.sym->attr.pointer\n+\t      && ref->type == REF_COMPONENT)\n+\t    goto partref;\n+\n+\t  for (; ref; ref = ref->next)\n+\t    if (ref->type == REF_COMPONENT\n+\t\t&& ref->u.c.component->attr.pointer\n+\t\t&& ref->next)\n+\t      goto partref;\n \t}\n \n       m = top_val_list (new_data);\n@@ -681,6 +699,12 @@ gfc_match_data (void)\n \n   return MATCH_YES;\n \n+partref:\n+\n+  gfc_error (\"part-ref with pointer attribute near %L is not \"\n+\t     \"rightmost part-ref of data-stmt-object\",\n+\t     &e->where);\n+\n cleanup:\n   set_in_match_data (false);\n   gfc_free_data (new_data);"}, {"sha": "157c37db2ec202b491f302f8eebe8a77e669b6f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -1,3 +1,10 @@\n+2019-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/86322\n+\t* gfortran.dg/pr86322_1.f90: New test.\n+\t* gfortran.dg/pr86322_2.f90: Ditto.\n+\t* gfortran.dg/pr86322_3.f90: Ditto.\n+\n 2019-01-10  Sudakshina Das  <sudi.das@arm.com>\n \n \t* gcc.target/aarch64/bti-1.c: Exempt for ilp32."}, {"sha": "48079ac7ecca5287590f49ad1174d2d00b7cb74e", "filename": "gcc/testsuite/gfortran.dg/pr86322_1.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_1.f90?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+program foo\n+   implicit none\n+   type a\n+      integer i\n+   end type a\n+   type(a), target, save :: b\n+   type(a), pointer :: c\n+   data b%i /42/\n+   data c%i /b%i/          ! { dg-error \"is not rightmost part-ref\" }\n+   if (c%i == 42) c%i = 1  ! Unreachable\n+end program foo"}, {"sha": "fec17dbba60be7003cdd00e18224407455a4c5c0", "filename": "gcc/testsuite/gfortran.dg/pr86322_2.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_2.f90?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+program bar\n+   type a\n+     integer :: i\n+   end type a\n+   type b\n+     type(a),pointer :: j\n+   end type b\n+   integer, target, save :: k = 42\n+   type(b) x\n+   data x%j%i/k/  ! { dg-error \"is not rightmost part-ref\" }\n+   print *, x%j%i\n+end program bar"}, {"sha": "0bcb5fc63700117f87e7ebe7e32ec09286ea6d82", "filename": "gcc/testsuite/gfortran.dg/pr86322_3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebf94afe55f257942ca4bd378b4006f1f17a0c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr86322_3.f90?ref=bebf94afe55f257942ca4bd378b4006f1f17a0c8", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+program bar\n+   type a\n+     integer, pointer :: i\n+   end type a\n+   type b\n+     type(a) :: j\n+   end type b\n+   integer, target, save :: k = 42\n+   type(b) x\n+   data x%j%i/k/\n+   if (x%j%i /= 42) stop 1\n+end program bar"}]}