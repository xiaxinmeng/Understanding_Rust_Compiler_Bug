{"sha": "bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiNjNlYjJjYmQzY2FmMjEyYjljZjQyZDhjMjE4YzA5ZGM2ZmY4Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-05-22T14:37:06Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-05-22T14:37:06Z"}, "message": "Avoid streaming stray references.\n\nthis patch avoids stremaing completely useless stray references to gobal decl\nstream.  I am re-testing the patch (rebased to current tree) on x86_64-linux\nand intend to commit once testing finishes.\n\ngcc/ChangeLog:\n\n2020-05-22  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* lto-streamer-out.c (lto_output_tree): Do not stream final ref if\n\tit is not needed.\n\ngcc/lto/ChangeLog:\n\n2020-05-22  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* lto-common.c (lto_read_decls): Do not skip stray refs.", "tree": {"sha": "a533824ecaf664934915b8534378801b2da04ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a533824ecaf664934915b8534378801b2da04ba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/comments", "author": null, "committer": null, "parents": [{"sha": "098ba49c7cd4d3f6202b6472aec8c33b68bbada7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/098ba49c7cd4d3f6202b6472aec8c33b68bbada7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/098ba49c7cd4d3f6202b6472aec8c33b68bbada7"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "cef15b093149c0ed62445822353ce2b5c0ed5afc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "patch": "@@ -1,3 +1,8 @@\n+2020-05-22  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer-out.c (lto_output_tree): Do not stream final ref if\n+\tit is not needed.\n+\n 2020-05-22  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-section-out.c (lto_output_decl_index): Adjust dump indentation."}, {"sha": "5ff7f33bfb14cd46eae50a0443003e02e39e7c02", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "patch": "@@ -1780,7 +1780,7 @@ lto_output_tree (struct output_block *ob, tree expr,\n \t it.  */\n       if (!existed_p)\n \tlto_output_tree_1 (ob, expr, 0, ref_p, this_ref_p);\n-      else\n+      else if (this_ref_p)\n \t{\n \t  if (streamer_dump_file)\n \t    {"}, {"sha": "047afbafc80ecc21c5b70b602c47c557355e0f0e", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "patch": "@@ -1,3 +1,7 @@\n+2020-05-22  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-common.c (lto_read_decls): Do not skip stray refs.\n+\n 2020-05-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-common.c (compare_tree_sccs_1): Sanity check that we never"}, {"sha": "3ea1894ce96edbedbe2bfc3a3b2e00b7d15f2d4b", "filename": "gcc/lto/lto-common.c", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto%2Flto-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b/gcc%2Flto%2Flto-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-common.c?ref=bcb63eb2cbd3caf212b9cf42d8c218c09dc6ff8b", "patch": "@@ -1955,25 +1955,19 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n       else\n \t{\n \t  t = lto_input_tree_1 (&ib_main, data_in, tag, 0);\n-\t  /* We streamed in new tree.  Add it to cache and process dref.  */\n-\t  if (data_in->reader_cache->nodes.length () == from + 1)\n+\t  gcc_assert (data_in->reader_cache->nodes.length () == from + 1);\n+\t  num_unshared_trees_read++;\n+\t  data_in->location_cache.accept_location_cache ();\n+\t  process_dref (data_in, t, from);\n+\t  if (TREE_CODE (t) == IDENTIFIER_NODE\n+\t      || (TREE_CODE (t) == INTEGER_CST\n+\t\t  && !TREE_OVERFLOW (t)))\n+\t    ;\n+\t  else\n \t    {\n-\t      num_unshared_trees_read++;\n-\t      data_in->location_cache.accept_location_cache ();\n-\t      process_dref (data_in, t, from);\n-\t      if (TREE_CODE (t) == IDENTIFIER_NODE\n-\t\t  || (TREE_CODE (t) == INTEGER_CST\n-\t\t      && !TREE_OVERFLOW (t)))\n-\t\t;\n-\t      else\n-\t\t{\n-\t\t  lto_maybe_register_decl (data_in, t, from);\n-\t\t  process_new_tree (t, &hm, from, &total, data_in);\n-\t\t}\n+\t      lto_maybe_register_decl (data_in, t, from);\n+\t      process_new_tree (t, &hm, from, &total, data_in);\n \t    }\n-\t  else\n-\t    /* FIXME: It seems useless to pickle stray references.  */\n-\t    gcc_assert (data_in->reader_cache->nodes.length () == from);\n \t}\n     }\n "}]}