{"sha": "3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M0ZmE4YTg1NjJkMzc4OGJiNzYzY2E1YzhmYjE1NjNiOGQ0ZWIxYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-11-13T14:12:58Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-11-13T14:12:58Z"}, "message": "Add a few missing checks that IPA_NODE_REF is not NULL (PR 92454)\n\n2019-11-13  Jan Hubicka  <hubicka@ucw.cz>\n\t    Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/92454\n\t* ipa-cp.c (spread_undeadness): Check that IPA_NODE_REF exists.\n\t(identify_dead_nodes): Likewise.\n\n\ttestsuite/\n\t* g++.dg/ipa/pr92454.C: New test.\n\nFrom-SVN: r278142", "tree": {"sha": "11dab553096d09c1384c5f74989cbf201c06130a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11dab553096d09c1384c5f74989cbf201c06130a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/comments", "author": null, "committer": null, "parents": [{"sha": "a5e2beb9474fc0bd4210926d75ec1101a3f11412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e2beb9474fc0bd4210926d75ec1101a3f11412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e2beb9474fc0bd4210926d75ec1101a3f11412"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "05046e6b1b14e42698300665150d66c6a77920e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "patch": "@@ -1,3 +1,10 @@\n+2019-11-13  Jan Hubicka  <hubicka@ucw.cz>\n+\t    Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/92454\n+\t* ipa-cp.c (spread_undeadness): Check that IPA_NODE_REF exists.\n+\t(identify_dead_nodes): Likewise.\n+\n 2019-11-13  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.c (sem_function::equals_private): Do not overuse"}, {"sha": "207d7c88bbdbda8070ccc881bed6ba64a1984c4f", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "patch": "@@ -4979,7 +4979,7 @@ spread_undeadness (struct cgraph_node *node)\n \tcallee = cs->callee->function_symbol (NULL);\n \tinfo = IPA_NODE_REF (callee);\n \n-\tif (info->node_dead)\n+\tif (info && info->node_dead)\n \t  {\n \t    info->node_dead = 0;\n \t    spread_undeadness (callee);\n@@ -5017,18 +5017,19 @@ identify_dead_nodes (struct cgraph_node *node)\n   struct cgraph_node *v;\n   for (v = node; v; v = ((struct ipa_dfs_info *) v->aux)->next_cycle)\n     if (v->local\n+\t&& IPA_NODE_REF (v)\n \t&& !v->call_for_symbol_thunks_and_aliases\n \t     (has_undead_caller_from_outside_scc_p, NULL, true))\n       IPA_NODE_REF (v)->node_dead = 1;\n \n   for (v = node; v; v = ((struct ipa_dfs_info *) v->aux)->next_cycle)\n-    if (!IPA_NODE_REF (v)->node_dead)\n+    if (IPA_NODE_REF (v) && !IPA_NODE_REF (v)->node_dead)\n       spread_undeadness (v);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       for (v = node; v; v = ((struct ipa_dfs_info *) v->aux)->next_cycle)\n-\tif (IPA_NODE_REF (v)->node_dead)\n+\tif (IPA_NODE_REF (v) && IPA_NODE_REF (v)->node_dead)\n \t  fprintf (dump_file, \"  Marking node as dead: %s.\\n\", v->dump_name ());\n     }\n }"}, {"sha": "23ad51b785c277e4abc2036eb795c5dabc0734a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "patch": "@@ -1,3 +1,9 @@\n+2019-11-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/92454\n+\t* ipa-cp.c (spread_undeadness): Check that IPA_NODE_REF exists.\n+\t(identify_dead_nodes): Likewise.\n+\n 2019-11-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/ipa-icf-39.c: Update -fdbg-cnt to the new format."}, {"sha": "de67c66aed0da1298d5267c9a2a0645ad7cfda0f", "filename": "gcc/testsuite/g++.dg/ipa/pr92454.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr92454.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr92454.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr92454.C?ref=3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "patch": "@@ -0,0 +1,38 @@\n+/* Originally PR ipa/91969, options adjusted for PR ipa/92454 */\n+/* { dg-options \"-O3 --param ipa-cp-eval-threshold=1\" } */\n+\n+enum by\n+{\n+};\n+class A\n+{\n+public:\n+  class B\n+  {\n+  public:\n+    virtual void m_fn2 (by) = 0;\n+  };\n+  virtual int m_fn1 ();\n+  B *cf;\n+};\n+by a;\n+class C : A, A::B\n+{\n+  void m_fn2 (by);\n+};\n+void C::m_fn2 (by) { cf->m_fn2 (a); }\n+\n+struct a\n+{\n+  virtual ~a ();\n+};\n+\n+struct b\n+{\n+  virtual void d (...);\n+};\n+\n+struct c : a, b\n+{\n+  void d (...) {}\n+};"}]}