{"sha": "89d3d605c34442ebf2717b8c100619bae7401ef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlkM2Q2MDVjMzQ0NDJlYmYyNzE3YjhjMTAwNjE5YmFlNzQwMWVmOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-11-07T17:05:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-11-07T17:05:18Z"}, "message": "invoke.texi (-fisolate-erroneous-paths): Document.\n\n\t* doc/invoke.texi (-fisolate-erroneous-paths): Document.\n\n\t* gimple-ssa-isolate-paths.c (gate_isolate_erroneous_paths):\n\tNo longer check if we have __builtin_trap, assume it's\n\tavailable.\n\njava/\n\n\t* builtins.c (initialize_builtins): Provide __builtin_trap.\n\nFrom-SVN: r204533", "tree": {"sha": "770f9cee195abca294604d749c64b58f1be278a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/770f9cee195abca294604d749c64b58f1be278a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d3d605c34442ebf2717b8c100619bae7401ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d3d605c34442ebf2717b8c100619bae7401ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d3d605c34442ebf2717b8c100619bae7401ef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d3d605c34442ebf2717b8c100619bae7401ef9/comments", "author": null, "committer": null, "parents": [{"sha": "0d40ed4302f4b4716b68d1e125c223b248121037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d40ed4302f4b4716b68d1e125c223b248121037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d40ed4302f4b4716b68d1e125c223b248121037"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "43ae4ea3b220247ac553fc7a90d274c88829fb3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89d3d605c34442ebf2717b8c100619bae7401ef9", "patch": "@@ -1,3 +1,11 @@\n+2013-11-07  Jeff Law  <law@redhat.com>\n+\n+\t* doc/invoke.texi (-fisolate-erroneous-paths): Document.\n+\n+\t* gimple-ssa-isolate-paths.c (gate_isolate_erroneous_paths):\n+\tNo longer check if we have __builtin_trap, assume it's\n+\tavailable.\n+\n 2013-11-07  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* doc/sourcebuild.texi (Top Level) <lto-plugin>: GNU ld can use"}, {"sha": "25e3eb59e6fc93bb111ddfdeba57a477d1af6271", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=89d3d605c34442ebf2717b8c100619bae7401ef9", "patch": "@@ -377,6 +377,7 @@ Objective-C and Objective-C++ Dialects}.\n -fira-region=@var{region} -fira-hoist-pressure @gol\n -fira-loop-pressure -fno-ira-share-save-slots @gol\n -fno-ira-share-spill-slots -fira-verbose=@var{n} @gol\n+-fisolate-erroneous-paths\n -fivopts -fkeep-inline-functions -fkeep-static-consts -flive-range-shrinkage @gol\n -floop-block -floop-interchange -floop-strip-mine -floop-nest-optimize @gol\n -floop-parallelize-all -flto -flto-compression-level @gol\n@@ -6742,6 +6743,7 @@ also turns on the following optimization flags:\n -finline-small-functions @gol\n -findirect-inlining @gol\n -fipa-sra @gol\n+-fisolate-erroneous-paths @gol\n -foptimize-sibling-calls @gol\n -fpartial-inlining @gol\n -fpeephole2 @gol\n@@ -7635,6 +7637,11 @@ it may significantly increase code size\n (see @option{--param ipcp-unit-growth=@var{value}}).\n This flag is enabled by default at @option{-O3}.\n \n+@item -fisolate-erroneous-paths\n+Detect paths which trigger erroneous or undefined behaviour.  Isolate those\n+paths from the main control flow and turn the statement with erroneous or\n+undefined behaviour into a trap.\n+\n @item -ftree-sink\n @opindex ftree-sink\n Perform forward store motion  on trees.  This flag is"}, {"sha": "983ed4d7602bd84a42d351e3709724e3b493cb5b", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=89d3d605c34442ebf2717b8c100619bae7401ef9", "patch": "@@ -283,8 +283,7 @@ gate_isolate_erroneous_paths (void)\n {\n   /* If we do not have a suitable builtin function for the trap statement,\n      then do not perform the optimization.  */\n-  return (flag_isolate_erroneous_paths != 0\n-\t  && builtin_decl_explicit (BUILT_IN_TRAP) != NULL);\n+  return (flag_isolate_erroneous_paths != 0);\n }\n \n namespace {"}, {"sha": "4cb9e461a40032f3776706003f252439c79a9b8e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=89d3d605c34442ebf2717b8c100619bae7401ef9", "patch": "@@ -1,3 +1,7 @@\n+2013-11-07  Jeff Law  <law@redhat.com>\n+\n+\t* builtins.c (initialize_builtins): Provide __builtin_trap.\n+\n 2013-10-29  David Malcolm  <dmalcolm@redhat.com>\n \n \tPatch autogenerated by refactor_symtab.py from"}, {"sha": "c05543782ae99a64a1d6e6e78fb83fecdb516712", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d3d605c34442ebf2717b8c100619bae7401ef9/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=89d3d605c34442ebf2717b8c100619bae7401ef9", "patch": "@@ -579,7 +579,9 @@ initialize_builtins (void)\n   define_builtin (BUILT_IN_RETURN_ADDRESS, \"__builtin_return_address\",\n \t\t  build_function_type_list (ptr_type_node, int_type_node, NULL_TREE),\n \t\t  \"__builtin_return_address\", ECF_NOTHROW | ECF_LEAF);\n-\n+  define_builtin (BUILT_IN_TRAP, \"__builtin_trap\",\n+\t\t  build_function_type_list (void_type_node, NULL_TREE),\n+\t\t  \"__builtin_trap\", ECF_NOTHROW | ECF_LEAF | ECF_NORETURN);\n   build_common_builtin_nodes ();\n }\n "}]}