{"sha": "77d372abec0fbf2cfe922e3140ee3410248f979e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdkMzcyYWJlYzBmYmYyY2ZlOTIyZTMxNDBlZTM0MTAyNDhmOTc5ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-14T13:56:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-14T15:42:47Z"}, "message": "x86: Error on -fcf-protection with incompatible target\n\n-fcf-protection with CF_BRANCH inserts ENDBR32 at function entries.\nENDBR32 is NOP only on 64-bit processors and 32-bit TARGET_CMOV\nprocessors.  Issue an error for -fcf-protection with CF_BRANCH when\ncompiling for 32-bit non-TARGET_CMOV targets.\n\ngcc/\n\n\tPR target/98667\n\t* config/i386/i386-options.c (ix86_option_override_internal):\n\tIssue an error for -fcf-protection with CF_BRANCH when compiling\n\tfor 32-bit non-TARGET_CMOV targets.\n\ngcc/testsuite/\n\n\tPR target/98667\n\t* gcc.target/i386/pr98667-1.c: New file.\n\t* gcc.target/i386/pr98667-2.c: Likewise.\n\t* gcc.target/i386/pr98667-3.c: Likewise.", "tree": {"sha": "b343dabd8ebc7c2b099217466f56126694a96775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b343dabd8ebc7c2b099217466f56126694a96775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77d372abec0fbf2cfe922e3140ee3410248f979e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d372abec0fbf2cfe922e3140ee3410248f979e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d372abec0fbf2cfe922e3140ee3410248f979e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d372abec0fbf2cfe922e3140ee3410248f979e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ebdd53534db25401473db5f6a0ad30f41410241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebdd53534db25401473db5f6a0ad30f41410241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ebdd53534db25401473db5f6a0ad30f41410241"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "a70f6edf7b0bfa6994db372c2507dbacb5526646", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=77d372abec0fbf2cfe922e3140ee3410248f979e", "patch": "@@ -3014,8 +3014,14 @@ ix86_option_override_internal (bool main_args_p,\n     }\n \n   if (opts->x_flag_cf_protection != CF_NONE)\n-    opts->x_flag_cf_protection\n+    {\n+      if ((opts->x_flag_cf_protection & CF_BRANCH) == CF_BRANCH\n+\t  && !TARGET_64BIT && !TARGET_CMOV)\n+\terror (\"%<-fcf-protection%> is not compatible with this target\");\n+\n+      opts->x_flag_cf_protection\n       = (cf_protection_level) (opts->x_flag_cf_protection | CF_SET);\n+    }\n \n   if (ix86_tune_features [X86_TUNE_AVOID_256FMA_CHAINS])\n     SET_OPTION_IF_UNSET (opts, opts_set, param_avoid_fma_max_bits, 256);"}, {"sha": "5bf0c9285a8872a7c3e6c95bc7509bc1b7c12ef4", "filename": "gcc/testsuite/gcc.target/i386/pr98667-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-1.c?ref=77d372abec0fbf2cfe922e3140ee3410248f979e", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -fcf-protection -march=i486\" } */\n+\n+void\n+test (void)\n+{\n+}\n+\n+/* { dg-error \"'-fcf-protection' is not compatible with this target\" \"\" { target *-*-* } 0 } */"}, {"sha": "bc3a78c96419ae324f4dee83a3d0183a1e4c1b50", "filename": "gcc/testsuite/gcc.target/i386/pr98667-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-2.c?ref=77d372abec0fbf2cfe922e3140ee3410248f979e", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -fcf-protection=branch -march=i486\" } */\n+\n+void\n+test (void)\n+{\n+}\n+\n+/* { dg-error \"'-fcf-protection' is not compatible with this target\" \"\" { target *-*-* } 0 } */"}, {"sha": "a6ea6d04331c4d91fc38a41abad7429e2c5741c7", "filename": "gcc/testsuite/gcc.target/i386/pr98667-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d372abec0fbf2cfe922e3140ee3410248f979e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98667-3.c?ref=77d372abec0fbf2cfe922e3140ee3410248f979e", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -fcf-protection=return -march=i486\" } */\n+\n+void\n+test (void)\n+{\n+}"}]}