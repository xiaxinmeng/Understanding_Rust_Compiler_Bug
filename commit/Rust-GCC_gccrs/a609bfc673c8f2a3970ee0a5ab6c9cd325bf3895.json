{"sha": "a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYwOWJmYzY3M2M4ZjJhMzk3MGVlMGE1YWI2YzljZDMyNWJmMzg5NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-23T07:17:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-23T07:17:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r576", "tree": {"sha": "adae993f008509a9946edb4e8a6d081f7619d0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adae993f008509a9946edb4e8a6d081f7619d0b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895/comments", "author": null, "committer": null, "parents": [{"sha": "55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "29d947b79b8a285363dbe454ec8d0f9320cb2228", "filename": "gcc/protoize.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=a609bfc673c8f2a3970ee0a5ab6c9cd325bf3895", "patch": "@@ -66,6 +66,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #endif\n #include <setjmp.h>\n #include \"gvarargs.h\"\n+\n+/* Include getopt.h for the sake of getopt_long.\n+   We don't need the declaration of getopt, and it could conflict\n+   with something from a system header file, so effectively nullify that.  */\n+#define getopt getopt_loser\n #include \"getopt.h\"\n \n extern int errno;\n@@ -2516,7 +2521,11 @@ find_extern_def (head, user)\n                 strcpy (needed, user->ansi_decl);\n                 p = (NONCONST char *) substr (needed, user->hash_entry->symbol)\n                     + strlen (user->hash_entry->symbol) + 2;\n-                strcpy (p, \"??\\?);\");\n+\t\t/* Avoid having ??? in the string.  */\n+\t\t*p++ = '?';\n+\t\t*p++ = '?';\n+\t\t*p++ = '?';\n+                strcpy (p, \");\");\n \n                 fprintf (stderr, \"%s: %d: `%s' used but missing from SYSCALLS\\n\",\n \t\t\t shortpath (NULL, file), user->line,\n@@ -4387,6 +4396,7 @@ main (argc, argv)\n {\n   int longind;\n   int c;\n+  char *params = \"\";\n \n   pname = strrchr (argv[0], '/');\n   pname = pname ? pname+1 : argv[0];\n@@ -4447,7 +4457,7 @@ main (argc, argv)\n \t  keep_flag = 1;\n \t  break;\n \tcase 'c':\n-\t  munge_compile_params (optarg);\n+\t  params = optarg;\n \t  break;\n #ifdef UNPROTOIZE\n \tcase 'i':\n@@ -4472,6 +4482,9 @@ main (argc, argv)\n \t}\n     }\n  \n+  /* Set up compile_params based on -p and -c options.  */\n+  munge_compile_params (params);\n+\n   n_base_source_files = argc - optind;\n \n   /* Now actually make a list of the base source filenames.  */"}]}