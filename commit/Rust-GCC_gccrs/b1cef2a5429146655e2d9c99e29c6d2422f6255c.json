{"sha": "b1cef2a5429146655e2d9c99e29c6d2422f6255c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjZWYyYTU0MjkxNDY2NTVlMmQ5Yzk5ZTI5YzZkMjQyMmY2MjU1Yw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2012-02-15T16:41:25Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2012-02-15T16:41:25Z"}, "message": "extend.texi: Reserve upper bits of memory model for future use.\n\n\n2012-02-15  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* extend.texi: Reserve upper bits of memory model for future use.\n\nFrom-SVN: r184277", "tree": {"sha": "1b7db5948ca0e17d1b685f670d43116a354afa73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b7db5948ca0e17d1b685f670d43116a354afa73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1cef2a5429146655e2d9c99e29c6d2422f6255c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cef2a5429146655e2d9c99e29c6d2422f6255c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cef2a5429146655e2d9c99e29c6d2422f6255c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cef2a5429146655e2d9c99e29c6d2422f6255c/comments", "author": null, "committer": null, "parents": [{"sha": "adc44a79d6ff71f2c5d504bded1985f8899165b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc44a79d6ff71f2c5d504bded1985f8899165b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc44a79d6ff71f2c5d504bded1985f8899165b3"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "9d860de0124463354e0ecc03915c761e401188b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cef2a5429146655e2d9c99e29c6d2422f6255c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cef2a5429146655e2d9c99e29c6d2422f6255c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1cef2a5429146655e2d9c99e29c6d2422f6255c", "patch": "@@ -1,3 +1,7 @@\n+2012-02-15  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* extend.texi: Reserve upper bits of memory model for future use.\n+\n 2012-01-15  Georg-Johann Lay  <avr@gjlay.de>\n \t    Anatoly Sokolov <aesok@post.ru>\n \t    Eric Weddington <eric.weddington@atmel.com>"}, {"sha": "e4d17cf48ffb83b5d5dfc01e59dc8f6e58a9b05d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cef2a5429146655e2d9c99e29c6d2422f6255c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cef2a5429146655e2d9c99e29c6d2422f6255c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=b1cef2a5429146655e2d9c99e29c6d2422f6255c", "patch": "@@ -7092,6 +7092,11 @@ functions will map any runtime value to @code{__ATOMIC_SEQ_CST} rather\n than invoke a runtime library call or inline a switch statement.  This is\n standard compliant, safe, and the simplest approach for now.\n \n+The memory model parameter is a signed int, but only the lower 8 bits are\n+reserved for the memory model.  The remainder of the signed int is reserved\n+for future use and should be 0.  Use of the predefined atomic values will\n+ensure proper usage.\n+\n @deftypefn {Built-in Function} @var{type} __atomic_load_n (@var{type} *ptr, int memmodel)\n This built-in function implements an atomic load operation.  It returns the\n contents of @code{*@var{ptr}}."}]}