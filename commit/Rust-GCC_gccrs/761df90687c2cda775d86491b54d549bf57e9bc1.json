{"sha": "761df90687c2cda775d86491b54d549bf57e9bc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYxZGY5MDY4N2MyY2RhNzc1ZDg2NDkxYjU0ZDU0OWJmNTdlOWJjMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-22T19:55:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-22T19:55:38Z"}, "message": "Implement P1902R1, Missing feature-test macros 2017-2019.\n\n\t* c-cppbuiltin.c (c_cpp_builtins): Bump __cpp_init_captures\n\tand __cpp_generic_lambdas for -std=c++2a.  Define\n\t__cpp_designated_initializers, __cpp_constexpr_in_decltype and\n\t__cpp_consteval for -std=c++2a.  Remove a FIXME comment about\n\t__cpp_concepts for -std=c++2a.\n\n\t* g++.dg/cpp1z/feat-cxx1z.C: Only compile with -std=c++17.\n\t* g++.dg/cpp2a/feat-cxx2a.C: Adjust for P1902R1 changes.\n\t* g++.dg/cpp2a/desig15.C: New test.\n\t* g++.dg/cpp2a/lambda-pack-init3.C: New test.\n\t* g++.dg/cpp2a/lambda-generic6.C: New test.\n\t* g++.dg/cpp2a/consteval15.C: New test.\n\nFrom-SVN: r278628", "tree": {"sha": "1b208626f9aea40ce8582b769e0c082c50a1b73d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b208626f9aea40ce8582b769e0c082c50a1b73d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/761df90687c2cda775d86491b54d549bf57e9bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761df90687c2cda775d86491b54d549bf57e9bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761df90687c2cda775d86491b54d549bf57e9bc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761df90687c2cda775d86491b54d549bf57e9bc1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "204b0bebee5343b5bd07e2a7be6fd74d6698b937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204b0bebee5343b5bd07e2a7be6fd74d6698b937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/204b0bebee5343b5bd07e2a7be6fd74d6698b937"}], "stats": {"total": 137, "additions": 128, "deletions": 9}, "files": [{"sha": "d0b2ba23e6f74b440b47003f0632290b4f791ad9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -1,3 +1,12 @@\n+2019-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tImplement P1920R1, Missing feature-test macros 2017-2019.\n+\t* c-cppbuiltin.c (c_cpp_builtins): Bump __cpp_init_captures\n+\tand __cpp_generic_lambdas for -std=c++2a.  Define\n+\t__cpp_designated_initializers, __cpp_constexpr_in_decltype and\n+\t__cpp_consteval for -std=c++2a.  Remove a FIXME comment about\n+\t__cpp_concepts for -std=c++2a.\n+\n 2019-11-22  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/83859"}, {"sha": "50066e4dd8ba8013f3101307b16a0cb4245d073d", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -952,8 +952,11 @@ c_cpp_builtins (cpp_reader *pfile)\n \t{\n \t  /* Set feature test macros for C++14.  */\n \t  cpp_define (pfile, \"__cpp_return_type_deduction=201304L\");\n-\t  cpp_define (pfile, \"__cpp_init_captures=201304L\");\n-\t  cpp_define (pfile, \"__cpp_generic_lambdas=201304L\");\n+\t  if (cxx_dialect <= cxx17)\n+\t    {\n+\t      cpp_define (pfile, \"__cpp_init_captures=201304L\");\n+\t      cpp_define (pfile, \"__cpp_generic_lambdas=201304L\");\n+\t    }\n \t  if (cxx_dialect <= cxx14)\n \t    cpp_define (pfile, \"__cpp_constexpr=201304L\");\n \t  cpp_define (pfile, \"__cpp_decltype_auto=201304L\");\n@@ -990,7 +993,12 @@ c_cpp_builtins (cpp_reader *pfile)\n       if (cxx_dialect > cxx17)\n \t{\n \t  /* Set feature test macros for C++2a.  */\n+\t  cpp_define (pfile, \"__cpp_init_captures=201803L\");\n+\t  cpp_define (pfile, \"__cpp_generic_lambdas=201707L\");\n+\t  cpp_define (pfile, \"__cpp_designated_initializers=201707L\");\n+\t  cpp_define (pfile, \"__cpp_constexpr_in_decltype=201711L\");\n \t  cpp_define (pfile, \"__cpp_conditional_explicit=201806L\");\n+\t  cpp_define (pfile, \"__cpp_consteval=201811L\");\n \t  cpp_define (pfile, \"__cpp_constinit=201907L\");\n \t  cpp_define (pfile, \"__cpp_nontype_template_parameter_class=201806L\");\n \t  cpp_define (pfile, \"__cpp_impl_destroying_delete=201806L\");\n@@ -1000,7 +1008,6 @@ c_cpp_builtins (cpp_reader *pfile)\n       if (flag_concepts)\n         {\n           if (cxx_dialect >= cxx2a)\n-            /* FIXME: Update this to the value required by the IS.  */\n             cpp_define (pfile, \"__cpp_concepts=201907L\");\n           else\n             cpp_define (pfile, \"__cpp_concepts=201507L\");"}, {"sha": "817fab4b02855402326cf03db30d15911aa063c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -1,5 +1,13 @@\n 2019-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tImplement P1920R1, Missing feature-test macros 2017-2019.\n+\t* g++.dg/cpp1z/feat-cxx1z.C: Only compile with -std=c++17.\n+\t* g++.dg/cpp2a/feat-cxx2a.C: Adjust for P1920R1 changes.\n+\t* g++.dg/cpp2a/desig15.C: New test.\n+\t* g++.dg/cpp2a/lambda-pack-init3.C: New test.\n+\t* g++.dg/cpp2a/lambda-generic6.C: New test.\n+\t* g++.dg/cpp2a/consteval15.C: New test.\n+\n \tPR tree-optimization/92618\n \t* gcc.c-torture/compile/pr92618.c: New test.\n \t* gcc.c-torture/execute/pr92618.c: New test."}, {"sha": "55e56a06fe8f394e16bcb6a320fb24343c496fdd", "filename": "gcc/testsuite/g++.dg/cpp1z/feat-cxx1z.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile { target c++17 } }\n-// { dg-options \"-I${srcdir}/g++.dg/cpp1y -I${srcdir}/g++.dg/cpp1y/testinc\" }\n+// { dg-do compile }\n+// { dg-options \"-std=c++17 -I${srcdir}/g++.dg/cpp1y -I${srcdir}/g++.dg/cpp1y/testinc\" }\n \n //  C++98 features:\n "}, {"sha": "feb77afba0101fec46dcb6cb59b8fa8ae09d96fd", "filename": "gcc/testsuite/g++.dg/cpp2a/consteval15.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval15.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile { target c++11 } }\n+\n+#if __cpp_consteval >= 201811L\n+consteval\n+#else\n+constexpr\n+#endif\n+int\n+foo (int x)\n+{\n+  return x * x * x * x;\n+}\n+\n+auto a = foo (2);"}, {"sha": "88e9c7284a40b62ffdf3116035220c11ea9d4b10", "filename": "gcc/testsuite/g++.dg/cpp2a/desig15.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fdesig15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fdesig15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fdesig15.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do run }\n+// { dg-options \"-pedantic\" }\n+\n+struct A { int a; };\n+struct B { int b; A c; int d; };\n+A a = { 1 };\n+B c = { 3, { 4 }, 5 };\n+#if __cpp_designated_initializers >= 201707L\n+A b = { .a = 2 };\n+B d = { .b = 6, .c { 7 }, .d = 8 };\n+B e = { .c = { .a = 9 } };\n+#else\n+A b = { 2 };\n+B d = { 6, { 7 }, 8 };\n+B e = { 0, { 9 } };\n+#endif\n+\n+int\n+main ()\n+{\n+  if (a.a != 1 || b.a != 2\n+      || c.b != 3 || c.c.a != 4 || c.d != 5\n+      || d.b != 6 || d.c.a != 7 || d.d != 8\n+      || e.b != 0 || e.c.a != 9 || e.d != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "753a6ecd0a85e82bb75d4e709484fa2b800043a7", "filename": "gcc/testsuite/g++.dg/cpp2a/feat-cxx2a.C", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ffeat-cxx2a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ffeat-cxx2a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ffeat-cxx2a.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -122,14 +122,14 @@\n \n #ifndef __cpp_init_captures\n #  error \"__cpp_init_captures\"\n-#elif __cpp_init_captures != 201304\n-#  error \"__cpp_init_captures != 201304\"\n+#elif __cpp_init_captures != 201803\n+#  error \"__cpp_init_captures != 201803\"\n #endif\n \n #ifndef __cpp_generic_lambdas\n #  error \"__cpp_generic_lambdas\"\n-#elif __cpp_generic_lambdas != 201304\n-#  error \"__cpp_generic_lambdas != 201304\"\n+#elif __cpp_generic_lambdas != 201707\n+#  error \"__cpp_generic_lambdas != 201707\"\n #endif\n \n #ifndef __cpp_constexpr\n@@ -507,3 +507,27 @@\n #elif __cpp_char8_t != 201811\n #  error \"__cpp_char8_t != 201811\"\n #endif\n+\n+#ifndef __cpp_designated_initializers\n+#  error \"__cpp_designated_initializers\"\n+#elif __cpp_designated_initializers != 201707\n+#  error \"__cpp_designated_initializers != 201707\"\n+#endif\n+\n+#ifndef __cpp_constexpr_in_decltype\n+#  error \"__cpp_constexpr_in_decltype\"\n+#elif __cpp_constexpr_in_decltype != 201711\n+#  error \"__cpp_constexpr_in_decltype != 201711\"\n+#endif\n+\n+#ifndef __cpp_consteval\n+#  error \"__cpp_consteval\"\n+#elif __cpp_consteval != 201811\n+#  error \"__cpp_consteval != 201811\"\n+#endif\n+\n+#ifndef __cpp_concepts\n+#  error \"__cpp_concepts\"\n+#elif __cpp_concepts != 201907\n+#  error \"__cpp_concepts != 201907\"\n+#endif"}, {"sha": "7ab12d16e474dbe512598884e5ad077b43c2181f", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic6.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic6.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -0,0 +1,11 @@\n+// P0428R2\n+// { dg-do compile { target c++14 } }\n+\n+struct S { int s; };\n+\n+auto x =\n+#if __cpp_generic_lambdas >= 201707\n+  []<class T = S>(T &&t) { return t.s; } ({ 2 });\n+#else\n+  [](auto &&t) { return t.s; } (S { 2 });\n+#endif"}, {"sha": "0ed5ddf20844faede7c6b0e56a6767acf437b6d0", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-pack-init3.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761df90687c2cda775d86491b54d549bf57e9bc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init3.C?ref=761df90687c2cda775d86491b54d549bf57e9bc1", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile { target c++11 } }\n+\n+void bar();\n+void bar(int);\n+\n+template <typename... Args>\n+void foo(Args... args) {\n+#if __cpp_init_captures >= 201803\n+  auto f = [...xs=args]{\n+    bar(xs...);\n+  };\n+#endif\n+}\n+\n+int main()\n+{\n+  foo();\n+  foo(1);\n+}"}]}