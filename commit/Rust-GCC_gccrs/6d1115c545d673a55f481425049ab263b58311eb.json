{"sha": "6d1115c545d673a55f481425049ab263b58311eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxMTE1YzU0NWQ2NzNhNTVmNDgxNDI1MDQ5YWIyNjNiNTgzMTFlYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-09T09:36:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-09T09:36:06Z"}, "message": "re PR tree-optimization/79483 ([graphite] ICE: verify_ssa failed (error: definition in block 31 does not dominate use in block 28))\n\n2017-06-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79483\n\t* graphite-scop-detection.c (order): New global.\n\t(get_order): Compute bb to order mapping that satisfies code\n\tgeneration constraints.\n\t(cmp_pbbs): New helper.\n\t(build_scops): Start domwalk at entry block, sort generated\n\tpbbs.\n\n\t* gcc.dg/graphite/pr79483.c: New testcase.\n\nFrom-SVN: r249052", "tree": {"sha": "84152feb8ac1250d918400fded48a41261fb99d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84152feb8ac1250d918400fded48a41261fb99d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1115c545d673a55f481425049ab263b58311eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1115c545d673a55f481425049ab263b58311eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1115c545d673a55f481425049ab263b58311eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1115c545d673a55f481425049ab263b58311eb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ba856d450119e438b62d944e646e929f16da4c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba856d450119e438b62d944e646e929f16da4c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba856d450119e438b62d944e646e929f16da4c6"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "e40383303dc287ea1131f0eef156c5fd461d2f85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1115c545d673a55f481425049ab263b58311eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1115c545d673a55f481425049ab263b58311eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d1115c545d673a55f481425049ab263b58311eb", "patch": "@@ -1,3 +1,13 @@\n+2017-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79483\n+\t* graphite-scop-detection.c (order): New global.\n+\t(get_order): Compute bb to order mapping that satisfies code\n+\tgeneration constraints.\n+\t(cmp_pbbs): New helper.\n+\t(build_scops): Start domwalk at entry block, sort generated\n+\tpbbs.\n+\n 2017-06-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81007"}, {"sha": "e17d58a26fc9c2c060b5f483ff9ac31053a7dab3", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=6d1115c545d673a55f481425049ab263b58311eb", "patch": "@@ -1999,6 +1999,46 @@ gather_bbs::after_dom_children (basic_block bb)\n     }\n }\n \n+\n+/* Compute sth like an execution order, dominator order with first executing\n+   edges that stay inside the current loop, delaying processing exit edges.  */\n+\n+static vec<unsigned> order;\n+\n+static void\n+get_order (scop_p scop, basic_block bb, vec<unsigned> *order, unsigned *dfs_num)\n+{\n+  if (! bb_in_sese_p (bb, scop->scop_info->region))\n+    return;\n+\n+  (*order)[bb->index] = (*dfs_num)++;\n+  for (basic_block son = first_dom_son (CDI_DOMINATORS, bb);\n+       son;\n+       son = next_dom_son (CDI_DOMINATORS, son))\n+    if (flow_bb_inside_loop_p (bb->loop_father, son))\n+      get_order (scop, son, order, dfs_num);\n+  for (basic_block son = first_dom_son (CDI_DOMINATORS, bb);\n+       son;\n+       son = next_dom_son (CDI_DOMINATORS, son))\n+    if (! flow_bb_inside_loop_p (bb->loop_father, son))\n+      get_order (scop, son, order, dfs_num);\n+}\n+\n+/* Helper for qsort, sorting after order above.  */\n+\n+static int\n+cmp_pbbs (const void *pa, const void *pb)\n+{\n+  poly_bb_p bb1 = *((const poly_bb_p *)pa);\n+  poly_bb_p bb2 = *((const poly_bb_p *)pb);\n+  if (order[bb1->black_box->bb->index] < order[bb2->black_box->bb->index])\n+    return -1;\n+  else if (order[bb1->black_box->bb->index] > order[bb2->black_box->bb->index])\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n /* Find Static Control Parts (SCoP) in the current function and pushes\n    them to SCOPS.  */\n \n@@ -2022,7 +2062,18 @@ build_scops (vec<scop_p> *scops)\n       scop_p scop = new_scop (s->entry, s->exit);\n \n       /* Record all basic blocks and their conditions in REGION.  */\n-      gather_bbs (CDI_DOMINATORS, scop).walk (cfun->cfg->x_entry_block_ptr);\n+      gather_bbs (CDI_DOMINATORS, scop).walk (s->entry->dest);\n+\n+      /* domwalk does not fulfil our code-generations constraints on the\n+         order of pbb which is to produce sth like execution order, delaying\n+\t exection of loop exit edges.  So compute such order and sort after\n+\t that.  */\n+      order.create (last_basic_block_for_fn (cfun));\n+      order.quick_grow (last_basic_block_for_fn (cfun));\n+      unsigned dfs_num = 0;\n+      get_order (scop, s->entry->dest, &order, &dfs_num);\n+      scop->pbbs.qsort (cmp_pbbs);\n+      order.release ();\n \n       build_alias_set (scop);\n "}, {"sha": "967ca018d718e2262c22bb791175c8cd6f0fb33f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d1115c545d673a55f481425049ab263b58311eb", "patch": "@@ -1,3 +1,8 @@\n+2017-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79483\n+\t* gcc.dg/graphite/pr79483.c: New testcase.\n+\n 2017-06-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81007"}, {"sha": "097273fed71743f99326d28bacd31bf00d9ba0c8", "filename": "gcc/testsuite/gcc.dg/graphite/pr79483.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr79483.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1115c545d673a55f481425049ab263b58311eb/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr79483.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr79483.c?ref=6d1115c545d673a55f481425049ab263b58311eb", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fgraphite-identity\" } */\n+\n+int *a;\n+extern int b[];\n+int c;\n+void d ()\n+{\n+  double e[2][3] = {0.0, 0.0, 1.0};\n+  for (int f = 0; f < 2; ++f)\n+    for (int g = 0; g < 6; ++g)\n+      b[0] = a[g] * e[f][2];\n+  c = b[0];\n+}"}]}