{"sha": "f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhMWZhYTU1ZjhmMTU3ZTM2ZTliNjE5NDA1NWM2ZGM4ZmJlMjc2Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-05-22T21:51:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-05-22T21:51:07Z"}, "message": "testsuite_hooks.h (func_callback): Declare copy constructor and assignment operator private.\n\n\n2004-05-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/testsuite_hooks.h (func_callback): Declare copy\n\tconstructor and assignment operator private.\n\t* testsuite/23_containers/deque/cons/clear_allocator.cc: Match\n\texception specifications of base class.\n\t* testsuite/23_containers/list/cons/clear_allocator.cc: Same.\n\t* testsuite/23_containers/vector/cons/clear_allocator.cc: Same.\n\t* testsuite/23_containers/vector/bool/clear_allocator.cc: New.\n\nFrom-SVN: r82150", "tree": {"sha": "adb7120223d95ba67ebb64ad73a2330b2b723b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adb7120223d95ba67ebb64ad73a2330b2b723b73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/comments", "author": null, "committer": null, "parents": [{"sha": "0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "2e99412e7d1ee44c0b5d53f0b1325491bbd45e51", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "patch": "@@ -1,3 +1,13 @@\n+2004-05-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/testsuite_hooks.h (func_callback): Declare copy\n+\tconstructor and assignment operator private.\t\n+\t* testsuite/23_containers/deque/cons/clear_allocator.cc: Match\n+\texception specifications of base class.\n+\t* testsuite/23_containers/list/cons/clear_allocator.cc: Same.\n+\t* testsuite/23_containers/vector/cons/clear_allocator.cc: Same.\n+\t* testsuite/23_containers/vector/bool/clear_allocator.cc: New.\n+\t\t\n 2004-05-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/cxxabi.h: Remove duplicated and useless public and"}, {"sha": "f40b2053bce682e88dcb65ec6c1e404e3371ef01", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/clear_allocator.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fclear_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fclear_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fclear_allocator.cc?ref=f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "patch": "@@ -31,20 +31,20 @@ template<typename T>\n       struct rebind \n       { typedef clear_alloc<T1> other; };\n \n-    virtual void clear()\n+    virtual void clear() throw()\n     { }\n \n-    clear_alloc()\n+    clear_alloc() throw()\n     { }\n     \n-    clear_alloc(clear_alloc const& _wa)\n+    clear_alloc(clear_alloc const& _wa) throw()\n     { }\n     \n     template<typename T1>\n-      clear_alloc(clear_alloc<T1> const& _wa)\n+    clear_alloc(clear_alloc<T1> const& _wa) throw()\n       { }\n \n-    virtual ~clear_alloc()\n+    virtual ~clear_alloc() throw()\n     { this->clear(); }\n \n     T* allocate(typename new_allocator<T>::size_type n, const void *hint = 0)"}, {"sha": "cdae22b1e304f8a7b1f5325ee90d8a4513680128", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/clear_allocator.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fclear_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fclear_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fclear_allocator.cc?ref=f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "patch": "@@ -31,20 +31,20 @@ template<typename T>\n       struct rebind \n       { typedef clear_alloc<T1> other; };\n \n-    virtual void clear()\n+    virtual void clear() throw()\n     { }\n \n-    clear_alloc()\n+    clear_alloc() throw()\n     { }\n     \n-    clear_alloc(clear_alloc const& _wa)\n+    clear_alloc(clear_alloc const& _wa) throw()\n     { }\n     \n     template<typename T1>\n-      clear_alloc(clear_alloc<T1> const& _wa)\n+      clear_alloc(clear_alloc<T1> const& _wa) throw()\n       { }\n \n-    virtual ~clear_alloc()\n+    virtual ~clear_alloc() throw()\n     { this->clear(); }\n \n     T* allocate(typename new_allocator<T>::size_type n, const void *hint = 0)"}, {"sha": "e436f2235f853f291a20b3cb46ea211be5f02387", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/clear_allocator.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fclear_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fclear_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fclear_allocator.cc?ref=f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "patch": "@@ -31,20 +31,20 @@ template<typename T>\n       struct rebind \n       { typedef clear_alloc<T1> other; };\n \n-    virtual void clear()\n+    virtual void clear() throw()\n     { }\n \n-    clear_alloc()\n+    clear_alloc() throw()\n     { }\n     \n-    clear_alloc(clear_alloc const& _wa)\n+    clear_alloc(clear_alloc const& _wa) throw()\n     { }\n     \n     template<typename T1>\n-      clear_alloc(clear_alloc<T1> const& _wa)\n+      clear_alloc(clear_alloc<T1> const& _wa) throw()\n       { }\n \n-    virtual ~clear_alloc()\n+    virtual ~clear_alloc() throw()\n     { this->clear(); }\n \n     T* allocate(typename new_allocator<T>::size_type n, const void *hint = 0)"}, {"sha": "1919ab8a11408f38e9af4f05d6184a6f7853403a", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1faa55f8f157e36e9b6194055c6dc8fbe2763/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=f4a1faa55f8f157e36e9b6194055c6dc8fbe2763", "patch": "@@ -114,7 +114,12 @@ namespace __gnu_test\n   private:\n     int\t\t_M_size;\n     test_type\t_M_tests[15];\n-    \n+\n+    func_callback&\n+    operator=(const func_callback&);\n+\n+    func_callback(const func_callback&);\n+\n   public:\n     func_callback(): _M_size(0) { };\n "}]}