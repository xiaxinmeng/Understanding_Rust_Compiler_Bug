{"sha": "2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxMmZkMmRiMGVhZTJhYmZjMDljNDNmYzU4ZWJkNjA1YzFhMWRhOQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-04-16T17:22:02Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-04-16T17:22:02Z"}, "message": "UnicodeToBytes.java (write(String,int,int,char[])): New overloading, allows greater efficiency.\n\n\ufffd\n\t* gnu/gcj/convert/UnicodeToBytes.java (write(String,int,int,char[])):\n\tNew overloading, allows greater efficiency.\n\t* gnu/gcj/convert/Output_8859_1.java (write(String,int,int,char[])):\n\tNew overloading (for efficiency - avoids copying).\n\t* gnu/gcj/convert/Output_UTF8.java:  Fix typo: 0xC0 -> 0c3F.\n\t* gnu/gcj/convert/Input_UTF8.java:  Fix typos in bit masks.\n\nFrom-SVN: r26494", "tree": {"sha": "2a12dcf74335a9116c0605d4bd6fa63a1a66e2fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a12dcf74335a9116c0605d4bd6fa63a1a66e2fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/comments", "author": null, "committer": null, "parents": [{"sha": "c80eb46728381731106e0f54725cd1b8285c3a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80eb46728381731106e0f54725cd1b8285c3a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80eb46728381731106e0f54725cd1b8285c3a15"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "0bb5c48a13ebbf4aa821ace295598ab6ed4a7835", "filename": "libjava/gnu/gcj/convert/Input_UTF8.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UTF8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UTF8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UTF8.java?ref=2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "patch": "@@ -8,6 +8,12 @@\n \n package gnu.gcj.convert;\n \n+/**\n+ * Convert UTF8 to Unicode.\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Match 1999.\n+ */\n+\n public class Input_UTF8 extends BytesToUnicode\n {\n   public String getName() { return \"UTF8\"; }\n@@ -84,12 +90,12 @@ else if (partial_bytes_expected == 0)\n \t      }\n \t    else // prefix byte\n \t      {\n-\t\tif ((b & 0xE) == 0xC0)\n+\t\tif ((b & 0xE0) == 0xC0)\n \t\t  {\n \t\t    partial = b & 0x1F;\n \t\t    partial_bytes_expected = 1;\n \t\t  }\n-\t\telse if ((b & 0xF) == 0xF0)\n+\t\telse if ((b & 0xF0) == 0xE0)\n \t\t  {\n \t\t    partial = b & 0xF;\n \t\t    partial_bytes_expected = 2;"}, {"sha": "8dd9f43d717f80204a6fe095f1518557a6951f4a", "filename": "libjava/gnu/gcj/convert/Output_8859_1.java", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_8859_1.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_8859_1.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_8859_1.java?ref=2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "patch": "@@ -8,6 +8,13 @@\n \n package gnu.gcj.convert; \n  \n+/**\n+ * Convert Unicode ISO-Latin-1 (8851-1) text.\n+ * The high-order byte of each character is truncated.\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Match 1999.\n+ */\n+\n public class Output_8859_1 extends UnicodeToBytes\n {\n   public String getName() { return \"8859_1\"; }\n@@ -28,4 +35,19 @@ public int write (char[] inbuffer, int inpos, int inlength)\n     this.count = count;\n     return inlength;\n   }\n+\n+  public int write (String str, int inpos, int inlength, char[] work)\n+  {\n+    int count = this.count;\n+    byte[] buf = this.buf;\n+    int avail = buf.length - count;\n+    if (inlength > avail)\n+      inlength = avail;\n+    for (int i = inlength;  --i >= 0;  )\n+      {\n+\tbuf[count++] = (byte) str.charAt(inpos++);\n+      }\n+    this.count = count;\n+    return inlength;\n+  }\n }"}, {"sha": "7ab92a8eefaa4a3367d6f9490342637a30813b77", "filename": "libjava/gnu/gcj/convert/UnicodeToBytes.java", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2012fd2db0eae2abfc09c43fc58ebd605c1a1da9/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java?ref=2012fd2db0eae2abfc09c43fc58ebd605c1a1da9", "patch": "@@ -80,11 +80,30 @@ public final void setOutput(byte[] buffer, int count)\n \n   /** Convert chars to bytes.\n     * Converted bytes are written to buf, starting at count.\n-    * @param inbuffer sources of characters to convert\n-    * @param inpos index of initial character ininbuffer to convert\n+    * @param inbuffer source of characters to convert\n+    * @param inpos index of initial character in inbuffer to convert\n     * @param inlength number of characters to convert\n     * @return number of chars converted\n     * Also, this.count is increment by the number of bytes converted.\n     */\n   public abstract int write (char[] inbuffer, int inpos, int inlength);\n+\n+  /** Convert chars to bytes.\n+    * Converted bytes are written to buf, starting at count.\n+    * @param str source of characters to convert\n+    * @param inpos index of initial character in str to convert\n+    * @param inlength number of characters to convert\n+    * @param work if non-null, a buffer than can be used\n+    * @return number of chars converted\n+    * Also, this.count is increment by the number of bytes converted.\n+    */\n+  public int write (String str, int inpos, int inlength, char[] work)\n+  {\n+    if (work == null)\n+      work = new char[inlength];\n+    int srcEnd = inpos + (inlength > work.length ? work.length : inlength);\n+    str.getChars(inpos, srcEnd, work, 0);\n+    return write(work, inpos, inlength);\n+  }\n+\n }"}]}