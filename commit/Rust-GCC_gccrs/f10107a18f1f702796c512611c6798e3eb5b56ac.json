{"sha": "f10107a18f1f702796c512611c6798e3eb5b56ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEwMTA3YTE4ZjFmNzAyNzk2YzUxMjYxMWM2Nzk4ZTNlYjViNTZhYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-07-12T05:21:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-07-12T05:21:29Z"}, "message": "mips.c (mips_use_dfa_pipeline_interface): Delete.\n\n\t* config/mips/mips.c (mips_use_dfa_pipeline_interface): Delete.\n\t(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define to hook_int_void_1.\n\t* config/mips/3000.md: Add copyright notice.  Remove automota and\n\tfunction units; use generic ones instead.  Only define reservations\n\tfor things that are different from generic.md.  Extend each clause\n\tto include r3900.\n\t* config/mips/{4000,4100,4300,4600,5000,6000,generic}.md: New files.\n\t* config/mips/mips.md: Include them. Remove define_function_units.\n\t(alu, imuldiv): New automata and units.\n\nFrom-SVN: r84547", "tree": {"sha": "8f0b7fa3547ea41407c7a2632b5bc34185cf60a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f0b7fa3547ea41407c7a2632b5bc34185cf60a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f10107a18f1f702796c512611c6798e3eb5b56ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10107a18f1f702796c512611c6798e3eb5b56ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f10107a18f1f702796c512611c6798e3eb5b56ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10107a18f1f702796c512611c6798e3eb5b56ac/comments", "author": null, "committer": null, "parents": [{"sha": "4c59781d99282440d92d89297e58a1c2223c0f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c59781d99282440d92d89297e58a1c2223c0f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c59781d99282440d92d89297e58a1c2223c0f0d"}], "stats": {"total": 957, "additions": 571, "deletions": 386}, "files": [{"sha": "bda0d40907a1f63ab97a3974f8a5c4c09a556264", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -1,3 +1,15 @@\n+2004-07-12  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_use_dfa_pipeline_interface): Delete.\n+\t(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define to hook_int_void_1.\n+\t* config/mips/3000.md: Add copyright notice.  Remove automota and\n+\tfunction units; use generic ones instead.  Only define reservations\n+\tfor things that are different from generic.md.  Extend each clause\n+\tto include r3900.\n+\t* config/mips/{4000,4100,4300,4600,5000,6000,generic}.md: New files.\n+\t* config/mips/mips.md: Include them. Remove define_function_units.\n+\t(alu, imuldiv): New automata and units.\n+\n 2004-07-12  Ben Elliston  <bje@au.ibm.com>\n \n \t* doc/invoke.texi (Optimize Options): Document -frename-registers"}, {"sha": "d0334115e4852d762dea2a0e8c439c750d1e6fef", "filename": "gcc/config/mips/3000.md", "status": "modified", "additions": 41, "deletions": 47, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F3000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F3000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F3000.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -1,78 +1,72 @@\n-;; DFA based pipeline description for the r3000\n-;; This is a special pipeline - this is also the default schedule and\n-;; so we need to schedule instructions that may not exist on the r2k/r3k.\n+;; R3000 and TX39 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n \n-(define_automaton \"r3k_alu,r3k_imuldiv\")\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n \n-(define_cpu_unit \"r3k_alu\" \"r3k_alu\")\n-(define_cpu_unit \"r3k_imuldiv\" \"r3k_imuldiv\")\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n \n-(define_insn_reservation \"r3k_generic\" 1\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"unknown,prefetch,prefetchx,condmove,const,arith,\n-\t\t\tshift,slt,clz,trap,multi,nop\"))\n-  \"r3k_alu\")\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n \n-(define_insn_reservation \"r3k_load\" 2\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n-  \"r3k_alu\")\n-\n-(define_insn_reservation \"r3k_store\" 1\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n-  \"r3k_alu\")\n \n-(define_insn_reservation \"r3k_branch\" 1\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"branch,jump,call\"))\n-  \"r3k_alu\")\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n \n-(define_insn_reservation \"r3k_hilo\" 1\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"mfhilo,mthilo\"))\n-  \"r3k_imuldiv*3\")\n+(define_insn_reservation \"r3k_load\" 2\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n+       (eq_attr \"type\" \"load,fpload,fpidxload\"))\n+  \"alu\")\n \n (define_insn_reservation \"r3k_imul\" 12\n-  (and (eq_attr \"cpu\" \"r3000\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n        (eq_attr \"type\" \"imul,imadd\"))\n-  \"r3k_imuldiv*12\")\n+  \"imuldiv*12\")\n \n (define_insn_reservation \"r3k_idiv\" 35\n-  (and (eq_attr \"cpu\" \"r3000\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n        (eq_attr \"type\" \"idiv\"))\n-  \"r3k_imuldiv*35\")\n+  \"imuldiv*35\")\n \n (define_insn_reservation \"r3k_fmove\" 1\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (eq_attr \"type\" \"fabs,fneg,fmove,fcvt\"))\n-  \"r3k_alu\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n+       (eq_attr \"type\" \"fabs,fneg,fmove\"))\n+  \"alu\")\n \n (define_insn_reservation \"r3k_fadd\" 2\n-  (and (eq_attr \"cpu\" \"r3000\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n        (eq_attr \"type\" \"fcmp,fadd\"))\n-  \"r3k_alu\")\n+  \"alu\")\n \n (define_insn_reservation \"r3k_fmul_single\" 4\n-  (and (eq_attr \"cpu\" \"r3000\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n        (and (eq_attr \"type\" \"fmul,fmadd\")\n \t    (eq_attr \"mode\" \"SF\")))\n-  \"r3k_alu\")\n+  \"alu\")\n \n (define_insn_reservation \"r3k_fmul_double\" 5\n-  (and (eq_attr \"cpu\" \"r3000\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n        (and (eq_attr \"type\" \"fmul,fmadd\")\n \t    (eq_attr \"mode\" \"DF\")))\n-  \"r3k_alu\")\n+  \"alu\")\n \n (define_insn_reservation \"r3k_fdiv_single\" 12\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n+       (and (eq_attr \"type\" \"fdiv\")\n \t    (eq_attr \"mode\" \"SF\")))\n-  \"r3k_alu\")\n+  \"alu\")\n \n (define_insn_reservation \"r3k_fdiv_double\" 19\n-  (and (eq_attr \"cpu\" \"r3000\")\n-       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+  (and (eq_attr \"cpu\" \"r3000,r3900\")\n+       (and (eq_attr \"type\" \"fdiv\")\n \t    (eq_attr \"mode\" \"DF\")))\n-  \"r3k_alu\")\n+  \"alu\")"}, {"sha": "97149a55fc8719c2401773b342e3d073b67f7881", "filename": "gcc/config/mips/4000.md", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4000.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,33 @@\n+;; R4000 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+\n+(define_insn_reservation \"r4k_imul\" 10\n+  (and (eq_attr \"cpu\" \"r4000\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"imuldiv*10\")\n+\n+(define_insn_reservation \"r4k_idiv\" 69\n+  (and (eq_attr \"cpu\" \"r4000\")\n+       (eq_attr \"type\" \"idiv\"))\n+  \"imuldiv*69\")"}, {"sha": "2a0dcddaf6ac558f50e7f432c23555f5f86c5c10", "filename": "gcc/config/mips/4100.md", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4100.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4100.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4100.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,52 @@\n+;; VR4100 and VR4120 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+\n+(define_insn_reservation \"r4100_load\" 2\n+  (and (eq_attr \"cpu\" \"r4100,r4120\")\n+       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4100_imul_si\" 1\n+  (and (eq_attr \"cpu\" \"r4100,r4120\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv\")\n+\n+(define_insn_reservation \"r4100_imul_di\" 4\n+  (and (eq_attr \"cpu\" \"r4100,r4120\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*4\")\n+\n+(define_insn_reservation \"r4100_idiv_si\" 35\n+  (and (eq_attr \"cpu\" \"r4100,r4120\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv*35\")\n+\n+(define_insn_reservation \"r4100_idiv_di\" 67\n+  (and (eq_attr \"cpu\" \"r4100,r4120\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*67\")"}, {"sha": "16ec77e7dd37ac7cb89298a56d790daf27d20632", "filename": "gcc/config/mips/4300.md", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4300.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,86 @@\n+;; VR4300 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+\n+(define_insn_reservation \"r4300_load\" 2\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4300_imul_si\" 5\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv*5\")\n+\n+(define_insn_reservation \"r4300_imul_di\" 8\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*8\")\n+\n+(define_insn_reservation \"r4300_idiv_si\" 37\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv*37\")\n+\n+(define_insn_reservation \"r4300_idiv_di\" 69\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*69\")\n+\n+(define_insn_reservation \"r4300_fmove\" 1\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (eq_attr \"type\" \"fcmp,fabs,fneg,fmove\"))\n+  \"imuldiv\")\n+\n+(define_insn_reservation \"r4300_fadd\" 3\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (eq_attr \"type\" \"fadd\"))\n+  \"imuldiv*3\")\n+\n+(define_insn_reservation \"r4300_fmul_single\" 5\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"imuldiv*5\")\n+\n+(define_insn_reservation \"r4300_fmul_double\" 8\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"imuldiv*8\")\n+\n+(define_insn_reservation \"r4300_fdiv_single\" 29\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"imuldiv*29\")\n+\n+(define_insn_reservation \"r4300_fdiv_double\" 58\n+  (and (eq_attr \"cpu\" \"r4300\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"imuldiv*58\")"}, {"sha": "155ef7489f9d7d05a2454406e4766ad6e96309af", "filename": "gcc/config/mips/4600.md", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4600.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F4600.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4600.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,88 @@\n+;; R4600 and R4650 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+;;\n+;; We handle the R4600 and R4650 in much the same way.  The only difference\n+;; is in the integer multiplication and division costs.\n+\n+(define_insn_reservation \"r4600_imul\" 10\n+  (and (eq_attr \"cpu\" \"r4600\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"imuldiv*10\")\n+\n+(define_insn_reservation \"r4600_idiv\" 42\n+  (and (eq_attr \"cpu\" \"r4600\")\n+       (eq_attr \"type\" \"idiv\"))\n+  \"imuldiv*42\")\n+\n+\n+(define_insn_reservation \"r4650_imul\" 4\n+  (and (eq_attr \"cpu\" \"r4650\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"imuldiv*4\")\n+\n+(define_insn_reservation \"r4650_idiv\" 36\n+  (and (eq_attr \"cpu\" \"r4650\")\n+       (eq_attr \"type\" \"idiv\"))\n+  \"imuldiv*36\")\n+\n+\n+(define_insn_reservation \"r4600_load\" 2\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (eq_attr \"type\" \"load,fpload,fpidxload\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fmove\" 1\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (eq_attr \"type\" \"fabs,fneg,fmove\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fmul_single\" 8\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fdiv_single\" 32\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (and (eq_attr \"type\" \"fdiv\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fdiv_double\" 61\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (and (eq_attr \"type\" \"fdiv\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fsqrt_single\" 31\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r4600_fsqrt_double\" 60\n+  (and (eq_attr \"cpu\" \"r4600,r4650\")\n+       (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")"}, {"sha": "66e981ce66f38bdbdd341ddb1c7157f35c7fe9f4", "filename": "gcc/config/mips/5000.md", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F5000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F5000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5000.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,81 @@\n+;; VR5000 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+\n+(define_insn_reservation \"r5k_load\" 2\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r5k_imul_si\" 5\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv*5\")\n+\n+(define_insn_reservation \"r5k_imul_di\" 9\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*9\")\n+\n+(define_insn_reservation \"r5k_idiv_si\" 36\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"imuldiv*36\")\n+\n+(define_insn_reservation \"r5k_idiv_di\" 68\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"imuldiv*68\")\n+\n+(define_insn_reservation \"r5k_fmove\" 1\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (eq_attr \"type\" \"fcmp,fabs,fneg,fmove\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r5k_fmul_single\" 4\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r5k_fmul_double\" 5\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r5k_fdiv_single\" 21\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r5k_fsqrt_double\" 36\n+  (and (eq_attr \"cpu\" \"r5000\")\n+       (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")"}, {"sha": "8a5b9f5196c5a3acfe7ddfae04dd5cedbc111eef", "filename": "gcc/config/mips/6000.md", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2F6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F6000.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,57 @@\n+;; R6000 pipeline description.\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file overrides parts of generic.md.  It is derived from the\n+;; old define_function_unit description.\n+\n+(define_insn_reservation \"r6k_fcmp\" 2\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (eq_attr \"type\" \"fcmp\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r6k_fadd\" 3\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (eq_attr \"type\" \"fadd\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"r6k_fmul_single\" 5\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r6k_fmul_double\" 6\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r6k_fdiv_single\" 15\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (and (eq_attr \"type\" \"fdiv\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"alu\")\n+\n+(define_insn_reservation \"r6k_fdiv_double\" 16\n+  (and (eq_attr \"cpu\" \"r6000\")\n+       (and (eq_attr \"type\" \"fdiv\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"alu\")"}, {"sha": "c9e85e971c266c84ebfa81704455405f9d470982", "filename": "gcc/config/mips/generic.md", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fgeneric.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fgeneric.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgeneric.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -0,0 +1,102 @@\n+;; Generic DFA-based pipeline description for MIPS targets\n+;;   Copyright (C) 2004 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+\n+;; This file is derived from the old define_function_unit description.\n+;; Each reservation can be overridden on a processor-by-processor basis.\n+\n+(define_insn_reservation \"generic_alu\" 1\n+  (eq_attr \"type\" \"unknown,prefetch,prefetchx,condmove,const,arith,\n+\t\t   shift,slt,clz,trap,multi,nop\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_load\" 3\n+  (eq_attr \"type\" \"load,fpload,fpidxload\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_store\" 1\n+  (eq_attr \"type\" \"store,fpstore,fpidxstore\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_xfer\" 2\n+  (eq_attr \"type\" \"xfer\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_branch\" 1\n+  (eq_attr \"type\" \"branch,jump,call\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_hilo\" 1\n+  (eq_attr \"type\" \"mfhilo,mthilo\")\n+  \"imuldiv*3\")\n+\n+(define_insn_reservation \"generic_imul\" 17\n+  (eq_attr \"type\" \"imul,imadd\")\n+  \"imuldiv*17\")\n+\n+(define_insn_reservation \"generic_idiv\" 38\n+  (eq_attr \"type\" \"idiv\")\n+  \"imuldiv*38\")\n+\n+(define_insn_reservation \"generic_fcvt\" 1\n+  (eq_attr \"type\" \"fcvt\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fmove\" 2\n+  (eq_attr \"type\" \"fabs,fneg,fmove\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fcmp\" 3\n+  (eq_attr \"type\" \"fcmp\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fadd\" 4\n+  (eq_attr \"type\" \"fadd\")\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fmul_single\" 7\n+  (and (eq_attr \"type\" \"fmul,fmadd\")\n+       (eq_attr \"mode\" \"SF\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fmul_double\" 8\n+  (and (eq_attr \"type\" \"fmul,fmadd\")\n+       (eq_attr \"mode\" \"DF\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fdiv_single\" 23\n+  (and (eq_attr \"type\" \"fdiv\")\n+       (eq_attr \"mode\" \"SF\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fdiv_double\" 36\n+  (and (eq_attr \"type\" \"fdiv\")\n+       (eq_attr \"mode\" \"DF\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fsqrt_single\" 54\n+  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n+       (eq_attr \"mode\" \"SF\"))\n+  \"alu\")\n+\n+(define_insn_reservation \"generic_fsqrt_double\" 112\n+  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n+       (eq_attr \"mode\" \"DF\"))\n+  \"alu\")"}, {"sha": "d152e351855ce0e2a5ea972736b00acbc5997bd9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -283,7 +283,6 @@ static int mips_sched_reorder (FILE *, int, rtx *, int *, int);\n static int mips_variable_issue (FILE *, int, rtx, int);\n static int mips_adjust_cost (rtx, rtx, rtx, int);\n static int mips_issue_rate (void);\n-static int mips_use_dfa_pipeline_interface (void);\n static int mips_multipass_dfa_lookahead (void);\n static void mips_init_libfuncs (void);\n static void mips_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -732,7 +731,7 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE mips_issue_rate\n #undef TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE\n-#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE mips_use_dfa_pipeline_interface\n+#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE hook_int_void_1\n #undef TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD\n #define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD \\\n   mips_multipass_dfa_lookahead\n@@ -9924,29 +9923,6 @@ mips_issue_rate (void)\n \n }\n \n-/* Implements TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE.  Return true for\n-   processors that have a DFA pipeline description.  */\n-\n-static int\n-mips_use_dfa_pipeline_interface (void)\n-{\n-  switch (mips_tune)\n-    {\n-    case PROCESSOR_R3000:\n-    case PROCESSOR_R4130:\n-    case PROCESSOR_R5400:\n-    case PROCESSOR_R5500:\n-    case PROCESSOR_R7000:\n-    case PROCESSOR_R9000:\n-    case PROCESSOR_SB1:\n-    case PROCESSOR_SR71000:\n-      return true;\n-\n-    default:\n-      return false;\n-    }\n-}\n-\n /* Implements TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD.  This should\n    be as wide as the scheduling freedom in the DFA.  */\n "}, {"sha": "ccac110f8299010fdf222edd54bfddf55ff25863", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 18, "deletions": 314, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10107a18f1f702796c512611c6798e3eb5b56ac/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=f10107a18f1f702796c512611c6798e3eb5b56ac", "patch": "@@ -313,332 +313,36 @@\n    (nil)\n    (nil)])\n \f\n-;; .........................\n+;; Pipeline descriptions.\n ;;\n-;;\tFunctional units\n+;; generic.md provides a fallback for processors without a specific\n+;; pipeline description.  It is derived from the old define_function_unit\n+;; version and uses the \"alu\" and \"imuldiv\" units declared below.\n ;;\n-;; .........................\n+;; Some of the processor-specific files are also derived from old\n+;; define_function_unit descriptions and simply override the parts of\n+;; generic.md that don't apply.  The other processor-specific files\n+;; are self-contained.\n+(define_automaton \"alu,imuldiv\")\n \n-; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n-;\t\t\tTEST READY-DELAY ISSUE-DELAY [CONFLICT-LIST])\n-\n-;; Make the default case (PROCESSOR_DEFAULT) handle the worst case\n-\n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"load,fpload,fpidxload\")\n-       (eq_attr \"cpu\" \"!r3900,r4600,r4650,r4100,r4120,r4300,r5000\"))\n-  3 0)\n-\n-(define_function_unit \"memory\" 1 0\n-  (and (eq_attr \"type\" \"load,fpload,fpidxload\")\n-       (eq_attr \"cpu\" \"r3900,r4600,r4650,r4100,r4120,r4300,r5000\"))\n-  2 0)\n-\n-(define_function_unit \"memory\"   1 0\n-  (eq_attr \"type\" \"store,fpstore,fpidxstore\")\n-  1 0)\n-\n-(define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"xfer\") 2 0)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (eq_attr \"type\" \"mthilo,mfhilo\")\n-  1 3)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (eq_attr \"cpu\" \"!r3900,r4000,r4600,r4650,r4100,r4120,r4300,r5000\"))\n-  17 17)\n-\n-;; On them mips16, we want to stronly discourage a mult from appearing\n-;; after an mflo, since that requires explicit nop instructions.  We\n-;; do this by pretending that mflo ties up the function unit for long\n-;; enough that the scheduler will ignore load stalls and the like when\n-;; selecting instructions to between the two instructions.\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"mfhilo\") (ne (symbol_ref \"TARGET_MIPS16\") (const_int 0)))\n-  1 5)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\") (eq_attr \"cpu\" \"r3900\"))\n-  12 12)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\") (eq_attr \"cpu\" \"r4000,r4600\"))\n-  10 10)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\") (eq_attr \"cpu\" \"r4650\"))\n-  4 4)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (and (eq_attr \"mode\" \"SI\") (eq_attr \"cpu\" \"r4100,r4120\")))\n-  1 1)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r4100,r4120\")))\n-  4 4)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (and (eq_attr \"mode\" \"SI\") (eq_attr \"cpu\" \"r4300,r5000\")))\n-  5 5)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r4300\")))\n-  8 8)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul,imadd\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r5000\")))\n-  9 9)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (eq_attr \"cpu\" \"!r3900,r4000,r4600,r4650,r4100,r4120,r4300,r5000\"))\n-  38 38)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r3900\"))\n-  35 35)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r4600\"))\n-  42 42)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r4650\"))\n-  36 36)\n-\n-(define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r4000\"))\n-  69 69)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"SI\") (eq_attr \"cpu\" \"r4100,r4120\")))\n-  35 35)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r4100,r4120\")))\n-  67 67)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"SI\") (eq_attr \"cpu\" \"r4300\")))\n-  37 37)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r4300\")))\n-  69 69)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"SI\") (eq_attr \"cpu\" \"r5000\")))\n-  36 36)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"idiv\")\n-       (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r5000\")))\n-  68 68)\n-\n-;; The R4300 does *NOT* have a separate Floating Point Unit, instead\n-;; the FP hardware is part of the normal ALU circuitry.  This means FP\n-;; instructions affect the pipe-line, and no functional unit\n-;; parallelism can occur on R4300 processors.  To force GCC into coding\n-;; for only a single functional unit, we force the R4300 FP\n-;; instructions to be processed in the \"imuldiv\" unit.\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"!r3900,r6000,r4300,r5000\"))\n-  3 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"r3900,r6000\"))\n-  2 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"r5000\"))\n-  1 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"!r3900,r6000,r4300\"))\n-  4 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r3900\"))\n-  2 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r6000\"))\n-  3 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fabs,fneg,fmove\")\n-       (eq_attr \"cpu\" \"!r3900,r4600,r4650,r4300,r5000\"))\n-  2 0)\n-\n-(define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fabs,fneg,fmove\") (eq_attr \"cpu\" \"r3900,r4600,r4650,r5000\"))\n-  1 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"SF\")\n-\t    (eq_attr \"cpu\" \"!r3900,r6000,r4600,r4650,r4300,r5000\")))\n-  7 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3900,r5000\")))\n-  4 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r6000\")))\n-  5 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r4600,r4650\")))\n-  8 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"!r3900,r6000,r4300,r5000\")))\n-  8 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3900,r5000\")))\n-  5 0)\n-\n-(define_function_unit \"mult\" 1 1\n-  (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r6000\")))\n-  6 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\")\n-\t    (eq_attr \"cpu\" \"!r3900,r6000,r4600,r4650,r4300,r5000\")))\n-  23 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3900\")))\n-  12 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r6000\")))\n-  15 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r4600,r4650\")))\n-  32 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r5000\")))\n-  21 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"DF\")\n-\t    (eq_attr \"cpu\" \"!r3900,r6000,r4600,r4650,r4300\")))\n-  36 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3900\")))\n-  19 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r6000\")))\n-  16 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r4600,r4650\")))\n-  61 0)\n-\n-;;; ??? Is this number right?\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"!r4600,r4650,r4300,r5000\")))\n-  54 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r4600,r4650\")))\n-  31 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r5000\")))\n-  21 0)\n-\n-;;; ??? Is this number right?\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"!r4600,r4650,r4300,r5000\")))\n-  112 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r4600,r4650\")))\n-  60 0)\n-\n-(define_function_unit \"divide\" 1 1\n-  (and (eq_attr \"type\" \"fsqrt,frsqrt\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r5000\")))\n-  36 0)\n-\n-;; R4300 FP instruction classes treated as part of the \"imuldiv\"\n-;; functional unit:\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r4300\"))\n-  3 3)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"fcmp,fabs,fneg,fmove\") (eq_attr \"cpu\" \"r4300\"))\n-  1 1)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"fmul\") (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r4300\")))\n-  5 5)\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"fmul\") (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r4300\")))\n-  8 8)\n-\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (and (eq_attr \"type\" \"fdiv\") (eq_attr \"type\" \"fsqrt,frsqrt\"))\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r4300\")))\n-  29 29)\n-(define_function_unit \"imuldiv\" 1 0\n-  (and (and (eq_attr \"type\" \"fdiv\") (eq_attr \"type\" \"fsqrt,frsqrt\"))\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r4300\")))\n-  58 58)\n-\f\n-;; Include scheduling descriptions.\n+(define_cpu_unit \"alu\" \"alu\")\n+(define_cpu_unit \"imuldiv\" \"imuldiv\")\n \n (include \"3000.md\")\n+(include \"4000.md\")\n+(include \"4100.md\")\n (include \"4130.md\")\n+(include \"4300.md\")\n+(include \"4600.md\")\n+(include \"5000.md\")\n (include \"5400.md\")\n (include \"5500.md\")\n+(include \"6000.md\")\n (include \"7000.md\")\n (include \"9000.md\")\n (include \"sb1.md\")\n (include \"sr71k.md\")\n+(include \"generic.md\")\n \f\n ;;\n ;;  ...................."}]}