{"sha": "66a63e0d327753984f05353b4cf68e0f734311fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZhNjNlMGQzMjc3NTM5ODRmMDUzNTNiNGNmNjhlMGY3MzQzMTFmYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T14:14:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T14:14:05Z"}, "message": "[multiple changes]\n\n2009-10-28  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-crtl.ads (System.CRTL.strerror): New function.\n\n2009-10-28  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb: Add guard to recover some type errors.\n\nFrom-SVN: r153662", "tree": {"sha": "a4e495ccbee929656dde1383860ee5c92ed95ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4e495ccbee929656dde1383860ee5c92ed95ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66a63e0d327753984f05353b4cf68e0f734311fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a63e0d327753984f05353b4cf68e0f734311fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66a63e0d327753984f05353b4cf68e0f734311fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a63e0d327753984f05353b4cf68e0f734311fc/comments", "author": null, "committer": null, "parents": [{"sha": "fc475a082ce2d06a0e458438236b01f8e221772e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc475a082ce2d06a0e458438236b01f8e221772e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc475a082ce2d06a0e458438236b01f8e221772e"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "36f7715d1acc6771976b77f1287ae8dc6bdb0c0e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=66a63e0d327753984f05353b4cf68e0f734311fc", "patch": "@@ -1,3 +1,11 @@\n+2009-10-28  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-crtl.ads (System.CRTL.strerror): New function.\n+\n+2009-10-28  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb: Add guard to recover some type errors.\n+\n 2009-10-28  Vincent Celier  <celier@adacore.com>\n \n \t* prj-nmsc.adb (Add_To_Or_Remove_From_List): New name of procedure"}, {"sha": "f013a418fcba6181af312edca66dd9d86ffeb20a", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=66a63e0d327753984f05353b4cf68e0f734311fc", "patch": "@@ -202,4 +202,7 @@ package System.CRTL is\n    function write (fd : int; buffer : chars; nbytes : int) return int;\n    pragma Import (C, write, \"write\");\n \n+   function strerror (errno : int) return chars;\n+   pragma Import (C, strerror, \"strerror\");\n+\n end System.CRTL;"}, {"sha": "5b3a4f3ecfebaf79150e6c8f7b8ad836c2432826", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a63e0d327753984f05353b4cf68e0f734311fc/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=66a63e0d327753984f05353b4cf68e0f734311fc", "patch": "@@ -970,10 +970,16 @@ package body Sem_Type is\n       then\n          return Covers (Corresponding_Remote_Type (T2), T1);\n \n-      elsif Is_Record_Type (T1) and then Is_Concurrent_Type (T2) then\n+      elsif Is_Record_Type (T1)\n+        and then Is_Concurrent_Type (T2)\n+        and then Present (Corresponding_Record_Type (T2))\n+      then\n          return Covers (T1, Corresponding_Record_Type (T2));\n \n-      elsif Is_Concurrent_Type (T1) and then Is_Record_Type (T2) then\n+      elsif Is_Concurrent_Type (T1)\n+        and then Present (Corresponding_Record_Type (T1))\n+        and then Is_Record_Type (T2)\n+      then\n          return Covers (Corresponding_Record_Type (T1), T2);\n \n       elsif Ekind (T2) = E_Access_Attribute_Type"}]}