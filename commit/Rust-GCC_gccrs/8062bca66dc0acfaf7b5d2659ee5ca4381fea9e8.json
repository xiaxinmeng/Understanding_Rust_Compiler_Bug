{"sha": "8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA2MmJjYTY2ZGMwYWNmYWY3YjVkMjY1OWVlNWNhNDM4MWZlYTllOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-12-16T17:25:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-12-16T17:25:45Z"}, "message": "C FE: use correct location range for static assertions\n\ngcc/c/ChangeLog:\n\t* c-parser.c (c_parser_static_assert_declaration_no_semi): Use the\n\texpression location, falling back on the first token location,\n\trather than always using the latter.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/diagnostic-range-static-assert.c: New test case.\n\nFrom-SVN: r231704", "tree": {"sha": "1ee547d74e7d3d0c1c961fb845833707dd113d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ee547d74e7d3d0c1c961fb845833707dd113d75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "3ed1326fd05a1650f3417e54bab47ee0a05415d4", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "patch": "@@ -1,3 +1,9 @@\n+2015-12-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-parser.c (c_parser_static_assert_declaration_no_semi): Use the\n+\texpression location, falling back on the first token location,\n+\trather than always using the latter.\n+\n 2015-12-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/64637"}, {"sha": "5c32f45e21e72b16bf3044e851f1d46f50829cad", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "patch": "@@ -2097,8 +2097,9 @@ c_parser_static_assert_declaration_no_semi (c_parser *parser)\n   c_parser_consume_token (parser);\n   if (!c_parser_require (parser, CPP_OPEN_PAREN, \"expected %<(%>\"))\n     return;\n-  value_loc = c_parser_peek_token (parser)->location;\n+  location_t value_tok_loc = c_parser_peek_token (parser)->location;\n   value = c_parser_expr_no_commas (parser, NULL).value;\n+  value_loc = EXPR_LOC_OR_LOC (value, value_tok_loc);\n   parser->lex_untranslated_string = true;\n   if (!c_parser_require (parser, CPP_COMMA, \"expected %<,%>\"))\n     {"}, {"sha": "adfb4e059a01b859bc3dd2fb57ed010244be22bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "patch": "@@ -1,3 +1,7 @@\n+2015-12-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/diagnostic-range-static-assert.c: New test case.\n+\n 2015-12-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/64637"}, {"sha": "6f75476deb3660c790204410ff9a05fcd1c87122", "filename": "gcc/testsuite/gcc.dg/diagnostic-range-static-assert.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Ftestsuite%2Fgcc.dg%2Fdiagnostic-range-static-assert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8/gcc%2Ftestsuite%2Fgcc.dg%2Fdiagnostic-range-static-assert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdiagnostic-range-static-assert.c?ref=8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+void test_nonconst_static_assert (int param)\n+{\n+  int local = 0;\n+\n+  _Static_assert (param > 0, \"message\"); /* { dg-error \"expression in static assertion is not constant\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   _Static_assert (param > 0, \"message\");\n+                   ~~~~~~^~~\n+{ dg-end-multiline-output \"\" } */\n+\n+  _Static_assert (param, \"message\"); /* { dg-error \"expression in static assertion is not constant\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   _Static_assert (param, \"message\");\n+                   ^~~~~\n+{ dg-end-multiline-output \"\" } */\n+\n+  _Static_assert (local, \"message\"); /* { dg-error \"expression in static assertion is not constant\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   _Static_assert (local, \"message\");\n+                   ^~~~~\n+{ dg-end-multiline-output \"\" } */\n+}"}]}