{"sha": "bc6e9db4169f97f73385800ebd82afeb4caeebed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM2ZTlkYjQxNjlmOTdmNzMzODU4MDBlYmQ4MmFmZWI0Y2FlZWJlZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-26T12:05:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-26T12:05:22Z"}, "message": "re PR tree-optimization/69467 (Pattern X * C1 CMP 0 to X CMP 0 causes performance drop on 32-bit x86.)\n\n2016-01-26  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/69467\n\t* match.pd: Guard X * CST CMP 0 pattern with single_use.\n\nFrom-SVN: r232821", "tree": {"sha": "12c72ff76e36de47de6c4929d10f02eb77001ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12c72ff76e36de47de6c4929d10f02eb77001ef3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc6e9db4169f97f73385800ebd82afeb4caeebed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6e9db4169f97f73385800ebd82afeb4caeebed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc6e9db4169f97f73385800ebd82afeb4caeebed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6e9db4169f97f73385800ebd82afeb4caeebed/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ca46ff0bfa16bc70f04cb1119235f7223f7541a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc6e9db4169f97f73385800ebd82afeb4caeebed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc6e9db4169f97f73385800ebd82afeb4caeebed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc6e9db4169f97f73385800ebd82afeb4caeebed", "patch": "@@ -1,3 +1,8 @@\n+2016-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69467\n+\t* match.pd: Guard X * CST CMP 0 pattern with single_use.\n+\n 2016-01-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69452"}, {"sha": "5f28215701270a1a400018ebb58489b33c558ddd", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc6e9db4169f97f73385800ebd82afeb4caeebed/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc6e9db4169f97f73385800ebd82afeb4caeebed/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=bc6e9db4169f97f73385800ebd82afeb4caeebed", "patch": "@@ -1821,12 +1821,13 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for cmp (simple_comparison)\n      scmp (swapped_simple_comparison)\n  (simplify\n-  (cmp (mult @0 INTEGER_CST@1) integer_zerop@2)\n+  (cmp (mult@3 @0 INTEGER_CST@1) integer_zerop@2)\n   /* Handle unfolded multiplication by zero.  */\n   (if (integer_zerop (@1))\n    (cmp @1 @2)\n    (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n-\t&& TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+\t&& TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0))\n+\t&& single_use (@3))\n     /* If @1 is negative we swap the sense of the comparison.  */\n     (if (tree_int_cst_sgn (@1) < 0)\n      (scmp @0 @2)"}]}