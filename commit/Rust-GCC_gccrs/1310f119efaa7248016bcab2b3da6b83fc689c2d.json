{"sha": "1310f119efaa7248016bcab2b3da6b83fc689c2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMxMGYxMTllZmFhNzI0ODAxNmJjYWIyYjNkYTZiODNmYzY4OWMyZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-02-27T10:20:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-02-27T10:20:50Z"}, "message": "re PR tree-optimization/65193 (ICE: Segmentation fault with -g -flto)\n\n2015-02-27  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/65193\n\t* g++.dg/lto/pr65193_0.C: New testcase.\n\nFrom-SVN: r221050", "tree": {"sha": "27eeb177c6ce62bd7b21ea6a0e17c66ff0fe72bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27eeb177c6ce62bd7b21ea6a0e17c66ff0fe72bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1310f119efaa7248016bcab2b3da6b83fc689c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1310f119efaa7248016bcab2b3da6b83fc689c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1310f119efaa7248016bcab2b3da6b83fc689c2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1310f119efaa7248016bcab2b3da6b83fc689c2d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa2240d9888cc7c8460ad448768bce8620736a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2240d9888cc7c8460ad448768bce8620736a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2240d9888cc7c8460ad448768bce8620736a9d"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "3200f413e6c0c2f06ab67136303f3653ba1bf72b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1310f119efaa7248016bcab2b3da6b83fc689c2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1310f119efaa7248016bcab2b3da6b83fc689c2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1310f119efaa7248016bcab2b3da6b83fc689c2d", "patch": "@@ -1,3 +1,8 @@\n+2015-02-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/65193\n+\t* g++.dg/lto/pr65193_0.C: New testcase.\n+\n 2015-02-27  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* gcc.target/s390/20140327-1.c: Remove -m31 and guard with ! lp64."}, {"sha": "d778fcabb7fc7ba4c735707b6139cc855e8b7ef3", "filename": "gcc/testsuite/g++.dg/lto/pr65193_0.C", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1310f119efaa7248016bcab2b3da6b83fc689c2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr65193_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1310f119efaa7248016bcab2b3da6b83fc689c2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr65193_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr65193_0.C?ref=1310f119efaa7248016bcab2b3da6b83fc689c2d", "patch": "@@ -0,0 +1,71 @@\n+/* { dg-lto-do link } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-lto-options {{-fPIC -r -nostdlib -flto -O2 -g}} } */\n+\n+void frexp (int, int *);\n+namespace std\n+{\n+  int ldexp (int, int);\n+  struct A\n+    {\n+    };\n+  template <class T> T get_min_shift_value ();\n+  template <class> struct min_shift_initializer\n+    {\n+      struct B\n+\t{\n+\t  B () { get_min_shift_value<long double> (); }\n+\t} static const b;\n+      static void\n+\t  m_fn1 ()\n+\t    {\n+\t      b;\n+\t    }\n+    };\n+  template <class T>\n+      const typename min_shift_initializer<T>::B min_shift_initializer<T>::b;\n+  template <class T>\n+      inline T\n+      get_min_shift_value ()\n+\t{\n+\t  using std::ldexp;\n+\t  static T c = ldexp (0, 0);\n+\t  min_shift_initializer<T>::m_fn1;\n+\t}\n+  template <class T, class Policy>\n+      void\n+      float_next_imp (T p1, Policy p2)\n+\t{\n+\t  using std::ldexp;\n+\t  int d;\n+\t  float_next (0, p2);\n+\t  frexp (p1, &d);\n+\t}\n+  template <class T, class Policy>\n+      int\n+      float_next (const T &p1, Policy &p2)\n+\t{\n+\t  float_next_imp (p1, p2);\n+\t}\n+  template <class T, class Policy> void float_prior_imp (T, Policy)\n+    {\n+      get_min_shift_value<T> ();\n+    }\n+  template <class T, class Policy> int float_prior (T, Policy)\n+    {\n+      float_prior_imp (static_cast<T> (0), 0);\n+    }\n+  template <class T, class U, class Policy>\n+      void\n+      nextafter (T p1, U p2, Policy p3)\n+\t{\n+\t  p2 ? float_next (0, p3) : float_prior (p1, 0);\n+\t}\n+  long double e;\n+  int f;\n+  void\n+      nextafter ()\n+\t{\n+\t  nextafter (e, f, A ());\n+\t}\n+}"}]}