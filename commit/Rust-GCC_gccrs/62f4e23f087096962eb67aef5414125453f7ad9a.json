{"sha": "62f4e23f087096962eb67aef5414125453f7ad9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmNGUyM2YwODcwOTY5NjJlYjY3YWVmNTQxNDEyNTQ1M2Y3YWQ5YQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2004-11-30T20:33:34Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-11-30T20:33:34Z"}, "message": "fold-const.c (fold_widened_comparison): Make sure that we're passing an INTEGER_TYPE to int_fits_type_p.\n\n2004-11-30  Eric Christopher  <echristo@redhat.com>\n\n\t* fold-const.c (fold_widened_comparison): Make sure that we're\n\tpassing an INTEGER_TYPE to int_fits_type_p.\n\t(fold): Clean up comment.\n\nFrom-SVN: r91539", "tree": {"sha": "8c1a6b691af8f0a648c955da86420225030dd8f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1a6b691af8f0a648c955da86420225030dd8f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62f4e23f087096962eb67aef5414125453f7ad9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f4e23f087096962eb67aef5414125453f7ad9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f4e23f087096962eb67aef5414125453f7ad9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f4e23f087096962eb67aef5414125453f7ad9a/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ae5bf022387b0b62045323e7b0890ad90dc6ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae5bf022387b0b62045323e7b0890ad90dc6ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ae5bf022387b0b62045323e7b0890ad90dc6ee0"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "1478dd4f96f8dadd5c960bdaeb38bdaab97bc0c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f4e23f087096962eb67aef5414125453f7ad9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f4e23f087096962eb67aef5414125453f7ad9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62f4e23f087096962eb67aef5414125453f7ad9a", "patch": "@@ -1,3 +1,9 @@\n+2004-11-30  Eric Christopher  <echristo@redhat.com>\n+\n+\t* fold-const.c (fold_widened_comparison): Make sure that we're\n+\tpassing an INTEGER_TYPE to int_fits_type_p.\n+\t(fold): Clean up comment.\n+\n 2004-11-30  Zack Weinberg  <zack@codesourcery.com>\n \n \t* mklibgcc.in: Correct calculation of libgcc_s_soname and"}, {"sha": "8ddb039c52f3d69b7b2a8bcfa0e722d602566bd6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f4e23f087096962eb67aef5414125453f7ad9a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f4e23f087096962eb67aef5414125453f7ad9a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=62f4e23f087096962eb67aef5414125453f7ad9a", "patch": "@@ -6000,6 +6000,7 @@ fold_widened_comparison (enum tree_code code, tree type, tree arg0, tree arg1)\n        || TYPE_UNSIGNED (TREE_TYPE (arg0)) == TYPE_UNSIGNED (shorter_type))\n       && (TREE_TYPE (arg1_unw) == shorter_type\n \t  || (TREE_CODE (arg1_unw) == INTEGER_CST\n+\t      && TREE_CODE (shorter_type) == INTEGER_TYPE\n \t      && int_fits_type_p (arg1_unw, shorter_type))))\n     return fold (build (code, type, arg0_unw,\n \t\t\tfold_convert (shorter_type, arg1_unw)));\n@@ -8428,9 +8429,8 @@ fold (tree expr)\n       /* Comparisons with the highest or lowest possible integer of\n \t the specified size will have known values.\n \n-\t This is quite similar to fold_relational_hi_lo; however, my\n-\t attempts to share the code have been nothing but trouble.\n-\t I give up for now.  */\n+\t This is quite similar to fold_relational_hi_lo, however,\n+\t attempts to share the code have been nothing but trouble.  */\n       {\n \tint width = GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (arg1)));\n "}]}