{"sha": "3bcf19215d88e6ec33d283352c52005f02dbc784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjZjE5MjE1ZDg4ZTZlYzMzZDI4MzM1MmM1MjAwNWYwMmRiYzc4NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-16T12:26:09Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-18T09:42:44Z"}, "message": "coroutines: init struct members to NULL\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99617\n\t* coroutines.cc (struct var_nest_node): Init then_cl and else_cl\n\tto NULL.", "tree": {"sha": "baac0bdc969940db0bf2f16b04e3b4ea6f23af17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baac0bdc969940db0bf2f16b04e3b4ea6f23af17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bcf19215d88e6ec33d283352c52005f02dbc784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf19215d88e6ec33d283352c52005f02dbc784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bcf19215d88e6ec33d283352c52005f02dbc784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf19215d88e6ec33d283352c52005f02dbc784/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e274408c237c08d2f78722e3767651ef931170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e274408c237c08d2f78722e3767651ef931170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e274408c237c08d2f78722e3767651ef931170"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dbd703a67cc8bb3e2cdc4caebade1a31c56dc77b", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcf19215d88e6ec33d283352c52005f02dbc784/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcf19215d88e6ec33d283352c52005f02dbc784/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=3bcf19215d88e6ec33d283352c52005f02dbc784", "patch": "@@ -2805,7 +2805,7 @@ struct var_nest_node\n {\n   var_nest_node () = default;\n   var_nest_node (tree v, tree i, var_nest_node *p, var_nest_node *n)\n-    : var(v), init(i), prev(p), next(n)\n+    : var(v), init(i), prev(p), next(n), then_cl (NULL), else_cl (NULL)\n     {\n       if (p)\n \tp->next = this;"}]}