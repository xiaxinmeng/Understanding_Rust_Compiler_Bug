{"sha": "39dd88f08d3f8e69796f77aba403d5ade33df9c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkZDg4ZjA4ZDNmOGU2OTc5NmY3N2FiYTQwM2Q1YWRlMzNkZjljMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-04-30T22:41:00Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-04-30T22:41:00Z"}, "message": "2007-04-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tDirectory layout flattening.\n\nFrom-SVN: r124307", "tree": {"sha": "81a30ede1cbc0bd9f5d0f46018af35d3ac904714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81a30ede1cbc0bd9f5d0f46018af35d3ac904714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39dd88f08d3f8e69796f77aba403d5ade33df9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dd88f08d3f8e69796f77aba403d5ade33df9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39dd88f08d3f8e69796f77aba403d5ade33df9c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dd88f08d3f8e69796f77aba403d5ade33df9c0/comments", "author": null, "committer": null, "parents": [{"sha": "813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24"}], "stats": {"total": 2895, "additions": 2862, "deletions": 33}, "files": [{"sha": "885a7865ad660d5e458db387d9fb69f9d82990da", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 594, "deletions": 0, "changes": 594, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -1,3 +1,597 @@\n+2007-04-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tDirectory layout flattening.\n+\n+\tAdded in testsuite:\n+\t* tr1/4_metaprogramming/add_const\n+\t* tr1/4_metaprogramming/add_const/requirements\n+\t* tr1/4_metaprogramming/add_const/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/add_const/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/add_cv\n+\t* tr1/4_metaprogramming/add_cv/requirements\n+\t* tr1/4_metaprogramming/add_cv/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/add_cv/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/add_pointer\n+\t* tr1/4_metaprogramming/add_pointer/requirements\n+\t* tr1/4_metaprogramming/add_pointer/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/add_pointer/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/add_reference\n+\t* tr1/4_metaprogramming/add_reference/requirements\n+\t* tr1/4_metaprogramming/add_reference/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/add_reference/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/add_volatile\n+\t* tr1/4_metaprogramming/add_volatile/requirements\n+\t* tr1/4_metaprogramming/add_volatile/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/add_volatile/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/aligned_storage\n+\t* tr1/4_metaprogramming/aligned_storage/requirements\n+\t* tr1/4_metaprogramming/aligned_storage/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/aligned_storage/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/alignment_of\n+\t* tr1/4_metaprogramming/alignment_of/requirements\n+\t* tr1/4_metaprogramming/alignment_of/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/alignment_of/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/alignment_of/value.cc\n+\t* tr1/4_metaprogramming/extent\n+\t* tr1/4_metaprogramming/extent/requirements\n+\t* tr1/4_metaprogramming/extent/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/extent/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/extent/value.cc\n+\t* tr1/4_metaprogramming/has_nothrow_assign\n+\t* tr1/4_metaprogramming/has_nothrow_assign/requirements\n+\t* tr1/4_metaprogramming/has_nothrow_assign/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_nothrow_assign/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_assign/value.cc\n+\t* tr1/4_metaprogramming/has_nothrow_constructor\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/requirements\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/\n+\trequirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/value.cc\n+\t* tr1/4_metaprogramming/has_nothrow_copy\n+\t* tr1/4_metaprogramming/has_nothrow_copy/requirements\n+\t* tr1/4_metaprogramming/has_nothrow_copy/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_nothrow_copy/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_copy/value.cc\n+\t* tr1/4_metaprogramming/has_trivial_assign\n+\t* tr1/4_metaprogramming/has_trivial_assign/requirements\n+\t* tr1/4_metaprogramming/has_trivial_assign/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_trivial_assign/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_assign/value.cc\n+\t* tr1/4_metaprogramming/has_trivial_constructor\n+\t* tr1/4_metaprogramming/has_trivial_constructor/requirements\n+\t* tr1/4_metaprogramming/has_trivial_constructor/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_trivial_constructor/\n+\trequirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_constructor/value.cc\n+\t* tr1/4_metaprogramming/has_trivial_copy\n+\t* tr1/4_metaprogramming/has_trivial_copy/requirements\n+\t* tr1/4_metaprogramming/has_trivial_copy/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_trivial_copy/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_copy/value.cc\n+\t* tr1/4_metaprogramming/has_trivial_destructor\n+\t* tr1/4_metaprogramming/has_trivial_destructor/requirements\n+\t* tr1/4_metaprogramming/has_trivial_destructor/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_trivial_destructor/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_destructor/value.cc\n+\t* tr1/4_metaprogramming/has_virtual_destructor\n+\t* tr1/4_metaprogramming/has_virtual_destructor/requirements\n+\t* tr1/4_metaprogramming/has_virtual_destructor/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/has_virtual_destructor/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/has_virtual_destructor/value.cc\n+\t* tr1/4_metaprogramming/integral_constant\n+\t* tr1/4_metaprogramming/integral_constant/requirements\n+\t* tr1/4_metaprogramming/integral_constant/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/integral_constant/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/integral_constant/true_false_value.cc\n+\t* tr1/4_metaprogramming/is_abstract\n+\t* tr1/4_metaprogramming/is_abstract/requirements\n+\t* tr1/4_metaprogramming/is_abstract/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_abstract/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_abstract/value.cc\n+\t* tr1/4_metaprogramming/is_arithmetic\n+\t* tr1/4_metaprogramming/is_arithmetic/requirements\n+\t* tr1/4_metaprogramming/is_arithmetic/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_arithmetic/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_arithmetic/value.cc\n+\t* tr1/4_metaprogramming/is_array\n+\t* tr1/4_metaprogramming/is_array/requirements\n+\t* tr1/4_metaprogramming/is_array/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_array/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_array/value.cc\n+\t* tr1/4_metaprogramming/is_base_of\n+\t* tr1/4_metaprogramming/is_base_of/requirements\n+\t* tr1/4_metaprogramming/is_base_of/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_base_of/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_base_of/value.cc\n+\t* tr1/4_metaprogramming/is_class\n+\t* tr1/4_metaprogramming/is_class/requirements\n+\t* tr1/4_metaprogramming/is_class/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_class/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_class/value.cc\n+\t* tr1/4_metaprogramming/is_compound\n+\t* tr1/4_metaprogramming/is_compound/requirements\n+\t* tr1/4_metaprogramming/is_compound/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_compound/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_compound/value.cc\n+\t* tr1/4_metaprogramming/is_const\n+\t* tr1/4_metaprogramming/is_const/requirements\n+\t* tr1/4_metaprogramming/is_const/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_const/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_const/value.cc\n+\t* tr1/4_metaprogramming/is_convertible\n+\t* tr1/4_metaprogramming/is_convertible/requirements\n+\t* tr1/4_metaprogramming/is_convertible/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_convertible/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_convertible/value.cc\n+\t* tr1/4_metaprogramming/is_empty\n+\t* tr1/4_metaprogramming/is_empty/requirements\n+\t* tr1/4_metaprogramming/is_empty/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_empty/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_empty/value.cc\n+\t* tr1/4_metaprogramming/is_enum\n+\t* tr1/4_metaprogramming/is_enum/requirements\n+\t* tr1/4_metaprogramming/is_enum/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_enum/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_enum/value.cc\n+\t* tr1/4_metaprogramming/is_floating_point\n+\t* tr1/4_metaprogramming/is_floating_point/requirements\n+\t* tr1/4_metaprogramming/is_floating_point/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_floating_point/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_floating_point/value.cc\n+\t* tr1/4_metaprogramming/is_function\n+\t* tr1/4_metaprogramming/is_function/requirements\n+\t* tr1/4_metaprogramming/is_function/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_function/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_function/value.cc\n+\t* tr1/4_metaprogramming/is_fundamental\n+\t* tr1/4_metaprogramming/is_fundamental/requirements\n+\t* tr1/4_metaprogramming/is_fundamental/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_fundamental/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_fundamental/value.cc\n+\t* tr1/4_metaprogramming/is_integral\n+\t* tr1/4_metaprogramming/is_integral/requirements\n+\t* tr1/4_metaprogramming/is_integral/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_integral/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_integral/value.cc\n+\t* tr1/4_metaprogramming/is_member_function_pointer\n+\t* tr1/4_metaprogramming/is_member_function_pointer/requirements\n+\t* tr1/4_metaprogramming/is_member_function_pointer/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_member_function_pointer/\n+\trequirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_function_pointer/value.cc\n+\t* tr1/4_metaprogramming/is_member_object_pointer\n+\t* tr1/4_metaprogramming/is_member_object_pointer/requirements\n+\t* tr1/4_metaprogramming/is_member_object_pointer/\n+\trequirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_member_object_pointer/\n+\trequirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_object_pointer/value.cc\n+\t* tr1/4_metaprogramming/is_member_pointer\n+\t* tr1/4_metaprogramming/is_member_pointer/requirements\n+\t* tr1/4_metaprogramming/is_member_pointer/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_member_pointer/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_pointer/value.cc\n+\t* tr1/4_metaprogramming/is_object\n+\t* tr1/4_metaprogramming/is_object/requirements\n+\t* tr1/4_metaprogramming/is_object/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_object/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_object/value.cc\n+\t* tr1/4_metaprogramming/is_pod\n+\t* tr1/4_metaprogramming/is_pod/requirements\n+\t* tr1/4_metaprogramming/is_pod/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_pod/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_pod/value.cc\n+\t* tr1/4_metaprogramming/is_pointer\n+\t* tr1/4_metaprogramming/is_pointer/requirements\n+\t* tr1/4_metaprogramming/is_pointer/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_pointer/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_pointer/value.cc\n+\t* tr1/4_metaprogramming/is_polymorphic\n+\t* tr1/4_metaprogramming/is_polymorphic/requirements\n+\t* tr1/4_metaprogramming/is_polymorphic/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_polymorphic/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_polymorphic/value.cc\n+\t* tr1/4_metaprogramming/is_reference\n+\t* tr1/4_metaprogramming/is_reference/requirements\n+\t* tr1/4_metaprogramming/is_reference/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_reference/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_reference/value.cc\n+\t* tr1/4_metaprogramming/is_same\n+\t* tr1/4_metaprogramming/is_same/requirements\n+\t* tr1/4_metaprogramming/is_same/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_same/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_same/value.cc\n+\t* tr1/4_metaprogramming/is_scalar\n+\t* tr1/4_metaprogramming/is_scalar/requirements\n+\t* tr1/4_metaprogramming/is_scalar/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_scalar/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_scalar/value.cc\n+\t* tr1/4_metaprogramming/is_signed\n+\t* tr1/4_metaprogramming/is_signed/requirements\n+\t* tr1/4_metaprogramming/is_signed/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_signed/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_signed/value.cc\n+\t* tr1/4_metaprogramming/is_union\n+\t* tr1/4_metaprogramming/is_union/requirements\n+\t* tr1/4_metaprogramming/is_union/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_union/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_union/value.cc\n+\t* tr1/4_metaprogramming/is_unsigned\n+\t* tr1/4_metaprogramming/is_unsigned/requirements\n+\t* tr1/4_metaprogramming/is_unsigned/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_unsigned/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_unsigned/value.cc\n+\t* tr1/4_metaprogramming/is_void\n+\t* tr1/4_metaprogramming/is_void/requirements\n+\t* tr1/4_metaprogramming/is_void/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_void/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_void/value.cc\n+\t* tr1/4_metaprogramming/is_volatile\n+\t* tr1/4_metaprogramming/is_volatile/requirements\n+\t* tr1/4_metaprogramming/is_volatile/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/is_volatile/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/is_volatile/value.cc\n+\t* tr1/4_metaprogramming/rank\n+\t* tr1/4_metaprogramming/rank/requirements\n+\t* tr1/4_metaprogramming/rank/requirements/explicit_instantiations.cc\n+\t* tr1/4_metaprogramming/rank/requirements/typedefs.cc\n+\t* tr1/4_metaprogramming/rank/value.cc\n+\t* tr1/4_metaprogramming/remove_all_extents\n+\t* tr1/4_metaprogramming/remove_all_extents/requirements\n+\t* tr1/4_metaprogramming/remove_all_extents/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_all_extents/value.cc\n+\t* tr1/4_metaprogramming/remove_const\n+\t* tr1/4_metaprogramming/remove_const/requirements\n+\t* tr1/4_metaprogramming/remove_const/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_const/value.cc\n+\t* tr1/4_metaprogramming/remove_cv\n+\t* tr1/4_metaprogramming/remove_cv/requirements\n+\t* tr1/4_metaprogramming/remove_cv/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_cv/value.cc\n+\t* tr1/4_metaprogramming/remove_extent\n+\t* tr1/4_metaprogramming/remove_extent/requirements\n+\t* tr1/4_metaprogramming/remove_extent/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_extent/value.cc\n+\t* tr1/4_metaprogramming/remove_pointer\n+\t* tr1/4_metaprogramming/remove_pointer/requirements\n+\t* tr1/4_metaprogramming/remove_pointer/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_pointer/value.cc\n+\t* tr1/4_metaprogramming/remove_reference\n+\t* tr1/4_metaprogramming/remove_reference/requirements\n+\t* tr1/4_metaprogramming/remove_reference/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_reference/value.cc\n+\t* tr1/4_metaprogramming/remove_volatile\n+\t* tr1/4_metaprogramming/remove_volatile/requirements\n+\t* tr1/4_metaprogramming/remove_volatile/requirements/\n+\texplicit_instantiations.cc\n+\t* tr1/4_metaprogramming/remove_volatile/value.cc\n+\n+\tDeleted in testsuite:\t\n+\t* tr1/4_metaprogramming/alignment_of/alignment_of.cc\n+\t* tr1/4_metaprogramming/alignment_of/typedefs.cc\n+\t* tr1/4_metaprogramming/array_modifications\n+\t* tr1/4_metaprogramming/array_modifications/remove_all_extents.cc\n+\t* tr1/4_metaprogramming/array_modifications/remove_extent.cc\n+\t* tr1/4_metaprogramming/composite_type_traits\n+\t* tr1/4_metaprogramming/composite_type_traits/is_arithmetic\n+\t* tr1/4_metaprogramming/composite_type_traits/is_arithmetic/\n+\tis_arithmetic.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_arithmetic/typedefs.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_compound\n+\t* tr1/4_metaprogramming/composite_type_traits/is_compound/\n+\tis_compound.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_compound/typedefs.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_fundamental\n+\t* tr1/4_metaprogramming/composite_type_traits/is_fundamental/\n+\tis_fundamental.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_fundamental/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_member_pointer\n+\t* tr1/4_metaprogramming/composite_type_traits/is_member_pointer/\n+\tis_member_pointer.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_member_pointer/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_object\n+\t* tr1/4_metaprogramming/composite_type_traits/is_object/24808.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_object/is_object.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_object/typedefs.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_scalar\n+\t* tr1/4_metaprogramming/composite_type_traits/is_scalar/is_scalar.cc\n+\t* tr1/4_metaprogramming/composite_type_traits/is_scalar/typedefs.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications\n+\t* tr1/4_metaprogramming/const_volatile_modifications/add_const.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications/add_cv.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications/add_volatile.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications/remove_const.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications/remove_cv.cc\n+\t* tr1/4_metaprogramming/const_volatile_modifications/remove_volatile.cc\n+\t* tr1/4_metaprogramming/extent/extent.cc\n+\t* tr1/4_metaprogramming/extent/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_assign/has_nothrow_assign.cc\n+\t* tr1/4_metaprogramming/has_nothrow_assign/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/\n+\thas_nothrow_constructor.cc\n+\t* tr1/4_metaprogramming/has_nothrow_constructor/typedefs.cc\n+\t* tr1/4_metaprogramming/has_nothrow_copy/has_nothrow_copy.cc\n+\t* tr1/4_metaprogramming/has_nothrow_copy/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_assign/has_trivial_assign.cc\n+\t* tr1/4_metaprogramming/has_trivial_assign/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_constructor/\n+\thas_trivial_constructor.cc\n+\t* tr1/4_metaprogramming/has_trivial_constructor/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_copy/has_trivial_copy.cc\n+\t* tr1/4_metaprogramming/has_trivial_copy/typedefs.cc\n+\t* tr1/4_metaprogramming/has_trivial_destructor/\n+\thas_trivial_destructor.cc\n+\t* tr1/4_metaprogramming/has_trivial_destructor/typedefs.cc\n+\t* tr1/4_metaprogramming/has_virtual_destructor/\n+\thas_virtual_destructor.cc\n+\t* tr1/4_metaprogramming/has_virtual_destructor/typedefs.cc\n+\t* tr1/4_metaprogramming/helper_classes\n+\t* tr1/4_metaprogramming/helper_classes/static_definition.cc\n+\t* tr1/4_metaprogramming/helper_classes/true_false_type.cc\n+\t* tr1/4_metaprogramming/helper_classes/true_false_type_typedefs.cc\n+\t* tr1/4_metaprogramming/helper_classes/typedefs.cc\n+\t* tr1/4_metaprogramming/integral_constant/true_false_type.cc\n+\t* tr1/4_metaprogramming/integral_constant/typedefs.cc\n+\t* tr1/4_metaprogramming/is_abstract/is_abstract.cc\n+\t* tr1/4_metaprogramming/is_abstract/typedefs.cc\n+\t* tr1/4_metaprogramming/is_arithmetic/is_arithmetic.cc\n+\t* tr1/4_metaprogramming/is_arithmetic/typedefs.cc\n+\t* tr1/4_metaprogramming/is_array/is_array.cc\n+\t* tr1/4_metaprogramming/is_array/typedefs.cc\n+\t* tr1/4_metaprogramming/is_base_of/is_base_of.cc\n+\t* tr1/4_metaprogramming/is_base_of/typedefs.cc\n+\t* tr1/4_metaprogramming/is_class/is_class.cc\n+\t* tr1/4_metaprogramming/is_class/typedefs.cc\n+\t* tr1/4_metaprogramming/is_compound/is_compound.cc\n+\t* tr1/4_metaprogramming/is_compound/typedefs.cc\n+\t* tr1/4_metaprogramming/is_const/is_const.cc\n+\t* tr1/4_metaprogramming/is_const/typedefs.cc\n+\t* tr1/4_metaprogramming/is_convertible/is_convertible.cc\n+\t* tr1/4_metaprogramming/is_convertible/typedefs.cc\n+\t* tr1/4_metaprogramming/is_empty/is_empty.cc\n+\t* tr1/4_metaprogramming/is_empty/typedefs.cc\n+\t* tr1/4_metaprogramming/is_enum/is_enum.cc\n+\t* tr1/4_metaprogramming/is_enum/typedefs.cc\n+\t* tr1/4_metaprogramming/is_floating_point/is_floating_point.cc\n+\t* tr1/4_metaprogramming/is_floating_point/typedefs.cc\n+\t* tr1/4_metaprogramming/is_function/is_function.cc\n+\t* tr1/4_metaprogramming/is_function/typedefs.cc\n+\t* tr1/4_metaprogramming/is_fundamental/is_fundamental.cc\n+\t* tr1/4_metaprogramming/is_fundamental/typedefs.cc\n+\t* tr1/4_metaprogramming/is_integral/is_integral.cc\n+\t* tr1/4_metaprogramming/is_integral/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_function_pointer/\n+\tis_member_function_pointer.cc\n+\t* tr1/4_metaprogramming/is_member_function_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_object_pointer/\n+\tis_member_object_pointer.cc\n+\t* tr1/4_metaprogramming/is_member_object_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/is_member_pointer/is_member_pointer.cc\n+\t* tr1/4_metaprogramming/is_member_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/is_object/is_object.cc\n+\t* tr1/4_metaprogramming/is_object/typedefs.cc\n+\t* tr1/4_metaprogramming/is_pod/is_pod.cc\n+\t* tr1/4_metaprogramming/is_pod/typedefs.cc\n+\t* tr1/4_metaprogramming/is_pointer/is_pointer.cc\n+\t* tr1/4_metaprogramming/is_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/is_polymorphic/is_polymorphic.cc\n+\t* tr1/4_metaprogramming/is_polymorphic/typedefs.cc\n+\t* tr1/4_metaprogramming/is_reference/is_reference.cc\n+\t* tr1/4_metaprogramming/is_reference/typedefs.cc\n+\t* tr1/4_metaprogramming/is_same/is_same.cc\n+\t* tr1/4_metaprogramming/is_same/typedefs.cc\n+\t* tr1/4_metaprogramming/is_scalar/is_scalar.cc\n+\t* tr1/4_metaprogramming/is_scalar/typedefs.cc\n+\t* tr1/4_metaprogramming/is_signed/is_signed.cc\n+\t* tr1/4_metaprogramming/is_signed/typedefs.cc\n+\t* tr1/4_metaprogramming/is_union/is_union.cc\n+\t* tr1/4_metaprogramming/is_union/typedefs.cc\n+\t* tr1/4_metaprogramming/is_unsigned/is_unsigned.cc\n+\t* tr1/4_metaprogramming/is_unsigned/typedefs.cc\n+\t* tr1/4_metaprogramming/is_void/is_void.cc\n+\t* tr1/4_metaprogramming/is_void/typedefs.cc\n+\t* tr1/4_metaprogramming/is_volatile/is_volatile.cc\n+\t* tr1/4_metaprogramming/is_volatile/typedefs.cc\n+\t* tr1/4_metaprogramming/other_transformations\n+\t* tr1/4_metaprogramming/other_transformations/aligned_storage\n+\t* tr1/4_metaprogramming/other_transformations/aligned_storage/\n+\taligned_storage.cc\n+\t* tr1/4_metaprogramming/other_transformations/aligned_storage/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/pointer_modifications\n+\t* tr1/4_metaprogramming/pointer_modifications/add_pointer.cc\n+\t* tr1/4_metaprogramming/pointer_modifications/remove_pointer.cc\n+\t* tr1/4_metaprogramming/primary_type_categories\n+\t* tr1/4_metaprogramming/primary_type_categories/is_array\n+\t* tr1/4_metaprogramming/primary_type_categories/is_array/is_array.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_array/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_class\n+\t* tr1/4_metaprogramming/primary_type_categories/is_class/is_class.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_class/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_enum\n+\t* tr1/4_metaprogramming/primary_type_categories/is_enum/24808.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_enum/is_enum.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_enum/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_floating_point\n+\t* tr1/4_metaprogramming/primary_type_categories/is_floating_point/\n+\tis_floating_point.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_floating_point/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_function\n+\t* tr1/4_metaprogramming/primary_type_categories/is_function/24808.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_function/\n+\tis_function.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_function/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_integral\n+\t* tr1/4_metaprogramming/primary_type_categories/is_integral/\n+\tis_integral.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_integral/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_function_pointer\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_function_pointer/is_member_function_pointer.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_function_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_object_pointer\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_object_pointer/is_member_object_pointer.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/\n+\tis_member_object_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_pointer\n+\t* tr1/4_metaprogramming/primary_type_categories/is_pointer/\n+\tis_pointer.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_pointer/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_reference\n+\t* tr1/4_metaprogramming/primary_type_categories/is_reference/\n+\tis_reference.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_reference/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_union\n+\t* tr1/4_metaprogramming/primary_type_categories/is_union/is_union.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_union/typedefs.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_void\n+\t* tr1/4_metaprogramming/primary_type_categories/is_void/is_void.cc\n+\t* tr1/4_metaprogramming/primary_type_categories/is_void/typedefs.cc\n+\t* tr1/4_metaprogramming/rank/rank.cc\n+\t* tr1/4_metaprogramming/rank/typedefs.cc\n+\t* tr1/4_metaprogramming/reference_modifications/add_reference.cc\n+\t* tr1/4_metaprogramming/reference_modifications/remove_reference.cc\n+\t* tr1/4_metaprogramming/relationships_between_types\n+\t* tr1/4_metaprogramming/relationships_between_types/is_base_of\n+\t* tr1/4_metaprogramming/relationships_between_types/is_base_of/\n+\tis_base_of.cc\n+\t* tr1/4_metaprogramming/relationships_between_types/is_base_of/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/relationships_between_types/is_convertible\n+\t* tr1/4_metaprogramming/relationships_between_types/is_convertible/\n+\tis_convertible.cc\n+\t* tr1/4_metaprogramming/relationships_between_types/is_convertible/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/relationships_between_types/is_same\n+\t* tr1/4_metaprogramming/relationships_between_types/is_same/is_same.cc\n+\t* tr1/4_metaprogramming/relationships_between_types/is_same/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties\n+\t* tr1/4_metaprogramming/type_properties/alignment_of\n+\t* tr1/4_metaprogramming/type_properties/alignment_of/alignment_of.cc\n+\t* tr1/4_metaprogramming/type_properties/alignment_of/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/extent\n+\t* tr1/4_metaprogramming/type_properties/extent/extent.cc\n+\t* tr1/4_metaprogramming/type_properties/extent/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_assign\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_assign/\n+\thas_nothrow_assign.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_assign/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_constructor\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_constructor/\n+\thas_nothrow_constructor.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_constructor/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_copy\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_copy/\n+\thas_nothrow_copy.cc\n+\t* tr1/4_metaprogramming/type_properties/has_nothrow_copy/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_assign\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_assign/\n+\thas_trivial_assign.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_assign/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_constructor\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_constructor/\n+\thas_trivial_constructor.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_constructor/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_copy\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_copy/\n+\thas_trivial_copy.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_copy/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_destructor\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_destructor/\n+\thas_trivial_destructor.cc\n+\t* tr1/4_metaprogramming/type_properties/has_trivial_destructor/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/has_virtual_destructor\n+\t* tr1/4_metaprogramming/type_properties/has_virtual_destructor/\n+\thas_virtual_destructor.cc\n+\t* tr1/4_metaprogramming/type_properties/has_virtual_destructor/\n+\ttypedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_abstract\n+\t* tr1/4_metaprogramming/type_properties/is_abstract/is_abstract.cc\n+\t* tr1/4_metaprogramming/type_properties/is_abstract/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_const\n+\t* tr1/4_metaprogramming/type_properties/is_const/is_const.cc\n+\t* tr1/4_metaprogramming/type_properties/is_const/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_empty\n+\t* tr1/4_metaprogramming/type_properties/is_empty/is_empty.cc\n+\t* tr1/4_metaprogramming/type_properties/is_empty/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_pod\n+\t* tr1/4_metaprogramming/type_properties/is_pod/is_pod.cc\n+\t* tr1/4_metaprogramming/type_properties/is_pod/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_polymorphic\n+\t* tr1/4_metaprogramming/type_properties/is_polymorphic/24809.cc\n+\t* tr1/4_metaprogramming/type_properties/is_polymorphic/\n+\tis_polymorphic.cc\n+\t* tr1/4_metaprogramming/type_properties/is_polymorphic/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_signed\n+\t* tr1/4_metaprogramming/type_properties/is_signed/is_signed.cc\n+\t* tr1/4_metaprogramming/type_properties/is_signed/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_unsigned\n+\t* tr1/4_metaprogramming/type_properties/is_unsigned/is_unsigned.cc\n+\t* tr1/4_metaprogramming/type_properties/is_unsigned/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/is_volatile\n+\t* tr1/4_metaprogramming/type_properties/is_volatile/is_volatile.cc\n+\t* tr1/4_metaprogramming/type_properties/is_volatile/typedefs.cc\n+\t* tr1/4_metaprogramming/type_properties/rank\n+\t* tr1/4_metaprogramming/type_properties/rank/rank.cc\n+\t* tr1/4_metaprogramming/type_properties/rank/typedefs.cc\n+\n 2007-04-30  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Correct"}, {"sha": "585d45e5ef2dd12d861cd5d3df06df354bc02e40", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_const/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct add_const<test_type>;\n+  }\n+}"}, {"sha": "8669098bc3d74c61da131842c1fefe8e81023691", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_const/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_const%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/add_const.cc"}, {"sha": "478f05b561ec15332e4e899a8f783cc3191d5306", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_cv/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct add_cv<test_type>;\n+  }\n+}"}, {"sha": "c197501b08ecd4045e9b60a43160bd1c09747f35", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_cv/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_cv%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/add_cv.cc"}, {"sha": "00ec52114b0a629e46d0c4ae4308b5c3cae91247", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct add_pointer<test_type>;\n+  }\n+}"}, {"sha": "d87cd2e4271ab5b688a6e0c823307ecf2805fe2e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_pointer/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_pointer%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/pointer_modifications/add_pointer.cc"}, {"sha": "fc08b6886d99302ece17c7915f1e459e10bb3394", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_reference/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct add_reference<test_type>;\n+  }\n+}"}, {"sha": "29ad8c3d994152d3acaf854b8ae2e08c71170a51", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_reference/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_reference%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/reference_modifications/add_reference.cc"}, {"sha": "322946bcda239ccca068f87d50cf3071cc2503c1", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_volatile/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct add_volatile<test_type>;\n+  }\n+}"}, {"sha": "489b05950b9b3dff9f5a8ea9d4c94620612fbde9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/add_volatile/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fadd_volatile%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/add_volatile.cc"}, {"sha": "f813d7f29f662e6764f085245cb6d49f482dab2c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/aligned_storage/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct aligned_storage<1, alignment_of<test_type>::value>;\n+  }\n+}"}, {"sha": "bbc336c24c84d2cedae05180ae9b111785a9110d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/aligned_storage/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Faligned_storage%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/other_transformations/aligned_storage/aligned_storage.cc"}, {"sha": "05f0cc8c4aebdecea4304229c54464272880ca17", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/alignment_of/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct alignment_of<test_type>;\n+  }\n+}"}, {"sha": "8df7bba0a1d7fadcead88be36146ea1e3544bed7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/alignment_of/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/alignment_of/typedefs.cc"}, {"sha": "6da2822c6eedf35267ab6497791a0e5b053699a3", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/alignment_of/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Falignment_of%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/alignment_of/alignment_of.cc"}, {"sha": "bcf77fe44bede00435164e5ef5e23870f931e811", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/extent/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct extent<test_type, 2>;\n+  }\n+}"}, {"sha": "c7d4b958c57326b6eb5aae0b641141c3c66bb64e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/extent/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/extent/typedefs.cc"}, {"sha": "6ccecacc06b83924c9e14346c3c74252a169389e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/extent/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fextent%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/extent/extent.cc"}, {"sha": "b32945f76ca648175f553393022735ef948f9b68", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_assign/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_nothrow_assign<test_type>;\n+  }\n+}"}, {"sha": "7251a3aaa63c44b52fb87269396e1122e0bdd2ac", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_assign/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_assign/typedefs.cc"}, {"sha": "b74d932c148d3b14a6a572756c791cd343a68123", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_assign/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_assign%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_assign/has_nothrow_assign.cc"}, {"sha": "035747b0abd7a7cfb13941087a19641d0a333e5e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_constructor/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_nothrow_constructor<test_type>;\n+  }\n+}"}, {"sha": "9e119845981d79731a2af20ade6016694c14ac9d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_constructor/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_constructor/typedefs.cc"}, {"sha": "02743a14e95d21474b66fdd62a278a0ca4db8039", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_constructor/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_constructor%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_constructor/has_nothrow_constructor.cc"}, {"sha": "f34acd6f66c9faf2246f57cd3c3a3de59d9c534b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_copy/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_nothrow_copy<test_type>;\n+  }\n+}"}, {"sha": "4ec8cb0ab2f081aa4debbbc899abc83a63cee8ca", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_copy/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_copy/typedefs.cc"}, {"sha": "2ba1d9e073c224c2484e7b36878040fd1e885a2b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_nothrow_copy/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_nothrow_copy%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_copy/has_nothrow_copy.cc"}, {"sha": "3db63384c8e0f63ab8681bb1d851735ab47bb75b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_assign/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_trivial_assign<test_type>;\n+  }\n+}"}, {"sha": "124131d95bc1d8ab1373936b28d3705cd1113055", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_assign/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_assign/typedefs.cc"}, {"sha": "ac3553562c8d223d962517d947921ae9b91224db", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_assign/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_assign%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_assign/has_trivial_assign.cc"}, {"sha": "de52f599d4de5cea9c2cefcb964b1f024258bfe0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_constructor/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_trivial_constructor<test_type>;\n+  }\n+}"}, {"sha": "f6a57fcb63d3bf4c2e14d1d7cb97c965991b33ca", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_constructor/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_constructor/typedefs.cc"}, {"sha": "f6b1a1aa526e7b9435c04e1638f8b869af6fbd74", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_constructor/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_constructor%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_constructor/has_trivial_constructor.cc"}, {"sha": "3194119da6b953b747505e76448b9b5c7584e83e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_copy/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_trivial_copy<test_type>;\n+  }\n+}"}, {"sha": "0996f4648d0e4377823e4074983bca5e0d4c6fbc", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_copy/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_copy/typedefs.cc"}, {"sha": "8158c1832003f4402569ae36663f28fc9b847a0d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_copy/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_copy%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_copy/has_trivial_copy.cc"}, {"sha": "6e2f67811312d6ed64a17c91811adcb5fc93a1b7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_destructor/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_trivial_destructor<test_type>;\n+  }\n+}"}, {"sha": "948658943e7833e4317128e9c982441e2ee96a65", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_destructor/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_destructor/typedefs.cc"}, {"sha": "197de982b2bde155fa6b6b3c77b2aeaeb6a889ab", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_trivial_destructor/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_trivial_destructor%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_destructor/has_trivial_destructor.cc"}, {"sha": "c53010304ca96ff77917f743ef2c77ae139b1dcc", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_virtual_destructor/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct has_virtual_destructor<test_type>;\n+  }\n+}"}, {"sha": "94d81eafb216b5db97d52edad2c9e4603db37455", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_virtual_destructor/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_virtual_destructor/typedefs.cc"}, {"sha": "910aeded2d5651f59a6611d82f0d3c780292cf5a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/has_virtual_destructor/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fhas_virtual_destructor%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_virtual_destructor/has_virtual_destructor.cc"}, {"sha": "eee47464140eacda3b445852839e88e64b459e51", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct integral_constant<test_type, -3>;\n+  }\n+}"}, {"sha": "e96c322ead0cb595da92af9e98e5a4add5153617", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/helper_classes/typedefs.cc"}, {"sha": "bb2b3cd87cba5d6061fec2113b51e340eaa5ff0a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/static_definition.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Fstatic_definition.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Fstatic_definition.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Fstatic_definition.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/helper_classes/static_definition.cc"}, {"sha": "853ea723c7a257dbf7fdb6c7dec35e37c1c90a7b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/true_false_type_typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_type_typedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_type_typedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_type_typedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/helper_classes/true_false_type_typedefs.cc"}, {"sha": "f3a65d62070e5d09288c22685abe89648a09b7e6", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/true_false_value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Ftrue_false_value.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/helper_classes/true_false_type.cc"}, {"sha": "de6f7342e6f847569436328a7390d194431eab90", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_abstract/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_abstract<test_type>;\n+  }\n+}"}, {"sha": "49bb463de2e109b4f43f55e6c7edf0a4e65864de", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_abstract/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_abstract/typedefs.cc"}, {"sha": "89a10b3d3d3c03c5da885be74998bcc68f8ea3d3", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_abstract/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_abstract%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_abstract/is_abstract.cc"}, {"sha": "fe206100b3fafb541ff17a1de71d02574ade06c0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_arithmetic/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_arithmetic<test_type>;\n+  }\n+}"}, {"sha": "17cd0a0686615c07e03734455ca2d600335b2799", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_arithmetic/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_arithmetic/typedefs.cc"}, {"sha": "ddf0854ba776417fc342e3d14a09a95ec63ebb83", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_arithmetic/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_arithmetic%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_arithmetic/is_arithmetic.cc"}, {"sha": "4ba326fdc154d986c396b6f145e3c8a06e8a490b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_array/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_array<test_type>;\n+  }\n+}"}, {"sha": "660403d4958953e154fbbacabad8be2aeafc6644", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_array/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_array/typedefs.cc"}, {"sha": "c38d159810028265a1b34f85eff72e2e29435b2d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_array/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_array%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_array/is_array.cc"}, {"sha": "49bc62c8067d7081f0eb008b97b5c77d74eed45b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_base_of/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_base_of<test_type, test_type>;\n+  }\n+}"}, {"sha": "37ad6c68ef5579d7b90e5cd4c242d4c67b603688", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_base_of/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_base_of/typedefs.cc"}, {"sha": "07c17948df07ddafabb43be760f94732b6aacfcc", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_base_of/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_base_of%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_base_of/is_base_of.cc"}, {"sha": "555c2154e7f597f8bc6de10841dcfa1b826a32ae", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_class/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_class<test_type>;\n+  }\n+}"}, {"sha": "8ad546ac3b63cf75925bc4efb85c4ffae59933f8", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_class/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_class/typedefs.cc"}, {"sha": "5e88fb5b6d54a3c5de95942369fbe65014dcf706", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_class/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_class%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_class/is_class.cc"}, {"sha": "ca8d8583282d9765659a961cca4cf995de822f4b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_compound/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_compound<test_type>;\n+  }\n+}"}, {"sha": "906076e3ca4755f331abe49b0e39b172be52e8b9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_compound/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_compound/typedefs.cc"}, {"sha": "1708f580eb9b3377fe66060a659256ca33d09eeb", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_compound/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_compound%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_compound/is_compound.cc"}, {"sha": "ec965399576cc2383d8fb3c056232b7fc2bb4b30", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_const/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_const<test_type>;\n+  }\n+}"}, {"sha": "3a5dd667c2e6c23b3096f5405455616531f032a9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_const/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_const/typedefs.cc"}, {"sha": "55f3656688715404d5f45c809a6158e472d79f92", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_const/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_const%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_const/is_const.cc"}, {"sha": "077f0643f3b1c9d575d5f2a4c40d55ee292f9b81", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_convertible/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_convertible<test_type, test_type>;\n+  }\n+}"}, {"sha": "6ee1de162b9fea1046e586418d5c39671404ee35", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_convertible/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_convertible/typedefs.cc"}, {"sha": "7d98b01677392592ffd53a891713f071a1eccba9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_convertible/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_convertible%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_convertible/is_convertible.cc"}, {"sha": "53861edf158414debff9f0c27e07d01be8aaa26a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_empty/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_empty<test_type>;\n+  }\n+}"}, {"sha": "346581d16287d1a44386032b01e027b53fda4e80", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_empty/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_empty/typedefs.cc"}, {"sha": "62b83a473d8f9b2492a481332bd3094928369810", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_empty/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_empty%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_empty/is_empty.cc"}, {"sha": "88a3cdceda63a553b2de5d74141a5611dcc7fddb", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_enum/24808.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2F24808.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2F24808.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2F24808.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_enum/24808.cc"}, {"sha": "7f60c6d0fb8d3720064681fdcab90666b4655c1a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_enum/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_enum<test_type>;\n+  }\n+}"}, {"sha": "fc4e11bd4ab10cfb149f8c78a05ecc5b8c67c285", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_enum/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_enum/typedefs.cc"}, {"sha": "97a77db1146b28b609b8f66c7f8c8d895e37ee72", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_enum/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_enum%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_enum/is_enum.cc"}, {"sha": "95bd58b3145a2b70fcf986d8c209f362065a30a8", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_floating_point/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_floating_point<test_type>;\n+  }\n+}"}, {"sha": "b19cf1f09f116e71721979cb0fc22089678ecf8c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_floating_point/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_floating_point/typedefs.cc"}, {"sha": "9b8e8463e5ae2d5433ec2dd9611f46dea0483248", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_floating_point/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_floating_point%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_floating_point/is_floating_point.cc"}, {"sha": "6ba9969a2ee5b990e877a03793a3fa3877663731", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_function/24808.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2F24808.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2F24808.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2F24808.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_function/24808.cc"}, {"sha": "0028cbadc7dc3a639f97c11fff116d8ae02b5a4a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_function/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_function<test_type>;\n+  }\n+}"}, {"sha": "db70185bf6f7364cd942f141211c232a2148b5d3", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_function/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_function/typedefs.cc"}, {"sha": "1ada9120b225788eb1f337101d2f739c8921e03d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_function/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_function%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_function/is_function.cc"}, {"sha": "1b021191f312599427b637af464fb73831ed507e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_fundamental/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_fundamental<test_type>;\n+  }\n+}"}, {"sha": "a4744eda21a6b6732cea186e041890e8f447c4c7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_fundamental/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_fundamental/typedefs.cc"}, {"sha": "8a756c5ee86eb7577f3548cb8653d233100087be", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_fundamental/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_fundamental%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_fundamental/is_fundamental.cc"}, {"sha": "d379190b3c36683bc6c9299b9450c72ebb11e079", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_integral/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_integral<test_type>;\n+  }\n+}"}, {"sha": "19d6a67422ea107b8fad4f2d55af725608fc966e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_integral/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_integral/typedefs.cc"}, {"sha": "2876c6d11a2f2384e637d0328b19cc5f3753c6bc", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_integral/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_integral%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_integral/is_integral.cc"}, {"sha": "2cec04701c4ac9e099e7a10b7649d1fd0ce8099f", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_function_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_member_function_pointer<test_type>;\n+  }\n+}"}, {"sha": "48f1f22cb307fdba4a3cd1b8ea5ba842aed82276", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_function_pointer/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_member_function_pointer/typedefs.cc"}, {"sha": "b0b3f802046fb9adbd9084198a2b074d1260980d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_function_pointer/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_function_pointer%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_member_function_pointer/is_member_function_pointer.cc"}, {"sha": "a4ba0657f3d6faaa411c0cfefb1360e322e90522", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_object_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_member_object_pointer<test_type>;\n+  }\n+}"}, {"sha": "0add4a0ad53db5105a2a40f20a2f3ef583337afb", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_object_pointer/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_member_object_pointer/typedefs.cc"}, {"sha": "e873edfa9a5bf79b47e2ee0a24bc2dbaaca6a569", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_object_pointer/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_object_pointer%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_member_object_pointer/is_member_object_pointer.cc"}, {"sha": "e94a59250419c4c9af859b375c96bc8a6b5bef0a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_member_pointer<test_type>;\n+  }\n+}"}, {"sha": "65a882ca996e339003203db1a86e5c5475e25d04", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_pointer/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_member_pointer/typedefs.cc"}, {"sha": "0b194bbcb668105d973620f6b82551982cc39c0b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_member_pointer/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_member_pointer%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_member_pointer/is_member_pointer.cc"}, {"sha": "70ba0167388008433cf533ed2f9472c69db8dc43", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_object/24808.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2F24808.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2F24808.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2F24808.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_object/24808.cc"}, {"sha": "5677efe389718778c9925333afd5a5708f0e61a7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_object/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_object<test_type>;\n+  }\n+}"}, {"sha": "61cf43f534ce39a1c81436c76931f1c0f183ec8c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_object/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_object/typedefs.cc"}, {"sha": "6283ece68767b05275a8e287fed35e037d6340f0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_object/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_object%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_object/is_object.cc"}, {"sha": "dd859fe1565402153435f4393151a1a9a6acee02", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pod/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_pod<test_type>;\n+  }\n+}"}, {"sha": "8dbfd3c38d4e06617face159824b2fcef629fc97", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pod/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_pod/typedefs.cc"}, {"sha": "12a4a4533e7174860394482e9a3906e57a4a029d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pod/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pod%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_pod/is_pod.cc"}, {"sha": "4e90d8fddc39e6374fa6de8f2de7295238280db1", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_pointer<test_type>;\n+  }\n+}"}, {"sha": "6ba35d160243576c08cf467b8ce938458f910530", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pointer/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_pointer/typedefs.cc"}, {"sha": "7435647d54d82daac570f38e5dcae6b31ed16ad0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_pointer/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_pointer%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_pointer/is_pointer.cc"}, {"sha": "0b8ab0f7167c35c505738f46845b8f060d52717c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_polymorphic/24809.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2F24809.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2F24809.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2F24809.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_polymorphic/24809.cc"}, {"sha": "02a2b58795b3a5f513234363690a6d63e3fe70c7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_polymorphic/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_polymorphic<test_type>;\n+  }\n+}"}, {"sha": "14ba6903180d040c6c51b7730865259b940630d5", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_polymorphic/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_polymorphic/typedefs.cc"}, {"sha": "6dc5c1c2c6d098fd8927882aa1df150a3693543d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_polymorphic/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_polymorphic%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_polymorphic/is_polymorphic.cc"}, {"sha": "c6d528ae00e812801ffaeccb8040c8ae86b8f427", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_reference/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_reference<test_type>;\n+  }\n+}"}, {"sha": "30c9e275a3305d0dc693c579758b2397f1db07de", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_reference/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_reference/typedefs.cc"}, {"sha": "8a799b7c424407baafd0456213ca43943dd53f05", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_reference/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_reference%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_reference/is_reference.cc"}, {"sha": "94df35dc99f1753c43e446399a17993c1351bb48", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_same/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_same<test_type, test_type>;\n+  }\n+}"}, {"sha": "460ebbbd5c73ff6d2b3c3f1f95d7b16fd1830df9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_same/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_same/typedefs.cc"}, {"sha": "0fbae2eb357b49e871da6380f83a50efec51f7a9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_same/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_same%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_same/is_same.cc"}, {"sha": "0f1df9b3963076862bcf56ddee4241703700a268", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_scalar/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_scalar<test_type>;\n+  }\n+}"}, {"sha": "b684c7cb185350ff5ef9ee98894f4b1c49239468", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_scalar/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_scalar/typedefs.cc"}, {"sha": "e0cb20c2c4f3e04c7a2cabfb647527e7c2c21b36", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_scalar/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_scalar%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/composite_type_traits/is_scalar/is_scalar.cc"}, {"sha": "fc6c18a7896e6acbbf6a6eb585ae49b3c6ab97b7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_signed/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_signed<test_type>;\n+  }\n+}"}, {"sha": "86730aeea7e5df71af242bade272dfd33081b944", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_signed/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_signed/typedefs.cc"}, {"sha": "351dde8d1a1b0a37c70e810e9d28662662c2f074", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_signed/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_signed%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_signed/is_signed.cc"}, {"sha": "19e79fff7f93b633995ac79b99bd1defd81c412c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_union/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_union<test_type>;\n+  }\n+}"}, {"sha": "9f24c5e9786bc0ef1fa1f50ac7eba6b5d58bbdd7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_union/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_union/typedefs.cc"}, {"sha": "e381f888b27cea1090f9d971cc88e5c1d3d072f5", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_union/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_union%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_union/is_union.cc"}, {"sha": "1016497c0896d6102d82e9f06fc13977a8b2612b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_unsigned/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_unsigned<test_type>;\n+  }\n+}"}, {"sha": "4c90eced4bb6c7db965b0d6cefc63216b5d13181", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_unsigned/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_unsigned/typedefs.cc"}, {"sha": "19bb97526efb523a163c6785ef295b2de657784e", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_unsigned/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_unsigned%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_unsigned/is_unsigned.cc"}, {"sha": "4c0fb9ac445fcaf70af3ce7bbff3b7a82282a895", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_void/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_void<test_type>;\n+  }\n+}"}, {"sha": "24d191308870cc6a689330efeec874b34f276861", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_void/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_void/typedefs.cc"}, {"sha": "6f0450869e0c5f108f2030e3a0540b06e940fa65", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_void/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_void%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_void/is_void.cc"}, {"sha": "3c98b96d63dc8faff4e909e453ff9133696f4306", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_volatile/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct is_volatile<test_type>;\n+  }\n+}"}, {"sha": "28794427b8c755d31a3861bd40ef2a85645d6d7b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_volatile/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_volatile/typedefs.cc"}, {"sha": "6336ab7bf1e9fc0b8967bd8298db166e46674ad8", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/is_volatile/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fis_volatile%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_volatile/is_volatile.cc"}, {"sha": "4e51378e4d4487bf61da7b8b1d3775da3bd5e7c7", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/other_transformations/aligned_storage/typedefs.cc", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fother_transformations%2Faligned_storage%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fother_transformations%2Faligned_storage%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fother_transformations%2Faligned_storage%2Ftypedefs.cc?ref=813ba481e7f6dae3a4cfcfb361d2b57b4a8dfa24", "patch": "@@ -1,33 +0,0 @@\n-// 2005-01-11  Paolo Carlini  <pcarlini@suse.de>\n-//\n-// Copyright (C) 2005 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// \n-// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n-\n-#include <tr1/type_traits>\n-\n-// { dg-do compile }\n-\n-void test01()\n-{\n-  // Check for required typedefs\n-  typedef std::tr1::aligned_storage<1, 1>     test_type;\n-  typedef test_type::type                     type;\n-}"}, {"sha": "d95c8b8e55c7b9ea9dd34f6df39f3fdc5ef15fc9", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/rank/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct rank<test_type>;\n+  }\n+}"}, {"sha": "800c316979fb2d65d916dc2a184549ebf99dcb2a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/rank/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Frequirements%2Ftypedefs.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/rank/typedefs.cc"}, {"sha": "334de47f8ef73eb8b818dfe2ace8e5aeb3180cc5", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/rank/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frank%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/rank/rank.cc"}, {"sha": "354112895811929558dc967962dde7a80cbeb092", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_all_extents/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_all_extents<test_type>;\n+  }\n+}"}, {"sha": "8d0504e0485541a25c19181f605d4dae0d6c19fe", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_all_extents/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_all_extents%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/array_modifications/remove_all_extents.cc"}, {"sha": "d9e8095ceae8f3f20729ab410e0a21b5209b4ec3", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_const/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_const<test_type>;\n+  }\n+}"}, {"sha": "792596ef2905131e62f42a0eb06cc1cf81c8eb92", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_const/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_const%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_const.cc"}, {"sha": "964c3f9c06e69b5b7ad9728bfe374ba2de74f023", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_cv/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_cv<test_type>;\n+  }\n+}"}, {"sha": "1afcc788eaeb2abdcb22d024e93ab5ba3ad7ae5d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_cv/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_cv%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_cv.cc"}, {"sha": "1dfe1ba3bac7e9e50b3c9e4074f9955d4019ce0d", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_extent/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_extent<test_type>;\n+  }\n+}"}, {"sha": "886f844405bc0ad99be7824f6444db9045633547", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_extent/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_extent%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/array_modifications/remove_extent.cc"}, {"sha": "12b8e6fd9ee8a41696675f0471452eb34479dc44", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_pointer/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_pointer<test_type>;\n+  }\n+}"}, {"sha": "6c17d024f5f9c099f9f4ce82ad9a64c53bdd71f6", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_pointer/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_pointer%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/pointer_modifications/remove_pointer.cc"}, {"sha": "70555cbc5eb569b679e4885bc6c28393ce428c73", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_reference/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_reference<test_type>;\n+  }\n+}"}, {"sha": "e32312f812e43adef49eeef865ea99447c05ad87", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_reference/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_reference%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/reference_modifications/remove_reference.cc"}, {"sha": "bd87c69c50cc4479c9ac057a40529c783e0ff859", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_volatile/requirements/explicit_instantiations.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Frequirements%2Fexplicit_instantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Frequirements%2Fexplicit_instantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Frequirements%2Fexplicit_instantiations.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing basic_ofstream with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+namespace std\n+{\n+  namespace tr1\n+  {\n+    typedef short test_type;\n+    template struct remove_volatile<test_type>;\n+  }\n+}"}, {"sha": "35c3d8e0994c9350604432d0540cdcbe5f9d104c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/remove_volatile/value.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dd88f08d3f8e69796f77aba403d5ade33df9c0/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fremove_volatile%2Fvalue.cc?ref=39dd88f08d3f8e69796f77aba403d5ade33df9c0", "previous_filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_volatile.cc"}]}