{"sha": "d71753da57c28ded0e9d392c119ffbcdc0396360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxNzUzZGE1N2MyOGRlZDBlOWQzOTJjMTE5ZmZiY2RjMDM5NjM2MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-12-03T15:49:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-03T15:49:17Z"}, "message": "[Ada] Fix internal error on package instantiation on private type\n\nThis fixes an assertion failure in gigi triggered by the instantiation\nof a generic package, in a visible part of another package, done on a\nprivate type whose full view is a type derived from a scalar or an\naccess type.\n\nThe problem is that the front-end creates and inserts two different\nfreeze nodes in the expanded tree for the partial and the full views of\nthe private subtype created by the instantiation, which is not correct:\npartial and full views of a given (sub)type must point to the same\nfreeze node, if any.\n\nThe patch also adds an assertion checking this property in the front-end\nso as to catch the inconsistency higher in the chain.\n\n2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Freeze_Entity): Do not freeze the partial view of\n\ta private subtype if its base type is also private with delayed\n\tfreeze before the full type declaration of the base type has\n\tbeen seen.\n\t* sem_ch7.adb (Preserve_Full_Attributes): Add assertion on\n\tfreeze node.\n\ngcc/testsuite/\n\n\t* gnat.dg/generic_inst2.adb, gnat.dg/generic_inst2.ads,\n\tgnat.dg/generic_inst2_c.ads: New testcase.\n\nFrom-SVN: r266754", "tree": {"sha": "e33f1dfab933ed791859f35d468a5c4bb37f6af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33f1dfab933ed791859f35d468a5c4bb37f6af3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d71753da57c28ded0e9d392c119ffbcdc0396360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71753da57c28ded0e9d392c119ffbcdc0396360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71753da57c28ded0e9d392c119ffbcdc0396360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71753da57c28ded0e9d392c119ffbcdc0396360/comments", "author": null, "committer": null, "parents": [{"sha": "9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8483ca8f858ea19e3e0fcf567820e3195fe2de"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "2a3ff0ff548d239886b64b582bae1d38c0aae1c4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -1,3 +1,12 @@\n+2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Do not freeze the partial view of\n+\ta private subtype if its base type is also private with delayed\n+\tfreeze before the full type declaration of the base type has\n+\tbeen seen.\n+\t* sem_ch7.adb (Preserve_Full_Attributes): Add assertion on\n+\tfreeze node.\n+\n 2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch3.adb (Build_Record_Init_Proc): Inherit an"}, {"sha": "412789f56b29bcc4627c0fef12564ee4c32cf295", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -6239,13 +6239,34 @@ package body Freeze is\n \n                goto Leave;\n \n-            --  Case of no full view present. If entity is derived or subtype,\n+            --  Case of no full view present. If entity is subtype or derived,\n             --  it is safe to freeze, correctness depends on the frozen status\n             --  of parent. Otherwise it is either premature usage, or a Taft\n             --  amendment type, so diagnosis is at the point of use and the\n             --  type might be frozen later.\n \n-            elsif E /= Base_Type (E) or else Is_Derived_Type (E) then\n+            elsif E /= Base_Type (E) then\n+               declare\n+                  Btyp : constant Entity_Id := Base_Type (E);\n+\n+               begin\n+                  --  However, if the base type is itself private and has no\n+                  --  (underlying) full view either, wait until the full type\n+                  --  declaration is seen and all the full views are created.\n+\n+                  if Is_Private_Type (Btyp)\n+                    and then No (Full_View (Btyp))\n+                    and then No (Underlying_Full_View (Btyp))\n+                    and then Has_Delayed_Freeze (Btyp)\n+                    and then No (Freeze_Node (Btyp))\n+                  then\n+                     Set_Is_Frozen (E, False);\n+                     Result := No_List;\n+                     goto Leave;\n+                  end if;\n+               end;\n+\n+            elsif Is_Derived_Type (E) then\n                null;\n \n             else"}, {"sha": "d85f847ed49f9aedce9341de8014189f17482c29", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -2733,6 +2733,15 @@ package body Sem_Ch7 is\n             Propagate_Concurrent_Flags (Priv, Base_Type (Full));\n          end if;\n \n+         --  As explained in Freeze_Entity, private types are required to point\n+         --  to the same freeze node as their corresponding full view, if any.\n+         --  But we ought not to overwrite a node already inserted in the tree.\n+\n+         pragma Assert (Serious_Errors_Detected /= 0\n+           or else No (Freeze_Node (Priv))\n+           or else No (Parent (Freeze_Node (Priv)))\n+           or else Freeze_Node (Priv) = Freeze_Node (Full));\n+\n          Set_Freeze_Node (Priv, Freeze_Node (Full));\n \n          --  Propagate Default_Initial_Condition-related attributes from the"}, {"sha": "2e63d0ad405412d2a76109d2765b233b0c084634", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -1,3 +1,8 @@\n+2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/generic_inst2.adb, gnat.dg/generic_inst2.ads,\n+\tgnat.dg/generic_inst2_c.ads: New testcase.\n+\n 2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/overload2.adb, gnat.dg/overload2_p.adb,"}, {"sha": "2ccebb0026f080e0494022bcdc5a05cdb0f9d9e3", "filename": "gcc/testsuite/gnat.dg/generic_inst2.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.adb?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Generic_Inst2 is\n+   procedure Foo (X : not null access T) is null;\n+end;"}, {"sha": "3124a1d3b75545808d6b22570edd12222249e597", "filename": "gcc/testsuite/gnat.dg/generic_inst2.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2.ads?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -0,0 +1,10 @@\n+with Generic_Inst2_C;\n+\n+package Generic_Inst2 is\n+   type T is private;\n+   procedure Foo (X : not null access T);\n+   package CI is new Generic_Inst2_C (T, Foo => Foo);\n+private\n+   type S is access Integer;\n+   type T is new S;\n+end;"}, {"sha": "df1000be5fb20384940297f00eabac467be012e6", "filename": "gcc/testsuite/gnat.dg/generic_inst2_c.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2_c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71753da57c28ded0e9d392c119ffbcdc0396360/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2_c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst2_c.ads?ref=d71753da57c28ded0e9d392c119ffbcdc0396360", "patch": "@@ -0,0 +1,5 @@\n+generic\n+   type T;\n+   with procedure Foo (X : not null access T) is null;\n+   with procedure Bar (X : not null access T) is null;\n+package Generic_Inst2_C is end;"}]}