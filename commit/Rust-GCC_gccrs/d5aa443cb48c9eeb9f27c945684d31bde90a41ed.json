{"sha": "d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhYTQ0M2NiNDhjOWVlYjlmMjdjOTQ1Njg0ZDMxYmRlOTBhNDFlZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:27:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:27:35Z"}, "message": "[multiple changes]\n\n2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch9.adb (Install_Private_Data_Declarations): Add guards\n\twhich ensure that restriction No_Dynamic_Attachment has not been\n\tviolated.\n\t(Make_Initialize_Protection): Protected types with attach or\n\tinterrupt handlers must not violate restriction No_Dynamic_Attachment.\n\t* exp_util.adb (Corresponding_Runtime_Package): Add a guard\n\twhich ensures that restriction No_Dynamic_Attachment has not been\n\tviolated.\n\t* sem_attr.adb: (Eval_Attribute): Transform\n\tVAX_Float_Type'First and 'Last into references to\n\tthe temporaries which store the corresponding bounds. The\n\ttransformation is needed since the back end cannot evaluate\n\t'First and 'Last on VAX.\n\t(Is_VAX_Float): New routine.\n\n2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): If the\n\tgeneric unit is not intrinsic and has an explicit convention,\n\tthe instance inherits it.\n\nFrom-SVN: r178449", "tree": {"sha": "2bf0b4228751a24323d9793ec7e3e4af6fe92fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf0b4228751a24323d9793ec7e3e4af6fe92fe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/comments", "author": null, "committer": null, "parents": [{"sha": "67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74"}], "stats": {"total": 95, "additions": 83, "deletions": 12}, "files": [{"sha": "d402de49e2e51491f1ac34b02ca04069ec542a1b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "patch": "@@ -1,3 +1,26 @@\n+2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch9.adb (Install_Private_Data_Declarations): Add guards\n+\twhich ensure that restriction No_Dynamic_Attachment has not been\n+\tviolated.\n+\t(Make_Initialize_Protection): Protected types with attach or\n+\tinterrupt handlers must not violate restriction No_Dynamic_Attachment.\n+\t* exp_util.adb (Corresponding_Runtime_Package): Add a guard\n+\twhich ensures that restriction No_Dynamic_Attachment has not been\n+\tviolated.\n+\t* sem_attr.adb: (Eval_Attribute): Transform\n+\tVAX_Float_Type'First and 'Last into references to\n+\tthe temporaries which store the corresponding bounds. The\n+\ttransformation is needed since the back end cannot evaluate\n+\t'First and 'Last on VAX.\n+\t(Is_VAX_Float): New routine.\n+\n+2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): If the\n+\tgeneric unit is not intrinsic and has an explicit convention,\n+\tthe instance inherits it.\n+\n 2011-09-02  Robert Dewar  <dewar@adacore.com>\n \n \t* prj-dect.adb, prj-env.adb, prj-nmsc.adb, prj-proc.adb, prj-tree.adb,"}, {"sha": "babda09a470ba0572d0ca908031f05c8f4109ee0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "patch": "@@ -12031,10 +12031,13 @@ package body Exp_Ch9 is\n \n             if Has_Attach_Handler (Conc_Typ)\n               and then not Restricted_Profile\n+              and then not Restriction_Active (No_Dynamic_Attachment)\n             then\n                Prot_Typ := RE_Static_Interrupt_Protection;\n \n-            elsif Has_Interrupt_Handler (Conc_Typ) then\n+            elsif Has_Interrupt_Handler (Conc_Typ)\n+              and then not Restriction_Active (No_Dynamic_Attachment)\n+            then\n                Prot_Typ := RE_Dynamic_Interrupt_Protection;\n \n             --  The type has explicit entries or generated primitive entry\n@@ -12451,8 +12454,8 @@ package body Exp_Ch9 is\n       --  When no priority is specified but an xx_Handler pragma is, we default\n       --  to System.Interrupts.Default_Interrupt_Priority, see D.3(10).\n \n-      elsif Has_Interrupt_Handler (Ptyp)\n-        or else Has_Attach_Handler (Ptyp)\n+      elsif (Has_Attach_Handler (Ptyp) or else Has_Interrupt_Handler (Ptyp))\n+        and then not Restriction_Active (No_Dynamic_Attachment)\n       then\n          Append_To (Args,\n            New_Reference_To (RTE (RE_Default_Interrupt_Priority), Loc));\n@@ -12475,9 +12478,10 @@ package body Exp_Ch9 is\n       --  context of dispatching select statements.\n \n       if Has_Entry\n-        or else Has_Interrupt_Handler (Ptyp)\n-        or else Has_Attach_Handler (Ptyp)\n         or else Has_Interfaces (Protect_Rec)\n+        or else\n+          ((Has_Attach_Handler (Ptyp) or else Has_Interrupt_Handler (Ptyp))\n+              and then not Restriction_Active (No_Dynamic_Attachment))\n       then\n          declare\n             Pkg_Id      : constant RTU_Id  :="}, {"sha": "dd1432dc327313d6e9777b3a34a6a30cfda6fda8", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "patch": "@@ -1515,9 +1515,6 @@ package body Exp_Util is\n \n       if Ekind (Typ) in Protected_Kind then\n          if Has_Entries (Typ)\n-           or else Has_Interrupt_Handler (Typ)\n-           or else (Has_Attach_Handler (Typ)\n-                      and then not Restricted_Profile)\n \n             --  A protected type without entries that covers an interface and\n             --  overrides the abstract routines with protected procedures is\n@@ -1527,6 +1524,10 @@ package body Exp_Util is\n             --  node to recognize this case.\n \n            or else Present (Interface_List (Parent (Typ)))\n+           or else\n+             (((Has_Attach_Handler (Typ) and then not Restricted_Profile)\n+                  or else Has_Interrupt_Handler (Typ))\n+               and then not Restriction_Active (No_Dynamic_Attachment))\n          then\n             if Abort_Allowed\n               or else Restriction_Active (No_Entry_Queue) = False"}, {"sha": "5efa68963709cb827905c13ec556b0bc9e4cd4f7", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "patch": "@@ -5260,6 +5260,9 @@ package body Sem_Attr is\n       --  Computes the Fore value for the current attribute prefix, which is\n       --  known to be a static fixed-point type. Used by Fore and Width.\n \n+      function Is_VAX_Float (Typ : Entity_Id) return Boolean;\n+      --  Determine whether Typ denotes a VAX floating point type\n+\n       function Mantissa return Uint;\n       --  Returns the Mantissa value for the prefix type\n \n@@ -5390,6 +5393,19 @@ package body Sem_Attr is\n          return R;\n       end Fore_Value;\n \n+      ------------------\n+      -- Is_VAX_Float --\n+      ------------------\n+\n+      function Is_VAX_Float (Typ : Entity_Id) return Boolean is\n+      begin\n+         return\n+           Is_Floating_Point_Type (Typ)\n+             and then\n+               (Float_Format = 'V'\n+                  or else Float_Rep (Typ) = VAX_Native);\n+      end Is_VAX_Float;\n+\n       --------------\n       -- Mantissa --\n       --------------\n@@ -6337,6 +6353,16 @@ package body Sem_Attr is\n                Fold_Uint  (N, Expr_Value (Lo_Bound), Static);\n             end if;\n \n+         --  Replace VAX Float_Type'First with a reference to the temporary\n+         --  which represents the low bound of the type. This transformation\n+         --  is needed since the back end cannot evaluate 'First on VAX.\n+\n+         elsif Is_VAX_Float (P_Type)\n+           and then Nkind (Lo_Bound) = N_Identifier\n+         then\n+            Rewrite (N, New_Reference_To (Entity (Lo_Bound), Sloc (N)));\n+            Analyze (N);\n+\n          else\n             Check_Concurrent_Discriminant (Lo_Bound);\n          end if;\n@@ -6528,6 +6554,16 @@ package body Sem_Attr is\n                Fold_Uint  (N, Expr_Value (Hi_Bound), Static);\n             end if;\n \n+         --  Replace VAX Float_Type'Last with a reference to the temporary\n+         --  which represents the high bound of the type. This transformation\n+         --  is needed since the back end cannot evaluate 'Last on VAX.\n+\n+         elsif Is_VAX_Float (P_Type)\n+           and then Nkind (Hi_Bound) = N_Identifier\n+         then\n+            Rewrite (N, New_Reference_To (Entity (Hi_Bound), Sloc (N)));\n+            Analyze (N);\n+\n          else\n             Check_Concurrent_Discriminant (Hi_Bound);\n          end if;"}, {"sha": "1419b76f41cac3e9627c09e18bd9828ebfbf4324", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa443cb48c9eeb9f27c945684d31bde90a41ed/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "patch": "@@ -4430,8 +4430,6 @@ package body Sem_Ch12 is\n          --  for the compilation, we generate the instance body even if it is\n          --  not within the main unit.\n \n-         --  Any other  pragmas might also be inherited ???\n-\n          if Is_Intrinsic_Subprogram (Gen_Unit) then\n             Set_Is_Intrinsic_Subprogram (Anon_Id);\n             Set_Is_Intrinsic_Subprogram (Act_Decl_Id);\n@@ -4441,6 +4439,17 @@ package body Sem_Ch12 is\n             end if;\n          end if;\n \n+         --  Inherit convention from generic unit. Intrinsic convention, as for\n+         --  an instance of unchecked conversion, is not inherited because an\n+         --  explicit Ada instance has been created.\n+\n+         if Has_Convention_Pragma (Gen_Unit)\n+           and then Convention (Gen_Unit) /= Convention_Intrinsic\n+         then\n+            Set_Convention (Act_Decl_Id, Convention (Gen_Unit));\n+            Set_Is_Exported (Act_Decl_Id, Is_Exported (Gen_Unit));\n+         end if;\n+\n          Generate_Definition (Act_Decl_Id);\n          Set_Contract (Anon_Id, Make_Contract (Sloc (Anon_Id))); -- ??? needed?\n          Set_Contract (Act_Decl_Id, Make_Contract (Sloc (Act_Decl_Id)));\n@@ -4479,8 +4488,6 @@ package body Sem_Ch12 is\n \n          Check_Hidden_Child_Unit (N, Gen_Unit, Act_Decl_Id);\n \n-         --  Subject to change, pending on if other pragmas are inherited ???\n-\n          Validate_Categorization_Dependency (N, Act_Decl_Id);\n \n          if not Is_Intrinsic_Subprogram (Act_Decl_Id) then"}]}