{"sha": "e279e32243ca2989a46fc933764286f07fc933ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI3OWUzMjI0M2NhMjk4OWE0NmZjOTMzNzY0Mjg2ZjA3ZmM5MzNlZg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-21T20:34:28Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-21T20:35:56Z"}, "message": "Fix typos in a comment.\n\ngcc/ChangeLog:\n\t* tree-ssa-alias.c (walk_aliased_vdefs_1): Fix typos in a comment.", "tree": {"sha": "5d754bfeae0cba8adba5a51fd304d4d7e453cbc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d754bfeae0cba8adba5a51fd304d4d7e453cbc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e279e32243ca2989a46fc933764286f07fc933ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e279e32243ca2989a46fc933764286f07fc933ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e279e32243ca2989a46fc933764286f07fc933ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e279e32243ca2989a46fc933764286f07fc933ef/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "133aa7e54f77fdc15c311ecb52decfb3f52e179c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133aa7e54f77fdc15c311ecb52decfb3f52e179c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/133aa7e54f77fdc15c311ecb52decfb3f52e179c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cbd51ac4d7c15d8e0a06479c4a077444481b2239", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e279e32243ca2989a46fc933764286f07fc933ef/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e279e32243ca2989a46fc933764286f07fc933ef/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=e279e32243ca2989a46fc933764286f07fc933ef", "patch": "@@ -3745,7 +3745,7 @@ walk_non_aliased_vuses (ao_ref *ref, tree vuse, bool tbaa_p,\n }\n \n \n-/* Based on the memory reference REF call WALKER for each vdef which\n+/* Based on the memory reference REF call WALKER for each vdef whose\n    defining statement may clobber REF, starting with VDEF.  If REF\n    is NULL_TREE, each defining statement is visited.\n \n@@ -3755,8 +3755,8 @@ walk_non_aliased_vuses (ao_ref *ref, tree vuse, bool tbaa_p,\n    If function entry is reached, FUNCTION_ENTRY_REACHED is set to true.\n    The pointer may be NULL and then we do not track this information.\n \n-   At PHI nodes walk_aliased_vdefs forks into one walk for reach\n-   PHI argument (but only one walk continues on merge points), the\n+   At PHI nodes walk_aliased_vdefs forks into one walk for each\n+   PHI argument (but only one walk continues at merge points), the\n    return value is true if any of the walks was successful.\n \n    The function returns the number of statements walked or -1 if"}]}