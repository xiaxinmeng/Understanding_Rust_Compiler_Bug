{"sha": "f629051ee63712268222c000e3485ceb67a4e16a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyOTA1MWVlNjM3MTIyNjgyMjJjMDAwZTM0ODVjZWI2N2E0ZTE2YQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2006-07-24T02:59:36Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2006-07-24T02:59:36Z"}, "message": "re PR debug/27473 (g++.dg/other/unused1.C and gcc.dg/20060410.c fail on powerpc-darwin)\n\n\tPR debug/27473\n\t* dbxout.c (output_used_types_helper, output_used_types): New.\n\t(dbxout_symbol): Call output_used_types.\n\nFrom-SVN: r115704", "tree": {"sha": "3fe2117f7a22ae18db0f6ad5e0a14a073549be6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fe2117f7a22ae18db0f6ad5e0a14a073549be6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f629051ee63712268222c000e3485ceb67a4e16a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f629051ee63712268222c000e3485ceb67a4e16a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f629051ee63712268222c000e3485ceb67a4e16a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f629051ee63712268222c000e3485ceb67a4e16a/comments", "author": null, "committer": null, "parents": [{"sha": "74b0d490fa7577857b036b8bff7e8a7cfe7d20a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b0d490fa7577857b036b8bff7e8a7cfe7d20a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b0d490fa7577857b036b8bff7e8a7cfe7d20a8"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "415a58ac267e20a8021077be13208582677f16c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f629051ee63712268222c000e3485ceb67a4e16a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f629051ee63712268222c000e3485ceb67a4e16a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f629051ee63712268222c000e3485ceb67a4e16a", "patch": "@@ -1,3 +1,9 @@\n+2006-07-23  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR debug/27473\n+\t* dbxout.c (output_used_types_helper, output_used_types): New.\n+\t(dbxout_symbol): Call output_used_types.\n+\n 2006-07-23  Jan Hubicka  <jh@suse.cz>\n \n \tPR c/25795"}, {"sha": "0776ad88df7c5334f1d7f568715931747bfdc11e", "filename": "gcc/dbxout.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f629051ee63712268222c000e3485ceb67a4e16a/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f629051ee63712268222c000e3485ceb67a4e16a/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=f629051ee63712268222c000e3485ceb67a4e16a", "patch": "@@ -2369,6 +2369,38 @@ dbxout_expand_expr (tree expr)\n     }\n }\n \n+/* Helper function for output_used_types.  Queue one entry from the\n+   used types hash to be output.  */\n+\n+static int\n+output_used_types_helper (void **slot, void *data ATTRIBUTE_UNUSED)\n+{\n+  tree type = *slot;\n+\n+  if ((TREE_CODE (type) == RECORD_TYPE\n+       || TREE_CODE (type) == UNION_TYPE\n+       || TREE_CODE (type) == QUAL_UNION_TYPE\n+       || TREE_CODE (type) == ENUMERAL_TYPE)\n+      && TYPE_STUB_DECL (type)\n+      && DECL_P (TYPE_STUB_DECL (type))\n+      && ! DECL_IGNORED_P (TYPE_STUB_DECL (type)))\n+    debug_queue_symbol (TYPE_STUB_DECL (type));\n+  else if (TYPE_NAME (type)\n+\t   && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL)\n+    debug_queue_symbol (TYPE_NAME (type));\n+\n+  return 1;\n+}\n+\n+/* Force all types used by this function to be output in debug\n+   information.  */\n+static void\n+output_used_types (void)\n+{\n+  if (cfun && cfun->used_types_hash)\n+    htab_traverse (cfun->used_types_hash, output_used_types_helper, NULL);\n+}\n+\n /* Output a .stabs for the symbol defined by DECL,\n    which must be a ..._DECL node in the normal namespace.\n    It may be a CONST_DECL, a FUNCTION_DECL, a PARM_DECL or a VAR_DECL.\n@@ -2482,6 +2514,9 @@ dbxout_symbol (tree decl, int local ATTRIBUTE_UNUSED)\n \t  || GET_CODE (XEXP (decl_rtl, 0)) != SYMBOL_REF)\n \tbreak;\n \n+      if (flag_debug_only_used_symbols)\n+\toutput_used_types ();\n+\n       dbxout_begin_complex_stabs ();\n       stabstr_I (DECL_ASSEMBLER_NAME (decl));\n       stabstr_S (TREE_PUBLIC (decl) ? \":F\" : \":f\");"}]}