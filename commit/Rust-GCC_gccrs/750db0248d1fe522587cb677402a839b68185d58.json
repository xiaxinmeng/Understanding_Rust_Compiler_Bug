{"sha": "750db0248d1fe522587cb677402a839b68185d58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwZGIwMjQ4ZDFmZTUyMjU4N2NiNjc3NDAyYTgzOWI2ODE4NWQ1OA==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2011-09-26T12:12:51Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2011-09-26T12:12:51Z"}, "message": "2011-09-26  Tristan Gingold  <gingold@adacore.com>\n\n\t* inclhack.def (ms_define_can_use_extern_prefix):\n\t(vms_use_pragma_extern_model, vms_disable_decc_string_builtins):\n\tNew fixes.\n\t* fixincl.x: Regenerate.\n\t* tests/base/rtldef/string.h: New test.\n\t* tests/base/rtldef/decc$types.h: Likewise.\n\t* tests/base/testing.h: Update\n\nFrom-SVN: r179192", "tree": {"sha": "882fa045ff6b5d05d084b4d6deef84d7f56cf6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/882fa045ff6b5d05d084b4d6deef84d7f56cf6ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/750db0248d1fe522587cb677402a839b68185d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750db0248d1fe522587cb677402a839b68185d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750db0248d1fe522587cb677402a839b68185d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750db0248d1fe522587cb677402a839b68185d58/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a6a05ce93121efb84acaff4d860ced53c4f2925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6a05ce93121efb84acaff4d860ced53c4f2925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a6a05ce93121efb84acaff4d860ced53c4f2925"}], "stats": {"total": 259, "additions": 254, "deletions": 5}, "files": [{"sha": "cb67edccde951f4f062609d224e970ea3be9fc7b", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -1,3 +1,13 @@\n+2011-09-26  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* inclhack.def (ms_define_can_use_extern_prefix):\n+\t(vms_use_pragma_extern_model, vms_disable_decc_string_builtins):\n+\tNew fixes.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/rtldef/string.h: New test.\n+\t* tests/base/rtldef/decc$types.h: Likewise.\n+\t* tests/base/testing.h: Update\n+\n 2011-09-22  Tristan Gingold  <gingold@adacore.com>\n \n \t* mkfixinc.sh (target): Remove alpha-vms from particular targets."}, {"sha": "cc25834c399353a72812fbe2d6cea667f59410b2", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 138, "deletions": 5, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday August 22, 2011 at 05:03:34 PM PDT\n+ * It has been AutoGen-ed  September 22, 2011 at 04:28:52 PM by AutoGen 5.11.1\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Aug 22 17:03:34 PDT 2011\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Sep 22 16:28:52 CEST 2011\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 217 fixup descriptions.\n+ * This file contains 220 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -8444,6 +8444,121 @@ static const char* apzVa_I960_MacroPatch[] = {\n     \"__vx%1\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vms_Define_Can_Use_Extern_Prefix fix\n+ */\n+tSCC zVms_Define_Can_Use_Extern_PrefixName[] =\n+     \"vms_define_can_use_extern_prefix\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVms_Define_Can_Use_Extern_PrefixList[] =\n+  \"rtldef/decc$types.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVms_Define_Can_Use_Extern_PrefixMachs[] = {\n+        \"*-*-*vms*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVms_Define_Can_Use_Extern_PrefixSelect0[] =\n+       \"#[ \\t]*else\\n\\\n+#[ \\t]*if defined\\\\(__DECCXX\\\\)\\n\\\n+#[ \\t]*define __CAN_USE_EXTERN_PREFIX 1\\n\";\n+\n+#define    VMS_DEFINE_CAN_USE_EXTERN_PREFIX_TEST_CT  1\n+static tTestDesc aVms_Define_Can_Use_Extern_PrefixTests[] = {\n+  { TT_EGREP,    zVms_Define_Can_Use_Extern_PrefixSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vms_Define_Can_Use_Extern_Prefix\n+ */\n+static const char* apzVms_Define_Can_Use_Extern_PrefixPatch[] = {\n+    \"format\",\n+    \"%0#    elif defined (__GNUC__)\\n\\\n+#\\tdefine __CAN_USE_EXTERN_PREFIX 1\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vms_Use_Pragma_Extern_Model fix\n+ */\n+tSCC zVms_Use_Pragma_Extern_ModelName[] =\n+     \"vms_use_pragma_extern_model\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+#define zVms_Use_Pragma_Extern_ModelList (char*)NULL\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVms_Use_Pragma_Extern_ModelMachs[] = {\n+        \"*-*-*vms*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVms_Use_Pragma_Extern_ModelSelect0[] =\n+       \"#if defined\\\\(__DECC\\\\) \\\\|\\\\| defined\\\\(__DECCXX\\\\)\\n\\\n+# pragma extern_model __save\\n\";\n+\n+#define    VMS_USE_PRAGMA_EXTERN_MODEL_TEST_CT  1\n+static tTestDesc aVms_Use_Pragma_Extern_ModelTests[] = {\n+  { TT_EGREP,    zVms_Use_Pragma_Extern_ModelSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vms_Use_Pragma_Extern_Model\n+ */\n+static const char* apzVms_Use_Pragma_Extern_ModelPatch[] = {\n+    \"format\",\n+    \"#if defined(__DECC) || defined(__DECCXX) || defined(__GNUC__)\\n\\\n+# pragma extern_model __save\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vms_Disable_Decc_String_Builtins fix\n+ */\n+tSCC zVms_Disable_Decc_String_BuiltinsName[] =\n+     \"vms_disable_decc_string_builtins\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVms_Disable_Decc_String_BuiltinsList[] =\n+  \"rtldef/string.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVms_Disable_Decc_String_BuiltinsMachs[] = {\n+        \"*-*-*vms*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVms_Disable_Decc_String_BuiltinsSelect0[] =\n+       \"#if !defined\\\\(__VAX\\\\)\\n\";\n+\n+#define    VMS_DISABLE_DECC_STRING_BUILTINS_TEST_CT  1\n+static tTestDesc aVms_Disable_Decc_String_BuiltinsTests[] = {\n+  { TT_EGREP,    zVms_Disable_Decc_String_BuiltinsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vms_Disable_Decc_String_Builtins\n+ */\n+static const char* apzVms_Disable_Decc_String_BuiltinsPatch[] = {\n+    \"format\",\n+    \"#if !defined(__VAX) && !defined(__GNUC__)\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Void_Null fix\n@@ -8838,9 +8953,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          258\n+#define REGEX_COUNT          261\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            217\n+#define FIX_COUNT            220\n \n /*\n  *  Enumerate the fixes\n@@ -9054,6 +9169,9 @@ typedef enum {\n     ULTRIX_CONST_FIXIDX,\n     ULTRIX_CONST2_FIXIDX,\n     VA_I960_MACRO_FIXIDX,\n+    VMS_DEFINE_CAN_USE_EXTERN_PREFIX_FIXIDX,\n+    VMS_USE_PRAGMA_EXTERN_MODEL_FIXIDX,\n+    VMS_DISABLE_DECC_STRING_BUILTINS_FIXIDX,\n     VOID_NULL_FIXIDX,\n     VXWORKS_GCC_PROBLEM_FIXIDX,\n     VXWORKS_NEEDS_VXTYPES_FIXIDX,\n@@ -10106,6 +10224,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VA_I960_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVa_I960_MacroTests,   apzVa_I960_MacroPatch, 0 },\n \n+  {  zVms_Define_Can_Use_Extern_PrefixName,    zVms_Define_Can_Use_Extern_PrefixList,\n+     apzVms_Define_Can_Use_Extern_PrefixMachs,\n+     VMS_DEFINE_CAN_USE_EXTERN_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVms_Define_Can_Use_Extern_PrefixTests,   apzVms_Define_Can_Use_Extern_PrefixPatch, 0 },\n+\n+  {  zVms_Use_Pragma_Extern_ModelName,    zVms_Use_Pragma_Extern_ModelList,\n+     apzVms_Use_Pragma_Extern_ModelMachs,\n+     VMS_USE_PRAGMA_EXTERN_MODEL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVms_Use_Pragma_Extern_ModelTests,   apzVms_Use_Pragma_Extern_ModelPatch, 0 },\n+\n+  {  zVms_Disable_Decc_String_BuiltinsName,    zVms_Disable_Decc_String_BuiltinsList,\n+     apzVms_Disable_Decc_String_BuiltinsMachs,\n+     VMS_DISABLE_DECC_STRING_BUILTINS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVms_Disable_Decc_String_BuiltinsTests,   apzVms_Disable_Decc_String_BuiltinsPatch, 0 },\n+\n   {  zVoid_NullName,    zVoid_NullList,\n      apzVoid_NullMachs,\n      VOID_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "afaabc0422dfe1f9bb5058fc08e93926d9928d00", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -4507,6 +4507,65 @@ fix = {\n };\n \n \n+/*\n+ *  Define __CAN_USE_EXTERN_PREFIX on vms.\n+ */\n+fix = {\n+    hackname  = vms_define_can_use_extern_prefix;\n+    files     = \"rtldef/decc$types.h\";\n+    select    = \"#[ \\t]*else\\n\"\n+\t\t\"#[ \\t]*if defined\\\\(__DECCXX\\\\)\\n\"\n+\t\t\"#[ \\t]*define __CAN_USE_EXTERN_PREFIX 1\\n\";\n+    mach      = \"*-*-*vms*\";\n+    c_fix     = format;\n+\n+    c_fix_arg = \"%0\"\n+\t\t\"#    elif defined (__GNUC__)\\n\"\n+\t\t\"#\\tdefine __CAN_USE_EXTERN_PREFIX 1\\n\";\n+\n+    test_text = \"# else\\n\"\n+\t\t\"#    if defined(__DECCXX)\\n\"\n+\t\t\"#\\tdefine __CAN_USE_EXTERN_PREFIX 1\\n\"\n+\t\t\"#    endif\\n\"\n+\t\t\"# endif\\n\";\n+};\n+\n+/*\n+ * On VMS, use pragma extern_model instead of VAX-C keywords.\n+ */\n+fix = {\n+    hackname  = vms_use_pragma_extern_model;\n+    select    = \"#if defined\\\\(__DECC\\\\) \\\\|\\\\| defined\\\\(__DECCXX\\\\)\\n\"\n+\t\t\"# pragma extern_model __save\\n\";\n+    mach      = \"*-*-*vms*\";\n+    c_fix     = format;\n+\n+    c_fix_arg = \"#if defined(__DECC) || defined(__DECCXX) || defined(__GNUC__)\\n\"\n+\t\t\"# pragma extern_model __save\\n\";\n+\n+    test_text = \"#if defined(__DECC) || defined(__DECCXX)\\n\"\n+\t\t\"# pragma extern_model __save\\n\"\n+\t\t\"# pragma extern_model strict_refdef\\n\"\n+\t\t\"   extern struct x zz$yy;\\n\"\n+\t\t\"# pragma extern_model __restore\\n\"\n+\t\t\"#endif\\n\";\n+};\n+\n+/*\n+ * On VMS, disable the use of dec-c string builtins\n+ */\n+fix = {\n+    hackname  = vms_disable_decc_string_builtins;\n+    select    = \"#if !defined\\\\(__VAX\\\\)\\n\";\n+    mach      = \"*-*-*vms*\";\n+    files     = \"rtldef/string.h\";\n+    c_fix     = format;\n+\n+    c_fix_arg = \"#if !defined(__VAX) && !defined(__GNUC__)\\n\";\n+\n+    test_text = \"#if !defined(__VAX)\\n\";\n+};\n+\n /*\n  *  AIX and Interix headers define NULL to be cast to a void pointer,\n  *  which is illegal in ANSI C++."}, {"sha": "5a7e0fc68e8a7aeab42c3017a3a1f44acfbac59d", "filename": "fixincludes/tests/base/rtldef/decc$types.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Frtldef%2Fdecc%24types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Frtldef%2Fdecc%24types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Frtldef%2Fdecc%24types.h?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -0,0 +1,21 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/rtldef/decc$types.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( VMS_DEFINE_CAN_USE_EXTERN_PREFIX_CHECK )\n+# else\n+#    if defined(__DECCXX)\n+#\tdefine __CAN_USE_EXTERN_PREFIX 1\n+#    elif defined (__GNUC__)\n+#\tdefine __CAN_USE_EXTERN_PREFIX 1\n+#    endif\n+# endif\n+\n+#endif  /* VMS_DEFINE_CAN_USE_EXTERN_PREFIX_CHECK */"}, {"sha": "1ac9b2add92449dd50d3630d9acd16b89f483aeb", "filename": "fixincludes/tests/base/rtldef/string.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -0,0 +1,15 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/rtldef/string.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( VMS_DISABLE_DECC_STRING_BUILTINS_CHECK )\n+#if !defined(__VAX) && !defined(__GNUC__)\n+\n+#endif  /* VMS_DISABLE_DECC_STRING_BUILTINS_CHECK */"}, {"sha": "c15a151280fbe7491c82aa47ac811ffd885d12ec", "filename": "fixincludes/tests/base/testing.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750db0248d1fe522587cb677402a839b68185d58/fixincludes%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftesting.h?ref=750db0248d1fe522587cb677402a839b68185d58", "patch": "@@ -120,3 +120,14 @@ extern unsigned int\n extern size_t\n \tstrlen(), strspn();\n #endif  /* SYSV68_STRING_CHECK */\n+\n+\n+#if defined( VMS_USE_PRAGMA_EXTERN_MODEL_CHECK )\n+#if defined(__DECC) || defined(__DECCXX) || defined(__GNUC__)\n+# pragma extern_model __save\n+# pragma extern_model strict_refdef\n+   extern struct x zz;\n+# pragma extern_model __restore\n+#endif\n+\n+#endif  /* VMS_USE_PRAGMA_EXTERN_MODEL_CHECK */"}]}