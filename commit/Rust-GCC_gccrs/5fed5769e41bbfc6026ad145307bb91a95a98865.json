{"sha": "5fed5769e41bbfc6026ad145307bb91a95a98865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlZDU3NjllNDFiYmZjNjAyNmFkMTQ1MzA3YmI5MWE5NWE5ODg2NQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:24:23Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:24:23Z"}, "message": "Remove insert_copyout and insert_copyin.\n\n2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (insert_out_of_ssa_copy): Pass an extra\n\targument for the place after which to insert the out of SSA copy.\n\t(rewrite_close_phi_out_of_ssa): Update calls to insert_out_of_ssa_copy.\n\t(rewrite_phi_out_of_ssa): Same.\n\t(rewrite_cross_bb_scalar_deps): Same.\n\t(insert_copyout): Removed.\n\t(insert_copyin): Removed.\n\t(translate_scalar_reduction_to_array): Call insert_out_of_ssa_copy and\n\tinsert_out_of_ssa_copy_on_edge instead of insert_copyout and\n\tinsert_copyin.\n\nFrom-SVN: r163117", "tree": {"sha": "fd1c415e0077041a094b75e9024a4e27ba02b0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd1c415e0077041a094b75e9024a4e27ba02b0b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fed5769e41bbfc6026ad145307bb91a95a98865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fed5769e41bbfc6026ad145307bb91a95a98865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fed5769e41bbfc6026ad145307bb91a95a98865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fed5769e41bbfc6026ad145307bb91a95a98865/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7086cc51984f7b1f5b0d709500382eb16875e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7086cc51984f7b1f5b0d709500382eb16875e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7086cc51984f7b1f5b0d709500382eb16875e2"}], "stats": {"total": 79, "additions": 41, "deletions": 38}, "files": [{"sha": "1e6cb78725fbc5f41ec629cd37ca568a51b18943", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fed5769e41bbfc6026ad145307bb91a95a98865", "patch": "@@ -1,3 +1,16 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (insert_out_of_ssa_copy): Pass an extra\n+\targument for the place after which to insert the out of SSA copy.\n+\t(rewrite_close_phi_out_of_ssa): Update calls to insert_out_of_ssa_copy.\n+\t(rewrite_phi_out_of_ssa): Same.\n+\t(rewrite_cross_bb_scalar_deps): Same.\n+\t(insert_copyout): Removed.\n+\t(insert_copyin): Removed.\n+\t(translate_scalar_reduction_to_array): Call insert_out_of_ssa_copy and\n+\tinsert_out_of_ssa_copy_on_edge instead of insert_copyout and\n+\tinsert_copyin.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (build_scop_bbs): Not static anymore."}, {"sha": "72c18762cceb8341da4153b8eb7c77a3a67a48a5", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=5fed5769e41bbfc6026ad145307bb91a95a98865", "patch": "@@ -1,3 +1,16 @@\n+2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (insert_out_of_ssa_copy): Pass an extra\n+\targument for the place after which to insert the out of SSA copy.\n+\t(rewrite_close_phi_out_of_ssa): Update calls to insert_out_of_ssa_copy.\n+\t(rewrite_phi_out_of_ssa): Same.\n+\t(rewrite_cross_bb_scalar_deps): Same.\n+\t(insert_copyout): Removed.\n+\t(insert_copyin): Removed.\n+\t(translate_scalar_reduction_to_array): Call insert_out_of_ssa_copy and\n+\tinsert_out_of_ssa_copy_on_edge instead of insert_copyout and\n+\tinsert_copyin.\n+\n 2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (build_scop_bbs): Not static anymore."}, {"sha": "2897cd66de35cab743b95a490fa6651d3816a802", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 15, "deletions": 38, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fed5769e41bbfc6026ad145307bb91a95a98865/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=5fed5769e41bbfc6026ad145307bb91a95a98865", "patch": "@@ -2117,10 +2117,10 @@ gsi_for_phi_node (gimple stmt)\n   return psi;\n }\n \n-/* Insert the assignment \"RES := VAR\" just after the definition of VAR.  */\n+/* Insert the assignment \"RES := VAR\" just after AFTER_STMT.  */\n \n static void\n-insert_out_of_ssa_copy (tree res, tree var)\n+insert_out_of_ssa_copy (tree res, tree var, gimple after_stmt)\n {\n   gimple stmt;\n   gimple_seq stmts;\n@@ -2134,15 +2134,14 @@ insert_out_of_ssa_copy (tree res, tree var)\n   si = gsi_last (stmts);\n   gsi_insert_after (&si, stmt, GSI_NEW_STMT);\n \n-  stmt = SSA_NAME_DEF_STMT (var);\n-  if (gimple_code (stmt) == GIMPLE_PHI)\n+  if (gimple_code (after_stmt) == GIMPLE_PHI)\n     {\n-      gsi = gsi_after_labels (gimple_bb (stmt));\n+      gsi = gsi_after_labels (gimple_bb (after_stmt));\n       gsi_insert_seq_before (&gsi, stmts, GSI_NEW_STMT);\n     }\n   else\n     {\n-      gsi = gsi_for_stmt (stmt);\n+      gsi = gsi_for_stmt (after_stmt);\n       gsi_insert_seq_after (&gsi, stmts, GSI_NEW_STMT);\n     }\n }\n@@ -2218,7 +2217,7 @@ rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n \n   if (TREE_CODE (arg) == SSA_NAME\n       && !SSA_NAME_IS_DEFAULT_DEF (arg))\n-    insert_out_of_ssa_copy (zero_dim_array, arg);\n+    insert_out_of_ssa_copy (zero_dim_array, arg, SSA_NAME_DEF_STMT (arg));\n   else\n     insert_out_of_ssa_copy_on_edge (single_pred_edge (gimple_bb (phi)),\n \t\t\t\t    zero_dim_array, arg);\n@@ -2239,7 +2238,7 @@ rewrite_phi_out_of_ssa (gimple_stmt_iterator *psi)\n   basic_block bb = gimple_bb (phi);\n   tree res = gimple_phi_result (phi);\n   tree var = SSA_NAME_VAR (res);\n-  tree zero_dim_array = create_zero_dim_array (var, \"General_Reduction\");\n+  tree zero_dim_array = create_zero_dim_array (var, \"phi_out_of_ssa\");\n   gimple_stmt_iterator gsi;\n   gimple stmt;\n   gimple_seq stmts;\n@@ -2295,7 +2294,7 @@ rewrite_phi_out_of_ssa (gimple_stmt_iterator *psi)\n \t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (arg)))\n \t      || flow_bb_inside_loop_p (loop_outer (bb->loop_father),\n \t\t\t\t\tgimple_bb (SSA_NAME_DEF_STMT (arg)))))\n-\tinsert_out_of_ssa_copy (zero_dim_array, arg);\n+\tinsert_out_of_ssa_copy (zero_dim_array, arg, SSA_NAME_DEF_STMT (arg));\n       else\n \tinsert_out_of_ssa_copy_on_edge (gimple_phi_arg_edge (phi, i),\n \t\t\t\t\tzero_dim_array, arg);\n@@ -2389,7 +2388,8 @@ rewrite_cross_bb_scalar_deps (sese region, gimple_stmt_iterator *gsi)\n \t  {\n \t    zero_dim_array = create_zero_dim_array\n \t      (SSA_NAME_VAR (def), \"Cross_BB_scalar_dependence\");\n-\t    insert_out_of_ssa_copy (zero_dim_array, def);\n+\t    insert_out_of_ssa_copy (zero_dim_array, def,\n+\t\t\t\t    SSA_NAME_DEF_STMT (def));\n \t    gsi_next (gsi);\n \t  }\n \n@@ -2728,32 +2728,6 @@ translate_scalar_reduction_to_array_for_stmt (tree red, gimple stmt,\n   gsi_insert_after (&insert_gsi, assign, GSI_SAME_STMT);\n }\n \n-/* Insert the assignment \"result (CLOSE_PHI) = RED\".  */\n-\n-static void\n-insert_copyout (tree red, gimple close_phi)\n-{\n-  tree res = gimple_phi_result (close_phi);\n-  basic_block bb = gimple_bb (close_phi);\n-  gimple_stmt_iterator insert_gsi = gsi_after_labels (bb);\n-  gimple assign = gimple_build_assign (res, red);\n-\n-  gsi_insert_before (&insert_gsi, assign, GSI_SAME_STMT);\n-}\n-\n-/* Insert the assignment \"RED = initial_value (LOOP_PHI)\".  */\n-\n-static void\n-insert_copyin (tree red, gimple loop_phi)\n-{\n-  gimple_seq stmts;\n-  tree init = initial_value_for_loop_phi (loop_phi);\n-  tree expr = build2 (MODIFY_EXPR, TREE_TYPE (init), red, init);\n-\n-  force_gimple_operand (expr, &stmts, true, NULL);\n-  gsi_insert_seq_on_edge (edge_initial_value_for_loop_phi (loop_phi), stmts);\n-}\n-\n /* Removes the PHI node and resets all the debug stmts that are using\n    the PHI_RESULT.  */\n \n@@ -2829,8 +2803,11 @@ translate_scalar_reduction_to_array (VEC (gimple, heap) *in,\n \n       if (i == VEC_length (gimple, in) - 1)\n \t{\n-\t  insert_copyout (red, close_phi);\n-\t  insert_copyin (red, loop_phi);\n+\t  insert_out_of_ssa_copy (gimple_phi_result (close_phi), red,\n+\t\t\t\t  close_phi);\n+\t  insert_out_of_ssa_copy_on_edge\n+\t    (edge_initial_value_for_loop_phi (loop_phi),\n+\t     red, initial_value_for_loop_phi (loop_phi));\n \t}\n \n       remove_phi (loop_phi);"}]}