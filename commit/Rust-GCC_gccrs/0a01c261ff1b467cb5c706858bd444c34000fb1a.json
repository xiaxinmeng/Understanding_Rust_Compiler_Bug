{"sha": "0a01c261ff1b467cb5c706858bd444c34000fb1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEwMWMyNjFmZjFiNDY3Y2I1YzcwNjg1OGJkNDQ0YzM0MDAwZmIxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-23T18:52:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-23T18:52:08Z"}, "message": "spew.c (pending_inlines, [...]): Make static.\n\n\t* spew.c (pending_inlines, pending_inlines_tail,\n\tprocessing_these_inlines): Make static.\n\t(mark_pending_inlines): Remove static.\n\t(begin_parsing_inclass_inline): If in function, save pi\n\tfor GC to cp_function_chain->unparsed_inlines instead.\n\t(process_next_inline): Likewise.\n\t* cp-tree.h (struct cp_language_function): Add unparsed_inlines.\n\t(mark_pending_inlines): Add prototype.\n\t* decl.c (spew_debug): Remove unused extern.\n\t(mark_lang_function): Call mark_pending_inlines.\n\n\t* g++.dg/other/gc1.C: New test.\n\nFrom-SVN: r49147", "tree": {"sha": "c6469789b3d8aaa2118368d0a251ac21514b6795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6469789b3d8aaa2118368d0a251ac21514b6795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a01c261ff1b467cb5c706858bd444c34000fb1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a01c261ff1b467cb5c706858bd444c34000fb1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a01c261ff1b467cb5c706858bd444c34000fb1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a01c261ff1b467cb5c706858bd444c34000fb1a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1398974cb30a775ca0d8fccd9b86a2cdb77fb654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1398974cb30a775ca0d8fccd9b86a2cdb77fb654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1398974cb30a775ca0d8fccd9b86a2cdb77fb654"}], "stats": {"total": 98, "additions": 84, "deletions": 14}, "files": [{"sha": "f2c1791aee1feaa3044bf5b86f8cddebcf0239d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -1,3 +1,16 @@\n+2002-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* spew.c (pending_inlines, pending_inlines_tail,\n+\tprocessing_these_inlines): Make static.\n+\t(mark_pending_inlines): Remove static.\n+\t(begin_parsing_inclass_inline): If in function, save pi\n+\tfor GC to cp_function_chain->unparsed_inlines instead.\n+\t(process_next_inline): Likewise.\n+\t* cp-tree.h (struct cp_language_function): Add unparsed_inlines.\n+\t(mark_pending_inlines): Add prototype.\n+\t* decl.c (spew_debug): Remove unused extern.\n+\t(mark_lang_function): Call mark_pending_inlines.\n+\n 2002-01-23  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \t* call.c, class.c, decl.c, decl2.c, error.c, expr.c, friend.c, "}, {"sha": "8c075c51ee9d3abb481880af24121f9a0f504af7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -801,6 +801,8 @@ struct saved_scope\n \n extern struct saved_scope *scope_chain;\n \n+struct unparsed_text;\n+\n /* Global state pertinent to the current function.  */\n \n struct cp_language_function\n@@ -828,6 +830,7 @@ struct cp_language_function\n   varray_type x_local_names;\n \n   const char *cannot_inline;\n+  struct unparsed_text *unparsed_inlines;\n };\n \n /* The current C++-specific per-function global variables.  */\n@@ -1781,8 +1784,6 @@ struct lang_decl_flags\n   } u2;\n };\n \n-struct unparsed_text;\n-\n struct lang_decl\n {\n   struct lang_decl_flags decl_flags;\n@@ -4193,6 +4194,7 @@ extern tree finish_global_stmt_expr             PARAMS ((tree));\n \n /* in spew.c */\n extern void init_spew\t\t\t\tPARAMS ((void));\n+extern void mark_pending_inlines\t\tPARAMS ((PTR));\n extern int peekyylex\t\t\t\tPARAMS ((void));\n extern tree arbitrate_lookup\t\t\tPARAMS ((tree, tree, tree));\n extern tree frob_opname                         PARAMS ((tree));"}, {"sha": "35211135cf0fe319f04564b5717868c54218c4e9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -288,10 +288,6 @@ extern int flag_conserve_space;\n \f\n /* C and C++ flags are in decl2.c.  */\n \n-/* Flag used when debugging spew.c */\n-\n-extern int spew_debug;\n-\n /* A expression of value 0 with the same precision as a sizetype\n    node, but signed.  */\n tree signed_size_zero_node;\n@@ -14607,6 +14603,7 @@ mark_lang_function (p)\n \n   mark_named_label_lists (&p->x_named_labels, &p->x_named_label_uses);\n   mark_binding_level (&p->bindings);\n+  mark_pending_inlines (&p->unparsed_inlines);\n }\n \n /* Mark the language-specific data in F for GC.  */"}, {"sha": "e610aec47c09efa946ab40286189514a07c6f97d", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -119,15 +119,14 @@ static int frob_id PARAMS ((int, int, tree *));\n \n /* The list of inline functions being held off until we reach the end of\n    the current class declaration.  */\n-struct unparsed_text *pending_inlines;\n-struct unparsed_text *pending_inlines_tail;\n+static struct unparsed_text *pending_inlines;\n+static struct unparsed_text *pending_inlines_tail;\n \n /* The list of previously-deferred inline functions currently being parsed.\n    This exists solely to be a GC root.  */\n-struct unparsed_text *processing_these_inlines;\n+static struct unparsed_text *processing_these_inlines;\n \n static void begin_parsing_inclass_inline PARAMS ((struct unparsed_text *));\n-static void mark_pending_inlines PARAMS ((PTR));\n \n #ifdef SPEW_DEBUG\n int spew_debug = 0;\n@@ -416,7 +415,7 @@ end_input ()\n }\n \n /* GC callback to mark memory pointed to by the pending inline queue.  */\n-static void\n+void\n mark_pending_inlines (pi)\n      PTR pi;\n {\n@@ -950,8 +949,11 @@ begin_parsing_inclass_inline (pi)\n   tree context;\n \n   /* Record that we are processing the chain of inlines starting at\n-     PI in a special GC root.  */\n-  processing_these_inlines = pi;\n+     PI for GC.  */\n+  if (cfun)\n+    cp_function_chain->unparsed_inlines = pi;\n+  else\n+    processing_these_inlines = pi;\n \n   ggc_collect ();\n \n@@ -1025,7 +1027,10 @@ process_next_inline (i)\n     begin_parsing_inclass_inline (i);\n   else\n     {\n-      processing_these_inlines = 0;\n+      if (cfun)\n+\tcp_function_chain->unparsed_inlines = 0;\n+      else\n+\tprocessing_these_inlines = 0;\n       extract_interface_info ();\n     }\n }"}, {"sha": "22bc8a929c44d067580c803fb68ffcf170ea9ee1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -1,3 +1,7 @@\n+2002-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/other/gc1.C: New test.\n+\n 2002-01-23  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.dg/c99-intconst-1.c: Mark XFAIL."}, {"sha": "3c7a16998d183fde9e7c3202202f901da2f648d3", "filename": "gcc/testsuite/g++.dg/other/gc1.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a01c261ff1b467cb5c706858bd444c34000fb1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc1.C?ref=0a01c261ff1b467cb5c706858bd444c34000fb1a", "patch": "@@ -0,0 +1,49 @@\n+// This test failed with GGC_ALWAYS_COLLECT because not all unparsed\n+// inline methods were registered with GC.\n+// { dg-do compile }\n+\n+const char *foo ()\n+{\n+  struct A\n+  {\n+    const char *a1 ()\n+    {\n+      return \"a1\";\n+    }\n+    const char *a2 ()\n+    {\n+      struct B\n+      {\n+\tconst char *b1 ()\n+\t{\n+\t  return \"b1\";\n+\t}\n+\tconst char *b2 ()\n+\t{\n+\t  struct C\n+\t  {\n+\t    const char *c1 ()\n+\t    {\n+\t      return \"c1\";\n+\t    }\n+\t    const char *c2 ()\n+\t    {\n+\t      return \"c2\";\n+\t    }\n+\t  };\n+\t  return \"b2\";\n+\t}\n+\tconst char *b3 ()\n+\t{\n+\t  return \"b3\";\n+\t}\n+      };\n+      return \"a2\";\n+    }\n+    const char *a3 ()\n+    {\n+      return \"a3\";\n+    }\n+  };\n+  return \"foo\";\n+}"}]}