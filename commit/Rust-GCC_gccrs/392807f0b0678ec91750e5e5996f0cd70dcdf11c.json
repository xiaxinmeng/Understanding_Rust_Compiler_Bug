{"sha": "392807f0b0678ec91750e5e5996f0cd70dcdf11c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyODA3ZjBiMDY3OGVjOTE3NTBlNWU1OTk2ZjBjZDcwZGNkZjExYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-09T22:08:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-09T22:08:59Z"}, "message": "* decl.c (cp_finish_decl): Only check VLA bound in C++1y mode.\n\nFrom-SVN: r198756", "tree": {"sha": "068030a46a2f439f6d1fd66439255a8987253d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068030a46a2f439f6d1fd66439255a8987253d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/392807f0b0678ec91750e5e5996f0cd70dcdf11c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392807f0b0678ec91750e5e5996f0cd70dcdf11c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392807f0b0678ec91750e5e5996f0cd70dcdf11c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392807f0b0678ec91750e5e5996f0cd70dcdf11c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4bca93ce12086ad0e1facbbe7c130078678d912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bca93ce12086ad0e1facbbe7c130078678d912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bca93ce12086ad0e1facbbe7c130078678d912"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8eefe328602a507853b71dcc1d6c317e5f6d885c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392807f0b0678ec91750e5e5996f0cd70dcdf11c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392807f0b0678ec91750e5e5996f0cd70dcdf11c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=392807f0b0678ec91750e5e5996f0cd70dcdf11c", "patch": "@@ -1,5 +1,7 @@\n 2013-05-09  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (cp_finish_decl): Only check VLA bound in C++1y mode.\n+\n \tPR c++/57222\n \t* pt.c (lookup_template_class_1): Handle getting a template\n \ttemplate parameter as D1."}, {"sha": "9c97c9dd1a9c9867afc04cc2872f552557ed1181", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392807f0b0678ec91750e5e5996f0cd70dcdf11c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392807f0b0678ec91750e5e5996f0cd70dcdf11c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=392807f0b0678ec91750e5e5996f0cd70dcdf11c", "patch": "@@ -6402,7 +6402,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t   && TYPE_FOR_JAVA (type) && MAYBE_CLASS_TYPE_P (type))\n     error (\"non-static data member %qD has Java class type\", decl);\n \n-  if (array_of_runtime_bound_p (type))\n+  if (cxx_dialect >= cxx1y && array_of_runtime_bound_p (type))\n     {\n       /* If the VLA bound is larger than half the address space, or less\n \t than zero, throw std::bad_array_length.  */"}]}