{"sha": "2c356f221bbab29bf4d1626d161e0f584dddd600", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMzNTZmMjIxYmJhYjI5YmY0ZDE2MjZkMTYxZTBmNTg0ZGRkZDYwMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-16T01:27:53Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-16T01:37:20Z"}, "message": "libstdc++-v3: Add -fcf-protection=none to -march=i486\n\n-fcf-protection is automatically enabled in libstdc++ on Linux/x86.\nStarting from\n\ncommit 77d372abec0fbf2cfe922e3140ee3410248f979e\nAuthor: H.J. Lu <hjl.tools@gmail.com>\nDate:   Thu Jan 14 05:56:46 2021 -0800\n\n    x86: Error on -fcf-protection with incompatible target\n\nGCC issues an error on -fcf-protection with incompatible target:\n\n... -fcf-protection ... libstdc++-v3/testsuite/29_atomics/atomic_flag/test_and_set/explicit-hle.cc  -m32   -O2 -g0 -fno-exceptions -fno-asynchronous-unwind-tables -march=i486 ...\ncc1plus: error: '-fcf-protection' is not compatible with this target\nFAIL: 29_atomics/atomic_flag/test_and_set/explicit-hle.cc (test for excess errors)\n\nAdd -fcf-protection=none to -march=i486 to compile explicit-hle.cc.\n\n\t* testsuite/29_atomics/atomic_flag/test_and_set/explicit-hle.cc:\n\tAdd -fcf-protection=none to -march=i486.", "tree": {"sha": "c8a0a74d557b13644a3a6ae9494f1b29bbb07b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8a0a74d557b13644a3a6ae9494f1b29bbb07b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c356f221bbab29bf4d1626d161e0f584dddd600", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c356f221bbab29bf4d1626d161e0f584dddd600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c356f221bbab29bf4d1626d161e0f584dddd600", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c356f221bbab29bf4d1626d161e0f584dddd600/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f7f0d32e740c8111b88f7865c822674060c02d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7f0d32e740c8111b88f7865c822674060c02d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7f0d32e740c8111b88f7865c822674060c02d7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8ec4628320844f66eed9fd0b51d22e5ac3f0b326", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/test_and_set/explicit-hle.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c356f221bbab29bf4d1626d161e0f584dddd600/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit-hle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c356f221bbab29bf4d1626d161e0f584dddd600/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit-hle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit-hle.cc?ref=2c356f221bbab29bf4d1626d161e0f584dddd600", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-O2 -g0 -fno-exceptions -fno-asynchronous-unwind-tables\" }\n-// { dg-additional-options \"-march=i486\" { target ia32 } }\n+// { dg-additional-options \"-march=i486 -fcf-protection=none\" { target ia32 } }\n // { dg-require-effective-target c++11 }\n // { dg-skip-if \"scans fail with LTO\" { lto } { \"-flto\" } }\n // { dg-final { scan-assembler-times \"xacquire\\|\\.byte\\[^\\n\\r]*0xf2\" 14 } }"}]}