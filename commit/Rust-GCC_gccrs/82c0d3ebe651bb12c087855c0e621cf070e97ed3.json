{"sha": "82c0d3ebe651bb12c087855c0e621cf070e97ed3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMGQzZWJlNjUxYmIxMmMwODc4NTVjMGU2MjFjZjA3MGU5N2VkMw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-08-08T12:46:08Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-08-08T12:46:08Z"}, "message": "scalar-extract-exp-2.c: Adjust diagnostic string.\n\n2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust diagnostic\n\tstring.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-11.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Likewise.\n\t* gcc.target/powerpc/byte-in-set-2.c: Likewise.\n\t* gcc.target/powerpc/cmpb-3.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Likewise.\n\nFrom-SVN: r250952", "tree": {"sha": "6e73fbd451e819af093216aebceccbf17ef0527a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e73fbd451e819af093216aebceccbf17ef0527a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c0d3ebe651bb12c087855c0e621cf070e97ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0d3ebe651bb12c087855c0e621cf070e97ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c0d3ebe651bb12c087855c0e621cf070e97ed3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0d3ebe651bb12c087855c0e621cf070e97ed3/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d81e058f5ed20929bfee40fd281e39c80d7fd9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d81e058f5ed20929bfee40fd281e39c80d7fd9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d81e058f5ed20929bfee40fd281e39c80d7fd9e0"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "c457a9e72c07b1eeb6ba94571fcfd9344b1d5dd7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -1,3 +1,19 @@\n+2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust diagnostic\n+\tstring.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-11.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Likewise.\n+\t* gcc.target/powerpc/byte-in-set-2.c: Likewise.\n+\t* gcc.target/powerpc/cmpb-3.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Likewise.\n+\n 2017-08-08  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-opt/81696"}, {"sha": "594d92cad99a48047b8709b54313d535eaa3863f", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -15,7 +15,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"Builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "569de683df0bd420f760bb10f25d2481b8768c59", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -15,7 +15,7 @@ get_exponent (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"Builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "cdf163d9f9c3b44e5bcecbd1dd500e5edafc9286", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -13,5 +13,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"Builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n }"}, {"sha": "17ac4852984656457f454011f3489adc2a479722", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -13,5 +13,5 @@ get_significand (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"Builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n }"}, {"sha": "188bdfeac628b61d765c4187c545064b02026429", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -17,5 +17,5 @@ insert_exponent (__ieee128 *significand_p,\n   __ieee128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"Builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n }"}, {"sha": "c48d4e6885caab619c78ae24ab01713d8b4e9921", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -17,5 +17,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"Builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n }"}, {"sha": "f662fa86cedf436a626281404b3f2a060519b346", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -17,5 +17,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"Builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n }"}, {"sha": "ce6dd548727e83839bd578137cfbb49e71375765", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -17,5 +17,5 @@ insert_exponent (unsigned __int128 *significand_p, /* { dg-error \"'__int128' is\n   unsigned __int128 significand = *significand_p;  /* { dg-error \"'__int128' is not supported on this target\" } */\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"Builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n }"}, {"sha": "b2a6a98c8e3e511cb5f060a37e86ad7f49406e08", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -12,5 +12,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"Builtin function __builtin_byte_in_set not supported in this compiler configuration\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function __builtin_byte_in_set not supported in this compiler configuration\" } */\n }"}, {"sha": "a3b72581434008fe02c67717a42bba8ed0878d5b", "filename": "gcc/testsuite/gcc.target/powerpc/cmpb-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -9,7 +9,7 @@ void abort ();\n long long int\n do_compare (long long int a, long long int b)\n {\n-  return __builtin_cmpb (a, b);\t/* { dg-error \"Builtin function __builtin_cmpb not supported in this compiler configuration\" } */\n+  return __builtin_cmpb (a, b);\t/* { dg-error \"builtin function __builtin_cmpb not supported in this compiler configuration\" } */\n }\n \n void expect (long long int pattern, long long int value)"}, {"sha": "55e3db43ca2117a993b08fcd91a41a13d13c5329", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -14,5 +14,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"Builtin function __builtin_vec_lxvl not supported in this compiler configuration\" } */\n+  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"builtin function __builtin_vec_lxvl not supported in this compiler configuration\" } */\n }"}, {"sha": "49feaa67a1813c124e82cd26b4baa85218ea0969", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0d3ebe651bb12c087855c0e621cf070e97ed3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c?ref=82c0d3ebe651bb12c087855c0e621cf070e97ed3", "patch": "@@ -15,5 +15,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"Builtin function __builtin_altivec_stxvl requires\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function __builtin_altivec_stxvl requires\" } */\n }"}]}