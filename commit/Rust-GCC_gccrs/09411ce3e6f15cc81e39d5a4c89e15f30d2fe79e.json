{"sha": "09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0MTFjZTNlNmYxNWNjODFlMzlkNWE0Yzg5ZTE1ZjMwZDJmZTc5ZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2011-07-07T17:44:14Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2011-07-07T17:44:14Z"}, "message": "target-supports.exp (check_effective_target_arm_dsp): New.\n\n\t* lib/target-supports.exp (check_effective_target_arm_dsp): New.\n\t* gcc.target/arm/mla-2.c: Use it instead of specific -march.\n\t* gcc.target/arm/wmul-1.c: Likewise.\n\t* gcc.target/arm/wmul-2.c: Likewise.\n\t* gcc.target/arm/wmul-3.c: Likewise.\n\t* gcc.target/arm/wmul-4.c: Likewise.\n\t* gcc.target/arm/smlaltb-1.c: Require arm_dsp, don't specify -march,\n\tadd tab after scan target.\n\t* gcc.target/arm/smlaltt-1.c: Likewise.\n\t* gcc.target/arm/smlatb-1.c: Likewise.\n\t* gcc.target/arm/smlatt-1.c: Likewise.\n\nFrom-SVN: r175993", "tree": {"sha": "9d5a96b4a48f733e5ad47d527588644c36d1c034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d5a96b4a48f733e5ad47d527588644c36d1c034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/comments", "author": null, "committer": null, "parents": [{"sha": "1e4b2746e01c334c0dc26b8dd421c08812ca3f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4b2746e01c334c0dc26b8dd421c08812ca3f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4b2746e01c334c0dc26b8dd421c08812ca3f60"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "7586f83a89a5ab7fb9b6fc6fd6cc6fffe5a3fda0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,3 +1,17 @@\n+2011-07-07  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_dsp): New.\n+\t* gcc.target/arm/mla-2.c: Use it instead of specific -march.\n+\t* gcc.target/arm/wmul-1.c: Likewise.\n+\t* gcc.target/arm/wmul-2.c: Likewise.\n+\t* gcc.target/arm/wmul-3.c: Likewise.\n+\t* gcc.target/arm/wmul-4.c: Likewise.\n+\t* gcc.target/arm/smlaltb-1.c: Require arm_dsp, don't specify -march,\n+\tadd tab after scan target.\n+\t* gcc.target/arm/smlaltt-1.c: Likewise.\n+\t* gcc.target/arm/smlatb-1.c: Likewise.\n+\t* gcc.target/arm/smlatt-1.c: Likewise.\n+\n 2011-07-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/49522"}, {"sha": "1e3ca200b2ef8ce4ce1741be77852c43aa208696", "filename": "gcc/testsuite/gcc.target/arm/mla-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmla-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmla-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmla-2.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv7-a\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n long long foolong (long long x, short *a, short *b)\n {"}, {"sha": "1472c9b3fa1605149b8d13270d70879be6a7443f", "filename": "gcc/testsuite/gcc.target/arm/smlaltb-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltb-1.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv7-a\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n long long int\n foo (long long x, int in)\n@@ -10,4 +11,4 @@ foo (long long x, int in)\n   return x + b * a;\n }\n \n-/* { dg-final { scan-assembler \"smlaltb\" } } */\n+/* { dg-final { scan-assembler \"smlaltb\\\\t\" } } */"}, {"sha": "6bcbce0b95861bf8586b19ca5570b833e504e643", "filename": "gcc/testsuite/gcc.target/arm/smlaltt-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlaltt-1.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv7-a\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n long long int\n foo (long long x, int in1, int in2)\n@@ -10,4 +11,4 @@ foo (long long x, int in1, int in2)\n   return x + b * a;\n }\n \n-/* { dg-final { scan-assembler \"smlaltt\" } } */\n+/* { dg-final { scan-assembler \"smlaltt\\\\t\" } } */"}, {"sha": "d73aa18ea7c009da72a6deb4fd07b137fed6ce38", "filename": "gcc/testsuite/gcc.target/arm/smlatb-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatb-1.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv7-a\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n int\n foo (int x, int in)\n@@ -10,4 +11,4 @@ foo (int x, int in)\n   return x + b * a;\n }\n \n-/* { dg-final { scan-assembler \"smlatb\" } } */\n+/* { dg-final { scan-assembler \"smlatb\\\\t\" } } */"}, {"sha": "d7fb03400095bbee011d5ed9241e1c3856933fd7", "filename": "gcc/testsuite/gcc.target/arm/smlatt-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsmlatt-1.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv7-a\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n int\n foo (int x, int in1, int in2)\n@@ -10,4 +11,4 @@ foo (int x, int in1, int in2)\n   return x + b * a;\n }\n \n-/* { dg-final { scan-assembler \"smlatt\" } } */\n+/* { dg-final { scan-assembler \"smlatt\\\\t\" } } */"}, {"sha": "426c9393f206b0f1249f43c0697b3aa2bba7f38a", "filename": "gcc/testsuite/gcc.target/arm/wmul-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv6t2\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n int mac(const short *a, const short *b, int sqr, int *sum)\n {"}, {"sha": "898b5f065cbfb920b230aa93f691665db125e3ef", "filename": "gcc/testsuite/gcc.target/arm/wmul-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-2.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv6t2\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n void vec_mpy(int y[], const short x[], short scaler)\n {"}, {"sha": "83f73fba727a4e02546cd43c23edebaaa2f1bd33", "filename": "gcc/testsuite/gcc.target/arm/wmul-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv6t2\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n int mac(const short *a, const short *b, int sqr, int *sum)\n {"}, {"sha": "a297bda2182556516ffae5fe15e417773a0dbaef", "filename": "gcc/testsuite/gcc.target/arm/wmul-4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv6t2\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+/* { dg-options \"-O2\" } */\n \n int mac(const int *a, const int *b, long long sqr, long long *sum)\n {"}, {"sha": "476a2e660b3afafd8354878776ff5063c7ef8199", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=09411ce3e6f15cc81e39d5a4c89e15f30d2fe79e", "patch": "@@ -1916,6 +1916,18 @@ proc check_effective_target_arm_hard_vfp_ok { } {\n     }\n }\n \n+# Return 1 if this is an ARM target that supports DSP multiply with\n+# current multilib flags.\n+\n+proc check_effective_target_arm_dsp { } {\n+    return [check_no_compiler_messages arm_dsp assembly {\n+\t#ifndef __ARM_FEATURE_DSP\n+\t#error not DSP\n+\t#endif\n+\tint i;\n+    }]\n+}\n+\n # Add the options needed for NEON.  We need either -mfloat-abi=softfp\n # or -mfloat-abi=hard, but if one is already specified by the\n # multilib, use it.  Similarly, if a -mfpu option already enables"}]}