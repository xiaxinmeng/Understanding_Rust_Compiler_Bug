{"sha": "7e08fa357c2b918c28599f7d11dfc65165117de3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UwOGZhMzU3YzJiOTE4YzI4NTk5ZjdkMTFkZmM2NTE2NTExN2RlMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-07-05T12:00:49Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-07-05T12:00:49Z"}, "message": "* ChangeLog: Fix word wrapping.\n\nFrom-SVN: r126365", "tree": {"sha": "171ea907fc38be7031adb407efb3c2a1d0ffdd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171ea907fc38be7031adb407efb3c2a1d0ffdd93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e08fa357c2b918c28599f7d11dfc65165117de3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e08fa357c2b918c28599f7d11dfc65165117de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e08fa357c2b918c28599f7d11dfc65165117de3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e08fa357c2b918c28599f7d11dfc65165117de3/comments", "author": null, "committer": null, "parents": [{"sha": "68d64ccd473dbb8169373b15b804312478b08836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d64ccd473dbb8169373b15b804312478b08836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d64ccd473dbb8169373b15b804312478b08836"}], "stats": {"total": 253, "additions": 135, "deletions": 118}, "files": [{"sha": "9a4f1fbc21ba989cbbe3411b58c0f78d783e688a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 135, "deletions": 118, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e08fa357c2b918c28599f7d11dfc65165117de3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e08fa357c2b918c28599f7d11dfc65165117de3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e08fa357c2b918c28599f7d11dfc65165117de3", "patch": "@@ -1077,7 +1077,8 @@\n \t* genmodes.c (struct mode_data): Add ibit and fbit fields.\n \t(blank_mode): Initialize ibit and fbit.\n \t(adj_ibit, adj_fbit): New to adjust ibit and fbit.\n-\t(vector_class): Handle MODE_FRACT, MODE_UFRACT, MODE_ACCUM, MODE_UACCUM.\n+\t(vector_class): Handle MODE_FRACT, MODE_UFRACT, MODE_ACCUM,\n+\tMODE_UACCUM.\n \t(new_adjust): Change required_class to required_class_from and\n \trequired_class_to for testing within a range.\n \t(complete_mode): Handle MODE_FRACT, MODE_UFRACT, MODE_ACCUM,\n@@ -1444,7 +1445,8 @@\n 2007-06-19  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c: Include \"df.h\".\n-\t(xtensa_builtin_saveregs): Use adjust_address instead of change_address.\n+\t(xtensa_builtin_saveregs): Use adjust_address instead of\n+\tchange_address.\n \t(xtensa_va_start): Invoke make_tree with sizetype for\n \texpand_builtin_saveregs and then convert the result to a pointer.\n \tUse POINTER_PLUS_EXPR.  Use size_int instead of build_int_cst.\n@@ -2146,7 +2148,8 @@\n \t* opts.c (common_handle_option): Handle new option -fdbg-cnt-list.\n \t* dbgcnt.c (dbg_cnt_set_limit_by_name): Return value\n \tto indicate an error.\n-\t(dbg_cnt_process_single_pair, dbg_cnt_list_all_counters): New functions\n+\t(dbg_cnt_process_single_pair, dbg_cnt_list_all_counters):\n+\tNew functions.\n \t(dbg_cnt_process_opt): Print an error on a bad argument.\n \t* dbgcnt.h (dbg_cnt_list_all_counters): New function declaration.\n \t* common.opt (-fdbg-cnt-list): New.\n@@ -2255,8 +2258,8 @@\n \t(reorder_var_tracking_notes): New function.\n \t(bfin_reorg): Pass no argument to split_all_insns.  Don't call\n \tupdate_life_info.  Call df_analyze after scheduling and bundle\n-\tgeneration.  Call reorder_var_tracking_notes if generating these notes.\n-\tCall df_finish_pass at the end.\n+\tgeneration.  Call reorder_var_tracking_notes if generating these\n+\tnotes.  Call df_finish_pass at the end.\n \n 2007-06-12  Dirk Mueller  <dmueller@suse.de>\n \n@@ -2751,13 +2754,15 @@\n \t* tree-ssa.c (init_tree_ssa): Use type safe memory macros.\n \t* tree-ssa-ccp.c (ccp_fold_builtin): Avoid using C++ keywords as\n \tvariable names.\n-\t* tree-ssa-coalesce.c (find_coalesce_pair): Use type safe memory macros.\n+\t* tree-ssa-coalesce.c (find_coalesce_pair): Use type safe memory\n+\tmacros.\n \t(add_cost_one_coalesce): Likewise.\n \t* tree-ssa-copy.c (merge_alias_info): Avoid using C++ keywords as\n \tvariable names. Rename orig to orig_name for consistency.\n-\t* tree-ssa-dom.c (dom_thread_across_edge): Cast according to the coding\n-\tconventions.\n-\t(cprop_into_successor_phis): Avoid using C++ keywords as variable names.\n+\t* tree-ssa-dom.c (dom_thread_across_edge): Cast according to the\n+\tcoding conventions.\n+\t(cprop_into_successor_phis): Avoid using C++ keywords as variable\n+\tnames.\n \t(record_equivalences_from_stmt): Likewise.\n \t* tree-ssa-dse.c (dse_initialize_block_local_data): Cast according to\n \tthe coding conventions.\n@@ -2773,8 +2778,8 @@\n \t(memref_hash): Likewise.\n \t(memref_eq): Likewise.\n \t(gather_mem_refs_stmt): Likewise.\n-\t* tree-ssa-loop-ivopts.c (contains_abnormal_ssa_name_p): Avoid using C++\n-\tkeywords as variable names.\n+\t* tree-ssa-loop-ivopts.c (contains_abnormal_ssa_name_p): Avoid\n+\tusing C++ keywords as variable names.\n \t(idx_find_step): Cast according to the coding conventions.\n \t(idx_record_use): Likewise.\n \t(find_depends): Likewise.\n@@ -2788,8 +2793,8 @@\n \t* tree-ssa-math-opts.c (occ_new ): Likwise.\n \t* tree-ssanames.c (duplicate_ssa_name_ptr_info): Use type safe memory\n \tmacros.\n-\t* tree-ssa-operands.c (add_def_op): Avoid using C++ keywords as variable\n-\tnames.\n+\t* tree-ssa-operands.c (add_def_op): Avoid using C++ keywords as\n+\tvariable names.\n \t(add_use_op): Likewise.\n \t(add_vop): Likewise.\n \t(add_vuse_op): Likewise.\n@@ -4590,7 +4595,8 @@\n \tdecimal_single_format, decimal_double_format, decimal_quad_format,\n \tc4x_single_format, c4x_extended_format, real_internal_format): Remove\n \tinitialization of log2_b.\n-\t* real.h (i370_single_format, i370_double_format): Declarations removed.\n+\t* real.h (i370_single_format, i370_double_format): Declarations\n+\tremoved.\n \t* c-cppbuiltin.c (builtin_define_float_constants): Consider the log2_b\n \tfield to always be one.\n \n@@ -4619,7 +4625,7 @@\n \t* gengtype.c (adjust_field_rtx_def): Use NOTE_KIND instead of\n \tNOTE_LINE_NUMBER; use NOTE_INSN_BASIC_BLOCK_P when possible.\n \t* ddg.c (create_ddg): LIkewise.\n-\t* final.c (final): Remove hunk moving line numbernotes around since\n+\t* final.c (final): Remove hunk moving line number notes around since\n \tthey are no longer present at this stage.\n \t(final_scan_insn): Use NOTE_KIND instead of\n \tNOTE_LINE_NUMBER; use NOTE_INSN_BASIC_BLOCK_P when possible.\n@@ -4641,8 +4647,8 @@\n \t* function.c (reorder_blocks_1): Likewise.\n \t(epilogue_done): Likewise.\n \t(reposition_prologue_and_epilogue_notes): Likewise.\n-\t* print-rtl.c (print_rtx): Likewise; drop code for printing line number\n-\tnotes.\n+\t* print-rtl.c (print_rtx): Likewise; drop code for printing\n+\tline number notes.\n \t(print_rtl): Likewise.\n \t(print_rtl_single): Likewise.\n \t* gcse.c (insert_insn_start_bb): Likewise.\n@@ -4771,8 +4777,8 @@\n \t(_mm_shufle_ps): Ditto.  Add const to __mask argument.\n \t* config/i386/emmintrin.h (_mm_slli_epi16): Add const to __B argument.\n \t(_mm_slli_epi32): Ditto.\n-\t(_mm_srli_si128): Implement as always inlined function, not as a macro.\n-\tAdd __inline to function declaration.\n+\t(_mm_srli_si128): Implement as always inlined function, not as a\n+\tmacro.  Add __inline to function declaration.\n \t(_mm_slli_si128): Ditto.\n \n 2007-05-19  Uros Bizjak  <ubizjak@gmail.com>\n@@ -5134,7 +5140,8 @@\n \t* tree-ssa-loop.c (pass_tree_unswitch, pass_vectorize,\n \tpass_linear_transfom, pass_empty_loop, pass_complete_unroll,\n \tpass_iv_optimize): Add TODO_ggc_collect.\n-\t* function.h (struct function): Remove skip marker from x_current_loops.\n+\t* function.h (struct function): Remove skip marker from\n+\tx_current_loops.\n \t* cfgloop.c: Include ggc.h.\n \t(flow_loops_free, flow_loop_free): Free the loop descriptions in gc\n \tmemory.\n@@ -5146,8 +5153,8 @@\n \t(rescan_loop_exit): Use GGC_NEW to allocate struct loop_exit.  Reflect\n \tthat head of exits list is now not a part of struct loop.\n \t(record_loop_exits): Allocate exits table in gc memory.\n-\t(get_loop_exit_edges, verify_loop_structure, single_exit): Reflect that\n-\thead of exits list is now not a part of struct loop.\n+\t(get_loop_exit_edges, verify_loop_structure, single_exit): Reflect\n+\tthat head of exits list is now not a part of struct loop.\n \t* cfgloop.h (struct lpt_decision, struct nb_iter_bound,\n \tstruct loop_exit): Add GTY marker.\n \t(struct loop): Add GTY marker.  Make superloops vector gc allocated.\n@@ -5156,8 +5163,8 @@\n \t(struct loops): Add GTY marker.  Make larray vector gc allocated.\n \tAdd param marker to exits table.\n \t(get_loops): Type changed.\n-\t* Makefile.in (tree-scalar-evolution.o): Add gt-tree-scalar-evolution.h\n-\tdependency.\n+\t* Makefile.in (tree-scalar-evolution.o): Add\n+\tgt-tree-scalar-evolution.h dependency.\n \t(cfgloop.o, loop-init.o): Add ggc.h dependency.\n \t(GTFILES): Add cfgloop.h and tree-scalar-evolution.c.\n \t* basic-block.h (struct basic_block_def): Remove skip marker from\n@@ -5226,8 +5233,8 @@\n \t* c-format.c (check_format_types): Use unsigned_type_for instead of\n \tc_common_unsigned_type.\n \t* c-objc-common.h (LANG_HOOKS_UNSIGNED_TYPE): Remove.\n-\t* c-typeck.c (convert_for_assignment): Use unsigned_type_for instead of\n-\tc_common_unsigned_type.\n+\t* c-typeck.c (convert_for_assignment): Use unsigned_type_for instead\n+\tof c_common_unsigned_type.\n \t* convert.c (convert_to_integer): Use unsigned_type_for instead of\n \tlang_hooks.types.unsigned_type.\n \t* expmed.c (make_tree): Use unsigned_type_for instead of\n@@ -5290,10 +5297,10 @@\n \tand dr_analyze_alias.\n \t(initialize_data_dependence_relation): Use dr_may_alias_p\n \tand object_address_invariant_in_loop_p.\n-\t(compute_self_dependence): Handle the case when DDR_ARE_DEPENDENT (ddr)\n-\tis chrec_dont_know.\n-\t(find_data_references_in_stmt): Restrict the analysis of data references\n-\tto the given loop nest.\n+\t(compute_self_dependence): Handle the case when\n+\tDDR_ARE_DEPENDENT (ddr) is chrec_dont_know.\n+\t(find_data_references_in_stmt): Restrict the analysis of data\n+\treferences to the given loop nest.\n \t(find_data_references_in_loop): Made static.  Pass loop nest to\n \tfind_data_references_in_stmt.\n \t(compute_data_dependences_for_loop): Use DR_VOPS.\n@@ -5395,8 +5402,8 @@\n \tsuperloops vector instead of \"pred\" array.\n \t(establish_preds): Take father loop as an argument.  Initialize the\n \tsuperloops vector.\n-\t(flow_loop_tree_node_add): Pass father loop to establish_preds.  Do not\n-\tinitialize loop->outer.\n+\t(flow_loop_tree_node_add): Pass father loop to establish_preds.\n+\tDo not initialize loop->outer.\n \t(flow_loop_tree_node_remove): Truncate the superloops vector.\n \t* cfgloop.h (struct loop): Removed field \"outer\", fields \"depth\" and\n \t\"pred\" merged to \"superloops\" vector.\n@@ -5446,8 +5453,8 @@\n 2007-05-10  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/31885\n-\t* tree-chrec.c (chrec_contains_undetermined): Do not consider NULL_TREE\n-\tto be undetermined.\n+\t* tree-chrec.c (chrec_contains_undetermined): Do not consider\n+\tNULL_TREE to be undetermined.\n \t(automatically_generated_chrec_p): Return false for NULL.\n \n 2007-05-08  Bernd Schmidt  <bernd.schmidt@analog.com>\n@@ -5482,8 +5489,8 @@\n 2007-05-09  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c (xtensa_output_literal): Mask out high bits\n-\tfor floating-point values if HOST_BITS_PER_LONG > 32.  Use split_double\n-\tinstead of operand_subword.\n+\tfor floating-point values if HOST_BITS_PER_LONG > 32.  Use\n+\tsplit_double instead of operand_subword.\n \n 2007-05-08  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n@@ -5818,8 +5825,8 @@\n \n 2007-05-03  Jan Hubicka  <jh@suse.cz>\n \n-\t* fold-const.c (fold_unary): Convert (T1)(X op Y) into ((T1)X op (T1)Y),\n-\tfor pointer type in more cases than before.\n+\t* fold-const.c (fold_unary): Convert (T1)(X op Y) into\n+\t((T1)X op (T1)Y), for pointer type in more cases than before.\n \n \t* gimplify.c (gimplify_expr): Fold (void *)&a + 4.\n \n@@ -5879,8 +5886,8 @@\n 2007-05-03  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/31699\n-\t* tree-vect-analyze.c (vect_update_misalignment_for_peel): Remove wrong\n-\tcode.\n+\t* tree-vect-analyze.c (vect_update_misalignment_for_peel): Remove\n+\twrong code.\n \t(vect_enhance_data_refs_alignment): Compute peel amount using\n \tTYPE_VECTOR_SUBPARTS instead of vf.\n \t* tree-vect-transform.c (vect_gen_niters_for_prolog_loop): Likewise.\n@@ -6203,8 +6210,8 @@\n \t(reset_block_changes, record_block_change, finalize_block_changes,\n \tcheck_block_change, free_block_changes): Kill.\n \t* function.h (reset_block_changes, record_block_change,\n-\tfinalize_block_changes, check_block_change, free_block_changes): Remove\n-\tprototypes.\n+\tfinalize_block_changes, check_block_change, free_block_changes):\n+\tRemove prototypes.\n \t(struct function): Remove ib_boundaries_block.\n \t* emit-rtl.c (make_insn_raw, make_jump_insn_raw, make_call_insn_raw):\n \tUse curr_insn_locator to initialize locator.\n@@ -6364,8 +6371,8 @@\n \t* tree-flow.h (disband_implicit_edges): Declaration removed.\n \t* tree-cfg.c (make_cond_expr_edges): Remove gotos from COND_EXPR\n \tbranches.\n-\t(cleanup_dead_labels, tree_redirect_edge_and_branch): Handle COND_EXPRs\n-\twithout gotos.\n+\t(cleanup_dead_labels, tree_redirect_edge_and_branch): Handle\n+\tCOND_EXPRs without gotos.\n \t(disband_implicit_edges, has_label_p): Removed.\n \t(tree_verify_flow_info): Verify that COND_EXPR branches are empty.\n \t(tree_lv_add_condition_to_bb): Do not create gotos in COND_EXPR\n@@ -6478,8 +6485,8 @@\n \n 2007-04-25  Bob Wilson  <bob.wilson@acm.org>\n \n-\t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Throw an exception\n-\tfor divide-by-zero.\n+\t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Throw an\n+\texception for divide-by-zero.\n \t(__umodsi3, __modsi3): Likewise.\n \n 2007-04-25  Dirk Mueller  <dmueller@suse.de>\n@@ -6623,8 +6630,8 @@\n 2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \tPR target/31641\n-\t* config/s390/s390.c (s390_expand_setmem): Don't ICE for constant length\n-\targument of 0 for memset.\n+\t* config/s390/s390.c (s390_expand_setmem): Don't ICE for constant\n+\tlength argument of 0 for memset.\n \t(s390_expand_movmem, s390_expand_setmem, s390_expand_cmpmem): Use\n \tunsigned shift instead of the signed variant.\n \n@@ -6694,8 +6701,8 @@\n \t(reset_block_changes, record_block_change, finalize_block_changes,\n \tcheck_block_change, free_block_changes): Kill.\n \t* function.h (reset_block_changes, record_block_change,\n-\tfinalize_block_changes, check_block_change, free_block_changes): Remove\n-\tprototypes.\n+\tfinalize_block_changes, check_block_change, free_block_changes):\n+\tRemove prototypes.\n \t(struct function): Remove ib_boundaries_block.\n \t* emit-rtl.c (make_insn_raw, make_jump_insn_raw, make_call_insn_raw):\n \tUse curr_insn_locator to initialize locator.\n@@ -6897,8 +6904,8 @@\n \t(reset_block_changes, record_block_change, finalize_block_changes,\n \tcheck_block_change, free_block_changes): Kill.\n \t* function.h (reset_block_changes, record_block_change,\n-\tfinalize_block_changes, check_block_change, free_block_changes): Remove\n-\tprototypes.\n+\tfinalize_block_changes, check_block_change, free_block_changes):\n+\tRemove prototypes.\n \t(struct function): Remove ib_boundaries_block.\n \t* emit-rtl.c (make_insn_raw, make_jump_insn_raw, make_call_insn_raw):\n \tUse curr_insn_locator to initialize locator.\n@@ -7551,8 +7558,8 @@\n 2007-04-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/25874\n-\t* omp-low.c (expand_omp_parallel): If child_cfun->cfg, free dominators,\n-\tpost dominators and cleanup cfg before returning.\n+\t* omp-low.c (expand_omp_parallel): If child_cfun->cfg, free\n+\tdominators, post dominators and cleanup cfg before returning.\n \n 2007-04-14  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n@@ -7731,8 +7738,8 @@\n \t* config/mips/mips.c (mips_global_symbol_p): New function.\n \t(mips_symbol_binds_local_p): Likewise.\n \t(mips_classify_symbol): Rename SYMBOL_GOT_GLOBAL to SYMBOL_GOT_DISP\n-\tand SYMBOL_GOT_LOCAL to SYMBOL_GOT_PAGE_OFST.  Use mips_global_symbol_p\n-\tand mips_symbol_binds_local_p.\n+\tand SYMBOL_GOT_LOCAL to SYMBOL_GOT_PAGE_OFST.  Use\n+\tmips_global_symbol_p and mips_symbol_binds_local_p.\n \t(mips_symbolic_constant_p, mips_symbolic_address_p, mips_symbol_insns)\n \t(override_options): Rename SYMBOL_GOT_GLOBAL to SYMBOL_GOT_DISP,\n \tSYMBOL_GOT_LOCAL to SYMBOL_GOT_PAGE_OFST and SYMBOL_GOTOFF_GLOBAL to\n@@ -7908,7 +7915,8 @@\n 2007-04-11  Sebastian Pop  <sebastian.pop@inria.fr>\n \n \t* tree-data-ref.c (affine_function_zero_p, constant_access_functions,\n-\tinsert_innermost_unit_dist_vector, add_distance_for_zero_overlaps): New.\n+\tinsert_innermost_unit_dist_vector, add_distance_for_zero_overlaps):\n+\tNew.\n \t(build_classic_dist_vector): Call add_distance_for_zero_overlaps.\n \n 2007-04-11  Zdenek Dvorak  <dvorakz@suse.cz>\n@@ -8709,8 +8717,8 @@\n 2007-03-30  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/31383\n-\t* tree-data-ref.c (affine_function_equal_p): Do not require the vectors\n-\tto have the same length.\n+\t* tree-data-ref.c (affine_function_equal_p): Do not require the\n+\tvectors to have the same length.\n \n 2007-03-30  Jan Hubicka  <jh@suse.cz>\n \n@@ -8826,8 +8834,8 @@\n \n 2007-03-29  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* regmove.c (optimize_reg_copy_1): Don't perform DEST->SRC repair action if\n-\tSRC->DEST replacement failed anyway.\n+\t* regmove.c (optimize_reg_copy_1): Don't perform DEST->SRC repair\n+\taction if SRC->DEST replacement failed anyway.\n \n 2007-03-28  Mike Stump  <mrs@apple.com>\n \n@@ -9053,9 +9061,9 @@\n \n \t* gengtype-lex.l: Distinguish unions from structures in the\n \ttoken type.  Don't call find_structure; return the tag as a string.\n-\t* gengtype-yacc.y: Add new token types ENT_TYPEDEF_UNION and ENT_UNION.\n-\tType of these, ENT_TYPEDEF_STRUCT, and ENT_STRUCT is string.\n-\tReorganize typedef_struct production accordingly.\n+\t* gengtype-yacc.y: Add new token types ENT_TYPEDEF_UNION and\n+\tENT_UNION.  Type of these, ENT_TYPEDEF_STRUCT, and ENT_STRUCT is\n+\tstring.  Reorganize typedef_struct production accordingly.\n \tUse create_nested_ptr_option.\n \t* gengtype.c (create_nested_ptr_option): New function.\n \t* gengtype.h: Declare it.\n@@ -9072,8 +9080,8 @@\n \tor scalar_nonchar as appropriate.\n \t(adjust_field_type): Look at scalar_is_char boolean to decide whether\n \tto use string_type.\n-\t(throughout): Use scalar_nonchar instead of calling create_scalar_type,\n-\twhenever possible.\n+\t(throughout): Use scalar_nonchar instead of calling\n+\tcreate_scalar_type, whenever possible.\n \t(main): Initialize scalar_char and scalar_nonchar before calling\n \tgen_rtx_next.\n \t* gengtype-lex.l: Adjust for removal of second argument to\n@@ -9659,9 +9667,9 @@\n \t(fT0): New mode attribute.\n \t(\"*movdi_64dfp\", \"*movdf_64dfp\", \"*neg<mode>2_nocc\", \"*abs<mode>2_nocc\",\n \t\"*negabs<mode>2_nocc\", \"copysign<mode>3\"): Insn definitions added.\n-\t* config/s390/s390.h (SECONDARY_MEMORY_NEEDED): Due to a new instruction\n-\tno secondary memory is needed when moving DFmode values between GPRs\n-\tand FPRs.\n+\t* config/s390/s390.h (SECONDARY_MEMORY_NEEDED): Due to a new\n+\tinstruction no secondary memory is needed when moving DFmode values\n+\tbetween GPRs and FPRs.\n \n 2007-03-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n@@ -9706,8 +9714,8 @@\n 2007-03-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.md: Add fpstore_load and store_fpload instruction types.  Provide\n-\treservation, bypass and anti-bypass descriptions for these instructions.\n-\tUpdate move patterns.\n+\treservation, bypass and anti-bypass descriptions for these\n+\tinstructions.  Update move patterns.\n \t* pa.c (hppa_fpstore_bypass_p): Check for both TYPE_FPSTORE_LOAD and\n \tTYPE_FPSTORE.\n \n@@ -10016,9 +10024,9 @@\n \n 2007-03-13  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-inline.c (cgraph_maybe_hot_edge_p): Look for hot/cold attributes,\n-\twhen profile esitmate is present, calls with very low frequency are\n-\tcold.\n+\t* ipa-inline.c (cgraph_maybe_hot_edge_p): Look for hot/cold\n+\tattributes, when profile esitmate is present, calls with very low\n+\tfrequency are cold.\n \n 2007-03-13  Zdenek Dvorak  <dvorakz@suse.cz>\n \n@@ -10290,10 +10298,11 @@\n \n 2007-03-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.c (attr_length_call): Revise condition for long pc-relative branch.\n-\t(output_call): Use \"LONG_PIC_SDIFF\" instruction sequence for long local\n-\tcalls on the SOM target.  Don't use \"LONG_PIC_PCREL\" call sequence on\n-\tSOM target.\n+\t* pa.c (attr_length_call): Revise condition for long\n+\tpc-relative branch.\n+\t(output_call): Use \"LONG_PIC_SDIFF\" instruction sequence for long\n+\tlocal calls on the SOM target.  Don't use \"LONG_PIC_PCREL\" call\n+\tsequence on SOM target.\n \n 2007-03-09  Geoffrey Keating  <geoffk@apple.com>\n \n@@ -10717,7 +10726,8 @@\n \t-mstack-size is used without providing -mstack-guard.\n \t(s390_emit_prologue): Choose stack_guard value automatically if not\n \tprovided via command line.\n-\t* doc/invoke.texi: Adjust description of -mstack-guard and -mstack-size.\n+\t* doc/invoke.texi: Adjust description of -mstack-guard and\n+\t-mstack-size.\n \n 2007-03-07  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -10766,8 +10776,8 @@\n 2007-03-06  Jan Hubicka  <jh@suse.cz>\n \n \t* errors.h (warning, error, fatal, internal_error): Mark as cold.\n-\t* predict.c (maybe_hot_bb): Cold functions are never hot; hot functions\n-\tare hot.\n+\t* predict.c (maybe_hot_bb): Cold functions are never hot; hot\n+\tfunctions are hot.\n \t(probably_cold_bb_p): Cold functions are cold.\n \t(probably_never_executed_bb_p): Cold functions are cold.\n \t(tree_bb_level_predictions): Predict calls to cold functions as not\n@@ -10797,8 +10807,8 @@\n \t* i386.h (CASE_VECTOR_MODE): Large PIC cases are 64bit.\n \t* cmodel.h: Add LARGE PIC.\n \t* i386.md (UNSPEC_PLTOFF): New.\n-\t(UNSPEC_SET_RIP, UNSPEC_SET_GOT_OFFSET): New; renumber other unspecs as\n-\tneeded.\n+\t(UNSPEC_SET_RIP, UNSPEC_SET_GOT_OFFSET): New; renumber other\n+\tunspecs as needed.\n \t(*call_1_rex64): Disable for large models.\n \t(*call_1_rex64_large): New.\n \t(*call_value_1_rex64): Disable for large models.\n@@ -10819,8 +10829,8 @@\n \t(ix86_output_addr_diff_elt): Output 64bit tables when needed.\n \t(ix86_expand_move): Legitimize pic address when in PIC mode.\n \t(construct_plt_address): New function.\n-\t(ix86_expand_call): Offload the address to register and use GOT pointer\n-\tfor large model.\n+\t(ix86_expand_call): Offload the address to register and use GOT\n+\tpointer for large model.\n \t* invoke.texi (mcmodel=large): Update documentation.\n \n 2007-03-06  Richard Henderson  <rth@redhat.com>\n@@ -11410,10 +11420,10 @@\n \n 2007-03-01  Zdenek Dvorak  <dvorakz@suse.cz>\n \n-\t* tree-ssa-loop-prefetch.c (determine_unroll_factor):  Bound the unroll\n-\tfactor by the estimated number of iterations.\n-\t(loop_prefetch_arrays): Do not prefetch in loops that iterate less than\n-\tprefetch latency.\n+\t* tree-ssa-loop-prefetch.c (determine_unroll_factor):  Bound the\n+\tunroll factor by the estimated number of iterations.\n+\t(loop_prefetch_arrays): Do not prefetch in loops that iterate less\n+\tthan prefetch latency.\n \n \t* config/i386/driver-i386.c (describe_cache, detect_caches_amd,\n \tdecode_caches_intel, detect_caches_intel): New functions.\n@@ -11795,7 +11805,8 @@\n 2007-02-24  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/30509\n-\t* tree-inline.c (copy_bb): Produce exact copy of EH info when copying for inlining.\n+\t* tree-inline.c (copy_bb): Produce exact copy of EH info when\n+\tcopying for inlining.\n \n 2007-02-24  Uros Bizjak  <ubizjak@gmail.com>\n \t    Jan Hubicka  <jh@suse.cz>\n@@ -12977,8 +12988,8 @@\n \n \t* function.c (gimplify_parameters): Use build_call_expr.\n \n-\t* tree-vectorizer.c (vect_is_simple_reduction): Use TREE_OPERAND_LENGTH\n-\tinstead of TREE_CODE_LENGTH.\n+\t* tree-vectorizer.c (vect_is_simple_reduction): Use\n+\tTREE_OPERAND_LENGTH instead of TREE_CODE_LENGTH.\n \n \t* ipa-type-escape.c (check_call): Use new CALL_EXPR iterators.\n \t(scan_for_refs): Add case tcc_vl_exp for CALL_EXPR.\n@@ -13163,8 +13174,9 @@\n \t* config/mips/mips.c (mips_expand_builtin):  Use new CALL_EXPR\n \taccessors.\n \n-\t* config/bfin/bfin.c (bfin_expand_binop_builtin): Pass entire CALL_EXPR\n-\tinstead of arglist.  Use new CALL_EXPR accessors.  Fix callers.\n+\t* config/bfin/bfin.c (bfin_expand_binop_builtin): Pass entire\n+\tCALL_EXPR instead of arglist.  Use new CALL_EXPR accessors.\n+\tFix callers.\n \t(bfin_expand_unop_builtin): Likewise.\n \t(bfin_expand_builtin): Use new CALL_EXPR accessors.\n \n@@ -13986,8 +13998,8 @@\n \tthe new forwarder block.\n \t(make_forwarder_block): Only call new_bb_cbk if it is not NULL.\n \tHandle the case latch is NULL.\n-\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Avoid cfg modifications\n-\twhen marking loop exits.\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Avoid cfg\n+\tmodifications when marking loop exits.\n \t* ifcvt.c (if_convert): Ditto.  Mark loop exits even if cfg cannot\n \tbe modified.\n \t* loop-init.c (loop_optimizer_init): Do not modify cfg.  Call\n@@ -14655,8 +14667,8 @@\n 2007-02-02  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n \n \tPR target/29682\n-\t* config/ia64/ia64.c (ia64_speculate_insn): Restrict to memory loads to\n-\tgeneral or fp registers.  Add comments.\n+\t* config/ia64/ia64.c (ia64_speculate_insn): Restrict to memory\n+\tloads to general or fp registers.  Add comments.\n \t* config/ia64/ia64.md (reg_pred_prefix): Add comment.\n \n 2007-02-02  Paolo Bonzini  <bonzini@gnu.org>\n@@ -14724,8 +14736,8 @@\n \n \t(DEP_STATUS): Rename to DEP_LINK_STATUS.  Fix typo in the comment.\n \n-\t(add_forw_dep, delete_back_forw_dep, insn_cost): Update declaration and\n-\tall callers.\n+\t(add_forw_dep, delete_back_forw_dep, insn_cost): Update declaration\n+\tand all callers.\n \t(dep_cost): Declare.\n \n \t* sched-deps.c (CHECK): New macro to (en/dis)able sanity checks.\n@@ -14827,8 +14839,8 @@\n \t* target.h (struct _dep): Declare to use in\n \tgcc_target.sched.is_costly_dependence.\n \t(struct gcc_target.sched.adjust_cost): Fix typo.\n-\t(struct gcc_target.sched.is_costly_dependence): Change signature to use\n-\tsingle dep_t parameter instead of an equivalent triad.\n+\t(struct gcc_target.sched.is_costly_dependence): Change signature to\n+\tuse single dep_t parameter instead of an equivalent triad.\n \t(struct gcc_target.sched.adjust_cost_2): Remove.\n \n \t* target-def.h (TARGET_SCHED_ADJUST_COST_2): Remove.\n@@ -14850,8 +14862,8 @@\n \tnew scheduler dependencies lists.\n \t(ia64_gen_check): Ditto.\n \n-\t* config/mips/mips.c (vr4130_swap_insns_p): Update to use new scheduler\n-\tdependencies lists.\n+\t* config/mips/mips.c (vr4130_swap_insns_p): Update to use new\n+\tscheduler dependencies lists.\n \n \t* config/rs6000/rs6000.c (rs6000_is_costly_dependence): Change\n \tsignature to correspond to the targetm.sched.is_costly_dependence hook.\n@@ -15196,8 +15208,8 @@\n \n 2007-01-28  Jan Hubicka  <jh@suse.cz>\n \n-\t* expr.c (emit_block_move_via_movmem, emit_block_move_via_libcall): Add\n-\tvariant handling histograms; add wrapper.\n+\t* expr.c (emit_block_move_via_movmem, emit_block_move_via_libcall):\n+\tAdd variant handling histograms; add wrapper.\n \t(clear_storage_via_libcall): Export.\n \t(emit_block_move_hints): Break out from ...; add histograms.\n \t(emit_block_move): ... this one.\n@@ -15209,8 +15221,8 @@\n \t(set_storage_via_setmem): Update prototype.\n \t* doc/md.texi (movmem, setmem): Document new arguments.\n \n-\t* value-prof.c (dump_histogram_value, tree_find_values_to_profile): Add\n-\tnew histograms.\n+\t* value-prof.c (dump_histogram_value, tree_find_values_to_profile):\n+\tAdd new histograms.\n \t(stringop_block_profile): New global function.\n \t(tree_stringops_values_to_profile): Profile block size and alignment.\n \t* value-prof.h (enum hist_type): add HIST_TYPE_AVERAGE and\n@@ -15529,8 +15541,8 @@\n \n \t* ipa-inline.c (initial_insns, max_insns): Delete.\n \t(compute_max_insns): New function.\n-\t(cgraph_decide_inlining_of_small_function): Use it; take minimal amount\n-\tof insns as base for code growth.\n+\t(cgraph_decide_inlining_of_small_function): Use it; take minimal\n+\tamount of insns as base for code growth.\n \t(cgraph_decide_inlining): Make initial_insns local; do not compute\n \tmax_insns.\n \t* params.def (PARAM_INLINE_UNIT_GROWTH): Set to 60.\n@@ -15580,8 +15592,9 @@\n \n \t* unwind-dw2-fde.c (get_cie_encoding): Replaced _Unwind_Word with\n \t_uleb128_t and _Unwind_SWord with _sleb128_t.\n-\t* unwind-dw2.c (extract_cie_info, execute_stack_op, execute_cfa_program,\n-\tuw_frame_state_for, uw_update_context_1): Likewise.\n+\t* unwind-dw2.c (extract_cie_info, execute_stack_op,\n+\texecute_cfa_program, uw_frame_state_for, uw_update_context_1):\n+\tLikewise.\n \t* unwind-c.c (parse_lsda_header, PERSONALITY_FUNCTION): Likewise.\n \t* unwind-pe.h (read_uleb128, read_sleb128,\n \tread_encoded_value_with_base): Likewise.\n@@ -15594,7 +15607,8 @@\n \n 2007-01-24  Jan Hubicka  <jh@suse.cz>\n \n-\t* tree-ssa-dce.c (eliminate_unnecesary_stmts): Remove dead LHS of calls.\n+\t* tree-ssa-dce.c (eliminate_unnecesary_stmts): Remove dead LHS\n+\tof calls.\n \n 2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n@@ -16631,14 +16645,16 @@\n 2007-01-16  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssanames.c (release_dead_ssa_names): Instead of ggc_freeing\n-\tthe names, just unlink the chain so we don't crash on dangling pointers\n+\tthe names, just unlink the chain so we don't crash on dangling\n+\tpointers\n \tto dead SSA names.\n \n 2007-01-16  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.h (cgraph_decide_inlining_incrementally): Kill.\n \t* tree-pass.h: Reorder to make IPA passes appear toegher.\n-\t(pass_early_inline, pass_inline_parameters, pass_apply_inline): Declare.\n+\t(pass_early_inline, pass_inline_parameters, pass_apply_inline):\n+\tDeclare.\n \t* cgraphunit.c (cgraph_finalize_function): Do not compute inling\n \tparameters, do not call early inliner.\n \t* ipa-inline.c: Update comments.  Include tree-flow.h\n@@ -16914,7 +16930,8 @@\n \t(set_single_exit): Removed.\n \t* cfgloop.h (struct loop_exit): New function.\n \t(struct loop): single_exit_ field replaced by exits field.\n-\t(LOOPS_HAVE_MARKED_SINGLE_EXITS): Replaced by LOOPS_HAVE_RECORDED_EXITS.\n+\t(LOOPS_HAVE_MARKED_SINGLE_EXITS): Replaced by\n+\tLOOPS_HAVE_RECORDED_EXITS.\n \t(struct loops): Added exits hash.\n \t(mark_single_exit_loops, set_single_exit): Declaration removed.\n \t(release_recorded_exits, record_loop_exits, rescan_loop_exit): Declare.\n@@ -17657,8 +17674,8 @@\n \tAdjust register allocate order and update some macro define.\n \t* config/score/score-mdaux.c (mdx_unaligned_load, mdx_unsigned_store,\n \tmdx_block_move_straight, mdx_block_move_loop_head,\n-\tmdx_block_move_loop_body, mdx_block_move_loop_foot, mdx_block_move_loop,\n-\tmdx_block_move): Added.\n+\tmdx_block_move_loop_body, mdx_block_move_loop_foot,\n+\tmdx_block_move_loop, mdx_block_move): Added.\n \t(mdx_movsicc, mdp_select_add_imm, mdp_select, mds_zero_extract_andi,\n \tmdp_limm): Updated and fix some bug and typo.\n \t* config/score/score.md (movqi/hi/si, add/sub/zero/ext): Updated."}]}