{"sha": "312687cfa88b0e5ee2600e0349bf285b826521b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyNjg3Y2ZhODhiMGU1ZWUyNjAwZTAzNDliZjI4NWI4MjY1MjFiOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@multimania.com", "date": "2002-03-21T09:39:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-21T09:39:18Z"}, "message": "re PR c/5354 (function call with two statement expressions yields incorrect result)\n\n        PR c/5354\n        * c-common.c (c_expand_expr): Preserve result of a statement\n        expression if needed.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r51121", "tree": {"sha": "db9e6c3c3b0671407dbf927358b92c97787e9d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db9e6c3c3b0671407dbf927358b92c97787e9d8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312687cfa88b0e5ee2600e0349bf285b826521b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312687cfa88b0e5ee2600e0349bf285b826521b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312687cfa88b0e5ee2600e0349bf285b826521b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312687cfa88b0e5ee2600e0349bf285b826521b9/comments", "author": null, "committer": null, "parents": [{"sha": "48f90839b0860bf9f286f0f13972c4401caf9395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f90839b0860bf9f286f0f13972c4401caf9395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f90839b0860bf9f286f0f13972c4401caf9395"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "56349e57fadb52899d5d7b15f47a6524b1767633", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=312687cfa88b0e5ee2600e0349bf285b826521b9", "patch": "@@ -1,3 +1,10 @@\n+2002-03-21  Eric Botcazou <ebotcazou@multimania.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/5354\n+\t* c-common.c (c_expand_expr): Preserve result of a statement\n+\texpression if needed.\n+\n 2002-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/4195"}, {"sha": "28920599deae902a7b2de49c4b8c5de73497fc02", "filename": "gcc/c-common.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=312687cfa88b0e5ee2600e0349bf285b826521b9", "patch": "@@ -3574,6 +3574,7 @@ c_expand_expr (exp, target, tmode, modifier)\n       {\n \ttree rtl_expr;\n \trtx result;\n+\tbool preserve_result = false;\n \n \t/* Since expand_expr_stmt calls free_temp_slots after every\n \t   expression statement, we must call push_temp_slots here.\n@@ -3600,12 +3601,24 @@ c_expand_expr (exp, target, tmode, modifier)\n \n \t    if (TREE_CODE (last) == SCOPE_STMT\n \t\t&& TREE_CODE (expr) == EXPR_STMT)\n-\t      TREE_ADDRESSABLE (expr) = 1;\n+\t      {\n+\t        TREE_ADDRESSABLE (expr) = 1;\n+\t\tpreserve_result = true;\n+\t      }\n \t  }\n \n \texpand_stmt (STMT_EXPR_STMT (exp));\n \texpand_end_stmt_expr (rtl_expr);\n+\n \tresult = expand_expr (rtl_expr, target, tmode, modifier);\n+\tif (preserve_result && GET_CODE (result) == MEM)\n+\t  {\n+\t    if (GET_MODE (result) != BLKmode)\n+\t      result = copy_to_reg (result);\n+\t    else\n+\t      preserve_temp_slots (result);\n+\t  }\n+\n \tpop_temp_slots ();\n \treturn result;\n       }"}, {"sha": "05f72c65482c71183c196d229c962a5d04b5f9ea", "filename": "gcc/testsuite/gcc.c-torture/execute/20020320-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020320-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312687cfa88b0e5ee2600e0349bf285b826521b9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020320-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020320-1.c?ref=312687cfa88b0e5ee2600e0349bf285b826521b9", "patch": "@@ -0,0 +1,23 @@\n+/* PR c/5354 */\n+/* Verify that GCC preserves relevant stack slots.  */\n+\n+extern void abort(void);\n+extern void exit(int);\n+\n+struct large { int x, y[9]; };\n+\n+int main()\n+{\n+  int fixed;\n+\n+  fixed = ({ int temp1 = 2; temp1; }) - ({ int temp2 = 1; temp2; });\n+  if (fixed != 1)\n+    abort();\n+\n+  fixed = ({ struct large temp3; temp3.x = 2; temp3; }).x\n+\t  - ({ struct large temp4; temp4.x = 1; temp4; }).x;\n+  if (fixed != 1)\n+    abort();\n+\n+  exit(0);\n+}"}]}