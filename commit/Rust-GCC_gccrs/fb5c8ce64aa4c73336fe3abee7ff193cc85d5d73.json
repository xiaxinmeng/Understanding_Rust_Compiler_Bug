{"sha": "fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1YzhjZTY0YWE0YzczMzM2ZmUzYWJlZTdmZjE5M2NjODVkNWQ3Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-19T11:29:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-19T11:29:40Z"}, "message": "(simplify_plus_minus): Count CONSTs coming in and going out...\n\n(simplify_plus_minus): Count CONSTs coming in and going out; we have\nsimplified things if we have more CONSTs going out even if we have the\nsame number of total terms.\n\nFrom-SVN: r3787", "tree": {"sha": "71d7b7ef687905daf61adeb99118106059d83ae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71d7b7ef687905daf61adeb99118106059d83ae3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73/comments", "author": null, "committer": null, "parents": [{"sha": "b385aeda3f7428271d3b2ef8e6ff3801cffd3f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b385aeda3f7428271d3b2ef8e6ff3801cffd3f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b385aeda3f7428271d3b2ef8e6ff3801cffd3f95"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "1f44d880884b8534538c965e36bb4241daba9e16", "filename": "gcc/cse.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=fb5c8ce64aa4c73336fe3abee7ff193cc85d5d73", "patch": "@@ -3929,9 +3929,9 @@ simplify_plus_minus (code, mode, op0, op1)\n   rtx ops[8];\n   int negs[8];\n   rtx result, tem;\n-  int n_ops = 2, input_ops = 2;\n-  int i, j, k;\n+  int n_ops = 2, input_ops = 2, input_consts = 0, n_consts = 0;\n   int first = 1, negate = 0, changed;\n+  int i, j;\n \n   bzero (ops, sizeof ops);\n   \n@@ -3969,6 +3969,7 @@ simplify_plus_minus (code, mode, op0, op1)\n \n \t  case CONST:\n \t    ops[i] = XEXP (ops[i], 0);\n+\t    input_consts++;\n \t    changed = 1;\n \t    break;\n \n@@ -4035,17 +4036,20 @@ simplify_plus_minus (code, mode, op0, op1)\n \n   /* Pack all the operands to the lower-numbered entries and give up if\n      we didn't reduce the number of operands we had.  Make sure we\n-     count a CONST as two operands.  */\n+     count a CONST as two operands.  If we have the same number of\n+     operands, but have made more CONSTs than we had, this is also\n+     an improvement, so accept it.  */\n \n-  for (i = 0, j = 0, k = 0; j < n_ops; j++)\n+  for (i = 0, j = 0; j < n_ops; j++)\n     if (ops[j] != 0)\n       {\n \tops[i] = ops[j], negs[i++] = negs[j];\n \tif (GET_CODE (ops[j]) == CONST)\n-\t  k++;\n+\t  n_consts++;\n       }\n \n-  if (i + k >= input_ops)\n+  if (i + n_consts > input_ops\n+      || (i + n_consts == input_ops && n_consts <= input_consts))\n     return 0;\n \n   n_ops = i;"}]}