{"sha": "5a347f2b406d98c43fc1215af013911d65896c18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzNDdmMmI0MDZkOThjNDNmYzEyMTVhZjAxMzkxMWQ2NTg5NmMxOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-29T21:47:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-29T21:47:05Z"}, "message": "re PR tree-optimization/33870 (miscompiles sqlite)\n\n2007-10-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/33870\n\t* tree-ssa-operands.c (add_vars_for_offset): Remove mpt_vars parameter.\n\t(add_virtual_operand): Do not recurse into MPTs looking for pointed-to\n\tSFTs.\n\n\t* gcc.c-torture/execute/pr33870.x: XFAIL testcase for -O2 and -Os.\n\nFrom-SVN: r129738", "tree": {"sha": "f1a5bb0df11af9480df1a8984850457bb5bb6ea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1a5bb0df11af9480df1a8984850457bb5bb6ea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a347f2b406d98c43fc1215af013911d65896c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a347f2b406d98c43fc1215af013911d65896c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a347f2b406d98c43fc1215af013911d65896c18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a347f2b406d98c43fc1215af013911d65896c18/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c67102d1152de39a9be806af5e4db099c5aa429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c67102d1152de39a9be806af5e4db099c5aa429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c67102d1152de39a9be806af5e4db099c5aa429"}], "stats": {"total": 61, "additions": 27, "deletions": 34}, "files": [{"sha": "9899775fb38348d0dc6b5025ff5ece2f36f72b12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a347f2b406d98c43fc1215af013911d65896c18", "patch": "@@ -1,3 +1,10 @@\n+2007-10-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33870\n+\t* tree-ssa-operands.c (add_vars_for_offset): Remove mpt_vars parameter.\n+\t(add_virtual_operand): Do not recurse into MPTs looking for pointed-to\n+\tSFTs.\n+\n 2007-10-29  Richard Guenther  <rguenther@suse.de>\n \n \t* passes.c (init_optimization_passes): Exchange store_copy_prop"}, {"sha": "bde12e5fd6564812c978efa0a7cfd4e7d0287c21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a347f2b406d98c43fc1215af013911d65896c18", "patch": "@@ -1,3 +1,8 @@\n+2007-10-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33870\n+\t* gcc.c-torture/execute/pr33870.x: XFAIL testcase for -O2 and -Os.\n+\n 2007-10-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/33757"}, {"sha": "fbf8aae4ab6e400fb490302b698fd6d0728f1ff8", "filename": "gcc/testsuite/gcc.c-torture/execute/pr33870.x", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr33870.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr33870.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr33870.x?ref=5a347f2b406d98c43fc1215af013911d65896c18", "patch": "@@ -0,0 +1,9 @@\n+# The test breaks because of wrong alias info for -O2 and -Os\n+\n+set torture_eval_before_compile {\n+  if {[string match {*-O[2s]*} \"$option\"]} {\n+     set torture_execute_xfail \"*-*-*\"\n+  }\n+}\n+\n+return 0"}, {"sha": "8772313f3acc8a59948992cefadfbea419f1d863", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 6, "deletions": 34, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a347f2b406d98c43fc1215af013911d65896c18/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=5a347f2b406d98c43fc1215af013911d65896c18", "patch": "@@ -1391,7 +1391,7 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n static bool\n add_vars_for_offset (tree var,\n \t\t     unsigned HOST_WIDE_INT offset, unsigned HOST_WIDE_INT size,\n-\t\t     bool is_def, bitmap mpt_vars)\n+\t\t     bool is_def)\n {\n   bool added = false;\n   tree subvar;\n@@ -1412,16 +1412,10 @@ add_vars_for_offset (tree var,\n       if (size <= SFT_OFFSET (subvar) - offset)\n \tbreak;\n \n-      /* Avoid adding a SFT that is contained in the same MPT as the\n-\t pointed-to location as this MPT will be added as alias anyway.  */\n-      if (!mpt_vars\n-\t  || !bitmap_bit_p (mpt_vars, DECL_UID (subvar)))\n-\t{\n-\t  if (is_def)\n-\t    append_vdef (subvar);\n-\t  else\n-\t    append_vuse (subvar);\n-\t}\n+      if (is_def)\n+\tappend_vdef (subvar);\n+      else\n+\tappend_vuse (subvar);\n       added = true;\n     }\n \n@@ -1502,34 +1496,12 @@ add_virtual_operand (tree var, stmt_ann_t s_ann, int flags,\n \t{\n \t  tree al = referenced_var (i);\n \n-\t  /* We have to consider SFTs inside MPTs as possible pointed-to\n-\t     location as well because even if aliases does not contain\n-\t     a single SFT, the SFTs inside the MPT may be incomplete in\n-\t     that not all aliased subvars have to be in this MPT, too.\n-\t     But only if we start with NMT aliases.  */\n-\t  if (TREE_CODE (al) == MEMORY_PARTITION_TAG\n-\t      && TREE_CODE (var) == NAME_MEMORY_TAG)\n-\t    {\n-\t      bitmap_iterator bi;\n-\t      unsigned int i;\n-\n-\t      EXECUTE_IF_SET_IN_BITMAP (MPT_SYMBOLS (al), 0, i, bi)\n-\t\t{\n-\t\t  tree ptsft = referenced_var (i);\n-\n-\t\t  if (TREE_CODE (ptsft) == STRUCT_FIELD_TAG)\n-\t\t    none_added &= !add_vars_for_offset (ptsft, offset, size,\n-\t\t\t\t\t\t\tflags & opf_def,\n-\t\t\t\t\t\t\tMPT_SYMBOLS (al));\n-\t\t}\n-\t    }\n-\n \t  /* For SFTs we have to consider all subvariables of the parent var\n \t     if it is a potential points-to location.  */\n \t  if (TREE_CODE (al) == STRUCT_FIELD_TAG\n \t      && TREE_CODE (var) == NAME_MEMORY_TAG)\n \t    none_added &= !add_vars_for_offset (al, offset, size,\n-\t\t\t\t\t        flags & opf_def, NULL);\n+\t\t\t\t\t        flags & opf_def);\n \t  else\n \t    {\n \t      /* Call-clobbered tags may have non-call-clobbered"}]}