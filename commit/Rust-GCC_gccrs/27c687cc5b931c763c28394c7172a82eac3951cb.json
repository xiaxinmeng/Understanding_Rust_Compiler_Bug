{"sha": "27c687cc5b931c763c28394c7172a82eac3951cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjNjg3Y2M1YjkzMWM3NjNjMjgzOTRjNzE3MmE4MmVhYzM5NTFjYg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2003-01-02T09:34:34Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2003-01-02T09:34:34Z"}, "message": "URLClassLoader.java (Resource.getCodeSource): Fix check certs == null.\n\n        * java/net/URLClassLoader.java (Resource.getCodeSource):\n        Fix check certs == null.\n        (getCanonicalFileURL): Removed method.\n        (JarURLLoader): Don't call removed method.\n        (FileURLLoader): Likewise.\n        (FileURLLoader.getResource): Don't canonicalize file name.\n\nCo-Authored-By: Jeroen Frijters <jeroen@sumatra.nl>\n\nFrom-SVN: r60780", "tree": {"sha": "1601d8243401a7c75d1d466146606e2a421c8a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1601d8243401a7c75d1d466146606e2a421c8a4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c687cc5b931c763c28394c7172a82eac3951cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c687cc5b931c763c28394c7172a82eac3951cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c687cc5b931c763c28394c7172a82eac3951cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c687cc5b931c763c28394c7172a82eac3951cb/comments", "author": null, "committer": null, "parents": [{"sha": "3006ff7f4666cdd8de25cf4c1b1e2f95c7b7486b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3006ff7f4666cdd8de25cf4c1b1e2f95c7b7486b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3006ff7f4666cdd8de25cf4c1b1e2f95c7b7486b"}], "stats": {"total": 43, "additions": 15, "deletions": 28}, "files": [{"sha": "ebc9a32fd7c76aab2224ac3e69ad6c49024ec5d7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c687cc5b931c763c28394c7172a82eac3951cb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c687cc5b931c763c28394c7172a82eac3951cb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=27c687cc5b931c763c28394c7172a82eac3951cb", "patch": "@@ -1,3 +1,13 @@\n+2003-01-02  Mark Wielaard  <mark@klomp.org>\n+\t    Jeroen Frijters  <jeroen@sumatra.nl>\n+\n+\t* java/net/URLClassLoader.java (Resource.getCodeSource):\n+\tFix check certs == null.\n+\t(getCanonicalFileURL): Removed method.\n+\t(JarURLLoader): Don't call removed method.\n+\t(FileURLLoader): Likewise.\n+\t(FileURLLoader.getResource): Don't canonicalize file name.\n+\n 2003-01-01  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "d7fc77f8ab433152b2ed05d8f8a8d4ec3c79f776", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c687cc5b931c763c28394c7172a82eac3951cb/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c687cc5b931c763c28394c7172a82eac3951cb/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=27c687cc5b931c763c28394c7172a82eac3951cb", "patch": "@@ -238,7 +238,7 @@ Manifest getManifest()\n     CodeSource getCodeSource()\n     {\n       Certificate[] certs = getCertificates();\n-      if (certs != null)\n+      if (certs == null)\n \treturn loader.noCertCodeSource;\n       else\n \treturn new CodeSource(loader.baseURL, certs);\n@@ -271,34 +271,18 @@ Certificate[] getCertificates()\n     abstract InputStream getInputStream() throws IOException;\n   }\n \n-  static URL getCanonicalFileURL(URL url)\n-  {\n-    if (\"file\".equals(url.getProtocol()))\n-      {\n-\ttry\n-\t  {\n-\t    File f = new File(url.getFile()).getCanonicalFile();\n-\t    url = new URL(\"file\", \"\", f.toString());\n-\t  }\n-\tcatch (IOException ignore)\n-\t  {\n-\t  }\n-      }\n-    return url;\n-  }\n-\n   /**\n    * A <code>JarURLLoader</code> is a type of <code>URLLoader</code>\n    * only loading from jar url.\n    */\n   final static class JarURLLoader extends URLLoader\n   {\n-    final JarFile jarfile; // The canonical jar file for this url\n+    final JarFile jarfile; // The jar file for this url\n     final URL baseJarURL;  // Base jar: url for all resources loaded from jar\n \n     public JarURLLoader(URLClassLoader classloader, URL baseURL)\n     {\n-      super(classloader, getCanonicalFileURL(baseURL));\n+      super(classloader, baseURL);\n \n       // cache url prefix for all resources in this jar url\n       String external = baseURL.toExternalForm();\n@@ -481,25 +465,18 @@ public URL getURL()\n    */\n   final static class FileURLLoader extends URLLoader\n   {\n-    File dir;   //the canonical file for this file url\n+    File dir;   //the file for this file url\n \n     FileURLLoader(URLClassLoader classloader, URL url)\n     {\n-      super(classloader, getCanonicalFileURL(url));\n+      super(classloader, url);\n       dir = new File(baseURL.getFile());\n     }\n \n     /** get resource with the name \"name\" in the file url */\n     Resource getResource(String name)\n     {\n       File file = new File(dir, name);\n-      try\n-\t{\n-\t  file = file.getCanonicalFile();\n-\t}\n-      catch (IOException ignore)\n-\t{\n-\t}\n       if (file.exists() && !file.isDirectory())\n \treturn new FileResource(this, name, file);\n       return null;"}]}