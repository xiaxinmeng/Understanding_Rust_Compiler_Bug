{"sha": "4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjZmM0NTM3M2IyZjZiZjEzZmY5NzhmOGI2Zjk0MTFhZDEzYjc2NA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-08-31T00:07:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-08-31T00:07:38Z"}, "message": "selftest: split out named_temp_file from temp_source_file\n\nSplit out a new base class for temp_source_file, named_temp_file,\nmoving the deletion to the base class dtor, so that we can write\nout temporary files in other ways in selftests.\n\ngcc/ChangeLog:\n\t* selftest.c (selftest::named_temp_file::named_temp_file): New\n\tctor.\n\t(selftest::temp_source_file::~temp_source_file): Move to...\n\t(selftest::named_temp_file::~named_temp_file): ...here.\n\t(selftest::test_named_temp_file): New function.\n\t(selftest::selftest_c_tests): Call test_named_temp_file.\n\t* selftest.h (class named_temp_file): New class.\n\t(class temp_source_file): Convert to a subclass of named_temp_file.\n\nFrom-SVN: r239875", "tree": {"sha": "1a93335308b8e648e3693e8973cfdf8678cb1bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a93335308b8e648e3693e8973cfdf8678cb1bfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71b308914e31765f2110e6692685e0842c317bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b308914e31765f2110e6692685e0842c317bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b308914e31765f2110e6692685e0842c317bed"}], "stats": {"total": 84, "additions": 63, "deletions": 21}, "files": [{"sha": "fa764e86425aca217f8045b992695c85e987834b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "patch": "@@ -1,3 +1,14 @@\n+2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* selftest.c (selftest::named_temp_file::named_temp_file): New\n+\tctor.\n+\t(selftest::temp_source_file::~temp_source_file): Move to...\n+\t(selftest::named_temp_file::~named_temp_file): ...here.\n+\t(selftest::test_named_temp_file): New function.\n+\t(selftest::selftest_c_tests): Call test_named_temp_file.\n+\t* selftest.h (class named_temp_file): New class.\n+\t(class temp_source_file): Convert to a subclass of named_temp_file.\n+\n 2016-08-30  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_epilogue): Do not emit"}, {"sha": "e6c9510552281f29bcbb540f38d9056f43030d35", "filename": "gcc/selftest.c", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2Fselftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2Fselftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.c?ref=4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "patch": "@@ -120,34 +120,40 @@ selftest::assert_str_contains (const location &loc,\n \t desc_haystack, desc_needle, val_haystack, val_needle);\n }\n \n-/* Constructor.  Create a tempfile using SUFFIX, and write CONTENT to\n-   it.  Abort if anything goes wrong, using LOC as the effective\n-   location in the problem report.  */\n+/* Constructor.  Generate a name for the file.  */\n \n-selftest::temp_source_file::temp_source_file (const location &loc,\n-\t\t\t\t\t      const char *suffix,\n-\t\t\t\t\t      const char *content)\n+selftest::named_temp_file::named_temp_file (const char *suffix)\n {\n   m_filename = make_temp_file (suffix);\n   ASSERT_NE (m_filename, NULL);\n-\n-  FILE *out = fopen (m_filename, \"w\");\n-  if (!out)\n-    ::selftest::fail_formatted (loc, \"unable to open tempfile: %s\",\n-\t\t\t\tm_filename);\n-  fprintf (out, \"%s\", content);\n-  fclose (out);\n }\n \n /* Destructor.  Delete the tempfile.  */\n \n-selftest::temp_source_file::~temp_source_file ()\n+selftest::named_temp_file::~named_temp_file ()\n {\n   unlink (m_filename);\n   diagnostics_file_cache_forcibly_evict_file (m_filename);\n   free (m_filename);\n }\n \n+/* Constructor.  Create a tempfile using SUFFIX, and write CONTENT to\n+   it.  Abort if anything goes wrong, using LOC as the effective\n+   location in the problem report.  */\n+\n+selftest::temp_source_file::temp_source_file (const location &loc,\n+\t\t\t\t\t      const char *suffix,\n+\t\t\t\t\t      const char *content)\n+: named_temp_file (suffix)\n+{\n+  FILE *out = fopen (get_filename (), \"w\");\n+  if (!out)\n+    ::selftest::fail_formatted (loc, \"unable to open tempfile: %s\",\n+\t\t\t\tget_filename ());\n+  fprintf (out, \"%s\", content);\n+  fclose (out);\n+}\n+\n /* Selftests for the selftest system itself.  */\n \n namespace selftest {\n@@ -167,12 +173,27 @@ test_assertions ()\n   ASSERT_STR_CONTAINS (\"foo bar baz\", \"bar\");\n }\n \n+/* Verify named_temp_file.  */\n+\n+static void\n+test_named_temp_file ()\n+{\n+  named_temp_file t (\".txt\");\n+  FILE *f = fopen (t.get_filename (), \"w\");\n+  if (!f)\n+    selftest::fail_formatted (SELFTEST_LOCATION,\n+\t\t\t      \"unable to open %s for writing\",\n+\t\t\t      t.get_filename ());\n+  fclose (f);\n+}\n+\n /* Run all of the selftests within this file.  */\n \n void\n selftest_c_tests ()\n {\n   test_assertions ();\n+  test_named_temp_file ();\n }\n \n } // namespace selftest"}, {"sha": "47d735033707063221f3cf4ddd8b6f55c375ef04", "filename": "gcc/selftest.h", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc45373b2f6bf13ff978f8b6f9411ad13b764/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=4ecfc45373b2f6bf13ff978f8b6f9411ad13b764", "patch": "@@ -78,22 +78,32 @@ extern void assert_str_contains (const location &loc,\n \t\t\t\t const char *val_haystack,\n \t\t\t\t const char *val_needle);\n \n-/* A class for writing out a temporary sourcefile for use in selftests\n-   of input handling.  */\n+/* A named temporary file for use in selftests.\n+   Usable for writing out files, and as the base class for\n+   temp_source_file.\n+   The file is unlinked in the destructor.  */\n \n-class temp_source_file\n+class named_temp_file\n {\n  public:\n-  temp_source_file (const location &loc, const char *suffix,\n-\t\t    const char *content);\n-  ~temp_source_file ();\n-\n+  named_temp_file (const char *suffix);\n+  ~named_temp_file ();\n   const char *get_filename () const { return m_filename; }\n \n  private:\n   char *m_filename;\n };\n \n+/* A class for writing out a temporary sourcefile for use in selftests\n+   of input handling.  */\n+\n+class temp_source_file : public named_temp_file\n+{\n+ public:\n+  temp_source_file (const location &loc, const char *suffix,\n+\t\t    const char *content);\n+};\n+\n /* Various selftests involving location-handling require constructing a\n    line table and one or more line maps within it.\n "}]}