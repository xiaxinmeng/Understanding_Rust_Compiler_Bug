{"sha": "0d5e496f46c6bd22709167532f6ca45b6ae98477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1ZTQ5NmY0NmM2YmQyMjcwOTE2NzUzMmY2Y2E0NWI2YWU5ODQ3Nw==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-08-01T19:08:34Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-08-01T19:08:34Z"}, "message": "mmix.h (PREFERRED_RELOAD_CLASS, [...]): Remove macro.\n\n\t* config/mmix/mmix.h (PREFERRED_RELOAD_CLASS,\n\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove macro.\n\t* config/mmix/mmix-protos.h (mmix_preferred_reload_class,\n\tmmix_preferred_output_reload_class): Remove.\n\t* config/mmix/mmix.c (mmix_preferred_reload_class,\n\tmmix_preferred_output_reload_class): Make static. Change rclass\n\targument and return type to reg_class_t.\n\t(TARGET_PREFERRED_RELOAD_CLASS,\n\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n\nFrom-SVN: r177069", "tree": {"sha": "fb51785c70eb40e23b7ae6f367b796421da6a8b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb51785c70eb40e23b7ae6f367b796421da6a8b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d5e496f46c6bd22709167532f6ca45b6ae98477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5e496f46c6bd22709167532f6ca45b6ae98477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d5e496f46c6bd22709167532f6ca45b6ae98477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5e496f46c6bd22709167532f6ca45b6ae98477/comments", "author": null, "committer": null, "parents": [{"sha": "a44250f4ddeaebd81dd799ae549b50751e016ae8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44250f4ddeaebd81dd799ae549b50751e016ae8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44250f4ddeaebd81dd799ae549b50751e016ae8"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "3969d4daf6b971f517d5ad92d880b7b1beb0cd57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d5e496f46c6bd22709167532f6ca45b6ae98477", "patch": "@@ -1,3 +1,15 @@\n+2011-08-01  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/mmix/mmix.h (PREFERRED_RELOAD_CLASS,\n+\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove macro.\n+\t* config/mmix/mmix-protos.h (mmix_preferred_reload_class,\n+\tmmix_preferred_output_reload_class): Remove.\n+\t* config/mmix/mmix.c (mmix_preferred_reload_class,\n+\tmmix_preferred_output_reload_class): Make static. Change rclass\n+\targument and return type to reg_class_t.\n+\t(TARGET_PREFERRED_RELOAD_CLASS,\n+\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n+\n 2011-08-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* mode-switching.c (optimize_mode_switching): Fix bug in MODE_AFTER"}, {"sha": "a6faf6e1494f2321ae6e77049ddfd220b756b44c", "filename": "gcc/config/mmix/mmix-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h?ref=0d5e496f46c6bd22709167532f6ca45b6ae98477", "patch": "@@ -59,9 +59,6 @@ extern void mmix_asm_declare_register_global\n   (FILE *, tree, int, const char *);\n extern void mmix_asm_output_addr_diff_elt (FILE *, rtx, int, int);\n extern void mmix_asm_output_addr_vec_elt (FILE *, int);\n-extern enum reg_class mmix_preferred_reload_class (rtx, enum reg_class);\n-extern enum reg_class mmix_preferred_output_reload_class\n-  (rtx, enum reg_class);\n extern enum reg_class mmix_secondary_reload_class\n   (enum reg_class, enum machine_mode, rtx, int);\n extern int mmix_const_ok_for_letter_p (HOST_WIDE_INT, int);"}, {"sha": "e6cebce010e8f31bb7c84d938248ca8489dbd606", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=0d5e496f46c6bd22709167532f6ca45b6ae98477", "patch": "@@ -129,6 +129,8 @@ static void mmix_emit_sp_add (HOST_WIDE_INT offset);\n static void mmix_target_asm_function_prologue (FILE *, HOST_WIDE_INT);\n static void mmix_target_asm_function_end_prologue (FILE *);\n static void mmix_target_asm_function_epilogue (FILE *, HOST_WIDE_INT);\n+static reg_class_t mmix_preferred_reload_class (rtx, reg_class_t);\n+static reg_class_t mmix_preferred_output_reload_class (rtx, reg_class_t);\n static bool mmix_legitimate_address_p (enum machine_mode, rtx, bool);\n static bool mmix_legitimate_constant_p (enum machine_mode, rtx);\n static void mmix_reorg (void);\n@@ -250,6 +252,11 @@ static void mmix_conditional_register_usage (void);\n #undef TARGET_CALLEE_COPIES\n #define TARGET_CALLEE_COPIES hook_bool_CUMULATIVE_ARGS_mode_tree_bool_true\n \n+#undef TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS mmix_preferred_reload_class\n+#undef TARGET_PREFERRED_OUTPUT_RELOAD_CLASS\n+#define TARGET_PREFERRED_OUTPUT_RELOAD_CLASS mmix_preferred_reload_class\n+\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P\tmmix_legitimate_address_p\n #undef TARGET_LEGITIMATE_CONSTANT_P\n@@ -409,23 +416,22 @@ mmix_local_regno (int regno)\n   return regno <= MMIX_LAST_STACK_REGISTER_REGNUM && !call_used_regs[regno];\n }\n \n-/* PREFERRED_RELOAD_CLASS.\n+/* TARGET_PREFERRED_RELOAD_CLASS.\n    We need to extend the reload class of REMAINDER_REG and HIMULT_REG.  */\n \n-enum reg_class\n-mmix_preferred_reload_class (rtx x ATTRIBUTE_UNUSED, enum reg_class rclass)\n+static reg_class_t\n+mmix_preferred_reload_class (rtx x, reg_class_t rclass)\n {\n   /* FIXME: Revisit.  */\n   return GET_CODE (x) == MOD && GET_MODE (x) == DImode\n     ? REMAINDER_REG : rclass;\n }\n \n-/* PREFERRED_OUTPUT_RELOAD_CLASS.\n+/* TARGET_PREFERRED_OUTPUT_RELOAD_CLASS.\n    We need to extend the reload class of REMAINDER_REG and HIMULT_REG.  */\n \n-enum reg_class\n-mmix_preferred_output_reload_class (rtx x ATTRIBUTE_UNUSED,\n-\t\t\t\t    enum reg_class rclass)\n+static reg_class_t\n+mmix_preferred_output_reload_class (rtx x, reg_class_t rclass)\n {\n   /* FIXME: Revisit.  */\n   return GET_CODE (x) == MOD && GET_MODE (x) == DImode"}, {"sha": "dbcaa255f2566194591f62655c4bb4d489df0ac2", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5e496f46c6bd22709167532f6ca45b6ae98477/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=0d5e496f46c6bd22709167532f6ca45b6ae98477", "patch": "@@ -452,12 +452,6 @@ enum reg_class\n \n #define REGNO_OK_FOR_INDEX_P(REGNO) REGNO_OK_FOR_BASE_P (REGNO)\n \n-#define PREFERRED_RELOAD_CLASS(X, CLASS) \\\n- mmix_preferred_reload_class (X, CLASS)\n-\n-#define PREFERRED_OUTPUT_RELOAD_CLASS(X, CLASS) \\\n- mmix_preferred_output_reload_class (X, CLASS)\n-\n #define SECONDARY_INPUT_RELOAD_CLASS(CLASS, MODE, X) \\\n  mmix_secondary_reload_class (CLASS, MODE, X, 1)\n "}]}