{"sha": "065ba179195ec339203d0421fe3ab2eecd025f3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY1YmExNzkxOTVlYzMzOTIwM2QwNDIxZmUzYWIyZWVjZDAyNWYzZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-10T18:51:42Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-10T18:51:42Z"}, "message": "re PR testsuite/79356 (XPASS in attr-alloc_size-11.c)\n\n\tPR testsuite/79356\n\t* gcc.dg/attr-alloc_size-11.c: Don't xfail on alpha.\n\nFrom-SVN: r246816", "tree": {"sha": "5c7ee33f5b05ce8305793ba25436102b6ca8a0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c7ee33f5b05ce8305793ba25436102b6ca8a0a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/065ba179195ec339203d0421fe3ab2eecd025f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065ba179195ec339203d0421fe3ab2eecd025f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065ba179195ec339203d0421fe3ab2eecd025f3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065ba179195ec339203d0421fe3ab2eecd025f3f/comments", "author": null, "committer": null, "parents": [{"sha": "71b838d03533d1dbd94553f21ad4e8e439365d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b838d03533d1dbd94553f21ad4e8e439365d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b838d03533d1dbd94553f21ad4e8e439365d04"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "91b232d566fa44617c7486d21b0d31e2a59fe4a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/065ba179195ec339203d0421fe3ab2eecd025f3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/065ba179195ec339203d0421fe3ab2eecd025f3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=065ba179195ec339203d0421fe3ab2eecd025f3f", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR testsuite/79356\n+\t* gcc.dg/attr-alloc_size-11.c: Don't xfail on alpha.\n+\n 2017-04-10  Daniel Santos <daniel.santos@pobox.com>\n \n \tPR testsuite/79867\n@@ -200,7 +205,7 @@\n \t* gcc.target/arm/small-multiply-m1-2.c: Likewise.\n \t* gcc.target/arm/small-multiply-m1-3.c: Likewise.\n \n-2017-04-04  Nicolas Koenig  <koenigni@student.ethz.ch> \n+2017-04-04  Nicolas Koenig  <koenigni@student.ethz.ch>\n \n \tPR fortran/69498\n \t* gfortran.dg/submodule_unexp.f90: New test.\n@@ -299,11 +304,11 @@\n \t* gcc.dg/uninit-pred-8_b.c: Reenable DOM.\n \n 2017-03-31  Richard Biener  <rguenther@suse.de>\n- \n+\n \t* gcc.dg/tree-ssa/pr71347.c: Put back XFAIL on sparc.\n \n 2017-03-31  Richard Biener  <rguenther@suse.de>\n- \n+\n \t* gcc.dg/tree-ssa/pr71347.c: Put back XFAIL.\n \n 2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n@@ -500,7 +505,7 @@\n \n 2017-03-27  Claudiu Zissulescu  <claziss@synopsys.com>\n \n-\t* testsuite/gcc.target/arc/interrupt-4.c: New file.\n+\t* gcc.target/arc/interrupt-4.c: New file.\n \n 2017-03-27  Richard Biener  <rguenther@suse.de>\n \n@@ -717,7 +722,7 @@\n \t* gcc.c-torture/compile/pr71436.c: New test.\n \n 2017-03-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-            Richard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79908\n \tPR tree-optimization/80136\n@@ -782,7 +787,7 @@\n \t* gfortran.dg/unexp_attribute.f90: New test\n \n 2017-03-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-            Richard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79908\n \t* gcc.dg/torture/pr79908.c: New file.\n@@ -986,11 +991,11 @@\n \n 2017-03-13  Claudiu Zissulescu  <claziss@synopsys.com>\n \n-\t* testsuite/gcc.target/arc/bitfield.c: New file.\n+\t* gcc.target/arc/bitfield.c: New file.\n \n 2017-03-13  Claudiu Zissulescu  <claziss@synopsys.com>\n \n-\t* testsuite/gcc.target/arc/pr9001090948.c: New file.\n+\t* gcc.target/arc/pr9001090948.c: New file.\n \n 2017-03-11  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -1319,7 +1324,7 @@\n \t* g++.dg/tm/pr70266.C: New.\n \n 2017-03-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n-            Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n \n \t* gfortran.dg/coarray/fail_image_1.f08: New test.\n \t* gfortran.dg/coarray/fail_image_2.f08: New test."}, {"sha": "fe6154a0d77752b315632b09399d73dc31cbc3a0", "filename": "gcc/testsuite/gcc.dg/attr-alloc_size-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/065ba179195ec339203d0421fe3ab2eecd025f3f/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/065ba179195ec339203d0421fe3ab2eecd025f3f/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c?ref=065ba179195ec339203d0421fe3ab2eecd025f3f", "patch": "@@ -47,8 +47,8 @@ typedef __SIZE_TYPE__    size_t;\n \n /* The following tests fail because of missing range information.  The xfail\n    exclusions are PR79356.  */\n-TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390*-*-* } } } } */\n-TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390x-*-* } } } } */\n+TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390*-*-* } } } } */\n+TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390x-*-* } } } } */\n TEST (int, INT_MIN + 2, ALLOC_MAX);    /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -3, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -2, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */"}]}