{"sha": "2e764ae1d666002b136726e6548481013527197d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU3NjRhZTFkNjY2MDAyYjEzNjcyNmU2NTQ4NDgxMDEzNTI3MTk3ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-26T05:20:24Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-26T05:20:24Z"}, "message": "libgfortran: Skip integer-kind=16 check for amdgcn\n\nlibgfortran/ChangeLog:\n\n\tPR target/96306\n\t* configure.ac: Add LIBGOMP_CHECKED_INT_KINDS and\n\tLIBGOMP_CHECKED_REAL_KINDS and use it for to skip\n\tinteger kind=16 checks for amdgcn.\n\t* Makefile.am (kinds.h, selected_int_kind.inc,\n\tselected_real_kind.inc): Pass them on.\n\t* mk-kinds-h.sh: Takes to-be-check kinds as argument.\n\t* mk-sik-inc.sh: Likewise.\n\t* mk-srk-inc.sh: Likewise.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.", "tree": {"sha": "b73073eb2609597f124c1ca348192272c6749c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b73073eb2609597f124c1ca348192272c6749c07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e764ae1d666002b136726e6548481013527197d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e764ae1d666002b136726e6548481013527197d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e764ae1d666002b136726e6548481013527197d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e764ae1d666002b136726e6548481013527197d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ab2694476c9fc87f0cabf7021af4624eb62c87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab2694476c9fc87f0cabf7021af4624eb62c87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab2694476c9fc87f0cabf7021af4624eb62c87c"}], "stats": {"total": 87, "additions": 67, "deletions": 20}, "files": [{"sha": "61bf05dd40d2266483a06df761c63bdba829b3b8", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -1054,7 +1054,7 @@ I_M4_DEPS8=$(I_M4_DEPS) m4/ifindloc1.m4\n I_M4_DEPS9=$(I_M4_DEPS) m4/ifindloc2.m4\n \n kinds.h: $(srcdir)/mk-kinds-h.sh\n-\t$(SHELL) $(srcdir)/mk-kinds-h.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-kinds-h.sh '@LIBGOMP_CHECKED_INT_KINDS@' '@LIBGOMP_CHECKED_REAL_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n kinds.inc: kinds.h\n \tgrep '^#' < kinds.h > $@\n@@ -1063,10 +1063,10 @@ c99_protos.inc: $(srcdir)/c99_protos.h\n \tgrep '^#' < $(srcdir)/c99_protos.h > $@\n \n selected_int_kind.inc: $(srcdir)/mk-sik-inc.sh\n-\t$(SHELL) $(srcdir)/mk-sik-inc.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-sik-inc.sh '@LIBGOMP_CHECKED_INT_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n selected_real_kind.inc: $(srcdir)/mk-srk-inc.sh\n-\t$(SHELL) $(srcdir)/mk-srk-inc.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-srk-inc.sh '@LIBGOMP_CHECKED_REAL_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n fpu-target.h: $(srcdir)/$(FPU_HOST_HEADER)\n \tcp $(srcdir)/$(FPU_HOST_HEADER) $@"}, {"sha": "3d043aaa92431862d5bec13dee7d7997fa1fb49e", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -608,6 +608,8 @@ INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n+LIBGOMP_CHECKED_INT_KINDS = @LIBGOMP_CHECKED_INT_KINDS@\n+LIBGOMP_CHECKED_REAL_KINDS = @LIBGOMP_CHECKED_REAL_KINDS@\n LIBOBJS = @LIBOBJS@\n LIBQUADINCLUDE = @LIBQUADINCLUDE@\n LIBQUADLIB = @LIBQUADLIB@\n@@ -7017,7 +7019,7 @@ ieee_arithmetic.mod: ieee_arithmetic.lo\n @onestep_TRUE@\t$(LTCOMPILE) -c -o $@ $^ -combine\n \n kinds.h: $(srcdir)/mk-kinds-h.sh\n-\t$(SHELL) $(srcdir)/mk-kinds-h.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-kinds-h.sh '@LIBGOMP_CHECKED_INT_KINDS@' '@LIBGOMP_CHECKED_REAL_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n kinds.inc: kinds.h\n \tgrep '^#' < kinds.h > $@\n@@ -7026,10 +7028,10 @@ c99_protos.inc: $(srcdir)/c99_protos.h\n \tgrep '^#' < $(srcdir)/c99_protos.h > $@\n \n selected_int_kind.inc: $(srcdir)/mk-sik-inc.sh\n-\t$(SHELL) $(srcdir)/mk-sik-inc.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-sik-inc.sh '@LIBGOMP_CHECKED_INT_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n selected_real_kind.inc: $(srcdir)/mk-srk-inc.sh\n-\t$(SHELL) $(srcdir)/mk-srk-inc.sh '$(FCCOMPILE)' > $@ || rm $@\n+\t$(SHELL) $(srcdir)/mk-srk-inc.sh '@LIBGOMP_CHECKED_REAL_KINDS@' '$(FCCOMPILE)' > $@ || rm $@\n \n fpu-target.h: $(srcdir)/$(FPU_HOST_HEADER)\n \tcp $(srcdir)/$(FPU_HOST_HEADER) $@"}, {"sha": "99cca9660219375e58c9934b12dfee0236089b2a", "filename": "libgfortran/configure", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -679,6 +679,8 @@ LD\n FGREP\n SED\n SECTION_FLAGS\n+LIBGOMP_CHECKED_REAL_KINDS\n+LIBGOMP_CHECKED_INT_KINDS\n LIBGFOR_MINIMAL_FALSE\n LIBGFOR_MINIMAL_TRUE\n LIBGFOR_USE_SYMVER_SUN_FALSE\n@@ -6208,6 +6210,19 @@ else\n fi\n \n \n+# Some compiler target support may have limited support for integer\n+# or floating point numbers \u2013 or may want to reduce the libgfortran size\n+# although they do have the support.\n+LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8 16\"\n+LIBGOMP_CHECKED_REAL_KINDS=\"4 8 10 16\"\n+\n+if test \"x${target_cpu}\" = xamdgcn; then\n+  # amdgcn only has limited support for __int128.\n+  LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8\"\n+fi\n+\n+\n+\n # Figure out whether the compiler supports \"-ffunction-sections -fdata-sections\",\n # similarly to how libstdc++ does it\n ac_test_CFLAGS=\"${CFLAGS+set}\"\n@@ -12724,7 +12739,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12727 \"configure\"\n+#line 12742 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12830,7 +12845,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12833 \"configure\"\n+#line 12848 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "8961e314d82b47dade89452a213481c8cc077e57", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -216,6 +216,19 @@ AM_CONDITIONAL(LIBGFOR_USE_SYMVER_SUN, [test \"x$gfortran_use_symver\" = xsun])\n \n AM_CONDITIONAL(LIBGFOR_MINIMAL, [test \"x${target_cpu}\" = xnvptx])\n \n+# Some compiler target support may have limited support for integer\n+# or floating point numbers \u2013 or may want to reduce the libgfortran size\n+# although they do have the support.\n+LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8 16\"\n+LIBGOMP_CHECKED_REAL_KINDS=\"4 8 10 16\"\n+\n+if test \"x${target_cpu}\" = xamdgcn; then\n+  # amdgcn only has limited support for __int128.\n+  LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8\"\n+fi\n+AC_SUBST(LIBGOMP_CHECKED_INT_KINDS)\n+AC_SUBST(LIBGOMP_CHECKED_REAL_KINDS)\n+\n # Figure out whether the compiler supports \"-ffunction-sections -fdata-sections\",\n # similarly to how libstdc++ does it\n ac_test_CFLAGS=\"${CFLAGS+set}\""}, {"sha": "249619061c6a585675ebeffd7b6334b1eb7c9202", "filename": "libgfortran/mk-kinds-h.sh", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-kinds-h.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-kinds-h.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-kinds-h.sh?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -2,12 +2,15 @@\n LC_ALL=C\n export LC_ALL\n \n-compile=\"$1\"\n-\n-# Possible types must be listed in ascending order\n-possible_integer_kinds=\"1 2 4 8 16\"\n-possible_real_kinds=\"4 8 10 16\"\n+if test \"$#\" -ne 3; then\n+  echo \"Usage $0 int_kinds real_kinds compile\"\n+  exit 1\n+fi\n \n+# Possible kinds must be listed in ascending order\n+possible_integer_kinds=\"$1\"\n+possible_real_kinds=\"$2\"\n+compile=\"$3\"\n \n largest=\"\"\n smallest=\"\"\n@@ -112,7 +115,7 @@ for k in $possible_real_kinds; do\n done\n \n \n-# After this, we include a header that can override some of the \n+# After this, we include a header that can override some of the\n # autodetected settings.\n echo '#include \"kinds-override.h\"'\n "}, {"sha": "e7f237ec52664e91307d160d52d17fa306d606ab", "filename": "libgfortran/mk-sik-inc.sh", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-sik-inc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-sik-inc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-sik-inc.sh?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -1,11 +1,18 @@\n #!/bin/sh\n \n-compile=\"$1\"\n+if test \"$#\" -ne 2; then\n+  echo \"Usage $0 int_kinds compile\"\n+  exit 1\n+fi\n+\n+# Possible kinds must be listed in ascending order\n+possible_integer_kinds=\"$1\"\n+compile=\"$2\"\n+\n kinds=\"\"\n-possible_kinds=\"1 2 4 8 16\"\n c=0\n \n-for k in $possible_kinds; do\n+for k in $possible_integer_kinds; do\n   echo \"  integer (kind=$k) :: x\" > tmp$$.f90\n   echo \"  x = 1_$k\" >> tmp$$.f90\n   echo \"  end\" >> tmp$$.f90"}, {"sha": "d9f2137f89d8d6b11139b272b00a2ac9a3af25a4", "filename": "libgfortran/mk-srk-inc.sh", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-srk-inc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e764ae1d666002b136726e6548481013527197d/libgfortran%2Fmk-srk-inc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-srk-inc.sh?ref=2e764ae1d666002b136726e6548481013527197d", "patch": "@@ -1,11 +1,18 @@\n #!/bin/sh\n \n-compile=\"$1\"\n+if test \"$#\" -ne 2; then\n+  echo \"Usage $0 real_kinds compile\"\n+  exit 1\n+fi\n+\n+# Possible kinds must be listed in ascending order\n+possible_real_kinds=\"$1\"\n+compile=\"$2\"\n+\n kinds=\"\"\n-possible_kinds=\"4 8 10 16\"\n c=0\n \n-for k in $possible_kinds; do\n+for k in $possible_real_kinds; do\n   echo \"  real (kind=$k) :: x\" > tmp$$.f90\n   echo \"  x = 1.0_$k\" >> tmp$$.f90\n   echo \"  end\" >> tmp$$.f90"}]}