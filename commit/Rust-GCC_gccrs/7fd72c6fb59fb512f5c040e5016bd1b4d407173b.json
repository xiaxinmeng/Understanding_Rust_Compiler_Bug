{"sha": "7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkNzJjNmZiNTlmYjUxMmY1YzA0MGU1MDE2YmQxYjRkNDA3MTczYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-07-22T05:23:22Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-07-22T05:23:22Z"}, "message": "Call copy_to_mode_reg instead of force_reg.\n\n2011-07-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_expand_call): Call copy_to_mode_reg\n\tinstead of force_reg.\n\nFrom-SVN: r176614", "tree": {"sha": "669accc30f73428893d5001a57eb53d031612213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/669accc30f73428893d5001a57eb53d031612213"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd72c6fb59fb512f5c040e5016bd1b4d407173b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69a620945732a213f5fcc68d462e32e93c75515b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a620945732a213f5fcc68d462e32e93c75515b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a620945732a213f5fcc68d462e32e93c75515b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "5ac6697d9fcce7b7705921cc57b02c63959bd1d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd72c6fb59fb512f5c040e5016bd1b4d407173b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd72c6fb59fb512f5c040e5016bd1b4d407173b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "patch": "@@ -1,3 +1,8 @@\n+2011-07-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_expand_call): Call copy_to_mode_reg\n+\tinstead of force_reg.\n+\n 2011-07-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_expand_move): Convert to Pmode if"}, {"sha": "6517064299d04a0dca24acd039361a42d645ad9d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd72c6fb59fb512f5c040e5016bd1b4d407173b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd72c6fb59fb512f5c040e5016bd1b4d407173b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "patch": "@@ -21515,7 +21515,7 @@ ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n       fnaddr = XEXP (fnaddr, 0);\n       if (GET_MODE (fnaddr) != Pmode)\n \tfnaddr = convert_to_mode (Pmode, fnaddr, 1);\n-      fnaddr = gen_rtx_MEM (QImode, force_reg (Pmode, fnaddr));\n+      fnaddr = gen_rtx_MEM (QImode, copy_to_mode_reg (Pmode, fnaddr));\n     }\n \n   call = gen_rtx_CALL (VOIDmode, fnaddr, callarg1);"}]}