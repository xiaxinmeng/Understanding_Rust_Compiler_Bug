{"sha": "49ce134feeefc7091574a72c7386773fc6e26889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDljZTEzNGZlZWVmYzcwOTE1NzRhNzJjNzM4Njc3M2ZjNmUyNjg4OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-09-28T13:01:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-09-28T13:01:41Z"}, "message": "gcse.c (replace_store_insn): Use delete_insn.\n\n\t* gcse.c (replace_store_insn): Use delete_insn.\n\t* loop.c (move_movables): Likewise; avoid delete_insn\n\tfrom clobbering notes moved elsewhere.\n\t(check_dbra_loop): Use delete_insn.\n\t* ssa.c (convert_from_ssa): Likewise.\n\t* cse.c (cse_insn): Use delete_insn.\n\nFrom-SVN: r45859", "tree": {"sha": "fcfa9d6d66c718191ab999fbc66e7dd5f6db4cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcfa9d6d66c718191ab999fbc66e7dd5f6db4cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49ce134feeefc7091574a72c7386773fc6e26889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ce134feeefc7091574a72c7386773fc6e26889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ce134feeefc7091574a72c7386773fc6e26889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ce134feeefc7091574a72c7386773fc6e26889/comments", "author": null, "committer": null, "parents": [{"sha": "ece54d544da404f5d0e9c5efd78ff53e9636ce36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece54d544da404f5d0e9c5efd78ff53e9636ce36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece54d544da404f5d0e9c5efd78ff53e9636ce36"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "317918252ba234c60b20e1bf218262e986e4f64d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49ce134feeefc7091574a72c7386773fc6e26889", "patch": "@@ -1,3 +1,12 @@\n+Fri Sep 28 14:59:34 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcse.c (replace_store_insn): Use delete_insn.\n+\t* loop.c (move_movables): Likewise; avoid delete_insn\n+\tfrom clobbering notes moved elsewhere.\n+\t(check_dbra_loop): Use delete_insn.\n+\t* ssa.c (convert_from_ssa): Likewise.\n+\t* cse.c (cse_insn): Use delete_insn.\n+\n 2001-09-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpphash.h (struct cpp_buff): Make unsigned."}, {"sha": "496bea092bfdfd6460f8a1e94b3136372d2a0d4f", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=49ce134feeefc7091574a72c7386773fc6e26889", "patch": "@@ -5763,11 +5763,7 @@ cse_insn (insn, libcall_insn)\n       else if (n_sets == 1 && dest == pc_rtx && src == pc_rtx)\n \t{\n \t  /* One less use of the label this insn used to jump to.  */\n-\t  if (JUMP_LABEL (insn) != 0)\n-\t    --LABEL_NUSES (JUMP_LABEL (insn));\n-\t  PUT_CODE (insn, NOTE);\n-\t  NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n-\t  NOTE_SOURCE_FILE (insn) = 0;\n+\t  delete_insn (insn);\n \t  cse_jumps_altered = 1;\n \t  /* No more processing for this set.  */\n \t  sets[i].rtl = 0;\n@@ -6310,11 +6306,7 @@ cse_insn (insn, libcall_insn)\n       && (tem = single_set (prev_insn)) != 0\n       && SET_DEST (tem) == cc0_rtx\n       && ! reg_mentioned_p (cc0_rtx, x))\n-    {\n-      PUT_CODE (prev_insn, NOTE);\n-      NOTE_LINE_NUMBER (prev_insn) = NOTE_INSN_DELETED;\n-      NOTE_SOURCE_FILE (prev_insn) = 0;\n-    }\n+    delete-insn (prev_insn);\n \n   prev_insn_cc0 = this_insn_cc0;\n   prev_insn_cc0_mode = this_insn_cc0_mode;"}, {"sha": "9a468542dddc6a0e330066e5d53b7c23f3c07bb4", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=49ce134feeefc7091574a72c7386773fc6e26889", "patch": "@@ -6834,7 +6834,7 @@ replace_store_insn (reg, del, bb)\n       fprintf(gcse_file, \"\\n\");\n     }\n   \n-  delete_related_insns (del);\n+  delete_insn (del);\n }\n \n "}, {"sha": "d38741a031ba11e4dd8fff9f30435367585fcaf0", "filename": "gcc/loop.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=49ce134feeefc7091574a72c7386773fc6e26889", "patch": "@@ -1772,7 +1772,7 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t    = gen_rtx_EXPR_LIST (VOIDmode, r1,\n \t\t\t\t\t gen_rtx_EXPR_LIST (VOIDmode, r2,\n \t\t\t\t\t\t\t    regs_may_share));\n-\t\t  delete_related_insns (m->insn);\n+\t\t  delete_insn (m->insn);\n \n \t\t  if (new_start == 0)\n \t\t    new_start = i1;\n@@ -1803,11 +1803,11 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t\t{\n \t\t\t  temp = XEXP (temp, 0);\n \t\t\t  while (temp != p)\n-\t\t\t    temp = delete_related_insns (temp);\n+\t\t\t    temp = delete_insn (temp);\n \t\t\t}\n \n \t\t      temp = p;\n-\t\t      p = delete_related_insns (p);\n+\t\t      p = delete_insn (p);\n \n \t\t      /* simplify_giv_expr expects that it can walk the insns\n \t\t\t at m->insn forwards and see this old sequence we are\n@@ -1934,7 +1934,8 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t\t      if (temp == fn_address_insn)\n \t\t\t\tfn_address_insn = i1;\n \t\t\t      REG_NOTES (i1) = REG_NOTES (temp);\n-\t\t\t      delete_related_insns (temp);\n+\t\t\t      REG_NOTES (temp) = NULL;\n+\t\t\t      delete_insn (temp);\n \t\t\t    }\n \t\t\t  if (new_start == 0)\n \t\t\t    new_start = first;\n@@ -1999,6 +2000,7 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t      if (REG_NOTES (i1) == 0)\n \t\t\t{\n \t\t\t  REG_NOTES (i1) = REG_NOTES (p);\n+\t\t\t  REG_NOTES (p) = NULL;\n \n \t\t\t  /* If there is a REG_EQUAL note present whose value\n \t\t\t     is not loop invariant, then delete it, since it\n@@ -2029,7 +2031,7 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t\t}\n \n \t\t      temp = p;\n-\t\t      delete_related_insns (p);\n+\t\t      delete_insn (p);\n \t\t      p = NEXT_INSN (p);\n \n \t\t      /* simplify_giv_expr expects that it can walk the insns\n@@ -2101,16 +2103,12 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t\t and prevent further processing of it.  */\n \t\t      m1->done = 1;\n \n-\t\t      /* if library call, delete all insn except last, which\n-\t\t\t is deleted below */\n+\t\t      /* if library call, delete all insns.  */\n \t\t      if ((temp = find_reg_note (m1->insn, REG_RETVAL,\n \t\t\t\t\t\t NULL_RTX)))\n-\t\t\t{\n-\t\t\t  for (temp = XEXP (temp, 0); temp != m1->insn;\n-\t\t\t       temp = NEXT_INSN (temp))\n-\t\t\t    delete_related_insns (temp);\n-\t\t\t}\n-\t\t      delete_related_insns (m1->insn);\n+\t\t\tdelete_insn_chain (XEXP (temp, 0), m1->insn);\n+\t\t      else\n+\t\t        delete_insn (m1->insn);\n \n \t\t      /* Any other movable that loads the same register\n \t\t\t MUST be moved.  */\n@@ -7626,7 +7624,7 @@ check_dbra_loop (loop, insn_count)\n \t      end_sequence ();\n \n \t      p = loop_insn_emit_before (loop, 0, bl->biv->insn, tem);\n-\t      delete_related_insns (bl->biv->insn);\n+\t      delete_insn (bl->biv->insn);\n \n \t      /* Update biv info to reflect its new status.  */\n \t      bl->biv->insn = p;"}, {"sha": "82be6776585e69d8b113321e98eb9377cef33fb4", "filename": "gcc/ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ce134feeefc7091574a72c7386773fc6e26889/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=49ce134feeefc7091574a72c7386773fc6e26889", "patch": "@@ -2186,7 +2186,7 @@ convert_from_ssa()\n \t    {\n \t      if (insn == BLOCK_END (bb))\n \t\tBLOCK_END (bb) = PREV_INSN (insn);\n-\t      insn = delete_related_insns (insn);\n+\t      insn = delete_insn (insn);\n \t    }\n \t  /* Since all the phi nodes come at the beginning of the\n \t     block, if we find an ordinary insn, we can stop looking"}]}