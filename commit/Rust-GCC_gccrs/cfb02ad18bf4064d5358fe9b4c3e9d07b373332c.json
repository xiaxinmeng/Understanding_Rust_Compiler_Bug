{"sha": "cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiMDJhZDE4YmY0MDY0ZDUzNThmZTliNGMzZTlkMDdiMzczMzMyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T08:19:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T08:19:04Z"}, "message": "sem_ch12.ads (Need_Subprogram_Instance_Body): new function...\n\n2008-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.ads (Need_Subprogram_Instance_Body): new function, to create\n\ta pending instantiation for the body of a subprogram that is to be\n\tinlined.\n\n\t* sem_ch12.adb:\n\t(Analyze_Subprogram_Instantiation): use Need_Subprogram_Instance_Body.\n\n\t* sem_prag.adb (Make_Inline): If the pragma applies to an instance,\n\tcreate a pending instance for its body, so that calls to the subprogram\n\tcan be inlined by the back-end.\n\nFrom-SVN: r138480", "tree": {"sha": "8e7e212796d4641afaa9556f59d0e02b0395234a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e7e212796d4641afaa9556f59d0e02b0395234a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/comments", "author": null, "committer": null, "parents": [{"sha": "47ad7893fbf784f230dec09403f7862db6607198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ad7893fbf784f230dec09403f7862db6607198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47ad7893fbf784f230dec09403f7862db6607198"}], "stats": {"total": 101, "additions": 85, "deletions": 16}, "files": [{"sha": "3eb081d0278a1822d74331a704f6587f5fdbee0a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "patch": "@@ -1,3 +1,21 @@\n+2008-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.ads (Need_Subprogram_Instance_Body): new function, to create\n+\ta pending instantiation for the body of a subprogram that is to be\n+\tinlined.\n+\n+\t* sem_ch12.adb:\n+\t(Analyze_Subprogram_Instantiation): use Need_Subprogram_Instance_Body.\n+\n+\t* sem_prag.adb (Make_Inline): If the pragma applies to an instance,\n+\tcreate a pending instance for its body, so that calls to the subprogram\n+\tcan be inlined by the back-end.\n+\n+2008-08-01  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* gnat_ugn.texi: Document the RTX run times (rts-rtx-rtss and\n+\trts-rtx-w32).\n+\n 2008-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* scng.adb (Error_Illegal_Wide_Character): Bump scan pointer"}, {"sha": "48011e71ade79b4c32af25d6e9f34b339d6a70cd", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "patch": "@@ -3753,6 +3753,38 @@ package body Sem_Ch12 is\n       Analyze_Subprogram_Instantiation (N, E_Procedure);\n    end Analyze_Procedure_Instantiation;\n \n+   -----------------------------------\n+   -- Need_Subprogram_Instance_Body --\n+   -----------------------------------\n+\n+   function Need_Subprogram_Instance_Body\n+     (N    : Node_Id;\n+      Subp : Entity_Id) return Boolean\n+   is\n+   begin\n+      if (Is_In_Main_Unit (N)\n+            or else Is_Inlined (Subp)\n+            or else Is_Inlined (Alias (Subp)))\n+        and then (Operating_Mode = Generate_Code\n+                    or else (Operating_Mode = Check_Semantics\n+                               and then ASIS_Mode))\n+        and then (Expander_Active or else ASIS_Mode)\n+        and then not ABE_Is_Certain (N)\n+        and then not Is_Eliminated (Subp)\n+      then\n+         Pending_Instantiations.Append\n+           ((Inst_Node                => N,\n+             Act_Decl                 => Unit_Declaration_Node (Subp),\n+             Expander_Status          => Expander_Active,\n+             Current_Sem_Unit         => Current_Sem_Unit,\n+             Scope_Suppress           => Scope_Suppress,\n+             Local_Suppress_Stack_Top => Local_Suppress_Stack_Top));\n+         return True;\n+      else\n+         return False;\n+      end if;\n+   end Need_Subprogram_Instance_Body;\n+\n    --------------------------------------\n    -- Analyze_Subprogram_Instantiation --\n    --------------------------------------\n@@ -4144,22 +4176,7 @@ package body Sem_Ch12 is\n             --  If the context requires a full instantiation, mark node for\n             --  subsequent construction of the body.\n \n-            if (Is_In_Main_Unit (N)\n-                  or else Is_Inlined (Act_Decl_Id))\n-              and then (Operating_Mode = Generate_Code\n-                          or else (Operating_Mode = Check_Semantics\n-                                     and then ASIS_Mode))\n-              and then (Expander_Active or else ASIS_Mode)\n-              and then not ABE_Is_Certain (N)\n-              and then not Is_Eliminated (Act_Decl_Id)\n-            then\n-               Pending_Instantiations.Append\n-                 ((Inst_Node                => N,\n-                   Act_Decl                 => Act_Decl,\n-                   Expander_Status          => Expander_Active,\n-                   Current_Sem_Unit         => Current_Sem_Unit,\n-                   Scope_Suppress           => Scope_Suppress,\n-                   Local_Suppress_Stack_Top => Local_Suppress_Stack_Top));\n+            if Need_Subprogram_Instance_Body (N, Act_Decl_Id) then\n \n                Check_Forward_Instantiation (Gen_Decl);\n \n@@ -8699,6 +8716,13 @@ package body Sem_Ch12 is\n    begin\n       Gen_Body_Id := Corresponding_Body (Gen_Decl);\n \n+      --  Subprogram body may have been created already because of\n+      --  an inline pragma.\n+\n+      if Present (Corresponding_Body (Act_Decl)) then\n+         return;\n+      end if;\n+\n       Expander_Mode_Save_And_Set (Body_Info.Expander_Status);\n \n       --  Re-establish the state of information on which checks are suppressed."}, {"sha": "c3b34173e18ef245ba18f51528ed0c5f6602c1c3", "filename": "gcc/ada/sem_ch12.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_ch12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_ch12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.ads?ref=cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "patch": "@@ -106,6 +106,16 @@ package Sem_Ch12 is\n    --  function and procedure instances. The flag Body_Optional has the\n    --  same purpose as described for Instantiate_Package_Body.\n \n+   function Need_Subprogram_Instance_Body\n+     (N    : Node_Id;\n+      Subp : Entity_Id) return Boolean;\n+\n+   --  If a subprogram instance is inlined, indicate that the body of it\n+   --  must be created, to be used in inlined calls by the back-end. The\n+   --  subprogram may be inlined because the generic itself carries the\n+   --  pragma, or because a pragma appears for the instance in the scope.\n+   --  of the instance.\n+\n    procedure Save_Global_References (N : Node_Id);\n    --  Traverse the original generic unit, and capture all references to\n    --  entities that are defined outside of the generic in the analyzed"}, {"sha": "b54cda616cf67b06f63bf4de7525e717499b038d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb02ad18bf4064d5358fe9b4c3e9d07b373332c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=cfb02ad18bf4064d5358fe9b4c3e9d07b373332c", "patch": "@@ -53,6 +53,7 @@ with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n+with Sem_Ch12; use Sem_Ch12;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Dist; use Sem_Dist;\n with Sem_Elim; use Sem_Elim;\n@@ -3752,6 +3753,22 @@ package body Sem_Prag is\n                     and then Present (Corresponding_Body (Decl))\n                   then\n                      Set_Inline_Flags (Corresponding_Body (Decl));\n+\n+                  elsif Is_Generic_Instance (Subp) then\n+\n+                     --  Indicate that the body needs to be created for\n+                     --  inlining subsequent calls. The instantiation\n+                     --  node follows the declaration of the wrapper\n+                     --  package created for it.\n+\n+                     if Scope (Subp) /= Standard_Standard\n+                       and then\n+                         Need_Subprogram_Instance_Body\n+                          (Next (Unit_Declaration_Node (Scope (Alias (Subp)))),\n+                              Subp)\n+                     then\n+                        null;\n+                     end if;\n                   end if;\n                end if;\n "}]}