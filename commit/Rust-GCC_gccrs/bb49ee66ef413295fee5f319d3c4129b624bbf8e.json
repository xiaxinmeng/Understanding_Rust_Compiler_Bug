{"sha": "bb49ee66ef413295fee5f319d3c4129b624bbf8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0OWVlNjZlZjQxMzI5NWZlZTVmMzE5ZDNjNDEyOWI2MjRiYmY4ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-07-10T19:19:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-07-10T19:19:39Z"}, "message": "c-ada-spec.h (cpp_operation): Revert latest change.\n\nc-family/\n\t* c-ada-spec.h (cpp_operation): Revert latest change.\n\t* c-ada-spec.c (print_ada_declaration): Likewise.  Skip implicit\n\tconstructors and destructors.\ncp/\n\t* decl2.c (cpp_check): Revert latest change.\n\nFrom-SVN: r225686", "tree": {"sha": "fb2eeff7b927ad203e2147d132d00c149b492201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb2eeff7b927ad203e2147d132d00c149b492201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb49ee66ef413295fee5f319d3c4129b624bbf8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb49ee66ef413295fee5f319d3c4129b624bbf8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb49ee66ef413295fee5f319d3c4129b624bbf8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb49ee66ef413295fee5f319d3c4129b624bbf8e/comments", "author": null, "committer": null, "parents": [{"sha": "112fc9c3994053942c51b1bf4c58e51f26cf9f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112fc9c3994053942c51b1bf4c58e51f26cf9f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112fc9c3994053942c51b1bf4c58e51f26cf9f90"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "b71856129e9f54bf42e29bfe35e056ea2d72b71f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bb49ee66ef413295fee5f319d3c4129b624bbf8e", "patch": "@@ -1,3 +1,9 @@\n+2015-07-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.h (cpp_operation): Revert latest change.\n+\t* c-ada-spec.c (print_ada_declaration): Likewise.  Skip implicit\n+\tconstructors and destructors.\n+\n 2015-07-09  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* c-common.h: Adjust includes for flags.h changes."}, {"sha": "3a1ffe6ad4ac3365f98218ad657b5eb041abd123", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=bb49ee66ef413295fee5f319d3c4129b624bbf8e", "patch": "@@ -2887,7 +2887,6 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       bool is_method = TREE_CODE (TREE_TYPE (t)) == METHOD_TYPE;\n       tree decl_name = DECL_NAME (t);\n       bool is_abstract = false;\n-      bool is_constexpr = false;\n       bool is_constructor = false;\n       bool is_destructor = false;\n       bool is_copy_constructor = false;\n@@ -2899,7 +2898,6 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       if (cpp_check)\n \t{\n \t  is_abstract = cpp_check (t, IS_ABSTRACT);\n-\t  is_constexpr = cpp_check (t, IS_CONSTEXPR);\n \t  is_constructor = cpp_check (t, IS_CONSTRUCTOR);\n \t  is_destructor = cpp_check (t, IS_DESTRUCTOR);\n \t  is_copy_constructor = cpp_check (t, IS_COPY_CONSTRUCTOR);\n@@ -2913,8 +2911,8 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \n       if (is_constructor || is_destructor)\n \t{\n-\t  /* Skip constexpr default constructors.  */\n-\t  if (is_constexpr)\n+\t  /* ??? Skip implicit constructors/destructors for now.  */\n+\t  if (DECL_ARTIFICIAL (t))\n \t    return 0;\n \n \t  /* Only consider constructors/destructors for complete objects.  */\n@@ -3050,9 +3048,12 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \t  if (num_fields == 1)\n \t    is_interface = 1;\n \n-\t  /* Also check that there are only virtual methods.  */\n+\t  /* Also check that there are only pure virtual methods.  Since the\n+\t     class is empty, we can skip implicit constructors/destructors.  */\n \t  for (tmp = TYPE_METHODS (TREE_TYPE (t)); tmp; tmp = TREE_CHAIN (tmp))\n \t    {\n+\t      if (DECL_ARTIFICIAL (tmp))\n+\t\tcontinue;\n \t      if (cpp_check (tmp, IS_ABSTRACT))\n \t\tis_abstract_record = 1;\n \t      else"}, {"sha": "08d268573c7b0b0a4459f312f9a114e68e4879c7", "filename": "gcc/c-family/c-ada-spec.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=bb49ee66ef413295fee5f319d3c4129b624bbf8e", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n typedef enum {\n   HAS_DEPENDENT_TEMPLATE_ARGS,\n   IS_ABSTRACT,\n-  IS_CONSTEXPR,\n   IS_CONSTRUCTOR,\n   IS_DESTRUCTOR,\n   IS_COPY_CONSTRUCTOR,"}, {"sha": "4f61c89b9484d8d8d67d3a4ba71960df2102223f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb49ee66ef413295fee5f319d3c4129b624bbf8e", "patch": "@@ -1,3 +1,7 @@\n+2015-07-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl2.c (cpp_check): Revert latest change.\n+\n 2015-07-09  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (instantiation_dependent_r) [TRAIT_EXPR]: Call"}, {"sha": "cac0508f881af2e0cd21a135b6d594787d30b328", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb49ee66ef413295fee5f319d3c4129b624bbf8e/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=bb49ee66ef413295fee5f319d3c4129b624bbf8e", "patch": "@@ -4070,8 +4070,6 @@ cpp_check (tree t, cpp_operation op)\n \t}\n       case IS_ABSTRACT:\n \treturn DECL_PURE_VIRTUAL_P (t);\n-      case IS_CONSTEXPR:\n-\treturn DECL_DECLARED_CONSTEXPR_P (t);\n       case IS_CONSTRUCTOR:\n \treturn DECL_CONSTRUCTOR_P (t);\n       case IS_DESTRUCTOR:"}]}