{"sha": "80928237a94f7bc5e717e9374880fdd05525ef27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5MjgyMzdhOTRmN2JjNWU3MTdlOTM3NDg4MGZkZDA1NTI1ZWYyNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-12-13T21:16:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-12-13T21:16:45Z"}, "message": "re PR middle-end/55492 (__atomic_load doesn't match ACQUIRE memory model)\n\nPR middle-end/55492\n\n        * optabs.c (expand_atomic_load): Emit acquire barrier after the load.\n\nFrom-SVN: r194490", "tree": {"sha": "cafd23a84466080e9cb01852e158f948387b42a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafd23a84466080e9cb01852e158f948387b42a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80928237a94f7bc5e717e9374880fdd05525ef27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80928237a94f7bc5e717e9374880fdd05525ef27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80928237a94f7bc5e717e9374880fdd05525ef27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80928237a94f7bc5e717e9374880fdd05525ef27/comments", "author": null, "committer": null, "parents": [{"sha": "01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f4c821945d7f96f5f24cde63fce64ca0ef88a9"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "0dbf2032f6f678a3d985fb8b101eeaa0a649f3ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80928237a94f7bc5e717e9374880fdd05525ef27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80928237a94f7bc5e717e9374880fdd05525ef27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80928237a94f7bc5e717e9374880fdd05525ef27", "patch": "@@ -1,3 +1,8 @@\n+2012-12-13  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/55492\n+\t* optabs.c (expand_atomic_load): Emit acquire barrier after the load.\n+\n 2012-12-13  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_pad_function_end): Consider barriers"}, {"sha": "99fd02554fa5b9ab2d924d4736a5431723728c90", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80928237a94f7bc5e717e9374880fdd05525ef27/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80928237a94f7bc5e717e9374880fdd05525ef27/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=80928237a94f7bc5e717e9374880fdd05525ef27", "patch": "@@ -7468,14 +7468,14 @@ expand_atomic_load (rtx target, rtx mem, enum memmodel model)\n   if (!target || target == const0_rtx)\n     target = gen_reg_rtx (mode);\n \n-  /* Emit the appropriate barrier before the load.  */\n-  expand_mem_thread_fence (model);\n+  /* For SEQ_CST, emit a barrier before the load.  */\n+  if (model == MEMMODEL_SEQ_CST)\n+    expand_mem_thread_fence (model);\n \n   emit_move_insn (target, mem);\n \n-  /* For SEQ_CST, also emit a barrier after the load.  */\n-  if (model == MEMMODEL_SEQ_CST)\n-    expand_mem_thread_fence (model);\n+  /* Emit the appropriate barrier after the load.  */\n+  expand_mem_thread_fence (model);\n \n   return target;\n }\n@@ -7536,13 +7536,13 @@ expand_atomic_store (rtx mem, rtx val, enum memmodel model, bool use_release)\n         return NULL_RTX;\n     }\n \n-  /* If there is no mem_store, default to a move with barriers */\n+  /* Otherwise assume stores are atomic, and emit the proper barriers.  */\n   if (model == MEMMODEL_SEQ_CST || model == MEMMODEL_RELEASE)\n     expand_mem_thread_fence (model);\n \n   emit_move_insn (mem, val);\n \n-  /* For SEQ_CST, also emit a barrier after the load.  */\n+  /* For SEQ_CST, also emit a barrier after the store.  */\n   if (model == MEMMODEL_SEQ_CST)\n     expand_mem_thread_fence (model);\n "}]}