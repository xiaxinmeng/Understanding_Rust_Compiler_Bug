{"sha": "405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1YjNlZDQ0NGRkNDFkNzgxOGFiNGRhM2RhMmYxY2ViMjZlYTRkNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-02-15T09:46:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:46:58Z"}, "message": "s-wchjis.adb (JIS_To_EUC): Raise Constraint_Error for invalid value\n\n2006-02-13  Robert Dewar  <dewar@adacore.com>\n\n\t* s-wchjis.adb (JIS_To_EUC): Raise Constraint_Error for invalid value\n\nFrom-SVN: r111102", "tree": {"sha": "d646cc375fad086c110529e8fdca4b92e9450943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d646cc375fad086c110529e8fdca4b92e9450943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4/comments", "author": null, "committer": null, "parents": [{"sha": "bfe7c10c9b72680d7ecedd5e408499f971097420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe7c10c9b72680d7ecedd5e408499f971097420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe7c10c9b72680d7ecedd5e408499f971097420"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "079712f97b783369a321a9c13a880b99315e83e8", "filename": "gcc/ada/s-wchjis.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4/gcc%2Fada%2Fs-wchjis.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4/gcc%2Fada%2Fs-wchjis.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.adb?ref=405b3ed444dd41d7818ab4da3da2f1ceb26ea4d4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with System.Pure_Exceptions; use System.Pure_Exceptions;\n+\n package body System.WCh_JIS is\n \n    type Byte is mod 256;\n@@ -68,18 +70,36 @@ package body System.WCh_JIS is\n    ----------------\n \n    procedure JIS_To_EUC\n-     (J    : in Wide_Character;\n+     (J    : Wide_Character;\n       EUC1 : out Character;\n       EUC2 : out Character)\n    is\n       JIS1 : constant Natural := Wide_Character'Pos (J) / 256;\n       JIS2 : constant Natural := Wide_Character'Pos (J) rem 256;\n \n    begin\n+      --  Special case of small Katakana\n+\n       if JIS1 = 0 then\n+\n+         --  The value must be in the range 16#80# to 16#FF# so that the upper\n+         --  bit is set in both bytes.\n+\n+         if JIS2 < 16#80# then\n+            Raise_Exception (CE, \"invalid small Katakana character\");\n+         end if;\n+\n          EUC1 := Character'Val (EUC_Hankaku_Kana);\n          EUC2 := Character'Val (JIS2);\n \n+      --  The upper bit of both characters must be clear, or this is not\n+      --  a valid character for representation in EUC form.\n+\n+      elsif JIS1 > 16#7F# or else JIS2 > 16#7F# then\n+         Raise_Exception (CE, \"wide character value out of EUC range\");\n+\n+      --  Result is just the two characters with upper bits set\n+\n       else\n          EUC1 := Character'Val (JIS1 + 16#80#);\n          EUC2 := Character'Val (JIS2 + 16#80#);\n@@ -91,7 +111,7 @@ package body System.WCh_JIS is\n    ----------------------\n \n    procedure JIS_To_Shift_JIS\n-     (J   : in Wide_Character;\n+     (J   : Wide_Character;\n       SJ1 : out Character;\n       SJ2 : out Character)\n    is"}]}