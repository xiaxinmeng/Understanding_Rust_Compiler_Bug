{"sha": "0422d54667cc4968ef328a546ee378d04264bb35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyMmQ1NDY2N2NjNDk2OGVmMzI4YTU0NmVlMzc4ZDA0MjY0YmIzNQ==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2009-11-23T22:10:18Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2009-11-23T22:10:18Z"}, "message": "re PR c/36470 (sizeof UTF-32 is 2 on AVR)\n\nPR testsuite/36470\n* gcc.dg/utf-cvt.c: Skip int test for 16bit int targets.\nEnable short test for avr target.\n* gcc.dg/utf32-1.c: Enable test for avr and m32 targets.\n* gcc.dg/utf32-2.c: Ditto.\n* gcc.dg/utf32-3.c: Ditto.\n* gcc.dg/utf32-4.c: Enable test for non-32bit targets.\n\nFrom-SVN: r154471", "tree": {"sha": "ed2616cbe201773998ce1666e222888f5a81e670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed2616cbe201773998ce1666e222888f5a81e670"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0422d54667cc4968ef328a546ee378d04264bb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0422d54667cc4968ef328a546ee378d04264bb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0422d54667cc4968ef328a546ee378d04264bb35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0422d54667cc4968ef328a546ee378d04264bb35/comments", "author": null, "committer": null, "parents": [{"sha": "c806393f023c75d9b7c2afff4e6af678f33fa9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c806393f023c75d9b7c2afff4e6af678f33fa9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c806393f023c75d9b7c2afff4e6af678f33fa9c5"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "e7a37ea2161e42ac488e98eb5d29ad77bf345a4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -1,3 +1,13 @@\n+2009-11-23  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n+\n+\tPR testsuite/36470\n+\t* gcc.dg/utf-cvt.c: Skip int test for 16bit int targets.\n+\tEnable short test for avr target.\n+\t* gcc.dg/utf32-1.c: Enable test for avr and m32 targets.\n+\t* gcc.dg/utf32-2.c: Ditto.\n+\t* gcc.dg/utf32-3.c: Ditto.\n+\t* gcc.dg/utf32-4.c: Enable test for non-32bit targets.\n+\n 2009-11-23  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \t* gcc.dg/tree-ssa/asmgoto-1.c: Suppress warnings."}, {"sha": "7f51179eeb47d624393df3c705bbda6b9cf1e037", "filename": "gcc/testsuite/gcc.dg/utf-cvt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -44,11 +44,11 @@ void m (char16_t c0, char32_t c1)\n     f_c (c1);\t/* { dg-warning \"alter its value\" } */\n     fsc (c1);\t/* { dg-warning \"alter its value\" } */\n     fuc (c1);\t/* { dg-warning \"alter its value\" } */\n-    f_s (c1);\t/* { dg-warning \"alter its value\" \"\" { target { ! \"avr-*-*\" } } } */\n-    fss (c1);\t/* { dg-warning \"alter its value\" \"\" { target { ! \"avr-*-*\" } } } */\n-    fus (c1);\t/* { dg-warning \"alter its value\" \"\" { target { ! \"avr-*-*\" } } } */\n-    f_i (c1);\t/* { dg-warning \"change the sign\" } */\n-    fsi (c1);\t/* { dg-warning \"change the sign\" } */\n+    f_s (c1);\t/* { dg-warning \"alter its value\" } */\n+    fss (c1);\t/* { dg-warning \"alter its value\" } */\n+    fus (c1);\t/* { dg-warning \"alter its value\" } */\n+    f_i (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ! int16 } } } */\n+    fsi (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ! int16 } } } */\n     fui (c1);\n     f_l (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */\n     fsl (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */"}, {"sha": "f9d24c4d0c3c7f3cff7d0cfff240e7e847aeb8c1", "filename": "gcc/testsuite/gcc.dg/utf32-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-1.c?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -1,7 +1,6 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* Test the support for char32_t character constants. */\n /* { dg-do run } */\n-/* { dg-xfail-run-if \"PR36470\" { \"avr-*-*\" \"m32c-*-*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-std=gnu99 -Wall -Werror\" } */\n \n typedef __CHAR32_TYPE__ char32_t;"}, {"sha": "c0d23fb36ef22a657eba00db2be97da5ff7a0ef4", "filename": "gcc/testsuite/gcc.dg/utf32-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-2.c?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -1,7 +1,6 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* Test the support for char32_t* string constants. */\n /* { dg-do run } */\n-/* { dg-xfail-run-if \"PR36470\" { \"avr-*-*\" \"m32c-*-*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-std=gnu99 -Wall -Werror\" } */\n \n typedef __CHAR32_TYPE__ char32_t;"}, {"sha": "de7b2aa3532853375c1df740054cb923cea2084b", "filename": "gcc/testsuite/gcc.dg/utf32-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-3.c?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -1,7 +1,6 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* Test concatenation of char32_t* string literals. */\n /* { dg-do run } */\n-/* { dg-xfail-run-if \"PR36470\" { \"avr-*-*\" \"m32c-*-*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-std=gnu99 -Wall -Werror\" } */\n \n typedef __CHAR32_TYPE__ char32_t;"}, {"sha": "aa7f66a36851761f15a7163c7566341f3261f1c1", "filename": "gcc/testsuite/gcc.dg/utf32-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0422d54667cc4968ef328a546ee378d04264bb35/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf32-4.c?ref=0422d54667cc4968ef328a546ee378d04264bb35", "patch": "@@ -1,6 +1,6 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* Expected errors for char32_t character constants. */\n-/* { dg-do compile { target int32plus } } */\n+/* { dg-do compile } */\n /* { dg-options \"-std=gnu99\" } */\n \n typedef __CHAR32_TYPE__ char32_t;"}]}