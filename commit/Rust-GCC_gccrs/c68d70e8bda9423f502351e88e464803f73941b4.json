{"sha": "c68d70e8bda9423f502351e88e464803f73941b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4ZDcwZThiZGE5NDIzZjUwMjM1MWU4OGU0NjQ4MDNmNzM5NDFiNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-02-23T18:50:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:00Z"}, "message": "[Ada] Ada2020: AI12-0301 Predicates and Default_Value\n\n2020-06-09  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.ads, sem_util.adb (Is_Partially_Initialized_Type):\n\tTake Default_Value and Default_Component_Value into account.\n\t* sem_ch3.adb (Analyze_Object_Declaration): Update comment.", "tree": {"sha": "9599132d8355b589539eeef18904260dc710ddf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9599132d8355b589539eeef18904260dc710ddf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c68d70e8bda9423f502351e88e464803f73941b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68d70e8bda9423f502351e88e464803f73941b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68d70e8bda9423f502351e88e464803f73941b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68d70e8bda9423f502351e88e464803f73941b4/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68c6d7dcc46a50ec248f9989243f83ad9a3ca0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68c6d7dcc46a50ec248f9989243f83ad9a3ca0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68c6d7dcc46a50ec248f9989243f83ad9a3ca0e"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "7882cb803f9c9e19d77c2ccc5aca8aadb242a5f6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c68d70e8bda9423f502351e88e464803f73941b4", "patch": "@@ -4366,8 +4366,10 @@ package body Sem_Ch3 is\n       --  We need a predicate check if the type has predicates that are not\n       --  ignored, and if either there is an initializing expression, or for\n       --  default initialization when we have at least one case of an explicit\n-      --  default initial value and then this is not an internal declaration\n-      --  whose initialization comes later (as for an aggregate expansion).\n+      --  default initial value (including via a Default_Value or\n+      --  Default_Component_Value aspect, see AI12-0301) and then this is not\n+      --  an internal declaration whose initialization comes later (as for an\n+      --  aggregate expansion).\n       --  If expression is an aggregate it may be expanded into assignments\n       --  and the declaration itself is marked with No_Initialization, but\n       --  the predicate still applies."}, {"sha": "a5a58157c7eb724a9a7ef2d70f0a97f55e39365f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c68d70e8bda9423f502351e88e464803f73941b4", "patch": "@@ -16863,7 +16863,7 @@ package body Sem_Util is\n    is\n    begin\n       if Is_Scalar_Type (Typ) then\n-         return False;\n+         return Has_Default_Aspect (Base_Type (Typ));\n \n       elsif Is_Access_Type (Typ) then\n          return Include_Implicit;\n@@ -16872,8 +16872,9 @@ package body Sem_Util is\n \n          --  If component type is partially initialized, so is array type\n \n-         if Is_Partially_Initialized_Type\n-              (Component_Type (Typ), Include_Implicit)\n+         if Has_Default_Aspect (Base_Type (Typ))\n+           or else Is_Partially_Initialized_Type\n+                     (Component_Type (Typ), Include_Implicit)\n          then\n             return True;\n "}, {"sha": "2dfe34d305b3e7757321f199005a6ee3f84db8b2", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68d70e8bda9423f502351e88e464803f73941b4/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c68d70e8bda9423f502351e88e464803f73941b4", "patch": "@@ -1872,7 +1872,8 @@ package Sem_Util is\n    --  Typ is a type entity. This function returns true if this type is partly\n    --  initialized, meaning that an object of the type is at least partly\n    --  initialized (in particular in the record case, that at least one\n-   --  component has an initialization expression). Note that initialization\n+   --  component has an initialization expression, including via Default_Value\n+   --  and Default_Component_Value aspects). Note that initialization\n    --  resulting from the use of pragma Normalize_Scalars does not count.\n    --  Include_Implicit controls whether implicit initialization of access\n    --  values to null, and of discriminant values, is counted as making the"}]}