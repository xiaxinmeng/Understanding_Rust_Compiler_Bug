{"sha": "d40b21eebc9d41c3cb9ccbdf6338968436550621", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwYjIxZWViYzlkNDFjM2NiOWNjYmRmNjMzODk2ODQzNjU1MDYyMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-26T11:44:34Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-26T11:44:34Z"}, "message": "libgcov: improve profile reproducibility\n\nlibgcc/ChangeLog:\n\n\tPR gcov-profile/98739\n\t* libgcov.h (gcov_topn_add_value): Do not train when\n\twe have a merged profile with a negative number of total\n\tvalue.", "tree": {"sha": "ecb1087a87f42743ddd7f59d704d9fea776edcac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecb1087a87f42743ddd7f59d704d9fea776edcac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d40b21eebc9d41c3cb9ccbdf6338968436550621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40b21eebc9d41c3cb9ccbdf6338968436550621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d40b21eebc9d41c3cb9ccbdf6338968436550621", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40b21eebc9d41c3cb9ccbdf6338968436550621/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80198c701a7fc09e736ccffe470ee5033ca59a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80198c701a7fc09e736ccffe470ee5033ca59a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80198c701a7fc09e736ccffe470ee5033ca59a69"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "ddc688509bd9c0b180bb627918a3c440a77a25bf", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d40b21eebc9d41c3cb9ccbdf6338968436550621/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d40b21eebc9d41c3cb9ccbdf6338968436550621/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=d40b21eebc9d41c3cb9ccbdf6338968436550621", "patch": "@@ -443,7 +443,13 @@ gcov_topn_add_value (gcov_type *counters, gcov_type value, gcov_type count,\n \t\t     int use_atomic, int increment_total)\n {\n   if (increment_total)\n-    gcov_counter_add (&counters[0], 1, use_atomic);\n+    {\n+      /* In the multi-threaded mode, we can have an already merged profile\n+\t with a negative total value.  In that case, we should bail out.  */\n+      if (counters[0] < 0)\n+\treturn 0;\n+      gcov_counter_add (&counters[0], 1, use_atomic);\n+    }\n \n   struct gcov_kvp *prev_node = NULL;\n   struct gcov_kvp *minimal_node = NULL;"}]}