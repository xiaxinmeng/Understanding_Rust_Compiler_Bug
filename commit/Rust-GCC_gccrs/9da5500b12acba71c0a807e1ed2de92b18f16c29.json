{"sha": "9da5500b12acba71c0a807e1ed2de92b18f16c29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRhNTUwMGIxMmFjYmE3MWMwYTgwN2UxZWQyZGU5MmIxOGYxNmMyOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-06T13:13:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-06T13:13:14Z"}, "message": "re PR middle-end/52493 (tree check fail in ptr_derefs_may_alias_p)\n\n2012-03-06  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/52493\n\t* tree-ssa-alias.c (ptr_derefs_may_alias_p): Robustify.\n\n\t* gcc.dg/torture/pr52493.c: New testcase.\n\nFrom-SVN: r184987", "tree": {"sha": "5b61b7f72f5092239fe2009364b461df160a3bf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b61b7f72f5092239fe2009364b461df160a3bf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9da5500b12acba71c0a807e1ed2de92b18f16c29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da5500b12acba71c0a807e1ed2de92b18f16c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da5500b12acba71c0a807e1ed2de92b18f16c29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da5500b12acba71c0a807e1ed2de92b18f16c29/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66df6e9ef326961129b741b129927a4f85b607f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66df6e9ef326961129b741b129927a4f85b607f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66df6e9ef326961129b741b129927a4f85b607f1"}], "stats": {"total": 70, "additions": 57, "deletions": 13}, "files": [{"sha": "3b88179294ba81c1f905f53b69f19fc1bd54949b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9da5500b12acba71c0a807e1ed2de92b18f16c29", "patch": "@@ -1,3 +1,8 @@\n+2012-03-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52493\n+\t* tree-ssa-alias.c (ptr_derefs_may_alias_p): Robustify.\n+\n 2012-03-06  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/vms/vms-c.c (vms_pragma_nomember_alignment): Handle"}, {"sha": "25b446bd47cabf30aa5ea650578215299662e6ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9da5500b12acba71c0a807e1ed2de92b18f16c29", "patch": "@@ -1,3 +1,8 @@\n+2012-03-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52493\n+\t* gcc.dg/torture/pr52493.c: New testcase.\n+\n 2012-03-06  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/52097"}, {"sha": "b04ac5c17dbaa3bbac4f58b8783007e2eeabacd5", "filename": "gcc/testsuite/gcc.dg/torture/pr52493.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52493.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52493.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52493.c?ref=9da5500b12acba71c0a807e1ed2de92b18f16c29", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+\n+struct Time {\n+    long int sec;\n+    long usec;\n+};\n+struct Flow {\n+    unsigned short iif;\n+    struct Time mtime;\n+};\n+struct NetFlow {\n+    unsigned MaxFlows;\n+    unsigned HeaderFields;\n+    unsigned short *HeaderFormat;\n+};\n+static struct NetFlow *netflow;\n+static struct Time start_time;\n+static unsigned char emit_packet[1500];\n+inline long int cmpmtime(struct Time *t1, struct Time *t2)\n+{\n+  return (t1->sec - t2->sec) * 1000 + (t1->usec - t2->usec) / 1000;\n+}\n+static void fill(int fields, unsigned short *format,\n+\t\t  struct Flow *flow, void *p)\n+{\n+  int i;\n+  for (i = 0; i < fields; i++)\n+    if (format[i] == 21)\n+      {\n+\tunsigned int __v;\n+\t__v = cmpmtime(&flow->mtime, &start_time);\n+\t*((unsigned int *) p) = __v;\n+      }\n+}\n+void emit_thread()\n+{\n+  fill(netflow->HeaderFields, netflow->HeaderFormat, 0, &emit_packet);\n+}"}, {"sha": "dd90432b920633671eedeae593eb90d92d960a25", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da5500b12acba71c0a807e1ed2de92b18f16c29/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=9da5500b12acba71c0a807e1ed2de92b18f16c29", "patch": "@@ -236,17 +236,6 @@ ptr_derefs_may_alias_p (tree ptr1, tree ptr2)\n   STRIP_NOPS (ptr1);\n   STRIP_NOPS (ptr2);\n \n-  /* Anything we do not explicilty handle aliases.  */\n-  if ((TREE_CODE (ptr1) != SSA_NAME\n-       && TREE_CODE (ptr1) != ADDR_EXPR\n-       && TREE_CODE (ptr1) != POINTER_PLUS_EXPR)\n-      || (TREE_CODE (ptr2) != SSA_NAME\n-\t  && TREE_CODE (ptr2) != ADDR_EXPR\n-\t  && TREE_CODE (ptr2) != POINTER_PLUS_EXPR)\n-      || !POINTER_TYPE_P (TREE_TYPE (ptr1))\n-      || !POINTER_TYPE_P (TREE_TYPE (ptr2)))\n-    return true;\n-\n   /* Disregard pointer offsetting.  */\n   if (TREE_CODE (ptr1) == POINTER_PLUS_EXPR)\n     {\n@@ -275,7 +264,7 @@ ptr_derefs_may_alias_p (tree ptr1, tree ptr2)\n       if (base\n \t  && (TREE_CODE (base) == MEM_REF\n \t      || TREE_CODE (base) == TARGET_MEM_REF))\n-\tptr1 = TREE_OPERAND (base, 0);\n+\treturn ptr_derefs_may_alias_p (TREE_OPERAND (base, 0), ptr2);\n       else if (base\n \t       && DECL_P (base))\n \treturn ptr_deref_may_alias_decl_p (ptr2, base);\n@@ -288,14 +277,21 @@ ptr_derefs_may_alias_p (tree ptr1, tree ptr2)\n       if (base\n \t  && (TREE_CODE (base) == MEM_REF\n \t      || TREE_CODE (base) == TARGET_MEM_REF))\n-\tptr2 = TREE_OPERAND (base, 0);\n+\treturn ptr_derefs_may_alias_p (ptr1, TREE_OPERAND (base, 0));\n       else if (base\n \t       && DECL_P (base))\n \treturn ptr_deref_may_alias_decl_p (ptr1, base);\n       else\n \treturn true;\n     }\n \n+  /* From here we require SSA name pointers.  Anything else aliases.  */\n+  if (TREE_CODE (ptr1) != SSA_NAME\n+      || TREE_CODE (ptr2) != SSA_NAME\n+      || !POINTER_TYPE_P (TREE_TYPE (ptr1))\n+      || !POINTER_TYPE_P (TREE_TYPE (ptr2)))\n+    return true;\n+\n   /* We may end up with two empty points-to solutions for two same pointers.\n      In this case we still want to say both pointers alias, so shortcut\n      that here.  */"}]}