{"sha": "c5f5123f4a887df97deebeadb993ec95cbac2c22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmNTEyM2Y0YTg4N2RmOTdkZWViZWFkYjk5M2VjOTVjYmFjMmMyMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:47:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:47:42Z"}, "message": "[multiple changes]\n\n2011-09-02  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb, exp_ch6.adb, prj-nmsc.adb: Minor reformatting.\n\n2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Extract_Renamed_Object): Renamed to\n\tFind_Renamed_Object. This routine has been reimplemented and now uses\n\ttree traversal to locate a renamed object.\n\t(Is_Aliased): Replace call to Extract_Renamed_Object with\n\tFind_Renamed_Object.\n\n2011-09-02  Tristan Gingold  <gingold@adacore.com>\n\n\t* init.c: (__gnat_is_vms_v7): New function.\n\n2011-09-02  Olivier Hainque  <hainque@adacore.com>\n\n\t* tracebak.c (STOP_FRAME, ppc elf/vxworks case): Stop on frames\n\tthat have a misaligned backchain, necessarily bogus.\n\nFrom-SVN: r178457", "tree": {"sha": "f672ad321d9814186c763be811b55b8bc82bf7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f672ad321d9814186c763be811b55b8bc82bf7dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5f5123f4a887df97deebeadb993ec95cbac2c22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f5123f4a887df97deebeadb993ec95cbac2c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5f5123f4a887df97deebeadb993ec95cbac2c22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f5123f4a887df97deebeadb993ec95cbac2c22/comments", "author": null, "committer": null, "parents": [{"sha": "2bfa54844650a8583d41e06717a7374d9d53fd6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bfa54844650a8583d41e06717a7374d9d53fd6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bfa54844650a8583d41e06717a7374d9d53fd6e"}], "stats": {"total": 158, "additions": 111, "deletions": 47}, "files": [{"sha": "1f8cebfaed7ae6b70b86e68d363823311ea4b95d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -1,3 +1,24 @@\n+2011-09-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb, exp_ch6.adb, prj-nmsc.adb: Minor reformatting.\n+\n+2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Extract_Renamed_Object): Renamed to\n+\tFind_Renamed_Object. This routine has been reimplemented and now uses\n+\ttree traversal to locate a renamed object.\n+\t(Is_Aliased): Replace call to Extract_Renamed_Object with\n+\tFind_Renamed_Object.\n+\n+2011-09-02  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* init.c: (__gnat_is_vms_v7): New function.\n+\n+2011-09-02  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* tracebak.c (STOP_FRAME, ppc elf/vxworks case): Stop on frames\n+\tthat have a misaligned backchain, necessarily bogus.\n+\n 2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch3.adb (Expand_Freeze_Class_Wide_Type): Do not create"}, {"sha": "f3f20fc465243ff84793f66ca56cf2308f116151", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -1150,13 +1150,13 @@ package body Exp_Ch4 is\n             --    Set_Finalize_Address (<PtrT>FM, <T>FD'Unrestricted_Access);\n \n             --  Do not generate this call in the following cases:\n-            --\n+\n             --    * .NET/JVM - these targets do not support address arithmetic\n             --    and unchecked conversion, key elements of Finalize_Address.\n-            --\n+\n             --    * Alfa mode - the call is useless and results in unwanted\n             --    expansion.\n-            --\n+\n             --    * CodePeer mode - TSS primitive Finalize_Address is not\n             --    created in this mode.\n "}, {"sha": "3ff42b620e65f1325e9638749adb48430f82383f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -6519,8 +6519,8 @@ package body Exp_Ch6 is\n \n          begin\n             --  Ada 2005 (AI-251): In class-wide interface objects we displace\n-            --  \"this\" to reference the base of the object required to get\n-            --  access to the TSD of the object.\n+            --  \"this\" to reference the base of the object. This is required to\n+            --  get access to the TSD of the object.\n \n             if Is_Class_Wide_Type (Etype (Exp))\n               and then Is_Interface (Etype (Exp))"}, {"sha": "34901abafd48fcc089c7f27b9c6b8ab9481f8734", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 44, "deletions": 32, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -3887,49 +3887,61 @@ package body Exp_Util is\n         (Trans_Id   : Entity_Id;\n          First_Stmt : Node_Id) return Boolean\n       is\n-         function Extract_Renamed_Object\n-           (Ren_Decl : Node_Id) return Entity_Id;\n+         function Find_Renamed_Object (Ren_Decl : Node_Id) return Entity_Id;\n          --  Given an object renaming declaration, retrieve the entity of the\n          --  renamed name. Return Empty if the renamed name is anything other\n          --  than a variable or a constant.\n \n-         ----------------------------\n-         -- Extract_Renamed_Object --\n-         ----------------------------\n+         -------------------------\n+         -- Find_Renamed_Object --\n+         -------------------------\n \n-         function Extract_Renamed_Object\n-           (Ren_Decl : Node_Id) return Entity_Id\n-         is\n-            Change  : Boolean;\n-            Ren_Obj : Node_Id;\n+         function Find_Renamed_Object (Ren_Decl : Node_Id) return Entity_Id is\n+            Ren_Obj : Node_Id := Empty;\n \n-         begin\n-            Change  := True;\n-            Ren_Obj := Renamed_Object (Defining_Identifier (Ren_Decl));\n-            while Change loop\n-               Change := False;\n-\n-               if Nkind_In (Ren_Obj, N_Explicit_Dereference,\n-                                     N_Indexed_Component,\n-                                     N_Selected_Component)\n-               then\n-                  Ren_Obj := Prefix (Ren_Obj);\n-                  Change := True;\n+            function Find_Object (N : Node_Id) return Traverse_Result;\n+            --  Try to detect an object which is either a constant or a\n+            --  variable.\n \n-               elsif Nkind_In (Ren_Obj, N_Type_Conversion,\n-                                        N_Unchecked_Type_Conversion)\n+            -----------------\n+            -- Find_Object --\n+            -----------------\n+\n+            function Find_Object (N : Node_Id) return Traverse_Result is\n+            begin\n+               --  Stop the search once a constant or a variable has been\n+               --  detected.\n+\n+               if Nkind (N) = N_Identifier\n+                 and then Present (Entity (N))\n+                 and then Ekind_In (Entity (N), E_Constant, E_Variable)\n                then\n-                  Ren_Obj := Expression (Ren_Obj);\n-                  Change := True;\n+                  Ren_Obj := Entity (N);\n+                  return Abandon;\n                end if;\n-            end loop;\n \n-            if Nkind (Ren_Obj) in N_Has_Entity then\n-               return Entity (Ren_Obj);\n+               return OK;\n+            end Find_Object;\n+\n+            procedure Search is new Traverse_Proc (Find_Object);\n+\n+            --  Local variables\n+\n+            Typ : constant Entity_Id := Etype (Defining_Identifier (Ren_Decl));\n+\n+         --  Start of processing for Find_Renamed_Object\n+\n+         begin\n+            --  Actions related to dispatching calls may appear as renamings of\n+            --  tags. Do not process this type of renaming because it does not\n+            --  use the actual value of the object.\n+\n+            if not Is_RTE (Typ, RE_Tag_Ptr) then\n+               Search (Name (Ren_Decl));\n             end if;\n \n-            return Empty;\n-         end Extract_Renamed_Object;\n+            return Ren_Obj;\n+         end Find_Renamed_Object;\n \n          --  Local variables\n \n@@ -3954,7 +3966,7 @@ package body Exp_Util is\n                end if;\n \n             elsif Nkind (Stmt) = N_Object_Renaming_Declaration then\n-               Ren_Obj := Extract_Renamed_Object (Stmt);\n+               Ren_Obj := Find_Renamed_Object (Stmt);\n \n                if Present (Ren_Obj)\n                  and then Ren_Obj = Trans_Id"}, {"sha": "02771d57c7c762a2795a38dd94490a59beef9e27", "filename": "gcc/ada/init.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -1747,6 +1747,29 @@ __gnat_set_features (void)\n   __gnat_features_set = 1;\n }\n \n+/* Return true if the VMS version is 7.x.  */\n+\n+#define SYI$_VERSION 0x1000\n+\n+int\n+__gnat_is_vms_v7 (void)\n+{\n+  struct descriptor_s desc;\n+  char version[8];\n+  int status;\n+  int code = SYI$_VERSION;\n+\n+  desc.len = sizeof (version);\n+  desc.mbz = 0;\n+  desc.adr = version;\n+\n+  status = lib$getsyi (&code, 0, &desc);\n+  if ((status & 1) == 1 && version[1] == '7' && version[2] == '.')\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n /*******************/\n /* FreeBSD Section */\n /*******************/"}, {"sha": "0fa421e7303ca89bc0e633f9f87dfb19ab3f2c2b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -4364,8 +4364,10 @@ package body Prj.Nmsc is\n \n          declare\n             Name : constant String := Get_Name_String (Project.Library_Name);\n-            OK   : Boolean := Is_Letter (Name (Name'First));\n+            OK   : Boolean         := Is_Letter (Name (Name'First));\n+\n             Underline : Boolean := False;\n+\n          begin\n             for J in Name'First + 1 .. Name'Last loop\n                exit when not OK;\n@@ -4385,7 +4387,7 @@ package body Prj.Nmsc is\n                end if;\n             end loop;\n \n-            OK := OK and then not Underline;\n+            OK := OK and not Underline;\n \n             if not OK then\n                Error_Msg\n@@ -4489,13 +4491,13 @@ package body Prj.Nmsc is\n \n                      Shared.String_Elements.Table\n                        (String_Element_Table.Last (Shared.String_Elements)) :=\n-                       (Value         => Name_Id (Source.Dep_Name),\n-                        Index         => 0,\n-                        Display_Value => Name_Id (Source.Dep_Name),\n-                        Location      =>\n-                          Shared.String_Elements.Table (Interfaces).Location,\n-                        Flag          => False,\n-                        Next          => Interface_ALIs);\n+                         (Value         => Name_Id (Source.Dep_Name),\n+                          Index         => 0,\n+                          Display_Value => Name_Id (Source.Dep_Name),\n+                          Location      =>\n+                            Shared.String_Elements.Table (Interfaces).Location,\n+                          Flag          => False,\n+                          Next          => Interface_ALIs);\n \n                      Interface_ALIs :=\n                        String_Element_Table.Last (Shared.String_Elements);"}, {"sha": "a8a200d448697ad0206e247105fac3a138c46a27", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f5123f4a887df97deebeadb993ec95cbac2c22/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=c5f5123f4a887df97deebeadb993ec95cbac2c22", "patch": "@@ -259,7 +259,13 @@ struct layout\n \n #define FRAME_OFFSET(FP) 0\n #define PC_ADJUST -4\n-#define STOP_FRAME(CURRENT, TOP_STACK) ((CURRENT)->next == 0)\n+\n+/* According to the base PPC ABI, a toplevel frame entry should feature\n+   a null backchain.  What happens at signal handler frontiers isn't so\n+   well specified, so we add a safety guard on top.  */\n+\n+#define STOP_FRAME(CURRENT, TOP_STACK) \\\n+ ((CURRENT)->next == 0 || ((long)(CURRENT)->next % __alignof__(void*)) != 0)\n \n #define BASE_SKIP 1\n "}]}