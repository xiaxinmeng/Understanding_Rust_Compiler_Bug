{"sha": "2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2ZjZlMDhlNjkyMDlkM2RmNWI0OWI3MzhjMDhjZTNlOTIxYmY0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-03T16:51:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:06Z"}, "message": "[Ada] Code clean ups and comments updates\n\n2020-06-09  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb, exp_ch4.adb, exp_ch6.adb, exp_ch9.adb,\n\texp_disp.adb, exp_util.adb: Add comments related to errors that\n\tshould be moved to semantic analysis. Also replace \"?\" with \"??\"\n\tin warning messages.", "tree": {"sha": "455481c607c45040361d76c6139535fc05360d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/455481c607c45040361d76c6139535fc05360d7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e6711046ae71601a40636e768c8d9d7def57add", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6711046ae71601a40636e768c8d9d7def57add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e6711046ae71601a40636e768c8d9d7def57add"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "381e4f11fb5da9ab28f1341549421a02874359cd", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -4456,6 +4456,8 @@ package body Exp_Ch3 is\n \n       procedure Check_Attr (Nam : Name_Id; TSS_Nam : TSS_Name_Type) is\n       begin\n+         --  Move this check to sem???\n+\n          if not Stream_Attribute_Available (Etype (Comp), TSS_Nam) then\n             Error_Msg_Name_1 := Nam;\n             Error_Msg_N\n@@ -9039,6 +9041,8 @@ package body Exp_Ch3 is\n                   end loop;\n \n                   pragma Assert (Present (Comp));\n+\n+                  --  Move this check to sem???\n                   Error_Msg_Node_2 := Comp;\n                   Error_Msg_NE\n                     (\"parent type & with dynamic component & cannot be parent\""}, {"sha": "bd8360f2df4114b6aa6f29538435235eeea493eb", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -4486,7 +4486,7 @@ package body Exp_Ch4 is\n                        and then Nkind (Associated_Node_For_Itype (PtrT)) =\n                                   N_Object_Declaration)\n       then\n-         Error_Msg_N (\"?use of an anonymous access type allocator\", N);\n+         Error_Msg_N (\"??use of an anonymous access type allocator\", N);\n       end if;\n \n       --  RM E.2.2(17). We enforce that the expected type of an allocator"}, {"sha": "e948580ef2c29c2b7733cb09b5d07e8ebdc4167e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -1960,7 +1960,7 @@ package body Exp_Ch6 is\n          then\n             if Comes_From_Source (N) then\n                Error_Msg_N\n-                 (\"?atomic actual passed by copy (RM C.6(19))\", Actual);\n+                 (\"??atomic actual passed by copy (RM C.6(19))\", Actual);\n             end if;\n             return True;\n          end if;\n@@ -1971,7 +1971,7 @@ package body Exp_Ch6 is\n          then\n             if Comes_From_Source (N) then\n                Error_Msg_N\n-                 (\"?volatile actual passed by copy (RM C.6(19))\", Actual);\n+                 (\"??volatile actual passed by copy (RM C.6(19))\", Actual);\n             end if;\n             return True;\n          end if;\n@@ -3921,6 +3921,8 @@ package body Exp_Ch6 is\n             if Present (Ass)\n               and then Is_Class_Wide_Type (Etype (Name (Ass)))\n             then\n+               --  Move the error messages below to sem???\n+\n                if Is_Access_Type (Etype (Call_Node)) then\n                   if Designated_Type (Etype (Call_Node)) /=\n                     Root_Type (Etype (Name (Ass)))\n@@ -4115,6 +4117,8 @@ package body Exp_Ch6 is\n \n          Set_Entity (Name (Call_Node), Parent_Subp);\n \n+         --  Move this check to sem???\n+\n          if Is_Abstract_Subprogram (Parent_Subp)\n            and then not In_Instance\n          then"}, {"sha": "4c2af03efe2a30827ac20d88116ce7f7f0d957bb", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -11168,6 +11168,7 @@ package body Exp_Ch9 is\n                then\n                   null;\n                else\n+                  --  Move this check to sem???\n                   Error_Msg_NE (\n                     \"& is not a time type (RM 9.6(6))\",\n                        Expression (Delay_Statement (Alt)), Time_Type);"}, {"sha": "c8975749b588c0aabfa2ef21677bb28c4eaf8978", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -3836,6 +3836,7 @@ package body Exp_Disp is\n       --  tagged type, when one of its primitive operations has a type in its\n       --  profile whose full view has not been analyzed yet. More complex cases\n       --  involve composite types that have one private unfrozen subcomponent.\n+      --  Move this check to sem???\n \n       procedure Export_DT (Typ : Entity_Id; DT : Entity_Id; Index : Nat := 0);\n       --  Export the dispatch table DT of tagged type Typ. Required to generate\n@@ -8150,6 +8151,7 @@ package body Exp_Disp is\n             --  We exclude Input and Output stream operations because\n             --  Limited_Controlled inherits useless Input and Output stream\n             --  operations from Root_Controlled, which can never be overridden.\n+            --  Move this check to sem???\n \n             if not Is_TSS (Prim, TSS_Stream_Input)\n                  and then"}, {"sha": "7fce77a2d3ac02fa91ad3b958641497dd0b975ee", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6f6e08e69209d3df5b49b738c08ce3e921bf44/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2d6f6e08e69209d3df5b49b738c08ce3e921bf44", "patch": "@@ -1296,6 +1296,7 @@ package body Exp_Util is\n                --  of the type. In the case of an inherited condition for an\n                --  overriding operation, both the operation and the function\n                --  are given by primitive wrappers.\n+               --  Move this check to sem???\n \n                if Ekind (New_E) = E_Function\n                  and then Is_Primitive_Wrapper (New_E)\n@@ -1326,6 +1327,7 @@ package body Exp_Util is\n \n             --  Check that there are no calls left to abstract operations if\n             --  the current subprogram is not abstract.\n+            --  Move this check to sem???\n \n             if Nkind (Parent (N)) = N_Function_Call\n               and then N = Name (Parent (N))\n@@ -3012,7 +3014,7 @@ package body Exp_Util is\n             if Produced_Component_Check and then Has_Unchecked_Union (T) then\n                Error_Msg_NE\n                  (\"invariants cannot be checked on components of \"\n-                  & \"unchecked_union type &?\", Comp_Id, T);\n+                  & \"unchecked_union type &??\", Comp_Id, T);\n             end if;\n          end Process_Record_Component;\n "}]}