{"sha": "725842d06fc682ea72ccf017d4c49b9d5f254aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1ODQyZDA2ZmM2ODJlYTcyY2NmMDE3ZDRjNDliOWQ1ZjI1NGFhMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-04-30T00:01:52Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-04-30T00:01:52Z"}, "message": "Goodbye REG_FREQ_CALLS_CROSSED and REG_N_THROWING_CALLS_CROSSED\n\n\t* regs.h (struct reg_info_t): Delete freq_calls_crossed and\n\tthrow_calls_crossed.\n\t(REG_FREQ_CALLS_CROSSED): Delete.\n\t(REG_N_THROWING_CALLS_CROSSED): Delete.\n\t* regstat.c (regstat_bb_compute_ri): Don't calculate\n\tREG_FREQ_CALLS_CROSSED and REG_N_THROWING_CALLS_CROSSED.\n\t(dump_reg_info): Don't print call cross frequency.\n\t* ira.c (combine_and_move_insns): Don't set REG_FREQ_CALLS_CROSSED\n\tand REG_N_THROWING_CALLS_CROSSED.\n\nFrom-SVN: r235664", "tree": {"sha": "5bca41dc3722b844c53a1c4d53b03443abff64a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bca41dc3722b844c53a1c4d53b03443abff64a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/725842d06fc682ea72ccf017d4c49b9d5f254aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725842d06fc682ea72ccf017d4c49b9d5f254aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725842d06fc682ea72ccf017d4c49b9d5f254aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725842d06fc682ea72ccf017d4c49b9d5f254aa0/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91dabbb2c7bf541fa72ab45c88ec8ea0fd7771c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91dabbb2c7bf541fa72ab45c88ec8ea0fd7771c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91dabbb2c7bf541fa72ab45c88ec8ea0fd7771c7"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "98bd8481bd0d8a97496ab8749375bb56e826e7d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=725842d06fc682ea72ccf017d4c49b9d5f254aa0", "patch": "@@ -1,3 +1,15 @@\n+2016-04-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* regs.h (struct reg_info_t): Delete freq_calls_crossed and\n+\tthrow_calls_crossed.\n+\t(REG_FREQ_CALLS_CROSSED): Delete.\n+\t(REG_N_THROWING_CALLS_CROSSED): Delete.\n+\t* regstat.c (regstat_bb_compute_ri): Don't calculate\n+\tREG_FREQ_CALLS_CROSSED and REG_N_THROWING_CALLS_CROSSED.\n+\t(dump_reg_info): Don't print call cross frequency.\n+\t* ira.c (combine_and_move_insns): Don't set REG_FREQ_CALLS_CROSSED\n+\tand REG_N_THROWING_CALLS_CROSSED.\n+\n 2016-04-30  Alan Modra  <amodra@gmail.com>\n \n \t* regs.h (struct reg_info_t): Delete live_length."}, {"sha": "a38e67e0b7c15338f6ee4dc2de1037575f764c90", "filename": "gcc/ira.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=725842d06fc682ea72ccf017d4c49b9d5f254aa0", "patch": "@@ -3738,8 +3738,6 @@ combine_and_move_insns (void)\n \n \t  REG_BASIC_BLOCK (regno) = use_bb->index;\n \t  REG_N_CALLS_CROSSED (regno) = 0;\n-\t  REG_FREQ_CALLS_CROSSED (regno) = 0;\n-\t  REG_N_THROWING_CALLS_CROSSED (regno) = 0;\n \n \t  if (use_insn == BB_HEAD (use_bb))\n \t    BB_HEAD (use_bb) = new_insn;"}, {"sha": "e07a003f4c409e39cc451c8a0788528fa319d103", "filename": "gcc/regs.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=725842d06fc682ea72ccf017d4c49b9d5f254aa0", "patch": "@@ -106,8 +106,6 @@ struct reg_info_t\n   int freq;\t\t\t/* # estimated frequency (REG n) is used or set */\n   int deaths;\t\t\t/* # of times (REG n) dies */\n   int calls_crossed;\t\t/* # of calls (REG n) is live across */\n-  int freq_calls_crossed;\t/* # estimated frequency (REG n) crosses call */\n-  int throw_calls_crossed;\t/* # of calls that may throw (REG n) is live across */\n   int basic_block;\t\t/* # of basic blocks (REG n) is used in */\n };\n \n@@ -162,12 +160,6 @@ extern size_t reg_info_p_size;\n /* Indexed by N, gives number of CALL_INSNS across which (REG n) is live.  */\n \n #define REG_N_CALLS_CROSSED(N)  (reg_info_p[N].calls_crossed)\n-#define REG_FREQ_CALLS_CROSSED(N)  (reg_info_p[N].freq_calls_crossed)\n-\n-/* Indexed by N, gives number of CALL_INSNS that may throw, across which\n-   (REG n) is live.  */\n-\n-#define REG_N_THROWING_CALLS_CROSSED(N) (reg_info_p[N].throw_calls_crossed)\n \n /* Indexed by n, gives number of basic block that  (REG n) is used in.\n    If the value is REG_BLOCK_GLOBAL (-1),"}, {"sha": "a36ab18448a395958af33181d4c212a8ff3a6983", "filename": "gcc/regstat.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fregstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725842d06fc682ea72ccf017d4c49b9d5f254aa0/gcc%2Fregstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregstat.c?ref=725842d06fc682ea72ccf017d4c49b9d5f254aa0", "patch": "@@ -94,8 +94,7 @@ regstat_free_n_sets_and_refs (void)\n /*----------------------------------------------------------------------------\n    REGISTER INFORMATION\n \n-   Process REG_N_DEATHS, REG_N_CALLS_CROSSED,\n-   REG_N_THROWING_CALLS_CROSSED and REG_BASIC_BLOCK.\n+   Process REG_N_DEATHS, REG_N_CALLS_CROSSED, and REG_BASIC_BLOCK.\n \n    ----------------------------------------------------------------------------*/\n \n@@ -156,16 +155,10 @@ regstat_bb_compute_ri (basic_block bb, bitmap live)\n       /* Process the defs.  */\n       if (CALL_P (insn))\n \t{\n-\t  bool can_throw = can_throw_internal (insn);\n \t  bool set_jump = (find_reg_note (insn, REG_SETJMP, NULL) != NULL);\n \t  EXECUTE_IF_SET_IN_BITMAP (live, 0, regno, bi)\n \t    {\n \t      REG_N_CALLS_CROSSED (regno)++;\n-\t      REG_FREQ_CALLS_CROSSED (regno) += REG_FREQ_FROM_BB (bb);\n-\t      REG_FREQ_CALLS_CROSSED (regno) =\n-\t\tMIN (REG_FREQ_CALLS_CROSSED (regno), REG_FREQ_MAX);\n-\t      if (can_throw)\n-\t\tREG_N_THROWING_CALLS_CROSSED (regno)++;\n \n \t      /* We have a problem with any pseudoreg that lives\n \t\t across the setjmp.  ANSI says that if a user variable\n@@ -344,9 +337,6 @@ regstat_bb_compute_calls_crossed (unsigned int bb_index, bitmap live)\n \t  EXECUTE_IF_SET_IN_BITMAP (live, 0, regno, bi)\n \t    {\n \t      REG_N_CALLS_CROSSED (regno)++;\n-\t      REG_FREQ_CALLS_CROSSED (regno) += REG_FREQ_FROM_BB (bb);\n-\t      REG_FREQ_CALLS_CROSSED (regno) =\n-\t\tMIN (REG_FREQ_CALLS_CROSSED (regno), REG_FREQ_MAX);\n \t    }\n \t}\n \n@@ -445,8 +435,6 @@ dump_reg_info (FILE *file)\n \tfputs (\"; crosses 1 call\", file);\n       else if (REG_N_CALLS_CROSSED (i))\n \tfprintf (file, \"; crosses %d calls\", REG_N_CALLS_CROSSED (i));\n-      if (REG_FREQ_CALLS_CROSSED (i))\n-\tfprintf (file, \"; crosses call with %d frequency\", REG_FREQ_CALLS_CROSSED (i));\n       if (regno_reg_rtx[i] != NULL\n \t  && PSEUDO_REGNO_BYTES (i) != UNITS_PER_WORD)\n \tfprintf (file, \"; %d bytes\", PSEUDO_REGNO_BYTES (i));"}]}