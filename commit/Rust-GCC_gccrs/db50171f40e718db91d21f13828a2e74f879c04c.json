{"sha": "db50171f40e718db91d21f13828a2e74f879c04c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1MDE3MWY0MGU3MThkYjkxZDIxZjEzODI4YTJlNzRmODc5YzA0Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-07-17T16:43:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-07-17T16:43:42Z"}, "message": "mangle.c (write_unqualified_name): Handle template parm subtitution.\n\n* mangle.c (write_unqualified_name): Handle template parm\nsubtitution.\n* class.c (build_base_field): Set DECL_PACKED.\n(layout_class_type): Don't use tail padding of PODs.\n\nFrom-SVN: r55535", "tree": {"sha": "6acff58197121f78afdd93e2a10e01e1cd69b9ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6acff58197121f78afdd93e2a10e01e1cd69b9ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db50171f40e718db91d21f13828a2e74f879c04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db50171f40e718db91d21f13828a2e74f879c04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db50171f40e718db91d21f13828a2e74f879c04c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db50171f40e718db91d21f13828a2e74f879c04c/comments", "author": null, "committer": null, "parents": [{"sha": "d28586abe7e95bc0514b3021153f1d6b64bdf4f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28586abe7e95bc0514b3021153f1d6b64bdf4f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28586abe7e95bc0514b3021153f1d6b64bdf4f4"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "645ed6acfeeb4d6557e08748be5d31e5a8439ebd", "filename": "gcc/testsuite/g++.dg/abi/layout1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout1.C?ref=db50171f40e718db91d21f13828a2e74f879c04c", "patch": "@@ -0,0 +1,31 @@\n+// Red Hat bugzilla 64535\n+// Bug: We are allocationg stuff into the tail padding of POD class \"A\".\n+// { dg-do run }\n+\n+struct A\n+{\n+  int x;\n+  char y;\n+};\n+\n+struct B : public A {\n+  virtual void f () {}\n+  char z;\n+};\n+\n+A a = { 21, 42 };\n+B b;\n+\n+int\n+main (void)\n+{\n+  b.x = 12;\n+  b.y = 24;\n+  b.z = 36;\n+\n+  A *ap = &b;\n+\n+  *ap = a;\n+\n+  return (b.z != 36);\n+}"}, {"sha": "fb4e1e5d9ff0b66d097f4da1b6c9b9c4e00dcc35", "filename": "gcc/testsuite/g++.dg/abi/layout2.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout2.C?ref=db50171f40e718db91d21f13828a2e74f879c04c", "patch": "@@ -0,0 +1,33 @@\n+// Red Hat bugzilla 65210\n+// { dg-do run }\n+\n+struct A {\n+    int a;\n+};\n+\n+struct B : public virtual A {};\n+\n+struct C {\n+  long double c;\n+};\n+\n+struct D : public virtual C {\n+    int d;\n+};\n+\n+struct E : public B, public D {\n+    int e;\n+};\n+\n+E e;\n+\n+/* The layout of E should begin with the B-in-E vtable pointer, followed by\n+   the D-in-E vtable pointer.  The bug was that we used to pad out the D\n+   fields for long double alignment.  */\n+\n+int main ()\n+{\n+  D* dp = &e;\n+  unsigned long d_offset = ((char*)dp) - ((char*) &e);\n+  return (d_offset != sizeof(void *));\n+}"}, {"sha": "6a073588aae572c884c08a7b51db5e1557d22a02", "filename": "gcc/testsuite/g++.dg/abi/mangle8.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db50171f40e718db91d21f13828a2e74f879c04c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle8.C?ref=db50171f40e718db91d21f13828a2e74f879c04c", "patch": "@@ -0,0 +1,16 @@\n+// Red Hat bugzilla 65035\n+// Bug: We were encoding the name of the instantiation as 'operator int'\n+// rather than 'operator T'.\n+// { dg-do compile }\n+\n+struct C {\n+    template <class T>\n+    operator T ();\n+};\n+\n+template <class T>\n+C::operator T () { return 0; }\n+\n+template C::operator int ();\n+\n+// { dg-final { scan-assembler _ZN1CcvT_IiEEv } }"}]}