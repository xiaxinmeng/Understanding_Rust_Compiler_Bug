{"sha": "8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlOWZkNWQ3MDQyMTk5Y2RiN2Y4NDdkYjc2NmEzNGQ4YzEwZTM1Zg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-12-12T21:16:09Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-12-12T21:16:09Z"}, "message": "revert: cfgrtl.c (rtl_verify_flow_info_1): Don't apply BLOCK_FOR_INSN on a BARRIER insn.\n\nRevert:\n2008-12-12  Andreas Schwab  <schwab@suse.de>\n* cfgrtl.c (rtl_verify_flow_info_1): Don't apply BLOCK_FOR_INSN on\na BARRIER insn.\n\nFrom-SVN: r142721", "tree": {"sha": "31cb18d79af5a9b508616601628713ecbfa57db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31cb18d79af5a9b508616601628713ecbfa57db1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce9fd5d7042199cdb7f847db766a34d8c10e35f/comments", "author": null, "committer": null, "parents": [{"sha": "04f182b1b03d09de8de3ac14c23a9db62dccac6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f182b1b03d09de8de3ac14c23a9db62dccac6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f182b1b03d09de8de3ac14c23a9db62dccac6e"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "1109f76e74fe38da56cee2e4ee96163aac18a89a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce9fd5d7042199cdb7f847db766a34d8c10e35f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce9fd5d7042199cdb7f847db766a34d8c10e35f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "patch": "@@ -1,3 +1,10 @@\n+2008-12-12  Andreas Schwab  <schwab@suse.de>\n+\n+\tRevert:\n+\t2008-12-12  Andreas Schwab  <schwab@suse.de>\n+\t* cfgrtl.c (rtl_verify_flow_info_1): Don't apply BLOCK_FOR_INSN on\n+\ta BARRIER insn.\n+\n 2008-12-12  Zdenek Dvorak  <ook@ucw.cz>\n \n \tPR tree-optimization/32044\n@@ -13,10 +20,10 @@\n \n 2008-12-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \n-\t* config/i386/x86intrin.h: New header file to support all x86 \n+\t* config/i386/x86intrin.h: New header file to support all x86\n \tintrinsics\n \t* config.gcc (extra_headers): For x86 and x86-64, add x86intrin.h\n-\t\n+\n 2008-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/38402\n@@ -157,8 +164,8 @@\n \t* tree-flow.h (remove_phi_nodes, canonicalize_loop_ivs): Declared.\n \t* Makefile.in (graphite.o): Depend on value-prof.h.\n \t(graphite.o-warn): Removed -Wno-error.\n-\t* tree-parloops.c (canonicalize_loop_ivs): Allow reduction_list \n-\tto be a NULL pointer.  Call update_stmt.  Return the newly created \n+\t* tree-parloops.c (canonicalize_loop_ivs): Allow reduction_list\n+\tto be a NULL pointer.  Call update_stmt.  Return the newly created\n \tcannonical induction variable.\n \n \t* graphite.h (debug_rename_map): Declared.  Fix some comments.\n@@ -171,7 +178,7 @@\n \t(new_graphite_bb): Test for useful statements before building a\n \tgraphite statement for the basic block.\n \t(free_graphite_bb): Do not free GBB_DATA_REFS: this is a bug\n-\tin free_data_ref that calls BITMAP_FREE (DR_VOPS (dr)) without \n+\tin free_data_ref that calls BITMAP_FREE (DR_VOPS (dr)) without\n \treason.\n \t(recompute_all_dominators, graphite_verify,\n \tnb_reductions_in_loop, graphite_loop_normal_form): New.\n@@ -191,7 +198,7 @@\n \t(debug_rename_elt, debug_rename_map_1, debug_rename_map): New.\n \t(remove_all_edges_1, remove_all_edges): Removed.\n \t(get_new_name_from_old_name): New.\n-\t(graphite_rename_variables_in_stmt): Renamed \n+\t(graphite_rename_variables_in_stmt): Renamed\n \trename_variables_in_stmt.  Call get_new_name_from_old_name.\n \tUse replace_exp\tand update_stmt.\n \t(is_old_iv): Renamed is_iv.\n@@ -211,7 +218,7 @@\n \tcopy_bb_and_scalar_dependences): New.\n \t(translate_clast): Heavily reimplemented: copy basic blocks,\n \tdo not move them.  Finally, in call cleanup_tree_cfg in gloog.\n-\tAt each translation step call graphite_verify ensuring the \n+\tAt each translation step call graphite_verify ensuring the\n \tconsistency of the SSA, loops and dominators information.\n \t(collect_virtual_phis, find_vdef_for_var_in_bb,\n \tfind_vdef_for_var_1, find_vdef_for_var,\n@@ -222,13 +229,13 @@\n \t(remove_sese_region, ifsese, if_region_entry, if_region_exit,\n \tif_region_get_condition_block, if_region_set_false_region,\n \tcreate_if_region_on_edge, move_sese_in_condition, bb_in_sese_p,\n-\tsese_find_uses_to_rename_use, sese_find_uses_to_rename_bb, \n+\tsese_find_uses_to_rename_use, sese_find_uses_to_rename_bb,\n \tsese_add_exit_phis_edge, sese_add_exit_phis_var,\n \trewrite_into_sese_closed_ssa): New.\n \t(gloog): Remove dead code.  Early return if code cannot be\n \tgenerated.  Call cleanup_tree_cfg once the scop has been code\n \tgenerated.\n-\t(graphite_trans_scop_block, graphite_trans_loop_block): Do not \n+\t(graphite_trans_scop_block, graphite_trans_loop_block): Do not\n \tblock loops with less than two loops.\n \t(graphite_apply_transformations): Remove the call to\n \tscop_remove_ignoreable_gbbs.\n@@ -395,7 +402,7 @@\n \tmark_reg_dead, process_bb_node_lives): Ditto.\n \n \t* ira-emit.c (ira_emit): Fix insn codes.\n-\t\n+\n \t* ira-build.c (propagate_allocno_info): Use flag flag_ira_region\n \tinstead of flag_ira_algorithm.\n \t(allocno_range_compare_func): Ignore classes for priority\n@@ -405,7 +412,7 @@\n \n \t* genpreds.c (write_enum_constraint_num): Output\n \tCONSTRAINT__LIMIT.\n-\t\n+\n \t* common.opt (fira-algorithm): Modify.\n \t(fira-region): New.\n \n@@ -425,14 +432,14 @@\n \t(find_allocno_class_costs): Ditto.  Use common_classes.  Translate\n \talt_class.\n \t(ira_costs): Allocate/deallocate common_classes.\n-\t\n+\n \t* config/m32c/m32.h (REG_ALLOC_ORDER): Add reg 19.\n \t(REG_CLASS_CONTENTS, reg_class, REG_CLASS_NAMES): New entries for\n \tR02A_REGS.\n \n \t* reload1.c (choose_reload_regs): Use MODE_INT for partial ints in\n \tsmallest_mode_for_size.\n-\t\n+\n 2008-12-10  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/linux-unwind.h (get_regs): Constify casts.\n@@ -465,7 +472,7 @@\n \tPR/38366\n \t* function.c (aggregate_value_p): Get fntype from CALL_EXPR in any\n \tcase.\n-\t* calls.c (nitialize_argument_information): Add fntype argument \n+\t* calls.c (nitialize_argument_information): Add fntype argument\n \tand use it for calls.promote_function_args.\n \t(expand_call): Pass fntype to aggregate_value_p if no fndecl\n \tavailable and pass additional fntype to"}, {"sha": "a7dc5076865fdc0d76a4f5e3223256ef334d8366", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce9fd5d7042199cdb7f847db766a34d8c10e35f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce9fd5d7042199cdb7f847db766a34d8c10e35f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=8ce9fd5d7042199cdb7f847db766a34d8c10e35f", "patch": "@@ -1731,8 +1731,7 @@ rtl_verify_flow_info_1 (void)\n \t}\n \n       FOR_BB_INSNS (bb, insn)\n-\tif (!BARRIER_P (insn)\n-\t    && BLOCK_FOR_INSN (insn) != bb)\n+\tif (BLOCK_FOR_INSN (insn) != bb)\n \t  {\n \t    error (\"insn %d basic block pointer is %d, should be %d\",\n \t\t   INSN_UID (insn),"}]}