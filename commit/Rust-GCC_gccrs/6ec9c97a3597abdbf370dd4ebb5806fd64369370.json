{"sha": "6ec9c97a3597abdbf370dd4ebb5806fd64369370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVjOWM5N2EzNTk3YWJkYmYzNzBkZDRlYmI1ODA2ZmQ2NDM2OTM3MA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2006-02-15T09:38:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:38:19Z"}, "message": "exp_ch5.adb (Expand_Assign_Array): If the right-hand side is a string...\n\n2006-02-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_Assign_Array): If the right-hand side is a\n\tstring, and the context requires a loop for the assignment (e.g.\n\tbecause the left-hand side is packed), generate a unique name for the\n\ttemporary that holds the string, to prevent spurious name clashes.\n\nFrom-SVN: r111061", "tree": {"sha": "9bdcae93b9081a9daeac83186d07949bbf13b60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bdcae93b9081a9daeac83186d07949bbf13b60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ec9c97a3597abdbf370dd4ebb5806fd64369370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec9c97a3597abdbf370dd4ebb5806fd64369370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ec9c97a3597abdbf370dd4ebb5806fd64369370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec9c97a3597abdbf370dd4ebb5806fd64369370/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfd99a80f01f7020727987fe981a2fe17ad034e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd99a80f01f7020727987fe981a2fe17ad034e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfd99a80f01f7020727987fe981a2fe17ad034e5"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "924e3e53d94cbf49a8ab784f7f872a0e28fdd59e", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec9c97a3597abdbf370dd4ebb5806fd64369370/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec9c97a3597abdbf370dd4ebb5806fd64369370/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=6ec9c97a3597abdbf370dd4ebb5806fd64369370", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -506,7 +506,7 @@ package body Exp_Ch5 is\n       if Nkind (Rhs) = N_String_Literal then\n          declare\n             Temp : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc, Name_T);\n+                     Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n             Decl : Node_Id;\n \n          begin\n@@ -1631,18 +1631,6 @@ package body Exp_Ch5 is\n          Apply_Constraint_Check (Rhs, Etype (Lhs));\n       end if;\n \n-      --  If we are assigning an access type and the left side is an\n-      --  entity, then make sure that Is_Known_Non_Null properly\n-      --  reflects the state of the entity after the assignment\n-\n-      if Is_Access_Type (Typ)\n-        and then Is_Entity_Name (Lhs)\n-        and then Known_Non_Null (Rhs)\n-        and then Safe_To_Capture_Value (N, Entity (Lhs))\n-      then\n-         Set_Is_Known_Non_Null (Entity (Lhs), Known_Non_Null (Rhs));\n-      end if;\n-\n       --  Case of assignment to a bit packed array element\n \n       if Nkind (Lhs) = N_Indexed_Component\n@@ -2809,14 +2797,14 @@ package body Exp_Ch5 is\n \n       --  Nothing to do if we are returning by reference, or this is not\n       --  a type that requires special processing (indicated by the fact\n-      --  that it requires a cleanup scope for the secondary stack case)\n+      --  that it requires a cleanup scope for the secondary stack case).\n \n       if Is_Return_By_Reference_Type (T) then\n          null;\n \n       elsif not Requires_Transient_Scope (Return_Type) then\n \n-         --  mutable records with no variable length components are not\n+         --  Mutable records with no variable length components are not\n          --  returned on the sec-stack so we need to make sure that the\n          --  backend will only copy back the size of the actual value  and not\n          --  the maximum size. We create an actual subtype for this purpose"}]}