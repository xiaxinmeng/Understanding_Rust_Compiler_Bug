{"sha": "99b629fa30fac1730d656c67369ef06b4c04ef27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTliNjI5ZmEzMGZhYzE3MzBkNjU2YzY3MzY5ZWYwNmI0YzA0ZWYyNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-04-01T08:55:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-04-01T08:55:05Z"}, "message": "2002-04-01  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h\n\t(codecvt::do_out, codecvt::do_unshift, codecvt::do_in):\n\tBy definition, sizeof(char) == 1.\n\t* include/bits/locale_facets.tcc (money_get::do_get,\n\tmoney_put::do_put): Ditto.\n\t* testsuite/21_strings/inserters_extractors.cc\n\t(test04): Ditto.\n\nFrom-SVN: r51685", "tree": {"sha": "888f969a0271f87b96cf26150e62f33ca97ab6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/888f969a0271f87b96cf26150e62f33ca97ab6ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99b629fa30fac1730d656c67369ef06b4c04ef27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b629fa30fac1730d656c67369ef06b4c04ef27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b629fa30fac1730d656c67369ef06b4c04ef27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b629fa30fac1730d656c67369ef06b4c04ef27/comments", "author": null, "committer": null, "parents": [{"sha": "ceef8ce4b43a36a75e3c7df8a8696866fc398a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceef8ce4b43a36a75e3c7df8a8696866fc398a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceef8ce4b43a36a75e3c7df8a8696866fc398a56"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "e4ae7ef36f342ecc36a5010f4aebff56608815a9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=99b629fa30fac1730d656c67369ef06b4c04ef27", "patch": "@@ -1,3 +1,13 @@\n+2002-04-01  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h\n+\t(codecvt::do_out, codecvt::do_unshift, codecvt::do_in):\n+\tBy definition, sizeof(char) == 1.\n+\t* include/bits/locale_facets.tcc (money_get::do_get,\n+\tmoney_put::do_put): Ditto.\n+\t* testsuite/21_strings/inserters_extractors.cc\n+\t(test04): Ditto.\n+\n 2002-03-30  Richard Henderson  <rth@redhat.com>\n \n \tPR c++/3719"}, {"sha": "891c66b2844cd1b0eba541ff5e4455f0f79ef739", "filename": "libstdc++-v3/config/locale/ieee_1003.1-2001/codecvt_specializations.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h?ref=99b629fa30fac1730d656c67369ef06b4c04ef27", "patch": "@@ -285,9 +285,9 @@\n \t{\n \t  typedef state_type::__desc_type\t__desc_type;\n \t  const __desc_type* __desc = __state._M_get_out_descriptor();\n-\t  const size_t __fmultiple = sizeof(intern_type) / sizeof(char);\n+\t  const size_t __fmultiple = sizeof(intern_type);\n \t  size_t __fbytes = __fmultiple * (__from_end - __from);\n-\t  const size_t __tmultiple = sizeof(extern_type) / sizeof(char);\n+\t  const size_t __tmultiple = sizeof(extern_type);\n \t  size_t __tbytes = __tmultiple * (__to_end - __to); \n \t  \n \t  // Argument list for iconv specifies a byte sequence. Thus,\n@@ -352,7 +352,7 @@\n \t{\n \t  typedef state_type::__desc_type\t__desc_type;\n \t  const __desc_type* __desc = __state._M_get_in_descriptor();\n-\t  const size_t __tmultiple = sizeof(intern_type) / sizeof(char);\n+\t  const size_t __tmultiple = sizeof(intern_type);\n \t  size_t __tlen = __tmultiple * (__to_end - __to); \n \t  \n \t  // Argument list for iconv specifies a byte sequence. Thus,\n@@ -390,9 +390,9 @@\n \t{\n \t  typedef state_type::__desc_type\t__desc_type;\n \t  const __desc_type* __desc = __state._M_get_in_descriptor();\n-\t  const size_t __fmultiple = sizeof(extern_type) / sizeof(char);\n+\t  const size_t __fmultiple = sizeof(extern_type);\n \t  size_t __flen = __fmultiple * (__from_end - __from);\n-\t  const size_t __tmultiple = sizeof(intern_type) / sizeof(char);\n+\t  const size_t __tmultiple = sizeof(intern_type);\n \t  size_t __tlen = __tmultiple * (__to_end - __to); \n \t  \n \t  // Argument list for iconv specifies a byte sequence. Thus,"}, {"sha": "27fc8787148b81644d6b03253eb831c0d36a9767", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=99b629fa30fac1730d656c67369ef06b4c04ef27", "patch": "@@ -938,7 +938,7 @@ namespace std\n       __beg = this->do_get(__beg, __end, __intl, __io, __err, __str); \n \n       const int __n = numeric_limits<long double>::digits10;\n-      char* __cs = static_cast<char*>(__builtin_alloca(sizeof(char) * __n));\n+      char* __cs = static_cast<char*>(__builtin_alloca(__n));\n       const locale __loc = __io.getloc();\n       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n       const _CharT* __wcs = __str.c_str();\n@@ -1152,20 +1152,20 @@ namespace std\n #ifdef _GLIBCPP_USE_C99\n       // First try a buffer perhaps big enough.\n       int __cs_size = 64;\n-      char* __cs = static_cast<char*>(__builtin_alloca(sizeof(char) * __cs_size));\n+      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));\n       int __len = __convert_from_v(__cs, __cs_size, \"%.01Lf\", __units, _S_c_locale);\n       // If the buffer was not large enough, try again with the correct size.\n       if (__len >= __cs_size)\n \t{\n \t  __cs_size = __len + 1;\n-\t  __cs = static_cast<char*>(__builtin_alloca(sizeof(char) * __cs_size));\n+\t  __cs = static_cast<char*>(__builtin_alloca(__cs_size));\n \t  __len = __convert_from_v(__cs, __cs_size, \"%.01Lf\", __units, _S_c_locale);\n \t}\n #else\n       // max_exponent10 + 1 for the integer part, + 4 for sign, decimal point,\n       // decimal digit, '\\0'. \n       const int __cs_size = numeric_limits<long double>::max_exponent10 + 5;\n-      char* __cs = static_cast<char*>(__builtin_alloca(sizeof(char) * __cs_size));\n+      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));\n       int __len = __convert_from_v(__cs, 0, \"%.01Lf\", __units, _S_c_locale);\n #endif\n       _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __cs_size));"}, {"sha": "5d1d9f50b195cce2153f9e95024a1cdb1499778c", "filename": "libstdc++-v3/testsuite/21_strings/inserters_extractors.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b629fa30fac1730d656c67369ef06b4c04ef27/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc?ref=99b629fa30fac1730d656c67369ef06b4c04ef27", "patch": "@@ -155,7 +155,7 @@ void test04(int size)\n {\n   bool test = true;\n   std::string str(size, 's');\n-  int expected_size = (2 * (size + sizeof(char)));\n+  int expected_size = 2 * (size + 1);\n   std::ostringstream oss(str);\n   \n   // sanity checks"}]}