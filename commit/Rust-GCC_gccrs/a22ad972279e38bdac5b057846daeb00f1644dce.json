{"sha": "a22ad972279e38bdac5b057846daeb00f1644dce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIyYWQ5NzIyNzllMzhiZGFjNWIwNTc4NDZkYWViMDBmMTY0NGRjZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-13T23:30:18Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-13T23:30:18Z"}, "message": "calls.c (expand_call): When copying unaligned values into a register...\n\n\t* calls.c (expand_call): When copying unaligned values into a register,\n\tzero out the register first rather than emitting a clobber.\n\nFrom-SVN: r13898", "tree": {"sha": "83d1aefa63ecf43bc297c36944892759219b5d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83d1aefa63ecf43bc297c36944892759219b5d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a22ad972279e38bdac5b057846daeb00f1644dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22ad972279e38bdac5b057846daeb00f1644dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22ad972279e38bdac5b057846daeb00f1644dce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22ad972279e38bdac5b057846daeb00f1644dce/comments", "author": null, "committer": null, "parents": [{"sha": "58a32c5c030a7928ea45640bde5cd3854cc8bce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58a32c5c030a7928ea45640bde5cd3854cc8bce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58a32c5c030a7928ea45640bde5cd3854cc8bce2"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "91ebe63c6f9c57188d0aebb807439390a19ab686", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a22ad972279e38bdac5b057846daeb00f1644dce/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a22ad972279e38bdac5b057846daeb00f1644dce/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=a22ad972279e38bdac5b057846daeb00f1644dce", "patch": "@@ -1782,9 +1782,15 @@ expand_call (exp, target, ignore)\n \t      /* Clobber REG and move each partword into it.  Ensure we don't\n \t\t go past the end of the structure.  Note that the loop below\n \t\t works because we've already verified that padding\n-\t\t and endianness are compatible.  */\n+\t\t and endianness are compatible.\n \n-\t      emit_insn (gen_rtx (CLOBBER, VOIDmode, reg));\n+\t\t We use to emit a clobber here but that doesn't let later\n+\t\t passes optimize the instructions we emit.  By storing 0 into\n+\t\t the register later passes know the first AND to zero out the\n+\t\t bitfield being set in the register is unnecessary.  The store\n+\t\t of 0 will be deleted as will at least the first AND.  */\n+\n+\t      emit_move_insn (reg, const0_rtx);\n \n \t      for (bitpos = 0;\n \t\t   bitpos < BITS_PER_WORD && bytes > 0;"}]}