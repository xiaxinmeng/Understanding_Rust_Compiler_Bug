{"sha": "383898f7654cd9e2db0586fa2ff18ec933a61a81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzODk4Zjc2NTRjZDllMmRiMDU4NmZhMmZmMThlYzkzM2E2MWE4MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-05-26T08:07:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-05-26T08:07:30Z"}, "message": "re PR target/21716 (ICE in reg-stack.c's swap_rtx_condition)\n\n\tPR target/21716\n\t* reg-stack.c (swap_rtx_condition): Don't crash if %ax user was not\n\tfound in the basic block and last insn in the basic block is not\n\tINSN_P.  Remove explicit unspec numbers that are no longer valid\n\tfrom comments.\n\nFrom-SVN: r100196", "tree": {"sha": "cee22a62967ae8fca3b9a38854c928b8b19ca20a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee22a62967ae8fca3b9a38854c928b8b19ca20a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/383898f7654cd9e2db0586fa2ff18ec933a61a81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383898f7654cd9e2db0586fa2ff18ec933a61a81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383898f7654cd9e2db0586fa2ff18ec933a61a81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383898f7654cd9e2db0586fa2ff18ec933a61a81/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "598b20248f3cde5d55297fe27659e27b2879ab52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598b20248f3cde5d55297fe27659e27b2879ab52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598b20248f3cde5d55297fe27659e27b2879ab52"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "dbf8fc49b6838677ef7649ae924cd0da6b5f40f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383898f7654cd9e2db0586fa2ff18ec933a61a81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383898f7654cd9e2db0586fa2ff18ec933a61a81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=383898f7654cd9e2db0586fa2ff18ec933a61a81", "patch": "@@ -1,3 +1,11 @@\n+2005-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/21716\n+\t* reg-stack.c (swap_rtx_condition): Don't crash if %ax user was not\n+\tfound in the basic block and last insn in the basic block is not\n+\tINSN_P.  Remove explicit unspec numbers that are no longer valid\n+\tfrom comments.\n+\n 2005-05-26  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* tree-vect-transform.c (vectorizable_operation): Try word_mode"}, {"sha": "acf5f41d030b0ff480ca10fbc3d01e85d0e56d27", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383898f7654cd9e2db0586fa2ff18ec933a61a81/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383898f7654cd9e2db0586fa2ff18ec933a61a81/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=383898f7654cd9e2db0586fa2ff18ec933a61a81", "patch": "@@ -1231,9 +1231,9 @@ swap_rtx_condition (rtx insn)\n       pat = PATTERN (insn);\n     }\n \n-  /* See if this is, or ends in, a fnstsw, aka unspec 9.  If so, we're\n-     not doing anything with the cc value right now.  We may be able to\n-     search for one though.  */\n+  /* See if this is, or ends in, a fnstsw.  If so, we're not doing anything\n+     with the cc value right now.  We may be able to search for one\n+     though.  */\n \n   if (GET_CODE (pat) == SET\n       && GET_CODE (SET_SRC (pat)) == UNSPEC\n@@ -1252,9 +1252,13 @@ swap_rtx_condition (rtx insn)\n \t    return 0;\n \t}\n \n+      /* We haven't found it.  */\n+      if (insn == BB_END (current_block))\n+\treturn 0;\n+\n       /* So we've found the insn using this value.  If it is anything\n-\t other than sahf, aka unspec 10, or the value does not die\n-\t (meaning we'd have to search further), then we must give up.  */\n+\t other than sahf or the value does not die (meaning we'd have\n+\t to search further), then we must give up.  */\n       pat = PATTERN (insn);\n       if (GET_CODE (pat) != SET\n \t  || GET_CODE (SET_SRC (pat)) != UNSPEC"}]}