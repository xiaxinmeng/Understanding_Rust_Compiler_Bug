{"sha": "2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMxYjcyZDdiNjU4ZWNlZjJjZDJjYjdiMDlmNWE3ZmNiNDBiM2VhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T07:51:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T07:51:08Z"}, "message": "[multiple changes]\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* par_sco.adb, prj-proc.adb, make.adb, bindgen.adb, prj.adb, prj.ads,\n\tmakeutl.adb, makeutl.ads, prj-nmsc.adb, exp_ch5.adb, exp_ch12.adb,\n\texp_ch7.ads, exp_util.ads, sem_util.ads, g-comlin.ads, exp_ch6.adb,\n\texp_ch6.ads, lib-xref.ads, exp_ch7.adb, exp_util.adb, exp_dist.adb,\n\texp_strm.adb, gnatcmd.adb, freeze.adb, g-comlin.adb, lib-xref-alfa.adb,\n\tsem_attr.adb, sem_prag.adb, sem_util.adb, sem_elab.adb, sem_ch8.adb,\n\tsem_ch11.adb, sem_eval.adb, sem_ch13.adb, sem_disp.adb, a-fihema.adb:\n\tMinor reformatting and code reorganization.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* projects.texi: Added doc for aggregate projects.\n\nFrom-SVN: r177320", "tree": {"sha": "a8ac044fa68b27fb08b03dcef40c1e31eadc0c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8ac044fa68b27fb08b03dcef40c1e31eadc0c99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/comments", "author": null, "committer": null, "parents": [{"sha": "824e9320157031e3969aabe742cfddd38a0513cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824e9320157031e3969aabe742cfddd38a0513cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824e9320157031e3969aabe742cfddd38a0513cd"}], "stats": {"total": 2129, "additions": 1323, "deletions": 806}, "files": [{"sha": "fa4fbdb6c4a00967175084ef438dd9817cf6e28b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1,3 +1,18 @@\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par_sco.adb, prj-proc.adb, make.adb, bindgen.adb, prj.adb, prj.ads,\n+\tmakeutl.adb, makeutl.ads, prj-nmsc.adb, exp_ch5.adb, exp_ch12.adb,\n+\texp_ch7.ads, exp_util.ads, sem_util.ads, g-comlin.ads, exp_ch6.adb,\n+\texp_ch6.ads, lib-xref.ads, exp_ch7.adb, exp_util.adb, exp_dist.adb,\n+\texp_strm.adb, gnatcmd.adb, freeze.adb, g-comlin.adb, lib-xref-alfa.adb,\n+\tsem_attr.adb, sem_prag.adb, sem_util.adb, sem_elab.adb, sem_ch8.adb,\n+\tsem_ch11.adb, sem_eval.adb, sem_ch13.adb, sem_disp.adb, a-fihema.adb:\n+\tMinor reformatting and code reorganization.\n+\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* projects.texi: Added doc for aggregate projects.\n+\n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj-nmsc.adb, prj-env.adb (Process_Declarative_Items):"}, {"sha": "d44d1dbd320a812015bbf55e2399734c0f6d4993", "filename": "gcc/ada/a-fihema.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fa-fihema.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fa-fihema.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-fihema.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -45,6 +45,7 @@ package body Ada.Finalization.Heap_Management is\n \n    Header_Size   : constant Storage_Count  := Node'Size / Storage_Unit;\n    Header_Offset : constant Storage_Offset := Header_Size;\n+   --  Comments needed???\n \n    function Address_To_Node_Ptr is\n      new Ada.Unchecked_Conversion (Address, Node_Ptr);\n@@ -144,6 +145,7 @@ package body Ada.Finalization.Heap_Management is\n       N.Prev := L;\n \n       Unlock_Task.all;\n+\n    exception\n       when others =>\n          Unlock_Task.all;\n@@ -230,6 +232,7 @@ package body Ada.Finalization.Heap_Management is\n       end if;\n \n       Unlock_Task.all;\n+\n    exception\n       when others =>\n          Unlock_Task.all;"}, {"sha": "53abc17c04c08e242ce69719a5ace8d3edafb890", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1224,16 +1224,16 @@ package body Bindgen is\n \n             if U.Set_Elab_Entity\n \n-            --  Don't generate reference for stand alone library\n+              --  Don't generate reference for stand alone library\n \n               and then not U.SAL_Interface\n \n-            --  Don't generate reference for predefined file in No_Run_Time\n-            --  mode, since we don't include the object files in this case\n+              --  Don't generate reference for predefined file in No_Run_Time\n+              --  mode, since we don't include the object files in this case\n \n               and then not\n                 (No_Run_Time_Mode\n-                   and then Is_Predefined_File_Name (U.Sfile))\n+                  and then Is_Predefined_File_Name (U.Sfile))\n             then\n                Set_String (\"   \");\n                Set_String (\"E\");\n@@ -1309,16 +1309,16 @@ package body Bindgen is\n \n             if U.Set_Elab_Entity\n \n-            --  Don't generate reference for stand alone library\n+              --  Don't generate reference for stand alone library\n \n               and then not U.SAL_Interface\n \n-            --  Don't generate reference for predefined file in No_Run_Time\n-            --  mode, since we don't include the object files in this case\n+              --  Don't generate reference for predefined file in No_Run_Time\n+              --  mode, since we don't include the object files in this case\n \n               and then not\n                 (No_Run_Time_Mode\n-                   and then Is_Predefined_File_Name (U.Sfile))\n+                  and then Is_Predefined_File_Name (U.Sfile))\n             then\n                Set_String (\"extern int \");\n                Get_Name_String (U.Uname);\n@@ -1403,9 +1403,9 @@ package body Bindgen is\n             --  since it will be done when we process the body.\n \n             else\n-               if Force_Checking_Of_Elaboration_Flags or\n-                  Interface_Library_Unit or\n-                  (not Bind_Main_Program)\n+               if Force_Checking_Of_Elaboration_Flags\n+                 or Interface_Library_Unit\n+                 or not Bind_Main_Program\n                then\n                   Set_String (\"      if E\");\n                   Set_Unit_Number (Unum_Spec);\n@@ -1445,9 +1445,9 @@ package body Bindgen is\n                Set_Char (';');\n                Write_Statement_Buffer;\n \n-               if Force_Checking_Of_Elaboration_Flags or\n-                  Interface_Library_Unit or\n-                  (not Bind_Main_Program)\n+               if Force_Checking_Of_Elaboration_Flags\n+                 or Interface_Library_Unit\n+                 or not Bind_Main_Program\n                then\n                   WBI (\"      end if;\");\n                end if;\n@@ -1537,9 +1537,9 @@ package body Bindgen is\n             else\n                Get_Name_String (U.Uname);\n \n-               if Force_Checking_Of_Elaboration_Flags or\n-                  Interface_Library_Unit or\n-                  (not Bind_Main_Program)\n+               if Force_Checking_Of_Elaboration_Flags\n+                 or Interface_Library_Unit\n+                 or not Bind_Main_Program\n                then\n                   Set_String (\"   if (\");\n                   Set_Unit_Name;\n@@ -1783,7 +1783,7 @@ package body Bindgen is\n             Set_String (\" - 1;\");\n             Write_Statement_Buffer;\n \n-            if Interface_Library_Unit or (not Bind_Main_Program) then\n+            if Interface_Library_Unit or not Bind_Main_Program then\n                Set_String (\"         if E\");\n                Set_Unit_Number (Unum);\n                Set_String (\" = 0 then\");\n@@ -1796,7 +1796,7 @@ package body Bindgen is\n             Set_Char   (';');\n             Write_Statement_Buffer;\n \n-            if Interface_Library_Unit or (not Bind_Main_Program) then\n+            if Interface_Library_Unit or not Bind_Main_Program then\n                WBI (\"         end if;\");\n             end if;\n \n@@ -1907,7 +1907,7 @@ package body Bindgen is\n             Set_String (\"_E--;\");\n             Write_Statement_Buffer;\n \n-            if Interface_Library_Unit or (not Bind_Main_Program) then\n+            if Interface_Library_Unit or not Bind_Main_Program then\n                Set_String (\"   if (\");\n                Set_Unit_Name;\n                Set_String (\"_E == 0)\");\n@@ -2509,7 +2509,7 @@ package body Bindgen is\n          --  If not spec that has an associated body, then generate a comment\n          --  giving the name of the corresponding object file.\n \n-         if (not Units.Table (Elab_Order.Table (E)).SAL_Interface)\n+         if not Units.Table (Elab_Order.Table (E)).SAL_Interface\n            and then Units.Table (Elab_Order.Table (E)).Utype /= Is_Spec\n          then\n             Get_Name_String\n@@ -3535,8 +3535,9 @@ package body Bindgen is\n \n       WBI (\"   type Version_32 is mod 2 ** 32;\");\n       for U in Units.First .. Units.Last loop\n-         if not Units.Table (U).SAL_Interface and then\n-           ((not Bind_For_Library) or else Units.Table (U).Directly_Scanned)\n+         if not Units.Table (U).SAL_Interface\n+           and then\n+             (not Bind_For_Library or else Units.Table (U).Directly_Scanned)\n          then\n             Increment_Ubuf;\n             WBI (\"   \" & Ubuf & \" : constant Version_32 := 16#\" &\n@@ -3586,8 +3587,9 @@ package body Bindgen is\n    procedure Gen_Versions_C is\n    begin\n       for U in Units.First .. Units.Last loop\n-         if not Units.Table (U).SAL_Interface and then\n-           ((not Bind_For_Library) or else Units.Table (U).Directly_Scanned)\n+         if not Units.Table (U).SAL_Interface\n+           and then\n+             (not Bind_For_Library or else Units.Table (U).Directly_Scanned)\n          then\n             Set_String (\"unsigned \");\n "}, {"sha": "f6c5fc8ce68358166bfe68d01c743e1efa3ed615", "filename": "gcc/ada/exp_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch12.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -62,7 +62,7 @@ package body Exp_Ch12 is\n                  Right_Opnd =>\n                    Make_Attribute_Reference (Loc,\n                      Attribute_Name => Name_Elaborated,\n-                     Prefix => New_Occurrence_Of (Ent, Loc))),\n+                     Prefix         => New_Occurrence_Of (Ent, Loc))),\n              Reason => PE_Access_Before_Elaboration));\n       end if;\n    end Expand_N_Generic_Instantiation;"}, {"sha": "6cbd62898ab0c2fa5ef569c813664715341d619c", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 26, "deletions": 32, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -3538,9 +3538,9 @@ package body Exp_Ch5 is\n \n       else\n          Append_To (Res,\n-           Make_Final_Call (\n-             Obj_Ref => Duplicate_Subexpr_No_Checks (L),\n-             Typ     => Etype (L)));\n+           Make_Final_Call\n+             (Obj_Ref => Duplicate_Subexpr_No_Checks (L),\n+              Typ     => Etype (L)));\n       end if;\n \n       --  Save the Tag in a local variable Tag_Id\n@@ -3551,12 +3551,10 @@ package body Exp_Ch5 is\n          Append_To (Res,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Tag_Id,\n-             Object_Definition =>\n-               New_Reference_To (RTE (RE_Tag), Loc),\n-             Expression =>\n+             Object_Definition   => New_Reference_To (RTE (RE_Tag), Loc),\n+             Expression          =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n-                   Duplicate_Subexpr_No_Checks (L),\n+                 Prefix        => Duplicate_Subexpr_No_Checks (L),\n                  Selector_Name =>\n                    New_Reference_To (First_Tag_Component (T), Loc))));\n \n@@ -3581,11 +3579,11 @@ package body Exp_Ch5 is\n          Append_To (Res,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Prev_Id,\n-             Object_Definition =>\n+             Object_Definition   =>\n                New_Reference_To (RTE (RE_Root_Controlled_Ptr), Loc),\n-             Expression =>\n+             Expression          =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n+                 Prefix        =>\n                    Unchecked_Convert_To\n                      (RTE (RE_Root_Controlled), New_Copy_Tree (L)),\n                  Selector_Name =>\n@@ -3597,11 +3595,11 @@ package body Exp_Ch5 is\n          Append_To (Res,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Next_Id,\n-             Object_Definition =>\n+             Object_Definition   =>\n                New_Reference_To (RTE (RE_Root_Controlled_Ptr), Loc),\n-             Expression =>\n+             Expression          =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n+                 Prefix        =>\n                    Unchecked_Convert_To\n                      (RTE (RE_Root_Controlled), New_Copy_Tree (L)),\n                  Selector_Name =>\n@@ -3625,14 +3623,12 @@ package body Exp_Ch5 is\n       if Save_Tag then\n          Append_To (Res,\n            Make_Assignment_Statement (Loc,\n-             Name =>\n+             Name       =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n-                   Duplicate_Subexpr_No_Checks (L),\n+                 Prefix        => Duplicate_Subexpr_No_Checks (L),\n                  Selector_Name =>\n                    New_Reference_To (First_Tag_Component (T), Loc)),\n-             Expression =>\n-               New_Reference_To (Tag_Id, Loc)));\n+             Expression => New_Reference_To (Tag_Id, Loc)));\n       end if;\n \n       --  Restore the Prev and Next fields on .NET/JVM\n@@ -3645,45 +3641,43 @@ package body Exp_Ch5 is\n \n          Append_To (Res,\n            Make_Assignment_Statement (Loc,\n-             Name =>\n+             Name       =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n+                 Prefix        =>\n                    Unchecked_Convert_To\n                      (RTE (RE_Root_Controlled), New_Copy_Tree (L)),\n                  Selector_Name =>\n                    Make_Identifier (Loc, Name_Prev)),\n-             Expression =>\n-               New_Reference_To (Prev_Id, Loc)));\n+             Expression => New_Reference_To (Prev_Id, Loc)));\n \n          --  Generate:\n          --    Root_Controlled (L).Next := Next_Id;\n \n          Append_To (Res,\n            Make_Assignment_Statement (Loc,\n-             Name =>\n+             Name       =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n+                 Prefix        =>\n                    Unchecked_Convert_To\n                      (RTE (RE_Root_Controlled), New_Copy_Tree (L)),\n-                 Selector_Name =>\n-                   Make_Identifier (Loc, Name_Next)),\n-             Expression =>\n-               New_Reference_To (Next_Id, Loc)));\n+                 Selector_Name => Make_Identifier (Loc, Name_Next)),\n+             Expression => New_Reference_To (Next_Id, Loc)));\n       end if;\n \n       --  Adjust the target after the assignment when controlled (not in the\n       --  init proc since it is an initialization more than an assignment).\n \n       if Ctrl_Act then\n          Append_To (Res,\n-           Make_Adjust_Call (\n-             Obj_Ref => Duplicate_Subexpr_Move_Checks (L),\n-             Typ     => Etype (L)));\n+           Make_Adjust_Call\n+             (Obj_Ref => Duplicate_Subexpr_Move_Checks (L),\n+              Typ     => Etype (L)));\n       end if;\n \n       return Res;\n \n    exception\n+\n       --  Could use comment here ???\n \n       when RE_Not_Available =>"}, {"sha": "eabd3ef086cd264d902a718720a1926f3ef59265", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 84, "deletions": 108, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1790,8 +1790,7 @@ package body Exp_Ch6 is\n       --  called.\n \n       function Is_Direct_Deep_Call (Subp : Entity_Id) return Boolean;\n-      --  Determine whether Subp denotes a non-dispatching call to a Deep\n-      --  routine.\n+      --  Determine if Subp denotes a non-dispatching call to a Deep routine\n \n       function New_Value (From : Node_Id) return Node_Id;\n       --  From is the original Expression. New_Value is equivalent to a call\n@@ -4465,19 +4464,17 @@ package body Exp_Ch6 is\n                Append_To (Decls,\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Pool_Id,\n-                   Subtype_Mark =>\n+                   Subtype_Mark        =>\n                      New_Reference_To (RTE (RE_Root_Storage_Pool), Loc),\n-                   Name =>\n+                   Name                =>\n                      Make_Explicit_Dereference (Loc,\n                        Prefix =>\n                          Make_Function_Call (Loc,\n-                           Name =>\n+                           Name                   =>\n                              New_Reference_To (RTE (RE_Base_Pool), Loc),\n-\n                            Parameter_Associations => New_List (\n                              Make_Explicit_Dereference (Loc,\n-                               Prefix =>\n-                                 New_Reference_To (Collect, Loc)))))));\n+                               Prefix => New_Reference_To (Collect, Loc)))))));\n \n                --  Create an access type which uses the storage pool of the\n                --  caller's collection. This additional type is necessary\n@@ -4493,7 +4490,7 @@ package body Exp_Ch6 is\n                Append_To (Decls,\n                  Make_Full_Type_Declaration (Loc,\n                    Defining_Identifier => Ptr_Typ,\n-                   Type_Definition =>\n+                   Type_Definition     =>\n                      Make_Access_To_Object_Definition (Loc,\n                        Subtype_Indication =>\n                          New_Reference_To (Ret_Typ, Loc))));\n@@ -4514,7 +4511,7 @@ package body Exp_Ch6 is\n                Append_To (Decls,\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Local_Id,\n-                   Object_Definition =>\n+                   Object_Definition   =>\n                      New_Reference_To (Ptr_Typ, Loc)));\n \n                --  Allocate the object, generate:\n@@ -4523,17 +4520,15 @@ package body Exp_Ch6 is\n \n                Append_To (Stmts,\n                  Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     New_Reference_To (Local_Id, Loc),\n+                   Name       => New_Reference_To (Local_Id, Loc),\n                    Expression => Alloc_Expr));\n \n                --  Generate:\n                --    Temp_Id := Temp_Typ (Local_Id);\n \n                Append_To (Stmts,\n                  Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     New_Reference_To (Temp_Id, Loc),\n+                   Name       => New_Reference_To (Temp_Id, Loc),\n                    Expression =>\n                      Unchecked_Convert_To (Temp_Typ,\n                        New_Reference_To (Local_Id, Loc))));\n@@ -4554,16 +4549,14 @@ package body Exp_Ch6 is\n \n                return\n                  Make_If_Statement (Loc,\n-                   Condition =>\n+                   Condition       =>\n                      Make_Op_Ne (Loc,\n-                       Left_Opnd =>\n-                         New_Reference_To (Collect, Loc),\n-                       Right_Opnd =>\n-                         Make_Null (Loc)),\n+                       Left_Opnd  => New_Reference_To (Collect, Loc),\n+                       Right_Opnd => Make_Null (Loc)),\n \n                    Then_Statements => New_List (\n                      Make_Block_Statement (Loc,\n-                       Declarations => Decls,\n+                       Declarations               => Decls,\n                        Handled_Statement_Sequence =>\n                          Make_Handled_Sequence_Of_Statements (Loc,\n                            Statements => Stmts))));\n@@ -4576,8 +4569,7 @@ package body Exp_Ch6 is\n          else\n             return\n               Make_Assignment_Statement (Loc,\n-                Name =>\n-                  New_Reference_To (Temp_Id, Loc),\n+                Name       => New_Reference_To (Temp_Id, Loc),\n                 Expression => Alloc_Expr);\n          end if;\n       end Build_Heap_Allocator;\n@@ -4616,7 +4608,7 @@ package body Exp_Ch6 is\n \n          return\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n+             Name                   =>\n                New_Reference_To (RTE (RE_Move_Activation_Chain), Loc),\n              Parameter_Associations => New_List (From, To, New_Master));\n       end Move_Activation_Chain;\n@@ -4666,10 +4658,9 @@ package body Exp_Ch6 is\n             Flag_Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Flag_Id,\n-                Object_Definition =>\n-                  New_Reference_To (Standard_Boolean, Loc),\n-                Expression =>\n-                  New_Reference_To (Standard_False, Loc));\n+                  Object_Definition =>\n+                    New_Reference_To (Standard_Boolean, Loc),\n+                  Expression        => New_Reference_To (Standard_False, Loc));\n \n             Prepend_To (Declarations (Func_Bod), Flag_Decl);\n             Analyze (Flag_Decl);\n@@ -4695,7 +4686,7 @@ package body Exp_Ch6 is\n          else\n             Stmts := New_List (\n               Make_Block_Statement (Loc,\n-                Declarations => New_List,\n+                Declarations               => New_List,\n                 Handled_Statement_Sequence => HSS));\n          end if;\n \n@@ -4710,7 +4701,7 @@ package body Exp_Ch6 is\n          --  the case of result types with task parts.\n \n          if Is_Build_In_Place\n-           and Has_Task (Etype (Par_Func))\n+           and then Has_Task (Etype (Par_Func))\n          then\n             Append_To (Stmts, Move_Activation_Chain);\n          end if;\n@@ -4730,19 +4721,16 @@ package body Exp_Ch6 is\n \n                Append_To (Stmts,\n                  Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     New_Reference_To (Flag_Id, Loc),\n-                   Expression =>\n-                     New_Reference_To (Standard_True, Loc)));\n+                   Name       => New_Reference_To (Flag_Id, Loc),\n+                   Expression => New_Reference_To (Standard_True, Loc)));\n             end;\n          end if;\n \n          --  Build a simple_return_statement that returns the return object\n \n          Return_Stmt :=\n            Make_Simple_Return_Statement (Loc,\n-             Expression =>\n-               New_Occurrence_Of (Ret_Obj_Id, Loc));\n+             Expression => New_Occurrence_Of (Ret_Obj_Id, Loc));\n          Append_To (Stmts, Return_Stmt);\n \n          HSS := Make_Handled_Sequence_Of_Statements (Loc, Stmts);\n@@ -4753,7 +4741,7 @@ package body Exp_Ch6 is\n       if Present (HSS) then\n          Result :=\n            Make_Block_Statement (Loc,\n-             Declarations => Return_Object_Declarations (N),\n+             Declarations               => Return_Object_Declarations (N),\n              Handled_Statement_Sequence => HSS);\n \n          --  We set the entity of the new block statement to be that of the\n@@ -4777,8 +4765,8 @@ package body Exp_Ch6 is\n          then\n             pragma Assert\n               (Nkind (Original_Node (Ret_Obj_Decl)) = N_Object_Declaration\n-                 and then Is_Build_In_Place_Function_Call\n-                            (Expression (Original_Node (Ret_Obj_Decl))));\n+                and then Is_Build_In_Place_Function_Call\n+                           (Expression (Original_Node (Ret_Obj_Decl))));\n \n             --  Return the build-in-place result by reference\n \n@@ -4853,10 +4841,8 @@ package body Exp_Ch6 is\n                then\n                   Init_Assignment :=\n                     Make_Assignment_Statement (Loc,\n-                      Name =>\n-                        New_Reference_To (Return_Obj_Id, Loc),\n-                      Expression =>\n-                        Relocate_Node (Return_Obj_Expr));\n+                      Name       => New_Reference_To (Return_Obj_Id, Loc),\n+                      Expression => Relocate_Node (Return_Obj_Expr));\n \n                   Set_Etype (Name (Init_Assignment), Etype (Return_Obj_Id));\n                   Set_Assignment_OK (Name (Init_Assignment));\n@@ -4875,7 +4861,7 @@ package body Exp_Ch6 is\n                        Make_Type_Conversion (Loc,\n                          Subtype_Mark =>\n                            New_Occurrence_Of (Etype (Return_Obj_Id), Loc),\n-                         Expression =>\n+                         Expression   =>\n                            Relocate_Node (Expression (Init_Assignment))));\n                   end if;\n \n@@ -4942,9 +4928,9 @@ package body Exp_Ch6 is\n                      Ptr_Type_Decl :=\n                        Make_Full_Type_Declaration (Loc,\n                          Defining_Identifier => Ref_Type,\n-                         Type_Definition =>\n+                         Type_Definition     =>\n                            Make_Access_To_Object_Definition (Loc,\n-                             All_Present => True,\n+                             All_Present        => True,\n                              Subtype_Indication =>\n                                New_Reference_To (Return_Obj_Typ, Loc)));\n \n@@ -4961,7 +4947,7 @@ package body Exp_Ch6 is\n                      Alloc_Obj_Decl :=\n                        Make_Object_Declaration (Loc,\n                          Defining_Identifier => Alloc_Obj_Id,\n-                         Object_Definition =>\n+                         Object_Definition   =>\n                            New_Reference_To (Ref_Type, Loc));\n \n                      Insert_Before (Ret_Obj_Decl, Alloc_Obj_Decl);\n@@ -4988,7 +4974,7 @@ package body Exp_Ch6 is\n                                 Subtype_Mark =>\n                                   New_Reference_To\n                                     (Etype (Return_Obj_Expr), Loc),\n-                                Expression =>\n+                                Expression   =>\n                                   New_Copy_Tree (Return_Obj_Expr)));\n \n                      else\n@@ -5089,7 +5075,7 @@ package body Exp_Ch6 is\n                        Make_If_Statement (Loc,\n                          Condition =>\n                            Make_Op_Eq (Loc,\n-                             Left_Opnd =>\n+                             Left_Opnd  =>\n                                New_Reference_To (Obj_Alloc_Formal, Loc),\n                              Right_Opnd =>\n                                Make_Integer_Literal (Loc,\n@@ -5098,20 +5084,20 @@ package body Exp_Ch6 is\n \n                          Then_Statements => New_List (\n                            Make_Assignment_Statement (Loc,\n-                             Name =>\n+                             Name       =>\n                                New_Reference_To (Alloc_Obj_Id, Loc),\n                              Expression =>\n                                Make_Unchecked_Type_Conversion (Loc,\n                                  Subtype_Mark =>\n                                    New_Reference_To (Ref_Type, Loc),\n-                                 Expression =>\n+                                 Expression   =>\n                                    New_Reference_To (Object_Access, Loc)))),\n \n                          Elsif_Parts => New_List (\n                            Make_Elsif_Part (Loc,\n                              Condition =>\n                                Make_Op_Eq (Loc,\n-                                 Left_Opnd =>\n+                                 Left_Opnd  =>\n                                    New_Reference_To (Obj_Alloc_Formal, Loc),\n                                  Right_Opnd =>\n                                    Make_Integer_Literal (Loc,\n@@ -5120,7 +5106,7 @@ package body Exp_Ch6 is\n \n                              Then_Statements => New_List (\n                                Make_Assignment_Statement (Loc,\n-                                 Name =>\n+                                 Name       =>\n                                    New_Reference_To (Alloc_Obj_Id, Loc),\n                                  Expression => SS_Allocator)))),\n \n@@ -5143,15 +5129,13 @@ package body Exp_Ch6 is\n                      if Present (Init_Assignment) then\n                         Rewrite (Name (Init_Assignment),\n                           Make_Explicit_Dereference (Loc,\n-                            Prefix =>\n-                              New_Reference_To (Alloc_Obj_Id, Loc)));\n+                            Prefix => New_Reference_To (Alloc_Obj_Id, Loc)));\n \n                         Set_Etype\n                           (Name (Init_Assignment), Etype (Return_Obj_Id));\n \n                         Append_To\n-                          (Then_Statements (Alloc_If_Stmt),\n-                           Init_Assignment);\n+                          (Then_Statements (Alloc_If_Stmt), Init_Assignment);\n                      end if;\n \n                      Insert_Before (Ret_Obj_Decl, Alloc_If_Stmt);\n@@ -5169,16 +5153,15 @@ package body Exp_Ch6 is\n \n                Obj_Acc_Deref :=\n                  Make_Explicit_Dereference (Loc,\n-                   Prefix =>\n-                     New_Reference_To (Object_Access, Loc));\n+                   Prefix => New_Reference_To (Object_Access, Loc));\n \n                Rewrite (Ret_Obj_Decl,\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Return_Obj_Id,\n-                   Access_Definition => Empty,\n-                   Subtype_Mark =>\n+                   Access_Definition   => Empty,\n+                   Subtype_Mark        =>\n                      New_Occurrence_Of (Return_Obj_Typ, Loc),\n-                   Name => Obj_Acc_Deref));\n+                   Name                => Obj_Acc_Deref));\n \n                Set_Renamed_Object (Return_Obj_Id, Obj_Acc_Deref);\n             end;\n@@ -5358,10 +5341,8 @@ package body Exp_Ch6 is\n               and then not Comes_From_Source (Parent (S))\n             then\n                Loc := Sloc (Last_Stm);\n-\n             elsif Present (End_Label (H)) then\n                Loc := Sloc (End_Label (H));\n-\n             else\n                Loc := Sloc (Last_Stm);\n             end if;\n@@ -5580,8 +5561,7 @@ package body Exp_Ch6 is\n             Set_Declarations (N, Empty_List);\n             Set_Handled_Statement_Sequence (N,\n               Make_Handled_Sequence_Of_Statements (Loc,\n-                Statements => New_List (\n-                  Make_Null_Statement (Loc))));\n+                Statements => New_List (Make_Null_Statement (Loc))));\n             return;\n          end if;\n       end if;\n@@ -5935,11 +5915,10 @@ package body Exp_Ch6 is\n                New_Reference_To (RTE (RE_Complete_Entry_Body), Loc),\n              Parameter_Associations => New_List (\n                Make_Attribute_Reference (Loc,\n-                 Prefix =>\n+                 Prefix         =>\n                    New_Reference_To\n                      (Find_Protection_Object (Current_Scope), Loc),\n-                 Attribute_Name =>\n-                   Name_Unchecked_Access)));\n+                 Attribute_Name => Name_Unchecked_Access)));\n \n          Insert_Before (N, Call);\n          Analyze (Call);\n@@ -6020,7 +5999,7 @@ package body Exp_Ch6 is\n             Decls := New_List (\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Obj_Ptr,\n-                  Type_Definition =>\n+                  Type_Definition   =>\n                      Make_Access_To_Object_Definition (Loc,\n                        Subtype_Indication =>\n                          New_Reference_To\n@@ -6031,8 +6010,9 @@ package body Exp_Ch6 is\n \n             Rec :=\n               Make_Explicit_Dereference (Loc,\n-                Unchecked_Convert_To (Obj_Ptr,\n-                  New_Occurrence_Of (Param, Loc)));\n+                Prefix =>\n+                  Unchecked_Convert_To (Obj_Ptr,\n+                    New_Occurrence_Of (Param, Loc)));\n \n             --  Analyze new actual. Other actuals in calls are already analyzed\n             --  and the list of actuals is not reanalyzed after rewriting.\n@@ -6057,14 +6037,13 @@ package body Exp_Ch6 is\n       Rec   : Node_Id;\n \n    begin\n-      --  If the protected object is not an enclosing scope, this is\n-      --  an inter-object function call. Inter-object procedure\n-      --  calls are expanded by Exp_Ch9.Build_Simple_Entry_Call.\n-      --  The call is intra-object only if the subprogram being\n-      --  called is in the protected body being compiled, and if the\n-      --  protected object in the call is statically the enclosing type.\n-      --  The object may be an component of some other data structure,\n-      --  in which case this must be handled as an inter-object call.\n+      --  If the protected object is not an enclosing scope, this is an\n+      --  inter-object function call. Inter-object procedure calls are expanded\n+      --  by Exp_Ch9.Build_Simple_Entry_Call. The call is intra-object only if\n+      --  the subprogram being called is in the protected body being compiled,\n+      --  and if the protected object in the call is statically the enclosing\n+      --  type. The object may be an component of some other data structure, in\n+      --  which case this must be handled as an inter-object call.\n \n       if not In_Open_Scopes (Scop)\n         or else not Is_Entity_Name (Name (N))\n@@ -6078,8 +6057,8 @@ package body Exp_Ch6 is\n          end if;\n \n          Build_Protected_Subprogram_Call (N,\n-           Name => New_Occurrence_Of (Subp, Sloc (N)),\n-           Rec =>  Convert_Concurrent (Rec, Etype (Rec)),\n+           Name     => New_Occurrence_Of (Subp, Sloc (N)),\n+           Rec      =>  Convert_Concurrent (Rec, Etype (Rec)),\n            External => True);\n \n       else\n@@ -6431,15 +6410,16 @@ package body Exp_Ch6 is\n               Make_Raise_Constraint_Error (Loc,\n                 Condition =>\n                   Make_Op_Ne (Loc,\n-                    Left_Opnd =>\n+                    Left_Opnd  =>\n                       Make_Selected_Component (Loc,\n                         Prefix        => Duplicate_Subexpr (Exp),\n                         Selector_Name => Make_Identifier (Loc, Name_uTag)),\n                     Right_Opnd =>\n                       Make_Attribute_Reference (Loc,\n-                        Prefix => New_Occurrence_Of (Base_Type (Utyp), Loc),\n+                        Prefix         =>\n+                          New_Occurrence_Of (Base_Type (Utyp), Loc),\n                         Attribute_Name => Name_Tag)),\n-                Reason => CE_Tag_Check_Failed));\n+                Reason    => CE_Tag_Check_Failed));\n \n          --  If the result type is a specific nonlimited tagged type, then we\n          --  have to ensure that the tag of the result is that of the result\n@@ -6494,7 +6474,7 @@ package body Exp_Ch6 is\n             or else Nkind_In (Exp, N_Type_Conversion,\n                                    N_Unchecked_Type_Conversion)\n             or else (Is_Entity_Name (Exp)\n-                       and then Ekind (Entity (Exp)) in Formal_Kind)\n+                      and then Ekind (Entity (Exp)) in Formal_Kind)\n             or else Scope_Depth (Enclosing_Dynamic_Scope (Etype (Exp))) >\n                       Scope_Depth (Enclosing_Dynamic_Scope (Scope_Id)))\n       then\n@@ -6512,25 +6492,26 @@ package body Exp_Ch6 is\n             then\n                Tag_Node :=\n                  Make_Explicit_Dereference (Loc,\n-                   Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n-                     Make_Function_Call (Loc,\n-                       Name => New_Reference_To (RTE (RE_Base_Address), Loc),\n-                       Parameter_Associations => New_List (\n-                         Unchecked_Convert_To (RTE (RE_Address),\n-                           Duplicate_Subexpr (Prefix (Exp)))))));\n+                   Prefix =>\n+                     Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n+                       Make_Function_Call (Loc,\n+                         Name                   =>\n+                           New_Reference_To (RTE (RE_Base_Address), Loc),\n+                         Parameter_Associations => New_List (\n+                           Unchecked_Convert_To (RTE (RE_Address),\n+                             Duplicate_Subexpr (Prefix (Exp)))))));\n             else\n                Tag_Node :=\n                  Make_Attribute_Reference (Loc,\n-                   Prefix => Duplicate_Subexpr (Exp),\n+                   Prefix         => Duplicate_Subexpr (Exp),\n                    Attribute_Name => Name_Tag);\n             end if;\n \n             Insert_Action (Exp,\n               Make_Raise_Program_Error (Loc,\n                 Condition =>\n                   Make_Op_Gt (Loc,\n-                    Left_Opnd =>\n-                      Build_Get_Access_Level (Loc, Tag_Node),\n+                    Left_Opnd  => Build_Get_Access_Level (Loc, Tag_Node),\n                     Right_Opnd =>\n                       Make_Integer_Literal (Loc,\n                         Scope_Depth (Enclosing_Dynamic_Scope (Scope_Id)))),\n@@ -6587,7 +6568,7 @@ package body Exp_Ch6 is\n                 Constant_Present    => True,\n                 Object_Definition   => New_Occurrence_Of (R_Type, Loc),\n                 Expression          => ExpR),\n-              Suppress            => All_Checks);\n+              Suppress => All_Checks);\n             Rewrite (Exp, New_Occurrence_Of (Tnn, Loc));\n          end;\n       end if;\n@@ -6612,7 +6593,7 @@ package body Exp_Ch6 is\n                                   N_Integer_Literal,\n                                   N_Real_Literal)\n            or else (Nkind (Exp) = N_Explicit_Dereference\n-                      and then Is_Entity_Name (Prefix (Exp)))\n+                     and then Is_Entity_Name (Prefix (Exp)))\n          then\n             null;\n \n@@ -7465,9 +7446,9 @@ package body Exp_Ch6 is\n       Ptr_Typ_Decl :=\n         Make_Full_Type_Declaration (Loc,\n           Defining_Identifier => Ptr_Typ,\n-          Type_Definition =>\n+          Type_Definition     =>\n             Make_Access_To_Object_Definition (Loc,\n-              All_Present => True,\n+              All_Present        => True,\n               Subtype_Indication =>\n                 New_Reference_To (Result_Subt, Loc)));\n       Insert_After_And_Analyze (Assign, Ptr_Typ_Decl);\n@@ -7481,11 +7462,8 @@ package body Exp_Ch6 is\n       Obj_Decl :=\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Obj_Id,\n-          Object_Definition =>\n-            New_Reference_To (Ptr_Typ, Loc),\n-          Expression =>\n-            Make_Reference (Loc,\n-              Prefix => Relocate_Node (Func_Call)));\n+          Object_Definition   => New_Reference_To (Ptr_Typ, Loc),\n+          Expression => Make_Reference (Loc, Relocate_Node (Func_Call)));\n       Insert_After_And_Analyze (Ptr_Typ_Decl, Obj_Decl);\n \n       Rewrite (Assign, Make_Null_Statement (Loc));\n@@ -7693,9 +7671,9 @@ package body Exp_Ch6 is\n       Ptr_Typ_Decl :=\n         Make_Full_Type_Declaration (Loc,\n           Defining_Identifier => Ref_Type,\n-          Type_Definition =>\n+          Type_Definition     =>\n             Make_Access_To_Object_Definition (Loc,\n-              All_Present => True,\n+              All_Present        => True,\n               Subtype_Indication =>\n                 New_Reference_To (Etype (Function_Call), Loc)));\n \n@@ -7715,9 +7693,7 @@ package body Exp_Ch6 is\n       --  Finally, create an access object initialized to a reference to the\n       --  function call.\n \n-      New_Expr :=\n-        Make_Reference (Loc,\n-          Prefix => Relocate_Node (Func_Call));\n+      New_Expr := Make_Reference (Loc, Relocate_Node (Func_Call));\n \n       Def_Id := Make_Temporary (Loc, 'R', New_Expr);\n       Set_Etype (Def_Id, Ref_Type);"}, {"sha": "0c50667d9938059887f088a498463626a3bd97c4", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -83,9 +83,9 @@ package Exp_Ch6 is\n       --  Present for all build-in-place functions. Address at which to place\n       --  the return object, or null if BIP_Alloc_Form indicates allocated by\n       --  callee.\n-      --  ??? We also need to be able to pass in some way to access a\n-      --  user-defined storage pool at some point. And perhaps a constrained\n-      --  flag.\n+      --\n+      --  ??? We also need to be able to pass in some way to access a user-\n+      --  defined storage pool at some point. And perhaps a constrained flag.\n \n    function BIP_Formal_Suffix (Kind : BIP_Formal_Kind) return String;\n    --  Ada 2005 (AI-318-02): Returns a string to be used as the suffix of names"}, {"sha": "cd17b0f1179daf16a70e8d344d0e3cb6577b5da6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 189, "deletions": 275, "changes": 464, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -286,7 +286,6 @@ package body Exp_Ch7 is\n                      Adjust_Case     => Name_Adjust,\n                      Finalize_Case   => Name_Finalize,\n                      Address_Case    => Name_Finalize_Address);\n-\n    Deep_Name_Of : constant array (Final_Primitives) of TSS_Name_Type :=\n                     (Initialize_Case => TSS_Deep_Initialize,\n                      Adjust_Case     => TSS_Deep_Adjust,\n@@ -473,10 +472,10 @@ package body Exp_Ch7 is\n \n       if VM_Target = No_VM then\n          Set_TSS (Typ,\n-           Make_Deep_Proc (\n-             Prim  => Address_Case,\n-             Typ   => Typ,\n-             Stmts => Make_Deep_Array_Body (Address_Case, Typ)));\n+           Make_Deep_Proc\n+             (Prim  => Address_Case,\n+              Typ   => Typ,\n+              Stmts => Make_Deep_Array_Body (Address_Case, Typ)));\n       end if;\n    end Build_Array_Deep_Procs;\n \n@@ -499,6 +498,7 @@ package body Exp_Ch7 is\n                                  and then Is_Task_Allocation_Block (N);\n       Is_Task_Body         : constant Boolean :=\n                                Nkind (Original_Node (N)) = N_Task_Body;\n+\n       Loc   : constant Source_Ptr := Sloc (N);\n       Stmts : constant List_Id    := New_List;\n \n@@ -569,12 +569,12 @@ package body Exp_Ch7 is\n \n                Append_To (Stmts,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name => Nam,\n+                   Name                   => Nam,\n                    Parameter_Associations => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix =>\n+                       Prefix         =>\n                          Make_Selected_Component (Loc,\n-                           Prefix => New_Reference_To (\n+                           Prefix        => New_Reference_To (\n                              Defining_Identifier (Param), Loc),\n                            Selector_Name =>\n                              Make_Identifier (Loc, Name_uObject)),\n@@ -600,12 +600,12 @@ package body Exp_Ch7 is\n \n                Append_To (Stmts,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name => Nam,\n+                   Name                   => Nam,\n                    Parameter_Associations => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix =>\n+                       Prefix         =>\n                          Make_Selected_Component (Loc,\n-                           Prefix =>\n+                           Prefix        =>\n                              New_Reference_To\n                                (Defining_Identifier (Param), Loc),\n                            Selector_Name =>\n@@ -619,7 +619,7 @@ package body Exp_Ch7 is\n             if Abort_Allowed then\n                Append_To (Stmts,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n+                   Name                   =>\n                      New_Reference_To (RTE (RE_Abort_Undefer), Loc),\n                    Parameter_Associations => Empty_List));\n             end if;\n@@ -643,8 +643,8 @@ package body Exp_Ch7 is\n          Append_To (Stmts,\n            Make_Procedure_Call_Statement (Loc,\n              Name =>\n-               New_Reference_To (\n-                 RTE (RE_Expunge_Unactivated_Tasks), Loc),\n+               New_Reference_To\n+                 (RTE (RE_Expunge_Unactivated_Tasks), Loc),\n              Parameter_Associations => New_List (\n                New_Reference_To (Activation_Chain_Entity (N), Loc))));\n \n@@ -671,16 +671,16 @@ package body Exp_Ch7 is\n                  Make_If_Statement (Loc,\n                    Condition =>\n                      Make_Function_Call (Loc,\n-                       Name =>\n+                       Name                   =>\n                          New_Reference_To (RTE (RE_Enqueued), Loc),\n                        Parameter_Associations => New_List (\n                          New_Reference_To (Cancel_Param, Loc))),\n \n                    Then_Statements => New_List (\n                      Make_Procedure_Call_Statement (Loc,\n                        Name =>\n-                         New_Reference_To (\n-                           RTE (RE_Cancel_Protected_Entry_Call), Loc),\n+                         New_Reference_To\n+                           (RTE (RE_Cancel_Protected_Entry_Call), Loc),\n                          Parameter_Associations => New_List (\n                            New_Reference_To (Cancel_Param, Loc))))));\n \n@@ -690,11 +690,11 @@ package body Exp_Ch7 is\n             elsif Is_RTE (Etype (Cancel_Param), RE_Delay_Block) then\n                Append_To (Stmts,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n+                   Name                   =>\n                      New_Reference_To (RTE (RE_Cancel_Async_Delay), Loc),\n                    Parameter_Associations => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix =>\n+                       Prefix         =>\n                          New_Reference_To (Cancel_Param, Loc),\n                        Attribute_Name => Name_Unchecked_Access))));\n \n@@ -704,7 +704,7 @@ package body Exp_Ch7 is\n             else\n                Append_To (Stmts,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n+                   Name                   =>\n                      New_Reference_To (RTE (RE_Cancel_Task_Entry_Call), Loc),\n                    Parameter_Associations => New_List (\n                      New_Reference_To (Cancel_Param, Loc))));\n@@ -723,7 +723,6 @@ package body Exp_Ch7 is\n    begin\n       if Is_Array_Type (Typ) then\n          Build_Array_Deep_Procs (Typ);\n-\n       else pragma Assert (Is_Record_Type (Typ));\n          Build_Record_Deep_Procs (Typ);\n       end if;\n@@ -3298,10 +3297,9 @@ package body Exp_Ch7 is\n       else\n          return\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n+             Name                   =>\n                New_Reference_To (RTE (RE_Finalize_Protection), Loc),\n-             Parameter_Associations =>\n-               New_List (Concurrent_Ref (Ref)));\n+             Parameter_Associations => New_List (Concurrent_Ref (Ref)));\n       end if;\n    end Cleanup_Protected_Object;\n \n@@ -3314,6 +3312,7 @@ package body Exp_Ch7 is\n       Ref : Node_Id) return Node_Id\n    is\n       Loc  : constant Source_Ptr := Sloc (N);\n+\n    begin\n       --  For restricted run-time libraries (Ravenscar), tasks are\n       --  non-terminating and they can only appear at library level, so we do\n@@ -3325,10 +3324,9 @@ package body Exp_Ch7 is\n       else\n          return\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n+             Name                   =>\n                New_Reference_To (RTE (RE_Free_Task), Loc),\n-             Parameter_Associations =>\n-               New_List (Concurrent_Ref (Ref)));\n+             Parameter_Associations => New_List (Concurrent_Ref (Ref)));\n       end if;\n    end Cleanup_Task;\n \n@@ -3442,9 +3440,10 @@ package body Exp_Ch7 is\n    ------------------------\n \n    function Enclosing_Function (E : Entity_Id) return Entity_Id is\n-      Func_Id : Entity_Id := E;\n+      Func_Id : Entity_Id;\n \n    begin\n+      Func_Id := E;\n       while Present (Func_Id)\n         and then Func_Id /= Standard_Standard\n       loop\n@@ -3866,14 +3865,15 @@ package body Exp_Ch7 is\n    --  appear.\n \n    procedure Expand_N_Package_Declaration (N : Node_Id) is\n-      Id      : constant Entity_Id := Defining_Entity (N);\n-      Spec    : constant Node_Id   := Specification (N);\n-      Decls   : List_Id;\n-      Fin_Id  : Entity_Id;\n+      Id     : constant Entity_Id := Defining_Entity (N);\n+      Spec   : constant Node_Id   := Specification (N);\n+      Decls  : List_Id;\n+      Fin_Id : Entity_Id;\n+\n       No_Body : Boolean := False;\n-      --  True in the case of a package declaration that is a compilation unit\n-      --  and for which no associated body will be compiled in\n-      --  this compilation.\n+      --  True in the case of a package declaration that is a compilation\n+      --  unit and for which no associated body will be compiled in this\n+      --  compilation.\n \n    begin\n       --  Case of a package declaration other than a compilation unit\n@@ -3889,10 +3889,9 @@ package body Exp_Ch7 is\n          No_Body := True;\n \n       --  Special case of generating calling stubs for a remote call interface\n-      --  package: even though the package declaration requires one, the\n-      --  body won't be processed in this compilation (so any stubs for RACWs\n-      --  declared in the package must be generated here, along with the\n-      --  spec).\n+      --  package: even though the package declaration requires one, the body\n+      --  won't be processed in this compilation (so any stubs for RACWs\n+      --  declared in the package must be generated here, along with the spec).\n \n       elsif Parent (N) = Cunit (Main_Unit)\n         and then Is_Remote_Call_Interface (Id)\n@@ -4224,9 +4223,9 @@ package body Exp_Ch7 is\n       Before : List_Id renames SE.Actions_To_Be_Wrapped_Before;\n \n       procedure Process_Transient_Objects\n-        (First_Object  : Node_Id;\n-         Last_Object   : Node_Id;\n-         Related_Node  : Node_Id);\n+        (First_Object : Node_Id;\n+         Last_Object  : Node_Id;\n+         Related_Node : Node_Id);\n       --  First_Object and Last_Object define a list which contains potential\n       --  controlled transient objects. Finalization flags are inserted before\n       --  First_Object and finalization calls are inserted after Last_Object.\n@@ -4238,9 +4237,9 @@ package body Exp_Ch7 is\n       -------------------------------\n \n       procedure Process_Transient_Objects\n-        (First_Object  : Node_Id;\n-         Last_Object   : Node_Id;\n-         Related_Node  : Node_Id)\n+        (First_Object : Node_Id;\n+         Last_Object  : Node_Id;\n+         Related_Node : Node_Id)\n       is\n          Abort_Id  : Entity_Id;\n          Built     : Boolean := False;\n@@ -4264,8 +4263,8 @@ package body Exp_Ch7 is\n               and then Analyzed (Stmt)\n               and then Is_Finalizable_Transient (Stmt, N)\n \n-               --  Do not process the node to be wrapped since it will be\n-               --  handled by the enclosing finalizer.\n+              --  Do not process the node to be wrapped since it will be\n+              --  handled by the enclosing finalizer.\n \n               and then Stmt /= Related_Node\n             then\n@@ -4321,9 +4320,9 @@ package body Exp_Ch7 is\n                    Handled_Statement_Sequence =>\n                      Make_Handled_Sequence_Of_Statements (Loc,\n                        Statements => New_List (\n-                         Make_Final_Call (\n-                           Obj_Ref => Obj_Ref,\n-                           Typ     => Desig)),\n+                         Make_Final_Call\n+                           (Obj_Ref => Obj_Ref,\n+                            Typ     => Desig)),\n \n                        Exception_Handlers => New_List (\n                          Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n@@ -4402,12 +4401,12 @@ package body Exp_Ch7 is\n \n          --  Add all actions associated with a transient scope into the main\n          --  tree. There are several scenarios here:\n-         --\n+\n          --       +--- Before ----+        +----- After ---+\n          --    1) First_Obj ....... Target ........ Last_Obj\n-         --\n+\n          --    2) First_Obj ....... Target\n-         --\n+\n          --    3)                   Target ........ Last_Obj\n \n          if Present (Before) then\n@@ -4572,11 +4571,10 @@ package body Exp_Ch7 is\n       Ptr_Typ : Entity_Id) return Node_Id\n    is\n       Loc : constant Source_Ptr := Sloc (Obj_Ref);\n-\n    begin\n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name =>\n+          Name                   =>\n             New_Reference_To (RTE (RE_Attach), Loc),\n           Parameter_Associations => New_List (\n             New_Reference_To (Associated_Collection (Ptr_Typ), Loc),\n@@ -4593,7 +4591,7 @@ package body Exp_Ch7 is\n    begin\n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name =>\n+          Name                   =>\n             New_Reference_To (RTE (RE_Detach), Loc),\n           Parameter_Associations => New_List (\n             Unchecked_Convert_To (RTE (RE_Root_Controlled_Ptr), Obj_Ref)));\n@@ -4622,8 +4620,7 @@ package body Exp_Ch7 is\n \n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name =>\n-            New_Reference_To (Proc_Id, Loc),\n+          Name                   => New_Reference_To (Proc_Id, Loc),\n           Parameter_Associations => Params);\n    end Make_Call;\n \n@@ -4810,29 +4807,21 @@ package body Exp_Ch7 is\n \n          Comp_Ref :=\n            Make_Indexed_Component (Loc,\n-             Prefix =>\n-               Make_Identifier (Loc, Name_V),\n-             Expressions =>\n-               New_References_To (Index_List, Loc));\n+             Prefix      => Make_Identifier (Loc, Name_V),\n+             Expressions => New_References_To (Index_List, Loc));\n          Set_Etype (Comp_Ref, Comp_Typ);\n \n          --  Generate:\n          --    [Deep_]Adjust (V (J1, ..., JN))\n \n          if Prim = Adjust_Case then\n-            Call :=\n-              Make_Adjust_Call (\n-                Obj_Ref => Comp_Ref,\n-                Typ     => Comp_Typ);\n+            Call := Make_Adjust_Call (Obj_Ref => Comp_Ref, Typ => Comp_Typ);\n \n          --  Generate:\n          --    [Deep_]Finalize (V (J1, ..., JN))\n \n          else pragma Assert (Prim = Finalize_Case);\n-            Call :=\n-              Make_Final_Call (\n-                Obj_Ref => Comp_Ref,\n-                Typ     => Comp_Typ);\n+            Call := Make_Final_Call (Obj_Ref => Comp_Ref, Typ => Comp_Typ);\n          end if;\n \n          --  Generate the block which houses the adjust or finalize call:\n@@ -4855,10 +4844,9 @@ package body Exp_Ch7 is\n               Make_Block_Statement (Loc,\n                 Handled_Statement_Sequence =>\n                   Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => New_List (Call),\n-\n-                  Exception_Handlers => New_List (\n-                    Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n+                    Statements         => New_List (Call),\n+                    Exception_Handlers => New_List (\n+                      Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n          else\n             Core_Loop := Call;\n          end if;\n@@ -4884,14 +4872,12 @@ package body Exp_Ch7 is\n                   Make_Iteration_Scheme (Loc,\n                     Loop_Parameter_Specification =>\n                       Make_Loop_Parameter_Specification (Loc,\n-                        Defining_Identifier => Loop_Id,\n+                        Defining_Identifier         => Loop_Id,\n                         Discrete_Subtype_Definition =>\n                           Make_Attribute_Reference (Loc,\n-                            Prefix =>\n-                              Make_Identifier (Loc, Name_V),\n-                            Attribute_Name =>\n-                              Name_Range,\n-                            Expressions => New_List (\n+                            Prefix         => Make_Identifier (Loc, Name_V),\n+                            Attribute_Name => Name_Range,\n+                            Expressions    => New_List (\n                               Make_Integer_Literal (Loc, Dim))),\n \n                         Reverse_Present => Prim = Finalize_Case)),\n@@ -4934,11 +4920,10 @@ package body Exp_Ch7 is\n          return\n            New_List (\n              Make_Block_Statement (Loc,\n-               Declarations =>\n+               Declarations               =>\n                  Build_Object_Declarations (Loc, Abort_Id, E_Id, Raised_Id),\n                Handled_Statement_Sequence =>\n-                 Make_Handled_Sequence_Of_Statements (Loc,\n-                   Statements => Stmts)));\n+                 Make_Handled_Sequence_Of_Statements (Loc, Stmts)));\n       end Build_Adjust_Or_Finalize_Statements;\n \n       ---------------------------------\n@@ -5013,15 +4998,12 @@ package body Exp_Ch7 is\n             while Dim <= Num_Dims loop\n                Expr :=\n                  Make_Op_Multiply (Loc,\n-                   Left_Opnd =>\n-                     Expr,\n+                   Left_Opnd  => Expr,\n                    Right_Opnd =>\n                      Make_Attribute_Reference (Loc,\n-                       Prefix =>\n-                         Make_Identifier (Loc, Name_V),\n-                       Attribute_Name =>\n-                         Name_Length,\n-                       Expressions => New_List (\n+                       Prefix         => Make_Identifier (Loc, Name_V),\n+                       Attribute_Name => Name_Length,\n+                       Expressions    => New_List (\n                          Make_Integer_Literal (Loc, Dim))));\n \n                Dim := Dim + 1;\n@@ -5032,14 +5014,11 @@ package body Exp_Ch7 is\n \n             return\n               Make_Assignment_Statement (Loc,\n-                Name =>\n-                  New_Reference_To (Counter_Id, Loc),\n+                Name       => New_Reference_To (Counter_Id, Loc),\n                 Expression =>\n                   Make_Op_Subtract (Loc,\n-                    Left_Opnd =>\n-                      Expr,\n-                    Right_Opnd =>\n-                      New_Reference_To (Counter_Id, Loc)));\n+                    Left_Opnd  => Expr,\n+                    Right_Opnd => New_Reference_To (Counter_Id, Loc)));\n          end Build_Counter_Assignment;\n \n          -----------------------------\n@@ -5049,21 +5028,16 @@ package body Exp_Ch7 is\n          function Build_Finalization_Call return Node_Id is\n             Comp_Ref : constant Node_Id :=\n                          Make_Indexed_Component (Loc,\n-                           Prefix =>\n-                             Make_Identifier (Loc, Name_V),\n-                           Expressions =>\n-                             New_References_To (Final_List, Loc));\n+                           Prefix      => Make_Identifier (Loc, Name_V),\n+                           Expressions => New_References_To (Final_List, Loc));\n \n          begin\n             Set_Etype (Comp_Ref, Comp_Typ);\n \n             --  Generate:\n             --    [Deep_]Finalize (V);\n \n-            return\n-              Make_Final_Call (\n-                Obj_Ref => Comp_Ref,\n-                Typ     => Comp_Typ);\n+            return Make_Final_Call (Obj_Ref => Comp_Ref, Typ => Comp_Typ);\n          end Build_Finalization_Call;\n \n          -------------------\n@@ -5103,10 +5077,7 @@ package body Exp_Ch7 is\n             --  Generate:\n             --    [Deep_]Initialize (V (J1, ..., JN));\n \n-            return\n-              Make_Init_Call (\n-                Obj_Ref => Comp_Ref,\n-                Typ     => Comp_Typ);\n+            return Make_Init_Call (Obj_Ref => Comp_Ref, Typ => Comp_Typ);\n          end Build_Initialization_Call;\n \n       --  Start of processing for Build_Initialize_Statements\n@@ -5146,10 +5117,9 @@ package body Exp_Ch7 is\n               Make_Block_Statement (Loc,\n                 Handled_Statement_Sequence =>\n                   Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => New_List (Build_Finalization_Call),\n-\n-                  Exception_Handlers => New_List (\n-                    Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n+                    Statements         => New_List (Build_Finalization_Call),\n+                    Exception_Handlers => New_List (\n+                      Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n          else\n             Fin_Stmt := Build_Finalization_Call;\n          end if;\n@@ -5161,21 +5131,16 @@ package body Exp_Ch7 is\n            Make_If_Statement (Loc,\n              Condition =>\n                Make_Op_Gt (Loc,\n-                 Left_Opnd =>\n-                   New_Reference_To (Counter_Id, Loc),\n-                 Right_Opnd =>\n-                   Make_Integer_Literal (Loc, 0)),\n+                 Left_Opnd  => New_Reference_To (Counter_Id, Loc),\n+                 Right_Opnd => Make_Integer_Literal (Loc, 0)),\n \n              Then_Statements => New_List (\n                Make_Assignment_Statement (Loc,\n-                 Name =>\n-                   New_Reference_To (Counter_Id, Loc),\n+                 Name       => New_Reference_To (Counter_Id, Loc),\n                  Expression =>\n                    Make_Op_Subtract (Loc,\n-                     Left_Opnd =>\n-                       New_Reference_To (Counter_Id, Loc),\n-                     Right_Opnd =>\n-                       Make_Integer_Literal (Loc, 1)))),\n+                     Left_Opnd  => New_Reference_To (Counter_Id, Loc),\n+                     Right_Opnd => Make_Integer_Literal (Loc, 1)))),\n \n              Else_Statements => New_List (Fin_Stmt));\n \n@@ -5204,11 +5169,9 @@ package body Exp_Ch7 is\n                         Defining_Identifier => Loop_Id,\n                         Discrete_Subtype_Definition =>\n                           Make_Attribute_Reference (Loc,\n-                            Prefix =>\n-                              Make_Identifier (Loc, Name_V),\n-                            Attribute_Name =>\n-                              Name_Range,\n-                            Expressions => New_List (\n+                            Prefix         => Make_Identifier (Loc, Name_V),\n+                            Attribute_Name => Name_Range,\n+                            Expressions    => New_List (\n                               Make_Integer_Literal (Loc, Dim))),\n \n                         Reverse_Present => True)),\n@@ -5262,8 +5225,7 @@ package body Exp_Ch7 is\n                Build_Object_Declarations (Loc, Abort_Id, E_Id, Raised_Id),\n \n              Handled_Statement_Sequence =>\n-               Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements => Stmts));\n+               Make_Handled_Sequence_Of_Statements (Loc, Statements => Stmts));\n \n          --  Generate the block which contains the initialization call and\n          --  the partial finalization code.\n@@ -5289,19 +5251,15 @@ package body Exp_Ch7 is\n                    Make_Exception_Handler (Loc,\n                      Exception_Choices => New_List (\n                        Make_Others_Choice (Loc)),\n-                     Statements => New_List (\n-                       Final_Block)))));\n+                     Statements => New_List (Final_Block)))));\n \n          Append_To (Statements (Handled_Statement_Sequence (Init_Loop)),\n            Make_Assignment_Statement (Loc,\n-             Name =>\n-               New_Reference_To (Counter_Id, Loc),\n+             Name       => New_Reference_To (Counter_Id, Loc),\n              Expression =>\n                Make_Op_Add (Loc,\n-                 Left_Opnd =>\n-                   New_Reference_To (Counter_Id, Loc),\n-                 Right_Opnd =>\n-                   Make_Integer_Literal (Loc, 1))));\n+                 Left_Opnd  => New_Reference_To (Counter_Id, Loc),\n+                 Right_Opnd => Make_Integer_Literal (Loc, 1))));\n \n          --  Generate all initialization loops starting from the innermost\n          --  dimension.\n@@ -5355,15 +5313,13 @@ package body Exp_Ch7 is\n                Declarations => New_List (\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Counter_Id,\n-                   Object_Definition =>\n+                   Object_Definition   =>\n                      New_Reference_To (Standard_Integer, Loc),\n-                   Expression =>\n-                     Make_Integer_Literal (Loc, 0))),\n+                   Expression          => Make_Integer_Literal (Loc, 0))),\n \n                Handled_Statement_Sequence =>\n                  Make_Handled_Sequence_Of_Statements (Loc,\n-                   Statements => New_List (\n-                     Init_Loop))));\n+                   Statements => New_List (Init_Loop))));\n       end Build_Initialize_Statements;\n \n       -----------------------\n@@ -5423,9 +5379,8 @@ package body Exp_Ch7 is\n       if Prim = Address_Case then\n          Formals := New_List (\n            Make_Parameter_Specification (Loc,\n-             Make_Defining_Identifier (Loc, Name_V),\n-           Parameter_Type =>\n-             New_Reference_To (RTE (RE_Address), Loc)));\n+             Defining_Identifier => Make_Defining_Identifier (Loc, Name_V),\n+             Parameter_Type      => New_Reference_To (RTE (RE_Address), Loc)));\n \n       --  Default case\n \n@@ -5434,12 +5389,10 @@ package body Exp_Ch7 is\n \n          Formals := New_List (\n            Make_Parameter_Specification (Loc,\n-             Defining_Identifier =>\n-               Make_Defining_Identifier (Loc, Name_V),\n-             In_Present  => True,\n-             Out_Present => True,\n-             Parameter_Type =>\n-               New_Reference_To (Typ, Loc)));\n+             Defining_Identifier => Make_Defining_Identifier (Loc, Name_V),\n+             In_Present          => True,\n+             Out_Present         => True,\n+             Parameter_Type      => New_Reference_To (Typ, Loc)));\n \n          --  F : Boolean := True\n \n@@ -5448,11 +5401,10 @@ package body Exp_Ch7 is\n          then\n             Append_To (Formals,\n               Make_Parameter_Specification (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, Name_F),\n-                Parameter_Type =>\n+                Defining_Identifier => Make_Defining_Identifier (Loc, Name_F),\n+                Parameter_Type      =>\n                   New_Reference_To (Standard_Boolean, Loc),\n-                Expression =>\n+                Expression          =>\n                   New_Reference_To (Standard_True, Loc)));\n          end if;\n       end if;\n@@ -5486,8 +5438,7 @@ package body Exp_Ch7 is\n           Declarations => Empty_List,\n \n           Handled_Statement_Sequence =>\n-            Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => Stmts)));\n+            Make_Handled_Sequence_Of_Statements (Loc, Statements => Stmts)));\n \n       return Proc_Id;\n    end Make_Deep_Proc;\n@@ -5827,7 +5778,7 @@ package body Exp_Ch7 is\n                        Make_Case_Statement_Alternative (Loc,\n                          Discrete_Choices =>\n                            New_Copy_List (Discrete_Choices (Var)),\n-                         Statements =>\n+                         Statements       =>\n                            Process_Component_List_For_Adjust (\n                              Component_List (Var))));\n \n@@ -5847,11 +5798,10 @@ package body Exp_Ch7 is\n                     Make_Case_Statement (Loc,\n                       Expression =>\n                         Make_Selected_Component (Loc,\n-                          Prefix =>\n-                            Make_Identifier (Loc, Name_V),\n+                          Prefix        => Make_Identifier (Loc, Name_V),\n                           Selector_Name =>\n                             Make_Identifier (Loc,\n-                              Chars (Name (Variant_Part (Comps))))),\n+                              Chars => Chars (Name (Variant_Part (Comps))))),\n                       Alternatives => Var_Alts);\n                end;\n             end if;\n@@ -5943,15 +5893,14 @@ package body Exp_Ch7 is\n             begin\n                if Needs_Finalization (Par_Typ) then\n                   Call :=\n-                    Make_Adjust_Call (\n-                      Obj_Ref =>\n-                        Make_Selected_Component (Loc,\n-                          Prefix =>\n-                            Make_Identifier (Loc, Name_V),\n-                          Selector_Name =>\n-                            Make_Identifier (Loc, Name_uParent)),\n-                      Typ        => Par_Typ,\n-                      For_Parent => True);\n+                    Make_Adjust_Call\n+                      (Obj_Ref    =>\n+                         Make_Selected_Component (Loc,\n+                           Prefix        => Make_Identifier (Loc, Name_V),\n+                           Selector_Name =>\n+                             Make_Identifier (Loc, Name_uParent)),\n+                       Typ        => Par_Typ,\n+                       For_Parent => True);\n \n                   --  Generate:\n                   --    Deep_Adjust (V._parent, False);  --  No_Except_Propagat\n@@ -5975,8 +5924,7 @@ package body Exp_Ch7 is\n                           Make_Block_Statement (Loc,\n                             Handled_Statement_Sequence =>\n                               Make_Handled_Sequence_Of_Statements (Loc,\n-                                Statements => New_List (Adj_Stmt),\n-\n+                                Statements         => New_List (Adj_Stmt),\n                                 Exception_Handlers => New_List (\n                                   Build_Exception_Handler\n                                     (Loc, E_Id, Raised_Id))));\n@@ -6018,8 +5966,7 @@ package body Exp_Ch7 is\n                if Present (Proc) then\n                   Adj_Stmt :=\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Reference_To (Proc, Loc),\n+                      Name                   => New_Reference_To (Proc, Loc),\n                       Parameter_Associations => New_List (\n                         Make_Identifier (Loc, Name_V)));\n \n@@ -6028,17 +5975,15 @@ package body Exp_Ch7 is\n                        Make_Block_Statement (Loc,\n                          Handled_Statement_Sequence =>\n                            Make_Handled_Sequence_Of_Statements (Loc,\n-                             Statements => New_List (Adj_Stmt),\n-\n+                             Statements         => New_List (Adj_Stmt),\n                              Exception_Handlers => New_List (\n                                Build_Exception_Handler\n                                  (Loc, E_Id, Raised_Id))));\n                   end if;\n \n                   Append_To (Bod_Stmts,\n                     Make_If_Statement (Loc,\n-                      Condition =>\n-                        Make_Identifier (Loc, Name_F),\n+                      Condition       => Make_Identifier (Loc, Name_F),\n                       Then_Statements => New_List (Adj_Stmt)));\n                end if;\n             end;\n@@ -6082,12 +6027,10 @@ package body Exp_Ch7 is\n             return\n               New_List (\n                 Make_Block_Statement (Loc,\n-                  Declarations =>\n+                  Declarations               =>\n                     Build_Object_Declarations (Loc, Abort_Id, E_Id, Raised_Id),\n-\n                   Handled_Statement_Sequence =>\n-                    Make_Handled_Sequence_Of_Statements (Loc,\n-                      Statements => Bod_Stmts)));\n+                    Make_Handled_Sequence_Of_Statements (Loc, Bod_Stmts)));\n          end if;\n       end Build_Adjust_Statements;\n \n@@ -6180,7 +6123,7 @@ package body Exp_Ch7 is\n                      Append_To (Decls,\n                        Make_Implicit_Label_Declaration (Loc,\n                          Defining_Identifier => Entity (Label_Id),\n-                         Label_Construct => Label));\n+                         Label_Construct     => Label));\n \n                      --  Generate:\n                      --    when N =>\n@@ -6223,22 +6166,19 @@ package body Exp_Ch7 is\n                --    end;\n \n                Fin_Stmt :=\n-                 Make_Final_Call (\n-                   Obj_Ref =>\n-                     Make_Selected_Component (Loc,\n-                       Prefix =>\n-                         Make_Identifier (Loc, Name_V),\n-                       Selector_Name =>\n-                         Make_Identifier (Loc, Chars (Id))),\n-                   Typ => Typ);\n+                 Make_Final_Call\n+                   (Obj_Ref =>\n+                      Make_Selected_Component (Loc,\n+                        Prefix        => Make_Identifier (Loc, Name_V),\n+                        Selector_Name => Make_Identifier (Loc, Chars (Id))),\n+                    Typ     => Typ);\n \n                if not Restriction_Active (No_Exception_Propagation) then\n                   Fin_Stmt :=\n                     Make_Block_Statement (Loc,\n                       Handled_Statement_Sequence =>\n                         Make_Handled_Sequence_Of_Statements (Loc,\n-                          Statements => New_List (Fin_Stmt),\n-\n+                          Statements         => New_List (Fin_Stmt),\n                           Exception_Handlers => New_List (\n                             Build_Exception_Handler (Loc, E_Id, Raised_Id))));\n                end if;\n@@ -6461,10 +6401,9 @@ package body Exp_Ch7 is\n \n             Jump_Block :=\n               Make_Block_Statement (Loc,\n-                Declarations => Decls,\n+                Declarations               => Decls,\n                 Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => Stmts));\n+                  Make_Handled_Sequence_Of_Statements (Loc, Stmts));\n \n             if Present (Var_Case) then\n                return New_List (Var_Case, Jump_Block);\n@@ -6544,15 +6483,14 @@ package body Exp_Ch7 is\n             begin\n                if Needs_Finalization (Par_Typ) then\n                   Call :=\n-                    Make_Final_Call (\n-                      Obj_Ref =>\n-                        Make_Selected_Component (Loc,\n-                          Prefix =>\n-                            Make_Identifier (Loc, Name_V),\n-                          Selector_Name =>\n-                            Make_Identifier (Loc, Name_uParent)),\n-                      Typ        => Par_Typ,\n-                      For_Parent => True);\n+                    Make_Final_Call\n+                      (Obj_Ref =>\n+                         Make_Selected_Component (Loc,\n+                           Prefix        => Make_Identifier (Loc, Name_V),\n+                           Selector_Name =>\n+                             Make_Identifier (Loc, Name_uParent)),\n+                       Typ        => Par_Typ,\n+                       For_Parent => True);\n \n                   --  Generate:\n                   --    Deep_Finalize (V._parent, False);  --  No_Except_Propag\n@@ -6576,8 +6514,7 @@ package body Exp_Ch7 is\n                           Make_Block_Statement (Loc,\n                             Handled_Statement_Sequence =>\n                               Make_Handled_Sequence_Of_Statements (Loc,\n-                                Statements => New_List (Fin_Stmt),\n-\n+                                Statements         => New_List (Fin_Stmt),\n                                 Exception_Handlers => New_List (\n                                   Build_Exception_Handler\n                                     (Loc, E_Id, Raised_Id))));\n@@ -6621,8 +6558,7 @@ package body Exp_Ch7 is\n                if Present (Proc) then\n                   Fin_Stmt :=\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Reference_To (Proc, Loc),\n+                      Name                   => New_Reference_To (Proc, Loc),\n                       Parameter_Associations => New_List (\n                         Make_Identifier (Loc, Name_V)));\n \n@@ -6631,17 +6567,15 @@ package body Exp_Ch7 is\n                        Make_Block_Statement (Loc,\n                          Handled_Statement_Sequence =>\n                            Make_Handled_Sequence_Of_Statements (Loc,\n-                             Statements => New_List (Fin_Stmt),\n-\n+                             Statements         => New_List (Fin_Stmt),\n                              Exception_Handlers => New_List (\n                                Build_Exception_Handler\n                                  (Loc, E_Id, Raised_Id))));\n                   end if;\n \n                   Prepend_To (Bod_Stmts,\n                     Make_If_Statement (Loc,\n-                      Condition =>\n-                        Make_Identifier (Loc, Name_F),\n+                      Condition       => Make_Identifier (Loc, Name_F),\n                       Then_Statements => New_List (Fin_Stmt)));\n                end if;\n             end;\n@@ -6686,12 +6620,10 @@ package body Exp_Ch7 is\n             return\n               New_List (\n                 Make_Block_Statement (Loc,\n-                  Declarations =>\n+                  Declarations               =>\n                     Build_Object_Declarations (Loc, Abort_Id, E_Id, Raised_Id),\n-\n                   Handled_Statement_Sequence =>\n-                    Make_Handled_Sequence_Of_Statements (Loc,\n-                      Statements => Bod_Stmts)));\n+                    Make_Handled_Sequence_Of_Statements (Loc, Bod_Stmts)));\n          end if;\n       end Build_Finalize_Statements;\n \n@@ -6778,10 +6710,9 @@ package body Exp_Ch7 is\n                if Is_Controlled (Typ) then\n                   return New_List (\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Reference_To (\n-                          Find_Prim_Op (Typ, Name_Of (Prim)), Loc),\n-\n+                      Name                   =>\n+                        New_Reference_To\n+                          (Find_Prim_Op (Typ, Name_Of (Prim)), Loc),\n                       Parameter_Associations => New_List (\n                         Make_Identifier (Loc, Name_V))));\n                else\n@@ -7044,8 +6975,8 @@ package body Exp_Ch7 is\n \n       elsif Is_Class_Wide_Type (Typ)\n         and then Has_Discriminants (Root_Type (Typ))\n-        and then not Is_Empty_Elmt_List (\n-                       Discriminant_Constraint (Root_Type (Typ)))\n+        and then not\n+          Is_Empty_Elmt_List (Discriminant_Constraint (Root_Type (Typ)))\n       then\n          declare\n             Parent_Typ : Entity_Id := Root_Type (Typ);\n@@ -7055,8 +6986,8 @@ package body Exp_Ch7 is\n \n             while Parent_Typ /= Etype (Parent_Typ)\n               and then Has_Discriminants (Parent_Typ)\n-              and then not Is_Empty_Elmt_List (\n-                             Discriminant_Constraint (Parent_Typ))\n+              and then not\n+                Is_Empty_Elmt_List (Discriminant_Constraint (Parent_Typ))\n             loop\n                Parent_Typ := Etype (Parent_Typ);\n             end loop;\n@@ -7091,11 +7022,9 @@ package body Exp_Ch7 is\n                 New_Reference_To (Desg_Typ, Loc))),\n \n         Make_Attribute_Definition_Clause (Loc,\n-          Name =>\n-            New_Reference_To (Ptr_Typ, Loc),\n-          Chars => Name_Storage_Size,\n-          Expression =>\n-            Make_Integer_Literal (Loc, 0)));\n+          Name       => New_Reference_To (Ptr_Typ, Loc),\n+          Chars      => Name_Storage_Size,\n+          Expression => Make_Integer_Literal (Loc, 0)));\n \n       Obj_Expr := Make_Identifier (Loc, Name_V);\n \n@@ -7127,11 +7056,10 @@ package body Exp_Ch7 is\n             begin\n                return\n                  Make_Op_Multiply (Loc,\n-                   Left_Opnd =>\n-                     Make_Integer_Literal (Loc, 2),\n+                   Left_Opnd  => Make_Integer_Literal (Loc, 2),\n                    Right_Opnd =>\n                      Make_Op_Divide (Loc,\n-                       Left_Opnd =>\n+                       Left_Opnd  =>\n                          Make_Integer_Literal (Loc, Esize (Typ)),\n                        Right_Opnd =>\n                          Make_Integer_Literal (Loc, System_Storage_Unit)));\n@@ -7146,9 +7074,8 @@ package body Exp_Ch7 is\n \n             Append_To (Decls,\n               Make_Attribute_Definition_Clause (Loc,\n-                Name =>\n-                  New_Reference_To (Ptr_Typ, Loc),\n-                Chars => Name_Size,\n+                Name       => New_Reference_To (Ptr_Typ, Loc),\n+                Chars      => Name_Size,\n                 Expression =>\n                   Make_Integer_Literal (Loc, System_Address_Size)));\n \n@@ -7172,10 +7099,8 @@ package body Exp_Ch7 is\n                else\n                   Dope_Expr :=\n                     Make_Op_Add (Loc,\n-                      Left_Opnd =>\n-                        Dope_Expr,\n-                      Right_Opnd =>\n-                        Bounds_Size_Expression (Etype (Index)));\n+                      Left_Opnd  => Dope_Expr,\n+                      Right_Opnd => Bounds_Size_Expression (Etype (Index)));\n                end if;\n \n                Next_Index (Index);\n@@ -7189,10 +7114,10 @@ package body Exp_Ch7 is\n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Dope_Id,\n-                Constant_Present => True,\n-                Object_Definition =>\n+                Constant_Present    => True,\n+                Object_Definition   =>\n                   New_Reference_To (RTE (RE_Storage_Offset), Loc),\n-                Expression => Dope_Expr));\n+                Expression          => Dope_Expr));\n \n             --  Shift the address from the start of the dope vector to the\n             --  start of the elements:\n@@ -7204,7 +7129,7 @@ package body Exp_Ch7 is\n \n             Obj_Expr :=\n               Make_Function_Call (Loc,\n-                Name =>\n+                Name                   =>\n                   New_Reference_To (RTE (RE_Add_Offset_To_Address), Loc),\n                 Parameter_Associations => New_List (\n                   Obj_Expr,\n@@ -7224,8 +7149,7 @@ package body Exp_Ch7 is\n                 Make_Final_Call (\n                   Obj_Ref =>\n                     Make_Explicit_Dereference (Loc,\n-                      Prefix =>\n-                        Unchecked_Convert_To (Ptr_Typ, Obj_Expr)),\n+                      Prefix => Unchecked_Convert_To (Ptr_Typ, Obj_Expr)),\n                   Typ => Desg_Typ)))));\n    end Make_Finalize_Address_Stmts;\n \n@@ -7262,7 +7186,7 @@ package body Exp_Ch7 is\n          E_Occ := Make_Defining_Identifier (Loc, Name_E);\n          Raise_Node :=\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n+             Name                   =>\n                New_Reference_To (RTE (RE_Reraise_Occurrence), Loc),\n              Parameter_Associations => New_List (\n                New_Reference_To (E_Occ, Loc)));\n@@ -7275,7 +7199,7 @@ package body Exp_Ch7 is\n          E_Occ := Make_Defining_Identifier (Loc, Name_E);\n          Raise_Node :=\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n+             Name                   =>\n                New_Reference_To\n                  (RTE (RE_Raise_From_Controlled_Operation), Loc),\n              Parameter_Associations => New_List (\n@@ -7364,7 +7288,6 @@ package body Exp_Ch7 is\n \n       if Has_Controlled_Component (Utyp) then\n          Proc := TSS (Utyp, Deep_Name_Of (Initialize_Case));\n-\n       else\n          Proc := Find_Prim_Op (Utyp, Name_Of (Initialize_Case));\n          Check_Visibly_Controlled (Initialize_Case, Typ, Proc, Ref);\n@@ -7402,22 +7325,17 @@ package body Exp_Ch7 is\n          --  V : in out Typ\n \n         Make_Parameter_Specification (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, Name_V),\n-          In_Present  => True,\n-          Out_Present => True,\n-          Parameter_Type =>\n-            New_Reference_To (Typ, Loc)),\n+          Defining_Identifier => Make_Defining_Identifier (Loc, Name_V),\n+          In_Present          => True,\n+          Out_Present         => True,\n+          Parameter_Type      => New_Reference_To (Typ, Loc)),\n \n          --  F : Boolean := True\n \n         Make_Parameter_Specification (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, Name_F),\n-          Parameter_Type =>\n-            New_Reference_To (Standard_Boolean, Loc),\n-          Expression =>\n-            New_Reference_To (Standard_True, Loc)));\n+          Defining_Identifier => Make_Defining_Identifier (Loc, Name_F),\n+          Parameter_Type      => New_Reference_To (Standard_Boolean, Loc),\n+          Expression          => New_Reference_To (Standard_True, Loc)));\n \n       --  Add the necessary number of counters to represent the initialization\n       --  state of an object.\n@@ -7426,15 +7344,14 @@ package body Exp_Ch7 is\n         Make_Subprogram_Body (Loc,\n           Specification =>\n             Make_Procedure_Specification (Loc,\n-              Defining_Unit_Name => Nam,\n+              Defining_Unit_Name       => Nam,\n               Parameter_Specifications => Formals),\n \n           Declarations => No_List,\n \n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements =>\n-                Make_Deep_Record_Body (Finalize_Case, Typ, True)));\n+              Statements => Make_Deep_Record_Body (Finalize_Case, Typ, True)));\n    end Make_Local_Deep_Finalize;\n \n    ----------------------------------------\n@@ -7507,14 +7424,14 @@ package body Exp_Ch7 is\n \n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name =>\n+          Name                   =>\n             New_Reference_To (RTE (RE_Set_Finalize_Address_Ptr), Loc),\n \n           Parameter_Associations => New_List (\n             New_Reference_To (Associated_Collection (Ptr_Typ), Loc),\n \n             Make_Attribute_Reference (Loc,\n-              Prefix =>\n+              Prefix         =>\n                 New_Reference_To (TSS (Utyp, TSS_Finalize_Address), Loc),\n               Attribute_Name => Name_Unrestricted_Access)));\n    end Make_Set_Finalize_Address_Ptr_Call;\n@@ -7596,13 +7513,11 @@ package body Exp_Ch7 is\n \n       Block :=\n         Make_Block_Statement (Loc,\n-          Identifier =>\n-            New_Reference_To (Current_Scope, Loc),\n-          Declarations => Decls,\n+          Identifier                 => New_Reference_To (Current_Scope, Loc),\n+          Declarations               => Decls,\n           Handled_Statement_Sequence =>\n-            Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => Instrs),\n-          Has_Created_Identifier => True);\n+            Make_Handled_Sequence_Of_Statements (Loc, Statements => Instrs),\n+          Has_Created_Identifier     => True);\n       Set_Parent (Block, Par);\n \n       --  Insert actions stuck in the transient scopes as well as all freezing\n@@ -7786,15 +7701,14 @@ package body Exp_Ch7 is\n       Insert_Actions (N, New_List (\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Temp,\n-          Object_Definition =>\n-            New_Reference_To (Typ, Loc)),\n+          Object_Definition   => New_Reference_To (Typ, Loc)),\n \n         Make_Transient_Block (Loc,\n           Action =>\n             Make_Assignment_Statement (Loc,\n               Name       => New_Reference_To (Temp, Loc),\n               Expression => Expr),\n-          Par => Parent (N))));\n+          Par    => Parent (N))));\n \n       Rewrite (N, New_Reference_To (Temp, Loc));\n       Analyze_And_Resolve (N, Typ);"}, {"sha": "08c3734fdd72040b6337361a2b92c0c063c56338", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -119,15 +119,15 @@ package Exp_Ch7 is\n    --  Create a call to prepend an object to a finalization collection. Obj_Ref\n    --  is the object, Ptr_Typ is the access type that owns the collection.\n    --  Generate the following:\n-\n+   --\n    --    Ada.Finalization.Heap_Managment.Attach\n    --      (<Ptr_Typ>FC,\n    --       System.Finalization_Root.Root_Controlled_Ptr (Obj_Ref));\n \n    function Make_Detach_Call (Obj_Ref : Node_Id) return Node_Id;\n    --  Create a call to unhook an object from an arbitrary list. Obj_Ref is the\n    --  object. Generate the following:\n-\n+   --\n    --    Ada.Finalization.Heap_Management.Detach\n    --      (System.Finalization_Root.Root_Controlled_Ptr (Obj_Ref));\n "}, {"sha": "af06000216bfb106479638492502b3facb5495ea", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -6558,10 +6558,10 @@ package body Exp_Dist is\n                    Make_Component_Association (Loc,\n                      Choices    => New_List (Make_Identifier (Loc, Name_Ras)),\n                      Expression =>\n-                       PolyORB_Support.Helpers.Build_From_Any_Call (\n-                         Underlying_RACW_Type (RAS_Type),\n-                         New_Occurrence_Of (Any_Parameter, Loc),\n-                         No_List))))));\n+                       PolyORB_Support.Helpers.Build_From_Any_Call\n+                         (Underlying_RACW_Type (RAS_Type),\n+                          New_Occurrence_Of (Any_Parameter, Loc),\n+                          No_List))))));\n \n          Func_Spec :=\n            Make_Function_Specification (Loc,\n@@ -10321,7 +10321,8 @@ package body Exp_Dist is\n             begin\n                Append_To (Parameter_List,\n                  Make_Function_Call (Loc,\n-                   Name => New_Occurrence_Of (RTE (RE_TA_I32), Loc),\n+                   Name                   =>\n+                     New_Occurrence_Of (RTE (RE_TA_I32), Loc),\n                    Parameter_Associations => New_List (Expr_Node)));\n             end Add_Long_Parameter;\n "}, {"sha": "28e97c5105672596da6cd14ca6c07e3d8b6c7c1b", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -202,35 +202,34 @@ package body Exp_Strm is\n          Odecl :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Make_Defining_Identifier (Loc, Name_V),\n-             Object_Definition =>\n+             Object_Definition   =>\n                New_Occurrence_Of (Stream_Base_Type (Typ), Loc));\n       else\n          Odecl :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Make_Defining_Identifier (Loc, Name_V),\n-             Object_Definition =>\n+             Object_Definition   =>\n                Make_Subtype_Indication (Loc,\n                  Subtype_Mark =>\n                    New_Occurrence_Of (Stream_Base_Type (Typ), Loc),\n-                 Constraint =>\n-                   Make_Index_Or_Discriminant_Constraint (Loc,\n-                     Constraints => Ranges)));\n+                 Constraint   =>\n+                   Make_Index_Or_Discriminant_Constraint (Loc, Ranges)));\n       end if;\n \n-      Rstmt := Make_Attribute_Reference (Loc,\n-                 Prefix         => New_Occurrence_Of (Typ, Loc),\n-                 Attribute_Name => Name_Read,\n-                 Expressions    => New_List (\n-                   Make_Identifier (Loc, Name_S),\n-                   Make_Identifier (Loc, Name_V)));\n+      Rstmt :=\n+        Make_Attribute_Reference (Loc,\n+          Prefix         => New_Occurrence_Of (Typ, Loc),\n+          Attribute_Name => Name_Read,\n+          Expressions    => New_List (\n+            Make_Identifier (Loc, Name_S),\n+            Make_Identifier (Loc, Name_V)));\n \n       if Ada_Version >= Ada_2005 then\n          Stms := New_List (\n             Make_Extended_Return_Statement (Loc,\n               Return_Object_Declarations => New_List (Odecl),\n               Handled_Statement_Sequence =>\n-                Make_Handled_Sequence_Of_Statements (Loc,\n-                  New_List (Rstmt))));\n+                Make_Handled_Sequence_Of_Statements (Loc, New_List (Rstmt))));\n       else\n          --  pragma Assert (not Is_Limited_Type (Typ));\n          --  Returning a local object, shouldn't happen in the case of a\n@@ -1200,10 +1199,9 @@ package body Exp_Strm is\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => New_List (\n                    Make_Attribute_Reference (Loc,\n-                     Prefix =>\n-                       New_Occurrence_Of (Typ, Loc),\n+                     Prefix         => New_Occurrence_Of (Typ, Loc),\n                      Attribute_Name => Name_Read,\n-                     Expressions => New_List (\n+                     Expressions    => New_List (\n                        Make_Identifier (Loc, Name_S),\n                        Make_Identifier (Loc, Name_V)))))));\n       else"}, {"sha": "5cade6c8e289972ee8112e74bcb9f8a45c237d6b", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -338,24 +338,23 @@ package body Exp_Util is\n       -----------------\n \n       function Find_Object (E : Node_Id) return Node_Id is\n-         Expr   : Node_Id := E;\n-         Change : Boolean := True;\n+         Expr : Node_Id;\n \n       begin\n          pragma Assert (Is_Allocate);\n \n-         while Change loop\n-            Change := False;\n-\n+         Expr := E;\n+         loop\n             if Nkind_In (Expr, N_Qualified_Expression,\n                                N_Unchecked_Type_Conversion)\n             then\n-               Expr   := Expression (Expr);\n-               Change := True;\n+               Expr := Expression (Expr);\n \n             elsif Nkind (Expr) = N_Explicit_Dereference then\n-               Expr   := Prefix (Expr);\n-               Change := True;\n+               Expr := Prefix (Expr);\n+\n+            else\n+               exit;\n             end if;\n          end loop;\n \n@@ -4393,7 +4392,6 @@ package body Exp_Util is\n \n    function Is_Related_To_Func_Return (Id : Entity_Id) return Boolean is\n       Expr : constant Node_Id := Related_Expression (Id);\n-\n    begin\n       return\n         Present (Expr)"}, {"sha": "08ffc75208dea91279553f383b5a2a953be4c6c3", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -484,13 +484,11 @@ package Exp_Util is\n    --  Return the stream size value of the subtype E\n \n    function Has_Access_Constraint (E : Entity_Id) return Boolean;\n-   --  Given object or type E, determine whether a discriminant is of an access\n-   --  type.\n+   --  Given object or type E, determine if a discriminant is of an access type\n \n    function Has_Controlled_Objects (N : Node_Id) return Boolean;\n-   --  Given an arbitrary node N, determine whether it has a declarative or a\n-   --  statement part and whether those lists contain at least one controlled\n-   --  object.\n+   --  Given a node N, determine if it has a declarative or a statement part\n+   --  and whether those lists contain at least one controlled object.\n \n    function Has_Controlled_Objects\n      (L           : List_Id;"}, {"sha": "c6da2c9041cf61250b13474757930c6d16fb434f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1190,6 +1190,7 @@ package body Freeze is\n \n          Set_Expression (Par, New_Occurrence_Of (Temp, Loc));\n          return True;\n+\n       else\n          return False;\n       end if;\n@@ -2726,24 +2727,24 @@ package body Freeze is\n \n                      if Has_Foreign_Convention (E)\n \n-                        --  We are looking for a return of unconstrained array\n+                       --  We are looking for a return of unconstrained array\n \n                        and then Is_Array_Type (R_Type)\n                        and then not Is_Constrained (R_Type)\n \n-                        --  Exclude imported routines, the warning does not\n-                        --  belong on the import, but rather on the routine\n-                        --  definition.\n+                       --  Exclude imported routines, the warning does not\n+                       --  belong on the import, but rather on the routine\n+                       --  definition.\n \n                        and then not Is_Imported (E)\n \n-                        --  Exclude VM case, since both .NET and JVM can handle\n-                        --  return of unconstrained arrays without a problem.\n+                       --  Exclude VM case, since both .NET and JVM can handle\n+                       --  return of unconstrained arrays without a problem.\n \n                        and then VM_Target = No_VM\n \n-                        --  Check that general warning is enabled, and that it\n-                        --  is not suppressed for this particular case.\n+                       --  Check that general warning is enabled, and that it\n+                       --  is not suppressed for this particular case.\n \n                        and then Warn_On_Export_Import\n                        and then not Has_Warnings_Off (E)\n@@ -3920,7 +3921,7 @@ package body Freeze is\n \n             if Is_Pure_Unit_Access_Type (E)\n               and then (Ada_Version < Ada_2005\n-                          or else not No_Pool_Assigned (E))\n+                         or else not No_Pool_Assigned (E))\n             then\n                Error_Msg_N (\"named access type not allowed in pure unit\", E);\n \n@@ -5449,8 +5450,8 @@ package body Freeze is\n             elsif Is_Array_Type (Retype)\n               and then not Is_Constrained (Retype)\n \n-               --  Exclude cases where descriptor mechanism is set, since the\n-               --  VMS descriptor mechanisms allow such unconstrained returns.\n+              --  Exclude cases where descriptor mechanism is set, since the\n+              --  VMS descriptor mechanisms allow such unconstrained returns.\n \n               and then Mechanism (E) not in Descriptor_Codes\n \n@@ -5459,8 +5460,8 @@ package body Freeze is\n \n               and then Warn_On_Export_Import\n \n-               --  Exclude the VM case, since return of unconstrained arrays\n-               --  is properly handled in both the JVM and .NET cases.\n+              --  Exclude the VM case, since return of unconstrained arrays\n+              --  is properly handled in both the JVM and .NET cases.\n \n               and then VM_Target = No_VM\n             then\n@@ -5724,15 +5725,14 @@ package body Freeze is\n \n                    Declarations => New_List (\n                      Make_Object_Declaration (Loc,\n-                       Defining_Identifier =>\n-                         Make_Temporary (Loc, 'T'),\n-                       Object_Definition =>\n+                       Defining_Identifier => Make_Temporary (Loc, 'T'),\n+                       Object_Definition   =>\n                          New_Occurrence_Of (Etype (Formal), Loc),\n-                       Expression => New_Copy_Tree (Dcopy))),\n+                       Expression          => New_Copy_Tree (Dcopy))),\n \n                    Handled_Statement_Sequence =>\n                      Make_Handled_Sequence_Of_Statements (Loc,\n-                       Statements => New_List));\n+                       Statements => Empty_List));\n \n                Set_Scope (Dnam, Scope (E));\n                Set_Assignment_OK (First (Declarations (Dbody)));"}, {"sha": "b4d322ce16b75f278370b53a70913434cd3d13e7", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -200,8 +200,8 @@ package body GNAT.Command_Line is\n      (Config   : Command_Line_Configuration;\n       Section  : String);\n    --  Iterate over all switches defined in Config, for a specific section.\n-   --  Index is set to the index in Config.Switches.\n-   --  Stop iterating when Callback returns False.\n+   --  Index is set to the index in Config.Switches. Stop iterating when\n+   --  Callback returns False.\n \n    --------------\n    -- Argument --\n@@ -1598,12 +1598,15 @@ package body GNAT.Command_Line is\n          loop\n             begin\n                if Cmd.Config /= null then\n+\n                   --  Do not use Getopt_Description in this case. Otherwise,\n                   --  if we have defined a prefix -gnaty, and two switches\n                   --  -gnatya and -gnatyL!, we would have a different behavior\n                   --  depending on the order of switches:\n+\n                   --      -gnatyL1a   =>  -gnatyL with argument \"1a\"\n                   --      -gnatyaL1   =>  -gnatya and -gnatyL with argument \"1\"\n+\n                   --  This is because the call to Getopt below knows nothing\n                   --  about prefixes, and in the first case finds a valid\n                   --  switch with arguments, so returns it without analyzing\n@@ -1613,6 +1616,7 @@ package body GNAT.Command_Line is\n                   S := Getopt (Switches    => \"*\",\n                                Concatenate => False,\n                                Parser      => Parser);\n+\n                else\n                   S := Getopt (Switches    => \"* \" & Getopt_Description,\n                                Concatenate => False,\n@@ -1622,9 +1626,8 @@ package body GNAT.Command_Line is\n                exit when S = ASCII.NUL;\n \n                declare\n-                  Sw         : constant String :=\n-                                 Real_Full_Switch (S, Parser);\n-                  Is_Section : Boolean := False;\n+                  Sw         : constant String := Real_Full_Switch (S, Parser);\n+                  Is_Section : Boolean         := False;\n \n                begin\n                   if Cmd.Config /= null\n@@ -1797,29 +1800,30 @@ package body GNAT.Command_Line is\n          is\n             pragma Unreferenced (Index);\n \n-            Full  : constant String := Prefix & Group (Idx .. Group'Last);\n+            Full : constant String := Prefix & Group (Idx .. Group'Last);\n \n-            Sw    : constant String := Actual_Switch (Switch);\n+            Sw : constant String := Actual_Switch (Switch);\n             --  Switches definition minus argument definition\n \n             Last  : Natural;\n             Param : Natural;\n \n          begin\n-            if\n-               --  Verify that sw starts with Prefix\n-               Looking_At (Sw, Sw'First, Prefix)\n+            --  Verify that sw starts with Prefix\n \n-               --  Verify that the group starts with sw\n-              and then Looking_At (Full, Full'First, Sw)\n+            if Looking_At (Sw, Sw'First, Prefix)\n+\n+              --  Verify that the group starts with sw\n \n+              and then Looking_At (Full, Full'First, Sw)\n             then\n                Last  := Idx + Sw'Length - Prefix'Length - 1;\n                Param := Last + 1;\n \n                if Can_Have_Parameter (Switch) then\n-                  --  Include potential parameter to the recursive call.\n-                  --  Only numbers are allowed.\n+\n+                  --  Include potential parameter to the recursive call. Only\n+                  --  numbers are allowed.\n \n                   while Last < Group'Last\n                     and then Group (Last + 1) in '0' .. '9'\n@@ -1865,6 +1869,7 @@ package body GNAT.Command_Line is\n                   return False;\n                end if;\n             end if;\n+\n             return True;\n          end Analyze_Simple_Switch;\n \n@@ -2019,6 +2024,7 @@ package body GNAT.Command_Line is\n       --  results with or without this call.\n \n       Foreach_In_Config (Config, Section);\n+\n       if Found_In_Config then\n          return;\n       end if;\n@@ -2053,8 +2059,8 @@ package body GNAT.Command_Line is\n       if Config /= null and then Config.Prefixes /= null then\n          for P in Config.Prefixes'Range loop\n             if Switch'Length > Config.Prefixes (P)'Length + 1\n-              and then Looking_At\n-                (Switch, Switch'First, Config.Prefixes (P).all)\n+              and then\n+                Looking_At (Switch, Switch'First, Config.Prefixes (P).all)\n             then\n                --  Alias expansion will be done recursively\n \n@@ -2076,6 +2082,7 @@ package body GNAT.Command_Line is\n                then\n                   --  Recursive calls already done on each switch of the group:\n                   --  Return without executing Callback.\n+\n                   return;\n                end if;\n             end if;\n@@ -2091,6 +2098,7 @@ package body GNAT.Command_Line is\n       then\n          Found_In_Config := False;\n          Foreach_Starts_With (Config, Section);\n+\n          if Found_In_Config then\n             return;\n          end if;"}, {"sha": "590eab619238693398317bf5c8a16eb0d9ec94b2", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -583,6 +583,7 @@ package GNAT.Command_Line is\n    --  assumed that the remainder of the switch (\"uv\") is a set of characters\n    --  whose order is irrelevant. In fact, this package will sort them\n    --  alphabetically.\n+   --\n    --  When grouping switches that accept arguments (for instance \"-gnatyL!\"\n    --  as the definition, and \"-gnatyaL12b\" as the command line), only\n    --  numerical arguments are accepted. The above is equivalent to\n@@ -772,9 +773,9 @@ package GNAT.Command_Line is\n       Config : Command_Line_Configuration);\n    function Get_Configuration\n      (Cmd : Command_Line) return Command_Line_Configuration;\n-   --  Set or retrieve the configuration used for that command line.\n-   --  The Config must have been initialized first, by calling one of the\n-   --  Define_Switches subprograms.\n+   --  Set or retrieve the configuration used for that command line. The Config\n+   --  must have been initialized first, by calling one of the Define_Switches\n+   --  subprograms.\n \n    procedure Set_Command_Line\n      (Cmd                : in out Command_Line;\n@@ -786,9 +787,9 @@ package GNAT.Command_Line is\n    --\n    --  The parsing of Switches is done through calls to Getopt, by passing\n    --  Getopt_Description as an argument. (A \"*\" is automatically prepended so\n-   --  that all switches and command line arguments are accepted).\n-   --  If a config was defined via Set_Configuration, the Getopt_Description\n-   --  parameter will be ignored.\n+   --  that all switches and command line arguments are accepted). If a config\n+   --  was defined via Set_Configuration, the Getopt_Description parameter will\n+   --  be ignored.\n    --\n    --  To properly handle switches that take parameters, you should document\n    --  them in Getopt_Description. Otherwise, the switch and its parameter will"}, {"sha": "d00f03b12380d85579cabac76ae059309e1a673c", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1291,8 +1291,9 @@ procedure GNATCmd is\n    begin\n       Makeutl.Test_If_Relative_Path\n         (Switch, Parent,\n-         Do_Fail => Osint.Fail'Access,\n-         Including_Non_Switch => False, Including_RTS => True);\n+         Do_Fail              => Osint.Fail'Access,\n+         Including_Non_Switch => False,\n+         Including_RTS        => True);\n    end Test_If_Relative_Path;\n \n    -------------------"}, {"sha": "b650d389809093484438613e8acd8e8f9a5a1651", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 164, "deletions": 74, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -158,23 +158,38 @@ package body ALFA is\n    --  Filter table Xrefs to add all references used in ALFA to the table\n    --  ALFA_Xref_Table.\n \n+   procedure Detect_And_Add_ALFA_Scope (N : Node_Id);\n+   --  Call Add_ALFA_Scope on scopes\n+\n    function Entity_Hash (E : Entity_Id) return Entity_Hashed_Range;\n    --  Hash function for hash table\n \n-   procedure Traverse_Declarations_Or_Statements  (L : List_Id);\n-   procedure Traverse_Handled_Statement_Sequence  (N : Node_Id);\n-   procedure Traverse_Package_Body                (N : Node_Id);\n-   procedure Traverse_Package_Declaration         (N : Node_Id);\n-   procedure Traverse_Subprogram_Body             (N : Node_Id);\n-   --  Traverse the corresponding construct, generating ALFA scope table\n-   --  entries.\n+   procedure Traverse_Compilation_Unit\n+     (CU      : Node_Id;\n+      Process : Node_Processing);\n+   procedure Traverse_Declarations_Or_Statements\n+     (L       : List_Id;\n+      Process : Node_Processing);\n+   procedure Traverse_Handled_Statement_Sequence\n+     (N       : Node_Id;\n+      Process : Node_Processing);\n+   procedure Traverse_Package_Body\n+     (N       : Node_Id;\n+      Process : Node_Processing);\n+   procedure Traverse_Package_Declaration\n+     (N       : Node_Id;\n+      Process : Node_Processing);\n+   procedure Traverse_Subprogram_Body\n+     (N       : Node_Id;\n+      Process : Node_Processing);\n+   --  Traverse the corresponding constructs, calling Process on all\n+   --  declarations.\n \n    -------------------\n    -- Add_ALFA_File --\n    -------------------\n \n    procedure Add_ALFA_File (U : Unit_Number_Type; D : Nat) is\n-      Lu   : Node_Id;\n       From : Scope_Index;\n \n       S : constant Source_File_Index := Source_Index (U);\n@@ -189,44 +204,7 @@ package body ALFA is\n \n       From := ALFA_Scope_Table.Last + 1;\n \n-      --  Get Unit (checking case of subunit)\n-\n-      Lu := Unit (Cunit (U));\n-\n-      if Nkind (Lu) = N_Subunit then\n-         Lu := Proper_Body (Lu);\n-      end if;\n-\n-      --  Traverse the unit\n-\n-      if Nkind (Lu) = N_Subprogram_Body then\n-         Traverse_Subprogram_Body (Lu);\n-\n-      elsif Nkind (Lu) = N_Subprogram_Declaration then\n-         Add_ALFA_Scope (Lu);\n-\n-      elsif Nkind (Lu) = N_Package_Declaration then\n-         Traverse_Package_Declaration (Lu);\n-\n-      elsif Nkind (Lu) = N_Package_Body then\n-         Traverse_Package_Body (Lu);\n-\n-      --  ??? TBD\n-\n-      elsif Nkind (Lu) = N_Generic_Package_Declaration then\n-         null;\n-\n-      --  ??? TBD\n-\n-      elsif Nkind (Lu) in N_Generic_Instantiation then\n-         null;\n-\n-      --  All other cases of compilation units (e.g. renamings), generate\n-      --  no ALFA information.\n-\n-      else\n-         null;\n-      end if;\n+      Traverse_Compilation_Unit (Cunit (U), Detect_And_Add_ALFA_Scope'Access);\n \n       --  Update scope numbers\n \n@@ -860,6 +838,21 @@ package body ALFA is\n       Add_ALFA_Xrefs;\n    end Collect_ALFA;\n \n+   -------------------------------\n+   -- Detect_And_Add_ALFA_Scope --\n+   -------------------------------\n+\n+   procedure Detect_And_Add_ALFA_Scope (N : Node_Id) is\n+   begin\n+      if Nkind_In (N, N_Subprogram_Declaration,\n+                      N_Subprogram_Body,\n+                      N_Package_Declaration,\n+                      N_Package_Body)\n+      then\n+         Add_ALFA_Scope (N);\n+      end if;\n+   end Detect_And_Add_ALFA_Scope;\n+\n    -----------------\n    -- Entity_Hash --\n    -----------------\n@@ -870,24 +863,106 @@ package body ALFA is\n         Entity_Hashed_Range (E mod (Entity_Id (Entity_Hashed_Range'Last) + 1));\n    end Entity_Hash;\n \n+   ------------------------------------\n+   -- Traverse_All_Compilation_Units --\n+   ------------------------------------\n+\n+   procedure Traverse_All_Compilation_Units (Process : Node_Processing) is\n+   begin\n+      for U in Units.First .. Last_Unit loop\n+         Traverse_Compilation_Unit (Cunit (U), Process);\n+      end loop;\n+   end Traverse_All_Compilation_Units;\n+\n+   -------------------------------\n+   -- Traverse_Compilation_Unit --\n+   -------------------------------\n+\n+   procedure Traverse_Compilation_Unit\n+     (CU      : Node_Id;\n+      Process : Node_Processing)\n+   is\n+      Lu : Node_Id;\n+\n+   begin\n+      --  Get Unit (checking case of subunit)\n+\n+      Lu := Unit (CU);\n+\n+      if Nkind (Lu) = N_Subunit then\n+         Lu := Proper_Body (Lu);\n+      end if;\n+\n+      --  Call Process on all declarations\n+\n+      if Nkind (Lu) in N_Declaration\n+        or else Nkind (Lu) in N_Later_Decl_Item\n+      then\n+         Process (Lu);\n+      end if;\n+\n+      --  Traverse the unit\n+\n+      if Nkind (Lu) = N_Subprogram_Body then\n+         Traverse_Subprogram_Body (Lu, Process);\n+\n+      elsif Nkind (Lu) = N_Subprogram_Declaration then\n+         null;\n+\n+      elsif Nkind (Lu) = N_Package_Declaration then\n+         Traverse_Package_Declaration (Lu, Process);\n+\n+      elsif Nkind (Lu) = N_Package_Body then\n+         Traverse_Package_Body (Lu, Process);\n+\n+      --  ??? TBD\n+\n+      elsif Nkind (Lu) = N_Generic_Package_Declaration then\n+         null;\n+\n+      --  ??? TBD\n+\n+      elsif Nkind (Lu) in N_Generic_Instantiation then\n+         null;\n+\n+      --  All other cases of compilation units (e.g. renamings), are not\n+      --  declarations.\n+\n+      else\n+         null;\n+      end if;\n+   end Traverse_Compilation_Unit;\n+\n    -----------------------------------------\n    -- Traverse_Declarations_Or_Statements --\n    -----------------------------------------\n \n-   procedure Traverse_Declarations_Or_Statements (L : List_Id) is\n+   procedure Traverse_Declarations_Or_Statements\n+     (L       : List_Id;\n+      Process : Node_Processing)\n+   is\n       N : Node_Id;\n \n    begin\n       --  Loop through statements or declarations\n \n       N := First (L);\n       while Present (N) loop\n+         --  Call Process on all declarations\n+\n+         if Nkind (N) in N_Declaration\n+              or else\n+            Nkind (N) in N_Later_Decl_Item\n+         then\n+            Process (N);\n+         end if;\n+\n          case Nkind (N) is\n \n             --  Package declaration\n \n             when N_Package_Declaration =>\n-               Traverse_Package_Declaration (N);\n+               Traverse_Package_Declaration (N, Process);\n \n             --  Generic package declaration ??? TBD\n \n@@ -898,13 +973,13 @@ package body ALFA is\n \n             when N_Package_Body =>\n                if Ekind (Defining_Entity (N)) /= E_Generic_Package then\n-                  Traverse_Package_Body (N);\n+                  Traverse_Package_Body (N, Process);\n                end if;\n \n             --  Subprogram declaration\n \n             when N_Subprogram_Declaration =>\n-               Add_ALFA_Scope (N);\n+               null;\n \n             --  Generic subprogram declaration ??? TBD\n \n@@ -915,21 +990,22 @@ package body ALFA is\n \n             when N_Subprogram_Body =>\n                if not Is_Generic_Subprogram (Defining_Entity (N)) then\n-                  Traverse_Subprogram_Body (N);\n+                  Traverse_Subprogram_Body (N, Process);\n                end if;\n \n             --  Block statement\n \n             when N_Block_Statement =>\n-               Traverse_Declarations_Or_Statements (Declarations (N));\n+               Traverse_Declarations_Or_Statements (Declarations (N), Process);\n                Traverse_Handled_Statement_Sequence\n-                 (Handled_Statement_Sequence (N));\n+                 (Handled_Statement_Sequence (N), Process);\n \n             when N_If_Statement =>\n \n                --  Traverse the statements in the THEN part\n \n-               Traverse_Declarations_Or_Statements (Then_Statements (N));\n+               Traverse_Declarations_Or_Statements\n+                 (Then_Statements (N), Process);\n \n                --  Loop through ELSIF parts if present\n \n@@ -940,15 +1016,16 @@ package body ALFA is\n                   begin\n                      while Present (Elif) loop\n                         Traverse_Declarations_Or_Statements\n-                          (Then_Statements (Elif));\n+                          (Then_Statements (Elif), Process);\n                         Next (Elif);\n                      end loop;\n                   end;\n                end if;\n \n                --  Finally traverse the ELSE statements if present\n \n-               Traverse_Declarations_Or_Statements (Else_Statements (N));\n+               Traverse_Declarations_Or_Statements\n+                 (Else_Statements (N), Process);\n \n             --  Case statement\n \n@@ -961,7 +1038,8 @@ package body ALFA is\n                begin\n                   Alt := First (Alternatives (N));\n                   while Present (Alt) loop\n-                     Traverse_Declarations_Or_Statements (Statements (Alt));\n+                     Traverse_Declarations_Or_Statements\n+                       (Statements (Alt), Process);\n                      Next (Alt);\n                   end loop;\n                end;\n@@ -970,12 +1048,12 @@ package body ALFA is\n \n             when N_Extended_Return_Statement =>\n                Traverse_Handled_Statement_Sequence\n-                 (Handled_Statement_Sequence (N));\n+                 (Handled_Statement_Sequence (N), Process);\n \n             --  Loop\n \n             when N_Loop_Statement =>\n-               Traverse_Declarations_Or_Statements (Statements (N));\n+               Traverse_Declarations_Or_Statements (Statements (N), Process);\n \n             when others =>\n                null;\n@@ -989,17 +1067,21 @@ package body ALFA is\n    -- Traverse_Handled_Statement_Sequence --\n    -----------------------------------------\n \n-   procedure Traverse_Handled_Statement_Sequence (N : Node_Id) is\n+   procedure Traverse_Handled_Statement_Sequence\n+     (N       : Node_Id;\n+      Process : Node_Processing)\n+   is\n       Handler : Node_Id;\n \n    begin\n       if Present (N) then\n-         Traverse_Declarations_Or_Statements (Statements (N));\n+         Traverse_Declarations_Or_Statements (Statements (N), Process);\n \n          if Present (Exception_Handlers (N)) then\n             Handler := First (Exception_Handlers (N));\n             while Present (Handler) loop\n-               Traverse_Declarations_Or_Statements (Statements (Handler));\n+               Traverse_Declarations_Or_Statements\n+                 (Statements (Handler), Process);\n                Next (Handler);\n             end loop;\n          end if;\n@@ -1010,34 +1092,42 @@ package body ALFA is\n    -- Traverse_Package_Body --\n    ---------------------------\n \n-   procedure Traverse_Package_Body (N : Node_Id) is\n+   procedure Traverse_Package_Body\n+     (N       : Node_Id;\n+      Process : Node_Processing) is\n    begin\n-      Add_ALFA_Scope (N);\n-      Traverse_Declarations_Or_Statements (Declarations (N));\n-      Traverse_Handled_Statement_Sequence (Handled_Statement_Sequence (N));\n+      Traverse_Declarations_Or_Statements (Declarations (N), Process);\n+      Traverse_Handled_Statement_Sequence\n+        (Handled_Statement_Sequence (N), Process);\n    end Traverse_Package_Body;\n \n    ----------------------------------\n    -- Traverse_Package_Declaration --\n    ----------------------------------\n \n-   procedure Traverse_Package_Declaration (N : Node_Id) is\n+   procedure Traverse_Package_Declaration\n+     (N       : Node_Id;\n+      Process : Node_Processing)\n+   is\n       Spec : constant Node_Id := Specification (N);\n    begin\n-      Add_ALFA_Scope (N);\n-      Traverse_Declarations_Or_Statements (Visible_Declarations (Spec));\n-      Traverse_Declarations_Or_Statements (Private_Declarations (Spec));\n+      Traverse_Declarations_Or_Statements\n+        (Visible_Declarations (Spec), Process);\n+      Traverse_Declarations_Or_Statements\n+        (Private_Declarations (Spec), Process);\n    end Traverse_Package_Declaration;\n \n    ------------------------------\n    -- Traverse_Subprogram_Body --\n    ------------------------------\n \n-   procedure Traverse_Subprogram_Body (N : Node_Id) is\n+   procedure Traverse_Subprogram_Body\n+     (N       : Node_Id;\n+      Process : Node_Processing) is\n    begin\n-      Add_ALFA_Scope (N);\n-      Traverse_Declarations_Or_Statements (Declarations (N));\n-      Traverse_Handled_Statement_Sequence (Handled_Statement_Sequence (N));\n+      Traverse_Declarations_Or_Statements (Declarations (N), Process);\n+      Traverse_Handled_Statement_Sequence\n+        (Handled_Statement_Sequence (N), Process);\n    end Traverse_Subprogram_Body;\n \n end ALFA;"}, {"sha": "3d6252efb31e76413ff85437de99c2d8af06cca2", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -591,6 +591,11 @@ package Lib.Xref is\n \n    package ALFA is\n \n+      type Node_Processing is access procedure (N : Node_Id);\n+\n+      procedure Traverse_All_Compilation_Units (Process : Node_Processing);\n+      --  Call Process on all declarations through all compilation units\n+\n       procedure Collect_ALFA (Sdep_Table : Unit_Ref_Table; Num_Sdep : Nat);\n       --  Collect ALFA information from library units (for files and scopes)\n       --  and from cross-references. Fill in the tables in library package"}, {"sha": "29a5d4c339bfad27313fe7d0d30f42e32ca07cab", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -410,9 +410,8 @@ package body Make is\n    procedure Make_Failed (S : String);\n    --  Delete all temp files created by Gnatmake and call Osint.Fail, with the\n    --  parameter S (see osint.ads). This is called from the Prj hierarchy and\n-   --  the MLib hierarchy.\n-   --  This subprogram also prints current error messages on stdout (ie\n-   --  finalizes errout)\n+   --  the MLib hierarchy. This subprogram also prints current error messages\n+   --  on stdout (ie finalizes errout)\n \n    --------------------------\n    -- Obsolete Executables --\n@@ -424,8 +423,8 @@ package body Make is\n    --  compiled, or has already been compiled for another executable.\n \n    Max_Header : constant := 200;\n-   --  This needs a proper comment, it used to say \"arbitrary\"\n-   --  that's not an adequate comment ???\n+   --  This needs a proper comment, it used to say \"arbitrary\" that's not an\n+   --  adequate comment ???\n \n    type Header_Num is range 1 .. Max_Header;\n    --  Header_Num for the hash table Obsoleted below"}, {"sha": "16a245c05535491751832f23ee3e58423b803e5c", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 61, "deletions": 59, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Unchecked_Deallocation;\n with ALI;      use ALI;\n with Debug;\n with Err_Vars; use Err_Vars;\n@@ -40,12 +39,13 @@ with Snames;   use Snames;\n with Table;\n with Tempdir;\n \n-with Ada.Command_Line;  use Ada.Command_Line;\n+with Ada.Command_Line;           use Ada.Command_Line;\n+with Ada.Unchecked_Deallocation;\n \n-with GNAT.Case_Util;            use GNAT.Case_Util;\n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+with GNAT.Case_Util;             use GNAT.Case_Util;\n+with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n with GNAT.HTable;\n-with GNAT.Regexp;               use GNAT.Regexp;\n+with GNAT.Regexp;                use GNAT.Regexp;\n \n package body Makeutl is\n \n@@ -1077,16 +1077,17 @@ package body Makeutl is\n \n    function Is_Subunit (Source : Prj.Source_Id) return Boolean is\n       Src_Ind : Source_File_Index;\n+\n    begin\n       if Source.Kind = Sep then\n          return True;\n \n       --  A Spec, a file based language source or a body with a spec cannot be\n       --  a subunit.\n \n-      elsif Source.Kind = Spec or else\n-        Source.Unit = No_Unit_Index or else\n-        Other_Part (Source) /= No_Source\n+      elsif Source.Kind = Spec\n+        or else Source.Unit = No_Unit_Index\n+        or else Other_Part (Source) /= No_Source\n       then\n          return False;\n       end if;\n@@ -1263,42 +1264,6 @@ package body Makeutl is\n          end if;\n       end Add_Main;\n \n-      --------------------------\n-      -- Set_Multi_Unit_Index --\n-      --------------------------\n-\n-      procedure Set_Multi_Unit_Index\n-        (Project_Tree : Project_Tree_Ref := null;\n-         Index        : Int := 0) is\n-      begin\n-         if Index /= 0 then\n-            if Names.Last = 0 then\n-               Fail_Program\n-                 (Project_Tree,\n-                  \"cannot specify a multi-unit index but no main \" &\n-                  \"on the command line\");\n-\n-            elsif Names.Last > 1 then\n-               Fail_Program\n-                 (Project_Tree,\n-                  \"cannot specify several mains with a multi-unit index\");\n-\n-            else\n-               Names.Table (Names.Last).Index := Index;\n-            end if;\n-         end if;\n-      end Set_Multi_Unit_Index;\n-\n-      ------------\n-      -- Delete --\n-      ------------\n-\n-      procedure Delete is\n-      begin\n-         Names.Set_Last (0);\n-         Mains.Reset;\n-      end Delete;\n-\n       --------------------\n       -- Complete_Mains --\n       --------------------\n@@ -1451,12 +1416,24 @@ package body Makeutl is\n             end if;\n          end Do_Complete;\n \n+      --  Start of processing for Complete_Mains\n+\n       begin\n          Complete_All (Root_Project, Project_Tree);\n       end Complete_Mains;\n \n+      ------------\n+      -- Delete --\n+      ------------\n+\n+      procedure Delete is\n+      begin\n+         Names.Set_Last (0);\n+         Mains.Reset;\n+      end Delete;\n+\n       -----------------------\n-      -- FIll_From_Project --\n+      -- Fill_From_Project --\n       -----------------------\n \n       procedure Fill_From_Project\n@@ -1468,6 +1445,10 @@ package body Makeutl is\n          --  Add the main units from this project into Mains.\n          --  This takes into account the aggregated projects\n \n+         ----------------------------\n+         -- Add_Mains_From_Project --\n+         ----------------------------\n+\n          procedure Add_Mains_From_Project\n            (Project : Project_Id;\n             Tree    : Project_Tree_Ref)\n@@ -1513,6 +1494,8 @@ package body Makeutl is\n          procedure Fill_All is new For_Project_And_Aggregated\n            (Add_Mains_From_Project);\n \n+      --  Start of processing for Fill_From_Project\n+\n       begin\n          Fill_All (Root_Project, Project_Tree);\n       end Fill_From_Project;\n@@ -1522,20 +1505,15 @@ package body Makeutl is\n       ---------------\n \n       function Next_Main return String is\n-         Info : Main_Info;\n+         Info : constant Main_Info := Next_Main;\n       begin\n-         Info := Next_Main;\n          if Info = No_Main_Info then\n             return \"\";\n          else\n             return Get_Name_String (Info.File);\n          end if;\n       end Next_Main;\n \n-      ---------------\n-      -- Next_Main --\n-      ---------------\n-\n       function Next_Main return Main_Info is\n       begin\n          if Current >= Names.Last then\n@@ -1567,6 +1545,34 @@ package body Makeutl is\n       begin\n          Current := 0;\n       end Reset;\n+\n+      --------------------------\n+      -- Set_Multi_Unit_Index --\n+      --------------------------\n+\n+      procedure Set_Multi_Unit_Index\n+        (Project_Tree : Project_Tree_Ref := null;\n+         Index        : Int := 0)\n+      is\n+      begin\n+         if Index /= 0 then\n+            if Names.Last = 0 then\n+               Fail_Program\n+                 (Project_Tree,\n+                  \"cannot specify a multi-unit index but no main \" &\n+                  \"on the command line\");\n+\n+            elsif Names.Last > 1 then\n+               Fail_Program\n+                 (Project_Tree,\n+                  \"cannot specify several mains with a multi-unit index\");\n+\n+            else\n+               Names.Table (Names.Last).Index := Index;\n+            end if;\n+         end if;\n+      end Set_Multi_Unit_Index;\n+\n    end Mains;\n \n    -----------------------\n@@ -1633,10 +1639,9 @@ package body Makeutl is\n                   return;\n                end if;\n \n-               --  Because relative path arguments to --RTS= may be relative\n-               --  to the search directory prefix, those relative path\n-               --  arguments are converted only when they include directory\n-               --  information.\n+               --  Because relative path arguments to --RTS= may be relative to\n+               --  the search directory prefix, those relative path arguments\n+               --  are converted only when they include directory information.\n \n                if not Is_Absolute_Path (Sw (Start .. Sw'Last)) then\n                   if Parent'Length = 0 then\n@@ -1772,10 +1777,6 @@ package body Makeutl is\n       Write_Eol;\n    end Verbose_Msg;\n \n-   -----------------\n-   -- Verbose_Msg --\n-   -----------------\n-\n    procedure Verbose_Msg\n      (N1                : File_Name_Type;\n       S1                : String;\n@@ -1794,6 +1795,7 @@ package body Makeutl is\n    -----------\n \n    package body Queue is\n+\n       type Q_Record is record\n          Info      : Source_Info;\n          Processed : Boolean;"}, {"sha": "29e9e1a7af6aabc4e085d89a22baa25f7c99732b", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 53, "deletions": 57, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -31,7 +31,7 @@ with ALI;\n with Namet;    use Namet;\n with Opt;\n with Osint;\n-with Prj;         use Prj;\n+with Prj;      use Prj;\n with Prj.Tree;\n with Types;    use Types;\n \n@@ -40,6 +40,7 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n package Makeutl is\n \n    type Fail_Proc is access procedure (S : String);\n+   --  Pointer to procedure which outputs a failure message\n \n    On_Windows : constant Boolean := Directory_Separator = '\\';\n    --  True when on Windows\n@@ -119,8 +120,8 @@ package Makeutl is\n    --  Return True if source is a subunit\n \n    procedure Initialize_Source_Record (Source : Source_Id);\n-   --  Get information either about the source file, the object and\n-   --  dependency file, as well as their timestamps. This includes timestamps.\n+   --  Get information either about the source file, or the object and\n+   --  dependency file, as well as their timestamps.\n \n    function Is_External_Assignment\n      (Env  : Prj.Tree.Environment;\n@@ -230,12 +231,12 @@ package Makeutl is\n       Exit_Code    : Osint.Exit_Code_Type := Osint.E_Success;\n       S            : String := \"\");\n    --  Terminate program, with or without a message, setting the status code\n-   --  according to Fatal.\n-   --  This properly removes all temporary files\n+   --  according to Fatal. This properly removes all temporary files.\n \n    -----------------------\n    -- Project_Tree data --\n    -----------------------\n+\n    --  The following types are specific to builders, and associated with each\n    --  of the loaded project trees.\n \n@@ -288,10 +289,10 @@ package Makeutl is\n       Option_Compile_Only   : Boolean := False;   --  Was \"-c\" specified ?\n       Option_Bind_Only      : Boolean := False;\n       Option_Link_Only      : Boolean := False);\n-   --  Compute which compilation phases will be needed for Tree. This also\n-   --  does the computation for aggregated trees.\n-   --  This also check whether we'll need to check the closure of the files we\n-   --  have just compiled to add them to the queue.\n+   --  Compute which compilation phases will be needed for Tree. This also does\n+   --  the computation for aggregated trees. This also check whether we'll need\n+   --  to check the closure of the files we have just compiled to add them to\n+   --  the queue.\n \n    -----------\n    -- Mains --\n@@ -313,8 +314,9 @@ package Makeutl is\n       Project   : Project_Id;\n       Tree      : Project_Tree_Ref;\n    end record;\n+\n    No_Main_Info : constant Main_Info :=\n-     (No_File, 0, No_Location, No_Source, No_Project, null);\n+                    (No_File, 0, No_Location, No_Source, No_Project, null);\n \n    package Mains is\n       procedure Add_Main\n@@ -323,17 +325,14 @@ package Makeutl is\n          Location : Source_Ptr := No_Location;\n          Project  : Project_Id := No_Project;\n          Tree     : Project_Tree_Ref := null);\n-      --  Add one main to the table.\n-      --  This is in general used to add the main files specified on the\n-      --  command line.\n-      --  Index is used for multi-unit source files, and indicates which unit\n-      --  within the source is concerned.\n+      --  Add one main to the table. This is in general used to add the main\n+      --  files specified on the command line. Index is used for multi-unit\n+      --  source files, and indicates which unit in the source is concerned.\n       --  Location is the location within the project file (if a project file\n-      --  is used).\n-      --  Project and Tree indicate to which project the main should belong.\n-      --  In particular, for aggregate projects, this isn't necessarily the\n-      --  main project tree. These can be set to No_Project and null when not\n-      --  using projects.\n+      --  is used). Project and Tree indicate to which project the main should\n+      --  belong. In particular, for aggregate projects, this isn't necessarily\n+      --  the main project tree. These can be set to No_Project and null when\n+      --  not using projects.\n \n       procedure Delete;\n       --  Empty the table\n@@ -347,17 +346,17 @@ package Makeutl is\n       --  If a single main file was defined, this subprogram indicates which\n       --  unit inside it is the main (case of a multi-unit source files).\n       --  Errors are raised if zero or more than one main file was defined,\n-      --  and Index is not 0.\n-      --  This subprogram is used for the handling of the command line switch.\n+      --  and Index is non-zaero. This subprogram is used for the handling\n+      --  of the command line switch.\n \n       function Next_Main return String;\n       function Next_Main return Main_Info;\n-      --  Moves the cursor forward and returns the new current entry.\n-      --  Returns No_File_And_Loc if there are no more mains in the table.\n+      --  Moves the cursor forward and returns the new current entry. Returns\n+      --  No_File_And_Loc if there are no more mains in the table.\n \n       function Number_Of_Mains (Tree : Project_Tree_Ref) return Natural;\n-      --  Returns the number of mains in this project tree (if Tree is null,\n-      --  it returns the total number of project trees)\n+      --  Returns the number of mains in this project tree (if Tree is null, it\n+      --  returns the total number of project trees)\n \n       procedure Fill_From_Project\n         (Root_Project : Project_Id;\n@@ -371,7 +370,7 @@ package Makeutl is\n          Project_Tree : Project_Tree_Ref);\n       --  If some main units were already added from the command line, check\n       --  that they all belong to the root project, and that they are full\n-      --  full paths rather than (partial) base names (e.g. no body suffix was\n+      --  paths rather than (partial) base names (e.g. no body suffix was\n       --  specified).\n \n    end Mains;\n@@ -383,29 +382,29 @@ package Makeutl is\n    type Source_Info_Format is (Format_Gprbuild, Format_Gnatmake);\n \n    package Queue is\n-      --  The queue of sources to be checked for compilation.\n-      --  There can be a single such queue per application.\n+\n+      --  The queue of sources to be checked for compilation. There can be a\n+      --  single such queue per application.\n \n       type Source_Info (Format : Source_Info_Format := Format_Gprbuild) is\n          record\n             case Format is\n-            when Format_Gprbuild =>\n-               Tree : Project_Tree_Ref := null;\n-               Id   : Source_Id := null;\n-\n-            when Format_Gnatmake =>\n-               File      : File_Name_Type := No_File;\n-               Unit      : Unit_Name_Type := No_Unit_Name;\n-               Index     : Int := 0;\n-               Project   : Project_Id := No_Project;\n+               when Format_Gprbuild =>\n+                  Tree : Project_Tree_Ref := null;\n+                  Id   : Source_Id        := null;\n+\n+               when Format_Gnatmake =>\n+                  File      : File_Name_Type := No_File;\n+                  Unit      : Unit_Name_Type := No_Unit_Name;\n+                  Index     : Int            := 0;\n+                  Project   : Project_Id     := No_Project;\n             end case;\n          end record;\n       --  Information about files stored in the queue. The exact information\n       --  depends on the builder, and in particular whether it only supports\n       --  project-based files (in which case we have a full Source_Id record).\n \n-      No_Source_Info : constant Source_Info :=\n-        (Format_Gprbuild, null, null);\n+      No_Source_Info : constant Source_Info := (Format_Gprbuild, null, null);\n \n       procedure Initialize\n         (Queue_Per_Obj_Dir : Boolean;\n@@ -429,21 +428,19 @@ package Makeutl is\n       --  Returns True if the queue is empty\n \n       function Is_Virtually_Empty return Boolean;\n-      --  Returns True if the queue is empty or if all object directories are\n-      --  busy.\n+      --  Returns True if queue is empty or if all object directories are busy\n \n       procedure Insert (Source  : Source_Info; With_Roots : Boolean := False);\n       function Insert\n         (Source  : Source_Info; With_Roots : Boolean := False) return Boolean;\n-      --  Insert source in the queue.\n-      --  The second version returns False if the Source was already marked in\n-      --  the queue.\n-      --  If With_Roots is True and the source is in Format_Gprbuild mode (ie\n-      --  with a project), this procedure also includes the \"Roots\" for this\n-      --  main, ie all the other files that must be included in the library or\n-      --  binary (in particular to combine Ada and C files connected through\n-      --  pragma Export/Import). When the roots are computed, they are also\n-      --  stored in the corresponding Source_Id for later reuse by the binder.\n+      --  Insert source in the queue. The second version returns False if the\n+      --  Source was already marked in the queue. If With_Roots is True and the\n+      --  source is in Format_Gprbuild mode (ie with a project), this procedure\n+      --  also includes the \"Roots\" for this main, ie all the other files that\n+      --  must be included in the library or binary (in particular to combine\n+      --  Ada and C files connected through pragma Export/Import). When the\n+      --  roots are computed, they are also stored in the corresponding\n+      --  Source_Id for later reuse by the binder.\n \n       procedure Insert_Project_Sources\n         (Project        : Project_Id;\n@@ -452,13 +449,12 @@ package Makeutl is\n          Unique_Compile : Boolean);\n       --  Insert all the compilable sources of the project in the queue. If\n       --  All_Project is true, then all sources from imported projects are also\n-      --  inserted.\n-      --  Unique_Compile should be true if \"-u\" was specified on the command\n-      --  line: if True and some files were given on the command line), only\n-      --  those files will be compiled (so Insert_Project_Sources will do\n+      --  inserted. Unique_Compile should be true if \"-u\" was specified on the\n+      --  command line: if True and some files were given on the command line),\n+      --  only those files will be compiled (so Insert_Project_Sources will do\n       --  nothing). If True and no file was specified on the command line, all\n-      --  files of the project(s) will be compiled.\n-      --  This procedure also processed aggregated projects.\n+      --  files of the project(s) will be compiled. This procedure also\n+      --  processed aggregated projects.\n \n       procedure Insert_Withed_Sources_For\n         (The_ALI               : ALI.ALI_Id;"}, {"sha": "6c31eab28375f8471b3821c45c85e4727da6b094", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -440,7 +440,7 @@ package body Par_SCO is\n       -------------------\n \n       procedure Output_Header (T : Character) is\n-         Loc   : Source_Ptr := No_Location;\n+         Loc : Source_Ptr := No_Location;\n          --  Node whose sloc is used for the decision\n \n       begin\n@@ -454,8 +454,8 @@ package body Par_SCO is\n \n             when 'G' | 'P' =>\n \n-               --  For entry, the token sloc is from the N_Entry_Body.\n-               --  For PRAGMA, we must get the location from the pragma node.\n+               --  For entry, the token sloc is from the N_Entry_Body. For\n+               --  PRAGMA, we must get the location from the pragma node.\n                --  Argument N is the pragma argument, and we have to go up two\n                --  levels (through the pragma argument association) to get to\n                --  the pragma node itself.\n@@ -482,10 +482,11 @@ package body Par_SCO is\n             Last => False);\n \n          if T = 'P' then\n-            --  For pragmas we also must make an entry in the hash table\n-            --  for later access by Set_SCO_Pragma_Enabled. We set the\n-            --  pragma as disabled now, the call will change C2 to 'e'\n-            --  to enable the pragma header entry.\n+\n+            --  For pragmas we also must make an entry in the hash table for\n+            --  later access by Set_SCO_Pragma_Enabled. We set the pragma as\n+            --  disabled now, the call will change C2 to 'e' to enable the\n+            --  pragma header entry.\n \n             SCO_Table.Table (SCO_Table.Last).C2 := 'd';\n             Condition_Pragma_Hash_Table.Set (Loc, SCO_Table.Last);\n@@ -792,6 +793,7 @@ package body Par_SCO is\n             Traverse_Generic_Instantiation (Lu);\n \n          when others =>\n+\n             --  All other cases of compilation units (e.g. renamings), generate\n             --  no SCO information.\n \n@@ -1156,11 +1158,14 @@ package body Par_SCO is\n                   declare\n                      Cond : constant Node_Id :=\n                               Condition (Entry_Body_Formal_Part (N));\n+\n                   begin\n                      Set_Statement_Entry;\n+\n                      if Present (Cond) then\n                         Process_Decisions_Defer (Cond, 'G');\n                      end if;\n+\n                      Traverse_Subprogram_Or_Task_Body (N);\n                   end;\n "}, {"sha": "a2058e2540f4620fdad0d063027640d22d214e2a", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -918,9 +918,9 @@ package body Prj.Nmsc is\n       Flags     : Processing_Flags)\n    is\n       Data : Tree_Processing_Data :=\n-               (Tree           => Tree,\n-                Node_Tree      => Node_Tree,\n-                Flags          => Flags);\n+               (Tree      => Tree,\n+                Node_Tree => Node_Tree,\n+                Flags     => Flags);\n \n       Project_Files : constant Prj.Variable_Value :=\n                         Prj.Util.Value_Of\n@@ -930,9 +930,7 @@ package body Prj.Nmsc is\n \n       Project_Path_For_Aggregate : Prj.Env.Project_Search_Path;\n \n-      procedure Found_Project_File\n-        (Path  : Path_Information;\n-         Rank  : Natural);\n+      procedure Found_Project_File (Path : Path_Information; Rank : Natural);\n       --  Called for each project file aggregated by Project\n \n       procedure Expand_Project_Files is\n@@ -944,11 +942,9 @@ package body Prj.Nmsc is\n       -- Found_Project_File --\n       ------------------------\n \n-      procedure Found_Project_File\n-        (Path  : Path_Information;\n-         Rank  : Natural)\n-      is\n+      procedure Found_Project_File (Path : Path_Information; Rank : Natural) is\n          pragma Unreferenced (Rank);\n+\n       begin\n          if Path.Name /= Project.Path.Name then\n             Debug_Output (\"Aggregates: \", Name_Id (Path.Display_Name));\n@@ -5046,8 +5042,8 @@ package body Prj.Nmsc is\n       Remove_Source_Dirs : Boolean := False;\n \n       procedure Add_To_Or_Remove_From_Source_Dirs\n-        (Path  : Path_Information;\n-         Rank  : Natural);\n+        (Path : Path_Information;\n+         Rank : Natural);\n       --  When Removed = False, the directory Path_Id to the list of\n       --  source_dirs if not already in the list. When Removed = True,\n       --  removed directory Path_Id if in the list.\n@@ -5060,14 +5056,14 @@ package body Prj.Nmsc is\n       ---------------------------------------\n \n       procedure Add_To_Or_Remove_From_Source_Dirs\n-        (Path  : Path_Information;\n-         Rank  : Natural)\n+        (Path : Path_Information;\n+         Rank : Natural)\n       is\n-         List       : String_List_Id;\n-         Prev       : String_List_Id;\n-         Rank_List  : Number_List_Index;\n-         Prev_Rank  : Number_List_Index;\n-         Element    : String_Element;\n+         List      : String_List_Id;\n+         Prev      : String_List_Id;\n+         Rank_List : Number_List_Index;\n+         Prev_Rank : Number_List_Index;\n+         Element   : String_Element;\n \n       begin\n          Prev      := Nil_String;\n@@ -5153,11 +5149,11 @@ package body Prj.Nmsc is\n                      ((not Source_Files.Default\n                         and then Source_Files.Values = Nil_String)\n                        or else\n-                      (not Source_Dirs.Default\n-                        and then Source_Dirs.Values = Nil_String)\n+                         (not Source_Dirs.Default\n+                           and then Source_Dirs.Values = Nil_String)\n                        or else\n-                      (not Languages.Default\n-                        and then Languages.Values = Nil_String))\n+                         (not Languages.Default\n+                           and then Languages.Values = Nil_String))\n                      and then Project.Extends = No_Project;\n \n    --  Start of processing for Get_Directories"}, {"sha": "1a4ca34de0273e0d40edaceccf0e47ecbe17d7c9", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1984,9 +1984,11 @@ package body Prj.Proc is\n          New_Value    : Variable_Value)\n       is\n          Name : constant Name_Id := Name_Of (Current_Item, Node_Tree);\n+\n          Is_Attribute : constant Boolean :=\n                           Kind_Of (Current_Item, Node_Tree) =\n                             N_Attribute_Declaration;\n+\n          Var  : Variable_Id := No_Variable;\n \n       begin"}, {"sha": "2f4dea1ee6c954ffee48aebe827cb7e0e569c8b4", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -150,9 +150,10 @@ package body Prj is\n \n    procedure Delete_Temp_Config_Files (Project_Tree : Project_Tree_Ref) is\n       Success : Boolean;\n-      Proj    : Project_List;\n       pragma Warnings (Off, Success);\n \n+      Proj : Project_List;\n+\n    begin\n       if not Debug.Debug_Flag_N then\n          if Project_Tree /= null then\n@@ -171,6 +172,7 @@ package body Prj is\n                   Proj.Project.Config_File_Name := No_Path;\n                   Proj.Project.Config_File_Temp := False;\n                end if;\n+\n                Proj := Proj.Next;\n             end loop;\n          end if;\n@@ -942,8 +944,11 @@ package body Prj is\n \n    procedure Free (Tree : in out Project_Tree_Ref) is\n       procedure Unchecked_Free is new\n-        Ada.Unchecked_Deallocation (Project_Tree_Data, Project_Tree_Ref);\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n+        Ada.Unchecked_Deallocation\n+          (Project_Tree_Data, Project_Tree_Ref);\n+\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation\n           (Project_Tree_Appdata'Class, Project_Tree_Appdata_Access);\n \n    begin\n@@ -1478,11 +1483,13 @@ package body Prj is\n    ----------------\n \n    function Debug_Name (Tree : Project_Tree_Ref) return Name_Id is\n-      P : Project_List := Tree.Projects;\n+      P : Project_List;\n+\n    begin\n       Name_Len := 0;\n       Add_Str_To_Name_Buffer (\"Tree [\");\n \n+      P := Tree.Projects;\n       while P /= null loop\n          if P /= Tree.Projects then\n             Add_Char_To_Name_Buffer (',');"}, {"sha": "e300dd99d5dc70e966d316abf1adcc16c45b3cd6", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1498,8 +1498,8 @@ package Prj is\n    --  Data for a project tree\n \n    function Debug_Name (Tree : Project_Tree_Ref) return Name_Id;\n-   --  If debug traces are activated, return an identitier for the\n-   --  project tree. This modifies Name_Buffer\n+   --  If debug traces are activated, return an identitier for the project\n+   --  tree. This modifies Name_Buffer.\n \n    procedure Expect (The_Token : Token_Type; Token_Image : String);\n    --  Check that the current token is The_Token. If it is not, then output\n@@ -1524,7 +1524,7 @@ package Prj is\n    --  whether a project was already processed for instance.\n \n    generic\n-      with procedure Action (Project : Project_Id; Tree    : Project_Tree_Ref);\n+      with procedure Action (Project : Project_Id; Tree : Project_Tree_Ref);\n    procedure For_Project_And_Aggregated\n      (Root_Project : Project_Id;\n       Root_Tree    : Project_Tree_Ref);\n@@ -1691,18 +1691,17 @@ package Prj is\n    --  Does nothing if Debug.Debug_Flag_N is set\n \n    procedure Delete_Temp_Config_Files (Project_Tree : Project_Tree_Ref);\n-   --  Delete all temporary config files.\n-   --  Does nothing if Debug.Debug_Flag_N is set or if Project_Tree is null.\n-   --  This initially came from gnatmake\n+   --  Delete all temporary config files. Does nothing if Debug.Debug_Flag_N is\n+   --  set or if Project_Tree is null. This initially came from gnatmake\n    --  ??? Should this be combined with Delete_All_Temp_Files above\n \n    procedure Delete_Temporary_File\n      (Shared : Shared_Project_Tree_Data_Access := null;\n       Path   : Path_Name_Type);\n    --  Delete a temporary file from the disk. The file is also removed from the\n    --  list of temporary files to delete at the end of the program, in case\n-   --  another program running on the same machine has recreated it.\n-   --  Does nothing if Debug.Debug_Flag_N is set\n+   --  another program running on the same machine has recreated it. Does\n+   --  nothing if Debug.Debug_Flag_N is set\n \n    Virtual_Prefix : constant String := \"v$\";\n    --  The prefix for virtual extending projects. Because of the '$', which is\n@@ -1734,8 +1733,8 @@ package Prj is\n    procedure Debug_Increase_Indent\n      (Str : String := \"\"; Str2 : Name_Id := No_Name);\n    procedure Debug_Decrease_Indent (Str : String := \"\");\n-   --  Increase or decrease the indentation level for debug traces.\n-   --  This indentation level only affects output done through Debug_Output.\n+   --  Increase or decrease the indentation level for debug traces. This\n+   --  indentation level only affects output done through Debug_Output.\n \n private\n "}, {"sha": "cd0970a3aaf9003169cb8a3264b5e805221ef0ad", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 502, "deletions": 0, "changes": 502, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -18,6 +18,7 @@\n * Scenarios in Projects::\n * Library Projects::\n * Project Extension::\n+* Aggregate Projects::\n * Project File Reference::\n @end menu\n \n@@ -1103,6 +1104,12 @@ and no project file with the @file{^.gpr^.GPR^} extension is found, then\n the file is searched for exactly as written in the @code{with} clause,\n that is with no extension.\n \n+As mentioned above, the path after a @code{with} has to be a literal\n+string, and you cannot use concatenation, or lookup the value of external\n+variables to change the directories from which a project is loaded.\n+A solution if you need something like this is to use aggregate projects\n+(@pxref{Aggregate Projects}).\n+\n @cindex project path\n When a relative path or a base name is used, the\n project files are searched relative to each of the directories in the\n@@ -2109,6 +2116,501 @@ When building project @file{c_ext.gpr}, the entire modified project space is\n considered for recompilation, including the sources of @file{b.gpr} that are\n impacted by the changes in @code{A1} and @code{C1}.\n \n+@c ---------------------------------------------\n+@node Aggregate Projects\n+@section Aggregate Projects\n+@c ---------------------------------------------\n+\n+@noindent\n+\n+Aggregate projects are an extension of the project paradigm, and are\n+meant to solve a few specific use cases that cannot be solved directly\n+using standard projects. This section will go over a few of these use\n+cases to try and explain what you can use aggregate projects for.\n+\n+@subsection Building all main units from a single project tree\n+\n+Most often, an application is organized into modules and submodules,\n+which are very conveniently represented as a project tree or graph\n+(the root project A @code{with}s the projects for each modules (say B and C),\n+which in turn @code{with} projects for submodules.\n+\n+Very often, modules will build their own executables (for testing\n+purposes for instance), or libraries (for easier reuse in various\n+contexts).\n+\n+However, if you build your project through gnatmake or gprbuild, using\n+a syntax similar to\n+\n+@smallexample\n+   gprbuild -PA.gpr\n+@end smallexample\n+\n+this will only rebuild the main units of project A, not those of the\n+imported projects B and C. Therefore you have to spawn several\n+gnatmake commands, one per project, to build all executables.\n+This is a little inconvenient, but more importantly is inefficient\n+(since gnatmake needs to do duplicate work to ensure that sources are\n+up-to-date, and cannot easily compile things in parallel when using\n+the -j switch).\n+\n+Also libraries are always rebuild when building a project.\n+\n+You could therefore define an aggregate project Agg that groups A, B\n+and C. Then, when you build with\n+\n+@smallexample\n+    gprbuild -PAgg.gpr\n+@end smallexample\n+\n+this will build all main units from A, B and C.\n+\n+@smallexample @c projectfile\n+   aggregate project Agg is\n+      for Project_Files use (\"a.gpr\", \"b.gpr\", \"c.gpr\");\n+   end Agg;\n+@end smallexample\n+\n+If B or C do not define any main unit (through their Main\n+attribute), all their sources are build. When you do not group them\n+in the aggregate project, only those sources that are needed by A\n+will be build.\n+\n+If you add a main unit to a project P not already explicitly referenced in the\n+aggregate project, you will need to add \"p.gpr\" in the list of project\n+files for the aggregate project, or the main unit will not be built when\n+building the aggregate project.\n+\n+@subsection Building a set of projects with a single command\n+\n+One other case is when you have multiple applications and libraries\n+that are build independently from each other (but they can be build in\n+parallel). For instance, you have a project tree rooted at A, and\n+another one (which might share some subprojects) rooted at B.\n+\n+Using only gprbuild, you could do\n+\n+@smallexample\n+  gprbuild -PA.gpr\n+  gprbuild -PB.gpr\n+@end smallexample\n+\n+to build both. But again, gprbuild has to do some duplicate work for\n+those files that are shared between the two, and cannot truly build\n+things in parallel efficiently.\n+\n+If the two projects are really independent, share no sources other\n+than through a common subproject, and have no source files with a\n+common basename, you could create a project C that imports A and\n+B. But these restrictions are often too strong, and one has to build\n+them independently. An aggregate project does not have these\n+limitations, and can aggregate two project trees that have common\n+sources.\n+\n+@smallexample\n+Aggregate projects can group projects with duplicate file names\n+@end smallexample\n+\n+This scenario is particularly useful in environment like VxWork 653\n+where the applications running in the multiple partitions can be build\n+in parallel through a single gprbuild command. This also works nicely\n+with Annex E.\n+\n+@smallexample\n+   Aggregate projects can be used to build multiple partitions\n+@end smallexample\n+\n+@subsection Define a build environment\n+\n+The environment variables at the time you launch gprbuild or gprbuild\n+will influence the view these tools have of the project (PATH to find\n+the compiler, ADA_PROJECT_PATH or GPR_PROJECT_PATH to find the\n+projects, environment variables that are referenced in project files\n+through the \"external\" statement,...). Several command line switches\n+can be used to override those (-X or -aP), but on some systems and\n+with some projects, this might make the command line too long, and on\n+all systems often make it hard to read.\n+\n+An aggregate project can be used to set the environment for all\n+projects build through that aggregate. One of the nice aspects is that\n+you can put the aggregate project under configuration management, and\n+make sure all your user have a consistent environment when\n+building. The syntax looks like\n+\n+@smallexample @c projectfile\n+   aggregate project Agg is\n+      for Project_Files use (\"A.gpr\", \"B.gpr\");\n+      for Project_Path use (\"../dir1\", \"../dir1/dir2\");\n+      for External (\"BUILD\") use \"PRODUCTION\";\n+\n+      package Builder is\n+         for Switches (\"Ada\") use (\"-q\");\n+      end Builder;\n+   end Agg;\n+@end smallexample\n+\n+One of the often requested features in projects is to be able to\n+reference external variables in @code{with} statements, as in\n+\n+@smallexample @c projectfile\n+  with external(\"SETUP\") & \"path/prj.gpr\";   --  ILLEGAL\n+  project MyProject is\n+     ...\n+  end MyProject;\n+@end smallexample\n+\n+For various reasons, this isn't authorized. But using aggregate\n+projects provide an elegant solution. For instance, you could\n+use a project file like:\n+\n+@smallexample @c projectfile\n+aggregate project Agg is\n+    for Project_Path use (external(\"SETUP\") % \"path\");\n+    for Project_Files use (\"myproject.gpr\");\n+end Agg;\n+\n+\n+with \"prj.gpr\";  --  searched on Agg'Project_Path\n+project MyProject is\n+   ...\n+end MyProject;\n+@end smallexample\n+\n+@subsection Performance improvements in builder\n+\n+The loading of aggregate projects is optimized in gprbuild and\n+gnatmake, so that all files are searched for only once on the disk\n+(thus reducing the number of system calls and contributing to faster\n+compilation times especially on systems with sources on remote\n+servers). As part of the loading, gprbuild and gnatmake compute how\n+and where a source file should be compiled, and even if it is found\n+several times in the aggregated projects it will be compiled only\n+once.\n+\n+Since there is no ambiguity as to which switches should be used, files\n+can be compiled in parallel (through the usual -j switch) and this can\n+be done while maximizing the use of CPUs (compared to launching\n+multiple gprbuild and gnatmake commands in parallel).\n+\n+@subsection Syntax of aggregate projects\n+\n+An aggregate project follows the general syntax of project files. The\n+recommended extension is still @file{.gpr}. However, a special\n+@code{aggregate} qualifier must be put before the keyword\n+@code{project}.\n+\n+An aggregate project cannot @code{with} any other project (standard or\n+aggregate), except an abstract project which can be used to share\n+attribute values. Building other aggregate projects from an aggregate\n+project is done through the Project_Files attribute (see below).\n+\n+An aggregate project does not have any source files directly (only\n+through other standard projects). Therefore a number of the standard\n+attributes and packages are forbidden in an aggregate project. Here is the\n+(non exhaustive) list:\n+\n+@itemize @bullet\n+@item Languages\n+@item Source_files, Source_List_File and other attributes dealing with\n+  list of sources.\n+@item Source_Dirs, Exec_Dir and Object_Dir\n+@item Library_Dir, Library_Name and other library-related attributes\n+@item Main\n+@item Roots\n+@item Externally_Built\n+@item Inherit_Source_Path\n+@item Excluded_Source_Dirs\n+@item Locally_Removed_Files\n+@item Excluded_Source_Fies\n+@item Excluded_Source_List_File\n+@item Interfaces\n+@end itemize\n+\n+The only package that is authorized (albeit optional) is\n+Builder. Other packages (in particular Compiler, Binder and Linker)\n+are forbidden. It is an error to have any of these\n+(and such an error prevents the proper loading of the aggregate\n+project).\n+\n+Three new attributes have been created, which can only be used in the\n+context of aggregate projects:\n+\n+@table @asis\n+@item @b{Project_Files}:\n+@cindex @code{Project_Files}\n+\n+This attribute is compulsory (or else we are not aggregating any project,\n+and thus not doing anything). It specifies a list of @file{.gpr} files\n+that are grouped in the aggregate. The list may be empty. The project\n+files can be either other aggregate projects, or standard projects. When\n+grouping standard projects, you can have both the root of a project tree\n+(and you do not need to specify all its imported projects), and any project\n+within the tree.\n+\n+Basically, the idea is to specify all those projects that have\n+main units you want to build and link, or libraries you want to\n+build. You can even specify projects that do not use the Main\n+attribute nor the @code{Library_*} attributes, and the result will be to\n+build all their source files (not just the ones needed by other\n+projects).\n+\n+The file can include paths (absolute or relative). Paths are\n+relative to the location of the aggregate project file itself (if\n+you use a base name, we expect to find the .gpr file in the same\n+directory as the aggregate project file). The extension @file{.gpr} is\n+mandatory, since this attribute contains file names, not project names.\n+\n+Paths can also include the @code{\"*\"} and @code{\"**\"} globbing patterns. The\n+latter indicates that any subdirectory (recursively) will be\n+searched for matching files. The latter (@code{\"**\"}) can only occur at the\n+last position in the directory part (ie @code{\"a/**/*.gpr\"} is supported, but\n+not @code{\"**/a/*.gpr\"}). Starting the pattern with @code{\"**\"} is equivalent\n+to starting with @code{\"./**\"}.\n+\n+For now, the pattern @code{\"*\"} is only allowed in the filename part, not\n+in the directory part. This is mostly for efficiency reasons to limit the\n+number of system calls that are needed.\n+\n+Here are a few valid examples:\n+\n+@smallexample @c projectfile\n+    for Project_Files use (\"a.gpr\", \"subdir/b.gpr\");\n+    --  two specific projects relative to the directory of agg.gpr\n+\n+    for Project_Files use (\"**/*.gpr\");\n+    --  all projects recursively\n+@end smallexample\n+\n+@item @b{Project_Path}:\n+@cindex @code{Project_Path}\n+\n+This attribute can be used to specify a list of directories in\n+which to look for project files in @code{with} statements.\n+\n+When you specify a project in Project_Files\n+say @code{\"x/y/a.gpr\"}), and this projects imports a project \"b.gpr\", only\n+b.gpr is searched in the project path. a.gpr must be exactly at\n+<dir of the aggregate>/x/y/a.gpr.\n+\n+This attribute, however, does not affect the search for the aggregated\n+project files specified with @code{Project_Files}.\n+\n+Each aggregate project has its own (that is if agg1.gpr includes\n+agg2.gpr, they can potentially both have a different project path).\n+This project path is defined as the concatenation, in that order, of\n+the current directory, followed by the command line -aP switches,\n+then the directories from the Project_Path attribute, then the\n+directories from the GPR_PROJECT_PATH and ADA_PROJECT_PATH env.\n+variables, and finally the predefined directories.\n+\n+In the example above, agg2.gpr's project path is not influenced by\n+the attribute agg1'Project_Path, nor is agg1 influenced by\n+agg2'Project_Path.\n+\n+This can potentially lead to errors. In the following example:\n+\n+@smallexample\n+     +---------------+                  +----------------+\n+     | Agg1.gpr      |-=--includes--=-->| Agg2.gpr       |\n+     |  'project_path|                  |  'project_path |\n+     |               |                  |                |\n+     +---------------+                  +----------------+\n+           :                                   :\n+           includes                        includes\n+           :                                   :\n+           v                                   v\n+       +-------+                          +---------+\n+       | P.gpr |<---------- withs --------|  Q.gpr  |\n+       +-------+---------\\                +---------+\n+           |             |\n+           withs         |\n+           |             |\n+           v             v\n+       +-------+      +---------+\n+       | R.gpr |      | R'.gpr  |\n+       +-------+      +---------+\n+@end smallexample\n+\n+When looking for p.gpr, both aggregates find the same physical file on\n+the disk. However, it might happen that with their different project\n+paths, both aggregate projects would in fact find a different r.gpr.\n+Since we have a common project (p.gpr) \"with\"ing two different r.gpr,\n+this will be reported as an error by the builder.\n+\n+Directories are relative to the location of the aggregate project file.\n+\n+Here are a few valid examples:\n+\n+@smallexample @c projectfile\n+   for Project_Path use (\"/usr/local/gpr\", \"gpr/\");\n+@end smallexample\n+\n+@item @b{External}:\n+@cindex @code{External}\n+\n+This attribute can be used to set the value of environment\n+variables as retrieved through the @code{external} statement\n+in projects. It does not affect the environment variables\n+themselves (so for instance you cannot use it to change the value\n+of your PATH as seen from the spawned compiler).\n+\n+This attribute affects the external values as seen in the rest of\n+the aggreate projects, and in the aggregated projects.\n+\n+The exact value of external a variable comes from one of three\n+sources (each level overrides the previous levels):\n+\n+@itemize @bullet\n+@item An External attribute in aggregate project, for instance\n+    @code{for External (\"BUILD_MODE\") use \"DEBUG\"};\n+\n+@item Environment variables\n+\n+These override the value given by the attribute, so that\n+users can override the value set in the (presumably shared\n+with others in his team) aggregate project.\n+\n+@item The -X command line switch to gprbuild and gnatmake\n+\n+This always takes precedence.\n+\n+@end itemize\n+\n+This attribute is only taken into account in the main aggregate\n+project (i.e. the one specified on the command line to gprbuild or\n+natmake), and ignored in other aggregate projects. It is invalid\n+in standard projects.\n+The goal is to have a consistent value in all\n+projects that are build through the aggregate, which would not\n+be the case in the diamond case: A groups the aggregate\n+projects B and C, which both (either directly or indirectly)\n+build the project P. If B and C could set different values for\n+the environment variables, we would have two different views of\n+P, which in particular might impact the list of source files in P.\n+\n+@end table\n+\n+@subsection package Builder in aggregate projects\n+\n+As we mentioned before, only the package Builder can be specified in\n+an aggregate project. In this package, only the following attributes\n+are valid:\n+\n+@table @asis\n+@item @b{Switches}:\n+@cindex @code{Switches}\n+This attribute gives the list of switches to use for the builder\n+(gprbuild or gnatmake), depending on the language of the main file.\n+For instance,\n+\n+@smallexample @c projectfile\n+for Switches (\"Ada\") use (\"-d\", \"-p\");\n+for Switches (\"C\")   use (\"-p\");\n+@end smallexample\n+\n+These switches are only read from the main aggregate project (the\n+one passed on the command line), and ignored in all other aggregate\n+projects or projects.\n+\n+It can only contain builder switches, not compiler switches.\n+\n+@item @b{Global_Compilation_Switches}\n+@cindex @code{Global_Compilation_Switches}\n+\n+This attribute gives the list of compiler switches for the various\n+languages. For instance,\n+\n+@smallexample @c projectfile\n+for Global_Compilation_Switches (\"Ada\") use (\"-O1\", \"-g\");\n+for Global_Compilation_Switches (\"C\")   use (\"-O2\");\n+@end smallexample\n+\n+This attribute is only taken into account in the aggregate project\n+specified on the command line, not in other aggregate projects.\n+\n+In the projects grouped by that aggregate, the attribute\n+Builder.Global_Compilation_Switches is also ignored. However, the\n+attribute Compiler.Default_Switches will be taken into account (but\n+that of the aggregate have higher priority). The attribute\n+Compiler.Switches is also taken into account and can be used to\n+override the switches for a specific file. As a result, it always\n+has priority.\n+\n+The rules are meant to avoid ambiguities when compiling. For\n+instance, aggregate project Agg groups the projects A and B, that\n+both depend on C. Here is an extra for all of these projects:\n+\n+@smallexample @c projectfile\n+      aggregate project Agg is\n+          for Project_Files use (\"a.gpr\", \"b.gpr\");\n+          package Builder is\n+             for Global_Compilation_Switches (\"Ada\") use (\"-O2\");\n+          end Builder;\n+      end Agg;\n+\n+      with \"c.gpr\";\n+      project A is\n+          package Builder is\n+             for Global_Compilation_Switches (\"Ada\") use (\"-O1\");\n+             --  ignored\n+          end Builder;\n+\n+          package Compiler is\n+             for Default_Switches (\"Ada\") use (\"-O1\", \"-g\");\n+             for Switches (\"a_file1.adb\") use (\"-O0\");\n+          end Compiler;\n+      end A;\n+\n+      with \"c.gpr\";\n+      project B is\n+          package Compiler is\n+             for Default_Switches (\"Ada\") use (\"-O0\");\n+          end Compiler;\n+      end B;\n+\n+      project C is\n+          package Compiler is\n+             for Default_Switches (\"Ada\") use (\"-O3, \"-gnatn\");\n+             for Switches (\"c_file1.adb\") use (\"-O0\", \"-g\");\n+          end Compiler;\n+      end C;\n+@end smallexample\n+\n+then the following switches are used:\n+\n+@itemize @bullet\n+@item all files from project A except a_file1.adb are compiled\n+      with \"-O2 -g\", since the aggregate project has priority.\n+@item the file a_file1.adb is compiled with\n+      \"-O0\", since the Compiler.Switches has priority\n+@item all files from project B are compiled with\n+      \"-O2\", since the aggregate project has priority\n+@item all files from C are compiled with \"-O2 -gnatn\", except for\n+      c_file1.adb which is compiled with \"-O0 -g\"\n+@end itemize\n+\n+Even though C is seen through two paths (through A and through\n+B), the switches used by the compiler are unambiguous.\n+\n+@item @b{Global_Configuration_Pragmas}\n+@cindex @code{Global_Configuration_Pragmas}\n+\n+This attribute can be used to specify a file containing\n+configuration pragmas, to be passed to the compiler.  Since we\n+ignore the package Builder in other aggregate projects and projects,\n+only those pragmas defined in the main aggregate project will be\n+taken into account.\n+\n+Projects can locally add to those by using the\n+@code{Compiler.Local_Configuration_Pragmas} attribute if they need.\n+\n+@end table\n+\n+For projects that are build through the aggregate, the package Builder\n+is ignored, except for the Executable attribute which specifies the\n+name of the executables resulting from the link of the main units, and\n+for the Executable_Suffix.\n+\n @c ---------------------------------------------\n @node Project File Reference\n @section Project File Reference"}, {"sha": "240b28126312edb55ef6a884cc3ace97d7ecbda3", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1747,9 +1747,7 @@ package body Sem_Attr is\n          if Nkind (Nod) = N_Identifier then\n             return;\n \n-         elsif Nkind (Nod) = N_Selected_Component\n-           or else Nkind (Nod) = N_Expanded_Name\n-         then\n+         elsif Nkind_In (Nod, N_Selected_Component, N_Expanded_Name) then\n             Check_Unit_Name (Prefix (Nod));\n \n             if Nkind (Selector_Name (Nod)) = N_Identifier then"}, {"sha": "68f3d17225f168330031ba5cb33b985f4e4eb8d6", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -588,8 +588,9 @@ package body Sem_Ch11 is\n             return Same_Expression (Right_Opnd (C1), Right_Opnd (C2));\n \n          elsif Nkind (C1) in N_Binary_Op then\n-            return Same_Expression (Left_Opnd (C1), Left_Opnd (C2))\n-              and then Same_Expression (Right_Opnd (C1), Right_Opnd (C2));\n+            return Same_Expression (Left_Opnd (C1),  Left_Opnd (C2))\n+                     and then\n+                   Same_Expression (Right_Opnd (C1), Right_Opnd (C2));\n \n          elsif Nkind (C1) = N_Null then\n             return True;"}, {"sha": "3bb1d524996b0830ce9b72904923c4ee0b345d83", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -2840,7 +2840,8 @@ package body Sem_Ch13 is\n       Assoc    : Node_Id;\n       Choice   : Node_Id;\n       Val      : Uint;\n-      Err      : Boolean := False;\n+\n+      Err : Boolean := False;\n       --  Set True to avoid cascade errors and crashes on incorrect source code\n \n       Lo : constant Uint := Expr_Value (Type_Low_Bound (Universal_Integer));\n@@ -2980,12 +2981,15 @@ package body Sem_Ch13 is\n                Err := True;\n \n             elsif Nkind (Choice) = N_Range then\n+\n                --  ??? should allow zero/one element range here\n+\n                Error_Msg_N (\"range not allowed here\", Choice);\n                Err := True;\n \n             else\n                Analyze_And_Resolve (Choice, Enumtype);\n+\n                if Error_Posted (Choice) then\n                   Err := True;\n                end if;\n@@ -2996,6 +3000,7 @@ package body Sem_Ch13 is\n                   then\n                      Error_Msg_N (\"subtype name not allowed here\", Choice);\n                      Err := True;\n+\n                      --  ??? should allow static subtype with zero/one entry\n \n                   elsif Etype (Choice) = Base_Type (Enumtype) then"}, {"sha": "68ba0309b144e5548c4107d63863988fd818875d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -74,7 +74,7 @@ package body Sem_Ch8 is\n    -- Visibility and Name Resolution --\n    ------------------------------------\n \n-   --  This package handles name resolution and the collection of\n+   --  This package handles name resolution and the collection of possible\n    --  interpretations for overloaded names, prior to overload resolution.\n \n    --  Name resolution is the process that establishes a mapping between source\n@@ -5639,19 +5639,19 @@ package body Sem_Ch8 is\n                     and then RTU_Loaded (Ada_Tags)\n                     and then\n                       ((RTE_Available (RE_Dispatch_Table_Wrapper)\n-                          and then Scope (Selector) =\n+                         and then Scope (Selector) =\n                                      RTE (RE_Dispatch_Table_Wrapper))\n-                      or else\n+                          or else\n                        (RTE_Available (RE_No_Dispatch_Table_Wrapper)\n-                          and then Scope (Selector) =\n+                         and then Scope (Selector) =\n                                      RTE (RE_No_Dispatch_Table_Wrapper)))\n                   then\n                      C_Etype := Empty;\n \n                   else\n                      C_Etype :=\n-                       Build_Actual_Subtype_Of_Component (\n-                         Etype (Selector), N);\n+                       Build_Actual_Subtype_Of_Component\n+                         (Etype (Selector), N);\n                   end if;\n \n                else"}, {"sha": "b58f8c0e1a7914c4617f23d31e6ffad6d54229c9", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -894,13 +894,13 @@ package body Sem_Disp is\n          then\n             pragma Assert\n               ((Ekind (Subp) = E_Function\n-                  and then Is_Dispatching_Operation (Old_Subp)\n-                  and then Is_Null_Extension (Base_Type (Etype (Subp))))\n+                 and then Is_Dispatching_Operation (Old_Subp)\n+                 and then Is_Null_Extension (Base_Type (Etype (Subp))))\n               or else\n                (Ekind (Subp) = E_Procedure\n-                  and then Is_Dispatching_Operation (Old_Subp)\n-                  and then Present (Alias (Old_Subp))\n-                  and then Is_Null_Interface_Primitive\n+                 and then Is_Dispatching_Operation (Old_Subp)\n+                 and then Present (Alias (Old_Subp))\n+                 and then Is_Null_Interface_Primitive\n                              (Ultimate_Alias (Old_Subp)))\n               or else Get_TSS_Name (Subp) = TSS_Stream_Read\n               or else Get_TSS_Name (Subp) = TSS_Stream_Write);\n@@ -1279,13 +1279,10 @@ package body Sem_Disp is\n \n       elsif Has_Controlled_Component (Tagged_Type)\n         and then\n-         (Chars (Subp) = Name_Initialize\n-            or else\n-          Chars (Subp) = Name_Adjust\n-            or else\n-          Chars (Subp) = Name_Finalize\n-            or else\n-          Chars (Subp) = Name_Finalize_Address)\n+          (Chars (Subp) = Name_Initialize or else\n+           Chars (Subp) = Name_Adjust     or else\n+           Chars (Subp) = Name_Finalize   or else\n+           Chars (Subp) = Name_Finalize_Address)\n       then\n          declare\n             F_Node   : constant Node_Id := Freeze_Node (Tagged_Type);"}, {"sha": "d5d4ac3256d200ae9af69490bcd233aca63621e7", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -661,6 +661,7 @@ package body Sem_Elab is\n                declare\n                   Typ  : constant Entity_Id := Etype (First_Formal (Ent));\n                   Init : Entity_Id;\n+\n                begin\n                   if not Is_Controlled (Typ) then\n                      return;\n@@ -2156,9 +2157,10 @@ package body Sem_Elab is\n                   Insert_Action (Declaration_Node (E),\n                     Make_Object_Declaration (Loce,\n                       Defining_Identifier => Ent,\n-                      Object_Definition =>\n+                      Object_Definition   =>\n                         New_Occurrence_Of (Standard_Integer, Loce),\n-                      Expression => Make_Integer_Literal (Loc, Uint_0)));\n+                      Expression          =>\n+                        Make_Integer_Literal (Loc, Uint_0)));\n \n                   --  Set elaboration flag at the point of the body\n \n@@ -2182,7 +2184,7 @@ package body Sem_Elab is\n             Insert_Elab_Check (N,\n                Make_Attribute_Reference (Loc,\n                  Attribute_Name => Name_Elaborated,\n-                 Prefix => New_Occurrence_Of (E, Loc)));\n+                 Prefix         => New_Occurrence_Of (E, Loc)));\n          end if;\n \n          --  Generate the warning"}, {"sha": "5be584307af0fa27e7a9990c188772d381de147b", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -964,11 +964,11 @@ package body Sem_Eval is\n                      return Unknown;\n                   end if;\n                end if;\n-            else\n \n-               --  If the range of either operand cannot be determined,\n-               --  nothing further can be inferred.\n+            --  If the range of either operand cannot be determined, nothing\n+            --  further can be inferred.\n \n+            else\n                return Unknown;\n             end if;\n          end;"}, {"sha": "4ce7ec5a61a63e544f9cdbd7feccb2604ba7a56a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -4765,7 +4765,8 @@ package body Sem_Prag is\n          --  entities are supported by the VM.\n \n          if Convention (Subprogram_Def) /= Convention_CIL\n-           and then Convention (Subprogram_Def) /= Convention_Java\n+              and then\n+            Convention (Subprogram_Def) /= Convention_Java\n          then\n             Check_Duplicated_Export_Name (Link_Nam);\n          end if;"}, {"sha": "9948a61c3d23ff211ee95c8449f4fc47c7d23e10", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -956,17 +956,14 @@ package body Sem_Util is\n \n       --  Create elaboration flag\n \n-      Elab_Ent :=\n-        Make_Defining_Identifier (Loc, Chars => Name_Find);\n+      Elab_Ent := Make_Defining_Identifier (Loc, Chars => Name_Find);\n       Set_Elaboration_Entity (Spec_Id, Elab_Ent);\n \n       Decl :=\n-         Make_Object_Declaration (Loc,\n-           Defining_Identifier => Elab_Ent,\n-           Object_Definition   =>\n-             New_Occurrence_Of (Standard_Integer, Loc),\n-           Expression          =>\n-             Make_Integer_Literal (Loc, Uint_0));\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Elab_Ent,\n+          Object_Definition   => New_Occurrence_Of (Standard_Integer, Loc),\n+          Expression          => Make_Integer_Literal (Loc, Uint_0));\n \n       Push_Scope (Standard_Standard);\n       Add_Global_Declaration (Decl);\n@@ -5567,7 +5564,7 @@ package body Sem_Util is\n          return False;\n       end if;\n \n-      --  First treat specially string literals, as the lower bound and length\n+      --  First treat string literals specially, as the lower bound and length\n       --  of string literals are not stored like those of arrays.\n \n       --  A string literal always has static bounds\n@@ -5596,8 +5593,9 @@ package body Sem_Util is\n             return False;\n          end if;\n \n-         if         Is_OK_Static_Expression (Low)\n-           and then Is_OK_Static_Expression (High)\n+         if Is_OK_Static_Expression (Low)\n+              and then\n+            Is_OK_Static_Expression (High)\n          then\n             null;\n          else\n@@ -6000,6 +5998,7 @@ package body Sem_Util is\n                if Nkind (Decl) = N_Incomplete_Type_Declaration then\n                   Match := Defining_Identifier (Decl);\n                end if;\n+\n             else\n                if Nkind_In (Decl, N_Private_Extension_Declaration,\n                                   N_Private_Type_Declaration)\n@@ -6021,6 +6020,8 @@ package body Sem_Util is\n          return Empty;\n       end Inspect_Decls;\n \n+      --  Local variables\n+\n       Prev : Entity_Id;\n \n    --  Start of processing for Incomplete_Or_Partial_View"}, {"sha": "d50dc5f7037cc78f81aba5a0dbd336b176f74e21", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=2c1b72d7b658ecef2cd2cb7b09f5a7fcb40b3ea4", "patch": "@@ -1210,7 +1210,7 @@ package Sem_Util is\n    --  previous errors (particularly in -gnatq mode).\n \n    function Requires_Transient_Scope (Id : Entity_Id) return Boolean;\n-   --  E is a type entity. The result is True when temporaries of this type\n+   --  Id is a type entity. The result is True when temporaries of this type\n    --  need to be wrapped in a transient scope to be reclaimed properly when a\n    --  secondary stack is in use. Examples of types requiring such wrapping are\n    --  controlled types and variable-sized types including unconstrained"}]}