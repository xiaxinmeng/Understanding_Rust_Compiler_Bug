{"sha": "3a19701a09db9a65dd41b6085e4a445d350b2a87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExOTcwMWEwOWRiOWE2NWRkNDFiNjA4NWU0YTQ0NWQzNTBiMmE4Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-29T10:37:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-29T10:37:14Z"}, "message": "tree-cfg.c (verify_types_in_gimple_reference): Add require_lvalue parameter.\n\n2009-04-29  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (verify_types_in_gimple_reference): Add require_lvalue\n\tparameter.  Allow invariants as base if !require_lvalue.\n\t(verify_gimple_assign_single): Adjust.\n\nFrom-SVN: r146947", "tree": {"sha": "6399c7826c0f616a3f2f2289039d49d7cd482312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6399c7826c0f616a3f2f2289039d49d7cd482312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a19701a09db9a65dd41b6085e4a445d350b2a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a19701a09db9a65dd41b6085e4a445d350b2a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a19701a09db9a65dd41b6085e4a445d350b2a87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a19701a09db9a65dd41b6085e4a445d350b2a87/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ddffe321a71a66a972b68497ecccaa1df2c6c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ddffe321a71a66a972b68497ecccaa1df2c6c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ddffe321a71a66a972b68497ecccaa1df2c6c4f"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "a6e64b92fd2b36c33f5529ba6c05dd38d2939329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a19701a09db9a65dd41b6085e4a445d350b2a87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a19701a09db9a65dd41b6085e4a445d350b2a87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a19701a09db9a65dd41b6085e4a445d350b2a87", "patch": "@@ -1,3 +1,9 @@\n+2009-04-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (verify_types_in_gimple_reference): Add require_lvalue\n+\tparameter.  Allow invariants as base if !require_lvalue.\n+\t(verify_gimple_assign_single): Adjust.\n+\n 2009-04-29  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.md (sp_or_sm, spm_string, spm_name): New macro."}, {"sha": "0ef2fb9b88176c54f956caa2715e0e597747c9c3", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a19701a09db9a65dd41b6085e4a445d350b2a87/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a19701a09db9a65dd41b6085e4a445d350b2a87/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=3a19701a09db9a65dd41b6085e4a445d350b2a87", "patch": "@@ -3135,11 +3135,12 @@ verify_types_in_gimple_min_lval (tree expr)\n   return false;\n }\n \n-/* Verify if EXPR is a valid GIMPLE reference expression.  Returns true\n+/* Verify if EXPR is a valid GIMPLE reference expression.  If\n+   REQUIRE_LVALUE is true verifies it is an lvalue.  Returns true\n    if there is an error, otherwise false.  */\n \n static bool\n-verify_types_in_gimple_reference (tree expr)\n+verify_types_in_gimple_reference (tree expr, bool require_lvalue)\n {\n   while (handled_component_p (expr))\n     {\n@@ -3211,7 +3212,8 @@ verify_types_in_gimple_reference (tree expr)\n       expr = op;\n     }\n \n-  return verify_types_in_gimple_min_lval (expr);\n+  return ((require_lvalue || !is_gimple_min_invariant (expr))\n+\t  && verify_types_in_gimple_min_lval (expr));\n }\n \n /* Returns true if there is one pointer type in TYPE_POINTER_TO (SRC_OBJ)\n@@ -3747,7 +3749,7 @@ verify_gimple_assign_single (gimple stmt)\n     }\n \n   if (handled_component_p (lhs))\n-    res |= verify_types_in_gimple_reference (lhs);\n+    res |= verify_types_in_gimple_reference (lhs, true);\n \n   /* Special codes we cannot handle via their class.  */\n   switch (rhs_code)\n@@ -3770,7 +3772,7 @@ verify_gimple_assign_single (gimple stmt)\n \t    return true;\n \t  }\n \n-\treturn verify_types_in_gimple_reference (op);\n+\treturn verify_types_in_gimple_reference (op, true);\n       }\n \n     /* tcc_reference  */\n@@ -3793,7 +3795,7 @@ verify_gimple_assign_single (gimple stmt)\n \t  debug_generic_stmt (rhs1);\n \t  return true;\n \t}\n-      return res || verify_types_in_gimple_reference (rhs1);\n+      return res || verify_types_in_gimple_reference (rhs1, false);\n \n     /* tcc_constant  */\n     case SSA_NAME:"}]}