{"sha": "66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "node_id": "C_kwDOANBUbNoAKDY2ZjJhMGRlZjU0OGI3ZjJlNGVkYjQ2ZTUwZmMwYjcyZTg0NTMyY2M", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-06T20:48:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:18Z"}, "message": "[Ada] Fix bad interaction between Inline_Always and -gnateV + -gnata\n\nThe combination of pragma/aspect Inline_Always and -gnateV -gnata runs\nafoul of the handling of inlining across units by gigi, which does not\ninline a subprogram that calls nested subprograms if these subprograms\nare not themselves inlined.\n\nThis condition does not apply to internally generated subprograms but\nthe special _postconditions procedure has Debug_Info_Needed set so it\nis not considered as such and, as a consequence, triggers an error if\nthe enclosing subprogram requires inlining by means of Inline_Always.\n\nThe _postconditions procedure is already marked inlined when generating\nC code so it makes sense to mark it inlined in the general case as well.\n\ngcc/ada/\n\n\t* contracts.adb (Build_Postconditions_Procedure): Set Is_Inlined\n\tunconditionnally on the procedure entity.", "tree": {"sha": "cdcbff912d4a2ea1aa191c6566c83309daf63629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdcbff912d4a2ea1aa191c6566c83309daf63629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f2a0def548b7f2e4edb46e50fc0b72e84532cc/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ae98c3a75102cb4dbb9b8da690952a9971d4e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae98c3a75102cb4dbb9b8da690952a9971d4e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae98c3a75102cb4dbb9b8da690952a9971d4e93"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "ed97d16818f1ef91b5af5d6c770b5cb4fdf00cc8", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f2a0def548b7f2e4edb46e50fc0b72e84532cc/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f2a0def548b7f2e4edb46e50fc0b72e84532cc/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "patch": "@@ -2365,6 +2365,10 @@ package body Contracts is\n          Set_Debug_Info_Needed   (Proc_Id);\n          Set_Postconditions_Proc (Subp_Id, Proc_Id);\n \n+         --  Mark it inlined to speed up the call\n+\n+         Set_Is_Inlined (Proc_Id);\n+\n          --  Force the front-end inlining of _Postconditions when generating C\n          --  code, since its body may have references to itypes defined in the\n          --  enclosing subprogram, which would cause problems for unnesting\n@@ -2373,7 +2377,6 @@ package body Contracts is\n          if Modify_Tree_For_C then\n             Set_Has_Pragma_Inline        (Proc_Id);\n             Set_Has_Pragma_Inline_Always (Proc_Id);\n-            Set_Is_Inlined               (Proc_Id);\n          end if;\n \n          --  The related subprogram is a function: create the specification of"}]}