{"sha": "a940d8bd4858902caa50028fc7df056d6578dda1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0MGQ4YmQ0ODU4OTAyY2FhNTAwMjhmYzdkZjA1NmQ2NTc4ZGRhMQ==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "2000-06-01T14:41:31Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "2000-06-01T14:41:31Z"}, "message": "i386.c (ix86_use_fcomi_compare): Make global.\n\n\t* config/i386/i386.c (ix86_use_fcomi_compare): Make global.\n\t* config/i386/i386-protos.h (ix86_use_fcomi_compare): Declare.\n\t* config/i386/i386.md (*fp_jcc_3, *fp_jcc_4): Disable if we\n\twill use FCOMI.\n\nFrom-SVN: r34338", "tree": {"sha": "5aaf2fd8013b51139458989e081395205c6b8220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aaf2fd8013b51139458989e081395205c6b8220"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a940d8bd4858902caa50028fc7df056d6578dda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a940d8bd4858902caa50028fc7df056d6578dda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a940d8bd4858902caa50028fc7df056d6578dda1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a940d8bd4858902caa50028fc7df056d6578dda1/comments", "author": null, "committer": null, "parents": [{"sha": "03d2f2b8000c20a2c68299524ca641ca5599ba66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d2f2b8000c20a2c68299524ca641ca5599ba66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d2f2b8000c20a2c68299524ca641ca5599ba66"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "40fd06173550b9dd6cf3ef6946c6eed0f8aef9d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a940d8bd4858902caa50028fc7df056d6578dda1", "patch": "@@ -1,3 +1,10 @@\n+Thu Jun  1 09:37:35 2000  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* config/i386/i386.c (ix86_use_fcomi_compare): Make global.\n+\t* config/i386/i386-protos.h (ix86_use_fcomi_compare): Declare.\n+\t* config/i386/i386.md (*fp_jcc_3, *fp_jcc_4): Disable if we\n+\twill use FCOMI.\n+\t\n 2000-06-01  Richard Henderson  <rth@cygnus.com>\n \n \t* Makefile.in (c-decl.o): Depend on $(EXPR_H), not expr.h."}, {"sha": "d7a4110d4cb2adcb414a4eba38c2da2b5ca6cab2", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=a940d8bd4858902caa50028fc7df056d6578dda1", "patch": "@@ -99,6 +99,7 @@ extern int ix86_unary_operator_ok PARAMS ((enum rtx_code, enum machine_mode,\n \t\t\t\t\t rtx[]));\n extern int ix86_match_ccmode PARAMS ((rtx, enum machine_mode));\n extern rtx ix86_expand_fp_compare PARAMS ((enum rtx_code, rtx, rtx, rtx));\n+extern int ix86_use_fcomi_compare PARAMS ((enum rtx_code));\n extern void ix86_expand_branch PARAMS ((enum rtx_code, rtx));\n extern int ix86_expand_setcc PARAMS ((enum rtx_code, rtx));\n extern int ix86_expand_int_movcc PARAMS ((rtx[]));"}, {"sha": "23a868229aed7c1008c825f4568cf12cb1f5176d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a940d8bd4858902caa50028fc7df056d6578dda1", "patch": "@@ -392,7 +392,6 @@ static void put_condition_code PARAMS ((enum rtx_code, enum machine_mode,\n static enum rtx_code unsigned_comparison PARAMS ((enum rtx_code code));\n static rtx ix86_expand_int_compare PARAMS ((enum rtx_code, rtx, rtx));\n static enum machine_mode ix86_fp_compare_mode PARAMS ((enum rtx_code));\n-static int ix86_use_fcomi_compare PARAMS ((enum rtx_code));\n static enum rtx_code ix86_prepare_fp_compare_args PARAMS ((enum rtx_code,\n \t\t\t\t\t\t\t   rtx *, rtx *));\n static rtx ix86_expand_compare PARAMS ((enum rtx_code));\n@@ -4539,7 +4538,7 @@ ix86_fp_compare_mode (code)\n \n /* Return true if we should use an FCOMI instruction for this fp comparison.  */\n \n-static int\n+int\n ix86_use_fcomi_compare (code)\n      enum rtx_code code;\n {"}, {"sha": "36c9d1fbbcc7305cb937723ee0c1cca6bb3d2c4f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940d8bd4858902caa50028fc7df056d6578dda1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a940d8bd4858902caa50028fc7df056d6578dda1", "patch": "@@ -7153,7 +7153,8 @@\n    (clobber (match_scratch:HI 4 \"=a\"))]\n   \"TARGET_80387\n    && (GET_MODE (operands[1]) == SFmode || GET_MODE (operands[1]) == DFmode)\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n+   && !ix86_use_fcomi_compare (GET_CODE (operands[0]))\"\n   \"#\")\n \n (define_insn \"*fp_jcc_4\"\n@@ -7168,7 +7169,8 @@\n    (clobber (match_scratch:HI 4 \"=a\"))]\n   \"TARGET_80387\n    && (GET_MODE (operands[1]) == SFmode || GET_MODE (operands[1]) == DFmode)\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n+   && !ix86_use_fcomi_compare (GET_CODE (operands[0]))\"\n   \"#\")\n \n (define_insn \"*fp_jcc_5\""}]}