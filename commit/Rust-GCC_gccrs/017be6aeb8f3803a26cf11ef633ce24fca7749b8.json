{"sha": "017be6aeb8f3803a26cf11ef633ce24fca7749b8", "node_id": "C_kwDOANBUbNoAKDAxN2JlNmFlYjhmMzgwM2EyNmNmMTFlZjYzM2NlMjRmY2E3NzQ5Yjg", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-08-30T09:41:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-30T09:41:27Z"}, "message": "Merge #1515 #1516\n\n1515: transcriber: Do not infinite loop if the current parsed node is an error r=CohenArthur a=CohenArthur\n\n\n\n1516: parser: Parse RangeFullExpr without erroring out r=CohenArthur a=CohenArthur\n\nPreviously the parser would emit the errors despite later allowing the parsed expression to be null.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "50b42bfa276ca44b1f2914397fe2f475503e8393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50b42bfa276ca44b1f2914397fe2f475503e8393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/017be6aeb8f3803a26cf11ef633ce24fca7749b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDdtHCRBK7hj4Ov3rIwAAIvYIAJTTuk03Qn1d8+KM4fAtiOY+\n6CTAEnmbSdFJgykBsb3Op6v49oyOLTDnKpQwHik+ocze0W3gpXCt1c4zaOiscsnT\nY7fJqGGegoH4wi0Rv91TDABxScIpEJMIQ145vfIurf/YUlgowM+J2IJ+COdB1uOY\nJvruXEorZpAlO9SmQhGd3o81bsmrjiENH6zGa8iQQFmkQGy1hiTvnUl1ikLCqGcz\nXyoTkNZ5IzJVYQiZFpHFQgBmo+BY5NrRNHjJD5vwVAEQjH4JSR8ObTF2BrGJOtRT\n1UH2Ukl2j4H3b6r7XEgxss0h/A6+ssoPQBRY+KeAppMUM7wz7CRgZrGKk1oAxmw=\n=9V3d\n-----END PGP SIGNATURE-----\n", "payload": "tree 50b42bfa276ca44b1f2914397fe2f475503e8393\nparent be5e11036ef4c292397661a3135825acef9dc2df\nparent 8dfa9676db0f8660c6c745adb59ef6323dca2341\nparent b376c0cb37c9f712d60d8aad9aab37237adf3563\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1661852487 +0000\ncommitter GitHub <noreply@github.com> 1661852487 +0000\n\nMerge #1515 #1516\n\n1515: transcriber: Do not infinite loop if the current parsed node is an error r=CohenArthur a=CohenArthur\n\n\n\n1516: parser: Parse RangeFullExpr without erroring out r=CohenArthur a=CohenArthur\n\nPreviously the parser would emit the errors despite later allowing the parsed expression to be null.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017be6aeb8f3803a26cf11ef633ce24fca7749b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017be6aeb8f3803a26cf11ef633ce24fca7749b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017be6aeb8f3803a26cf11ef633ce24fca7749b8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be5e11036ef4c292397661a3135825acef9dc2df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5e11036ef4c292397661a3135825acef9dc2df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5e11036ef4c292397661a3135825acef9dc2df"}, {"sha": "8dfa9676db0f8660c6c745adb59ef6323dca2341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dfa9676db0f8660c6c745adb59ef6323dca2341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dfa9676db0f8660c6c745adb59ef6323dca2341"}, {"sha": "b376c0cb37c9f712d60d8aad9aab37237adf3563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b376c0cb37c9f712d60d8aad9aab37237adf3563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b376c0cb37c9f712d60d8aad9aab37237adf3563"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "eef9194bf7ae35cc0722aa7d13249deba1b5993f", "filename": "gcc/rust/expand/rust-macro-expand.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc?ref=017be6aeb8f3803a26cf11ef633ce24fca7749b8", "patch": "@@ -731,6 +731,14 @@ parse_many (Parser<MacroInvocLexer> &parser, TokenId &delimiter,\n \tbreak;\n \n       auto node = parse_fn ();\n+      if (node.is_error ())\n+\t{\n+\t  for (auto err : parser.get_errors ())\n+\t    err.emit_error ();\n+\n+\t  return AST::ASTFragment::create_error ();\n+\t}\n+\n       nodes.emplace_back (std::move (node));\n     }\n "}, {"sha": "c4cfbe2cce9d52e05de33d5a0e2b8e5cbfe278ed", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=017be6aeb8f3803a26cf11ef633ce24fca7749b8", "patch": "@@ -14102,9 +14102,13 @@ std::unique_ptr<AST::RangeExpr>\n Parser<ManagedTokenSource>::parse_nud_range_exclusive_expr (\n   const_TokenPtr tok, AST::AttrVec outer_attrs ATTRIBUTE_UNUSED)\n {\n+  auto restrictions = ParseRestrictions ();\n+  restrictions.expr_can_be_null = true;\n+\n   // FIXME: this probably parses expressions accidently or whatever\n   // try parsing RHS (as tok has already been consumed in parse_expression)\n-  std::unique_ptr<AST::Expr> right = parse_expr (LBP_DOT_DOT, AST::AttrVec ());\n+  std::unique_ptr<AST::Expr> right\n+    = parse_expr (LBP_DOT_DOT, AST::AttrVec (), restrictions);\n \n   Location locus = tok->get_locus ();\n "}, {"sha": "03469b1f8d5211621c374afbe98643e51df47610", "filename": "gcc/testsuite/rust/compile/parse_range.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Ftestsuite%2Frust%2Fcompile%2Fparse_range.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017be6aeb8f3803a26cf11ef633ce24fca7749b8/gcc%2Ftestsuite%2Frust%2Fcompile%2Fparse_range.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fparse_range.rs?ref=017be6aeb8f3803a26cf11ef633ce24fca7749b8", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fsyntax-only\" }\n+\n+fn main() {\n+    let a = [1, 2, 3, 4];\n+    let _ = a[0..];\n+    let _ = a[..3];\n+    let _ = a[0..3];\n+    let _ = a[..];\n+}"}]}