{"sha": "5014f12509980d51cfbb34bb61b1605356592afd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAxNGYxMjUwOTk4MGQ1MWNmYmIzNGJiNjFiMTYwNTM1NjU5MmFmZA==", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2021-06-24T13:20:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-24T13:33:20Z"}, "message": "libstdc++: Fix condition when AVX512F ldexp implementation is used\n\nThis improves codegen of ldexp if AVX512VL is available.\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/simd_x86.h (_S_ldexp): The AVX512F\n\timplementation doesn't require a _VecBltnBtmsk ABI tag, it\n\trequires either a 64-Byte input (in which case AVX512F must be\n\tavailable) or AVX512VL.", "tree": {"sha": "f817a4a5ffe5e124a100b6db328cda515deb471e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f817a4a5ffe5e124a100b6db328cda515deb471e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5014f12509980d51cfbb34bb61b1605356592afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5014f12509980d51cfbb34bb61b1605356592afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5014f12509980d51cfbb34bb61b1605356592afd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5014f12509980d51cfbb34bb61b1605356592afd/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62a989ea66e8b1d4c3ed4218c5115e050072711a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a989ea66e8b1d4c3ed4218c5115e050072711a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a989ea66e8b1d4c3ed4218c5115e050072711a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "5706bf6384593920ca0223e8391499ca83469e62", "filename": "libstdc++-v3/include/experimental/bits/simd_x86.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5014f12509980d51cfbb34bb61b1605356592afd/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5014f12509980d51cfbb34bb61b1605356592afd/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h?ref=5014f12509980d51cfbb34bb61b1605356592afd", "patch": "@@ -2611,13 +2611,14 @@ template <typename _Abi>\n       _S_ldexp(_SimdWrapper<_Tp, _Np> __x,\n \t       __fixed_size_storage_t<int, _Np> __exp)\n       {\n-\tif constexpr (__is_avx512_abi<_Abi>())\n+\tif constexpr (sizeof(__x) == 64 || __have_avx512vl)\n \t  {\n \t    const auto __xi = __to_intrin(__x);\n \t    constexpr _SimdConverter<int, simd_abi::fixed_size<_Np>, _Tp, _Abi>\n \t      __cvt;\n \t    const auto __expi = __to_intrin(__cvt(__exp));\n-\t    constexpr auto __k1 = _Abi::template _S_implicit_mask_intrin<_Tp>();\n+\t    using _Up = __bool_storage_member_type_t<_Np>;\n+\t    constexpr _Up __k1 = _Np < sizeof(_Up) * __CHAR_BIT__ ? _Up((1ULL << _Np) - 1) : ~_Up();\n \t    if constexpr (sizeof(__xi) == 16)\n \t      {\n \t\tif constexpr (sizeof(_Tp) == 8)"}]}