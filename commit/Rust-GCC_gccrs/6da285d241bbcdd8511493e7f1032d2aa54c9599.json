{"sha": "6da285d241bbcdd8511493e7f1032d2aa54c9599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhMjg1ZDI0MWJiY2RkODUxMTQ5M2U3ZjEwMzJkMmFhNTRjOTU5OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-11-22T02:13:14Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-11-22T02:13:14Z"}, "message": "re PR middle-end/18520 (ICE in emit_store_flag, at expmed.c:5081with -ffast-math)\n\n\n\tPR middle-end/18520\n\t* dojump.c (compare_from_rtx): Clarify mode argument in function\n\tdescription.  Correct order of mode/cmp_mode arguments in call to\n\tsimplify_relational_operation.  Check \"tem\" for COMPARISON_P.\n\n\t* gcc.dg/pr18520-1.c: New test case.\n\nFrom-SVN: r90997", "tree": {"sha": "05ddf96549bce68cc32e473dbd251104e629c9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ddf96549bce68cc32e473dbd251104e629c9b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da285d241bbcdd8511493e7f1032d2aa54c9599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da285d241bbcdd8511493e7f1032d2aa54c9599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da285d241bbcdd8511493e7f1032d2aa54c9599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da285d241bbcdd8511493e7f1032d2aa54c9599/comments", "author": null, "committer": null, "parents": [{"sha": "b693336bf3a985d6ee779cd18c44bfa02fc78310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b693336bf3a985d6ee779cd18c44bfa02fc78310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b693336bf3a985d6ee779cd18c44bfa02fc78310"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "28c9d083106d56f34265bf2d4f8f8d1be4bbde12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6da285d241bbcdd8511493e7f1032d2aa54c9599", "patch": "@@ -1,3 +1,10 @@\n+2004-11-21  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/18520\n+\t* dojump.c (compare_from_rtx): Clarify mode argument in function\n+\tdescription.  Correct order of mode/cmp_mode arguments in call to\n+\tsimplify_relational_operation.  Check \"tem\" for COMPARISON_P.\n+\n 2004-11-21  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/17836"}, {"sha": "bcb575c36a1b26c8f2c4ab51a1adb7785e080480", "filename": "gcc/dojump.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=6da285d241bbcdd8511493e7f1032d2aa54c9599", "patch": "@@ -689,9 +689,10 @@ do_jump_by_parts_equality_rtx (rtx op0, rtx if_false_label, rtx if_true_label)\n }\n \f\n /* Generate code for a comparison of OP0 and OP1 with rtx code CODE.\n-   (including code to compute the values to be compared)\n-   and set (CC0) according to the result.\n-   The decision as to signed or unsigned comparison must be made by the caller.\n+   MODE is the machine mode of the comparison, not of the result.\n+   (including code to compute the values to be compared) and set CC0\n+   according to the result.  The decision as to signed or unsigned\n+   comparison must be made by the caller.\n \n    We force a stack adjustment unless there are currently\n    things pushed on the stack that aren't yet used.\n@@ -725,17 +726,21 @@ compare_from_rtx (rtx op0, rtx op1, enum rtx_code code, int unsignedp,\n   do_pending_stack_adjust ();\n \n   code = unsignedp ? unsigned_condition (code) : code;\n-  if (0 != (tem = simplify_relational_operation (code, mode, VOIDmode,\n-\t\t\t\t\t\t op0, op1)))\n+  tem = simplify_relational_operation (code, VOIDmode, mode, op0, op1);\n+  if (tem)\n     {\n       if (CONSTANT_P (tem))\n \treturn tem;\n \n-      code = GET_CODE (tem);\n-      mode = GET_MODE (tem);\n-      op0 = XEXP (tem, 0);\n-      op1 = XEXP (tem, 1);\n-      unsignedp = (code == GTU || code == LTU || code == GEU || code == LEU);\n+      if (COMPARISON_P (tem))\n+\t{\n+\t  code = GET_CODE (tem);\n+\t  op0 = XEXP (tem, 0);\n+\t  op1 = XEXP (tem, 1);\n+\t  mode = GET_MODE (op0);\n+\t  unsignedp = (code == GTU || code == LTU\n+\t\t       || code == GEU || code == LEU);\n+\t}\n     }\n \n   emit_cmp_insn (op0, op1, code, size, mode, unsignedp);"}, {"sha": "b9ec394932c6ca0319df0ebdbc42d2290ceaa30b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6da285d241bbcdd8511493e7f1032d2aa54c9599", "patch": "@@ -1,3 +1,8 @@\n+2004-11-21  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/18520\n+\t* gcc.dg/pr18520-1.c: New test case.\n+\n 2004-11-20  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/Wchar-subscripts-1.c, gcc.dg/array-8.c: New tests."}, {"sha": "872d3a94620df0ad78d8534bdc6b15d7ea9b3429", "filename": "gcc/testsuite/gcc.dg/pr18520-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18520-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da285d241bbcdd8511493e7f1032d2aa54c9599/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18520-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18520-1.c?ref=6da285d241bbcdd8511493e7f1032d2aa54c9599", "patch": "@@ -0,0 +1,11 @@\n+/* PR middle-end/18520 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+extern int isnan (double __value) __attribute__ ((__const__));\n+\n+int gsl_isnan (const double x)\n+{\n+  return isnan(x);\n+}\n+"}]}