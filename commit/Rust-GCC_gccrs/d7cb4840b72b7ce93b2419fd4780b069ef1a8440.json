{"sha": "d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdjYjQ4NDBiNzJiN2NlOTNiMjQxOWZkNDc4MGIwNjllZjFhODQ0MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-07-10T11:56:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-10T11:56:48Z"}, "message": "re PR target/66813 (gcc.target/i386/asm-flag-5.c failed with -march=pentium)\n\n\tPR target/66813\n\t* config/i386/i386.c (ix86_md_asm_adjust): Emit movstrictqi\n\tsequence for TARGET_ZERO_EXTEND_WITH_AND targets.\n\ntestsuite/ChangeLog:\n\n\tPR target/66813\n\t* gcc.target/i386/pr66813.c: New test.\n\nFrom-SVN: r225662", "tree": {"sha": "fc16d787905bcfdd06f06a135effd71c3654e227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc16d787905bcfdd06f06a135effd71c3654e227"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d26fc9797bd7888d50fb8d09fbe7d258b0236444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26fc9797bd7888d50fb8d09fbe7d258b0236444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26fc9797bd7888d50fb8d09fbe7d258b0236444"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "f305c72481ab40ca9f0a23e887e579a19312b303", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "patch": "@@ -1,3 +1,9 @@\n+2015-07-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66813\n+\t* config/i386/i386.c (ix86_md_asm_adjust): Emit movstrictqi\n+\tsequence for TARGET_ZERO_EXTEND_WITH_AND targets.\n+\n 2015-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/66820"}, {"sha": "007e0e13955ce9414275321dad1f2dd793cde9c6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "patch": "@@ -45842,7 +45842,17 @@ ix86_md_asm_adjust (vec<rtx> &outputs, vec<rtx> &/*inputs*/,\n \t{\n \t  rtx destqi = gen_reg_rtx (QImode);\n \t  emit_insn (gen_rtx_SET (destqi, x));\n-\t  x = gen_rtx_ZERO_EXTEND (dest_mode, destqi);\n+\n+\t  if (TARGET_ZERO_EXTEND_WITH_AND\n+\t      && optimize_function_for_speed_p (cfun))\n+\t    {\n+\t      x = force_reg (dest_mode, const0_rtx);\n+\n+\t      emit_insn (gen_movstrictqi\n+\t\t\t (gen_lowpart (QImode, x), destqi));\n+\t    }\n+\t  else\n+\t    x = gen_rtx_ZERO_EXTEND (dest_mode, destqi);\n \t}\n       emit_insn (gen_rtx_SET (dest, x));\n     }"}, {"sha": "237827575488de40e2427e3ff03b2bf4f492ee25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "patch": "@@ -1,3 +1,8 @@\n+2015-07-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66813\n+\t* gcc.target/i386/pr66813.c: New test.\n+\n 2015-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/66820"}, {"sha": "d4d8cc69d2db6895b3b358aec132932d688bfec3", "filename": "gcc/testsuite/gcc.target/i386/pr66813.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66813.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cb4840b72b7ce93b2419fd4780b069ef1a8440/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66813.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66813.c?ref=d7cb4840b72b7ce93b2419fd4780b069ef1a8440", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-march=pentium\" } */\n+\n+void f_s(void) { short x; asm(\"\" : \"=@ccc\"(x)); }\n+void f_i(void) { int x; asm(\"\" : \"=@ccc\"(x)); }"}]}