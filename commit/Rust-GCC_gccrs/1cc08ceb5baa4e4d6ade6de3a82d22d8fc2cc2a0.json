{"sha": "1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "node_id": "C_kwDOANBUbNoAKDFjYzA4Y2ViNWJhYTRlNGQ2YWRlNmRlM2E4MmQyMmQ4ZmMyY2MyYTA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-05T12:09:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-05T14:05:59Z"}, "message": "Remove dead loop-based LC SSA rewrite\n\nThe following removes the now unused per-loop path in LC SSA rewrite.\n\n\t* tree-ssa-loop-manip.cc (find_uses_to_rename_def): Remove.\n\t(find_uses_to_rename_in_loop): Likewise.\n\t(rewrite_into_loop_closed_ssa_1): Remove loop parameter and\n\tuses.\n\t(rewrite_into_loop_closed_ssa): Adjust.", "tree": {"sha": "971bc522cfb96924066ba8a132130e640ab91ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971bc522cfb96924066ba8a132130e640ab91ecc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d2600cfb476e576fd27f3f29f49e968e86774d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d2600cfb476e576fd27f3f29f49e968e86774d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d2600cfb476e576fd27f3f29f49e968e86774d"}], "stats": {"total": 109, "additions": 4, "deletions": 105}, "files": [{"sha": "9f3b62652ea1138e7d8a4844466b45638a2220df", "filename": "gcc/tree-ssa-loop-manip.cc", "status": "modified", "additions": 4, "deletions": 105, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0/gcc%2Ftree-ssa-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0/gcc%2Ftree-ssa-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.cc?ref=1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "patch": "@@ -498,94 +498,6 @@ find_uses_to_rename (bitmap changed_bbs, bitmap *use_blocks, bitmap need_phis,\n       find_uses_to_rename_bb (bb, use_blocks, need_phis, use_flags);\n }\n \n-/* Mark uses of DEF that are used outside of the loop they are defined in for\n-   rewrite.  Record the set of blocks in which the ssa names are used to\n-   USE_BLOCKS.  Record the SSA names that will need exit PHIs in NEED_PHIS.  */\n-\n-static void\n-find_uses_to_rename_def (tree def, bitmap *use_blocks, bitmap need_phis)\n-{\n-  gimple *use_stmt;\n-  imm_use_iterator imm_iter;\n-\n-  FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, def)\n-    {\n-      if (is_gimple_debug (use_stmt))\n-\tcontinue;\n-\n-      basic_block use_bb = gimple_bb (use_stmt);\n-\n-      use_operand_p use_p;\n-      FOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n-\t{\n-\t  if (gimple_code (use_stmt) == GIMPLE_PHI)\n-\t    {\n-\t      edge e = gimple_phi_arg_edge (as_a <gphi *> (use_stmt),\n-\t\t\t\t\t    PHI_ARG_INDEX_FROM_USE (use_p));\n-\t      use_bb = e->src;\n-\t    }\n-\t  find_uses_to_rename_use (use_bb, USE_FROM_PTR (use_p), use_blocks,\n-\t\t\t\t   need_phis);\n-\t}\n-    }\n-}\n-\n-/* Marks names matching USE_FLAGS that are defined in LOOP and used outside of\n-   it for rewrite.  Records the set of blocks in which the ssa names are used to\n-   USE_BLOCKS.  Record the SSA names that will need exit PHIs in NEED_PHIS.  */\n-\n-static void\n-find_uses_to_rename_in_loop (class loop *loop, bitmap *use_blocks,\n-\t\t\t     bitmap need_phis, int use_flags)\n-{\n-  bool do_virtuals = (use_flags & SSA_OP_VIRTUAL_USES) != 0;\n-  bool do_nonvirtuals = (use_flags & SSA_OP_USE) != 0;\n-  int def_flags = ((do_virtuals ? SSA_OP_VIRTUAL_DEFS : 0)\n-\t\t   | (do_nonvirtuals ? SSA_OP_DEF : 0));\n-\n-\n-  basic_block *bbs = get_loop_body (loop);\n-\n-  for (unsigned int i = 0; i < loop->num_nodes; i++)\n-    {\n-      basic_block bb = bbs[i];\n-\n-      for (gphi_iterator bsi = gsi_start_phis (bb); !gsi_end_p (bsi);\n-\t   gsi_next (&bsi))\n-\t{\n-\t  gphi *phi = bsi.phi ();\n-\t  tree res = gimple_phi_result (phi);\n-\t  bool virtual_p = virtual_operand_p (res);\n-\t  if ((virtual_p && do_virtuals)\n-\t      || (!virtual_p && do_nonvirtuals))\n-\t    find_uses_to_rename_def (res, use_blocks, need_phis);\n-      }\n-\n-      for (gimple_stmt_iterator bsi = gsi_start_bb (bb); !gsi_end_p (bsi);\n-\t   gsi_next (&bsi))\n-\t{\n-\t  gimple *stmt = gsi_stmt (bsi);\n-\t  /* FOR_EACH_SSA_TREE_OPERAND iterator does not allows\n-\t     SSA_OP_VIRTUAL_DEFS only.  */\n-\t  if (def_flags == SSA_OP_VIRTUAL_DEFS)\n-\t    {\n-\t      tree vdef = gimple_vdef (stmt);\n-\t      if (vdef != NULL)\n-\t\tfind_uses_to_rename_def (vdef, use_blocks, need_phis);\n-\t    }\n-\t  else\n-\t    {\n-\t      tree var;\n-\t      ssa_op_iter iter;\n-\t      FOR_EACH_SSA_TREE_OPERAND (var, stmt, iter, def_flags)\n-\t\tfind_uses_to_rename_def (var, use_blocks, need_phis);\n-\t    }\n-\t}\n-    }\n-\n-  XDELETEVEC (bbs);\n-}\n-\n /* Rewrites the program into a loop closed ssa form -- i.e. inserts extra\n    phi nodes to ensure that no variable is used outside the loop it is\n    defined in.\n@@ -615,8 +527,7 @@ find_uses_to_rename_in_loop (class loop *loop, bitmap *use_blocks,\n       is not well-behaved, while the second one is an induction variable with\n       base 99 and step 1.\n \n-      If LOOP is non-null, only rewrite uses that have defs in LOOP.  Otherwise,\n-      if CHANGED_BBS is not NULL, we look for uses outside loops only in the\n+      If CHANGED_BBS is not NULL, we look for uses outside loops only in the\n       basic blocks in this set.\n \n       USE_FLAGS allows us to specify whether we want virtual, non-virtual or\n@@ -627,7 +538,7 @@ find_uses_to_rename_in_loop (class loop *loop, bitmap *use_blocks,\n \n static void\n rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n-\t\t\t\tint use_flags, class loop *loop)\n+\t\t\t\tint use_flags)\n {\n   bitmap *use_blocks;\n   bitmap names_to_rename;\n@@ -651,18 +562,7 @@ rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n      because we know that we will only have entries for the SSA names\n      in NAMES_TO_RENAME.  */\n   use_blocks = XNEWVEC (bitmap, num_ssa_names);\n-\n-  if (loop != NULL)\n-    {\n-      gcc_assert (changed_bbs == NULL);\n-      find_uses_to_rename_in_loop (loop, use_blocks, names_to_rename,\n-\t\t\t\t   use_flags);\n-    }\n-  else\n-    {\n-      gcc_assert (loop == NULL);\n-      find_uses_to_rename (changed_bbs, use_blocks, names_to_rename, use_flags);\n-    }\n+  find_uses_to_rename (changed_bbs, use_blocks, names_to_rename, use_flags);\n \n   if (!bitmap_empty_p (names_to_rename))\n     {\n@@ -694,8 +594,7 @@ rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n void\n rewrite_into_loop_closed_ssa (bitmap changed_bbs, unsigned update_flag)\n {\n-  rewrite_into_loop_closed_ssa_1 (changed_bbs, update_flag,\n-\t\t\t\t  SSA_OP_ALL_USES, NULL);\n+  rewrite_into_loop_closed_ssa_1 (changed_bbs, update_flag, SSA_OP_ALL_USES);\n }\n \n /* Check invariants of the loop closed ssa form for the def in DEF_BB.  */"}]}