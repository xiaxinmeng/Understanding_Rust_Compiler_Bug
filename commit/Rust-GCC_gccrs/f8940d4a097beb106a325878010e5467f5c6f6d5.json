{"sha": "f8940d4a097beb106a325878010e5467f5c6f6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5NDBkNGEwOTdiZWIxMDZhMzI1ODc4MDEwZTU0NjdmNWM2ZjZkNQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2015-06-05T08:47:44Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-06-05T08:47:44Z"}, "message": "[Patch] The comparison in a compare exchange should not take place in VOIDmode\n\ngcc/\n\n\t* builtins.c (expand_builtin_atomic_compare_exchange): Call\n\temit_cmp_and_jump_insns with the mode of target.\n\nFrom-SVN: r224148", "tree": {"sha": "82d9c2575620e32072c7edef398aa1b818a54acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82d9c2575620e32072c7edef398aa1b818a54acb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8940d4a097beb106a325878010e5467f5c6f6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8940d4a097beb106a325878010e5467f5c6f6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8940d4a097beb106a325878010e5467f5c6f6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8940d4a097beb106a325878010e5467f5c6f6d5/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edf1fd6defa3ed02f1079376b0eecd51cbcb3e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf1fd6defa3ed02f1079376b0eecd51cbcb3e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf1fd6defa3ed02f1079376b0eecd51cbcb3e44"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6a6707f61ffa4b09387fab8bc17eed14f9c54596", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8940d4a097beb106a325878010e5467f5c6f6d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8940d4a097beb106a325878010e5467f5c6f6d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8940d4a097beb106a325878010e5467f5c6f6d5", "patch": "@@ -1,3 +1,8 @@\n+2015-06-05  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* builtins.c (expand_builtin_atomic_compare_exchange): Call\n+\temit_cmp_and_jump_insns with the mode of target.\n+\n 2015-06-05  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>\n \n \t* config/i386/sse.md (sse3_mwait): Swap the operand constriants."}, {"sha": "8772158af94b572483d34525f7870b8431ac0c99", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8940d4a097beb106a325878010e5467f5c6f6d5/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8940d4a097beb106a325878010e5467f5c6f6d5/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f8940d4a097beb106a325878010e5467f5c6f6d5", "patch": "@@ -5471,7 +5471,8 @@ expand_builtin_atomic_compare_exchange (machine_mode mode, tree exp,\n      the normal case where EXPECT is totally private, i.e. a register.  At\n      which point the store can be unconditional.  */\n   label = gen_label_rtx ();\n-  emit_cmp_and_jump_insns (target, const0_rtx, NE, NULL, VOIDmode, 1, label);\n+  emit_cmp_and_jump_insns (target, const0_rtx, NE, NULL,\n+\t\t\t   GET_MODE (target), 1, label);\n   emit_move_insn (expect, oldval);\n   emit_label (label);\n "}]}