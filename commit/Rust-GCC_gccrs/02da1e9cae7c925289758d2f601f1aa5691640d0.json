{"sha": "02da1e9cae7c925289758d2f601f1aa5691640d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJkYTFlOWNhZTdjOTI1Mjg5NzU4ZDJmNjAxZjFhYTU2OTE2NDBkMA==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2018-02-02T13:45:57Z"}, "committer": {"name": "Julia Koval", "email": "jkoval@gcc.gnu.org", "date": "2018-02-02T13:45:57Z"}, "message": "Add -march=icelake.\n\ngcc/\n\t* config.gcc: Add -march=icelake.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect icelake.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle icelake.\n\t* config/i386/i386.c (processor_costs): Add m_ICELAKE.\n\t(PTA_ICELAKE, PTA_AVX512VNNI, PTA_GFNI, PTA_VAES, PTA_AVX512VBMI2,\n\tPTA_VPCLMULQDQ, PTA_RDPID, PTA_AVX512BITALG): New.\n\t(processor_target_table): Add icelake.\n\t(ix86_option_override_internal): Handle new PTAs.\n\t(get_builtin_code_for_version): Handle icelake.\n\t(M_INTEL_COREI7_ICELAKE): New.\n\t(fold_builtin_cpu): Handle icelake.\n\t* config/i386/i386.h (TARGET_ICELAKE, PROCESSOR_ICELAKE): New.\n\t* doc/invoke.texi: Add -march=icelake.\ngcc/testsuite/\n\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n\t* g++.dg/ext/mv16.C: Ditto.\nlibgcc/\n\t* config/i386/cpuinfo.h (processor_subtypes): Add INTEL_COREI7_ICELAKE.\n\nFrom-SVN: r257331", "tree": {"sha": "f26a581da14b06af13d4dacb37668456b9e9a9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f26a581da14b06af13d4dacb37668456b9e9a9c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02da1e9cae7c925289758d2f601f1aa5691640d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02da1e9cae7c925289758d2f601f1aa5691640d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02da1e9cae7c925289758d2f601f1aa5691640d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02da1e9cae7c925289758d2f601f1aa5691640d0/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31766e6833851fc0eeec9eabaa800a8edaa53c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31766e6833851fc0eeec9eabaa800a8edaa53c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31766e6833851fc0eeec9eabaa800a8edaa53c60"}], "stats": {"total": 106, "additions": 100, "deletions": 6}, "files": [{"sha": "85ab7f6e5e876eec2e2ae9043ca730edab78a3fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -1,3 +1,19 @@\n+2018-02-02  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config.gcc: Add -march=icelake.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect icelake.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle icelake.\n+\t* config/i386/i386.c (processor_costs): Add m_ICELAKE.\n+\t(PTA_ICELAKE, PTA_AVX512VNNI, PTA_GFNI, PTA_VAES, PTA_AVX512VBMI2,\n+\tPTA_VPCLMULQDQ, PTA_RDPID, PTA_AVX512BITALG): New.\n+\t(processor_target_table): Add icelake.\n+\t(ix86_option_override_internal): Handle new PTAs.\n+\t(get_builtin_code_for_version): Handle icelake.\n+\t(M_INTEL_COREI7_ICELAKE): New.\n+\t(fold_builtin_cpu): Handle icelake.\n+\t* config/i386/i386.h (TARGET_ICELAKE, PROCESSOR_ICELAKE): New.\n+\t* doc/invoke.texi: Add -march=icelake.\n+\n 2018-02-02  Julia Koval  <julia.koval@intel.com>\n \n \t* config/i386/i386.c (ix86_option_override_internal): Change flags type"}, {"sha": "c52fecf4221145b19dfd0f5fc1dbff1d60d1ca91", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -635,7 +635,7 @@ x86_64_archs=\"amdfam10 athlon64 athlon64-sse3 barcelona bdver1 bdver2 \\\n bdver3 bdver4 znver1 btver1 btver2 k8 k8-sse3 opteron opteron-sse3 nocona \\\n core2 corei7 corei7-avx core-avx-i core-avx2 atom slm nehalem westmere \\\n sandybridge ivybridge haswell broadwell bonnell silvermont knl knm \\\n-skylake-avx512 cannonlake x86-64 native\"\n+skylake-avx512 cannonlake icelake x86-64 native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space."}, {"sha": "ca1a2e0c37e4685ff98e527d132bc32cb9d6bd05", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -822,8 +822,11 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t  if (arch)\n \t    {\n \t      /* This is unknown family 0x6 CPU.  */\n+\t      /* Assume Ice Lake.  */\n+\t      if (has_gfni)\n+\t\tcpu = \"icelake\";\n \t      /* Assume Cannon Lake.  */\n-\t      if (has_avx512vbmi)\n+\t      else if (has_avx512vbmi)\n \t\tcpu = \"cannonlake\";\n \t      /* Assume Knights Mill.  */\n \t      else if (has_avx5124vnniw)"}, {"sha": "c0b4ffed7ea128713b2cf79944a17ddca1cb6b80", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -190,6 +190,10 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__cannonlake\");\n       def_or_undef (parse_in, \"__cannonlake__\");\n       break;\n+    case PROCESSOR_ICELAKE:\n+      def_or_undef (parse_in, \"__icelake\");\n+      def_or_undef (parse_in, \"__icelake__\");\n+      break;\n     /* use PROCESSOR_max to not set/unset the arch macro.  */\n     case PROCESSOR_max:\n       break;\n@@ -311,6 +315,9 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_CANNONLAKE:\n       def_or_undef (parse_in, \"__tune_cannonlake__\");\n       break;\n+    case PROCESSOR_ICELAKE:\n+      def_or_undef (parse_in, \"__tune_icelake__\");\n+      break;\n     case PROCESSOR_LAKEMONT:\n       def_or_undef (parse_in, \"__tune_lakemont__\");\n       break;"}, {"sha": "5fa5d9eb17143b6534117a72e32dd55f617f1695", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 45, "deletions": 4, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -146,6 +146,7 @@ const struct processor_costs *ix86_cost = NULL;\n #define m_KNM (1U<<PROCESSOR_KNM)\n #define m_SKYLAKE_AVX512 (1U<<PROCESSOR_SKYLAKE_AVX512)\n #define m_CANNONLAKE (1U<<PROCESSOR_CANNONLAKE)\n+#define m_ICELAKE (1U<<PROCESSOR_ICELAKE)\n #define m_INTEL (1U<<PROCESSOR_INTEL)\n \n #define m_GEODE (1U<<PROCESSOR_GEODE)\n@@ -858,7 +859,8 @@ static const struct ptt processor_target_table[PROCESSOR_max] =\n   {\"knl\", &slm_cost, 16, 15, 16, 7, 16},\n   {\"knm\", &slm_cost, 16, 15, 16, 7, 16},\n   {\"skylake-avx512\", &skylake_cost, 16, 10, 16, 10, 16},\n-  {\"cannonlake\", &core_cost, 16, 10, 16, 10, 16},\n+  {\"cannonlake\", &skylake_cost, 16, 10, 16, 10, 16},\n+  {\"icelake\", &skylake_cost, 16, 10, 16, 10, 16},\n   {\"intel\", &intel_cost, 16, 15, 16, 7, 16},\n   {\"geode\", &geode_cost, 0, 0, 0, 0, 0},\n   {\"k6\", &k6_cost, 32, 7, 32, 7, 32},\n@@ -3446,6 +3448,13 @@ ix86_option_override_internal (bool main_args_p,\n   const wide_int_bitmask PTA_AVX5124FMAPS (HOST_WIDE_INT_1U << 61);\n   const wide_int_bitmask PTA_AVX512VPOPCNTDQ (HOST_WIDE_INT_1U << 62);\n   const wide_int_bitmask PTA_SGX (HOST_WIDE_INT_1U << 63);\n+  const wide_int_bitmask PTA_AVX512VNNI (0, HOST_WIDE_INT_1U);\n+  const wide_int_bitmask PTA_GFNI (0, HOST_WIDE_INT_1U << 1);\n+  const wide_int_bitmask PTA_VAES (0, HOST_WIDE_INT_1U << 2);\n+  const wide_int_bitmask PTA_AVX512VBMI2 (0, HOST_WIDE_INT_1U << 3);\n+  const wide_int_bitmask PTA_VPCLMULQDQ (0, HOST_WIDE_INT_1U << 4);\n+  const wide_int_bitmask PTA_AVX512BITALG (0, HOST_WIDE_INT_1U << 5);\n+  const wide_int_bitmask PTA_RDPID (0, HOST_WIDE_INT_1U << 6);\n \n   const wide_int_bitmask PTA_CORE2 = PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2\n     | PTA_SSE3 | PTA_SSSE3 | PTA_CX16 | PTA_FXSR;\n@@ -3467,6 +3476,9 @@ ix86_option_override_internal (bool main_args_p,\n     | PTA_CLWB;\n   const wide_int_bitmask PTA_CANNONLAKE = PTA_SKYLAKE_AVX512 | PTA_AVX512VBMI\n     | PTA_AVX512IFMA | PTA_SHA;\n+  const wide_int_bitmask PTA_ICELAKE = PTA_CANNONLAKE | PTA_AVX512VNNI\n+    | PTA_GFNI | PTA_VAES | PTA_AVX512VBMI2 | PTA_VPCLMULQDQ | PTA_AVX512BITALG\n+    | PTA_RDPID;\n   const wide_int_bitmask PTA_KNL = PTA_BROADWELL | PTA_AVX512PF | PTA_AVX512ER\n     | PTA_AVX512F | PTA_AVX512CD;\n   const wide_int_bitmask PTA_BONNELL = PTA_CORE2 | PTA_MOVBE;\n@@ -3537,7 +3549,8 @@ ix86_option_override_internal (bool main_args_p,\n       {\"skylake\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_SKYLAKE},\n       {\"skylake-avx512\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL,\n         PTA_SKYLAKE_AVX512},\n-      {\"cannonlake\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_CANNONLAKE},\n+      {\"cannonlake\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL, PTA_CANNONLAKE},\n+      {\"icelake\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL, PTA_ICELAKE},\n       {\"bonnell\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"atom\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"silvermont\", PROCESSOR_SILVERMONT, CPU_SLM, PTA_SILVERMONT},\n@@ -4107,6 +4120,23 @@ ix86_option_override_internal (bool main_args_p,\n \tif (((processor_alias_table[i].flags & PTA_AVX512IFMA) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512IFMA))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512IFMA;\n+\tif (((processor_alias_table[i].flags & PTA_AVX512VNNI) != 0)\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512VNNI))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VNNI;\n+\tif (((processor_alias_table[i].flags & PTA_GFNI) != 0)\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_GFNI))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_GFNI;\n+\tif (((processor_alias_table[i].flags & PTA_AVX512VBMI2) != 0)\n+\t    && !(opts->x_ix86_isa_flags_explicit\n+\t    & OPTION_MASK_ISA_AVX512VBMI2))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VBMI2;\n+\tif (((processor_alias_table[i].flags & PTA_VPCLMULQDQ) != 0)\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_VPCLMULQDQ))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_VPCLMULQDQ;\n+\tif (((processor_alias_table[i].flags & PTA_AVX512BITALG) != 0)\n+\t    && !(opts->x_ix86_isa_flags_explicit\n+\t    & OPTION_MASK_ISA_AVX512BITALG))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BITALG;\n \n \tif (((processor_alias_table[i].flags & PTA_AVX5124VNNIW) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit\n@@ -4123,6 +4153,12 @@ ix86_option_override_internal (bool main_args_p,\n \tif (((processor_alias_table[i].flags & PTA_SGX) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_SGX))\n \t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_SGX;\n+\tif (((processor_alias_table[i].flags & PTA_VAES) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_VAES))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_VAES;\n+\tif (((processor_alias_table[i].flags & PTA_RDPID) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_RDPID))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_RDPID;\n \n \tif ((processor_alias_table[i].flags\n \t   & (PTA_PREFETCH_SSE | PTA_SSE)) != 0)\n@@ -32124,7 +32160,10 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n \t      break;\n \t    case PROCESSOR_HASWELL:\n \t    case PROCESSOR_SKYLAKE_AVX512:\n-\t      if (new_target->x_ix86_isa_flags & OPTION_MASK_ISA_AVX512VBMI)\n+\t      if (new_target->x_ix86_isa_flags & OPTION_MASK_ISA_GFNI)\n+\t\targ_str = \"icelake\";\n+\t      else if (new_target->x_ix86_isa_flags\n+\t\t\t& OPTION_MASK_ISA_AVX512VBMI)\n \t\targ_str = \"cannonlake\";\n \t      else if (new_target->x_ix86_isa_flags & OPTION_MASK_ISA_AVX512VL)\n \t        arg_str = \"skylake-avx512\";\n@@ -32849,7 +32888,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     M_INTEL_COREI7_BROADWELL,\n     M_INTEL_COREI7_SKYLAKE,\n     M_INTEL_COREI7_SKYLAKE_AVX512,\n-    M_INTEL_COREI7_CANNONLAKE\n+    M_INTEL_COREI7_CANNONLAKE,\n+    M_INTEL_COREI7_ICELAKE\n   };\n \n   static struct _arch_names_table\n@@ -32874,6 +32914,7 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"skylake\", M_INTEL_COREI7_SKYLAKE},\n       {\"skylake-avx512\", M_INTEL_COREI7_SKYLAKE_AVX512},\n       {\"cannonlake\", M_INTEL_COREI7_CANNONLAKE},\n+      {\"icelake\", M_INTEL_COREI7_ICELAKE},\n       {\"bonnell\", M_INTEL_BONNELL},\n       {\"silvermont\", M_INTEL_SILVERMONT},\n       {\"knl\", M_INTEL_KNL},"}, {"sha": "9d864501d4f99ecfc846b20bbffed0df766d20a2", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -383,6 +383,7 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_KNM (ix86_tune == PROCESSOR_KNM)\n #define TARGET_SKYLAKE_AVX512 (ix86_tune == PROCESSOR_SKYLAKE_AVX512)\n #define TARGET_CANNONLAKE (ix86_tune == PROCESSOR_CANNONLAKE)\n+#define TARGET_ICELAKE (ix86_tune == PROCESSOR_ICELAKE)\n #define TARGET_INTEL (ix86_tune == PROCESSOR_INTEL)\n #define TARGET_GENERIC (ix86_tune == PROCESSOR_GENERIC)\n #define TARGET_AMDFAM10 (ix86_tune == PROCESSOR_AMDFAM10)\n@@ -2263,6 +2264,7 @@ enum processor_type\n   PROCESSOR_KNM,\n   PROCESSOR_SKYLAKE_AVX512,\n   PROCESSOR_CANNONLAKE,\n+  PROCESSOR_ICELAKE,\n   PROCESSOR_INTEL,\n   PROCESSOR_GEODE,\n   PROCESSOR_K6,"}, {"sha": "f3d93367640b4e48fffba58d05d352f682c42e9b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -25606,6 +25606,14 @@ RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC,\n XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI,\n AVX512IFMA, SHA, CLWB and UMIP instruction set support.\n \n+@item Icelake\n+Intel Icelake Server CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2,\n+SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE,\n+RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC,\n+XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI,\n+AVX512IFMA, SHA, CLWB, UMIP, RDPID, GFNI, AVX512VBMI2, AVX512VPOPCNTDQ,\n+AVX512BITALG, AVX512VNNI, VPCLMULQDQ, VAES instruction set support.\n+\n @item k6\n AMD K6 CPU with MMX instruction set support.\n "}, {"sha": "a9e5d030ea863cf5ea4566ad23f196f79506b09a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -1,3 +1,8 @@\n+2018-02-02  Julia Koval  <julia.koval@intel.com>\n+\n+\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n+\t* g++.dg/ext/mv16.C: Ditto.\n+\n 2018-02-02  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* lib/target-supports.exp"}, {"sha": "8fbdb4791ae35453954ddac81edf3bd240783242", "filename": "gcc/testsuite/g++.dg/ext/mv16.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -60,6 +60,10 @@ int __attribute__ ((target(\"arch=cannonlake\"))) foo () {\n   return 16;\n }\n \n+int __attribute__ ((target(\"arch=icelake\"))) foo () {\n+  return 17;\n+}\n+\n int main ()\n {\n   int val = foo ();\n@@ -82,6 +86,8 @@ int main ()\n     assert (val == 15);\n   else if (__builtin_cpu_is (\"cannonlake\"))\n     assert (val == 16);\n+  else if (__builtin_cpu_is (\"icelake\"))\n+    assert (val == 17);\n   else\n     assert (val == 0);\n "}, {"sha": "837cdc3560dc684b84bac4036c894652c3395790", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -145,6 +145,7 @@ extern void test_arch_knl (void)\t\t__attribute__((__target__(\"arch=knl\")));\n extern void test_arch_knm (void)\t\t__attribute__((__target__(\"arch=knm\")));\n extern void test_arch_skylake_avx512 (void)\t__attribute__((__target__(\"arch=skylake-avx512\")));\n extern void test_arch_cannonlake (void)\t\t__attribute__((__target__(\"arch=cannonlake\")));\n+extern void test_arch_icelake (void)\t\t__attribute__((__target__(\"arch=icelake\")));\n extern void test_arch_k8 (void)\t\t\t__attribute__((__target__(\"arch=k8\")));\n extern void test_arch_k8_sse3 (void)\t\t__attribute__((__target__(\"arch=k8-sse3\")));\n extern void test_arch_opteron (void)\t\t__attribute__((__target__(\"arch=opteron\")));"}, {"sha": "1eb16631e03b789b6e65f40605673f4633b1397e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -1,3 +1,7 @@\n+2018-02-02  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config/i386/cpuinfo.h (processor_subtypes): Add INTEL_COREI7_ICELAKE.\n+\n 2018-01-26  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/lib1funcs.S (__udivmodsi4): Use safe version for RF16"}, {"sha": "a2470726af18ec9adb96949b3be55478ee2a3d65", "filename": "libgcc/config/i386/cpuinfo.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02da1e9cae7c925289758d2f601f1aa5691640d0/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02da1e9cae7c925289758d2f601f1aa5691640d0/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h?ref=02da1e9cae7c925289758d2f601f1aa5691640d0", "patch": "@@ -70,6 +70,7 @@ enum processor_subtypes\n   INTEL_COREI7_SKYLAKE,\n   INTEL_COREI7_SKYLAKE_AVX512,\n   INTEL_COREI7_CANNONLAKE,\n+  INTEL_COREI7_ICELAKE,\n   CPU_SUBTYPE_MAX\n };\n "}]}