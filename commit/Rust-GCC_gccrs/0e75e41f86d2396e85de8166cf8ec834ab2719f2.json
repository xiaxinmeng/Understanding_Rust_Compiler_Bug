{"sha": "0e75e41f86d2396e85de8166cf8ec834ab2719f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU3NWU0MWY4NmQyMzk2ZTg1ZGU4MTY2Y2Y4ZWM4MzRhYjI3MTlmMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-26T18:20:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-26T18:20:25Z"}, "message": "comment fixes\n\nFrom-SVN: r218094", "tree": {"sha": "e2362ca092d0945cc8931f2dff84f220090f1b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2362ca092d0945cc8931f2dff84f220090f1b21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e75e41f86d2396e85de8166cf8ec834ab2719f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e75e41f86d2396e85de8166cf8ec834ab2719f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e75e41f86d2396e85de8166cf8ec834ab2719f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e75e41f86d2396e85de8166cf8ec834ab2719f2/comments", "author": null, "committer": null, "parents": [{"sha": "cabaf50ac511cdedd2710faf87c126996483c3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabaf50ac511cdedd2710faf87c126996483c3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cabaf50ac511cdedd2710faf87c126996483c3e5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f1064e9ae24ba58664df6608ca5ab955a53c313a", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e75e41f86d2396e85de8166cf8ec834ab2719f2/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e75e41f86d2396e85de8166cf8ec834ab2719f2/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0e75e41f86d2396e85de8166cf8ec834ab2719f2", "patch": "@@ -82,7 +82,7 @@ c-common.h, not after.\n       CONVERT_EXPR_VBASE_PATH (in CONVERT_EXPR)\n       OVL_ARG_DEPENDENT (in OVERLOAD)\n       PACK_EXPANSION_LOCAL_P (in *_PACK_EXPANSION)\n-      TINFO_RECHECK_ACCESS_P (in TEMPLATE_INFO)\n+      TINFO_HAS_ACCESS_ERRORS (in TEMPLATE_INFO)\n       SIZEOF_EXPR_TYPE_P (in SIZEOF_EXPR)\n    1: IDENTIFIER_VIRTUAL_P (in IDENTIFIER_NODE)\n       TI_PENDING_TEMPLATE_FLAG."}, {"sha": "92c04178c213f694170462b958e4453afb0ddb91", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e75e41f86d2396e85de8166cf8ec834ab2719f2/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e75e41f86d2396e85de8166cf8ec834ab2719f2/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=0e75e41f86d2396e85de8166cf8ec834ab2719f2", "patch": "@@ -790,7 +790,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n \n   value = extend_ref_init_temps (decl, value, cleanups);\n \n-  /* In C++0x constant expression is a semantic, not syntactic, property.\n+  /* In C++11 constant expression is a semantic, not syntactic, property.\n      In C++98, make sure that what we thought was a constant expression at\n      template definition time is still constant and otherwise perform this\n      as optimization, e.g. to fold SIZEOF_EXPRs in the initializer.  */"}]}