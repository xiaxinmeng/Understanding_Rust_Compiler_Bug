{"sha": "1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "node_id": "C_kwDOANBUbNoAKDFiZGIxNzY4YmY3ZDgzYWU4N2JhN2MxMmJkOTU2NjgzMGExYWM3NzI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-21T00:16:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-21T00:16:20Z"}, "message": "Daily bump.", "tree": {"sha": "8206658ec5341d4e234a61f03c73e50ce8eafa97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8206658ec5341d4e234a61f03c73e50ce8eafa97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/comments", "author": null, "committer": null, "parents": [{"sha": "5c4122be854c135a1f66f2db68ec9cde6d5993dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4122be854c135a1f66f2db68ec9cde6d5993dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4122be854c135a1f66f2db68ec9cde6d5993dc"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "bc09889d371e8489ac1646a835c80bb30de770ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "patch": "@@ -1,3 +1,16 @@\n+2023-01-20  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vmull_p64, vmull_high_p64, vaeseq_u8,\n+\tvaesdq_u8, vaesmcq_u8, vaesimcq_u8): Gate under \"nothing+aes\".\n+\t(vsha1*_u32, vsha256*_u32): Gate under \"nothing+sha2\".\n+\n+2023-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108457\n+\t* tree-ssa-loop-niter.cc (build_cltz_expr): Use\n+\tSCALAR_INT_TYPE_MODE (utype) directly as C[LT]Z_DEFINED_VALUE_AT_ZERO\n+\targument instead of a temporary.  Formatting fixes.\n+\n 2023-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/108447"}, {"sha": "583ce61ca83fec164c4577a0047ee1faa00fe23c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "patch": "@@ -1 +1 @@\n-20230120\n+20230121"}, {"sha": "4880f9eff57586c8e7bfa948d4c9f631850c2044", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "patch": "@@ -1,3 +1,39 @@\n+2023-01-20  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2-libs/Args.mod (GetArg): Check index before\n+\taccessing array.\n+\t* gm2-libs/M2Dependent.mod (toCString): Check index\n+\tbefore accessing array.\n+\t* mc-boot/GArgs.c: Rebuilt.\n+\t* mc-boot/GM2Dependent.c: Rebuilt.\n+\t* mc-boot/Gkeyc.c: Rebuilt.\n+\t* mc/keyc.mod (seenUIntMin): Initialize once.\n+\t(seenUIntMax): Initialize once.\n+\t(checkLimits): Only test seenUIntMin and seenUIntMax\n+\tonce.\n+\t* pge-boot/GArgs.c:  Rebuilt.\n+\t* pge-boot/GM2Dependent.c: Rebuilt.\n+\n+2023-01-20  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2-gcc/m2statement.cc (gm2_gimplify_function_node):\n+\tRemove.\n+\t* gm2-libs/DynamicStrings.mod (Equal): Remove dead code.\n+\t* m2.flex (<COMMENT>\"<*\"): Add {} for else statement.\n+\t* m2pp.cc (hextree): Add conditional #ifdef DEBUGGING.\n+\t* mc-boot/GDynamicStrings.c: Rebuild.\n+\t* pge-boot/GDynamicStrings.c: Rebuild.\n+\t* pge-boot/GFIO.c: Rebuild.\n+\t* pge-boot/GIndexing.c: Rebuild.\n+\t* pge-boot/GM2EXCEPTION.c: Rebuild.\n+\t* pge-boot/GM2RTS.c: Rebuild.\n+\t* pge-boot/GNameKey.c: Rebuild.\n+\t* pge-boot/GPushBackInput.c: Rebuild.\n+\t* pge-boot/GRTExceptions.c: Rebuild.\n+\t* pge-boot/GStdIO.c: Rebuild.\n+\t* pge-boot/GSymbolKey.c: Rebuild.\n+\t* pge-boot/GSysStorage.c: Rebuild.\n+\n 2023-01-17  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* mc-boot/GM2RTS.c: Rebuilt."}, {"sha": "ffe432fab460a538714b2d1f79d433139f317a05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "patch": "@@ -1,3 +1,16 @@\n+2023-01-20  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/acle/pmull64.c: New.\n+\t* gcc.target/aarch64/aes-fuse-1.c: Replace '+crypto' with corresponding\n+\tfeature flag based on the intrinsic.\n+\t* gcc.target/aarch64/aes-fuse-2.c: Likewise.\n+\t* gcc.target/aarch64/aes_1.c: Likewise.\n+\t* gcc.target/aarch64/aes_2.c: Likewise.\n+\t* gcc.target/aarch64/aes_xor_combine.c: Likewise.\n+\t* gcc.target/aarch64/sha1_1.c: Likewise.\n+\t* gcc.target/aarch64/sha256_1.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_crypto_ice_1.c: Likewise.\n+\n 2023-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/108437"}, {"sha": "73740ec3679314058e88b7517d1b9567c782304d", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdb1768bf7d83ae87ba7c12bd9566830a1ac772/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=1bdb1768bf7d83ae87ba7c12bd9566830a1ac772", "patch": "@@ -1,3 +1,29 @@\n+2023-01-20  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* dwarf.c (struct function_addrs): Change low and high fields to\n+\tuintptr_t.\n+\t(struct unit_addrs): Likewise.\n+\t(resolve_addr_index): Change address parameter to uintptr_t*.\n+\t(add_unit_addr): Change lowpc and highpc parameters to uintptr_t.\n+\t(add_function_range): Likewise.\n+\t(struct pcrange): Change lowpc and highpc fields to uintptr_t.\n+\t(add_low_high_range): Change add_range lowpc and highpc parameters\n+\tto uintptr_t.\n+\t(add_ranges_from_ranges): Likewise.\n+\t(add_ranges_from_rnglists): Likewise.\n+\t(add_low_high_range): Chnage lowpc and highpc variables to\n+\tuintpr_t.\n+\t(add_ranges_from_rnglists): Change some local variables to\n+\tuintptr_t.\n+\t(add_ranges_from_ranges): Change base parameter to uintptr_t.\n+\t(add_ranges_from_rnglists): Likewise.\n+\t(read_function_entry): Likewise.\n+\t(resolve_addr_index): Add explicit casts to uintptr_t.\n+\t(update_pcrange): Likewise.\n+\t(add_ranges_from_ranges): Likewise.\n+\t(add_ranges_from_rnglists): Likewise.\n+\t(read_function_entry): Likewise.\n+\n 2023-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Regenerate."}]}