{"sha": "53ead5787921be799593232cfc9931f916b79002", "node_id": "C_kwDOANBUbNoAKDUzZWFkNTc4NzkyMWJlNzk5NTkzMjMyY2ZjOTkzMWY5MTZiNzkwMDI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-13T14:59:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-13T14:59:47Z"}, "message": "inliner: Don't emit copy stmts for empty type parameters [PR103989]\n\nThe following patch avoids emitting a parameter copy statement when inlining\nif the parameter has empty type.  E.g. the gimplifier does something similar\n(except that it needs to evaluate side-effects if any, which isn't the case\nhere):\n  /* For empty types only gimplify the left hand side and right hand\n     side as statements and throw away the assignment.  Do this after\n     gimplify_modify_expr_rhs so we handle TARGET_EXPRs of addressable\n     types properly.  */\n  if (is_empty_type (TREE_TYPE (*from_p))\n      && !want_value\n      /* Don't do this for calls that return addressable types, expand_call\n         relies on those having a lhs.  */\n      && !(TREE_ADDRESSABLE (TREE_TYPE (*from_p))\n           && TREE_CODE (*from_p) == CALL_EXPR))\n    {\n      gimplify_stmt (from_p, pre_p);\n      gimplify_stmt (to_p, pre_p);\n      *expr_p = NULL_TREE;\n      return GS_ALL_DONE;\n    }\nUnfortunately, this patch doesn't cure the uninit warnings in that PR,\nwhich is caused by ipa inlining happening even at -Og when the post-IPA\n-Og passes don't expect the need to clean up after ipa inlining,\nbut I think is desirable anyway.\n\n2022-01-13  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/103989\n\t* tree-inline.c (setup_one_parameter): Don't copy parms with\n\tempty type.", "tree": {"sha": "924d307118307340169be873550536af043b63c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924d307118307340169be873550536af043b63c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53ead5787921be799593232cfc9931f916b79002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ead5787921be799593232cfc9931f916b79002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ead5787921be799593232cfc9931f916b79002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ead5787921be799593232cfc9931f916b79002/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d97364aab1af361275b87713154c366ce2b9029a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97364aab1af361275b87713154c366ce2b9029a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97364aab1af361275b87713154c366ce2b9029a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8ea8de7e7cb473e64a9e149b5e6228e6d8dfb655", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ead5787921be799593232cfc9931f916b79002/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ead5787921be799593232cfc9931f916b79002/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=53ead5787921be799593232cfc9931f916b79002", "patch": "@@ -3608,7 +3608,7 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n \t      init_stmt = gimple_build_assign (def, rhs);\n \t    }\n \t}\n-      else\n+      else if (!is_empty_type (TREE_TYPE (var)))\n         init_stmt = gimple_build_assign (var, rhs);\n \n       if (bb && init_stmt)"}]}