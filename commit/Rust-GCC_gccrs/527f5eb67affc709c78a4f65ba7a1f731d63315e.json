{"sha": "527f5eb67affc709c78a4f65ba7a1f731d63315e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI3ZjVlYjY3YWZmYzcwOWM3OGE0ZjY1YmE3YTFmNzMxZDYzMzE1ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:22:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:22:19Z"}, "message": "[multiple changes]\n\n2014-10-31  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Look_For_Project_Paths): New procedure\n\t(Parse_Project_And_Apply_Config): Initially, parse the project\n\tfiles ignoring missing withs. If there are missing withs, extend\n\tthe project path with directories rooted at the compiler roots,\n\tincluding directories rooted at the runtime roots, if there are\n\tnon default runtimes, in the PATH orser.\n\t* prj-env.adb (Initialize_Default_Project_Path): Do not add\n\tany directory from the prefix if the target is \"-\".\n\t* prj-part.adb (Parse): Initialize the tables, as Parse may be\n\tcall several times by gprbuild.\n\t* prj.adb (Update_Ignore_Missing_With): New procedure.\n\n2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aux.adb (First_Stored_Discriminant,\n\tHas_Completely_Hidden_Discriminant): When scanning the list of\n\tdiscriminants to locate possibly hidden (inherited) discriminants,\n\tignore itypes that may appear in the entity list, when an access\n\tdiscriminants is constrained by an access attribute reference.\n\n2014-10-31  Javier Miranda  <miranda@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type): Add missing\n\tcheck to verify that all the primitives of an interface type\n\tare abstract or null procedures.\n\n2014-10-31  Vincent Celier  <celier@adacore.com>\n\n\t* s-os_lib.adb, s-os_lib.ads: New function Non_Blocking_Spawn that\n\tredirects standard output and standard error to two different files.\n\n2014-10-31  Bob Duff  <duff@adacore.com>\n\n\t* makeutl.ads: Minor comment fix.\n\n2014-10-31  Arnaud Charlet  <charlet@adacore.com>\n\n\t* system-linux-x86_64.ads, system-mingw-x86_64.ads (Word_Size,\n\tMemory_Size): Use Standard'Word_Size so that the value can be changed\n\tvia a target configuration file.\n\nFrom-SVN: r216965", "tree": {"sha": "829e07f4184cb2f6a381087ce9992bf94d3a19f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/829e07f4184cb2f6a381087ce9992bf94d3a19f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/527f5eb67affc709c78a4f65ba7a1f731d63315e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/527f5eb67affc709c78a4f65ba7a1f731d63315e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/527f5eb67affc709c78a4f65ba7a1f731d63315e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/527f5eb67affc709c78a4f65ba7a1f731d63315e/comments", "author": null, "committer": null, "parents": [{"sha": "14258928a3ba1d73384fb7fe26d9e9a13a79f2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14258928a3ba1d73384fb7fe26d9e9a13a79f2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14258928a3ba1d73384fb7fe26d9e9a13a79f2a2"}], "stats": {"total": 576, "additions": 558, "deletions": 18}, "files": [{"sha": "9e76cbb5f68e25ac7e57446f2bd0d1fa3423d9cc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -1,3 +1,46 @@\n+2014-10-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Look_For_Project_Paths): New procedure\n+\t(Parse_Project_And_Apply_Config): Initially, parse the project\n+\tfiles ignoring missing withs. If there are missing withs, extend\n+\tthe project path with directories rooted at the compiler roots,\n+\tincluding directories rooted at the runtime roots, if there are\n+\tnon default runtimes, in the PATH orser.\n+\t* prj-env.adb (Initialize_Default_Project_Path): Do not add\n+\tany directory from the prefix if the target is \"-\".\n+\t* prj-part.adb (Parse): Initialize the tables, as Parse may be\n+\tcall several times by gprbuild.\n+\t* prj.adb (Update_Ignore_Missing_With): New procedure.\n+\n+2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aux.adb (First_Stored_Discriminant,\n+\tHas_Completely_Hidden_Discriminant): When scanning the list of\n+\tdiscriminants to locate possibly hidden (inherited) discriminants,\n+\tignore itypes that may appear in the entity list, when an access\n+\tdiscriminants is constrained by an access attribute reference.\n+\n+2014-10-31  Javier Miranda  <miranda@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type): Add missing\n+\tcheck to verify that all the primitives of an interface type\n+\tare abstract or null procedures.\n+\n+2014-10-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* s-os_lib.adb, s-os_lib.ads: New function Non_Blocking_Spawn that\n+\tredirects standard output and standard error to two different files.\n+\n+2014-10-31  Bob Duff  <duff@adacore.com>\n+\n+\t* makeutl.ads: Minor comment fix.\n+\n+2014-10-31  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* system-linux-x86_64.ads, system-mingw-x86_64.ads (Word_Size,\n+\tMemory_Size): Use Standard'Word_Size so that the value can be changed\n+\tvia a target configuration file.\n+\n 2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch4.adb: Minor tweak."}, {"sha": "e20aebb1df2b3d2d451d4a0b5fab2d301c4a1892", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -4004,6 +4004,47 @@ package body Freeze is\n             --  call to the Analyze_Freeze_Entity for the record type.\n \n          end Check_Variant_Part;\n+\n+         --  Check that all the primitives of an interface type are abstract\n+         --  or null procedures.\n+\n+         if Is_Interface (Rec)\n+           and then not Error_Posted (Parent (Rec))\n+         then\n+            declare\n+               Elmt : Elmt_Id;\n+               Subp : Entity_Id;\n+\n+            begin\n+               Elmt := First_Elmt (Primitive_Operations (Rec));\n+               while Present (Elmt) loop\n+                  Subp := Node (Elmt);\n+\n+                  if not Is_Abstract_Subprogram (Subp)\n+\n+                     --  Avoid reporting the error on inherited primitives\n+\n+                    and then Comes_From_Source (Subp)\n+                  then\n+                     Error_Msg_Name_1 := Chars (Subp);\n+\n+                     if Ekind (Subp) = E_Procedure then\n+                        if not Null_Present (Parent (Subp)) then\n+                           Error_Msg_N\n+                             (\"interface procedure % must be abstract or null\",\n+                              Parent (Subp));\n+                        end if;\n+                     else\n+                        Error_Msg_N\n+                          (\"interface function % must be abstract\",\n+                           Parent (Subp));\n+                     end if;\n+                  end if;\n+\n+                  Next_Elmt (Elmt);\n+               end loop;\n+            end;\n+         end if;\n       end Freeze_Record_Type;\n \n       -------------------------------"}, {"sha": "cf28b1ec1da4a9dd8cb815905cbf75e306726edd", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -254,8 +254,8 @@ package Makeutl is\n    --  file. This checks various attributes to see if there are file specific\n    --  switches, or else defaults on the switches for the corresponding\n    --  language. Is_Default is set to False if there were file-specific\n-   --  switches Source_File can be set to No_File to force retrieval of the\n-   --  default switches. If Test_Without_Suffix is True, and there is no \" for\n+   --  switches. Source_File can be set to No_File to force retrieval of the\n+   --  default switches. If Test_Without_Suffix is True, and there is no \"for\n    --  Switches(Source_File) use\", then this procedure also tests without the\n    --  extension of the filename. If Test_Without_Suffix is True and\n    --  Check_ALI_Suffix is True, then we also replace the file extension with"}, {"sha": "fe6cb60b3816c59da6c54e16d89e2210229226ec", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 374, "deletions": 6, "changes": 380, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -53,6 +53,32 @@ package body Prj.Conf is\n \n    Gprconfig_Name : constant String := \"gprconfig\";\n \n+   Warn_For_RTS : Boolean := True;\n+   --  Set to False when gprbuild parse again the project files, to avoid\n+   --  an incorrect warning.\n+\n+   type Runtime_Root_Data;\n+   type Runtime_Root_Ptr is access Runtime_Root_Data;\n+   type Runtime_Root_Data is record\n+      Root : String_Access;\n+      Next : Runtime_Root_Ptr;\n+   end record;\n+   --  Data for a runtime root to be used when adding directories to the\n+   --  project path.\n+\n+   type Compiler_Root_Data;\n+   type Compiler_Root_Ptr is access Compiler_Root_Data;\n+   type Compiler_Root_Data is record\n+      Root : String_Access;\n+      Runtimes : Runtime_Root_Ptr;\n+      Next     : Compiler_Root_Ptr;\n+   end record;\n+   --  Data for a compiler root to be used when adding directories to the\n+   --  project path.\n+\n+   First_Compiler_Root : Compiler_Root_Ptr := null;\n+   --  Head of the list of compiler roots\n+\n    package RTS_Languages is new GNAT.HTable.Simple_HTable\n      (Header_Num => Prj.Header_Num,\n       Element    => Name_Id,\n@@ -98,6 +124,21 @@ package body Prj.Conf is\n    --  projects, so that when the second phase of the processing is performed\n    --  these attributes are automatically taken into account.\n \n+   type State is (No_State);\n+\n+   procedure Look_For_Project_Paths\n+     (Project    : Project_Id;\n+      Tree       : Project_Tree_Ref;\n+      With_State : in out State);\n+   --  Check the compilers in the Project and add record them in the list\n+   --  rooted at First_Compiler_Root, with their runtimes, if they are not\n+   --  already in the list.\n+\n+   procedure Update_Project_Path is new\n+     For_Every_Project_Imported\n+       (State  => State,\n+        Action => Look_For_Project_Paths);\n+\n    ------------------------------------\n    -- Add_Default_GNAT_Naming_Scheme --\n    ------------------------------------\n@@ -1448,7 +1489,8 @@ package body Prj.Conf is\n       --  If the config file is not auto-generated, warn if there is any --RTS\n       --  switch, but not when the config file is generated in memory.\n \n-      elsif RTS_Languages.Get_First /= No_Name\n+      elsif Warn_For_RTS\n+        and then RTS_Languages.Get_First /= No_Name\n         and then Opt.Warning_Mode /= Opt.Suppress\n         and then On_Load_Config = null\n       then\n@@ -1558,11 +1600,36 @@ package body Prj.Conf is\n       On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null)\n    is\n       Success : Boolean := False;\n-      Try_Again : Boolean := True;\n+      Target_Try_Again : Boolean := True;\n+      Config_Try_Again : Boolean;\n+\n+      S : State := No_State;\n+\n+      Conf_File_Name : String_Access := new String'(Config_File_Name);\n+\n+      procedure Add_Directory (Dir : String);\n+      --  Add a directory at the end of the Project Path\n+\n+      -------------------\n+      -- Add_Directory --\n+      -------------------\n+\n+      procedure Add_Directory (Dir : String) is\n+      begin\n+         if Opt.Verbose_Mode then\n+            Write_Line (\"   Adding directory \"\"\" & Dir & \"\"\"\");\n+         end if;\n+\n+         Prj.Env.Add_Directories (Env.Project_Path, Dir);\n+      end Add_Directory;\n \n    begin\n       pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n+      --  Start with ignoring missing withed projects\n+\n+      Update_Ignore_Missing_With (Env.Flags, True);\n+\n       --  Record Target_Value and Target_Origin.\n \n       if Target_Name = \"\" then\n@@ -1630,10 +1697,10 @@ package body Prj.Conf is\n               and then\n                 Get_Name_String (Variable.Value) /= Opt.Target_Value.all\n             then\n-               if Try_Again then\n+               if Target_Try_Again then\n                   Opt.Target_Value :=\n                     new String'(Get_Name_String (Variable.Value));\n-                  Try_Again := False;\n+                  Target_Try_Again := False;\n                   goto Parse_Again;\n \n                else\n@@ -1643,13 +1710,18 @@ package body Prj.Conf is\n                end if;\n             end if;\n          end;\n-\n       end if;\n \n+      --  If there are missing withed projects, the projects will be parsed\n+      --  again after the project path is extended with directories rooted\n+      --  at the compiler roots.\n+\n+      Config_Try_Again := Project_Node_Tree.Incomplete_With;\n+\n       Process_Project_And_Apply_Config\n         (Main_Project               => Main_Project,\n          User_Project_Node          => User_Project_Node,\n-         Config_File_Name           => Config_File_Name,\n+         Config_File_Name           => Conf_File_Name.all,\n          Autoconf_Specified         => Autoconf_Specified,\n          Project_Tree               => Project_Tree,\n          Project_Node_Tree          => Project_Node_Tree,\n@@ -1663,6 +1735,194 @@ package body Prj.Conf is\n          On_Load_Config             => On_Load_Config,\n          On_New_Tree_Loaded         => On_New_Tree_Loaded,\n          Do_Phase_1                 => Opt.Target_Origin = Specified);\n+\n+      --  Exit if there was an error. Otherwise, if Config_Try_Again is True,\n+      --  update the project path and try again.\n+\n+      if Main_Project /= No_Project and then Config_Try_Again then\n+         Update_Ignore_Missing_With (Env.Flags, False);\n+\n+         if Config_File_Path /= null then\n+            Conf_File_Name := new String'(Simple_Name (Config_File_Path.all));\n+         end if;\n+\n+         --  For the second time the project files are parsed, the warning for\n+         --  --RTS= being only taken into account in auto-configuration are\n+         --  suppressed, as we are no longer in auto-configuration.\n+\n+         Warn_For_RTS := False;\n+\n+         --  Add the default directories corresponding to the compilers\n+\n+         Update_Project_Path\n+           (By                 => Main_Project,\n+            Tree               => Project_Tree,\n+            With_State         => S,\n+            Include_Aggregated => True,\n+            Imported_First     => False);\n+\n+         declare\n+            Compiler_Root : Compiler_Root_Ptr;\n+            Prefix        : String_Access;\n+            Runtime_Root  : Runtime_Root_Ptr;\n+            Path_Value : constant String_Access := Getenv (\"PATH\");\n+\n+         begin\n+            if Opt.Verbose_Mode then\n+               Write_Line (\"Setting the default project search directories\");\n+\n+               if Prj.Current_Verbosity = High then\n+                  if Path_Value = null or else Path_Value'Length = 0 then\n+                     Write_Line (\"No environment variable PATH\");\n+\n+                  else\n+                     Write_Line (\"PATH =\");\n+                     Write_Line (\"   \" & Path_Value.all);\n+                  end if;\n+               end if;\n+            end if;\n+\n+            --  Reorder the compiler roots in the PATH order\n+\n+            if First_Compiler_Root /= null\n+              and then First_Compiler_Root.Next /= null\n+            then\n+               declare\n+                  Pred : Compiler_Root_Ptr;\n+                  First_New_Comp : Compiler_Root_Ptr := null;\n+                  New_Comp : Compiler_Root_Ptr := null;\n+                  First : Positive := Path_Value'First;\n+                  Last  : Positive;\n+                  Path_Last : Positive;\n+               begin\n+                  while First <= Path_Value'Last loop\n+                     Last := First;\n+\n+                     if Path_Value (First) /= Path_Separator then\n+                        while Last < Path_Value'Last\n+                          and then Path_Value (Last + 1) /= Path_Separator\n+                        loop\n+                           Last := Last + 1;\n+                        end loop;\n+\n+                        Path_Last := Last;\n+                        while Path_Last > First\n+                          and then\n+                            Path_Value (Path_Last) = Directory_Separator\n+                        loop\n+                           Path_Last := Path_Last - 1;\n+                        end loop;\n+\n+                        if Path_Last > First + 4\n+                          and then\n+                            Path_Value (Path_Last - 2 .. Path_Last) = \"bin\"\n+                          and then\n+                            Path_Value (Path_Last - 3) = Directory_Separator\n+                        then\n+                           Path_Last := Path_Last - 4;\n+                           Pred := null;\n+                           Compiler_Root := First_Compiler_Root;\n+                           while Compiler_Root /= null\n+                             and then Compiler_Root.Root.all /=\n+                               Path_Value (First .. Path_Last)\n+                           loop\n+                              Pred := Compiler_Root;\n+                              Compiler_Root := Compiler_Root.Next;\n+                           end loop;\n+\n+                           if Compiler_Root /= null then\n+                              if Pred = null then\n+                                 First_Compiler_Root :=\n+                                   First_Compiler_Root.Next;\n+                              else\n+                                 Pred.Next := Compiler_Root.Next;\n+                              end if;\n+\n+                              if First_New_Comp = null then\n+                                 First_New_Comp := Compiler_Root;\n+                              else\n+                                 New_Comp.Next := Compiler_Root;\n+                              end if;\n+\n+                              New_Comp := Compiler_Root;\n+                              New_Comp.Next := null;\n+                           end if;\n+                        end if;\n+                     end if;\n+\n+                     First := Last + 1;\n+                  end loop;\n+\n+                  if First_New_Comp /= null then\n+                     New_Comp.Next := First_Compiler_Root;\n+                     First_Compiler_Root := First_New_Comp;\n+                  end if;\n+               end;\n+            end if;\n+\n+            --  Now that the compiler roots are in a correct order, add the\n+            --  directories corresponding to these compiler roots in the\n+            --  project path.\n+\n+            Compiler_Root := First_Compiler_Root;\n+            while Compiler_Root /= null loop\n+               Prefix := Compiler_Root.Root;\n+\n+               Runtime_Root := Compiler_Root.Runtimes;\n+               while Runtime_Root /= null loop\n+                  Add_Directory\n+                    (Runtime_Root.Root.all &\n+                       Directory_Separator &\n+                       \"lib\" &\n+                       Directory_Separator &\n+                       \"gnat\");\n+                  Add_Directory\n+                    (Runtime_Root.Root.all &\n+                       Directory_Separator &\n+                       \"share\" &\n+                       Directory_Separator &\n+                       \"gpr\");\n+                  Runtime_Root := Runtime_Root.Next;\n+               end loop;\n+\n+               Add_Directory\n+                 (Prefix.all &\n+                    Directory_Separator &\n+                    Opt.Target_Value.all &\n+                    Directory_Separator &\n+                    \"lib\" &\n+                    Directory_Separator &\n+                    \"gnat\");\n+               Add_Directory\n+                 (Prefix.all &\n+                    Directory_Separator &\n+                    Opt.Target_Value.all &\n+                    Directory_Separator &\n+                    \"share\" &\n+                    Directory_Separator &\n+                    \"gpr\");\n+               Add_Directory\n+                 (Prefix.all &\n+                    Directory_Separator &\n+                    \"share\" &\n+                    Directory_Separator &\n+                    \"gpr\");\n+               Add_Directory\n+                 (Prefix.all &\n+                    Directory_Separator &\n+                    \"lib\" &\n+                    Directory_Separator &\n+                    \"gnat\");\n+               Compiler_Root := Compiler_Root.Next;\n+            end loop;\n+         end;\n+\n+         --  And parse again the project files. There will be no missing\n+         --  withed projects, as Ignore_Missing_With is set to False in\n+         --  the environment flags, so there is no risk of endless loop here.\n+\n+         goto Parse_Again;\n+      end if;\n    end Parse_Project_And_Apply_Config;\n \n    --------------------------------------\n@@ -1886,4 +2146,112 @@ package body Prj.Conf is\n       RTS_Languages.Set (Language, Name_Find);\n    end Set_Runtime_For;\n \n+   ----------------------------\n+   -- Look_For_Project_Paths --\n+   ----------------------------\n+\n+   procedure Look_For_Project_Paths\n+     (Project    : Project_Id;\n+      Tree       : Project_Tree_Ref;\n+      With_State : in out State)\n+   is\n+      Lang_Id : Language_Ptr;\n+      Compiler_Root : Compiler_Root_Ptr;\n+      Runtime_Root : Runtime_Root_Ptr;\n+      Comp_Driver : String_Access;\n+      Comp_Dir : String_Access;\n+      Prefix   : String_Access;\n+\n+      pragma Unreferenced (Tree);\n+\n+   begin\n+      With_State := No_State;\n+\n+      Lang_Id := Project.Languages;\n+      while Lang_Id /= No_Language_Index loop\n+         if Lang_Id.Config.Compiler_Driver /= No_File then\n+            Comp_Driver :=\n+              new String'\n+                (Get_Name_String (Lang_Id.Config.Compiler_Driver));\n+\n+            --  Get the absolute path of the compiler driver\n+\n+            if not Is_Absolute_Path (Comp_Driver.all) then\n+               Comp_Driver := Locate_Exec_On_Path (Comp_Driver.all);\n+            end if;\n+\n+            if Comp_Driver /= null and then Comp_Driver'Length > 0 then\n+               Comp_Dir :=\n+                 new String'\n+                   (Containing_Directory (Comp_Driver.all));\n+\n+               --  Consider only the compiler drivers that are in \"bin\"\n+               --  subdirectories.\n+\n+               if Simple_Name (Comp_Dir.all) = \"bin\" then\n+                  Prefix :=\n+                    new String'(Containing_Directory (Comp_Dir.all));\n+\n+                  --  Check if the compiler root is already in the list. If it\n+                  --  is not, add it to the list.\n+\n+                  Compiler_Root := First_Compiler_Root;\n+                  while Compiler_Root /= null loop\n+                     exit when Prefix.all = Compiler_Root.Root.all;\n+                     Compiler_Root := Compiler_Root.Next;\n+                  end loop;\n+\n+                  if Compiler_Root = null then\n+                     First_Compiler_Root :=\n+                       new Compiler_Root_Data'\n+                         (Root => Prefix,\n+                          Runtimes => null,\n+                          Next => First_Compiler_Root);\n+                     Compiler_Root := First_Compiler_Root;\n+                  end if;\n+\n+                  --  If there is a runtime for this compiler, check if it is\n+                  --  recorded with the compiler root. If it is not, record\n+                  --  the runtime.\n+\n+                  declare\n+                     Runtime : constant String :=\n+                       Runtime_Name_For (Lang_Id.Name);\n+                     Root : String_Access;\n+                  begin\n+                     if Runtime'Length > 0 then\n+                        if Is_Absolute_Path (Runtime) then\n+                           Root := new String'(Runtime);\n+\n+                        else\n+                           Root :=\n+                             new String'\n+                               (Prefix.all &\n+                                  Directory_Separator &\n+                                  Opt.Target_Value.all &\n+                                  Directory_Separator &\n+                                  Runtime);\n+                        end if;\n+\n+                        Runtime_Root := Compiler_Root.Runtimes;\n+                        while Runtime_Root /= null loop\n+                           exit when Root.all = Runtime_Root.Root.all;\n+                           Runtime_Root := Runtime_Root.Next;\n+                        end loop;\n+\n+                        if Runtime_Root = null then\n+                           Compiler_Root.Runtimes :=\n+                             new Runtime_Root_Data'\n+                               (Root => Root,\n+                                Next => Compiler_Root.Runtimes);\n+                        end if;\n+                     end if;\n+                  end;\n+               end if;\n+            end if;\n+         end if;\n+\n+         Lang_Id := Lang_Id.Next;\n+      end loop;\n+   end Look_For_Project_Paths;\n end Prj.Conf;"}, {"sha": "7dbb4ce7c8cdc1e405db4dbcd4e82d05d5e7acca", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -1876,7 +1876,7 @@ package body Prj.Env is\n      (Self        : in out Project_Search_Path;\n       Target_Name : String)\n    is\n-      Add_Default_Dir : Boolean := True;\n+      Add_Default_Dir : Boolean := Target_Name /= \"-\";\n       First           : Positive;\n       Last            : Positive;\n "}, {"sha": "f070a75fce3ee191edeb5de4244f02b94d214550", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -175,8 +175,10 @@ package Prj.Env is\n       Target_Name : String);\n    --  Initialize Self. It will then contain the default project path on the\n    --  given target (including directories specified by the environment\n-   --  variables ADA_PROJECT_PATH and GPR_PROJECT_PATH). This does nothing if\n-   --  Self has already been initialized.\n+   --  variables GPR_PROJECT_PATH_FILE, GPR_PROJECT_PATH and ADA_PROJECT_PATH).\n+   --  If one of the directory or Target_Name is \"-\", then the path contains\n+   --  only those directories specified by the environment variables (except\n+   --  \"-\"). This does nothing if Self has already been initialized.\n \n    procedure Copy (From : Project_Search_Path; To : out Project_Search_Path);\n    --  Copy From into To"}, {"sha": "34b13bc1e80b5581b37c28ab7f5a863cb71cf331", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -553,6 +553,8 @@ package body Prj.Part is\n \n    begin\n       In_Tree.Incomplete_With := False;\n+      Project_Stack.Init;\n+      Tree_Private_Part.Projects_Htable.Reset (In_Tree.Projects_HT);\n \n       if not Is_Initialized (Env.Project_Path) then\n          Prj.Env.Initialize_Default_Project_Path"}, {"sha": "8a267cf476fa646e142280293953d01be2c1e797", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -2147,6 +2147,17 @@ package body Prj is\n         (Root_Project, Root_Tree, Project_Context'(False, False));\n    end For_Project_And_Aggregated_Context;\n \n+   --------------------------------\n+   -- Update_Ignore_Missing_With --\n+   --------------------------------\n+\n+   procedure Update_Ignore_Missing_With\n+     (Flags : in out Processing_Flags; Value : Boolean)\n+   is\n+   begin\n+      Flags.Ignore_Missing_With := Value;\n+   end Update_Ignore_Missing_With;\n+\n --  Package initialization for Prj\n \n begin"}, {"sha": "4ba3fac3bcaffd38101ec4c5877fa09338a7701b", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -1893,6 +1893,10 @@ package Prj is\n    --       * user project also includes a \"with\" that can only be resolved\n    --         once we have found the gnatls\n \n+   procedure Update_Ignore_Missing_With\n+     (Flags : in out Processing_Flags; Value : Boolean);\n+   --  Update the value of component Ignore_Missing_With in Flags with Value\n+\n    Gprbuild_Flags   : constant Processing_Flags;\n    Gprinstall_Flags : constant Processing_Flags;\n    Gprclean_Flags   : constant Processing_Flags;"}, {"sha": "46fdd0067847b03fb1d62e475d51868605b13484", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -1698,6 +1698,54 @@ package body System.OS_Lib is\n       end if;\n    end Non_Blocking_Spawn;\n \n+   function Non_Blocking_Spawn\n+     (Program_Name : String;\n+      Args         : Argument_List;\n+      Stdout_File  : String;\n+      Stderr_File  : String) return Process_Id\n+   is\n+      Stdout_FD : constant File_Descriptor :=\n+                     Create_Output_Text_File (Stdout_File);\n+      Stderr_FD : constant File_Descriptor :=\n+                     Create_Output_Text_File (Stderr_File);\n+\n+      Saved_Output : File_Descriptor;\n+      Saved_Error  : File_Descriptor;\n+\n+      Result : Process_Id;\n+\n+   begin\n+      --  Do not attempt to spawn if the output files could not be created\n+\n+      if Stdout_FD = Invalid_FD or else Stderr_FD = Invalid_FD then\n+         return Invalid_Pid;\n+      end if;\n+\n+      --  Set standard output and error to the specified files\n+\n+      Saved_Output := Dup (Standout);\n+      Dup2 (Stdout_FD, Standout);\n+\n+      Saved_Error  := Dup (Standerr);\n+      Dup2 (Stderr_FD, Standerr);\n+\n+      --  Spawn the program\n+\n+      Result := Non_Blocking_Spawn (Program_Name, Args);\n+\n+      --  Restore the standard output and error\n+\n+      Dup2 (Saved_Output, Standout);\n+      Dup2 (Saved_Error, Standerr);\n+\n+      --  And close the saved standard output and error file descriptors\n+\n+      Close (Saved_Output);\n+      Close (Saved_Error);\n+\n+      return Result;\n+   end Non_Blocking_Spawn;\n+\n    -------------------------\n    -- Normalize_Arguments --\n    -------------------------"}, {"sha": "d285fd4cb071068e696bdd6c23e59ef6010b8929", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -856,6 +856,15 @@ package System.OS_Lib is\n    --  This function will always return Invalid_Pid under VxWorks, since there\n    --  is no notion of executables under this OS.\n \n+   function Non_Blocking_Spawn\n+     (Program_Name : String;\n+      Args         : Argument_List;\n+      Stdout_File  : String;\n+      Stderr_File  : String) return Process_Id;\n+   --  Similar to the procedure above, but saves the standard output of the\n+   --  command to a file with the name Stdout_File and the standard output\n+   --  of the command to a file with the name Stderr_File.\n+\n    procedure Wait_Process (Pid : out Process_Id; Success : out Boolean);\n    --  Wait for the completion of any of the processes created by previous\n    --  calls to Non_Blocking_Spawn. The caller will be suspended until one of"}, {"sha": "68104b906ff0ae236ff186957cbf2d80fd1bfc67", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -282,6 +282,8 @@ package body Sem_Aux is\n         (Typ : Entity_Id) return Boolean;\n       --  Scans the Discriminants to see whether any are Completely_Hidden\n       --  (the mechanism for describing non-specified stored discriminants)\n+      --  Note that the entity list for the type may contain anonymous access\n+      --  types created by expressions that constrain access discriminants.\n \n       ----------------------------------------\n       -- Has_Completely_Hidden_Discriminant --\n@@ -296,8 +298,17 @@ package body Sem_Aux is\n          pragma Assert (Ekind (Typ) = E_Discriminant);\n \n          Ent := Typ;\n-         while Present (Ent) and then Ekind (Ent) = E_Discriminant loop\n-            if Is_Completely_Hidden (Ent) then\n+         while Present (Ent) loop\n+\n+            --  Skip anonymous types that may be created by expressions\n+            --  used as discriminant constraints on inherited discriminants.\n+\n+            if Is_Itype (Ent) then\n+               null;\n+\n+            elsif  Ekind (Ent) = E_Discriminant\n+              and then Is_Completely_Hidden (Ent)\n+            then\n                return True;\n             end if;\n \n@@ -322,7 +333,8 @@ package body Sem_Aux is\n \n       if Has_Completely_Hidden_Discriminant (Ent) then\n          while Present (Ent) loop\n-            exit when Is_Completely_Hidden (Ent);\n+            exit when Ekind (Ent) = E_Discriminant\n+              and then Is_Completely_Hidden (Ent);\n             Ent := Next_Entity (Ent);\n          end loop;\n       end if;"}, {"sha": "3103cf781d90a337d9523f2b6a0bb33d888583e1", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "865bcd6b161df887a1c99e88728bfe38f9f4d3fd", "filename": "gcc/ada/system-mingw-x86_64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/527f5eb67affc709c78a4f65ba7a1f731d63315e/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw-x86_64.ads?ref=527f5eb67affc709c78a4f65ba7a1f731d63315e", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}]}