{"sha": "6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4ZDQzZTc4ZDU3MDY4ZTM3YmExOWQ3ZTVkYThjNDQ3ZWNhOGRhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-31T12:27:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-31T12:27:32Z"}, "message": "exception.cc (PERSONALITY_FUNCTION): Simplify leb128 handling.\n\n        * exception.cc (PERSONALITY_FUNCTION): Simplify\n        leb128 handling.\n\nFrom-SVN: r45317", "tree": {"sha": "4b357aba3522c2999c4f6fde6654832e7f8590be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b357aba3522c2999c4f6fde6654832e7f8590be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea57133ffedb056f6cfbd46bb2768b70811b12b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea57133ffedb056f6cfbd46bb2768b70811b12b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea57133ffedb056f6cfbd46bb2768b70811b12b2"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "c7eed00c78f22f17cbe8b13ba13800f14b41d865", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "patch": "@@ -1,3 +1,8 @@\n+2001-08-31  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* exception.cc (PERSONALITY_FUNCTION): Simplify\n+\tleb128 handling.\n+\n 2001-08-31  Tom Tromey  <tromey@redhat.com>\n \n \t* java/io/ByteArrayInputStream.java: Merged with Classpath."}, {"sha": "752236102af3fd07c027e70ef5d13ef6fb8c3ae2", "filename": "libjava/exception.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "patch": "@@ -120,7 +120,7 @@ static const unsigned char *\n parse_lsda_header (_Unwind_Context *context, const unsigned char *p,\n \t\t   lsda_header_info *info)\n {\n-  _Unwind_Ptr tmp;\n+  _Unwind_Word tmp;\n   unsigned char lpstart_encoding;\n \n   info->Start = (context ? _Unwind_GetRegionStart (context) : 0);\n@@ -236,7 +236,7 @@ PERSONALITY_FUNCTION (int version,\n     return _URC_CONTINUE_UNWIND;\n   else\n     {\n-      _Unwind_Ptr cs_lp, cs_action;\n+      _Unwind_Word cs_lp, cs_action;\n       do\n \t{\n \t  p = read_uleb128 (p, &cs_lp);\n@@ -255,7 +255,8 @@ PERSONALITY_FUNCTION (int version,\n   // Search the call-site table for the action associated with this IP.\n   while (p < info.action_table)\n     {\n-      _Unwind_Ptr cs_start, cs_len, cs_lp, cs_action;\n+      _Unwind_Ptr cs_start, cs_len, cs_lp;\n+      _Unwind_Word cs_action;\n \n       // Note that all call-site encodings are \"absolute\" displacements.\n       p = read_encoded_value (0, info.call_site_encoding, p, &cs_start);\n@@ -301,15 +302,13 @@ PERSONALITY_FUNCTION (int version,\n   else\n     {\n       // Otherwise we have a catch handler.\n-      signed long ar_filter, ar_disp;\n+      _Unwind_Sword ar_filter, ar_disp;\n \n       while (1)\n \t{\n-\t  _Unwind_Ptr tmp;\n-\n \t  p = action_record;\n-\t  p = read_sleb128 (p, &tmp); ar_filter = tmp;\n-\t  read_sleb128 (p, &tmp); ar_disp = tmp;\n+\t  p = read_sleb128 (p, &ar_filter);\n+\t  read_sleb128 (p, &ar_disp);\n \n \t  if (ar_filter == 0)\n \t    {"}, {"sha": "e735ac860ddb348914021ed13a0c4eea930c69ff", "filename": "libstdc++-v3/libsupc++/eh_personality.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8d43e78d57068e37ba19d7e5da8c447eca8daa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc?ref=6c8d43e78d57068e37ba19d7e5da8c447eca8daa", "patch": "@@ -197,7 +197,7 @@ PERSONALITY_FUNCTION (int version,\n     }\n   else\n     {\n-      _Unwind_Ptr cs_lp, cs_action;\n+      _Unwind_Word cs_lp, cs_action;\n       do\n \t{\n \t  p = read_uleb128 (p, &cs_lp);\n@@ -216,7 +216,8 @@ PERSONALITY_FUNCTION (int version,\n   // Search the call-site table for the action associated with this IP.\n   while (p < info.action_table)\n     {\n-      _Unwind_Ptr cs_start, cs_len, cs_lp, cs_action;\n+      _Unwind_Ptr cs_start, cs_len, cs_lp;\n+      _Unwind_Word cs_action;\n \n       // Note that all call-site encodings are \"absolute\" displacements.\n       p = read_encoded_value (0, info.call_site_encoding, p, &cs_start);"}]}