{"sha": "9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRiZGVmYmIyMDFkZDY3Y2QxY2U3OTVlOTY5YzNhZTFhODUwYzMxZA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-02-16T16:12:51Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-02-16T16:12:51Z"}, "message": "re PR fortran/71066 (ICE in set_loop_bounds, at fortran/trans-array.c:4680)\n\n2019-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/71066\n\t* trans-decl.c (generate_coarray_sym_init):  For an array\n\tconstructor in a DATA statement of a coarray variable, set the\n\trank to 1 to avoid confusion later on.  If the constructor\n\tcontains only one value, use that for initiailizig.\n\n2019-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/71066\n\t* gfortran.dg/coarray_data_1.f90: New test.\n\nFrom-SVN: r268960", "tree": {"sha": "5c616f555002c6f1ababe31ba60de34028bf7317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c616f555002c6f1ababe31ba60de34028bf7317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/comments", "author": null, "committer": null, "parents": [{"sha": "d810ce4b18bbd2796d5e3c10c459f6e6c679af1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d810ce4b18bbd2796d5e3c10c459f6e6c679af1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d810ce4b18bbd2796d5e3c10c459f6e6c679af1e"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "ceef9264f098bb799c86eb667b982b95f6b515ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "patch": "@@ -1,3 +1,11 @@\n+2019-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/71066\n+\t* trans-decl.c (generate_coarray_sym_init):  For an array\n+\tconstructor in a DATA statement of a coarray variable, set the\n+\trank to 1 to avoid confusion later on.  If the constructor\n+\tcontains only one value, use that for initiailizig.\n+\n 2019-02-14  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/81552"}, {"sha": "9a8f2d36784ea94f73f12ab842c80c1ae2ea32df", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "patch": "@@ -5399,6 +5399,33 @@ generate_coarray_sym_init (gfc_symbol *sym)\n   /* Handle \"static\" initializer.  */\n   if (sym->value)\n     {\n+      if (sym->value->expr_type == EXPR_ARRAY)\n+\t{\n+\t  gfc_constructor *c, *cnext;\n+\n+\t  /* Test if the array has more than one element.  */\n+\t  c = gfc_constructor_first (sym->value->value.constructor);\n+\t  gcc_assert (c);  /* Empty constructor should not happen here.  */\n+\t  cnext = gfc_constructor_next (c);\n+\n+\t  if (cnext)\n+\t    {\n+\t      /* An EXPR_ARRAY with a rank > 1 here has to come from a\n+\t\t DATA statement.  Set its rank here as not to confuse\n+\t\t the following steps.   */\n+\t      sym->value->rank = 1;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* There is only a single value in the constructor, use\n+\t\t it directly for the assignment.  */\n+\t      gfc_expr *new_expr;\n+\t      new_expr = gfc_copy_expr (c->expr);\n+\t      gfc_free_expr (sym->value);\n+\t      sym->value = new_expr;\n+\t    }\n+\t}\n+\n       sym->attr.pointer = 1;\n       tmp = gfc_trans_assignment (gfc_lval_expr_from_sym (sym), sym->value,\n \t\t\t\t  true, false);"}, {"sha": "e68f969bcb277e65b57633e0306e1971533c53f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "patch": "@@ -1,3 +1,8 @@\n+2019-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/71066\n+\t* gfortran.dg/coarray_data_1.f90: New test.\n+\n 2019-02-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/patchable_function_entry-decl.c: Add -fno-pie on SPARC."}, {"sha": "94ab4c26cec0a519b6e077ba3dc997eb3b52080a", "filename": "gcc/testsuite/gfortran.dg/coarray_data_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_data_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbdefbb201dd67cd1ce795e969c3ae1a850c31d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_data_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_data_1.f90?ref=9dbdefbb201dd67cd1ce795e969c3ae1a850c31d", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do  run }\n+! { dg-options \"-fcoarray=lib -lcaf_single \" }\n+! PR 71066 - this used to ICE\n+program p\n+   real :: a(2,2)[*]\n+   integer :: b(2,2)[*]\n+   data a /4*0.0/\n+   data b /1234, 2345, 3456, 4567/\n+   if (any (a /= 0.0)) stop 1\n+   if (any (b /= reshape([1234, 2345, 3456, 4567],[2,2]))) stop 2\n+end"}]}