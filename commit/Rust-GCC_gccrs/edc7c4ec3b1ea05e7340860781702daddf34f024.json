{"sha": "edc7c4ec3b1ea05e7340860781702daddf34f024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRjN2M0ZWMzYjFlYTA1ZTczNDA4NjA3ODE3MDJkYWRkZjM0ZjAyNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-21T06:05:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-21T06:05:17Z"}, "message": "(parser_build_binary_op): Replace the assignment of CLASS.\n\nFor Z<Y<Z warning, test class of CODE; don't use TREE_CODE (result).\n\nFrom-SVN: r1921", "tree": {"sha": "badb94b873bb0aa59e9f54b3b5fe18e18bcab4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/badb94b873bb0aa59e9f54b3b5fe18e18bcab4cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edc7c4ec3b1ea05e7340860781702daddf34f024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc7c4ec3b1ea05e7340860781702daddf34f024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc7c4ec3b1ea05e7340860781702daddf34f024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc7c4ec3b1ea05e7340860781702daddf34f024/comments", "author": null, "committer": null, "parents": [{"sha": "3bf1c6b55c2ce09960809f20234828c591f3b300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf1c6b55c2ce09960809f20234828c591f3b300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf1c6b55c2ce09960809f20234828c591f3b300"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6a52b41c7a520a0fd0c6e43620724dd9f734d4f2", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc7c4ec3b1ea05e7340860781702daddf34f024/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc7c4ec3b1ea05e7340860781702daddf34f024/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=edc7c4ec3b1ea05e7340860781702daddf34f024", "patch": "@@ -2066,7 +2066,7 @@ convert_arguments (typelist, values, name)\n    In addition to constructing the expression,\n    we check for operands that were written with other binary operators\n    in a way that is likely to confuse the user.  */\n-   \n+\n tree\n parser_build_binary_op (code, arg1, arg2)\n      enum tree_code code;\n@@ -2132,13 +2132,13 @@ parser_build_binary_op (code, arg1, arg2)\n \t}\n     }\n \n-  class = TREE_CODE_CLASS (TREE_CODE (result));\n-\n   /* Similarly, check for cases like 1<=i<=10 that are probably errors.  */\n-  if (class == '<' && extra_warnings\n+  if (TREE_CODE_CLASS (code) == '<' && extra_warnings\n       && (TREE_CODE_CLASS (code1) == '<' || TREE_CODE_CLASS (code2) == '<'))\n     warning (\"comparisons like X<=Y<=Z do not have their mathematical meaning\");\n \n+  class = TREE_CODE_CLASS (TREE_CODE (result));\n+\n   /* Record the code that was specified in the source,\n      for the sake of warnings about confusing nesting.  */\n   if (class == 'e' || class == '1'"}]}