{"sha": "0c6caaf8b4de07a4b33fe090d7620bd531724282", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2Y2FhZjhiNGRlMDdhNGIzM2ZlMDkwZDc2MjBiZDUzMTcyNDI4Mg==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2014-11-06T14:41:52Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-11-06T14:41:52Z"}, "message": "[AArch64] Add ACLE arch-related predefined macros\n\n2014-11-06  Renlin Li  <renlin.li@arm.com>\n\n\t* config/aarch64/aarch64.c (aarch64_architecture_version): New.\n\t(processor): New architecture_version field.\n\t(aarch64_override_options): Initialize aarch64_architecture_version.\n\t* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_ARCH,\n\t__ARM_ARCH_PROFILE, aarch64_arch_name macro.\n\nFrom-SVN: r217192", "tree": {"sha": "aa9ba237be598ac86ff1783ceea9eea986ce466f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa9ba237be598ac86ff1783ceea9eea986ce466f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6caaf8b4de07a4b33fe090d7620bd531724282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6caaf8b4de07a4b33fe090d7620bd531724282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6caaf8b4de07a4b33fe090d7620bd531724282", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6caaf8b4de07a4b33fe090d7620bd531724282/comments", "author": null, "committer": null, "parents": [{"sha": "5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "d8cbe9610ccd1a85049a2bc8f51e5ed4a0aa1c2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c6caaf8b4de07a4b33fe090d7620bd531724282", "patch": "@@ -1,3 +1,11 @@\n+2014-11-06  Renlin Li  <renlin.li@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_architecture_version): New.\n+\t(processor): New architecture_version field.\n+\t(aarch64_override_options): Initialize aarch64_architecture_version.\n+\t* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_ARCH,\n+\t__ARM_ARCH_PROFILE, aarch64_arch_name macro.\n+\n 2014-11-06  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* params.def (sra-max-scalarization-size-Ospeed): New."}, {"sha": "736ad903b7081f30a36f01d4441d2fac1cd2c307", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=0c6caaf8b4de07a4b33fe090d7620bd531724282", "patch": "@@ -154,6 +154,9 @@ static bool aarch64_vectorize_vec_perm_const_ok (machine_mode vmode,\n \t\t\t\t\t\t const unsigned char *sel);\n static int aarch64_address_cost (rtx, machine_mode, addr_space_t, bool);\n \n+/* Major revision number of the ARM Architecture implemented by the target.  */\n+unsigned aarch64_architecture_version;\n+\n /* The processor for which instructions should be scheduled.  */\n enum aarch64_processor aarch64_tune = cortexa53;\n \n@@ -348,6 +351,7 @@ struct processor\n   const char *const name;\n   enum aarch64_processor core;\n   const char *arch;\n+  unsigned architecture_version;\n   const unsigned long flags;\n   const struct tune_params *const tune;\n };\n@@ -356,21 +360,23 @@ struct processor\n static const struct processor all_cores[] =\n {\n #define AARCH64_CORE(NAME, X, IDENT, ARCH, FLAGS, COSTS) \\\n-  {NAME, IDENT, #ARCH, FLAGS | AARCH64_FL_FOR_ARCH##ARCH, &COSTS##_tunings},\n+  {NAME, IDENT, #ARCH, ARCH,\\\n+    FLAGS | AARCH64_FL_FOR_ARCH##ARCH, &COSTS##_tunings},\n #include \"aarch64-cores.def\"\n #undef AARCH64_CORE\n-  {\"generic\", cortexa53, \"8\", AARCH64_FL_FPSIMD | AARCH64_FL_FOR_ARCH8, &generic_tunings},\n-  {NULL, aarch64_none, NULL, 0, NULL}\n+  {\"generic\", cortexa53, \"8\", 8,\\\n+    AARCH64_FL_FPSIMD | AARCH64_FL_FOR_ARCH8, &generic_tunings},\n+  {NULL, aarch64_none, NULL, 0, 0, NULL}\n };\n \n /* Architectures implementing AArch64.  */\n static const struct processor all_architectures[] =\n {\n #define AARCH64_ARCH(NAME, CORE, ARCH, FLAGS) \\\n-  {NAME, CORE, #ARCH, FLAGS, NULL},\n+  {NAME, CORE, #ARCH, ARCH, FLAGS, NULL},\n #include \"aarch64-arches.def\"\n #undef AARCH64_ARCH\n-  {NULL, aarch64_none, NULL, 0, NULL}\n+  {NULL, aarch64_none, NULL, 0, 0, NULL}\n };\n \n /* Target specification.  These are populated as commandline arguments\n@@ -6470,6 +6476,7 @@ aarch64_override_options (void)\n   aarch64_tune_flags = selected_tune->flags;\n   aarch64_tune = selected_tune->core;\n   aarch64_tune_params = selected_tune->tune;\n+  aarch64_architecture_version = selected_cpu->architecture_version;\n \n   if (aarch64_fix_a53_err835769 == 2)\n     {"}, {"sha": "1a6e909986e006faad7e0da9e941262b4cc8ac18", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6caaf8b4de07a4b33fe090d7620bd531724282/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=0c6caaf8b4de07a4b33fe090d7620bd531724282", "patch": "@@ -28,7 +28,13 @@\n     {\t\t\t\t\t\t\t\\\n       builtin_define (\"__aarch64__\");                   \\\n       builtin_define (\"__ARM_64BIT_STATE\");             \\\n+      builtin_define_with_int_value                     \\\n+        (\"__ARM_ARCH\", aarch64_architecture_version);   \\\n+      cpp_define_formatted                                              \\\n+        (parse_in, \"__ARM_ARCH_%dA\", aarch64_architecture_version);     \\\n       builtin_define (\"__ARM_ARCH_ISA_A64\");            \\\n+      builtin_define_with_int_value                     \\\n+        (\"__ARM_ARCH_PROFILE\", 'A');                    \\\n       builtin_define (\"__ARM_FEATURE_CLZ\");             \\\n       builtin_define (\"__ARM_FEATURE_IDIV\");            \\\n       builtin_define (\"__ARM_FEATURE_UNALIGNED\");       \\\n@@ -172,6 +178,8 @@\n \n #define PCC_BITFIELD_TYPE_MATTERS\t1\n \n+/* Major revision number of the ARM Architecture implemented by the target.  */\n+extern unsigned aarch64_architecture_version;\n \n /* Instruction tuning/selection flags.  */\n "}]}