{"sha": "7ef95f9cf0accd2273a09848156344639fae97f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmOTVmOWNmMGFjY2QyMjczYTA5ODQ4MTU2MzQ0NjM5ZmFlOTdmNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-14T14:06:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-14T14:06:07Z"}, "message": "re PR tree-optimization/59354 (Element swizzling produces invalid result with -O3)\n\n2015-01-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59354\n\t* tree-vect-slp.c (vect_build_slp_tree_1): Treat loads from\n\tgroups larger than the slp group size as having gaps.\n\n\t* gcc.dg/vect/pr59354.c: New testcase.\n\nFrom-SVN: r219603", "tree": {"sha": "dda033ee0fa355044585b7b20f801a563eaa8811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dda033ee0fa355044585b7b20f801a563eaa8811"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef95f9cf0accd2273a09848156344639fae97f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef95f9cf0accd2273a09848156344639fae97f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef95f9cf0accd2273a09848156344639fae97f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef95f9cf0accd2273a09848156344639fae97f7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d11e4d6320fa4ec6ac4401eb5b152d5c74d166f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d11e4d6320fa4ec6ac4401eb5b152d5c74d166f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d11e4d6320fa4ec6ac4401eb5b152d5c74d166f"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "f57709368082d4224ad9daf6b7be50dcc6323d2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ef95f9cf0accd2273a09848156344639fae97f7", "patch": "@@ -1,3 +1,9 @@\n+2015-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59354\n+\t* tree-vect-slp.c (vect_build_slp_tree_1): Treat loads from\n+\tgroups larger than the slp group size as having gaps.\n+\n 2015-01-14  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR middle-end/59448"}, {"sha": "1d228a9187c6b4caa514284705d61d64cd7735dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ef95f9cf0accd2273a09848156344639fae97f7", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59354\n+\t* gcc.dg/vect/pr59354.c: New testcase.\n+\n 2015-01-14  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* lib/target-supports.exp"}, {"sha": "37fca9d25a433f9256083aa1b36286f5f344a351", "filename": "gcc/testsuite/gcc.dg/vect/pr59354.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59354.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59354.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59354.c?ref=7ef95f9cf0accd2273a09848156344639fae97f7", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"tree-vect.h\"\n+\n+void abort (void);\n+\n+unsigned int a[256];\n+unsigned char b[256];\n+\n+int main()\n+{\n+  int i, z, x, y;\n+\n+  check_vect ();\n+\n+  for(i = 0; i < 256; i++)\n+    {\n+      a[i] = i % 5;\n+      __asm__ volatile (\"\");\n+    }\n+\n+  for (z = 0; z < 16; z++)\n+    for (y = 0; y < 4; y++)\n+      for (x = 0; x < 4; x++)\n+\tb[y*64 + z*4 + x] = a[z*16 + y*4 + x];\n+\n+  if (b[4] != 1)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorized 1 loop\" \"vect\" { target { vect_pack_trunc } } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1228a0714069a07f562c8197e91c1aa5c528480c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef95f9cf0accd2273a09848156344639fae97f7/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7ef95f9cf0accd2273a09848156344639fae97f7", "patch": "@@ -729,8 +729,11 @@ vect_build_slp_tree_1 (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo,\n \t\t ???  We should enhance this to only disallow gaps\n \t\t inside vectors.  */\n               if ((unrolling_factor > 1\n-\t\t   && GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) == stmt\n-\t\t   && GROUP_GAP (vinfo_for_stmt (stmt)) != 0)\n+\t\t   && ((GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) == stmt\n+\t\t\t&& GROUP_GAP (vinfo_for_stmt (stmt)) != 0)\n+\t\t       /* If the group is split up then GROUP_GAP\n+\t\t\t  isn't correct here, nor is GROUP_FIRST_ELEMENT.  */\n+\t\t       || GROUP_SIZE (vinfo_for_stmt (stmt)) > group_size))\n \t\t  || (GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) != stmt\n \t\t      && GROUP_GAP (vinfo_for_stmt (stmt)) != 1))\n                 {"}]}