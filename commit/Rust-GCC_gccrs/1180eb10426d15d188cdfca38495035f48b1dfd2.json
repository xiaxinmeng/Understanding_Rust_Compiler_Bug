{"sha": "1180eb10426d15d188cdfca38495035f48b1dfd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4MGViMTA0MjZkMTVkMTg4Y2RmY2EzODQ5NTAzNWY0OGIxZGZkMg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-24T19:41:29Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-24T19:41:29Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r9801", "tree": {"sha": "bf1c85d5ee5b72959850ebb2664cd0b80aa8cec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf1c85d5ee5b72959850ebb2664cd0b80aa8cec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1180eb10426d15d188cdfca38495035f48b1dfd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1180eb10426d15d188cdfca38495035f48b1dfd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1180eb10426d15d188cdfca38495035f48b1dfd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1180eb10426d15d188cdfca38495035f48b1dfd2/comments", "author": null, "committer": null, "parents": [{"sha": "103894f1182df9a5f64cbb8f6d56397b9e7de0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103894f1182df9a5f64cbb8f6d56397b9e7de0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103894f1182df9a5f64cbb8f6d56397b9e7de0d8"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "acd66d0abaebd9d47b122eacee460c3e74d282f6", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1180eb10426d15d188cdfca38495035f48b1dfd2/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1180eb10426d15d188cdfca38495035f48b1dfd2/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1180eb10426d15d188cdfca38495035f48b1dfd2", "patch": "@@ -2019,6 +2019,7 @@ truthvalue_conversion (expr)\n     case TRUTH_AND_EXPR:\n     case TRUTH_OR_EXPR:\n     case TRUTH_XOR_EXPR:\n+    case TRUTH_NOT_EXPR:\n       TREE_TYPE (expr) = boolean_type_node;\n       return expr;\n "}, {"sha": "e95a2c8ef579f74f4116b32e0404f671717d4a2f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1180eb10426d15d188cdfca38495035f48b1dfd2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1180eb10426d15d188cdfca38495035f48b1dfd2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1180eb10426d15d188cdfca38495035f48b1dfd2", "patch": "@@ -4201,7 +4201,11 @@ fold (expr)\n \t and its values must be 0 or 1.\n \t (\"true\" is a fixed value perhaps depending on the language,\n \t but we don't handle values other than 1 correctly yet.)  */\n-      return invert_truthvalue (arg0);\n+      tem = invert_truthvalue (arg0);\n+      /* Avoid infinite recursion.  */\n+      if (TREE_CODE (tem) == TRUTH_NOT_EXPR)\n+\treturn t;\n+      return convert (type, tem);\n \n     case TRUTH_ANDIF_EXPR:\n       /* Note that the operands of this must be ints"}]}