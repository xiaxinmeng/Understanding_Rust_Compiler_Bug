{"sha": "d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhMGE1Zjg2NGI2OWM2OGQ0MTBhMTRlMGFhN2NjYmFhZTdlYjE0NA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-17T15:41:25Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-17T15:41:25Z"}, "message": "Allow for coercion of structures over to dynamic objects in type system\n\nThis is the initial support for allowing a coercion of something like:\n\n```rust\nlet a = Foo(123);\nlet b:&dyn Bound = &a;\n```\n\nThe coercion will need to ensure that 'a' meets the specified bounds of the\ndynamic object.\n\nAddresses #197", "tree": {"sha": "590ca34cd83110c08f0d04c29ba41b3d0561e092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/590ca34cd83110c08f0d04c29ba41b3d0561e092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d144eea86290e8efc700d8042e9b517158b9f916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d144eea86290e8efc700d8042e9b517158b9f916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d144eea86290e8efc700d8042e9b517158b9f916"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "976997db2dcf3670ee7d50234533d1317d646c7a", "filename": "gcc/rust/typecheck/rust-tyty-coercion.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h?ref=d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "patch": "@@ -24,6 +24,7 @@\n #include \"rust-tyty-visitor.h\"\n #include \"rust-hir-map.h\"\n #include \"rust-hir-type-check.h\"\n+#include \"rust-hir-type-bounds.h\"\n \n extern ::Backend *\n rust_get_backend ();\n@@ -1390,6 +1391,16 @@ class DynamicCoercionRules : public BaseCoercionRules\n     resolved = base->clone ();\n   }\n \n+  void visit (ADTType &type) override\n+  {\n+    Location ref_locus = mappings->lookup_location (type.get_ref ());\n+    bool ok = base->bounds_compatible (type, ref_locus, true);\n+    if (!ok)\n+      return;\n+\n+    resolved = base->clone ();\n+  }\n+\n private:\n   BaseType *get_base () override { return base; }\n "}, {"sha": "e1aef5397fc9cb02e379cd7ba9ce7a3a2945e4ed", "filename": "gcc/testsuite/rust/compile/traits9.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits9.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits9.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits9.rs?ref=d9a0a5f864b69c68d410a14e0aa7ccbaae7eb144", "patch": "@@ -0,0 +1,13 @@\n+struct Foo(i32);\n+trait Bar {\n+    fn baz(&self);\n+}\n+\n+fn main() {\n+    let a;\n+    a = Foo(123);\n+\n+    let b: &dyn Bar = &a;\n+    // { dg-error \"bounds not satisfied for Foo .Bar. is not satisfied\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"expected\" \"\" { target *-*-* } .-2 }\n+}"}]}