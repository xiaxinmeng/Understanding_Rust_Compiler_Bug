{"sha": "9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUxMTY0MWQxMTJlY2IzYTYwNjdjNzIyM2E4ZTI0OWExZDYzYjlhMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-07-02T11:25:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-07-02T11:25:26Z"}, "message": "tree-ssa-forwprop.c (can_propagate_from): Exclude loads from decls explicitly.\n\n2008-07-02  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (can_propagate_from): Exclude loads\n\tfrom decls explicitly.  Merge operand checking from tuples.\n\nFrom-SVN: r137352", "tree": {"sha": "44f43b129e8594b83378f56035c779cc30e905d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44f43b129e8594b83378f56035c779cc30e905d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e11641d112ecb3a6067c7223a8e249a1d63b9a1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fe1efe4d0b2b8b61b046d9436e61534a45e0377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe1efe4d0b2b8b61b046d9436e61534a45e0377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe1efe4d0b2b8b61b046d9436e61534a45e0377"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "9a0c28390ae87cecbc5c74948806fd3260a4abd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e11641d112ecb3a6067c7223a8e249a1d63b9a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e11641d112ecb3a6067c7223a8e249a1d63b9a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "patch": "@@ -1,3 +1,8 @@\n+2008-07-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (can_propagate_from): Exclude loads\n+\tfrom decls explicitly.  Merge operand checking from tuples.\n+\n 2008-07-02  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-switch-conversion.c: Included timevar.h which I forgot before."}, {"sha": "c49f0a489093e35dfabd1995a3621b0ebc9bbafc", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e11641d112ecb3a6067c7223a8e249a1d63b9a1/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e11641d112ecb3a6067c7223a8e249a1d63b9a1/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=9e11641d112ecb3a6067c7223a8e249a1d63b9a1", "patch": "@@ -257,42 +257,27 @@ static bool\n can_propagate_from (tree def_stmt)\n {\n   tree rhs = GIMPLE_STMT_OPERAND (def_stmt, 1);\n+  use_operand_p use_p;\n+  ssa_op_iter iter;\n \n   /* If the rhs has side-effects we cannot propagate from it.  */\n   if (TREE_SIDE_EFFECTS (rhs))\n     return false;\n \n   /* If the rhs is a load we cannot propagate from it.  */\n-  if (REFERENCE_CLASS_P (rhs))\n+  if (REFERENCE_CLASS_P (rhs)\n+      || DECL_P (rhs))\n     return false;\n \n   /* Constants can be always propagated.  */\n   if (is_gimple_min_invariant (rhs))\n     return true;\n \n-  /* We cannot propagate ssa names that occur in abnormal phi nodes.  */\n-  switch (TREE_CODE_LENGTH (TREE_CODE (rhs)))\n-    {\n-    case 3:\n-      if (TREE_OPERAND (rhs, 2) != NULL_TREE\n-\t  && TREE_CODE (TREE_OPERAND (rhs, 2)) == SSA_NAME\n-\t  && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (TREE_OPERAND (rhs, 2)))\n-\treturn false;\n-    case 2:\n-      if (TREE_OPERAND (rhs, 1) != NULL_TREE\n-\t  && TREE_CODE (TREE_OPERAND (rhs, 1)) == SSA_NAME\n-\t  && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (TREE_OPERAND (rhs, 1)))\n-\treturn false;\n-    case 1:\n-      if (TREE_OPERAND (rhs, 0) != NULL_TREE\n-\t  && TREE_CODE (TREE_OPERAND (rhs, 0)) == SSA_NAME\n-\t  && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (TREE_OPERAND (rhs, 0)))\n-\treturn false;\n-      break;\n-\n-    default:\n+  /* If any of the SSA operands occurs in abnormal PHIs we cannot\n+     propagate from this stmt.  */\n+  FOR_EACH_SSA_USE_OPERAND (use_p, def_stmt, iter, SSA_OP_USE)\n+    if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (USE_FROM_PTR (use_p)))\n       return false;\n-    }\n \n   /* If the definition is a conversion of a pointer to a function type,\n      then we can not apply optimizations as some targets require function"}]}