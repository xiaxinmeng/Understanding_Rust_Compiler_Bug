{"sha": "7727a9c182e4e12878b2e4703563cc68a695653d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyN2E5YzE4MmU0ZTEyODc4YjJlNDcwMzU2M2NjNjhhNjk1NjUzZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T10:43:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T10:43:33Z"}, "message": "[multiple changes]\n\n2017-01-06  Justin Squirek  <squirek@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration):\n\tRemove declaration generation in the case of\n\tSystem_Tasking_Protected_Objects_Single_Entry being used,\n\tand add a warning message when this is detected to occur.\n\t(Make_Initialize_Protection): Remove reference pass in the case\n\tof System_Tasking_Protected_Objects_Single_Entry.\n\t* rtsfind.ads: Remove RE_Protected_Entry_Queue_Max\n\t* s-tposen.adb (Initialize_Protection_Entry): Remove\n\tEntry_Queue_Max parameter.\n\t* s-tposen.ads: Remove the types use to store the entry queue\n\tmaximum.\n\t* sem_prag.adb (Analyze_Pragma): Remove entry families restriction\n\n2017-01-06  Yannick Moy  <moy@adacore.com>\n\n\t* sem_util.adb, sem_util.ads (Get_Enum_Lit_From_Pos): Strengthen\n\tbehavior of function, to also accept out of range positions\n\tand raise Constraint_Error in such case, and to copy sloc from\n\tliteral if No_Location passed as location.\n\t* uintp.adb, uintp.ads (UI_To_Int, UI_To_CC): Strengthen behavior\n\tof functions to raise Constraint_Error in case of value not in\n\tappropriate range.\n\n2017-01-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* sem_util.adb, s-taprop-linux.adb (Finalize_TCB): Remove call to\n\tInvalidate_Stack_Cache.\n\n2017-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* s-os_lib.adb: Minor fix to the signature of Readlink.\n\n2017-01-06  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch6.adb (Conforming_Types): Handle another\n\tconfusion between views in a nested instance with an actual\n\tprivate type whose full view is not in scope.\n\n2017-01-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_If_Statement): Obey existing comment and\n\tmark a rewritten if statement as explicit (Comes_From_Source).\n\nFrom-SVN: r244128", "tree": {"sha": "7892c3212e4e1d407fb34c4778bbbc5b814600e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7892c3212e4e1d407fb34c4778bbbc5b814600e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7727a9c182e4e12878b2e4703563cc68a695653d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7727a9c182e4e12878b2e4703563cc68a695653d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7727a9c182e4e12878b2e4703563cc68a695653d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7727a9c182e4e12878b2e4703563cc68a695653d/comments", "author": null, "committer": null, "parents": [{"sha": "ea1135b83e3c021e45af01ed4cdc5149cd676933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1135b83e3c021e45af01ed4cdc5149cd676933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1135b83e3c021e45af01ed4cdc5149cd676933"}], "stats": {"total": 274, "additions": 172, "deletions": 102}, "files": [{"sha": "66cacf11b3b69ebf3a6afeb85c67b4790d2c2461", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -1,3 +1,48 @@\n+2017-01-06  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration):\n+\tRemove declaration generation in the case of\n+\tSystem_Tasking_Protected_Objects_Single_Entry being used,\n+\tand add a warning message when this is detected to occur.\n+\t(Make_Initialize_Protection): Remove reference pass in the case\n+\tof System_Tasking_Protected_Objects_Single_Entry.\n+\t* rtsfind.ads: Remove RE_Protected_Entry_Queue_Max\n+\t* s-tposen.adb (Initialize_Protection_Entry): Remove\n+\tEntry_Queue_Max parameter.\n+\t* s-tposen.ads: Remove the types use to store the entry queue\n+\tmaximum.\n+\t* sem_prag.adb (Analyze_Pragma): Remove entry families restriction\n+\n+2017-01-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb, sem_util.ads (Get_Enum_Lit_From_Pos): Strengthen\n+\tbehavior of function, to also accept out of range positions\n+\tand raise Constraint_Error in such case, and to copy sloc from\n+\tliteral if No_Location passed as location.\n+\t* uintp.adb, uintp.ads (UI_To_Int, UI_To_CC): Strengthen behavior\n+\tof functions to raise Constraint_Error in case of value not in\n+\tappropriate range.\n+\n+2017-01-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sem_util.adb, s-taprop-linux.adb (Finalize_TCB): Remove call to\n+\tInvalidate_Stack_Cache.\n+\n+2017-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* s-os_lib.adb: Minor fix to the signature of Readlink.\n+\n+2017-01-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch6.adb (Conforming_Types): Handle another\n+\tconfusion between views in a nested instance with an actual\n+\tprivate type whose full view is not in scope.\n+\n+2017-01-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_If_Statement): Obey existing comment and\n+\tmark a rewritten if statement as explicit (Comes_From_Source).\n+\n 2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_prag.adb, rtsfind.adb, sem_util.adb: Minor typo fixes."}, {"sha": "4e09e99b8f04325accf35ed82b711f955cdcc373", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -3209,10 +3209,6 @@ package body Exp_Ch5 is\n             if Present (Condition_Actions (E))\n               or else Compile_Time_Known_Value (Condition (E))\n             then\n-               --  Note this is not an implicit if statement, since it is part\n-               --  of an explicit if statement in the source (or of an implicit\n-               --  if statement that has already been tested).\n-\n                New_If :=\n                  Make_If_Statement (Sloc (E),\n                    Condition       => Condition (E),\n@@ -3243,6 +3239,15 @@ package body Exp_Ch5 is\n                end if;\n \n                Analyze (New_If);\n+\n+               --  Note this is not an implicit if statement, since it is part\n+               --  of an explicit if statement in the source (or of an implicit\n+               --  if statement that has already been tested). We set the flag\n+               --  after calling Analyze to avoid generating extra warnings\n+               --  specific to pure if statements, however (see\n+               --  Sem_Ch5.Analyze_If_Statement).\n+\n+               Set_Comes_From_Source (New_If, Comes_From_Source (N));\n                return;\n \n             --  No special processing for that elsif part, move to next"}, {"sha": "6d31de7670b11cee74c3ee69c8412c1364bc2c55", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 62, "deletions": 50, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -9768,6 +9768,7 @@ package body Exp_Ch9 is\n       --  initialization routine.\n \n       declare\n+         Max      : Uint;\n          Maxs     : constant List_Id := New_List;\n          Count    : Int;\n          Item     : Entity_Id;\n@@ -9786,69 +9787,80 @@ package body Exp_Ch9 is\n             while Present (Item) loop\n                if Is_Entry (Item) then\n                   Count := Count + 1;\n+                  Max   := Get_Max_Queue_Length (Item);\n \n-                  Append_To (Maxs,\n-                    Make_Integer_Literal (Loc,\n-                      Intval => Get_Max_Queue_Length (Item)));\n+                  --  The package System_Tasking_Protected_Objects_Single_Entry\n+                  --  is only used in cases where queue length is 1, so if this\n+                  --  package is being used and there is a value supplied for\n+                  --  it print an error message and halt compilation.\n+\n+                  if Max /= 0\n+                    and then Corresponding_Runtime_Package (Prot_Typ) =\n+                               System_Tasking_Protected_Objects_Single_Entry\n+                  then\n+                     Error_Msg_N\n+                       (\"max_queue_length cannot be applied to entries under \"\n+                        & \"the Ravenscar profile\", Item);\n+                     raise Program_Error;\n+                  end if;\n+\n+                  Append_To (Maxs, Make_Integer_Literal (Loc, Intval => Max));\n                end if;\n \n                Next_Entity (Item);\n             end loop;\n \n-            --  Create the declaration of the array object. Generate:\n+            case Corresponding_Runtime_Package (Prot_Typ) is\n+               when System_Tasking_Protected_Objects_Entries =>\n \n-            --    Maxs_Id : aliased Protected_Entry_Queue_Max_Array\n-            --                        (1 .. Count) := (..., ...);\n-            --      or\n-            --    Maxs_Id : aliased Protected_Entry_Queue_Max := <value>;\n+                  --  Create the declaration of the array object. Generate:\n \n-            Maxs_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_External_Name (Chars (Prot_Typ), 'B'));\n+                  --    Maxs_Id : aliased Protected_Entry_Queue_Max_Array\n+                  --                        (1 .. Count) := (..., ...);\n \n-            case Corresponding_Runtime_Package (Prot_Typ) is\n-               when System_Tasking_Protected_Objects_Entries =>\n-                  Expr := Make_Aggregate (Loc, Maxs);\n+                  Maxs_Id :=\n+                    Make_Defining_Identifier (Loc,\n+                      Chars => New_External_Name (Chars (Prot_Typ), 'B'));\n \n-                  Obj_Def :=\n-                    Make_Subtype_Indication (Loc,\n-                      Subtype_Mark =>\n-                        New_Occurrence_Of\n-                          (RTE (RE_Protected_Entry_Queue_Max_Array), Loc),\n-                      Constraint   =>\n-                        Make_Index_Or_Discriminant_Constraint (Loc,\n-                          Constraints => New_List (\n-                            Make_Range (Loc,\n-                              Make_Integer_Literal (Loc, 1),\n-                              Make_Integer_Literal (Loc, Count)))));\n+                  Max_Vals :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Maxs_Id,\n+                      Aliased_Present     => True,\n+                      Object_Definition   =>\n+                        Make_Subtype_Indication (Loc,\n+                          Subtype_Mark =>\n+                            New_Occurrence_Of\n+                              (RTE (RE_Protected_Entry_Queue_Max_Array), Loc),\n+                          Constraint   =>\n+                            Make_Index_Or_Discriminant_Constraint (Loc,\n+                              Constraints => New_List (\n+                                Make_Range (Loc,\n+                                  Make_Integer_Literal (Loc, 1),\n+                                  Make_Integer_Literal (Loc, Count))))),\n+                      Expression          => Make_Aggregate (Loc, Maxs));\n \n-               when System_Tasking_Protected_Objects_Single_Entry =>\n-                  Expr := Make_Integer_Literal (Loc, Intval (First (Maxs)));\n+                  --  A pointer to this array will be placed in the\n+                  --  corresponding record by its initialization procedure so\n+                  --  this needs to be analyzed here.\n \n-                  Obj_Def :=\n-                    New_Occurrence_Of\n-                      (RTE (RE_Protected_Entry_Queue_Max), Loc);\n+                  Insert_After (Current_Node, Max_Vals);\n+                  Current_Node := Max_Vals;\n+                  Analyze (Max_Vals);\n \n-               when others =>\n-                  raise Program_Error;\n-            end case;\n+                  Set_Entry_Max_Queue_Lengths_Array (Prot_Typ, Maxs_Id);\n \n-            Max_Vals :=\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier => Maxs_Id,\n-                Aliased_Present     => True,\n-                Object_Definition   => Obj_Def,\n-                Expression          => Expr);\n+               when System_Tasking_Protected_Objects_Single_Entry =>\n \n-            --  A pointer to this array will be placed in the corresponding\n-            --  record by its initialization procedure so this needs to be\n-            --  analyzed here.\n+                  --  If this section is entered this means the package\n+                  --  System_Tasking_Protected_Objects_Single_Entry is being\n+                  --  used and that it correctly has no Max_Queue_Length\n+                  --  specified, so fall through and continue normally.\n \n-            Insert_After (Current_Node, Max_Vals);\n-            Current_Node := Max_Vals;\n-            Analyze (Max_Vals);\n+                  null;\n \n-            Set_Entry_Max_Queue_Lengths_Array (Prot_Typ, Maxs_Id);\n+               when others =>\n+                  raise Program_Error;\n+            end case;\n          end if;\n       end;\n \n@@ -14201,7 +14213,9 @@ package body Exp_Ch9 is\n             --  naturals representing the entry queue maximums for each entry\n             --  in the protected type. Zero represents no max.\n \n-            if Has_Entry then\n+            if Has_Entry\n+              and then Pkg_Id /= System_Tasking_Protected_Objects_Single_Entry\n+            then\n                Append_To (Args,\n                  Make_Attribute_Reference (Loc,\n                    Prefix         =>\n@@ -14212,9 +14226,7 @@ package body Exp_Ch9 is\n             --  Edge cases exist where entry initialization functions are\n             --  called, but no entries exist, so null is appended.\n \n-            elsif Pkg_Id = System_Tasking_Protected_Objects_Single_Entry\n-              or else Pkg_Id = System_Tasking_Protected_Objects_Entries\n-            then\n+            elsif Pkg_Id = System_Tasking_Protected_Objects_Entries then\n                Append_To (Args, Make_Null (Loc));\n             end if;\n "}, {"sha": "1f859dffc809f569923d80333746df3c047f7d5a", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -1717,7 +1717,6 @@ package Rtsfind is\n      RE_Service_Entry,                   -- Protected_Objects.Single_Entry\n      RE_Exceptional_Complete_Single_Entry_Body,\n      RE_Protected_Count_Entry,           -- Protected_Objects.Single_Entry\n-     RE_Protected_Entry_Queue_Max,       -- Protected_Objects.Single_Entry\n      RE_Protected_Single_Entry_Caller,   -- Protected_Objects.Single_Entry\n \n      RE_Protected_Entry_Index,           -- System.Tasking.Protected_Objects\n@@ -2993,8 +2992,6 @@ package Rtsfind is\n        System_Tasking_Protected_Objects_Single_Entry,\n      RE_Protected_Count_Entry            =>\n        System_Tasking_Protected_Objects_Single_Entry,\n-     RE_Protected_Entry_Queue_Max        =>\n-       System_Tasking_Protected_Objects_Single_Entry,\n      RE_Protected_Single_Entry_Caller    =>\n        System_Tasking_Protected_Objects_Single_Entry,\n "}, {"sha": "36064e97bd3784bab6a74d15eeece5343c5f3e19", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -2060,7 +2060,7 @@ package body System.OS_Lib is\n       function Readlink\n         (Path   : System.Address;\n          Buf    : System.Address;\n-         Bufsiz : Integer) return Integer;\n+         Bufsiz : size_t) return Integer;\n       pragma Import (C, Readlink, \"__gnat_readlink\");\n \n       function To_Canonical_File_Spec"}, {"sha": "85990f6dfb64702b4dd7054afce7f0a3e743ad61", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2015, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2016, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,6 @@ with System.Tasking.Debug;\n with System.Interrupt_Management;\n with System.OS_Constants;\n with System.OS_Primitives;\n-with System.Stack_Checking.Operations;\n with System.Multiprocessors;\n \n with System.Soft_Links;\n@@ -58,7 +57,6 @@ package body System.Task_Primitives.Operations is\n \n    package OSC renames System.OS_Constants;\n    package SSL renames System.Soft_Links;\n-   package SC renames System.Stack_Checking.Operations;\n \n    use System.Tasking.Debug;\n    use System.Tasking;\n@@ -1048,8 +1046,6 @@ package body System.Task_Primitives.Operations is\n          Known_Tasks (T.Known_Tasks_Index) := null;\n       end if;\n \n-      SC.Invalidate_Stack_Cache (T.Common.Compiler_Data.Pri_Stack_Info'Access);\n-\n       ATCB_Allocation.Free_ATCB (T);\n    end Finalize_TCB;\n "}, {"sha": "9bdf7f82238d1ac689ade9052315f3afddacc6bf", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -215,19 +215,17 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    ---------------------------------\n \n    procedure Initialize_Protection_Entry\n-     (Object            : Protection_Entry_Access;\n-      Ceiling_Priority  : Integer;\n-      Compiler_Info     : System.Address;\n-      Entry_Queue_Max   : Protected_Entry_Queue_Max_Access;\n-      Entry_Body        : Entry_Body_Access)\n+     (Object           : Protection_Entry_Access;\n+      Ceiling_Priority : Integer;\n+      Compiler_Info    : System.Address;\n+      Entry_Body       : Entry_Body_Access)\n    is\n    begin\n       Initialize_Protection (Object.Common'Access, Ceiling_Priority);\n \n       Object.Compiler_Info := Compiler_Info;\n       Object.Call_In_Progress := null;\n       Object.Entry_Body := Entry_Body;\n-      Object.Entry_Queue_Max := Entry_Queue_Max;\n       Object.Entry_Queue := null;\n    end Initialize_Protection_Entry;\n "}, {"sha": "b4ad29a8570e817febefe26b5c2a8fb8878a6bbf", "filename": "gcc/ada/s-tposen.ads", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-tposen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fs-tposen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.ads?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -182,17 +182,11 @@ package System.Tasking.Protected_Objects.Single_Entry is\n \n    type Protection_Entry_Access is access all Protection_Entry;\n \n-   type Protected_Entry_Queue_Max is new Natural;\n-\n-   type Protected_Entry_Queue_Max_Access is\n-     access all Protected_Entry_Queue_Max;\n-\n    procedure Initialize_Protection_Entry\n-     (Object            : Protection_Entry_Access;\n-      Ceiling_Priority  : Integer;\n-      Compiler_Info     : System.Address;\n-      Entry_Queue_Max   : Protected_Entry_Queue_Max_Access;\n-      Entry_Body        : Entry_Body_Access);\n+     (Object           : Protection_Entry_Access;\n+      Ceiling_Priority : Integer;\n+      Compiler_Info    : System.Address;\n+      Entry_Body       : Entry_Body_Access);\n    --  Initialize the Object parameter so that it can be used by the run time\n    --  to keep track of the runtime state of a protected object.\n \n@@ -276,10 +270,6 @@ private\n \n       Entry_Queue : Entry_Call_Link;\n       --  Place to store the waiting entry call (if any)\n-\n-      Entry_Queue_Max : Protected_Entry_Queue_Max_Access;\n-      --  Access to a natural representing the max value for the single\n-      --  entry's queue length. A value of 0 signifies no max.\n    end record;\n \n end System.Tasking.Protected_Objects.Single_Entry;"}, {"sha": "3122552e971a33f347b08409195867d4bd47f41c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -7183,6 +7183,15 @@ package body Sem_Ch6 is\n          return Ctype <= Mode_Conformant\n            or else Subtypes_Statically_Match (Type_1, Full_View (Type_2));\n \n+      --  Another confusion between views in a nested instance with an\n+      --  actual private type whose full view is not in scope.\n+\n+      elsif Ekind (Type_2) = E_Private_Subtype\n+        and then In_Instance\n+        and then Etype (Type_2) = Type_1\n+      then\n+         return True;\n+\n       --  In Ada 2012, incomplete types (including limited views) can appear\n       --  as actuals in instantiations.\n "}, {"sha": "c90b45db8c262a3b245c1926024229eaeb0e5e45", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -17691,13 +17691,6 @@ package body Sem_Prag is\n \n                Entry_Id := Unique_Defining_Entity (Entry_Decl);\n \n-               --  Pragma illegally applied to an entry family\n-\n-               if Ekind (Entry_Id) = E_Entry_Family then\n-                  Error_Pragma (\"pragma % cannot apply to entry families\");\n-                  return;\n-               end if;\n-\n             --  Otherwise the pragma is associated with an illegal construct\n \n             else"}, {"sha": "15d2240648db8acc80fcf95ede7e1f384da6fe2d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -8163,6 +8163,7 @@ package body Sem_Util is\n    is\n       Btyp : Entity_Id := Base_Type (T);\n       Lit  : Node_Id;\n+      LLoc : Source_Ptr;\n \n    begin\n       --  In the case where the literal is of type Character, Wide_Character\n@@ -8173,6 +8174,7 @@ package body Sem_Util is\n \n       if Is_Standard_Character_Type (T) then\n          Set_Character_Literal_Name (UI_To_CC (Pos));\n+\n          return\n            Make_Character_Literal (Loc,\n              Chars              => Name_Find,\n@@ -8190,9 +8192,26 @@ package body Sem_Util is\n          Lit := First_Literal (Btyp);\n          for J in 1 .. UI_To_Int (Pos) loop\n             Next_Literal (Lit);\n+\n+            --  If Lit is Empty, Pos is not in range, so raise Constraint_Error\n+            --  inside the loop to avoid calling Next_Literal on Empty.\n+\n+            if No (Lit) then\n+               raise Constraint_Error;\n+            end if;\n          end loop;\n \n-         return New_Occurrence_Of (Lit, Loc);\n+         --  Create a new node from Lit, with source location provided by Loc\n+         --  if not equal to No_Location, or by copying the source location of\n+         --  Lit otherwise.\n+\n+         LLoc := Loc;\n+\n+         if LLoc = No_Location then\n+            LLoc := Sloc (Lit);\n+         end if;\n+\n+         return New_Occurrence_Of (Lit, LLoc);\n       end if;\n    end Get_Enum_Lit_From_Pos;\n "}, {"sha": "a0f34770bb88765767d326f79b0918be310e5ff5", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -917,9 +917,12 @@ package Sem_Util is\n       Loc : Source_Ptr) return Node_Id;\n    --  This function returns an identifier denoting the E_Enumeration_Literal\n    --  entity for the specified value from the enumeration type or subtype T.\n-   --  The second argument is the Pos value, which is assumed to be in range.\n-   --  The third argument supplies a source location for constructed nodes\n-   --  returned by this function.\n+   --  The second argument is the Pos value. Constraint_Error is raised if\n+   --  argument Pos is not in range. The third argument supplies a source\n+   --  location for constructed nodes returned by this function. If No_Location\n+   --  is supplied as source location, the location of the returned node is\n+   --  copied from the original source location for the enumeration literal,\n+   --  when available.\n \n    function Get_Iterable_Type_Primitive\n      (Typ : Entity_Id;"}, {"sha": "6fdf02fdfe16db312d707a391a0c8d7900f40f6a", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2229,9 +2229,12 @@ package body Uintp is\n          begin\n             --  Uints of more than one digit could be outside the range for\n             --  Ints. Caller should have checked for this if not certain.\n-            --  Fatal error to attempt to convert from value outside Int'Range.\n+            --  Constraint_Error to attempt to convert from value outside\n+            --  Int'Range.\n \n-            pragma Assert (UI_Is_In_Int_Range (Input));\n+            if not UI_Is_In_Int_Range (Input) then\n+               raise Constraint_Error;\n+            end if;\n \n             --  Otherwise, proceed ahead, we are OK\n "}, {"sha": "999fb0f95a6c2efa3b3d86c9a2833d60cd9926fd", "filename": "gcc/ada/uintp.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fuintp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7727a9c182e4e12878b2e4703563cc68a695653d/gcc%2Fada%2Fuintp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.ads?ref=7727a9c182e4e12878b2e4703563cc68a695653d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -252,12 +252,12 @@ package Uintp is\n    --  Converts Char_Code value to universal integer form\n \n    function UI_To_Int (Input : Uint) return Int;\n-   --  Converts universal integer value to Int. Fatal error if value is not in\n-   --  appropriate range.\n+   --  Converts universal integer value to Int. Constraint_Error if value is\n+   --  not in appropriate range.\n \n    function UI_To_CC (Input : Uint) return Char_Code;\n-   --  Converts universal integer value to Char_Code. Fatal error if value is\n-   --  not in Char_Code range.\n+   --  Converts universal integer value to Char_Code. Constraint_Error if value\n+   --  is not in Char_Code range.\n \n    function Num_Bits (Input : Uint) return Nat;\n    --  Approximate number of binary bits in given universal integer. This"}]}