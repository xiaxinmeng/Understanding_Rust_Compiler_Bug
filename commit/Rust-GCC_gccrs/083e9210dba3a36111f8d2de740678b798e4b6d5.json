{"sha": "083e9210dba3a36111f8d2de740678b798e4b6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzZTkyMTBkYmEzYTM2MTExZjhkMmRlNzQwNjc4Yjc5OGU0YjZkNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-18T23:26:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-18T23:26:20Z"}, "message": "compiler: add COMPARE_ALIASES flag for type compare and hash\n    \n    Normally aliases compare as identical to the underlying type.  Add a\n    COMPARE_ALIASES flag to let them compare (and hash) differently.  This\n    will be used by later patches in this series.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/143021\n\nFrom-SVN: r265297", "tree": {"sha": "a564c70583ef6c7b92584b6ab06154508da26be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a564c70583ef6c7b92584b6ab06154508da26be6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/083e9210dba3a36111f8d2de740678b798e4b6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083e9210dba3a36111f8d2de740678b798e4b6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083e9210dba3a36111f8d2de740678b798e4b6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083e9210dba3a36111f8d2de740678b798e4b6d5/comments", "author": null, "committer": null, "parents": [{"sha": "dbf9376f9ed37bc98218adde4e17d6ee34701179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf9376f9ed37bc98218adde4e17d6ee34701179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf9376f9ed37bc98218adde4e17d6ee34701179"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "bb7ab780f6b561a7d55f9500c0ec49cbc37e41d7", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=083e9210dba3a36111f8d2de740678b798e4b6d5", "patch": "@@ -1,4 +1,4 @@\n-9c985ce6f76dd65b8eb0e4b03c09ad0100712e04\n+6f4bce815786ff3803741355f7f280e4e2c89668\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "94b332a25b2b9195e63949e66e00a8e6862782b3", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=083e9210dba3a36111f8d2de740678b798e4b6d5", "patch": "@@ -349,9 +349,16 @@ Type::are_identical(const Type* t1, const Type* t2, int flags,\n       return (flags & COMPARE_ERRORS) == 0 ? true : t1 == t2;\n     }\n \n-  // Skip defined forward declarations.  Ignore aliases.\n-  t1 = t1->unalias();\n-  t2 = t2->unalias();\n+  // Skip defined forward declarations.\n+  t1 = t1->forwarded();\n+  t2 = t2->forwarded();\n+\n+  if ((flags & COMPARE_ALIASES) == 0)\n+    {\n+      // Ignore aliases.\n+      t1 = t1->unalias();\n+      t2 = t2->unalias();\n+    }\n \n   if (t1 == t2)\n     return true;\n@@ -923,12 +930,17 @@ Type::copy_expressions()\n unsigned int\n Type::hash_for_method(Gogo* gogo, int flags) const\n {\n-  if (this->named_type() != NULL && this->named_type()->is_alias())\n-    return this->named_type()->real_type()->hash_for_method(gogo, flags);\n-  unsigned int ret = 0;\n-  if (this->classification_ != TYPE_FORWARD)\n-    ret += this->classification_;\n-  return ret + this->do_hash_for_method(gogo, flags);\n+  const Type* t = this->forwarded();\n+  if (t->named_type() != NULL && t->named_type()->is_alias())\n+    {\n+      unsigned int r =\n+\tt->named_type()->real_type()->hash_for_method(gogo, flags);\n+      if ((flags & Type::COMPARE_ALIASES) != 0)\n+\tr += TYPE_FORWARD;\n+      return r;\n+    }\n+  unsigned int ret = t->classification_;\n+  return ret + t->do_hash_for_method(gogo, flags);\n }\n \n // Default implementation of do_hash_for_method.  This is appropriate"}, {"sha": "c99b08a959d526d6dc587d0e49e28d741a2f6822", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083e9210dba3a36111f8d2de740678b798e4b6d5/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=083e9210dba3a36111f8d2de740678b798e4b6d5", "patch": "@@ -574,6 +574,9 @@ class Type\n   // struct field tags for purposes of type conversion.\n   static const int COMPARE_TAGS = 2;\n \n+  // Compare aliases: treat an alias to T as distinct from T.\n+  static const int COMPARE_ALIASES = 4;\n+\n   // Return true if two types are identical.  If this returns false,\n   // and REASON is not NULL, it may set *REASON.\n   static bool"}]}