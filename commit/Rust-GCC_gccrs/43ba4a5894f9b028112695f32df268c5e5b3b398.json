{"sha": "43ba4a5894f9b028112695f32df268c5e5b3b398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiYTRhNTg5NGY5YjAyODExMjY5NWYzMmRmMjY4YzVlNWIzYjM5OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-02-06T06:32:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-06T06:32:01Z"}, "message": "acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): New macro.\n\n\n2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): New\n\tmacro. Consolidate all the bits to do with where includes might be\n\tinstalled.\n\t* aclocal.m4: Regenerate.\n\t* configure.in: Use it.\n\t* configure: Regenerate.\n\t* src/Makefile.am (targetincludep): Use simplified rules.\n\t(targetincludep): Rename gxx_target_include_dir.\n\t(myincludep): Rename gxx_include_dir.\n\t* src/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.am: Use simplified rules.\n\t* libsupc++/Makefile.in: Regenerate.\n\nFrom-SVN: r39479", "tree": {"sha": "9474c0f861c95c082bedfbf9775931d3a53e4805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9474c0f861c95c082bedfbf9775931d3a53e4805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ba4a5894f9b028112695f32df268c5e5b3b398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ba4a5894f9b028112695f32df268c5e5b3b398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ba4a5894f9b028112695f32df268c5e5b3b398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ba4a5894f9b028112695f32df268c5e5b3b398/comments", "author": null, "committer": null, "parents": [{"sha": "e40f2829d16ed9c5970284a194008c024ed7a34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40f2829d16ed9c5970284a194008c024ed7a34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40f2829d16ed9c5970284a194008c024ed7a34c"}], "stats": {"total": 371, "additions": 197, "deletions": 174}, "files": [{"sha": "54e6aba153504e11c77bc32cf3547e0e1cdcb852", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -1,3 +1,18 @@\n+2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): New\n+\tmacro. Consolidate all the bits to do with where includes might be\n+\tinstalled.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.in: Use it.\n+\t* configure: Regenerate.\t\n+\t* src/Makefile.am (targetincludep): Use simplified rules.\n+\t(targetincludep): Rename gxx_target_include_dir.\n+\t(myincludep): Rename gxx_include_dir.\n+\t* src/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.am: Use simplified rules.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t\n 2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cerrno.h: Correct date format for copyright."}, {"sha": "e57c47b42b00b9ccaf208d772059e6e34b507632", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -111,11 +111,9 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n-gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n-libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus"}, {"sha": "f2447a34ff610d67c886375423e98f0db223811e", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -1490,6 +1490,64 @@ AC_DEFUN(GLIBCPP_EXPORT_FLAGS, [\n ])\n \n \n+dnl  GLIBCPP_EXPORT_INSTALL_INFO\n+dnl  calculates gxx_install_dir\n+dnl\n+AC_DEFUN(GLIBCPP_EXPORT_INSTALL_INFO, [\n+\n+AC_MSG_CHECKING([for interface version number])\n+libstdcxx_interface=$INTERFACE\n+AC_MSG_RESULT($libstdcxx_interface)\n+\n+# Process the option --with-gxx-include-dir=<path to include-files directory>\n+AC_MSG_CHECKING([for --with-gxx-include-dir])\n+AC_ARG_WITH(gxx-include-dir,\n+[ --with-gxx-include-dir  the installation directory for include files],\n+[case \"${withval}\" in\n+  yes)\n+    AC_MSG_ERROR(Missing directory for --with-gxx-include-dir)\n+    gxx_include_dir=no\n+    ;;\n+  no)\n+    gxx_include_dir=no\n+    ;;\n+  *)\n+    gxx_include_dir=${withval}\n+    ;;\n+esac], [gxx_include_dir=no])\n+AC_MSG_RESULT($gxx_include_dir)\n+\n+# Process the option \"--enable-version-specific-runtime-libs\"\n+AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n+AC_ARG_ENABLE(version-specific-runtime-libs,\n+[  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n+[  version_specific_libs=yes\n+# Need the gcc compiler version to know where to install libraries\n+# and header files if --enable-version-specific-runtime-libs option\n+# is selected.\n+changequote(,)dnl\n+gcc_tmp=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $6}'`\n+gcc_num=`echo ${gcc_tmp} | sed 's/\\\"//g'`\n+#gcc_date=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $7}'`\n+#gcc_version=$gcc_num-$gcc_date\n+gcc_version=$gcc_num\n+gxx_include_dir=$(libdir)/gcc-lib/$(target_alias)/$(gcc_version)/include/g++\n+changequote([,])dnl\n+AC_SUBST(gcc_version)\n+AM_CONDITIONAL(VERSION_SPECIFIC_LIBS, test x\"$version_specific_libs\" = x\"yes\")\n+],version_specific_libs=no)\n+AC_MSG_RESULT($version_specific_libs)\n+\n+AC_MSG_CHECKING([for install location])\n+if test x\"$version_specific_libs\" = x\"no\" \\\n+   && test x\"$gxx_include_dir\"=x\"no\"; then\n+  gxx_include_dir=${prefix}/include/g++-${libstdcxx_interface}\n+fi\n+AC_MSG_RESULT($gxx_include_dir)\n+AC_SUBST(gxx_include_dir)\n+])\n+\n+\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #"}, {"sha": "867c5bc79b9334c3bd2cebbcc708040d32613028", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -1502,6 +1502,64 @@ AC_DEFUN(GLIBCPP_EXPORT_FLAGS, [\n ])\n \n \n+dnl  GLIBCPP_EXPORT_INSTALL_INFO\n+dnl  calculates gxx_install_dir\n+dnl\n+AC_DEFUN(GLIBCPP_EXPORT_INSTALL_INFO, [\n+\n+AC_MSG_CHECKING([for interface version number])\n+libstdcxx_interface=$INTERFACE\n+AC_MSG_RESULT($libstdcxx_interface)\n+\n+# Process the option --with-gxx-include-dir=<path to include-files directory>\n+AC_MSG_CHECKING([for --with-gxx-include-dir])\n+AC_ARG_WITH(gxx-include-dir,\n+[ --with-gxx-include-dir  the installation directory for include files],\n+[case \"${withval}\" in\n+  yes)\n+    AC_MSG_ERROR(Missing directory for --with-gxx-include-dir)\n+    gxx_include_dir=no\n+    ;;\n+  no)\n+    gxx_include_dir=no\n+    ;;\n+  *)\n+    gxx_include_dir=${withval}\n+    ;;\n+esac], [gxx_include_dir=no])\n+AC_MSG_RESULT($gxx_include_dir)\n+\n+# Process the option \"--enable-version-specific-runtime-libs\"\n+AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n+AC_ARG_ENABLE(version-specific-runtime-libs,\n+[  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n+[  version_specific_libs=yes\n+# Need the gcc compiler version to know where to install libraries\n+# and header files if --enable-version-specific-runtime-libs option\n+# is selected.\n+changequote(,)dnl\n+gcc_tmp=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $6}'`\n+gcc_num=`echo ${gcc_tmp} | sed 's/\\\"//g'`\n+#gcc_date=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $7}'`\n+#gcc_version=$gcc_num-$gcc_date\n+gcc_version=$gcc_num\n+gxx_include_dir=$(libdir)/gcc-lib/$(target_alias)/$(gcc_version)/include/g++\n+changequote([,])dnl\n+AC_SUBST(gcc_version)\n+AM_CONDITIONAL(VERSION_SPECIFIC_LIBS, test x\"$version_specific_libs\" = x\"yes\")\n+],version_specific_libs=no)\n+AC_MSG_RESULT($version_specific_libs)\n+\n+AC_MSG_CHECKING([for install location])\n+if test x\"$version_specific_libs\" = x\"no\" \\\n+   && test x\"$gxx_include_dir\"=x\"no\"; then\n+  gxx_include_dir=${prefix}/include/g++-${libstdcxx_interface}\n+fi\n+AC_MSG_RESULT($gxx_include_dir)\n+AC_SUBST(gxx_include_dir)\n+])\n+\n+\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #"}, {"sha": "8c5c5d9309acb191d53771451adca90251ad5e61", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 22, "deletions": 38, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -15603,21 +15603,20 @@ fi\n \n # Generate the various Makefiles, include files, and scripts.\n \n-# This helps subvert libstdcxx_interface, as calculated by devo/config.if\n # Needed so that g++ can find the correct include subdir automatically.\n INTERFACE=v3\n \n-# Check for the interface version number for specifying where header\n-# files are installed, if a version number is provided.\n+# Export all the install information\n+\n+\n echo $ac_n \"checking for interface version number\"\"... $ac_c\" 1>&6\n echo \"configure:15614: checking for interface version number\" >&5\n libstdcxx_interface=$INTERFACE\n echo \"$ac_t\"\"$libstdcxx_interface\" 1>&6\n \n-\n # Process the option --with-gxx-include-dir=<path to include-files directory>\n echo $ac_n \"checking for --with-gxx-include-dir\"\"... $ac_c\" 1>&6\n-echo \"configure:15621: checking for --with-gxx-include-dir\" >&5\n+echo \"configure:15620: checking for --with-gxx-include-dir\" >&5\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n if test \"${with_gxx_include_dir+set}\" = set; then\n   withval=\"$with_gxx_include_dir\"\n@@ -15639,57 +15638,46 @@ fi\n \n echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n-\n-\n-if test x${gxx_include_dir} != xno; then\n-  GXX_INCLUDE_DIR_TRUE=\n-  GXX_INCLUDE_DIR_FALSE='#'\n-else\n-  GXX_INCLUDE_DIR_TRUE='#'\n-  GXX_INCLUDE_DIR_FALSE=\n-fi\n-\n # Process the option \"--enable-version-specific-runtime-libs\"\n echo $ac_n \"checking for --enable-version-specific-runtime-libs\"\"... $ac_c\" 1>&6\n-echo \"configure:15655: checking for --enable-version-specific-runtime-libs\" >&5\n+echo \"configure:15644: checking for --enable-version-specific-runtime-libs\" >&5\n # Check whether --enable-version-specific-runtime-libs or --disable-version-specific-runtime-libs was given.\n if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n   enableval=\"$enable_version_specific_runtime_libs\"\n     version_specific_libs=yes\n # Need the gcc compiler version to know where to install libraries\n # and header files if --enable-version-specific-runtime-libs option\n # is selected.\n-gcc_tmp=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $6}'`\n+gcc_tmp=`grep version_string ${srcdir}/../gcc/version.c | awk '{print }'`\n gcc_num=`echo ${gcc_tmp} | sed 's/\\\"//g'`\n-#gcc_date=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $7}'`\n+#gcc_date=`grep version_string ${srcdir}/../gcc/version.c | awk '{print }'`\n #gcc_version=$gcc_num-$gcc_date\n gcc_version=$gcc_num\n+gxx_include_dir=$(libdir)/gcc-lib/$(target_alias)/$(gcc_version)/include/g++\n \n \n-else\n-  version_specific_libs=no\n-fi\n \n-echo \"$ac_t\"\"$version_specific_libs\" 1>&6\n-if test x${version_specific_libs} = xyes; then\n-  \n-\n-if test x${version_specific_libs} = xyes; then\n+if test x\"$version_specific_libs\" = x\"yes\"; then\n   VERSION_SPECIFIC_LIBS_TRUE=\n   VERSION_SPECIFIC_LIBS_FALSE='#'\n else\n   VERSION_SPECIFIC_LIBS_TRUE='#'\n   VERSION_SPECIFIC_LIBS_FALSE=\n fi\n-  echo \"configure: warning: version specific directory is: $gcc_version\" 1>&2\n+\n+else\n+  version_specific_libs=no\n fi\n \n-# We have to install all the generated or linked includes files\n-# specified as build_headers in src/Makefile.am in a target-dependent\n-# place, or else multiple installs for different compilers will\n-# overwrite these files.\n-# NB: Keep this and gcc/Makefile.in's -DGPLUSPLUS_TOOL_INCLUDE_DIR in sync.\n-gxx_target_include_dir='$(exec_prefix)/$(target_alias)/include/g++-$(libstdcxx_interface)'\n+echo \"$ac_t\"\"$version_specific_libs\" 1>&6\n+\n+echo $ac_n \"checking for install location\"\"... $ac_c\" 1>&6\n+echo \"configure:15676: checking for install location\" >&5\n+if test x\"$version_specific_libs\" = x\"no\" \\\n+   && test x\"$gxx_include_dir\"=x\"no\"; then\n+  gxx_include_dir=${prefix}/include/g++-${libstdcxx_interface}\n+fi\n+echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n \n \n@@ -15967,14 +15955,10 @@ s%@USE_LIBDIR_TRUE@%$USE_LIBDIR_TRUE%g\n s%@USE_LIBDIR_FALSE@%$USE_LIBDIR_FALSE%g\n s%@CANADIAN_TRUE@%$CANADIAN_TRUE%g\n s%@CANADIAN_FALSE@%$CANADIAN_FALSE%g\n-s%@libstdcxx_interface@%$libstdcxx_interface%g\n-s%@gxx_include_dir@%$gxx_include_dir%g\n-s%@GXX_INCLUDE_DIR_TRUE@%$GXX_INCLUDE_DIR_TRUE%g\n-s%@GXX_INCLUDE_DIR_FALSE@%$GXX_INCLUDE_DIR_FALSE%g\n s%@gcc_version@%$gcc_version%g\n s%@VERSION_SPECIFIC_LIBS_TRUE@%$VERSION_SPECIFIC_LIBS_TRUE%g\n s%@VERSION_SPECIFIC_LIBS_FALSE@%$VERSION_SPECIFIC_LIBS_FALSE%g\n-s%@gxx_target_include_dir@%$gxx_target_include_dir%g\n+s%@gxx_include_dir@%$gxx_include_dir%g\n s%@GLIBCPP_INCLUDE_DIR@%$GLIBCPP_INCLUDE_DIR%g\n s%@TOPLEVEL_INCLUDES@%$TOPLEVEL_INCLUDES%g\n s%@LIBMATH_INCLUDES@%$LIBMATH_INCLUDES%g"}, {"sha": "4726384d5a1e93807fdb68eeb539768d85ec6933", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 2, "deletions": 59, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -246,68 +246,11 @@ fi\n \n # Generate the various Makefiles, include files, and scripts.\n \n-# This helps subvert libstdcxx_interface, as calculated by devo/config.if\n # Needed so that g++ can find the correct include subdir automatically.\n INTERFACE=v3\n \n-# Check for the interface version number for specifying where header\n-# files are installed, if a version number is provided.\n-AC_MSG_CHECKING([for interface version number])\n-libstdcxx_interface=$INTERFACE\n-AC_MSG_RESULT($libstdcxx_interface)\n-AC_SUBST(libstdcxx_interface)\n-\n-# Process the option --with-gxx-include-dir=<path to include-files directory>\n-AC_MSG_CHECKING([for --with-gxx-include-dir])\n-AC_ARG_WITH(gxx-include-dir,\n-[ --with-gxx-include-dir  the installation directory for include files],\n-[case \"${withval}\" in\n-  yes)\n-    AC_MSG_ERROR(Missing directory for --with-gxx-include-dir)\n-    gxx_include_dir=no\n-    ;;\n-  no)\n-    gxx_include_dir=no\n-    ;;\n-  *)\n-    gxx_include_dir=${withval}\n-    ;;\n-esac], [gxx_include_dir=no])\n-AC_MSG_RESULT($gxx_include_dir)\n-AC_SUBST(gxx_include_dir)\n-AM_CONDITIONAL(GXX_INCLUDE_DIR, test x${gxx_include_dir} != xno)\n-\n-# Process the option \"--enable-version-specific-runtime-libs\"\n-AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n-AC_ARG_ENABLE(version-specific-runtime-libs,\n-[  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n-[  version_specific_libs=yes\n-# Need the gcc compiler version to know where to install libraries\n-# and header files if --enable-version-specific-runtime-libs option\n-# is selected.\n-changequote(,)dnl\n-gcc_tmp=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $6}'`\n-gcc_num=`echo ${gcc_tmp} | sed 's/\\\"//g'`\n-#gcc_date=`grep version_string ${srcdir}/../gcc/version.c | awk '{print $7}'`\n-#gcc_version=$gcc_num-$gcc_date\n-gcc_version=$gcc_num\n-changequote([,])dnl\n-AC_SUBST(gcc_version)\n-],version_specific_libs=no)\n-AC_MSG_RESULT($version_specific_libs)\n-if test x${version_specific_libs} = xyes; then\n-  AM_CONDITIONAL(VERSION_SPECIFIC_LIBS, test x${version_specific_libs} = xyes)\n-  AC_MSG_WARN(version specific directory is: $gcc_version)\n-fi\n-\n-# We have to install all the generated or linked includes files\n-# specified as build_headers in src/Makefile.am in a target-dependent\n-# place, or else multiple installs for different compilers will\n-# overwrite these files.\n-# NB: Keep this and gcc/Makefile.in's -DGPLUSPLUS_TOOL_INCLUDE_DIR in sync.\n-gxx_target_include_dir='$(exec_prefix)/$(target_alias)/include/g++-$(libstdcxx_interface)'\n-AC_SUBST(gxx_target_include_dir)\n-\n+# Export all the install information\n+GLIBCPP_EXPORT_INSTALL_INFO\n \n # Export all the include and flag information to makefiles.\n GLIBCPP_EXPORT_INCLUDES"}, {"sha": "851dbee0b399496c1def46285a70fa2674c18d0a", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -105,11 +105,9 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n-gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n-libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus"}, {"sha": "773e423d269779c6cf281cc1e3310bf57f8b1099", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -105,11 +105,9 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n-gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n-libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus"}, {"sha": "9d020c9a7ddbad69d5ffcb7fbae7dd45569af12c", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -100,17 +100,7 @@ sources = \\\n libsupc___la_SOURCES = $(sources)\n libsupc__convenience_la_SOURCES = $(sources)\n \n-# Check for various configure bits that change where the headers get installed.\n-if GXX_INCLUDE_DIR\n glibcppinstalldir = @gxx_include_dir@\n-else\n-if VERSION_SPECIFIC_LIBS\n-glibcppinstalldir = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-else\n-glibcppinstalldir = $(prefix)/include/g++-@libstdcxx_interface@\n-endif\n-endif\n-\n glibcppinstall_HEADERS = $(headers)\n \n # Flags to force separate libtool library to be static only."}, {"sha": "412983ed74b7dac7363077a2f71fad43da5c970e", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -101,11 +101,9 @@ enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n-gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n-libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n@@ -163,10 +161,8 @@ sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \texception_support.\n \n libsupc___la_SOURCES = $(sources)\n libsupc__convenience_la_SOURCES = $(sources)\n-@GXX_INCLUDE_DIR_TRUE@glibcppinstalldir = @gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@glibcppinstalldir = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@glibcppinstalldir = $(prefix)/include/g++-@libstdcxx_interface@\n \n+glibcppinstalldir = @gxx_include_dir@\n glibcppinstall_HEADERS = $(headers)\n \n # Flags to force separate libtool library to be static only."}, {"sha": "986f319ebae303be2eae00f95a9775e802a722a3", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 20, "deletions": 30, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.66 2001/01/30 09:18:51 bkoz Exp $\n+## $Id: Makefile.am,v 1.67 2001/02/03 09:01:44 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -227,18 +227,8 @@ $(top_builddir)/stamp-cshadow: $(top_srcdir)/mkinclosure \\\n \n \n # Check for various configure bits that change where the headers get installed.\n-if GXX_INCLUDE_DIR\n-myincludep = @gxx_include_dir@\n-targetincludep = @gxx_include_dir@\n-else\n-if VERSION_SPECIFIC_LIBS\n-myincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-targetincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-else\n-myincludep = $(prefix)/include/g++-@libstdcxx_interface@\n-targetincludep = @gxx_target_include_dir@\n-endif\n-endif\n+gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = $(gxx_include_dir)/$(target_alias)\n \n # We have our own special, ridiculously complicated installation routine\n # here, as automake/autoconf is currently brain-damaged when it comes\n@@ -258,9 +248,9 @@ install-data-local: myinstalldirs myinstallheaders\n # NB: installation of shadow header directories is not attempted.\n myinstalldirs:\n \tif test -z \"$(MULTISUBDIR)\"; then \\\n-\t$(mkinstalldirs) $(DESTDIR)$(myincludep)/bits; \\\n-\t$(mkinstalldirs) $(DESTDIR)$(myincludep)/ext; \\\n-\t$(mkinstalldirs) $(DESTDIR)$(targetincludep)/bits; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_include_dir)/bits; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_include_dir)/ext; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_target_include_dir)/bits; \\\n \tfi\n \n # NB: As libio_headers may be empty, need this to make sure bash doesn't\n@@ -272,33 +262,33 @@ c_incdir = @C_INCLUDE_DIR@\n myinstallheaders: \n \tif test -z \"$(MULTISUBDIR)\"; then \\\n \tfor i in $(base_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/bits/; \\\n \tdone; \\\n \tfor i in $(ext_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/ext/\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/ext/; \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/ext/\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/ext/; \\\n \tdone; \\\n \tfor i in $(backward_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep); \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir); \\\n \tdone; \\\n \tfor i in $(c_base_headers); do \\\n-        echo \"$(INSTALL_DATA) $(c_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(c_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(c_incdir)/$$i $(gxx_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(c_incdir)/$$i $(gxx_include_dir)/bits/; \\\n \tdone; \\\n \tfor i in $(std_headers); do \\\n-\techo \"$(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep)\";\\\n-\t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep); \\\n+\techo \"$(INSTALL_DATA) $(src_incdir)/std/$$i $(gxx_include_dir)\";\\\n+\t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(gxx_include_dir); \\\n \tdone; \\\n \tfor i in $(build_headers); do \\\n-        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/; \\\n+    echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(gxx_target_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(gxx_target_include_dir)/bits/; \\\n \tdone; \\\n \tlibio_headers_install='$(libio_headers)'; \\\n \tfor i in $$libio_headers_install; do \\\n-        echo \"$(INSTALL_DATA) $$i $(myincludep)\"; \\\n-          $(INSTALL_DATA) $$i $(myincludep); \\\n+        echo \"$(INSTALL_DATA) $$i $(gxx_include_dir)\"; \\\n+          $(INSTALL_DATA) $$i $(gxx_include_dir); \\\n \tdone; \\\n \tfi;\n "}, {"sha": "d1c6a7bd2c9a80d18500b3c8e2f7d1e460871e79", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 21, "deletions": 26, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ba4a5894f9b028112695f32df268c5e5b3b398/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=43ba4a5894f9b028112695f32df268c5e5b3b398", "patch": "@@ -100,12 +100,9 @@ WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n-gxx_include_dir = @gxx_include_dir@\n-gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n-libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n@@ -195,12 +192,10 @@ libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n @GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = $(top_builddir)/stamp-cshadow\n @GLIBCPP_USE_CSHADOW_FALSE@CSHADOW_H = \n-@GXX_INCLUDE_DIR_TRUE@myincludep = @gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@myincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@myincludep = $(prefix)/include/g++-@libstdcxx_interface@\n-@GXX_INCLUDE_DIR_TRUE@targetincludep = @gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@targetincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@targetincludep = @gxx_target_include_dir@\n+\n+# Check for various configure bits that change where the headers get installed.\n+gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = $(gxx_include_dir)/$(target_alias)\n \n # NB: As libio_headers may be empty, need this to make sure bash doesn't\n # choke on an empty for... loop by using libio_headers_install\n@@ -530,40 +525,40 @@ install-data-local: myinstalldirs myinstallheaders\n # NB: installation of shadow header directories is not attempted.\n myinstalldirs:\n \tif test -z \"$(MULTISUBDIR)\"; then \\\n-\t$(mkinstalldirs) $(DESTDIR)$(myincludep)/bits; \\\n-\t$(mkinstalldirs) $(DESTDIR)$(myincludep)/ext; \\\n-\t$(mkinstalldirs) $(DESTDIR)$(targetincludep)/bits; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_include_dir)/bits; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_include_dir)/ext; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(gxx_target_include_dir)/bits; \\\n \tfi\n myinstallheaders: \n \tif test -z \"$(MULTISUBDIR)\"; then \\\n \tfor i in $(base_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/bits/; \\\n \tdone; \\\n \tfor i in $(ext_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/ext/\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)/ext/; \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/ext/\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)/ext/; \\\n \tdone; \\\n \tfor i in $(backward_headers); do \\\n-        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(myincludep)\"; \\\n-\t  $(INSTALL_DATA) $(src_incdir)/$$i $(myincludep); \\\n+        echo \"$(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir)\"; \\\n+\t  $(INSTALL_DATA) $(src_incdir)/$$i $(gxx_include_dir); \\\n \tdone; \\\n \tfor i in $(c_base_headers); do \\\n-        echo \"$(INSTALL_DATA) $(c_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(c_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(c_incdir)/$$i $(gxx_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(c_incdir)/$$i $(gxx_include_dir)/bits/; \\\n \tdone; \\\n \tfor i in $(std_headers); do \\\n-\techo \"$(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep)\";\\\n-\t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep); \\\n+\techo \"$(INSTALL_DATA) $(src_incdir)/std/$$i $(gxx_include_dir)\";\\\n+\t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(gxx_include_dir); \\\n \tdone; \\\n \tfor i in $(build_headers); do \\\n-        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/; \\\n+    echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(gxx_target_include_dir)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(gxx_target_include_dir)/bits/; \\\n \tdone; \\\n \tlibio_headers_install='$(libio_headers)'; \\\n \tfor i in $$libio_headers_install; do \\\n-        echo \"$(INSTALL_DATA) $$i $(myincludep)\"; \\\n-          $(INSTALL_DATA) $$i $(myincludep); \\\n+        echo \"$(INSTALL_DATA) $$i $(gxx_include_dir)\"; \\\n+          $(INSTALL_DATA) $$i $(gxx_include_dir); \\\n \tdone; \\\n \tfi;\n "}]}