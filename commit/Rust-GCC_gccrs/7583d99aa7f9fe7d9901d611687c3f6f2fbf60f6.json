{"sha": "7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4M2Q5OWFhN2Y5ZmU3ZDk5MDFkNjExNjg3YzNmNmYyZmJmNjBmNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-28T19:08:12Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-28T19:08:12Z"}, "message": "Use rtx_insn in more places in dwarf2cfi.c\n\ngcc/\n2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n\n\t* dwarf2cfi.c (dw_trace_info): Strengthen field \"head\" from rtx to\n\trtx_insn *.\n\t(get_trace_info): Likewise for param \"insn\".\n\t(save_point_p): Likewise.\n\t(maybe_record_trace_start): Likewise for both params.\n\t(maybe_record_trace_start_abnormal): Likewise.\n\t(create_trace_edges): Likewise for sole param and for three of the\n\tlocals named \"lab\".\n\t(scan_trace): Strengthen local \"prev\", \"insn\", \"control\" from rtx\n\tto rtx_insn *, and update a call to pat->element to pat->insn.\n\nFrom-SVN: r214689", "tree": {"sha": "f6b155749e32f98fea9ce9463ec3eda9a3cb42e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6b155749e32f98fea9ce9463ec3eda9a3cb42e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8c038cab2aa07a416816be30999578afb00a657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c038cab2aa07a416816be30999578afb00a657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c038cab2aa07a416816be30999578afb00a657"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "5fbb47a7e7116d86b41ca1e802a14f8d72ae58ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "patch": "@@ -1,3 +1,16 @@\n+2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* dwarf2cfi.c (dw_trace_info): Strengthen field \"head\" from rtx to\n+\trtx_insn *.\n+\t(get_trace_info): Likewise for param \"insn\".\n+\t(save_point_p): Likewise.\n+\t(maybe_record_trace_start): Likewise for both params.\n+\t(maybe_record_trace_start_abnormal): Likewise.\n+\t(create_trace_edges): Likewise for sole param and for three of the\n+\tlocals named \"lab\".\n+\t(scan_trace): Strengthen local \"prev\", \"insn\", \"control\" from rtx\n+\tto rtx_insn *, and update a call to pat->element to pat->insn.\n+\n 2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* function.h (struct expr_status): Convert field \"x_forced_labels\""}, {"sha": "e3fb078edd0a2c1347b049654f005cbf492a0ecd", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=7583d99aa7f9fe7d9901d611687c3f6f2fbf60f6", "patch": "@@ -100,7 +100,7 @@ typedef struct GTY(()) reg_saved_in_data_struct {\n typedef struct\n {\n   /* The insn that begins the trace.  */\n-  rtx head;\n+  rtx_insn *head;\n \n   /* The row state at the beginning and end of the trace.  */\n   dw_cfi_row *beg_row, *end_row;\n@@ -303,15 +303,15 @@ expand_builtin_init_dwarf_reg_sizes (tree address)\n \n \f\n static dw_trace_info *\n-get_trace_info (rtx insn)\n+get_trace_info (rtx_insn *insn)\n {\n   dw_trace_info dummy;\n   dummy.head = insn;\n   return trace_index->find_with_hash (&dummy, INSN_UID (insn));\n }\n \n static bool\n-save_point_p (rtx insn)\n+save_point_p (rtx_insn *insn)\n {\n   /* Labels, except those that are really jump tables.  */\n   if (LABEL_P (insn))\n@@ -2197,7 +2197,7 @@ add_cfis_to_fde (void)\n    trace from CUR_TRACE and CUR_ROW.  */\n \n static void\n-maybe_record_trace_start (rtx start, rtx origin)\n+maybe_record_trace_start (rtx_insn *start, rtx_insn *origin)\n {\n   dw_trace_info *ti;\n   HOST_WIDE_INT args_size;\n@@ -2248,7 +2248,7 @@ maybe_record_trace_start (rtx start, rtx origin)\n    and non-local goto edges.  */\n \n static void\n-maybe_record_trace_start_abnormal (rtx start, rtx origin)\n+maybe_record_trace_start_abnormal (rtx_insn *start, rtx_insn *origin)\n {\n   HOST_WIDE_INT save_args_size, delta;\n   dw_cfa_location save_cfa;\n@@ -2284,7 +2284,7 @@ maybe_record_trace_start_abnormal (rtx start, rtx origin)\n /* ??? Sadly, this is in large part a duplicate of make_edges.  */\n \n static void\n-create_trace_edges (rtx insn)\n+create_trace_edges (rtx_insn *insn)\n {\n   rtx tmp;\n   int i, n;\n@@ -2303,7 +2303,7 @@ create_trace_edges (rtx insn)\n \t  n = GET_NUM_ELEM (vec);\n \t  for (i = 0; i < n; ++i)\n \t    {\n-\t      rtx lab = XEXP (RTVEC_ELT (vec, i), 0);\n+\t      rtx_insn *lab = as_a <rtx_insn *> (XEXP (RTVEC_ELT (vec, i), 0));\n \t      maybe_record_trace_start (lab, insn);\n \t    }\n \t}\n@@ -2319,13 +2319,14 @@ create_trace_edges (rtx insn)\n \t  n = ASM_OPERANDS_LABEL_LENGTH (tmp);\n \t  for (i = 0; i < n; ++i)\n \t    {\n-\t      rtx lab = XEXP (ASM_OPERANDS_LABEL (tmp, i), 0);\n+\t      rtx_insn *lab =\n+\t\tas_a <rtx_insn *> (XEXP (ASM_OPERANDS_LABEL (tmp, i), 0));\n \t      maybe_record_trace_start (lab, insn);\n \t    }\n \t}\n       else\n \t{\n-\t  rtx lab = JUMP_LABEL (insn);\n+\t  rtx_insn *lab = JUMP_LABEL_AS_INSN (insn);\n \t  gcc_assert (lab != NULL);\n \t  maybe_record_trace_start (lab, insn);\n \t}\n@@ -2376,7 +2377,7 @@ scan_insn_after (rtx insn)\n static void\n scan_trace (dw_trace_info *trace)\n {\n-  rtx prev, insn = trace->head;\n+  rtx_insn *prev, *insn = trace->head;\n   dw_cfa_location this_cfa;\n \n   if (dump_file)\n@@ -2397,7 +2398,7 @@ scan_trace (dw_trace_info *trace)\n        insn;\n        prev = insn, insn = NEXT_INSN (insn))\n     {\n-      rtx control;\n+      rtx_insn *control;\n \n       /* Do everything that happens \"before\" the insn.  */\n       add_cfi_insn = prev;\n@@ -2427,7 +2428,7 @@ scan_trace (dw_trace_info *trace)\n \t  rtx elt;\n \t  int i, n = pat->len ();\n \n-\t  control = pat->element (0);\n+\t  control = pat->insn (0);\n \t  if (can_throw_internal (control))\n \t    notice_eh_throw (control);\n \t  dwarf2out_flush_queued_reg_saves ();"}]}