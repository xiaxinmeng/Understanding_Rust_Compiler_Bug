{"sha": "a67bac5fc49398f26611dedaa0b62990b134d642", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY3YmFjNWZjNDkzOThmMjY2MTFkZWRhYTBiNjI5OTBiMTM0ZDY0Mg==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2003-04-12T20:35:28Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2003-04-12T20:35:28Z"}, "message": "m68hc11.md (\"bitcmpqi\" split): No need to test the mode of operand 0.\n\n\t* config/m68hc11/m68hc11.md (\"bitcmpqi\" split): No need to test the\n\tmode of operand 0.\n\t(peephole2 optimize const load): Likewise for operand 2.\n\t(\"*rotlhi3_with_carry\"): Change pattern to a const 1 rotate which\n\tclobbers CC_REGNUM.\n\t(\"*rotrhi3_with_carry\"): Likewise.\n\t(ashift:DI 1 split): Update pattern to create the above rotate.\n\t(lshiftrt:DI 1 split): Likewise.\n\nFrom-SVN: r65524", "tree": {"sha": "44a7ea390f44c7d702b1a939c667beea38983236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44a7ea390f44c7d702b1a939c667beea38983236"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a67bac5fc49398f26611dedaa0b62990b134d642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67bac5fc49398f26611dedaa0b62990b134d642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a67bac5fc49398f26611dedaa0b62990b134d642", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67bac5fc49398f26611dedaa0b62990b134d642/comments", "author": null, "committer": null, "parents": [{"sha": "0921442473dbe2f14488153e94acb3d0b4524b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0921442473dbe2f14488153e94acb3d0b4524b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0921442473dbe2f14488153e94acb3d0b4524b92"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "b29c50a4d8ce1ccd80b75ba0d0362e715f95a425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67bac5fc49398f26611dedaa0b62990b134d642/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67bac5fc49398f26611dedaa0b62990b134d642/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a67bac5fc49398f26611dedaa0b62990b134d642", "patch": "@@ -1,3 +1,14 @@\n+2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"bitcmpqi\" split): No need to test the\n+\tmode of operand 0.\n+\t(peephole2 optimize const load): Likewise for operand 2.\n+\t(\"*rotlhi3_with_carry\"): Change pattern to a const 1 rotate which\n+\tclobbers CC_REGNUM.\n+\t(\"*rotrhi3_with_carry\"): Likewise.\n+\t(ashift:DI 1 split): Update pattern to create the above rotate.\n+\t(lshiftrt:DI 1 split): Likewise.\n+\n 2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.md (SOFT_Z_REGNUM): New constant."}, {"sha": "6fd9d0e3ac919566fabb68a7765f4595c8573b53", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67bac5fc49398f26611dedaa0b62990b134d642/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67bac5fc49398f26611dedaa0b62990b134d642/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=a67bac5fc49398f26611dedaa0b62990b134d642", "patch": "@@ -445,7 +445,7 @@\n   [(set (cc0)\n \t(and:QI (match_operand:QI 0 \"tst_operand\" \"\")\n \t\t(match_operand:QI 1 \"hard_addr_reg_operand\" \"\")))]\n-  \"z_replacement_completed == 2 && GET_MODE (operands[0]) == QImode\"\n+  \"z_replacement_completed == 2\"\n   [(set (match_dup 3) (match_dup 2))\n    (set (cc0) (and:QI (match_dup 0) (match_dup 4)))]\n   \"operands[2] = gen_rtx (REG, HImode, REGNO (operands[1]));\n@@ -4472,15 +4472,21 @@\n     (set (match_dup 4) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 5))\n-    (set (match_dup 2) (rotate:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2)\n+\t\t       (rotate:HI (match_dup 2) (const_int 1)))\n+\t       (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 6) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 7))\n-    (set (match_dup 2) (rotate:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2)\n+\t\t       (rotate:HI (match_dup 2) (const_int 1)))\n+\t       (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 8) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 9))\n-    (set (match_dup 2) (rotate:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2)\n+\t\t       (rotate:HI (match_dup 2) (const_int 1)))\n+\t       (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 10) (match_dup 2))]\n    \"operands[3] = m68hc11_gen_lowpart (SImode, operands[1]);\n     operands[5] = m68hc11_gen_highpart (HImode, operands[3]);\n@@ -5335,15 +5341,18 @@\n     (set (match_dup 4) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 5))\n-    (set (match_dup 2) (rotatert:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2) (rotatert:HI (match_dup 2) (const_int 1)))\n+               (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 6) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 7))\n-    (set (match_dup 2) (rotatert:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2) (rotatert:HI (match_dup 2) (const_int 1)))\n+               (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 8) (match_dup 2))\n \n     (set (match_dup 2) (match_dup 9))\n-    (set (match_dup 2) (rotatert:HI (match_dup 2) (reg:HI CC_REGNUM)))\n+    (parallel [(set (match_dup 2) (rotatert:HI (match_dup 2) (const_int 1)))\n+               (clobber (reg:HI CC_REGNUM))])\n     (set (match_dup 10) (match_dup 2))]\n    \"operands[3] = m68hc11_gen_highpart (SImode, operands[1]);\n     operands[5] = m68hc11_gen_lowpart (HImode, operands[3]);\n@@ -5770,7 +5779,8 @@\n (define_insn \"*rotlhi3_with_carry\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n \t(rotate:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t   (reg:HI CC_REGNUM)))]\n+\t\t   (const_int 1)))\n+   (clobber (reg:HI CC_REGNUM))]\n   \"\"\n   \"*\n {\n@@ -5781,7 +5791,8 @@\n (define_insn \"*rotrhi3_with_carry\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n \t(rotatert:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t     (reg:HI CC_REGNUM)))]\n+\t\t     (const_int 1)))\n+   (clobber (reg:HI CC_REGNUM))]\n   \"\"\n   \"*\n {\n@@ -6713,8 +6724,7 @@\n    (set (match_operand:HI 2 \"hard_reg_operand\" \"\")\n         (match_dup 1))]\n   \"(D_REG_P (operands[2]) || X_REG_P (operands[2]) || Y_REG_P (operands[2]))\n-   && !reg_mentioned_p (operands[2], operands[0])\n-   && GET_MODE (operands[2]) == HImode\"\n+   && !reg_mentioned_p (operands[2], operands[0])\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (match_dup 2))]\n   \"\")"}]}