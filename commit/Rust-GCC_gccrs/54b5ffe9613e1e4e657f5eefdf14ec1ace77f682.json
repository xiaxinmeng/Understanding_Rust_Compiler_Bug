{"sha": "54b5ffe9613e1e4e657f5eefdf14ec1ace77f682", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRiNWZmZTk2MTNlMWU0ZTY1N2Y1ZWVmZGYxNGVjMWFjZTc3ZjY4Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-10T05:01:08Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-10T05:01:08Z"}, "message": "(find_equiv_reg): Set goal_mem_addr_varies\nfor all but true constant addresses.\n\nFrom-SVN: r4406", "tree": {"sha": "caded727130d0dac56fa71f8b7d68035bcbd13f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caded727130d0dac56fa71f8b7d68035bcbd13f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682/comments", "author": null, "committer": null, "parents": [{"sha": "1ede52a6b92ae7e382beba28a1401184d0de00bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ede52a6b92ae7e382beba28a1401184d0de00bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ede52a6b92ae7e382beba28a1401184d0de00bd"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c2555b01fba19d194eea54628a9140ae538b08ca", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54b5ffe9613e1e4e657f5eefdf14ec1ace77f682/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=54b5ffe9613e1e4e657f5eefdf14ec1ace77f682", "patch": "@@ -5176,7 +5176,9 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n     }\n \n   if (goal_mem)\n-    goal_mem_addr_varies = rtx_addr_varies_p (goal);\n+    /* We must treat frame pointer as varying here,\n+       since it can vary--in a nonlocal goto as generated by expand_goto.  */\n+    goal_mem_addr_varies = !CONSTANT_ADDRESS_P (XEXP (goal, 0));\n \n   /* Now verify that the values of GOAL and VALUE remain unaltered\n      until INSN is reached.  */"}]}