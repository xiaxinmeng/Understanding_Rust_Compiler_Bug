{"sha": "a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhODhhNzZhYjJiNGYxMDBiNDgyOWE2YjFmZjgwZWU3OTA3NWU1YQ==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@comcast.net", "date": "2003-06-01T15:45:05Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2003-06-01T15:45:05Z"}, "message": "ste.c (ffeste_R838): Handle ERROR_MARK.\n\n2003-06-01  Bud Davis  <bdavis9659@comcast.net>\n\n\t* ste.c (ffeste_R838): Handle ERROR_MARK.\n\t(ffeste_R839): Ditto.\n\nFrom-SVN: r67295", "tree": {"sha": "611b6885364e8fdb9b9dfcb40962d044ce34fe5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611b6885364e8fdb9b9dfcb40962d044ce34fe5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a/comments", "author": null, "committer": null, "parents": [{"sha": "cef2bd3e84943196fc300e805307c725bb15508a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef2bd3e84943196fc300e805307c725bb15508a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef2bd3e84943196fc300e805307c725bb15508a"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "3b0f188998db04d1e424327b461bd88e9c4fd1e7", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "patch": "@@ -1,3 +1,8 @@\n+2003-06-01  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* ste.c (ffeste_R838): Handle ERROR_MARK.\n+\t(ffeste_R839): Ditto.\n+\n 2003-06-01  Andreas Jaeger  <aj@suse.de>\n \n \t* lex.c (ffelex_file_fixed): Remove usage of"}, {"sha": "b0d464af81f5bc790621973c794afd5ae37441fc", "filename": "gcc/f/ste.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=a5a88a76ab2b4f100b4829a6b1ff80ee79075e5a", "patch": "@@ -2950,16 +2950,19 @@ ffeste_R838 (ffelab label, ffebld target)\n       TREE_CONSTANT (label_tree) = 1;\n \n       target_tree = ffecom_expr_assign_w (target);\n-      if (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (target_tree)))\n-\t  < GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (label_tree))))\n-\terror (\"ASSIGN to variable that is too small\");\n+      if (TREE_CODE (target_tree) != ERROR_MARK)\n+      {\n+        if (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (target_tree)))\n+            < GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (label_tree))))\n+\t  error (\"ASSIGN to variable that is too small\");\n \n-      label_tree = convert (TREE_TYPE (target_tree), label_tree);\n+        label_tree = convert (TREE_TYPE (target_tree), label_tree);\n \n-      expr_tree = ffecom_modify (void_type_node,\n+        expr_tree = ffecom_modify (void_type_node,\n \t\t\t\t target_tree,\n \t\t\t\t label_tree);\n-      expand_expr_stmt (expr_tree);\n+        expand_expr_stmt (expr_tree);\n+      }\n     }\n }\n \n@@ -2978,11 +2981,15 @@ ffeste_R839 (ffebld target)\n      seen here should never require use of temporaries.  */\n \n   t = ffecom_expr_assign (target);\n-  if (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (t)))\n-      < GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (null_pointer_node))))\n-    error (\"ASSIGNed GOTO target variable is too small\");\n \n-  expand_computed_goto (convert (TREE_TYPE (null_pointer_node), t));\n+  if (TREE_CODE (t) != ERROR_MARK)\n+  {\n+       if (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (t)))\n+         < GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (null_pointer_node))))\n+       error (\"ASSIGNed GOTO target variable is too small\");\n+\n+       expand_computed_goto (convert (TREE_TYPE (null_pointer_node), t));\n+  }\n }\n \n /* Arithmetic IF statement.  */"}]}