{"sha": "656e6f3761bb4bfe3efe8279710f5f4b980604fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU2ZTZmMzc2MWJiNGJmZTNlZmU4Mjc5NzEwZjVmNGI5ODA2MDRmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-07T17:46:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-07T17:46:30Z"}, "message": "varasm.c (output_constant_def_contents): For asan_protect_global protected strings...\n\n\t* varasm.c (output_constant_def_contents): For asan_protect_global\n\tprotected strings, adjust DECL_ALIGN if needed, before testing for\n\tanchored symbols.\n\t(place_block_symbol): Adjust size for asan protected STRING_CSTs if\n\tTREE_CONSTANT_POOL_ADDRESS_P.  Increase alignment for asan protected\n\tnormal decls.\n\t(output_object_block): For asan protected decls, emit asan padding\n\tafter their contents.\n\t* asan.c (asan_protect_global): Don't check TREE_ASM_WRITTEN here.\n\t(asan_finish_file): Test it here instead.\n\nFrom-SVN: r194984", "tree": {"sha": "c16c78fba132676d9465ffce223c5996274fa41b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c16c78fba132676d9465ffce223c5996274fa41b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/656e6f3761bb4bfe3efe8279710f5f4b980604fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656e6f3761bb4bfe3efe8279710f5f4b980604fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656e6f3761bb4bfe3efe8279710f5f4b980604fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656e6f3761bb4bfe3efe8279710f5f4b980604fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b352afbab2dcdf3b48b08e377f48d17109297c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b352afbab2dcdf3b48b08e377f48d17109297c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b352afbab2dcdf3b48b08e377f48d17109297c46"}], "stats": {"total": 72, "additions": 57, "deletions": 15}, "files": [{"sha": "8c39f6d33e04396f121eb3697aa42e3aad82d7b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=656e6f3761bb4bfe3efe8279710f5f4b980604fa", "patch": "@@ -1,3 +1,16 @@\n+2013-01-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* varasm.c (output_constant_def_contents): For asan_protect_global\n+\tprotected strings, adjust DECL_ALIGN if needed, before testing for\n+\tanchored symbols.\n+\t(place_block_symbol): Adjust size for asan protected STRING_CSTs if\n+\tTREE_CONSTANT_POOL_ADDRESS_P.  Increase alignment for asan protected\n+\tnormal decls.\n+\t(output_object_block): For asan protected decls, emit asan padding\n+\tafter their contents.\n+\t* asan.c (asan_protect_global): Don't check TREE_ASM_WRITTEN here.\n+\t(asan_finish_file): Test it here instead.\n+\n 2013-01-07   Nick Clifton  <nickc@redhat.com>\n \t     Matthias Klose <doko@debian.org>\n \t     Doug Kwan  <dougkwan@google.com>"}, {"sha": "9d3387616de042901bcb015b7130ff93cdf90594", "filename": "gcc/asan.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=656e6f3761bb4bfe3efe8279710f5f4b980604fa", "patch": "@@ -1,5 +1,5 @@\n /* AddressSanitizer, a fast memory error detector.\n-   Copyright (C) 2012 Free Software Foundation, Inc.\n+   Copyright (C) 2012, 2013 Free Software Foundation, Inc.\n    Contributed by Kostya Serebryany <kcc@google.com>\n \n This file is part of GCC.\n@@ -463,7 +463,6 @@ asan_protect_global (tree decl)\n       || DECL_THREAD_LOCAL_P (decl)\n       /* Externs will be protected elsewhere.  */\n       || DECL_EXTERNAL (decl)\n-      || !TREE_ASM_WRITTEN (decl)\n       || !DECL_RTL_SET_P (decl)\n       /* Comdat vars pose an ABI problem, we can't know if\n \t the var that is selected by the linker will have\n@@ -1699,7 +1698,8 @@ asan_finish_file (void)\n   tree fn = builtin_decl_implicit (BUILT_IN_ASAN_INIT);\n   append_to_statement_list (build_call_expr (fn, 0), &asan_ctor_statements);\n   FOR_EACH_DEFINED_VARIABLE (vnode)\n-    if (asan_protect_global (vnode->symbol.decl))\n+    if (TREE_ASM_WRITTEN (vnode->symbol.decl)\n+\t&& asan_protect_global (vnode->symbol.decl))\n       ++gcount;\n   htab_t const_desc_htab = constant_pool_htab ();\n   htab_traverse (const_desc_htab, count_string_csts, &gcount);\n@@ -1721,7 +1721,8 @@ asan_finish_file (void)\n       DECL_IGNORED_P (var) = 1;\n       vec_alloc (v, gcount);\n       FOR_EACH_DEFINED_VARIABLE (vnode)\n-\tif (asan_protect_global (vnode->symbol.decl))\n+\tif (TREE_ASM_WRITTEN (vnode->symbol.decl)\n+\t    && asan_protect_global (vnode->symbol.decl))\n \t  asan_add_global (vnode->symbol.decl, TREE_TYPE (type), v);\n       struct asan_add_string_csts_data aascd;\n       aascd.type = TREE_TYPE (type);"}, {"sha": "80b90b76b008ef4f64378fb9fdd324aa65cb4264", "filename": "gcc/varasm.c", "status": "modified", "additions": 39, "deletions": 11, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656e6f3761bb4bfe3efe8279710f5f4b980604fa/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=656e6f3761bb4bfe3efe8279710f5f4b980604fa", "patch": "@@ -1,7 +1,7 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n    1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n-   2010, 2011, 2012  Free Software Foundation, Inc.\n+   2010, 2011, 2012, 2013  Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -3252,6 +3252,7 @@ output_constant_def_contents (rtx symbol)\n   tree decl = SYMBOL_REF_DECL (symbol);\n   tree exp = DECL_INITIAL (decl);\n   unsigned int align;\n+  bool asan_protected = false;\n \n   /* Make sure any other constants whose addresses appear in EXP\n      are assigned label numbers.  */\n@@ -3260,22 +3261,23 @@ output_constant_def_contents (rtx symbol)\n   /* We are no longer deferring this constant.  */\n   TREE_ASM_WRITTEN (decl) = TREE_ASM_WRITTEN (exp) = 1;\n \n+  if (flag_asan && TREE_CODE (exp) == STRING_CST\n+      && asan_protect_global (exp))\n+    {\n+      asan_protected = true;\n+      DECL_ALIGN (decl) = MAX (DECL_ALIGN (decl),\n+\t\t\t       ASAN_RED_ZONE_SIZE * BITS_PER_UNIT);\n+    }\n+\n   /* If the constant is part of an object block, make sure that the\n      decl has been positioned within its block, but do not write out\n      its definition yet.  output_object_blocks will do that later.  */\n   if (SYMBOL_REF_HAS_BLOCK_INFO_P (symbol) && SYMBOL_REF_BLOCK (symbol))\n     place_block_symbol (symbol);\n   else\n     {\n-      bool asan_protected = false;\n       align = DECL_ALIGN (decl);\n       switch_to_section (get_constant_section (exp, align));\n-      if (flag_asan && TREE_CODE (exp) == STRING_CST\n-\t  && asan_protect_global (exp))\n-\t{\n-\t  asan_protected = true;\n-\t  align = MAX (align, ASAN_RED_ZONE_SIZE * BITS_PER_UNIT);\n-\t}\n       if (align > BITS_PER_UNIT)\n \tASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n       assemble_constant_contents (exp, XSTR (symbol, 0), align);\n@@ -6968,14 +6970,22 @@ place_block_symbol (rtx symbol)\n       decl = SYMBOL_REF_DECL (symbol);\n       alignment = DECL_ALIGN (decl);\n       size = get_constant_size (DECL_INITIAL (decl));\n+      if (flag_asan\n+\t  && TREE_CODE (DECL_INITIAL (decl)) == STRING_CST\n+\t  && asan_protect_global (DECL_INITIAL (decl)))\n+\tsize += asan_red_zone_size (size);\n     }\n   else\n     {\n       decl = SYMBOL_REF_DECL (symbol);\n       alignment = DECL_ALIGN (decl);\n       size = tree_low_cst (DECL_SIZE_UNIT (decl), 1);\n       if (flag_asan && asan_protect_global (decl))\n-\tsize += asan_red_zone_size (size);\n+\t{\n+\t  size += asan_red_zone_size (size);\n+\t  alignment = MAX (alignment,\n+\t\t\t   ASAN_RED_ZONE_SIZE * BITS_PER_UNIT);\n+\t}\n     }\n \n   /* Calculate the object's offset from the start of the block.  */\n@@ -7114,16 +7124,34 @@ output_object_block (struct object_block *block)\n \t}\n       else if (TREE_CONSTANT_POOL_ADDRESS_P (symbol))\n \t{\n+\t  HOST_WIDE_INT size;\n \t  decl = SYMBOL_REF_DECL (symbol);\n \t  assemble_constant_contents (DECL_INITIAL (decl), XSTR (symbol, 0),\n \t\t\t\t      DECL_ALIGN (decl));\n-\t  offset += get_constant_size (DECL_INITIAL (decl));\n+\t  size = get_constant_size (DECL_INITIAL (decl));\n+\t  offset += size;\n+\t  if (flag_asan\n+\t      && TREE_CODE (DECL_INITIAL (decl)) == STRING_CST\n+\t      && asan_protect_global (DECL_INITIAL (decl)))\n+\t    {\n+\t      size = asan_red_zone_size (size);\n+\t      assemble_zeros (size);\n+\t      offset += size;\n+\t    }\n \t}\n       else\n \t{\n+\t  HOST_WIDE_INT size;\n \t  decl = SYMBOL_REF_DECL (symbol);\n \t  assemble_variable_contents (decl, XSTR (symbol, 0), false);\n-\t  offset += tree_low_cst (DECL_SIZE_UNIT (decl), 1);\n+\t  size = tree_low_cst (DECL_SIZE_UNIT (decl), 1);\n+\t  offset += size;\n+\t  if (flag_asan && asan_protect_global (decl))\n+\t    {\n+\t      size = asan_red_zone_size (size);\n+\t      assemble_zeros (size);\n+\t      offset += size;\n+\t    }\n \t}\n     }\n }"}]}