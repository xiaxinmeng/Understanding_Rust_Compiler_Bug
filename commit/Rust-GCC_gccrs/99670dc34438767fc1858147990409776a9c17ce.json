{"sha": "99670dc34438767fc1858147990409776a9c17ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2NzBkYzM0NDM4NzY3ZmMxODU4MTQ3OTkwNDA5Nzc2YTljMTdjZQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-02-28T09:00:15Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-02-28T09:00:15Z"}, "message": "builtins-1.c: New test.\n\n\t* gcc.target/avr/torture/builtins-1.c: New test.\n\t* gcc.target/avr/torture/builtins-error.c: New test.\n\nFrom-SVN: r184617", "tree": {"sha": "352495d1ab24c6aa3be628651c9eccfc5930891b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/352495d1ab24c6aa3be628651c9eccfc5930891b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99670dc34438767fc1858147990409776a9c17ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99670dc34438767fc1858147990409776a9c17ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99670dc34438767fc1858147990409776a9c17ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99670dc34438767fc1858147990409776a9c17ce/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "639d0302e66e9be17e7979a7c7be71080abcd5b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/639d0302e66e9be17e7979a7c7be71080abcd5b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/639d0302e66e9be17e7979a7c7be71080abcd5b5"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "d1365a0e19d2229f7a9a71a2e56aa61d5676f646", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99670dc34438767fc1858147990409776a9c17ce", "patch": "@@ -1,3 +1,8 @@\n+2012-02-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* gcc.target/avr/torture/builtins-1.c: New test.\n+\t* gcc.target/avr/torture/builtins-error.c: New test.\n+\n 2012-02-28  Kai Tietz  <ktietz@redhat.com>\n \n \t* gcc.target/i386/pr46939.c (long): Fix LP64 vs LLP64"}, {"sha": "1fa3aaaaeb33d5e0ac86bc65d47fca10903dbf32", "filename": "gcc/testsuite/gcc.target/avr/torture/builtins-1.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-1.c?ref=99670dc34438767fc1858147990409776a9c17ce", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+\n+void nop (void)    { __builtin_avr_nop (); }\n+void sei (void)    { __builtin_avr_sei (); }\n+void cli (void)    { __builtin_avr_cli (); }\n+void wdr (void)    { __builtin_avr_wdr (); }\n+void sleep (void)  { __builtin_avr_sleep (); }\n+\n+char fmul (char a, char b)   { return __builtin_avr_fmul (a, b); }\n+char fmuls (char a, char b)  { return __builtin_avr_fmuls (a, b); }\n+char fmulsu (char a, char b) { return __builtin_avr_fmulsu (a, b); }\n+\n+char swap1 (char a)\n+{\n+    return __builtin_avr_swap (a+1);\n+}\n+\n+char swap2 (char a)\n+{\n+    return __builtin_avr_swap (__builtin_avr_swap (a+1));\n+}\n+\n+char swap15 (void)\n+{\n+    return __builtin_avr_swap (15);\n+}\n+\n+void delay0 (void)  { __builtin_avr_delay_cycles (0); }\n+void delay1 (void)  { __builtin_avr_delay_cycles (1); }\n+void delay2 (void)  { __builtin_avr_delay_cycles (2); }\n+void delay3 (void)  { __builtin_avr_delay_cycles (3); }\n+\n+void delay_1 (void)  { __builtin_avr_delay_cycles (44); }\n+void delay_2 (void)  { __builtin_avr_delay_cycles (0x1234); }\n+void delay_3 (void)  { __builtin_avr_delay_cycles (0x123456); }\n+void delay_4 (void)  { __builtin_avr_delay_cycles (-1ul); }\n+\n+/* { dg-final { scan-assembler-not \"__builtin_avr_\" } } */"}, {"sha": "692b8afd859833c9c00b8ba767430363aa7b9300", "filename": "gcc/testsuite/gcc.target/avr/torture/builtins-error.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99670dc34438767fc1858147990409776a9c17ce/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fbuiltins-error.c?ref=99670dc34438767fc1858147990409776a9c17ce", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do assemble } */\n+\n+char insert (long a)\n+{\n+    return __builtin_avr_insert_bits (15.3f+a, 0, 0); /* { dg-error \"expects a compile time\" } */\n+}\n+\n+void delay (long a)\n+{\n+    __builtin_avr_delay_cycles (a); /* { dg-error \"expects a compile time\" } */\n+}"}]}