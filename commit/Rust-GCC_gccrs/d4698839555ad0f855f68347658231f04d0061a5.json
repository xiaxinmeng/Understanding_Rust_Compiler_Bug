{"sha": "d4698839555ad0f855f68347658231f04d0061a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ2OTg4Mzk1NTVhZDBmODU1ZjY4MzQ3NjU4MjMxZjA0ZDAwNjFhNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-11-19T09:27:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-11-19T09:27:30Z"}, "message": "re PR sanitizer/63913 (ICE: verify_gimple failed: statement marked for throw, but doesn't with -fnon-call-exceptions -fsanitize=bool)\n\n\tPR sanitizer/63913\n\t* ubsan.c: Include tree-eh.h.\n\t(instrument_bool_enum_load): Handle loads that can throw.\n\n\t* g++.dg/ubsan/pr63913.C: New test.\n\nFrom-SVN: r217755", "tree": {"sha": "532cc91f7e101e19ad224580a7f49ac2a319bc88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/532cc91f7e101e19ad224580a7f49ac2a319bc88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4698839555ad0f855f68347658231f04d0061a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4698839555ad0f855f68347658231f04d0061a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4698839555ad0f855f68347658231f04d0061a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4698839555ad0f855f68347658231f04d0061a5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f7d0ab920d2863472c4899e6a9222400d1c9a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7d0ab920d2863472c4899e6a9222400d1c9a89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7d0ab920d2863472c4899e6a9222400d1c9a89"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "f81db234c5d9b389cb623785fca1441b22a8e92f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4698839555ad0f855f68347658231f04d0061a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4698839555ad0f855f68347658231f04d0061a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4698839555ad0f855f68347658231f04d0061a5", "patch": "@@ -1,5 +1,9 @@\n 2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/63913\n+\t* ubsan.c: Include tree-eh.h.\n+\t(instrument_bool_enum_load): Handle loads that can throw.\n+\n \tPR rtl-optimization/63843\n \t* simplify-rtx.c (simplify_binary_operation_1) <case ASHIFTRT>: For\n \toptimization of ashiftrt of subreg of lshiftrt, check that code"}, {"sha": "19b6c01b78fbd47f5258dc014213e62f11249e79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4698839555ad0f855f68347658231f04d0061a5", "patch": "@@ -1,3 +1,8 @@\n+2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/63913\n+\t* g++.dg/ubsan/pr63913.C: New test.\n+\n 2014-11-19  Andreas Schwab  <schwab@suse.de>\n \n \t* gcc.dg/pure-2.c: Update line numbers."}, {"sha": "34dceb4d844160bddf16cdd82fa4f7058eba3ff8", "filename": "gcc/testsuite/g++.dg/ubsan/pr63913.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr63913.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr63913.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr63913.C?ref=d4698839555ad0f855f68347658231f04d0061a5", "patch": "@@ -0,0 +1,12 @@\n+// PR sanitizer/63913\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=bool -fnon-call-exceptions\" }\n+\n+struct B { B (); ~B (); };\n+\n+double\n+foo (bool *x)\n+{\n+  B b;\n+  return *x;\n+}"}, {"sha": "7d1e341812ceeb118b6e5725de1aa9d9b210e3b0", "filename": "gcc/ubsan.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4698839555ad0f855f68347658231f04d0061a5/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=d4698839555ad0f855f68347658231f04d0061a5", "patch": "@@ -67,6 +67,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dfp.h\"\n #include \"builtins.h\"\n #include \"tree-object-size.h\"\n+#include \"tree-eh.h\"\n \n /* Map from a tree to a VAR_DECL tree.  */\n \n@@ -1159,7 +1160,9 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n       || TREE_CODE (gimple_assign_lhs (stmt)) != SSA_NAME)\n     return;\n \n+  bool can_throw = stmt_could_throw_p (stmt);\n   location_t loc = gimple_location (stmt);\n+  tree lhs = gimple_assign_lhs (stmt);\n   tree ptype = build_pointer_type (TREE_TYPE (rhs));\n   tree atype = reference_alias_ptr_type (rhs);\n   gimple g = gimple_build_assign (make_ssa_name (ptype, NULL),\n@@ -1169,9 +1172,24 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n   tree mem = build2 (MEM_REF, utype, gimple_assign_lhs (g),\n \t\t     build_int_cst (atype, 0));\n   tree urhs = make_ssa_name (utype, NULL);\n-  g = gimple_build_assign (urhs, mem);\n-  gimple_set_location (g, loc);\n-  gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+  if (can_throw)\n+    {\n+      gimple_assign_set_lhs (stmt, urhs);\n+      g = gimple_build_assign_with_ops (NOP_EXPR, lhs, urhs, NULL_TREE);\n+      gimple_set_location (g, loc);\n+      edge e = find_fallthru_edge (gimple_bb (stmt)->succs);\n+      gsi_insert_on_edge_immediate (e, g);\n+      gimple_assign_set_rhs_from_tree (gsi, mem);\n+      update_stmt (stmt);\n+      *gsi = gsi_for_stmt (g);\n+      g = stmt;\n+    }\n+  else\n+    {\n+      g = gimple_build_assign (urhs, mem);\n+      gimple_set_location (g, loc);\n+      gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+    }\n   minv = fold_convert (utype, minv);\n   maxv = fold_convert (utype, maxv);\n   if (!integer_zerop (minv))\n@@ -1193,8 +1211,11 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n   gimple_set_location (g, loc);\n   gsi_insert_after (gsi, g, GSI_NEW_STMT);\n \n-  gimple_assign_set_rhs_with_ops (&gsi2, NOP_EXPR, urhs, NULL_TREE);\n-  update_stmt (stmt);\n+  if (!can_throw)\n+    {\n+      gimple_assign_set_rhs_with_ops (&gsi2, NOP_EXPR, urhs, NULL_TREE);\n+      update_stmt (stmt);\n+    }\n \n   gsi2 = gsi_after_labels (then_bb);\n   if (flag_sanitize_undefined_trap_on_error)"}]}